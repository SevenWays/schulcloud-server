var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AdminIdAndToken.html",[0,0.495,1,3.937]],["body/interfaces/AdminIdAndToken.html",[0,0.478,1,6.47,2,0.895,3,0.059,4,0.049,5,0.036,6,2.321,7,2.448,8,0.144,9,0.574,10,1.791,11,6.894,12,1.114,13,0.253,14,0.005,15,0.144,16,4.955,17,1.748,18,0.854,19,0.522,20,2.448,21,2.321,22,0.105,23,3.599,24,3.169,25,3.797,26,3.797,27,3.797,28,3.797,29,6.001,30,1.972,31,0.145,32,2.448,33,0.686,34,2.164,35,2.64,36,2.608,37,0.871,38,3.554,39,2.321,40,1.583,41,2.608,42,2.608,43,3.869,44,3.946,45,3.657,46,3.795,47,3.946,48,4.604,49,6.789,50,5.688,51,3.645,52,2.608,53,2.651,54,2.608,55,2.448,56,2.608,57,2.608,58,2.608,59,2.608,60,2.608,61,4.045,62,4.651,63,2.608,64,2.608,65,2.608,66,2.608,67,2.448,68,0.652,69,2.608,70,1.556,71,1.423,72,5.585,73,2.564,74,2.608,75,3.824,76,2.53,77,1.355,78,2.608,79,6.67,80,2.608,81,2.641,82,2.608,83,1.703,84,2.608,85,2.608,86,2.608,87,2.608,88,2.608,89,2.608,90,2.608,91,2.608,92,6.67,93,6.67,94,2.608,95,2.608,96,2.608,97,2.608,98,2.608,99,2.608,100,2.608,101,2.608,102,2.608,103,2.608,104,2.608,105,2.608,106,2.608,107,2.608,108,2.608,109,3.797,110,4.045,111,2.252,112,2.608,113,0.469,114,2.608,115,2.608,116,2.608,117,3.881,118,4.408,119,2.608,120,1.972,121,2.448,122,1.081,123,2.608,124,2.608,125,2.608,126,4.373,127,1.336,128,2.046,129,4.045,130,2.608,131,4.045,132,4.045,133,2.608,134,2.608,135,2.608,136,4.955,137,4.033,138,3.747,139,4.033,140,2.608,141,3.797,142,3.241,143,3.797,144,1.589,145,4.206,146,4.955,147,3.364,148,1.309,149,4.955,150,4.955,151,4.955,152,2.608,153,2.608,154,2.608,155,2.608,156,6.043,157,4.955,158,4.955,159,4.955,160,2.608,161,4.045,162,4.045,163,2.608,164,2.608,165,2.608,166,2.608,167,1.319,168,2.608,169,4.045,170,3.599,171,0.002,172,0.002]],["title/classes/ApiValidationError.html",[31,0.151,173,3.561]],["body/classes/ApiValidationError.html",[3,0.115,4,0.096,5,0.07,8,0.283,9,0.926,12,0.932,13,0.376,14,0.005,15,0.233,19,1.025,22,0.109,30,4.936,31,0.184,33,1.718,34,2.738,37,1.709,68,1.279,70,3.219,83,4.261,113,0.485,171,0.004,172,0.004,173,5.541,174,1.199,175,7.878,176,6.177,177,6.813,178,3.633,179,5.259,180,3.17,181,1.324,182,7.187,183,7.187,184,6.177,185,6.734,186,0.866,187,6.177,188,0.849,189,0.52,190,7.778,191,3.643,192,5.539,193,5.539,194,5.539,195,5.539,196,5.539,197,5.539,198,1.29,199,5.539,200,3.87,201,4.804,202,5.539,203,5.118,204,2.027,205,5.118,206,3.789,207,4.498,208,4.553,209,4.553,210,2.849,211,5.539]],["title/classes/ApiValidationErrorResponse.html",[31,0.151,212,4.195]],["body/classes/ApiValidationErrorResponse.html",[3,0.119,4,0.099,5,0.073,8,0.293,9,0.947,13,0.33,14,0.005,15,0.26,22,0.113,31,0.19,33,1.756,34,2.836,38,4.249,68,1.325,77,1.107,83,4.358,113,0.502,127,1.463,148,1.446,171,0.004,172,0.004,173,6.848,174,1.242,178,3.715,180,2.944,186,0.702,188,0.879,189,0.539,190,7.906,200,5.524,206,3.875,207,5.644,209,4.717,212,6.675,213,8.817,214,6.399,215,1.771,216,5.432,217,5.228,218,5.14,219,8.056,220,6.399,221,7.305,222,6.399,223,4.976,224,5.737,225,6.399,226,6.399,227,6.399,228,6.399,229,8.056,230,8.056,231,6.399,232,8.056,233,6.399]],["title/interfaces/AppendedAttachment.html",[0,0.495,234,3.286]],["body/interfaces/AppendedAttachment.html",[0,0.981,2,1.942,3,0.127,4,0.106,5,0.078,8,0.312,9,0.986,12,1.12,14,0.005,22,0.12,33,2.119,113,0.536,171,0.004,172,0.004,234,5.892,235,4.604,236,6.145,237,6.554,238,4.604,239,4.604,240,5.443,241,4.604,242,4.604,243,4.604,244,5.892,245,4.431,246,4.604,247,5.443,248,5.656,249,5.656,250,5.443,251,4.789,252,4.431,253,4.604,254,4.604,255,4.604]],["title/modules/AuthModule.html",[256,1.309,257,3.732]],["body/modules/AuthModule.html",[3,0.128,4,0.106,5,0.078,14,0.005,15,0.296,19,1.135,22,0.12,31,0.203,171,0.004,172,0.004,256,2.172,257,7.567,258,2.583,259,3.651,260,6.133,261,6.133,262,6.133,263,6.962,264,7.699,265,7.297,266,4.223,267,3.155,268,2.919,269,6.84,270,3.455,271,3.651,272,8.397,273,5.32,274,6.84,275,6.133,276,6.133,277,6.84,278,5.042,279,5.668,280,6.84,281,6.133,282,6.84]],["title/modules/AuthorizationModule.html",[256,1.309,283,3.561]],["body/modules/AuthorizationModule.html",[3,0.129,4,0.107,5,0.079,14,0.005,15,0.281,19,1.148,22,0.122,31,0.206,171,0.004,172,0.004,256,2.187,258,2.613,259,3.677,266,4.253,267,3.191,268,2.953,270,3.479,271,3.677,283,7.268,284,6.205,285,6.205,286,6.205,287,6.205,288,6.981,289,6.735,290,6.981,291,6.92,292,3.982,293,6.205,294,6.92,295,3.743,296,6.205]],["title/injectables/AuthorizationService.html",[18,0.885,289,3.286]],["body/injectables/AuthorizationService.html",[3,0.088,4,0.073,5,0.054,8,0.216,12,0.96,13,0.308,14,0.005,15,0.224,18,1.153,19,0.785,22,0.083,31,0.141,40,4.494,68,0.979,73,2.49,75,3.715,76,2.311,77,0.906,113,0.644,127,1.362,128,2.421,144,2.556,147,2.181,148,0.849,171,0.003,172,0.003,181,1.108,186,0.715,188,1.128,189,0.691,198,1.413,289,4.277,290,6.285,295,2.558,296,4.24,297,1.575,298,4.729,299,6.802,300,5.91,301,7.587,302,4.729,303,4.729,304,4.729,305,3.068,306,4.965,307,4.838,308,5.895,309,4.391,310,4.729,311,3.996,312,6.591,313,1.974,314,4.635,315,6.591,316,4.729,317,4.328,318,4.24,319,4.729,320,3.785,321,4.858,322,5.91,323,4.277,324,5.461,325,1.309,326,1.815,327,4.53,328,4.635,329,4.729,330,4.729,331,3.918,332,4.729,333,4.729,334,4.729,335,6.591,336,4.729,337,4.729,338,4.729,339,6.591,340,4.729,341,4.729]],["title/classes/BaseEntity.html",[31,0.151,342,3.172]],["body/classes/BaseEntity.html",[3,0.122,4,0.101,5,0.074,8,0.298,9,1.045,10,2.005,12,0.955,13,0.305,14,0.005,15,0.24,22,0.143,31,0.264,148,1.596,171,0.004,172,0.004,174,1.264,178,3.005,186,0.71,313,2.057,342,5.57,343,5.842,344,3.974,345,3.7,346,2.33,347,4.21,348,6.516,349,4.21,350,6.516,351,3.006,352,1.998,353,1.932,354,3.005,355,5.067,356,5.067,357,3.027,358,5.399,359,5.399,360,5.842,361,4.229,362,3.619,363,5.842,364,3.436,365,5.067,366,4.082,367,2.42,368,3.276,369,2.344,370,5.842,371,5.399,372,5.842,373,4.229,374,3.72,375,5.067,376,5.399,377,2.588,378,2.564,379,5.842,380,2.633]],["title/classes/BaseEntityWithTimestamps.html",[31,0.151,357,1.881]],["body/classes/BaseEntityWithTimestamps.html",[3,0.116,4,0.097,5,0.071,8,0.285,9,1.023,10,1.973,12,0.936,13,0.297,14,0.005,15,0.234,22,0.139,31,0.259,148,1.698,171,0.004,172,0.004,174,1.209,178,2.874,186,0.799,313,2.024,342,4.963,343,5.587,344,3.911,345,3.64,346,2.48,347,4.143,349,4.143,351,3.099,352,1.943,353,1.848,354,2.874,355,4.846,356,4.846,357,3.235,358,5.163,359,5.163,360,5.587,361,4.044,362,3.461,363,5.587,364,3.286,365,4.846,366,3.904,367,2.315,368,3.133,369,2.242,370,5.587,371,5.163,372,5.587,373,4.044,374,3.558,375,4.846,376,5.163,377,3.459,378,2.729,379,5.587,380,3.52,381,6.231,382,2.222,383,2.285,384,6.231,385,6.231,386,2.997,387,1.957,388,6.231]],["title/classes/BaseFactory.html",[31,0.151,389,3.937]],["body/classes/BaseFactory.html",[0,0.497,3,0.062,4,0.051,5,0.038,8,0.152,9,0.814,13,0.357,14,0.005,15,0.098,22,0.058,31,0.099,37,2.269,43,2.738,44,2.792,45,3.435,46,2.686,47,2.792,48,2.68,53,2.252,68,1.279,70,2.206,77,1.127,113,0.664,127,1.516,138,4.936,148,1.616,167,2.128,171,0.002,172,0.002,174,0.643,181,0.854,186,0.785,188,1.307,189,0.713,198,1.515,210,2.343,215,1.916,313,2.065,317,3.938,320,3.194,326,1.273,327,3.861,364,3.938,382,2.374,383,2.502,389,3.951,390,3.315,391,7.951,392,2.68,393,5.738,394,5.081,395,5.849,396,7.819,397,4.21,398,5.642,399,4.21,400,3.951,401,2.412,402,4.942,403,5.738,404,6.885,405,6.526,406,3.315,407,3.954,408,5.081,409,7.01,410,2.747,411,5.118,412,3.315,413,4.147,414,4.846,415,4.263,416,4.678,417,2.822,418,6.187,419,2.747,420,2.01,421,2.443,422,5.607,423,2.747,424,2.578,425,4.21,426,7.335,427,3.315,428,3.404,429,4.21,430,3.315,431,2.747,432,6.638,433,3.315,434,2.747,435,5.385,436,5.738,437,3.315,438,6.795,439,4.21,440,4.21,441,3.315,442,5.385,443,3.315,444,4.21,445,3.315,446,4.21,447,3.745,448,3.315,449,2.747,450,4.21,451,3.951,452,3.186,453,3.315,454,3.315,455,3.315,456,3.315,457,3.315,458,1.364,459,6.178,460,3.315,461,7.878,462,6.178,463,3.315,464,3.315,465,3.315,466,3.315,467,4.21,468,3.315,469,3.315,470,3.315,471,3.315,472,3.315]],["title/classes/BaseFile.html",[31,0.151,473,3.414]],["body/classes/BaseFile.html",[0,0.532,3,0.101,4,0.084,5,0.083,8,0.249,9,0.852,10,1.56,12,0.973,13,0.356,14,0.005,15,0.257,22,0.153,31,0.242,33,1.896,122,2.488,144,2.31,148,1.301,171,0.003,172,0.003,174,1.054,186,0.829,189,0.733,191,3.23,204,1.783,313,1.921,344,3.092,345,2.158,346,2.493,347,2.456,349,2.456,351,3.341,352,1.333,353,1.612,357,3.533,377,2.878,378,2.613,380,2.929,382,2.033,383,2.09,386,2.614,387,1.706,473,5.864,474,4.226,475,4.373,476,6.41,477,6.763,478,5.435,479,5.435,480,2.607,481,5.435,482,2.672,483,2.672,484,2.672,485,2.672,486,2.276,487,2.086,488,5.172,489,4.226,490,2.614,491,5.341,492,5.096,493,4.886,494,2.98,495,3.921,496,3.295,497,3.73,498,4.54,499,3.405,500,3.151,501,4.226,502,2.236,503,4.226,504,1.924,505,4.226,506,4.226,507,4.226,508,4.226,509,4.226,510,4.226,511,4.226,512,4.226,513,4.226,514,4.226,515,3.405]],["title/injectables/BaseRepo.html",[18,0.885,516,3.414]],["body/injectables/BaseRepo.html",[3,0.092,4,0.077,5,0.056,8,0.226,13,0.36,14,0.005,15,0.229,18,1.189,19,0.82,22,0.087,31,0.147,68,1.024,70,1.575,73,2.639,76,2.511,77,1.245,113,0.753,127,1.128,128,2.46,167,3.504,171,0.003,172,0.003,181,1.143,186,0.846,188,1.318,189,0.808,198,1.571,297,1.647,313,2.002,320,3.858,325,1.368,342,3.098,352,1.213,354,2.281,422,6.32,516,4.584,517,4.945,518,6.506,519,4.121,520,5.287,521,5.287,522,4.781,523,3.677,524,5.287,525,5.287,526,5.287,527,2.907,528,4.306,529,4.945,530,3.27,531,4.945,532,4.781,533,4.945,534,5.287,535,4.945,536,5.287,537,4.945,538,4.781,539,4.945,540,5.287,541,4.945,542,5.287,543,4.945,544,5.287,545,4.945,546,5.287,547,4.945,548,3.846,549,4.945,550,4.945,551,6.506,552,6.798,553,6.798,554,6.798,555,7.768,556,7.768,557,4.945,558,6.798]],["title/injectables/BsonConverter.html",[18,0.885,559,3.561]],["body/injectables/BsonConverter.html",[3,0.113,4,0.094,5,0.069,8,0.277,13,0.291,14,0.005,15,0.229,18,1.36,19,1.004,22,0.107,31,0.18,77,1.068,113,0.61,127,1.29,171,0.004,172,0.004,181,1.307,186,0.678,188,1.068,189,0.655,198,1.485,215,2.152,297,2.016,327,3.661,559,5.468,560,6.052,561,6.442,562,6.442,563,7.775,564,6.052,565,7.775,566,7.082,567,5.496,568,6.667,569,9.887,570,6.875,571,8.129,572,7.512,573,5.994,574,9.066,575,7.775,576,6.052,577,7.775,578,6.047,579,6.229,580,6.052,581,6.047,582,6.052]],["title/classes/BusinessError.html",[31,0.151,177,3.414]],["body/classes/BusinessError.html",[3,0.101,4,0.084,5,0.062,8,0.249,9,0.852,12,1.001,13,0.378,14,0.005,15,0.241,19,0.902,22,0.096,30,5.959,31,0.242,33,1.58,37,2.005,68,1.5,70,3.247,77,0.996,83,4.704,113,0.426,148,0.975,171,0.003,172,0.003,174,1.054,177,4.886,178,4.512,179,5.766,180,3.406,181,1.218,182,7.205,183,7.205,186,0.842,188,0.747,189,0.458,198,1.187,200,5.107,201,6.763,204,1.783,207,3.103,208,6.009,215,1.504,218,4.83,497,4.197,583,5.435,584,4.137,585,4.393,586,5.096,587,4.137,588,4.703,589,4.703,590,3.644,591,7.205,592,5.435,593,6.763,594,7.247,595,2.733,596,5.435,597,5.435,598,5.435,599,5.435,600,5.435,601,5.435,602,5.435,603,5.435,604,5.435,605,3.665,606,5.435,607,4.873,608,7.247,609,5.435,610,4.26,611,7.247,612,7.247,613,5.435]],["title/modules/ConsoleWriterModule.html",[256,1.309,614,3.732]],["body/modules/ConsoleWriterModule.html",[3,0.136,4,0.113,5,0.083,14,0.005,15,0.258,19,1.212,22,0.129,31,0.217,171,0.004,172,0.004,256,2.26,258,2.757,259,3.798,266,4.393,267,3.368,268,3.116,270,3.594,292,4.113,614,7.49,615,6.547,616,6.547,617,6.547,618,6.779,619,6.547,620,5.382,621,7.302,622,3.95,623,6.05]],["title/injectables/ConsoleWriterService.html",[18,0.885,618,3.286]],["body/injectables/ConsoleWriterService.html",[3,0.17,4,0.107,5,0.078,8,0.314,9,0.989,12,0.978,13,0.315,14,0.005,15,0.269,18,1.472,19,1.139,22,0.121,31,0.204,35,2.662,113,0.539,167,3.526,171,0.004,172,0.004,181,1.415,186,0.734,188,0.943,189,0.578,198,1.124,297,2.287,382,1.926,383,1.98,428,3.376,618,5.463,619,8.161,620,6.709,622,4.553,624,6.867,625,9.488,626,8.417,627,6.867,628,4.456,629,8.417,630,9.102,631,6.867,632,3.167,633,9.102,634,6.867,635,3.376,636,6.867,637,6.867]],["title/modules/CoreModule.html",[256,1.309,638,3.732]],["body/modules/CoreModule.html",[3,0.12,4,0.1,5,0.073,14,0.005,15,0.282,19,1.067,22,0.113,31,0.191,34,3.583,171,0.004,172,0.004,215,1.78,256,2.398,258,2.429,259,3.514,266,4.065,267,2.967,268,2.745,271,3.514,590,4.065,638,7.578,639,5.769,640,5.769,641,7.187,642,7.187,643,6.108,644,7.187,645,6.434,646,5.451,647,8.083,648,5.451,649,6.286,650,5.958,651,8.083,652,4.9,653,6.286,654,5.451,655,8.083,656,4.752,657,5.958,658,7.248,659,8.083,660,6.286,661,6.434,662,6.434,663,6.434,664,6.434]],["title/classes/Course.html",[31,0.151,665,1.881]],["body/classes/Course.html",[0,0.409,3,0.078,4,0.065,5,0.048,8,0.355,9,0.833,10,1.3,12,1.03,13,0.351,14,0.005,15,0.243,22,0.106,31,0.124,33,1.317,37,1.671,68,1.25,77,0.83,113,0.711,127,1.176,144,2.063,148,1.626,171,0.003,172,0.003,174,0.811,181,1.015,186,0.85,188,0.574,189,0.352,191,2.884,198,0.989,204,1.372,215,2.279,305,2.163,313,1.334,344,2.577,345,2.399,346,2.488,347,1.89,349,1.89,351,3.063,352,1.025,353,1.24,357,3.287,367,2.243,377,2.399,378,1.742,380,2.441,382,2.662,383,2.613,386,2.011,387,2.778,414,2.713,452,1.784,482,2.055,483,2.055,484,2.055,485,2.055,486,1.751,487,1.605,490,2.011,494,1.528,502,3.727,504,2.138,530,2.011,652,2.534,665,2.243,666,3.464,667,4.914,668,3.537,669,4.864,670,6.405,671,6.07,672,6.962,673,6.962,674,6.433,675,6.039,676,5.415,677,5.415,678,4.181,679,5.415,680,4.181,681,3.783,682,2.904,683,4.181,684,4.316,685,3.251,686,4.181,687,4.696,688,4.181,689,4.993,690,6.357,691,4.181,692,5.415,693,4.181,694,4.181,695,4.181,696,2.261,697,2.055,698,2.619,699,3.661,700,3.783,701,3.748,702,3.251,703,3.464,704,2.819,705,3.748,706,3.748,707,3.464,708,2.94,709,2.94,710,2.94,711,3.748,712,2.819,713,3.464,714,3.251,715,1.784,716,2.055,717,3.251,718,3.267,719,2.261,720,5.415,721,3.748,722,3.251,723,2.619,724,3.251,725,3.251,726,3.748,727,3.748,728,3.748,729,3.748,730,5.415,731,3.748,732,3.748,733,3.748,734,1.968,735,3.748,736,3.464,737,2.819,738,3.464,739,3.748,740,5.415,741,3.748,742,3.748]],["title/classes/CourseGroup.html",[31,0.151,743,3.172]],["body/classes/CourseGroup.html",[0,0.554,3,0.106,4,0.088,5,0.064,8,0.259,9,0.875,10,1.602,12,0.608,13,0.353,14,0.005,15,0.271,22,0.131,31,0.168,33,1.623,68,1.171,77,0.777,113,0.444,144,1.977,148,1.586,171,0.004,172,0.004,174,1.098,181,1.251,186,0.85,188,0.777,189,0.477,191,3.282,198,0.927,204,1.857,313,1.644,344,3.176,345,3.51,346,2.47,347,2.558,349,2.558,351,1.913,352,1.825,353,1.678,354,2.61,357,3.569,377,2.956,378,2.147,380,3.008,382,2.333,383,2.399,386,2.721,387,2.612,452,2.414,482,2.782,483,2.782,484,2.782,485,2.782,486,2.37,487,2.172,490,2.721,494,2.068,502,3.635,504,2.636,665,3.621,669,5.536,684,3.743,687,5.788,689,4.512,696,3.061,715,2.414,724,4.401,725,4.401,743,4.663,744,5.074,745,7.923,746,7.321,747,7.443,748,4.134,749,4.83,750,5.658,751,5.658,752,3.143,753,4.171,754,3.672,755,3.672,756,5.074]],["title/injectables/CourseGroupRepo.html",[18,0.885,757,4.54]],["body/injectables/CourseGroupRepo.html",[3,0.128,4,0.106,5,0.078,8,0.313,13,0.315,14,0.005,15,0.268,18,1.468,19,1.135,22,0.12,31,0.203,68,1.416,70,2.179,73,2.382,76,2.172,77,0.94,113,0.659,127,1.135,128,1.919,171,0.004,172,0.004,181,1.412,186,0.732,188,1.154,189,0.707,198,1.12,297,2.278,305,2.891,325,1.893,326,2.626,352,1.678,354,3.155,527,4.021,528,4.878,530,4.039,665,2.541,743,4.285,753,6.189,757,7.529,758,6.84,759,8.397,760,6.84,761,8.397,762,6.84,763,5.906,764,4.285,765,5.45,766,6.84]],["title/classes/CourseNews.html",[31,0.151,767,3.172]],["body/classes/CourseNews.html",[0,0.34,3,0.065,4,0.118,5,0.04,8,0.159,9,0.619,10,1.37,12,1.023,13,0.366,14,0.005,15,0.254,22,0.134,31,0.211,33,1.664,43,2.821,44,2.877,45,2.666,46,2.767,47,2.877,48,3.357,77,0.478,113,0.557,122,1.195,144,2.216,148,1.369,171,0.003,172,0.003,174,0.675,180,2.935,181,0.886,186,0.842,188,0.478,189,0.741,191,3.59,198,0.57,204,1.142,305,2.166,306,4.1,307,4.037,309,2.716,313,1.685,328,2.447,344,2.249,345,1.382,346,2.496,347,1.573,349,1.573,351,3.192,352,0.853,353,1.032,357,2.982,364,3.357,369,2.289,377,2.094,378,2.2,380,2.131,382,1.786,383,1.836,386,1.674,387,1.093,401,2.485,452,2.716,475,3.837,482,1.711,483,1.711,484,1.711,485,1.711,486,1.458,487,1.336,490,1.674,494,2.326,496,2.109,497,2.714,498,3.987,502,3.303,504,1.232,515,2.18,610,2.045,665,2.364,668,3.501,681,3.987,682,2.536,697,1.711,698,2.18,723,2.18,748,2.928,752,1.933,767,3.303,768,2.565,769,3.928,770,4.135,771,3.862,772,3.745,773,5.234,774,4.788,775,4.952,776,4.1,777,3.48,778,2.883,779,3.555,780,4.174,781,3.708,782,2.883,783,2.883,784,3.886,785,4.448,786,3.886,787,3.708,788,2.714,789,3.099,790,3.708,791,2.883,792,2.883,793,2.883,794,3.634,795,3.987,796,2.883,797,2.883,798,3.201,799,2.883,800,3.555,801,2.883,802,3.886,803,2.883,804,3.886,805,5.366,806,2.883,807,2.536,808,2.565,809,3.987,810,2.565,811,1.791,812,2.346,813,2.18,814,2.109,815,2.565,816,2.565,817,2.565,818,2.565,819,1.987,820,2.565,821,2.565,822,2.565,823,2.565,824,2.565,825,2.565,826,2.565,827,2.565,828,3.886,829,3.741,830,2.565,831,3.886,832,2.565,833,2.565,834,2.258,835,2.258,836,2.565]],["title/injectables/CourseRepo.html",[18,0.885,837,3.561]],["body/injectables/CourseRepo.html",[3,0.099,4,0.082,5,0.06,8,0.326,13,0.323,14,0.005,15,0.254,18,1.247,19,0.88,22,0.093,31,0.212,33,1.157,53,2.351,68,1.098,70,1.69,73,2.552,75,3.908,76,2.393,77,1.183,111,2.447,113,0.676,127,1.647,128,2.26,148,0.952,171,0.003,172,0.003,181,1.199,186,0.751,188,1.183,189,0.725,198,1.319,297,1.767,305,3.028,325,1.468,326,2.037,352,1.301,354,2.447,527,3.119,528,4.433,530,3.43,665,1.971,669,4.467,670,5.545,671,5.256,714,5.545,716,4.549,717,5.545,764,3.324,765,6.005,837,5.015,838,4.757,839,6.394,840,5.305,841,5.908,842,5.305,843,5.908,844,5.305,845,5.908,846,5.305,847,3.641,848,3.731,849,6.674,850,4.757,851,6.394,852,7.722,853,5.396,854,3.91,855,3.91,856,3.91,857,4.144,858,4.757,859,7.222,860,4.396]],["title/classes/CourseScope.html",[31,0.151,849,4.195]],["body/classes/CourseScope.html",[3,0.099,4,0.082,5,0.06,8,0.326,9,0.836,13,0.322,14,0.005,15,0.254,18,1.244,19,0.878,22,0.093,31,0.212,33,1.552,35,2.516,53,2.344,70,1.685,73,2.108,75,3.815,76,2.08,77,1.182,111,2.44,113,0.558,127,1.646,128,2.256,148,0.949,167,2.216,171,0.003,172,0.003,174,1.026,181,1.196,186,0.75,188,0.978,189,0.599,191,2.987,198,1.165,305,2.882,325,1.464,326,2.031,352,1.297,354,2.44,382,1.484,383,1.525,528,3.663,530,2.544,665,1.965,669,4.458,670,5.534,671,5.245,716,4.545,764,3.314,765,6,837,3.72,838,4.743,841,4.383,843,4.383,845,4.383,847,4.27,848,3.72,849,7.438,850,6.381,851,6.381,852,7.713,853,5.389,854,3.899,855,3.899,856,3.899,857,4.264,858,4.743,859,7.211,860,4.383,861,5.245,862,5.245,863,7.117,864,5.245,865,3.72,866,4.114,867,5.219,868,4.114,869,5.29,870,3.899,871,5.005,872,4.114]],["title/classes/CreateNewsParams.html",[31,0.151,873,3.732]],["body/classes/CreateNewsParams.html",[3,0.104,4,0.087,5,0.064,8,0.256,9,0.867,10,1.589,12,1.044,13,0.343,14,0.005,15,0.244,22,0.098,31,0.22,40,3.712,127,0.927,171,0.004,172,0.004,174,1.084,180,3.342,186,0.797,189,0.622,215,2.69,306,4.064,307,4.157,308,5.011,313,2.194,325,1.546,346,2.396,378,2.129,769,3.91,770,4.055,771,4.397,772,4.36,798,2.81,873,5.441,874,8.421,875,4.63,876,3.271,877,5.74,878,4.099,879,6.618,880,5.01,881,5.588,882,4.79,883,4.475,884,5.74,885,5.441,886,5.74,887,4.79,888,5.191,889,5.588,890,5.588,891,4.475,892,4.475,893,5.33,894,5.588,895,5.588,896,6.093,897,5.74,898,4.475,899,5.588,900,5.588,901,4.494,902,4.339,903,2.384,904,6.618,905,5.441,906,7.11,907,3.19,908,3.93,909,3.19]],["title/controllers/DashboardController.html",[910,2.288,911,4.195]],["body/controllers/DashboardController.html",[3,0.1,4,0.083,5,0.061,8,0.245,12,0.997,13,0.324,14,0.005,15,0.28,19,0.889,22,0.094,31,0.159,37,2.568,70,1.708,73,2.558,76,2.401,77,1.113,113,0.563,126,5.255,127,1.54,128,2.272,142,4.16,171,0.003,172,0.003,181,1.207,186,0.706,188,0.987,189,0.605,198,1.326,326,2.058,327,2.524,346,2.122,402,5.02,857,2.472,876,4.201,903,2.287,910,2.423,911,5.95,912,2.636,913,5.361,914,3.359,915,4.678,916,8.649,917,7.26,918,8.097,919,4.807,920,6.342,921,5.361,922,5.361,923,6.726,924,5.361,925,5.361,926,7.755,927,5.361,928,4.452,929,7.166,930,7.181,931,5.361,932,4.442,933,3.951,934,7.26,935,3.615,936,3.951,937,5.695,938,3.479,939,5.968,940,4.807,941,4.442,942,5.361,943,5.361,944,3.951,945,5.361,946,5.361,947,4.169,948,8.097,949,5.361,950,6.439,951,4.499,952,2.9,953,5.361,954,5.361,955,5.361,956,5.361,957,5.361,958,5.361,959,4.807]],["title/classes/DashboardEntity.html",[31,0.151,960,2.976]],["body/classes/DashboardEntity.html",[0,0.446,3,0.054,4,0.045,5,0.033,8,0.294,9,0.536,10,1.953,12,1.037,13,0.353,14,0.005,15,0.135,19,0.478,22,0.153,31,0.191,35,2.71,37,2.642,68,0.597,77,1.327,113,0.634,127,1.551,142,3.089,147,2.607,148,1.449,167,3.263,171,0.002,172,0.002,174,0.56,180,3.228,181,0.766,186,0.791,188,1.11,189,0.68,198,1.361,305,2.65,369,1.037,383,1.315,401,2.508,452,2.412,458,1.186,480,2.311,504,1.021,610,4.372,716,1.418,734,2.146,811,2.91,814,2.763,819,1.646,917,4.087,928,3.307,960,2.679,961,1.945,962,4.166,963,4.131,964,4.735,965,4.558,966,4.735,967,5.482,968,4.558,969,4.558,970,4.558,971,4.558,972,4.558,973,3.668,974,4.517,975,2.884,976,2.884,977,3.427,978,2.884,979,2.884,980,2.884,981,3.36,982,6.043,983,2.884,984,4.861,985,6.043,986,2.884,987,4.509,988,2.884,989,3.36,990,6.043,991,2.884,992,3.36,993,2.884,994,3.894,995,3.36,996,2.884,997,5.004,998,3.36,999,2.884,1000,3.36,1001,2.884,1002,3.36,1003,2.884,1004,1.872,1005,2.028,1006,2.126,1007,3.206,1008,2.958,1009,3.206,1010,4.517,1011,4.169,1012,4.722,1013,5.856,1014,3.36,1015,1.807,1016,2.466,1017,1.945,1018,2.126,1019,1.646,1020,4.617,1021,2.126,1022,1.945,1023,2.126,1024,5.055,1025,3.36,1026,3.36,1027,2.679,1028,3.36,1029,2.126,1030,3.206,1031,3.36,1032,3.36,1033,3.36,1034,2.126,1035,3.36,1036,2.126,1037,3.885,1038,4.778,1039,3.36,1040,3.36,1041,2.126,1042,2.126,1043,2.126,1044,2.126,1045,2.126,1046,3.36,1047,2.126,1048,3.36,1049,2.028,1050,3.36,1051,2.126,1052,3.36,1053,2.126,1054,2.126,1055,1.33,1056,2.126,1057,1.945,1058,2.126,1059,3.206,1060,5.157,1061,3.206,1062,3.36,1063,2.126,1064,1.748,1065,2.126,1066,2.126,1067,2.126,1068,2.126,1069,2.126,1070,2.126,1071,2.126,1072,2.126,1073,2.126,1074,2.126,1075,3.36,1076,2.126,1077,4.166,1078,2.126,1079,3.36,1080,2.126,1081,2.126,1082,3.36,1083,2.763,1084,3.36,1085,2.126,1086,2.126,1087,2.126,1088,2.126,1089,2.126,1090,2.126,1091,2.126,1092,4.166,1093,2.126,1094,2.126]],["title/classes/DashboardGridElementModel.html",[31,0.151,1095,3.561]],["body/classes/DashboardGridElementModel.html",[3,0.091,4,0.076,5,0.056,8,0.224,9,0.794,10,1.993,12,1.041,13,0.354,14,0.005,15,0.228,22,0.136,31,0.23,33,1.816,37,2.305,68,1.014,75,1.945,113,0.384,122,2.653,148,1.569,171,0.003,172,0.003,174,0.95,180,3.045,186,0.845,188,0.673,189,0.413,191,3.095,204,2.536,210,2.259,313,1.84,344,2.881,345,2.682,346,2.51,347,2.214,349,2.214,351,3.276,352,1.656,353,1.452,354,2.259,357,3.556,367,1.819,377,2.682,378,1.948,380,2.729,382,2.168,383,2.229,386,2.356,387,1.538,482,2.408,483,2.408,484,2.408,485,2.408,486,2.052,494,3.045,595,2.463,667,2.72,684,3.887,700,3.068,715,3.298,716,2.408,769,1.88,915,4.727,973,5.407,1020,4.854,1024,5.016,1038,4.506,1095,4.749,1096,4.058,1097,6.404,1098,6.404,1099,4.898,1100,6.903,1101,5.595,1102,6.404,1103,4.898,1104,5.595,1105,4.898,1106,4.898,1107,4.898,1108,4.898,1109,3.303,1110,4.058,1111,4.058,1112,3.444,1113,6.404,1114,6.404,1115,4.058,1116,4.058,1117,2.463,1118,3.068,1119,3.303,1120,3.61,1121,3.178,1122,4.058,1123,4.058,1124,3.068,1125,3.809,1126,3.61,1127,2.72,1128,4.058,1129,3.809,1130,3.178,1131,4.058,1132,3.303,1133,4.058]],["title/classes/DashboardGridElementResponse.html",[31,0.151,1134,3.732]],["body/classes/DashboardGridElementResponse.html",[3,0.098,4,0.081,5,0.06,8,0.239,9,0.83,10,2.089,12,1.078,13,0.364,14,0.005,15,0.154,22,0.141,31,0.238,37,2.369,142,3.396,171,0.003,172,0.003,174,1.014,180,3.586,186,0.821,215,2.793,313,1.155,317,4.216,346,2.469,387,1.641,667,4.44,785,3.275,891,5.19,892,5.19,901,4.962,903,2.23,909,4.888,915,3.819,920,3.676,928,3.634,963,5.656,984,4.888,997,5.987,1011,5.556,1012,5.19,1037,3.921,1132,3.525,1134,6.31,1135,4.331,1136,6.624,1137,6.624,1138,6.624,1139,6.48,1140,5.228,1141,6.658,1142,3.853,1143,5.85,1144,5.228,1145,5.228,1146,6.624,1147,5.228,1148,5.228,1149,5.228,1150,5.228,1151,3.676]],["title/classes/DashboardGridSubElementResponse.html",[31,0.151,1141,3.937]],["body/classes/DashboardGridSubElementResponse.html",[3,0.104,4,0.087,5,0.064,8,0.255,9,0.866,10,2.117,12,1.088,13,0.352,14,0.005,15,0.165,22,0.145,31,0.246,37,2.04,142,2.683,171,0.004,172,0.004,174,1.082,180,3.629,186,0.766,215,2.804,313,1.232,317,3.889,346,2.303,667,4.587,785,3.495,891,5.327,892,5.327,901,5.005,903,2.38,909,5.017,915,3.989,920,3.923,928,2.872,963,5.655,984,4.21,997,5.985,1011,5.703,1012,5.327,1037,3.098,1132,3.762,1134,6.088,1135,4.622,1136,4.622,1137,4.622,1138,4.622,1139,6.18,1141,6.834,1143,4.622,1146,6.843,1151,3.923,1152,5.579,1153,5.579,1154,5.579,1155,5.579]],["title/classes/DashboardMapper.html",[31,0.151,941,4.195]],["body/classes/DashboardMapper.html",[3,0.124,4,0.103,5,0.075,8,0.303,13,0.248,14,0.005,15,0.243,22,0.117,31,0.197,77,1.131,113,0.52,127,1.555,148,1.478,171,0.004,172,0.004,174,1.285,181,1.384,186,0.577,188,0.91,189,0.558,198,1.085,325,1.833,401,3.497,876,3.649,915,3.583,920,6.59,941,6.821,960,5.508,994,4.016,1059,4.659,1061,4.659,1134,6.068,1156,6.625,1157,5.551,1158,8.233,1159,6.625,1160,4.467,1161,4.467,1162,6.625,1163,6.625,1164,6.625,1165,8.233,1166,6.625,1167,6.625,1168,2.826,1169,6.625,1170,6.625,1171,6.625,1172,6.625,1173,6.625,1174,6.625,1175,6.625,1176,8.233,1177,6.625,1178,5.94,1179,6.625,1180,6.625]],["title/classes/DashboardModelEntity.html",[31,0.151,1130,3.286]],["body/classes/DashboardModelEntity.html",[3,0.097,4,0.081,5,0.059,8,0.238,9,0.827,10,2.025,12,1.042,13,0.32,14,0.005,15,0.235,22,0.14,31,0.237,33,1.863,37,1.948,68,1.077,75,2.067,113,0.408,122,2.417,148,1.602,171,0.003,172,0.003,174,1.01,180,2.573,186,0.802,188,0.715,189,0.438,191,3.174,204,2.617,210,2.4,313,1.888,344,3.003,345,2.796,346,2.34,347,2.352,349,2.352,351,3.181,352,1.726,353,1.544,354,2.4,357,3.602,367,1.933,377,2.796,378,2.03,380,2.845,382,2.238,383,2.3,386,2.503,387,1.634,482,2.559,483,2.559,484,2.559,485,2.559,486,2.18,494,3.123,667,2.891,684,4.011,700,3.261,715,3.403,716,2.559,769,1.998,915,4.622,973,5.546,1020,4.43,1024,5.177,1038,4.315,1095,3.66,1096,4.312,1097,4.312,1098,4.312,1100,6.609,1101,4.312,1102,5.832,1104,4.312,1109,3.51,1110,4.312,1111,4.312,1112,3.66,1113,6.609,1114,6.609,1115,4.312,1116,4.312,1117,2.617,1118,3.261,1119,3.51,1120,3.836,1121,3.378,1122,4.312,1123,4.312,1124,3.261,1125,4.048,1126,3.836,1127,2.891,1128,4.312,1129,4.048,1130,4.568,1131,5.832,1132,5.379,1133,4.312,1181,5.205,1182,5.205]],["title/injectables/DashboardModelMapper.html",[18,0.885,1183,3.561]],["body/injectables/DashboardModelMapper.html",[3,0.078,4,0.064,5,0.047,8,0.19,13,0.339,14,0.005,15,0.229,18,1.052,19,0.69,22,0.073,31,0.124,35,2.066,68,0.86,70,1.324,73,2.615,76,2.478,77,1.266,113,0.71,127,1.604,128,2.586,142,1.999,148,1.585,171,0.003,172,0.003,181,1.011,186,0.788,188,1.243,189,0.762,198,1.446,297,1.384,313,0.918,325,1.15,352,1.019,353,1.233,494,1.519,527,2.443,528,3.986,530,2.892,548,3.232,734,3.646,811,3.096,915,3.822,928,2.139,960,4.552,963,3.34,985,5.222,987,4.694,994,2.52,997,4.154,1013,5.222,1015,4.427,1020,4.301,1038,4.189,1049,2.923,1095,6.361,1112,5.446,1130,5.732,1178,6.336,1183,4.229,1184,4.156,1185,6.014,1186,6.014,1187,6.014,1188,6.014,1189,7.066,1190,6.014,1191,7.066,1192,4.156,1193,6.014,1194,4.156,1195,6.014,1196,4.156,1197,7.097,1198,6.014,1199,4.156,1200,6.014,1201,4.156,1202,4.156,1203,4.156,1204,6.014,1205,4.156,1206,4.156,1207,4.156,1208,3.727,1209,3.444,1210,4.156,1211,6.014,1212,4.156,1213,4.156,1214,4.156,1215,4.156,1216,4.156,1217,4.156,1218,4.156,1219,4.156,1220,4.156,1221,4.156,1222,4.969,1223,4.156,1224,2.923,1225,4.156,1226,4.156,1227,3.232,1228,6.014,1229,4.156,1230,4.156,1231,4.156,1232,4.156,1233,4.156,1234,4.156,1235,4.156,1236,4.156,1237,4.156,1238,4.156,1239,4.189,1240,4.156,1241,4.156,1242,4.156,1243,7.066,1244,4.156,1245,4.156,1246,4.156,1247,4.156,1248,4.156,1249,4.156,1250,4.156,1251,4.156,1252,4.156,1253,4.156,1254,4.156,1255,4.156,1256,4.156,1257,4.156,1258,3.444,1259,4.156,1260,4.156,1261,4.156,1262,4.156,1263,4.156,1264,4.156,1265,4.156,1266,4.156,1267,4.156]],["title/injectables/DashboardRepo.html",[18,0.885,1268,3.732]],["body/injectables/DashboardRepo.html",[0,0.443,3,0.085,4,0.07,5,0.052,8,0.207,10,1.377,13,0.302,14,0.005,15,0.251,18,1.118,19,0.752,22,0.113,31,0.19,68,0.938,70,2.038,73,2.552,76,2.494,77,1.211,113,0.632,127,1.582,128,2.542,142,4.085,148,1.748,171,0.003,172,0.003,181,1.075,186,0.74,188,1.107,189,0.678,198,1.319,210,2.09,297,1.509,305,2.592,313,1.413,325,1.254,345,1.8,352,1.111,354,2.09,367,1.683,395,3.055,497,2.332,516,3.055,519,3.877,522,4.498,527,2.663,528,4.146,530,3.076,532,4.498,538,5.214,548,3.524,915,4.768,928,4.372,960,5.439,963,2.516,987,3.877,994,5.149,1015,2.838,1016,2.451,1027,2.663,1038,4.768,1055,3.917,1130,2.94,1183,5.664,1197,5.299,1209,3.754,1258,3.754,1268,4.714,1269,3.754,1270,5.735,1271,7.038,1272,5.464,1273,4.531,1274,6.647,1275,4.531,1276,4.531,1277,4.531,1278,4.531,1279,4.063,1280,5.299,1281,3.754,1282,5.299,1283,5.299,1284,7.038,1285,4.313,1286,6.673,1287,8.067,1288,7.507,1289,3.754,1290,4.313,1291,3.754,1292,3.754,1293,3.754,1294,3.754,1295,3.754,1296,3.754,1297,3.754,1298,3.754,1299,3.754,1300,4.974,1301,3.754,1302,5.735,1303,4.063,1304,5.735,1305,4.063,1306,6.647,1307,4.063,1308,5.735,1309,4.063]],["title/classes/DashboardResponse.html",[31,0.151,920,3.561]],["body/classes/DashboardResponse.html",[3,0.108,4,0.09,5,0.066,8,0.265,9,0.888,10,2.132,12,1.074,13,0.334,14,0.005,15,0.171,22,0.148,31,0.25,37,2.092,142,2.788,171,0.004,172,0.004,174,1.125,180,3.467,186,0.659,215,2.831,313,1.67,317,4.438,346,1.982,387,1.82,667,4.199,785,4.737,891,5.407,892,5.407,901,5.03,903,2.473,909,5.092,915,4.824,920,5.318,928,2.984,963,5.552,984,4.317,997,5.876,1011,4.907,1012,4.584,1037,3.219,1132,5.675,1134,6.574,1135,4.802,1136,4.802,1137,4.802,1138,4.802,1139,4.076,1141,6.545,1142,4.272,1143,4.802,1146,6.265,1151,5.318,1310,5.796,1311,5.796]],["title/injectables/DashboardUc.html",[18,0.885,939,3.732]],["body/injectables/DashboardUc.html",[3,0.11,4,0.092,5,0.067,8,0.27,12,0.912,13,0.318,14,0.005,15,0.251,17,3.278,18,1.338,19,0.979,22,0.104,31,0.176,35,1.726,68,1.222,70,1.88,73,2.606,76,2.466,77,1.166,113,0.666,127,1.49,128,2.61,171,0.004,172,0.004,181,1.286,186,0.783,188,1.166,189,0.715,198,1.39,297,1.966,305,2.961,325,1.633,402,4.592,915,5.157,926,8.053,939,5.639,951,3.697,952,3.192,960,3.469,982,6.056,984,4.847,990,6.544,1038,3.192,1268,5.639,1271,7.441,1300,6.984,1312,5.902,1313,8.489,1314,8.489,1315,5.902,1316,5.902,1317,5.902,1318,5.902,1319,5.902,1320,5.902,1321,5.902,1322,5.292,1323,5.902,1324,5.902,1325,7.65,1326,5.902,1327,7.65,1328,5.902,1329,5.902]],["title/classes/DatabaseManagementConsole.html",[31,0.151,1330,3.937]],["body/classes/DatabaseManagementConsole.html",[0,0.499,3,0.095,4,0.079,5,0.058,8,0.233,12,0.548,13,0.296,14,0.005,15,0.233,22,0.161,31,0.152,35,1.492,68,1.056,71,4.52,73,2.398,76,2.192,77,0.954,113,0.619,122,1.751,127,1.553,128,1.948,171,0.003,172,0.003,174,0.99,181,1.167,186,0.688,188,1.085,189,0.714,198,1.137,215,2.636,267,3.202,326,1.958,346,1.82,387,2.784,480,1.835,494,2.885,495,2.453,500,3.432,618,5.5,620,3.76,622,4.584,623,4.226,632,2.352,1168,2.963,1239,2.759,1330,5.4,1331,7.598,1332,4.573,1333,6.226,1334,6.944,1335,4.573,1336,6.074,1337,5.101,1338,5.753,1339,6.226,1340,5.753,1341,4.399,1342,6.792,1343,6.246,1344,5.101,1345,6.226,1346,5.96,1347,5.101,1348,6.168,1349,4.226,1350,3.967,1351,3.967,1352,5.123,1353,3.856,1354,7.078,1355,5.118,1356,4.64,1357,4.838,1358,3.964,1359,6.226,1360,6.226,1361,4.573,1362,5.4,1363,6.226,1364,6.226,1365,4.226,1366,3.195,1367,5.4,1368,4.573,1369,4.573]],["title/controllers/DatabaseManagementController.html",[910,2.288,1370,4.195]],["body/controllers/DatabaseManagementController.html",[3,0.112,4,0.093,5,0.068,8,0.274,12,1.028,13,0.289,14,0.005,15,0.228,19,0.994,22,0.105,31,0.178,73,2.669,76,2.552,77,1.241,113,0.606,127,1.499,128,2.534,171,0.004,172,0.004,181,1.299,186,0.787,188,1.061,189,0.651,198,1.479,326,2.3,327,2.821,346,2.368,734,4.646,910,2.708,912,2.945,914,3.753,1333,8.098,1336,5.549,1350,4.659,1351,4.659,1370,6.4,1371,9.348,1372,5.991,1373,5.991,1374,7.725,1375,6.926,1376,9.032,1377,5.991,1378,7.725,1379,5.991,1380,6.657,1381,7.725,1382,5.991,1383,5.372,1384,7.725,1385,5.991,1386,7.725,1387,5.991,1388,4.416,1389,5.991,1390,5.991,1391,5.991,1392,5.991,1393,5.991,1394,5.991,1395,5.991]],["title/modules/DatabaseManagementModule.html",[256,1.309,1396,3.732]],["body/modules/DatabaseManagementModule.html",[3,0.137,4,0.114,5,0.083,14,0.005,15,0.258,19,1.214,22,0.129,31,0.218,171,0.004,172,0.004,256,2.262,258,2.763,259,3.803,266,4.398,267,3.375,268,3.122,271,3.803,292,4.118,1341,3.519,1396,7.493,1397,6.561,1398,6.561,1399,6.561,1400,7.046,1401,6.561,1402,7.317,1403,7.317]],["title/injectables/DatabaseManagementService.html",[18,0.885,1400,3.414]],["body/injectables/DatabaseManagementService.html",[3,0.084,4,0.07,5,0.051,8,0.207,12,1.098,13,0.346,14,0.005,15,0.218,18,1.115,19,0.749,22,0.079,31,0.134,35,2.351,68,0.934,73,2.671,76,2.555,77,1.27,113,0.738,122,2.54,127,1.599,128,2.539,171,0.003,172,0.003,181,1.072,186,0.831,188,1.27,189,0.779,198,1.514,297,1.503,326,1.733,352,1.107,354,2.082,458,3.043,494,3.379,527,2.653,528,4.139,530,3.068,566,4.486,579,4.801,581,5.753,734,3.003,1342,4.486,1375,5.72,1380,6.671,1383,5.72,1400,4.301,1401,8.641,1404,4.514,1405,6.379,1406,5.285,1407,6.379,1408,6.379,1409,6.379,1410,8.04,1411,6.379,1412,4.702,1413,5.505,1414,4.514,1415,6.379,1416,4.514,1417,6.379,1418,4.514,1419,6.379,1420,4.514,1421,6.379,1422,4.514,1423,6.379,1424,4.514,1425,4.514,1426,6.379,1427,4.514,1428,4.514,1429,4.514,1430,4.514,1431,2.929,1432,4.514,1433,4.514,1434,7.398,1435,4.514,1436,6.379,1437,4.514,1438,4.514,1439,4.514,1440,4.514,1441,6.379,1442,4.514,1443,4.514,1444,4.514,1445,4.514,1446,6.379,1447,4.514,1448,4.514,1449,4.514,1450,4.514,1451,4.514,1452,4.514]],["title/injectables/DatabaseManagementUc.html",[18,0.885,1336,3.286]],["body/injectables/DatabaseManagementUc.html",[0,0.251,3,0.048,4,0.12,5,0.094,8,0.118,9,0.488,12,1.034,13,0.29,14,0.005,15,0.22,18,0.727,19,0.426,22,0.116,31,0.076,34,1.138,35,2.772,37,1.15,68,0.86,73,2.344,76,2.003,77,1.129,113,0.672,122,0.882,127,1.604,128,2.537,147,1.185,148,0.939,171,0.003,172,0.002,181,0.699,186,0.747,188,1.022,189,0.733,198,1.446,215,1.15,271,1.806,292,1.956,297,0.855,317,3.171,327,3.109,368,1.292,378,1.509,382,0.721,383,0.741,387,0.806,392,4.084,458,1.057,480,2.541,494,3.396,495,4.041,519,1.557,559,5.23,561,2.128,562,2.128,566,5.23,568,4.054,570,1.732,572,3.443,573,1.557,578,5.784,579,2.697,581,4.069,584,2.372,595,3.32,628,4.585,650,4.432,699,2.519,811,2.139,887,1.667,893,3.645,1055,1.185,1168,3.413,1222,2.922,1239,4.326,1336,2.697,1341,4.187,1342,6.424,1343,5.207,1346,5.23,1352,2.697,1353,2.906,1357,3.77,1366,5.011,1367,5.494,1380,5.707,1400,5.015,1406,3.443,1412,3.063,1453,7.534,1454,2.303,1455,4.692,1456,4.155,1457,5.391,1458,4.155,1459,4.155,1460,4.155,1461,4.692,1462,4.155,1463,5.391,1464,2.568,1465,4.969,1466,4.155,1467,3.726,1468,2.568,1469,4.228,1470,5.391,1471,4.981,1472,5.453,1473,5.47,1474,2.568,1475,3.726,1476,3.726,1477,2.568,1478,2.922,1479,3.726,1480,2.568,1481,5.391,1482,3.231,1483,4.969,1484,6.668,1485,3.726,1486,2.568,1487,5.92,1488,2.568,1489,5.92,1490,2.568,1491,3.726,1492,3.443,1493,3.063,1494,4.981,1495,3.726,1496,2.568,1497,3.726,1498,3.726,1499,3.767,1500,3.231,1501,2.568,1502,2.568,1503,3.443,1504,1.997,1505,1.997,1506,2.128,1507,1.609,1508,2.128,1509,2.128,1510,5.47,1511,5.47,1512,3.443,1513,2.303,1514,2.303,1515,3.726,1516,3.726,1517,3.726,1518,2.303,1519,2.303,1520,2.303,1521,2.303,1522,5.391,1523,2.303,1524,2.303,1525,2.303,1526,1.997,1527,2.303,1528,2.303,1529,2.303,1530,2.128,1531,2.303,1532,5.391,1533,4.336,1534,2.442,1535,2.303,1536,2.303,1537,1.557,1538,1.667,1539,2.303,1540,3.726,1541,3.726,1542,2.303,1543,2.303,1544,2.303,1545,1.466,1546,3.726,1547,2.128,1548,2.303,1549,2.303,1550,3.231,1551,3.726,1552,2.303,1553,3.726,1554,3.726,1555,2.303,1556,2.303,1557,2.308,1558,2.303,1559,2.303,1560,1.997,1561,2.303,1562,1.806,1563,1.997,1564,1.732,1565,1.557,1566,2.303,1567,2.128,1568,1.732,1569,2.303,1570,2.303,1571,2.303,1572,2.303,1573,2.303,1574,2.697,1575,2.303,1576,2.303,1577,2.303,1578,2.303,1579,2.303,1580,3.726,1581,2.303,1582,2.303,1583,2.303,1584,2.128,1585,1.466,1586,1.732,1587,2.303,1588,2.303,1589,2.303,1590,2.303,1591,3.063,1592,2.303,1593,3.231,1594,2.303,1595,2.303,1596,2.303,1597,2.303]],["title/classes/DefaultGridReference.html",[31,0.151,1015,3.172]],["body/classes/DefaultGridReference.html",[0,0.488,3,0.06,4,0.05,5,0.037,8,0.279,9,0.587,10,2.003,12,1.067,13,0.33,14,0.005,15,0.147,19,0.538,22,0.158,31,0.203,35,2.283,37,2.6,68,0.671,77,1.349,113,0.254,127,1.584,142,3.291,147,2.809,148,1.507,167,3.27,171,0.002,172,0.002,174,0.629,180,3.464,181,0.839,186,0.644,188,0.445,189,0.273,198,0.53,305,2.808,369,1.165,383,1.44,401,2.671,452,1.382,458,1.333,480,2.461,504,1.147,610,4.589,716,1.593,734,2.35,811,3.135,814,3.026,819,1.85,928,3.522,960,1.904,961,2.185,962,2.388,963,3.8,964,3.679,966,2.388,967,4.489,973,3.952,974,3.511,977,3.026,981,2.388,982,5.264,984,4.219,985,5.663,987,4.148,989,2.388,990,4.983,992,2.388,994,3.692,995,2.388,997,5.065,998,2.388,1000,2.388,1002,2.388,1004,2.103,1005,2.278,1006,2.388,1007,3.511,1008,3.24,1009,3.511,1010,5.197,1011,4.44,1012,5.428,1013,6.128,1014,5.447,1015,3.127,1016,3.294,1017,2.185,1018,2.388,1019,1.85,1020,4.785,1021,2.388,1022,2.185,1023,2.388,1024,5.279,1025,3.679,1026,3.679,1027,2.934,1028,3.679,1029,2.388,1030,3.511,1031,3.679,1032,3.679,1033,3.679,1034,2.388,1035,3.679,1036,2.388,1037,4.104,1038,4.916,1039,3.679,1040,3.679,1041,2.388,1042,2.388,1043,2.388,1044,2.388,1045,2.388,1046,3.679,1047,2.388,1048,3.679,1049,2.278,1050,3.679,1051,2.388,1052,3.679,1053,2.388,1054,2.388,1055,1.494,1056,2.388,1057,2.185,1058,2.388,1059,3.511,1060,5.447,1061,3.511,1062,3.679,1063,2.388,1064,1.964,1065,2.388,1066,2.388,1067,2.388,1068,2.388,1069,2.388,1070,2.388,1071,2.388,1072,2.388,1073,2.388,1074,2.388,1075,3.679,1076,2.388,1077,4.489,1078,2.388,1079,3.679,1080,2.388,1081,2.388,1082,3.679,1083,3.026,1084,3.679,1085,2.388,1086,2.388,1087,2.388,1088,2.388,1089,2.388,1090,2.388,1091,2.388,1092,4.489,1093,2.388,1094,2.388,1598,4.992,1599,3.24,1600,3.24,1601,3.24]],["title/classes/DefaultGridReferenceModel.html",[31,0.151,1112,3.561]],["body/classes/DefaultGridReferenceModel.html",[3,0.095,4,0.079,5,0.058,8,0.233,9,0.814,10,2.013,12,1.058,13,0.342,14,0.005,15,0.233,22,0.139,31,0.234,33,1.845,37,1.918,68,1.053,75,2.02,113,0.399,122,2.706,148,1.519,171,0.003,172,0.003,174,0.987,180,3.094,186,0.83,188,0.699,189,0.428,191,3.144,204,2.586,210,2.346,313,1.87,344,2.957,345,2.752,346,2.451,347,2.299,349,2.299,351,3.263,352,1.7,353,1.508,354,2.346,357,3.585,367,1.889,377,2.752,378,1.999,380,2.801,382,1.944,383,1.999,386,2.446,387,1.597,482,2.5,483,2.5,484,2.5,485,2.5,486,2.13,494,2.881,667,4.378,684,3.485,700,3.186,715,3.363,716,2.5,769,1.953,915,4.264,973,5.493,1020,4.378,1024,5.116,1038,4.791,1095,3.577,1096,4.214,1097,4.214,1098,4.214,1100,7.013,1101,4.214,1102,6.531,1104,4.214,1109,3.43,1110,4.214,1111,4.214,1112,4.874,1113,6.531,1114,6.531,1115,4.214,1116,4.214,1117,2.558,1118,3.186,1119,3.43,1120,3.749,1121,3.301,1122,5.742,1123,4.214,1124,3.186,1125,3.955,1126,3.749,1127,2.825,1128,4.214,1129,3.955,1130,3.301,1131,4.214,1132,3.43,1133,4.214,1602,5.086,1603,5.086,1604,5.086,1605,5.086]],["title/controllers/DelayController.html",[910,2.288,1606,4.195]],["body/controllers/DelayController.html",[3,0.125,4,0.104,5,0.076,8,0.305,14,0.005,15,0.265,19,1.107,22,0.118,31,0.198,51,4.474,72,4.862,73,2.356,76,2.324,77,1.136,127,1.372,128,1.872,148,1.198,171,0.004,172,0.004,181,1.39,186,0.582,198,1.093,206,3.21,270,2.746,346,1.749,382,2.32,657,6.096,910,3.738,912,4.066,1606,7.446,1607,7.416,1608,5.984,1609,7.784,1610,6.674,1611,5.817,1612,4.861,1613,6.432,1614,5.53,1615,5.984,1616,4.331,1617,5.984,1618,6.853,1619,5.984,1620,5.984,1621,6.674,1622,5.19,1623,3.356,1624,5.984,1625,5.817,1626,5.19,1627,3.356,1628,4.331,1629,4.919]],["title/classes/DeleteFilesConsole.html",[31,0.151,1630,4.195]],["body/classes/DeleteFilesConsole.html",[3,0.114,4,0.095,5,0.089,8,0.279,9,0.918,13,0.323,14,0.005,15,0.254,22,0.107,31,0.181,35,2.52,37,2.385,68,1.261,73,2.259,76,2.02,113,0.613,127,1.011,128,1.709,148,1.402,171,0.004,172,0.004,174,1.182,181,1.313,186,0.751,188,1.073,189,0.658,198,0.998,215,2.385,326,2.339,346,1.597,378,1.757,495,4.372,523,4.662,622,4.917,632,2.81,708,6.392,1340,5.048,1348,6.129,1630,6.47,1631,9.09,1632,6.093,1633,5.49,1634,7.002,1635,6.093,1636,7.087,1637,7.809,1638,7.809,1639,7.966,1640,7.728,1641,8.15,1642,7.141,1643,8.619,1644,6.093,1645,8.619,1646,5.463,1647,3.694,1648,5.463,1649,6.093,1650,6.093,1651,5.463,1652,6.093,1653,6.093,1654,6.093,1655,5.463]],["title/injectables/DeleteFilesUc.html",[18,0.885,1636,3.732]],["body/injectables/DeleteFilesUc.html",[3,0.111,4,0.092,5,0.088,8,0.273,12,0.64,13,0.289,14,0.005,15,0.252,18,1.346,19,0.989,22,0.105,31,0.177,35,1.743,43,3.413,44,3.48,45,3.225,46,3.348,68,1.234,73,2.236,76,1.991,113,0.604,127,1.496,128,2.393,144,2.046,171,0.004,172,0.004,181,1.294,186,0.671,188,1.058,189,0.649,198,0.976,268,2.543,297,1.985,326,2.288,327,2.807,378,2.46,458,2.452,495,4.489,856,6.645,1633,5.553,1634,6.904,1636,5.675,1651,8.083,1656,8.529,1657,5.961,1658,5.961,1659,7.046,1660,5.961,1661,7.7,1662,5.961,1663,7.7,1664,6.904,1665,5.961,1666,3.504,1667,5.961,1668,7.7,1669,5.961,1670,7.7,1671,5.961,1672,7.7,1673,7.067,1674,7.7,1675,5.345,1676,4.939,1677,4.192,1678,5.345,1679,5.961,1680,4.394,1681,5.345,1682,5.961,1683,5.961,1684,7.7,1685,4.636,1686,5.961,1687,4.192]],["title/classes/Directory.html",[31,0.151,499,3.172]],["body/classes/Directory.html",[0,0.527,3,0.1,4,0.084,5,0.082,8,0.246,9,0.846,10,1.55,12,0.97,13,0.356,14,0.005,15,0.256,22,0.153,31,0.241,33,1.889,122,2.473,144,2.302,148,1.293,171,0.003,172,0.003,174,1.045,186,0.827,189,0.73,191,3.525,204,1.767,313,1.914,344,3.073,345,2.139,346,2.488,347,2.434,349,2.434,351,3.336,352,1.321,353,1.597,357,3.452,377,2.861,378,2.605,380,2.911,382,2.021,383,2.077,386,2.59,387,1.691,473,6.399,474,4.188,475,4.357,476,6.387,477,6.738,480,2.591,482,2.647,483,2.647,484,2.647,485,2.647,486,2.256,487,2.067,488,5.156,489,4.188,490,2.59,491,5.309,492,5.065,493,4.857,494,2.966,495,3.903,496,3.265,497,3.708,498,4.512,499,4.512,500,3.131,501,4.188,502,2.215,503,4.188,504,1.907,505,4.188,506,4.188,507,4.188,508,4.188,509,4.188,510,4.188,511,4.188,512,4.188,513,4.188,514,4.188,515,3.374,1688,4.829,1689,4.829,1690,4.829]],["title/injectables/DurationLoggingInterceptor.html",[18,0.885,1691,4.54]],["body/injectables/DurationLoggingInterceptor.html",[3,0.121,4,0.101,5,0.074,8,0.298,9,0.956,13,0.244,14,0.005,15,0.275,18,1.423,19,1.079,21,4.794,22,0.115,31,0.193,35,2.598,45,3.721,70,2.83,77,0.894,113,0.51,127,1.079,148,1.461,171,0.004,172,0.004,181,1.368,186,0.709,188,0.894,189,0.548,198,1.065,215,1.8,297,2.166,382,1.825,383,1.876,420,4.934,654,5.488,887,4.221,1016,3.518,1613,6.329,1625,5.724,1633,5.315,1691,7.297,1692,8.883,1693,6.504,1694,8.139,1695,6.329,1696,7.297,1697,7.297,1698,7.239,1699,8.347,1700,6.504,1701,3.518,1702,7.965,1703,8.139,1704,6.504,1705,5.389,1706,6.504,1707,5.389,1708,6.504,1709,8.139,1710,6.504,1711,6.504,1712,6.504]],["title/classes/EncryptedStringType.html",[31,0.151,1713,3.937]],["body/classes/EncryptedStringType.html",[3,0.1,4,0.083,5,0.061,8,0.246,9,0.845,12,1.105,13,0.366,14,0.005,15,0.239,22,0.095,31,0.16,33,1.567,35,2.37,68,1.111,77,1.276,113,0.636,127,1.193,148,1.29,171,0.003,172,0.003,174,1.042,181,1.208,186,0.754,188,1.113,189,0.683,198,1.177,204,1.762,215,1.486,352,1.317,353,1.592,367,1.994,383,2.678,387,2.916,458,2.957,595,2.7,635,2.639,1341,3.457,1574,4.665,1713,5.59,1714,5.369,1715,6.445,1716,6.445,1717,7.266,1718,6.73,1719,8.103,1720,7.188,1721,7.188,1722,7.188,1723,7.188,1724,7.188,1725,5.973,1726,7.188,1727,9.035,1728,5.369,1729,7.188,1730,5.369,1731,3.776,1732,3.484,1733,3.364,1734,4.175,1735,5.369,1736,5.369,1737,7.188,1738,5.369,1739,5.369,1740,7.188,1741,5.699,1742,5.259,1743,6.302,1744,7.188,1745,7.188,1746,5.369,1747,6.445,1748,7.188,1749,5.369]],["title/modules/EncryptionModule.html",[256,1.309,1750,3.937]],["body/modules/EncryptionModule.html",[0,0.694,3,0.132,4,0.11,5,0.081,12,0.763,13,0.266,14,0.005,15,0.254,19,1.178,22,0.151,31,0.211,71,3.209,77,0.975,113,0.557,171,0.004,172,0.004,181,1.193,186,0.619,188,0.975,189,0.598,198,1.162,256,2.389,258,2.68,270,2.92,292,3.342,401,3.354,1627,3.57,1628,4.607,1725,6.807,1750,7.182,1751,6.365,1752,5.521,1753,6.041,1754,7.951,1755,7.099,1756,6.228,1757,6.365,1758,6.365,1759,6.365,1760,6.365]],["title/interfaces/EncryptionModuleOptions.html",[0,0.495,1754,4.195]],["body/interfaces/EncryptionModuleOptions.html",[0,0.704,2,2.048,3,0.134,4,0.112,5,0.082,8,0.329,9,1.018,12,0.998,13,0.27,14,0.005,15,0.256,19,1.194,22,0.153,31,0.214,77,0.989,171,0.004,172,0.004,256,2.403,270,2.962,292,3.39,401,2.811,1627,3.62,1628,4.672,1725,6.849,1750,6.736,1751,6.455,1753,5.063,1754,7.698,1756,5.841,1757,6.455,1758,8.645,1759,6.455,1760,6.455]],["title/modules/ErrorModule.html",[256,1.309,641,3.732]],["body/modules/ErrorModule.html",[3,0.136,4,0.113,5,0.083,14,0.005,15,0.276,19,1.209,22,0.128,31,0.217,171,0.004,172,0.004,215,2.016,256,2.257,258,2.752,270,2.998,323,5.663,382,2.448,632,4.024,641,6.431,656,5.129,660,7.529,1357,4.982,1616,4.729,1627,3.664,1761,7.287,1762,7.824,1763,5.466,1764,6.786,1765,7.287,1766,7.287,1767,5.667]],["title/classes/ErrorResponse.html",[31,0.151,200,3.172]],["body/classes/ErrorResponse.html",[3,0.125,4,0.104,5,0.076,12,1.092,13,0.362,14,0.005,15,0.197,19,1.109,22,0.118,31,0.199,34,3.987,37,2.489,38,4.367,68,1.714,70,2.995,83,4.865,113,0.525,171,0.004,172,0.004,174,1.297,178,4.336,180,3.288,186,0.583,188,0.919,189,0.563,200,5.187,201,5.2,215,2.291,216,6.065,217,5.374,218,4.599,607,5.995,699,5.02,1469,4.702,1768,6.687,1769,6.687,1770,6.687,1771,6.687,1772,5.995,1773,6.687,1774,4.509,1775,5.995,1776,4.189,1777,3.362,1778,4.189,1779,4.702]],["title/injectables/FeathersAuthProvider.html",[18,0.885,290,3.561]],["body/injectables/FeathersAuthProvider.html",[0,0.456,3,0.087,4,0.072,5,0.053,8,0.213,12,0.922,13,0.333,14,0.005,15,0.241,18,1.141,19,0.773,22,0.082,31,0.139,35,2.202,50,3.436,68,0.965,73,2.617,75,3.627,76,2.481,77,1.222,113,0.698,127,1.592,128,2.408,144,2.476,147,2.15,148,0.837,171,0.003,172,0.003,181,1.097,186,0.776,188,1.222,189,0.749,198,1.406,290,4.589,293,4.179,297,1.552,305,3.135,306,4.373,307,4.593,308,4.944,309,3.663,314,4.589,325,1.29,326,1.789,342,4.088,344,1.989,345,2.99,352,1.143,354,2.15,500,2.026,635,3.701,668,1.82,682,4.129,857,2.15,1004,4.234,1611,4.589,1612,2.521,1780,9.133,1781,4.179,1782,6.525,1783,6.75,1784,6.525,1785,6.525,1786,6.75,1787,4.661,1788,5.999,1789,4.661,1790,6.525,1791,4.661,1792,4.179,1793,4.661,1794,6.525,1795,4.661,1796,6.525,1797,4.661,1798,4.661,1799,4.661,1800,6.525,1801,6.525,1802,6.525,1803,4.661,1804,4.661,1805,4.661,1806,6.525,1807,6.525,1808,6.525,1809,4.661,1810,3.436,1811,4.661,1812,4.661,1813,4.661,1814,5.406,1815,4.179,1816,4.661,1817,4.661,1818,2.74]],["title/interfaces/FeathersError.html",[0,0.495,1819,3.732]],["body/interfaces/FeathersError.html",[0,0.729,2,2.12,3,0.139,4,0.116,5,0.085,8,0.341,9,1.039,12,1.085,13,0.382,14,0.005,22,0.131,33,1.928,34,3.92,37,2.61,171,0.004,172,0.004,178,4.498,1819,6.519,1820,7.455,1821,7.455,1822,8.746]],["title/modules/FeathersModule.html",[256,1.309,288,3.561]],["body/modules/FeathersModule.html",[3,0.127,4,0.106,5,0.078,14,0.005,15,0.247,19,1.131,22,0.12,31,0.203,51,4.531,171,0.004,172,0.004,215,1.886,256,2.447,258,3.425,259,3.642,266,4.213,267,3.143,268,2.907,270,3.446,288,7.046,292,3.944,295,4.907,392,4.418,428,4.118,635,4.118,1788,6.984,1823,6.11,1824,6.11,1825,6.11,1826,6.814,1827,5.649,1828,4.924,1829,4.653,1830,4.531,1831,5.892,1832,5.892,1833,5.892,1834,5.892,1835,6.941,1836,6.814]],["title/interfaces/FeathersService.html",[0,0.495,1837,4.195]],["body/interfaces/FeathersService.html",[0,0.525,2,1.527,3,0.1,4,0.083,5,0.061,8,0.246,10,1.547,12,0.93,13,0.324,14,0.005,15,0.255,17,2.982,18,1.257,19,0.891,22,0.152,30,4.503,31,0.16,35,1.57,43,3.186,44,3.249,45,3.011,46,3.125,47,3.249,48,3.791,51,4.88,76,2.238,77,0.738,113,0.564,127,1.193,147,2.476,148,0.964,171,0.003,172,0.003,181,1.208,186,0.706,188,0.988,189,0.605,198,1.177,210,2.476,217,3.484,256,1.389,258,2.027,295,4.383,327,3.815,374,3.065,392,2.832,402,5.023,428,2.639,451,5.59,590,3.615,595,3.615,635,4.738,847,3.249,1117,4.352,1534,3.156,1616,3.484,1788,3.62,1818,3.156,1827,3.62,1828,5.303,1829,2.982,1830,4.88,1831,3.776,1832,3.776,1833,3.776,1834,3.776,1835,4.449,1837,7.17,1838,6.714,1839,4.175,1840,7.76,1841,5.616,1842,6.445,1843,7.857,1844,5.369,1845,6.445,1846,5.369,1847,4.814,1848,3.484,1849,4.449,1850,5.59,1851,4.449,1852,3.62,1853,4.814,1854,4.814,1855,4.814,1856,6.445,1857,4.814,1858,3.957,1859,4.665,1860,4.449,1861,3.62,1862,4.814,1863,4.814,1864,4.814,1865,4.175,1866,3.62,1867,4.814]],["title/injectables/FeathersServiceProvider.html",[18,0.885,1788,3.414]],["body/injectables/FeathersServiceProvider.html",[0,0.526,3,0.1,4,0.083,5,0.061,8,0.246,10,1.157,12,0.93,13,0.325,14,0.005,15,0.256,17,2.986,18,1.258,19,0.892,22,0.152,30,4.508,31,0.16,35,1.573,43,3.189,44,3.252,45,3.014,46,3.128,47,3.252,48,3.795,51,4.684,68,1.113,76,1.861,77,0.739,113,0.565,127,1.194,147,2.48,148,0.965,171,0.003,172,0.003,181,1.21,186,0.707,188,0.989,189,0.606,198,0.88,210,2.48,215,1.488,217,3.49,256,1.391,258,2.717,295,4.684,297,1.791,327,3.818,374,3.07,392,3.795,402,4.386,428,3.537,451,5.596,590,3.618,635,4.739,847,3.252,1117,2.704,1499,3.369,1534,3.161,1616,3.49,1788,4.852,1818,3.161,1827,4.852,1828,5.09,1829,3.996,1830,5.281,1831,5.06,1832,5.06,1833,5.06,1834,5.06,1835,5.962,1837,7.175,1838,6.719,1839,4.182,1840,6.452,1841,4.67,1842,4.821,1843,6.719,1845,4.821,1847,4.821,1848,3.49,1849,4.455,1850,5.596,1851,4.455,1852,4.852,1853,4.821,1854,4.821,1855,6.452,1856,6.452,1857,4.821,1858,3.963,1859,4.67,1860,4.455,1861,3.626,1862,4.821,1863,4.821,1864,4.821,1865,4.182,1866,3.626,1867,4.821,1868,7.195,1869,5.377,1870,5.377,1871,5.377]],["title/classes/File.html",[5,0.058,31,0.151]],["body/classes/File.html",[0,0.494,3,0.094,4,0.078,5,0.09,8,0.231,9,0.81,10,1.484,12,1.003,13,0.369,14,0.005,15,0.249,22,0.149,31,0.234,33,1.84,68,1.045,113,0.396,122,2.368,144,2.242,148,1.238,171,0.003,172,0.003,174,0.98,186,0.858,188,0.694,189,0.744,191,3.467,204,1.657,313,1.864,344,2.943,345,2.006,346,2.555,347,2.283,349,2.283,351,3.354,352,1.239,353,1.498,357,3.387,377,2.739,378,2.548,380,2.787,382,1.935,383,1.989,386,2.429,387,1.586,452,2.155,473,6.294,474,3.927,475,4.244,476,6.221,477,6.563,480,2.481,482,2.483,483,2.483,484,2.483,485,2.483,486,2.115,487,1.939,488,5.425,489,3.927,490,2.429,491,6.221,492,5.935,493,5.691,494,2.871,495,3.777,496,3.061,497,3.55,498,4.321,499,3.164,500,2.998,501,5.363,502,2.837,503,5.363,504,2.442,505,3.927,506,3.927,507,3.927,508,3.927,509,3.927,510,3.927,511,3.927,512,3.927,513,3.927,514,3.927,515,3.164,1688,4.528,1689,4.528,1690,4.528,1872,6.897,1873,5.05,1874,5.05]],["title/injectables/FileStorageAdapter.html",[18,0.885,1875,3.732]],["body/injectables/FileStorageAdapter.html",[3,0.123,4,0.103,5,0.113,8,0.303,13,0.248,14,0.005,15,0.264,18,1.438,19,1.097,22,0.116,31,0.197,73,2.346,76,2.127,77,0.909,113,0.519,122,2.823,127,1.485,128,1.855,148,1.476,171,0.004,172,0.004,181,1.382,186,0.576,188,0.909,189,0.557,198,1.083,297,2.202,325,1.83,415,3.775,488,5.11,492,5.783,493,6.035,737,4.459,1875,6.061,1876,5.929,1877,7.373,1878,7.373,1879,6.612,1880,8.025,1881,8.223,1882,5.479,1883,6.612,1884,5.929,1885,7.373,1886,5.479,1887,6.612,1888,6.612,1889,5.479,1890,6.612,1891,6.612,1892,6.612,1893,5.142,1894,6.612,1895,5.142,1896,6.612,1897,6.612,1898,6.612,1899,6.612]],["title/injectables/FileSystemAdapter.html",[18,0.885,1465,3.561]],["body/injectables/FileSystemAdapter.html",[3,0.068,4,0.057,5,0.108,8,0.168,9,0.644,12,1.098,13,0.327,14,0.005,15,0.23,18,0.958,19,0.608,22,0.064,31,0.109,35,1.919,68,1.359,73,2.569,76,2.415,77,1.125,113,0.666,127,1.358,128,2.188,171,0.003,172,0.003,181,0.921,186,0.792,188,1.166,189,0.715,198,1.487,215,2.016,297,1.22,327,3.995,369,1.317,495,2.635,499,3.432,567,3.321,605,3.694,628,5.984,699,5.289,771,3.504,886,4.26,1239,4.719,1343,4.038,1352,3.555,1366,5.851,1412,4.038,1465,3.853,1483,2.575,1499,6.064,1511,6.036,1512,7.228,1526,6.366,1537,5.289,1565,2.22,1568,4.913,1742,3.555,1900,7.64,1901,7.64,1902,3.283,1903,7.339,1904,5.478,1905,5.478,1906,5.478,1907,6.564,1908,6.564,1909,5.478,1910,6.564,1911,6.564,1912,5.478,1913,5.478,1914,3.662,1915,5.124,1916,5.478,1917,3.662,1918,4.26,1919,7.285,1920,7.8,1921,5.478,1922,5.478,1923,4.539,1924,3.694,1925,7.285,1926,8.724,1927,5.478,1928,3.662,1929,6.564,1930,3.662,1931,5.478,1932,4.26,1933,6.564,1934,3.662,1935,3.432,1936,6.564,1937,5.438,1938,7.285,1939,4.912,1940,5.478,1941,3.662,1942,5.478,1943,5.478,1944,4.26,1945,6.564,1946,3.662,1947,4.038,1948,3.432,1949,3.694,1950,5.478,1951,3.662,1952,3.662,1953,3.283,1954,4.912,1955,3.662,1956,3.662,1957,4.912,1958,3.662,1959,3.662,1960,3.662,1961,6.564,1962,3.662,1963,3.662,1964,3.662,1965,3.662,1966,3.662,1967,5.478,1968,3.662,1969,3.662,1970,2.699,1971,2.848,1972,3.662,1973,3.662,1974,3.034,1975,3.662]],["title/modules/FileSystemModule.html",[256,1.309,1976,3.732]],["body/modules/FileSystemModule.html",[3,0.136,4,0.113,5,0.1,14,0.005,15,0.258,19,1.212,22,0.129,31,0.217,171,0.004,172,0.004,256,2.26,258,2.757,259,3.798,266,4.393,267,3.368,268,3.116,270,3.594,292,4.113,1465,7.346,1900,6.05,1901,6.05,1976,7.49,1977,6.547,1978,6.547,1979,6.547,1980,7.302,1981,7.302]],["title/modules/FilesModule.html",[256,1.309,1982,3.561]],["body/modules/FilesModule.html",[3,0.125,4,0.104,5,0.076,14,0.005,15,0.291,19,1.112,22,0.118,31,0.199,171,0.004,172,0.004,256,2.144,258,2.529,259,3.604,266,4.169,267,3.09,268,2.858,270,3.41,271,3.604,643,6.17,1630,6.869,1636,7.26,1647,4.061,1659,7.26,1666,3.938,1875,7.26,1982,7.32,1983,6.007,1984,6.699,1985,6.007,1986,7.66,1987,6.699,1988,6.007,1989,6.699,1990,6.699,1991,6.007]],["title/injectables/FilesRepo.html",[18,0.885,1659,3.732]],["body/injectables/FilesRepo.html",[3,0.087,4,0.072,5,0.104,8,0.212,9,0.765,13,0.366,14,0.005,15,0.253,18,1.138,19,0.77,22,0.082,31,0.138,33,1.419,68,0.961,70,1.479,73,2.629,76,2.447,77,0.638,113,0.76,127,1.246,128,2.284,167,2.726,171,0.003,172,0.003,181,1.094,186,0.859,188,1.331,189,0.816,191,3.514,198,1.587,297,1.546,313,1.798,320,3.755,325,1.285,326,1.782,352,1.139,354,2.141,378,2.166,382,1.302,383,1.339,395,3.131,422,6.133,473,5.49,476,3.422,488,3.715,495,3.129,516,6.594,518,5.842,519,3.945,520,5.06,521,5.06,522,4.576,523,3.52,524,5.06,525,5.06,526,5.06,528,4.191,530,3.613,532,3.265,534,3.611,536,3.611,538,3.265,540,3.611,542,3.611,544,3.611,546,3.611,1659,4.796,1875,6.549,1877,5.834,1878,5.834,1988,4.163,1992,4.643,1993,6.736,1994,6.507,1995,4.643,1996,4.643,1997,4.643,1998,6.507,1999,4.643,2000,6.507,2001,3.847,2002,3.847,2003,3.847,2004,3.847,2005,3.847,2006,3.847,2007,3.847,2008,3.847,2009,3.847,2010,4.643,2011,3.847,2012,4.643,2013,6.507,2014,4.163,2015,4.643,2016,4.643,2017,4.643,2018,4.796,2019,4.643,2020,4.163,2021,4.643,2022,4.643]],["title/interfaces/GlobalConstants.html",[0,0.495,2023,4.195]],["body/interfaces/GlobalConstants.html",[0,0.7,2,2.035,3,0.134,4,0.111,5,0.082,8,0.327,9,1.014,12,1.104,13,0.347,14,0.005,15,0.211,22,0.126,127,1.432,171,0.004,172,0.004,189,0.811,1341,3.442,2023,7.678,2024,6.416,2025,8.16,2026,8.16,2027,8.16,2028,7.151,2029,7.156,2030,7.739,2031,5.274]],["title/classes/GlobalErrorFilter.html",[31,0.151,1764,3.937]],["body/classes/GlobalErrorFilter.html",[0,0.36,3,0.069,4,0.057,5,0.042,8,0.168,9,0.646,13,0.307,14,0.005,15,0.258,19,0.61,22,0.065,31,0.163,34,4.594,35,1.924,38,4.93,43,2.435,44,2.484,45,2.302,46,2.389,47,1.662,70,2.096,77,1.321,83,2.972,113,0.516,127,1.668,137,2.479,138,2.303,139,2.479,148,1.471,167,2.756,171,0.003,172,0.003,173,5.134,174,0.713,177,4.923,178,3.367,180,2.405,181,1.106,186,0.574,188,0.755,189,0.463,198,1.195,200,5.782,206,1.768,207,3.137,212,3.046,216,2.479,218,2.042,223,2.859,224,3.297,295,3.559,327,2.587,351,1.243,369,1.323,382,1.031,383,1.06,387,1.154,398,3.443,401,2.569,415,3.757,422,4.97,428,1.808,500,1.599,579,5.071,585,3.331,591,6.049,632,2.534,1016,2.972,1224,2.586,1505,2.859,1550,2.859,1557,3.654,1633,4.987,1677,2.586,1680,5.759,1707,3.046,1763,4.895,1764,4.274,1819,5.381,1822,3.297,1829,2.042,1848,2.386,1915,2.586,2018,6.263,2032,6.049,2033,2.859,2034,6.58,2035,5.9,2036,5.765,2037,5.495,2038,3.677,2039,5.495,2040,6.58,2041,7.3,2042,3.677,2043,6.58,2044,3.677,2045,3.677,2046,3.297,2047,3.677,2048,3.677,2049,3.297,2050,3.297,2051,3.297,2052,3.046,2053,2.71,2054,3.297,2055,4.437,2056,2.479,2057,3.297,2058,3.297,2059,4.927,2060,3.297,2061,3.046,2062,3.297,2063,3.297,2064,3.297,2065,3.297,2066,3.297,2067,4.553,2068,3.677,2069,3.677,2070,4.553,2071,3.677,2072,3.677,2073,3.677,2074,4.553,2075,3.677,2076,3.677,2077,5.495,2078,3.677,2079,3.677,2080,4.927,2081,2.71,2082,3.297,2083,2.479,2084,2.386,2085,4.927,2086,3.046,2087,4.927,2088,3.297,2089,4.274,2090,3.297,2091,3.297,2092,3.046,2093,3.297,2094,3.297,2095,3.297,2096,2.71,2097,3.297,2098,3.297,2099,3.297,2100,3.297,2101,7.006,2102,3.297,2103,7.006,2104,3.297,2105,3.046,2106,3.297,2107,3.677,2108,3.677,2109,3.677,2110,5.495,2111,3.677,2112,3.677]],["title/classes/GlobalValidationPipe.html",[31,0.151,2113,4.195]],["body/classes/GlobalValidationPipe.html",[3,0.118,4,0.098,5,0.072,9,0.743,13,0.329,14,0.005,15,0.236,19,1.049,22,0.111,31,0.261,33,1.743,68,1.815,77,0.868,122,3.01,145,5.621,148,1.134,171,0.004,172,0.004,173,4.444,174,1.226,185,5.891,186,0.551,204,2.074,207,5.26,215,1.749,218,3.51,223,4.915,346,2.095,369,2.875,382,2.242,402,3.418,413,4.439,500,2.748,523,3.418,584,4.564,656,4.698,857,2.915,876,3.885,901,3.107,907,4.564,1121,4.101,1168,2.696,1353,4.439,1356,3.715,1358,3.608,1777,3.178,1859,4.101,1866,4.261,2113,6.623,2114,7.993,2115,6.32,2116,6.216,2117,6.623,2118,6.623,2119,8.767,2120,6.32,2121,5.621,2122,4.915,2123,6.32,2124,4.444,2125,6.32,2126,6.32,2127,6.32,2128,6.32,2129,4.915,2130,4.444,2131,4.658,2132,6.32,2133,4.658,2134,6.32,2135,5.236,2136,5.666,2137,6.32,2138,6.32]],["title/classes/GridElement.html",[31,0.151,1038,2.739]],["body/classes/GridElement.html",[0,0.438,3,0.053,4,0.044,5,0.032,8,0.29,9,0.527,10,1.966,12,1.052,13,0.354,14,0.005,15,0.132,19,0.468,22,0.152,31,0.189,35,2.259,37,2.576,68,0.584,77,1.322,113,0.629,127,1.545,142,3.052,147,2.57,148,1.438,167,3.458,171,0.002,172,0.002,174,0.548,180,3.403,181,0.753,186,0.804,188,1.101,189,0.675,198,1.438,305,2.815,369,1.015,383,1.292,401,3.43,407,2.558,452,1.912,458,1.161,480,2.651,504,1.587,610,4.331,716,1.387,734,2.11,811,3.793,814,2.717,819,1.611,928,3.267,960,1.659,961,1.903,962,2.08,963,3.525,964,3.303,966,2.08,967,5.431,973,2.908,974,3.151,977,2.717,981,2.08,982,4.969,984,3.952,985,5.567,987,3.847,989,2.08,990,4.668,992,2.08,994,3.379,995,2.08,997,4.853,998,2.08,1000,2.08,1002,2.08,1004,1.832,1005,1.985,1006,2.08,1007,3.151,1008,2.908,1009,3.151,1010,4.463,1011,4.119,1012,4.683,1013,6.522,1014,3.303,1015,1.768,1016,3.015,1017,1.903,1018,2.08,1019,1.611,1020,4.951,1021,2.08,1022,1.903,1023,2.08,1024,5.013,1025,3.303,1026,3.303,1027,2.634,1028,5.103,1029,4.678,1030,3.919,1031,5.103,1032,4.108,1033,5.103,1034,3.303,1035,4.108,1036,2.08,1037,4.29,1038,5.036,1039,3.303,1040,3.303,1041,2.08,1042,3.303,1043,3.303,1044,3.303,1045,3.303,1046,3.303,1047,2.08,1048,3.303,1049,1.985,1050,3.303,1051,2.08,1052,3.303,1053,2.08,1054,2.08,1055,1.302,1056,3.303,1057,1.903,1058,2.08,1059,3.151,1060,5.103,1061,3.151,1062,3.303,1063,2.08,1064,1.711,1065,2.08,1066,2.08,1067,2.08,1068,2.08,1069,2.08,1070,2.08,1071,2.08,1072,2.08,1073,2.08,1074,2.08,1075,3.303,1076,2.08,1077,4.108,1078,2.08,1079,3.303,1080,2.08,1081,2.08,1082,3.303,1083,2.717,1084,3.303,1085,2.08,1086,2.08,1087,2.08,1088,2.08,1089,2.08,1090,2.08,1091,2.08,1092,4.108,1093,2.08,1094,2.08,2139,4.018,2140,4.481,2141,4.481,2142,4.481,2143,4.481,2144,4.018,2145,4.018,2146,4.481,2147,2.822,2148,2.822,2149,2.822,2150,2.53,2151,2.822,2152,2.822,2153,2.822,2154,2.822,2155,2.822,2156,2.822,2157,2.822,2158,2.822,2159,2.822,2160,2.822,2161,2.822]],["title/interfaces/HtmlMailContent.html",[0,0.495,250,3.286]],["body/interfaces/HtmlMailContent.html",[0,0.975,2,1.895,3,0.124,4,0.103,5,0.076,8,0.305,9,0.971,12,1.128,13,0.31,14,0.005,22,0.117,33,2.104,113,0.523,171,0.004,172,0.004,189,0.696,234,5.361,235,4.492,236,5.828,237,5.571,238,4.492,239,4.492,240,5.361,241,4.492,242,4.492,243,4.492,244,6.093,245,4.323,246,4.492,247,5.361,248,6.508,249,6.508,250,5.828,251,4.717,252,4.323,253,4.492,254,4.492,255,4.492]],["title/interfaces/ICollectionFilePath.html",[0,0.495,1510,4.195]],["body/interfaces/ICollectionFilePath.html",[0,0.315,2,0.915,3,0.06,4,0.126,5,0.089,8,0.147,9,0.583,12,1.008,13,0.186,14,0.005,15,0.239,18,0.868,19,0.534,22,0.12,31,0.096,34,1.425,35,2.568,37,1.374,68,0.666,73,1.931,76,1.763,77,1.207,113,0.535,122,1.104,127,1.653,128,2.655,147,1.483,148,1.088,171,0.003,172,0.002,186,0.28,189,0.511,198,1.275,271,1.398,292,1.514,317,2.618,327,3.468,368,1.617,378,1.432,387,1.01,392,3.885,458,1.323,480,1.786,494,3.396,495,3.744,519,1.95,559,4.263,561,2.665,562,2.665,566,5.706,568,4.088,570,2.169,572,4.113,573,1.95,578,5.728,579,2.087,581,4.714,584,1.836,628,5.052,650,3.659,699,3.009,811,1.656,887,2.087,893,3.009,1055,1.483,1168,3.321,1222,3.491,1239,3.984,1336,2.087,1341,4.03,1342,6.38,1343,5.024,1346,4.793,1352,2.087,1353,2.757,1357,3.461,1366,4.27,1367,4.714,1380,6.588,1400,4.088,1406,4.113,1453,2.884,1454,2.884,1455,2.884,1457,2.884,1461,2.884,1463,2.884,1465,4.263,1467,2.884,1469,3.491,1470,5.435,1471,4.113,1472,5.052,1473,5.023,1475,2.884,1476,2.884,1478,2.262,1479,2.884,1481,4.451,1482,2.501,1483,4.263,1484,6.979,1485,2.884,1487,5.435,1489,5.435,1491,2.884,1492,2.665,1493,2.371,1494,4.113,1495,2.884,1497,2.884,1498,2.884,1499,3.11,1500,2.501,1503,2.665,1504,2.501,1505,2.501,1506,2.665,1507,2.015,1508,2.665,1509,2.665,1510,6.449,1511,6.942,1512,4.113,1513,2.884,1514,2.884,1515,4.451,1516,4.451,1517,4.451,1518,2.884,1519,2.884,1520,2.884,1521,2.884,1522,6.111,1523,2.884,1524,2.884,1525,2.884,1526,2.501,1527,2.884,1528,2.884,1529,2.884,1530,2.665,1531,2.884,1532,6.111,1533,5.023,1534,2.918,1535,2.884,1536,2.884,1537,1.95,1538,2.087,1539,2.884,1540,4.451,1541,4.451,1542,2.884,1543,2.884,1544,2.884,1545,1.836,1546,4.451,1547,2.665,1548,2.884,1549,2.884,1550,3.86,1551,4.451,1552,2.884,1553,4.451,1554,4.451,1555,2.884,1556,2.884,1557,2.757,1558,2.884,1559,2.884,1560,2.501,1561,2.884,1562,2.262,1563,2.501,1564,2.169,1565,1.95,1566,2.884,1567,2.665,1568,2.169,1569,2.884,1570,2.884,1571,2.884,1572,2.884,1573,2.884,1574,3.222,1575,2.884,1576,2.884,1577,2.884,1578,2.884,1579,2.884,1580,4.451,1581,2.884,1582,2.884,1583,2.884,1584,2.665,1585,1.836,1586,2.169,1587,2.884,1588,2.884,1589,2.884,1590,2.884,1591,3.659,1592,2.884,1593,3.86,1594,2.884,1595,2.884,1596,2.884,1597,2.884]],["title/interfaces/ICourseGroupProperties.html",[0,0.495,746,4.195]],["body/interfaces/ICourseGroupProperties.html",[0,0.643,2,1.87,3,0.123,4,0.102,5,0.075,8,0.301,9,0.963,13,0.35,14,0.005,15,0.284,22,0.144,31,0.196,33,1.434,77,0.903,144,2.483,148,1.18,171,0.004,172,0.004,189,0.69,204,2.158,313,1.81,345,3.255,352,2.01,353,1.95,354,3.033,357,3.044,387,2.065,486,2.754,487,2.524,490,3.163,494,2.403,502,3.371,504,2.328,665,3.791,669,6.024,684,3.307,687,5.114,689,3.986,696,3.557,715,2.806,724,5.114,725,5.114,743,4.12,744,5.896,745,5.896,746,7.397,748,3.652,749,4.268,752,3.652,753,4.847,754,4.268,755,4.268,756,5.896]],["title/interfaces/ICourseProperties.html",[0,0.495,674,4.195]],["body/interfaces/ICourseProperties.html",[0,0.478,2,1.391,3,0.091,4,0.076,5,0.056,8,0.381,9,0.908,12,1.074,13,0.363,14,0.005,15,0.258,22,0.119,31,0.145,33,1.066,37,1.353,68,1.012,77,0.927,113,0.74,127,1.281,144,2.574,148,1.386,171,0.003,172,0.003,189,0.831,204,1.605,215,2.499,305,2.058,313,1.49,345,1.943,351,2.815,352,1.2,353,1.451,357,2.506,367,2.506,382,2.167,387,2.425,414,3.174,486,2.049,487,1.878,490,2.352,494,1.788,502,3.425,504,1.732,530,2.352,652,2.965,665,1.817,666,4.052,667,5.237,668,3.782,669,5.472,670,7.023,671,6.657,672,4.385,673,4.385,674,6.399,676,4.385,677,4.385,679,4.385,681,3.064,682,2.352,684,3.884,687,3.804,689,4.682,690,6.049,692,4.385,696,2.646,697,2.404,698,3.064,699,4.09,700,4.227,701,4.385,702,3.804,703,4.052,704,3.298,705,4.385,706,4.385,707,4.052,708,3.44,709,3.44,710,3.44,711,4.385,712,3.298,713,4.052,714,3.804,715,2.087,716,2.404,717,3.804,718,3.649,719,2.646,720,6.049,721,4.385,722,3.804,723,3.064,724,3.804,725,3.804,726,4.385,727,4.385,728,4.385,729,4.385,730,6.049,731,4.385,732,4.385,733,4.385,734,2.303,735,4.385,736,4.052,737,3.298,738,4.052,739,4.385,740,6.049,741,4.385,742,4.385]],["title/interfaces/ICreateNews.html",[0,0.495,2162,3.732]],["body/interfaces/ICreateNews.html",[0,0.942,2,1.745,3,0.114,4,0.095,5,0.07,8,0.281,9,0.922,10,1.32,12,1.035,13,0.381,14,0.005,15,0.269,22,0.166,171,0.004,172,0.004,180,3.331,189,0.728,215,1.698,305,2.638,306,3.856,307,4.348,308,5.242,313,1.355,378,2.494,407,4.478,447,3.719,480,2.207,665,3.212,668,3.376,716,3.016,769,3.759,770,4.343,771,4.383,772,4.806,798,3.085,807,4.159,809,3.843,2162,5.781,2163,4.771,2164,7.033,2165,5.501,2166,5.501,2167,5.501,2168,4.137,2169,4.137,2170,4.137,2171,4.522,2172,5.501,2173,4.522,2174,4.137]],["title/interfaces/ICurrentUser.html",[0,0.495,952,2.739]],["body/interfaces/ICurrentUser.html",[0,0.853,2,1.775,3,0.116,4,0.097,5,0.071,8,0.286,9,0.932,10,2.082,12,1.136,13,0.368,14,0.005,15,0.184,22,0.161,75,3.643,113,0.49,144,2.437,171,0.004,172,0.004,309,3.384,321,5.846,377,2.479,378,2.287,380,2.523,682,4.728,952,4.29,2175,4.855,2176,5.952,2177,5.103,2178,5.578,2179,5.687,2180,4.612,2181,6.76,2182,5.578,2183,5.172,2184,5.578,2185,4.051,2186,4.051,2187,4.601]],["title/interfaces/IDashboardRepo.html",[0,0.495,1300,3.937]],["body/interfaces/IDashboardRepo.html",[0,0.467,2,1.358,3,0.089,4,0.074,5,0.054,8,0.218,10,1.428,13,0.249,14,0.005,15,0.256,18,1.16,19,0.792,22,0.117,31,0.197,70,2.113,73,2.16,76,2.493,77,1.231,113,0.521,127,1.599,128,2.579,142,4.165,148,1.764,171,0.003,172,0.003,181,1.115,186,0.665,188,0.911,189,0.559,198,1.248,210,2.201,305,2.642,313,1.054,325,1.321,345,1.896,352,1.171,354,2.201,367,1.773,395,3.219,497,2.457,516,3.219,522,4.665,528,3.415,530,2.296,532,3.357,538,5.362,548,3.712,915,4.848,928,4.457,960,5.269,963,2.651,987,4.022,994,5.249,1015,2.99,1016,2.582,1027,2.806,1038,4.848,1055,3.993,1130,3.098,1183,4.665,1197,5.496,1209,3.955,1258,3.955,1268,3.518,1269,3.955,1270,5.948,1271,7.174,1272,3.518,1274,6.836,1279,4.28,1280,5.496,1281,3.955,1282,5.496,1283,5.496,1284,7.174,1285,4.473,1286,6.827,1287,8.141,1288,7.617,1289,3.955,1290,4.473,1291,3.955,1292,3.955,1293,3.955,1294,3.955,1295,3.955,1296,3.955,1297,3.955,1298,3.955,1299,3.955,1300,5.929,1301,3.955,1302,5.948,1303,4.28,1304,5.948,1305,4.28,1306,6.836,1307,4.28,1308,5.948,1309,4.28,2188,4.773,2189,4.773,2190,4.773]],["title/interfaces/IErrorType.html",[0,0.495,593,3.937]],["body/interfaces/IErrorType.html",[0,0.731,2,2.125,3,0.139,4,0.116,5,0.085,8,0.342,9,1.041,12,1.112,13,0.383,14,0.005,22,0.132,70,3.007,171,0.004,172,0.004,180,3.567,208,7.194,593,6.887,2191,7.47,2192,7.47]],["title/interfaces/IFileProperties.html",[0,0.495,491,3.732]],["body/interfaces/IFileProperties.html",[0,0.575,2,1.673,3,0.11,4,0.091,5,0.087,8,0.269,9,0.897,12,1.056,13,0.363,14,0.005,15,0.265,22,0.158,31,0.252,33,1.848,122,2.621,144,2.469,171,0.004,172,0.004,189,0.756,204,1.93,313,1.981,351,3.221,352,1.443,353,1.745,357,2.836,378,2.587,473,5.715,474,4.575,475,4.674,476,6.851,477,5.937,480,2.116,486,2.464,487,2.258,488,5.722,489,4.575,490,2.829,491,6.247,492,6.537,493,6.268,494,3.098,495,4.076,496,3.566,497,3.93,498,4.783,499,3.685,500,3.319,501,4.575,502,2.42,503,4.575,504,2.083,505,4.575,506,4.575,507,4.575,508,4.575,509,4.575,510,4.575,511,4.575,512,4.575,513,4.575,514,4.575,515,3.685]],["title/interfaces/IFindOptions.html",[0,0.495,2193,3.561]],["body/interfaces/IFindOptions.html",[0,0.848,2,2.052,3,0.135,4,0.112,5,0.082,8,0.33,9,1.019,13,0.348,14,0.005,22,0.17,37,2.4,171,0.004,172,0.004,189,0.813,447,4.373,798,3.627,1591,6.392,2193,6.099,2194,5.61,2195,5.61,2196,5.849,2197,5.509,2198,7.994,2199,7.503,2200,4.24,2201,4.24,2202,5.317,2203,7.186]],["title/interfaces/IGridElement.html",[0,0.495,985,3.414]],["body/interfaces/IGridElement.html",[0,0.477,2,0.893,3,0.059,4,0.049,5,0.036,8,0.308,9,0.573,10,1.912,12,1.045,13,0.333,14,0.005,15,0.144,19,0.521,22,0.156,31,0.2,35,2.254,37,2.628,77,1.343,113,0.469,127,1.576,142,3.236,147,2.754,148,1.492,167,3.576,171,0.002,172,0.002,180,3.297,181,0.819,186,0.672,188,0.82,189,0.503,198,1.262,305,2.661,369,1.129,383,1.405,401,2.627,415,3.842,452,1.34,458,1.292,480,2.773,504,1.112,610,4.531,716,1.544,734,2.294,811,3.074,814,2.954,819,1.793,928,3.464,960,1.846,961,2.117,962,2.314,963,3.737,964,3.591,966,2.314,967,5.682,973,3.162,974,3.427,977,2.954,981,2.314,982,5.198,984,4.159,985,5.756,987,4.079,989,2.314,990,4.912,992,2.314,994,3.62,995,2.314,997,5.018,998,2.314,1000,2.314,1002,2.314,1004,2.038,1005,2.208,1006,2.314,1007,3.427,1008,3.162,1009,3.427,1010,4.732,1011,4.367,1012,4.876,1013,6.234,1014,3.591,1015,1.967,1016,2.636,1017,2.117,1018,2.314,1019,1.793,1020,4.741,1021,2.314,1022,2.117,1023,2.314,1024,5.219,1025,3.591,1026,3.591,1027,2.864,1028,5.369,1029,4.96,1030,3.427,1031,5.369,1032,4.401,1033,5.369,1034,3.591,1035,4.401,1036,2.314,1037,4.045,1038,4.879,1039,3.591,1040,3.591,1041,2.314,1042,2.314,1043,2.314,1044,2.314,1045,2.314,1046,3.591,1047,2.314,1048,3.591,1049,2.208,1050,3.591,1051,2.314,1052,3.591,1053,2.314,1054,2.314,1055,1.448,1056,3.591,1057,2.117,1058,2.314,1059,3.427,1060,5.369,1061,3.427,1062,3.591,1063,2.314,1064,1.904,1065,2.314,1066,2.314,1067,2.314,1068,2.314,1069,2.314,1070,2.314,1071,2.314,1072,2.314,1073,2.314,1074,2.314,1075,3.591,1076,2.314,1077,4.401,1078,2.314,1079,3.591,1080,2.314,1081,2.314,1082,3.591,1083,2.954,1084,3.591,1085,2.314,1086,2.314,1087,2.314,1088,2.314,1089,2.314,1090,2.314,1091,2.314,1092,4.401,1093,2.314,1094,2.314,2139,4.369,2144,4.369,2145,4.369,2150,2.815,2204,3.14,2205,3.14,2206,3.14,2207,3.14,2208,3.14,2209,3.14]],["title/interfaces/IGridElementReference.html",[0,0.495,1013,3.414]],["body/interfaces/IGridElementReference.html",[0,0.505,2,0.962,3,0.063,4,0.052,5,0.039,8,0.286,9,0.606,10,1.947,12,1.046,13,0.309,14,0.005,15,0.152,19,0.561,22,0.159,31,0.208,35,2.322,37,2.621,77,1.357,127,1.596,142,3.365,147,2.884,148,1.528,167,3.326,171,0.002,172,0.002,180,3.354,305,2.715,369,1.216,383,1.487,401,2.732,415,2.945,452,1.442,458,1.391,480,2.517,504,1.197,610,4.667,716,1.662,734,2.428,811,3.219,814,3.127,819,1.93,928,3.601,960,1.987,961,2.28,962,2.492,963,3.885,964,3.802,966,2.492,967,4.609,973,3.347,974,3.627,977,3.127,981,2.492,982,5.354,984,4.301,985,5.741,987,4.241,989,2.492,990,5.08,992,2.492,994,3.791,995,2.492,997,5.128,998,2.492,1000,2.492,1002,2.492,1004,2.194,1005,2.378,1006,2.492,1007,3.627,1008,3.347,1009,3.627,1010,4.92,1011,4.54,1012,5.006,1013,6.188,1014,5.553,1015,2.118,1016,2.79,1017,2.28,1018,2.492,1019,1.93,1020,4.845,1021,2.492,1022,2.28,1023,2.492,1024,5.359,1025,3.802,1026,3.802,1027,3.032,1028,3.802,1029,2.492,1030,3.627,1031,3.802,1032,3.802,1033,3.802,1034,2.492,1035,3.802,1036,2.492,1037,4.184,1038,4.964,1039,3.802,1040,3.802,1041,2.492,1042,2.492,1043,2.492,1044,2.492,1045,2.492,1046,3.802,1047,2.492,1048,3.802,1049,2.378,1050,3.802,1051,2.492,1052,3.802,1053,2.492,1054,2.492,1055,1.559,1056,2.492,1057,2.28,1058,2.492,1059,3.627,1060,5.553,1061,3.627,1062,3.802,1063,2.492,1064,2.05,1065,2.492,1066,2.492,1067,2.492,1068,2.492,1069,2.492,1070,2.492,1071,2.492,1072,2.492,1073,2.492,1074,2.492,1075,3.802,1076,2.492,1077,4.609,1078,2.492,1079,3.802,1080,2.492,1081,2.492,1082,3.802,1083,3.127,1084,3.802,1085,2.492,1086,2.492,1087,2.492,1088,2.492,1089,2.492,1090,2.492,1091,2.492,1092,4.609,1093,2.492,1094,2.492]],["title/interfaces/ILessonProperties.html",[0,0.495,2210,4.195]],["body/interfaces/ILessonProperties.html",[0,0.644,2,1.874,3,0.123,4,0.102,5,0.075,8,0.409,9,0.964,12,1.005,13,0.35,14,0.005,15,0.264,22,0.144,31,0.196,33,1.436,113,0.77,171,0.004,172,0.004,189,0.691,204,2.162,313,1.812,351,3.021,352,1.616,353,1.954,357,3.047,387,2.069,480,3.214,486,2.76,487,2.529,500,2.864,502,2.71,504,2.333,665,3.792,715,2.811,718,3.563,719,3.563,748,3.659,749,4.275,752,3.659,754,4.275,755,4.275,2210,7.403,2211,5.907,2212,6.244,2213,4.633,2214,3.659,2215,5.458,2216,7.356,2217,5.907]],["title/interfaces/ILogger.html",[0,0.495,2036,3.561]],["body/interfaces/ILogger.html",[0,0.62,2,1.804,3,0.118,4,0.098,5,0.072,8,0.29,12,1.123,13,0.356,14,0.005,22,0.112,34,3.55,83,5.146,113,0.746,171,0.004,172,0.004,181,1.347,186,0.829,188,1.307,189,0.848,198,1.558,595,4.885,1701,5.613,2036,5.634,2218,6.342,2219,6.23,2220,5.402,2221,8.011,2222,8.011,2223,6.342,2224,6.342,2225,7.183,2226,7.276,2227,6.342,2228,7.183,2229,6.342,2230,6.342,2231,6.342,2232,7.183,2233,6.342,2234,5.687,2235,5.687]],["title/interfaces/INewsProperties.html",[0,0.495,805,3.561]],["body/interfaces/INewsProperties.html",[0,0.407,2,1.182,3,0.078,4,0.133,5,0.047,8,0.19,9,0.707,10,0.895,12,1.067,13,0.365,14,0.005,15,0.267,22,0.145,31,0.23,33,1.688,43,3.132,44,3.194,45,2.96,46,3.072,47,3.194,48,3.727,77,0.571,113,0.472,122,1.427,144,2.449,148,1.268,171,0.003,172,0.003,180,3.131,189,0.762,204,1.364,305,2.855,306,3.807,307,3.553,309,1.773,313,1.815,328,2.923,351,2.986,352,1.019,353,1.233,357,2.234,364,3.727,369,2.542,378,2.233,401,1.623,452,1.773,475,4.307,486,1.741,487,1.596,490,1.999,494,2.198,496,2.52,497,3.096,498,4.427,502,2.907,504,1.472,515,2.604,610,2.443,665,2.234,668,3.741,681,3.767,682,1.999,697,2.043,698,2.604,723,2.604,748,2.308,752,2.308,767,2.604,768,3.064,769,3.768,770,4.317,771,4.119,772,4.333,773,6.056,774,5.541,775,5.559,779,2.803,780,3.535,781,2.923,784,3.064,785,3.767,786,3.064,787,2.923,788,2.139,789,2.443,790,2.923,794,4.421,795,4.851,798,3.024,800,2.803,802,3.064,804,3.064,805,5.446,807,2.892,808,3.064,809,5.147,810,3.064,811,2.139,812,2.803,813,2.604,814,2.52,815,3.064,816,3.064,817,3.064,818,3.064,819,2.373,820,3.064,821,3.064,822,3.064,823,3.064,824,3.064,825,3.064,826,3.064,827,3.064,828,4.432,829,4.154,830,3.064,831,4.432,832,3.064,833,3.064,834,2.697,835,2.697,836,3.064]],["title/interfaces/INewsScope.html",[0,0.495,2173,3.732]],["body/interfaces/INewsScope.html",[0,0.947,2,1.779,3,0.117,4,0.097,5,0.071,8,0.286,9,0.933,10,1.346,12,0.853,13,0.377,14,0.005,15,0.271,22,0.167,171,0.004,172,0.004,180,2.286,189,0.815,215,1.73,305,2.662,306,3.903,307,4.387,308,5.563,313,1.381,378,1.803,407,4.533,447,3.791,480,3.138,665,3.24,668,3.406,716,3.074,769,3.716,770,4.369,771,3.008,772,3.298,798,3.144,807,4.196,809,3.917,2162,4.609,2163,4.863,2164,5.607,2165,5.607,2166,5.607,2167,5.607,2168,4.217,2169,4.217,2170,4.217,2171,4.609,2172,7.119,2173,5.852,2174,6.188]],["title/interfaces/IPagination.html",[0,0.495,2199,3.937]],["body/interfaces/IPagination.html",[0,0.848,2,2.052,3,0.135,4,0.112,5,0.082,8,0.33,9,1.019,13,0.348,14,0.005,22,0.17,37,2.774,171,0.004,172,0.004,189,0.813,447,4.373,798,3.627,1591,6.392,2193,5.073,2194,5.61,2195,5.61,2196,4.373,2197,4.119,2198,7.186,2199,7.232,2200,5.671,2201,5.671,2202,5.317,2203,7.186]],["title/interfaces/IResolvedUser.html",[0,0.495,2181,3.732]],["body/interfaces/IResolvedUser.html",[0,0.847,2,1.751,3,0.115,4,0.096,5,0.07,8,0.282,9,0.924,10,2.109,12,1.133,13,0.378,14,0.005,15,0.182,22,0.161,75,2.445,113,0.483,144,1.636,171,0.004,172,0.004,309,4.022,321,4.538,377,3.624,378,2.78,380,3.688,682,4.637,952,3.33,2175,4.788,2176,3.995,2177,5.085,2178,4.329,2179,5.091,2180,4.355,2181,6.383,2182,4.329,2183,5.101,2184,6.417,2185,5.922,2186,5.922,2187,4.538]],["title/interfaces/IRole.html",[0,0.495,2184,3.561]],["body/interfaces/IRole.html",[0,0.877,2,1.888,3,0.124,4,0.103,5,0.076,8,0.304,9,0.968,10,2.144,12,1.13,13,0.351,14,0.005,15,0.196,22,0.165,75,2.636,113,0.736,144,1.763,171,0.004,172,0.004,309,3.517,321,4.892,377,2.636,378,2.377,380,2.682,682,4.312,952,3.59,2175,5.161,2176,4.307,2177,4.728,2178,4.668,2179,5.27,2180,4.508,2181,6.075,2182,4.668,2183,5.499,2184,6.305,2185,4.307,2186,4.307,2187,4.892]],["title/interfaces/IRoleProperties.html",[0,0.495,2236,4.195]],["body/interfaces/IRoleProperties.html",[0,0.611,2,1.775,3,0.116,4,0.097,5,0.071,8,0.399,9,0.932,12,1.069,13,0.344,14,0.005,15,0.234,22,0.14,31,0.186,33,1.361,113,0.759,148,1.565,171,0.004,172,0.004,189,0.772,204,2.048,309,4.039,313,1.752,351,2.947,352,1.531,353,1.851,357,2.946,367,2.319,415,3.564,487,2.396,494,2.282,502,2.568,504,2.21,684,4.383,696,4.29,715,2.663,718,3.376,719,3.376,788,3.213,798,3.988,907,3.564,1355,4.601,1774,5.348,1932,4.855,2131,4.601,2177,5.338,2180,4.761,2236,7.222,2237,5.597,2238,5.597,2239,4.855,2240,4.601,2241,6.168,2242,7.111,2243,5.597,2244,5.597,2245,4.855]],["title/interfaces/ISchoolProperties.html",[0,0.495,2246,4.195]],["body/interfaces/ISchoolProperties.html",[0,0.713,2,2.073,3,0.136,4,0.113,5,0.083,8,0.333,9,1.025,12,1.04,13,0.273,14,0.005,15,0.258,22,0.154,31,0.217,33,1.589,113,0.777,171,0.004,172,0.004,204,2.391,313,1.927,342,5.466,351,2.95,352,1.787,353,2.161,487,2.798,504,2.58,668,2.845,715,3.109,718,3.942,719,3.942,2168,4.914,2246,7.739,2247,6.534]],["title/interfaces/IStorageProviderProperties.html",[0,0.495,2248,4.195]],["body/interfaces/IStorageProviderProperties.html",[0,0.639,2,1.857,3,0.122,4,0.101,5,0.074,8,0.299,9,0.959,12,1.121,13,0.36,14,0.005,15,0.263,22,0.144,31,0.194,33,1.423,171,0.004,172,0.004,189,0.687,204,2.142,313,1.802,351,3.244,352,1.601,353,1.936,357,3.03,487,2.506,488,3.727,502,2.685,504,2.311,715,2.785,1713,6.344,1889,7.95,1893,7.462,1895,7.611,2248,7.372,2249,5.853,2250,7.95,2251,5.853,2252,5.853,2253,5.853,2254,5.853,2255,5.853,2256,5.853,2257,5.853,2258,5.853,2259,5.853,2260,5.853]],["title/interfaces/ISubmissionProperties.html",[0,0.495,2261,3.937]],["body/interfaces/ISubmissionProperties.html",[0,0.464,2,1.349,3,0.088,4,0.074,5,0.107,8,0.217,9,0.776,12,1.021,13,0.371,14,0.005,15,0.271,22,0.116,31,0.141,33,1.034,37,2.39,77,0.907,127,1.096,144,2.486,148,1.364,171,0.003,172,0.003,189,0.827,204,1.556,305,2.015,313,1.458,351,2.778,352,1.163,353,1.406,357,2.453,387,2.58,452,2.023,458,3.125,480,1.706,486,1.986,487,1.82,490,2.28,494,1.733,502,3.68,504,1.679,684,3.82,689,2.874,696,2.565,697,2.331,715,2.023,743,6.148,780,2.787,819,2.707,1083,4.003,1818,5.078,2261,5.908,2262,4.251,2263,6.718,2264,7.157,2265,7.157,2266,8.228,2267,5.805,2268,8.228,2269,4.63,2270,7.754,2271,4.251,2272,4.251,2273,4.251,2274,2.97,2275,2.787,2276,4.251,2277,4.251,2278,4.251,2279,4.251,2280,4.251,2281,5.471,2282,5.921,2283,4.251,2284,2.874,2285,4.251,2286,4.251,2287,4.251,2288,4.251,2289,4.251,2290,3.335,2291,4.251,2292,6.812,2293,4.251,2294,5.921,2295,4.251,2296,5.123,2297,4.251,2298,4.251,2299,4.251,2300,4.251,2301,4.251]],["title/interfaces/ITaskProperties.html",[0,0.495,2302,3.561]],["body/interfaces/ITaskProperties.html",[0,0.501,2,0.953,3,0.063,4,0.052,5,0.038,8,0.319,9,0.731,10,1.103,12,0.884,13,0.347,14,0.005,15,0.243,22,0.132,31,0.152,33,0.731,35,2.483,37,2.19,53,1.486,75,2.035,77,1.258,81,4.453,113,0.697,122,1.151,127,1.643,144,2.256,148,1.25,171,0.002,172,0.002,186,0.292,189,0.803,204,1.1,215,1.721,305,2.512,313,1.374,351,2.537,352,1.257,353,0.994,357,1.903,367,2.788,368,1.686,369,1.206,374,1.914,378,2.449,387,1.953,392,2.703,458,2.559,480,3.194,486,1.404,487,1.287,490,1.612,494,1.225,500,2.228,502,2.866,504,1.187,567,2.032,584,1.914,665,3.298,667,3.455,684,2.577,689,2.032,696,1.813,697,1.648,700,2.1,710,2.358,712,2.26,715,1.43,718,1.813,719,1.813,748,1.862,749,2.176,752,1.862,754,4.521,755,2.176,780,1.971,789,3.012,853,5.319,882,2.176,1019,2.926,1055,2.869,1109,2.26,1341,2.465,1818,1.971,1949,2.26,2214,4.932,2269,3.96,2274,5.319,2275,4.411,2284,4.55,2290,2.358,2296,3.455,2302,4.375,2303,2.471,2304,5.278,2305,5.136,2306,5.136,2307,2.607,2308,2.607,2309,5.532,2310,5.726,2311,5.061,2312,5.51,2313,4.957,2314,2.26,2315,2.607,2316,2.607,2317,4.585,2318,2.471,2319,2.607,2320,2.26,2321,2.607,2322,2.607,2323,2.607,2324,2.358,2325,2.607,2326,2.471,2327,2.607,2328,2.607,2329,2.607,2330,2.607,2331,3.985,2332,3.985,2333,2.607,2334,2.607,2335,3.985,2336,2.607,2337,2.607,2338,2.176,2339,2.607,2340,2.607,2341,2.607,2342,2.032,2343,2.607,2344,2.607,2345,3.985,2346,4.838,2347,2.607,2348,3.985,2349,2.607,2350,2.607,2351,2.607,2352,2.607,2353,4.838,2354,2.607,2355,2.607,2356,2.607,2357,2.607,2358,2.607,2359,2.607,2360,2.607,2361,5.134,2362,2.607,2363,2.607,2364,2.607,2365,2.26,2366,3.985,2367,2.607,2368,2.607,2369,2.607,2370,2.607,2371,2.607,2372,3.985,2373,2.1,2374,2.176,2375,2.607,2376,2.607,2377,2.607,2378,2.607,2379,2.607,2380,2.607,2381,2.607,2382,2.607,2383,3.985,2384,2.607,2385,2.607,2386,2.607,2387,2.607,2388,1.971,2389,1.726,2390,3.777,2391,2.607,2392,5.417,2393,2.607,2394,2.607,2395,2.607]],["title/interfaces/ITaskStatus.html",[0,0.495,2309,3.732]],["body/interfaces/ITaskStatus.html",[0,0.518,2,0.995,3,0.065,4,0.054,5,0.04,8,0.326,9,0.75,10,1.139,12,0.821,13,0.33,14,0.005,15,0.247,22,0.135,31,0.157,33,0.762,35,2.236,37,2.559,53,1.55,75,2.102,77,1.27,81,4.519,113,0.656,122,1.2,127,1.652,144,1.891,148,1.278,171,0.003,172,0.003,186,0.305,204,1.147,215,1.766,305,2.549,313,1.41,351,2.585,352,1.298,353,1.037,357,1.966,367,2.84,368,1.758,369,1.258,374,1.996,378,2.053,387,2.004,392,2.791,458,2.626,480,3.326,486,1.465,487,1.342,490,1.682,494,1.278,500,2.301,502,2.928,504,1.238,567,2.12,584,1.996,665,2.84,667,3.545,684,2.661,689,2.12,696,1.891,697,1.719,700,2.191,710,2.459,712,2.358,715,1.492,718,1.891,719,1.891,748,1.942,749,2.269,752,1.942,754,4.62,755,2.269,780,2.055,789,3.11,853,5.715,882,2.269,1019,3.021,1055,2.944,1109,2.358,1341,2.545,1818,2.055,1949,2.358,2214,4.246,2269,4.018,2274,4.79,2275,3.752,2284,3.208,2290,2.459,2296,3.568,2302,3.721,2303,2.577,2304,3.721,2305,4.143,2306,4.143,2307,2.719,2308,2.719,2309,5.929,2310,6.151,2311,5.801,2312,5.92,2313,5.518,2314,2.358,2315,2.719,2316,2.719,2317,4.705,2318,2.577,2319,2.719,2320,2.358,2321,2.719,2322,2.719,2323,2.719,2324,2.459,2325,2.719,2326,2.577,2327,2.719,2328,2.719,2329,2.719,2330,2.719,2331,4.115,2332,4.115,2333,2.719,2334,2.719,2335,4.115,2336,2.719,2337,2.719,2338,2.269,2339,2.719,2340,2.719,2341,2.719,2342,2.12,2343,2.719,2344,2.719,2345,4.115,2346,4.965,2347,2.719,2348,4.115,2349,2.719,2350,2.719,2351,2.719,2352,2.719,2353,4.965,2354,2.719,2355,2.719,2356,2.719,2357,2.719,2358,2.719,2359,2.719,2360,2.719,2361,5.247,2362,2.719,2363,2.719,2364,2.719,2365,2.358,2366,4.115,2367,2.719,2368,2.719,2369,2.719,2370,2.719,2371,2.719,2372,4.115,2373,2.191,2374,2.269,2375,2.719,2376,2.719,2377,2.719,2378,2.719,2379,2.719,2380,2.719,2381,2.719,2382,2.719,2383,4.115,2384,2.719,2385,2.719,2386,2.719,2387,2.719,2388,2.055,2389,1.8,2390,3.9,2391,2.719,2392,5.536,2393,2.719,2394,2.719,2395,2.719]],["title/interfaces/ITeamProperties.html",[0,0.495,2396,4.195]],["body/interfaces/ITeamProperties.html",[0,0.713,2,2.073,3,0.136,4,0.113,5,0.083,8,0.333,9,1.025,12,1.04,13,0.273,14,0.005,15,0.258,22,0.154,31,0.217,33,1.589,113,0.777,171,0.004,172,0.004,204,2.391,313,1.927,342,5.466,351,2.95,352,1.787,353,2.161,487,2.798,504,2.58,715,3.109,718,3.942,719,3.942,807,3.505,2169,4.914,2396,7.739,2397,6.534]],["title/interfaces/IUserProperties.html",[0,0.495,2398,4.195]],["body/interfaces/IUserProperties.html",[0,0.589,2,1.713,3,0.112,4,0.093,5,0.069,8,0.428,9,0.911,12,1.094,13,0.365,14,0.005,15,0.267,22,0.136,31,0.179,33,1.313,113,0.673,120,5.866,144,1.6,148,1.081,171,0.004,172,0.004,189,0.762,204,1.976,313,1.712,351,3.06,352,1.477,353,1.786,357,2.879,387,1.891,486,2.522,487,2.312,494,2.201,502,3.188,504,2.132,668,3.928,681,3.772,682,2.896,684,3.028,696,3.257,698,3.772,715,2.569,722,4.683,723,3.772,1774,5.226,2177,5.055,2179,3.539,2180,4.55,2185,6.076,2186,6.076,2241,4.683,2245,4.683,2398,7.101,2399,5.399,2400,5.399,2401,5.399,2402,5.399,2403,5.399,2404,5.399,2405,5.399,2406,5.399,2407,5.399,2408,5.399,2409,5.399]],["title/interfaces/InlineAttachment.html",[0,0.495,240,3.286]],["body/interfaces/InlineAttachment.html",[0,0.978,2,1.916,3,0.126,4,0.105,5,0.077,8,0.308,9,0.978,12,1.125,13,0.252,14,0.005,22,0.119,33,2.111,113,0.529,171,0.004,172,0.004,234,5.399,235,4.543,236,6.117,237,6.529,238,4.543,239,4.543,240,5.857,241,4.543,242,6.356,243,4.543,244,5.857,245,4.372,246,4.543,247,5.399,248,5.61,249,5.61,250,5.399,251,4.75,252,4.372,253,4.543,254,4.543,255,4.543]],["title/modules/InterceptorModule.html",[256,1.309,642,3.732]],["body/modules/InterceptorModule.html",[3,0.128,4,0.106,5,0.078,14,0.005,15,0.268,19,1.135,22,0.12,31,0.203,53,3.722,171,0.004,172,0.004,215,1.893,223,5.32,256,2.172,258,2.583,270,2.814,366,5.261,367,2.541,428,4.658,523,3.7,642,6.189,656,4.936,657,6.698,1168,3.583,1353,4.664,1538,5.45,1616,4.439,1625,5.906,1627,4.223,1767,6.53,2410,6.84,2411,6.957,2412,6.53,2413,5.261,2414,9.476,2415,5.906,2416,6.957,2417,7.851,2418,4.613]],["title/injectables/JwtAuthGuard.html",[18,0.885,2419,4.195]],["body/injectables/JwtAuthGuard.html",[3,0.146,4,0.121,5,0.089,14,0.005,15,0.268,18,1.59,19,1.296,22,0.138,31,0.232,33,1.704,171,0.004,172,0.004,273,6.077,297,2.602,2419,7.533,2420,7.814,2421,7.814,2422,7.814,2423,7.814]],["title/interfaces/JwtConstants.html",[0,0.495,278,3.732]],["body/interfaces/JwtConstants.html",[0,0.663,2,1.927,3,0.126,4,0.105,5,0.077,8,0.31,9,0.981,12,1.094,13,0.354,14,0.005,15,0.2,22,0.147,75,2.691,122,2.326,127,1.385,171,0.004,172,0.004,278,6.961,295,3.665,367,2.517,407,4.766,855,4.994,1239,3.665,2176,5.418,2424,6.075,2425,8.696,2426,7.543,2427,7.485,2428,6.775,2429,6.775,2430,6.917,2431,5.614,2432,4.994,2433,4.569,2434,6.775,2435,6.075,2436,6.075,2437,6.075,2438,6.775,2439,6.075,2440,4.994,2441,5.269,2442,6.775,2443,5.614,2444,6.775,2445,5.614,2446,6.075,2447,6.775,2448,6.775,2449,6.075,2450,6.075]],["title/interfaces/JwtPayload.html",[0,0.495,2451,4.195]],["body/interfaces/JwtPayload.html",[0,0.653,2,1.898,3,0.125,4,0.104,5,0.076,8,0.305,9,0.972,12,1.11,13,0.369,14,0.005,15,0.197,22,0.118,33,1.803,37,2.723,171,0.004,172,0.004,325,1.847,367,3.49,952,4.861,2435,8.423,2436,8.423,2437,8.423,2439,8.423,2440,6.924,2441,7.306,2445,6.853,2446,7.416,2451,6.853,2452,6.674,2453,6.674,2454,6.853]],["title/injectables/JwtStrategy.html",[18,0.885,264,3.937]],["body/injectables/JwtStrategy.html",[3,0.112,4,0.093,5,0.069,8,0.275,13,0.29,14,0.005,15,0.288,18,1.354,19,0.997,22,0.106,31,0.179,33,1.311,35,1.758,68,1.244,70,2.466,73,2.245,75,2.387,76,2.002,77,0.826,111,2.772,113,0.607,127,1.284,128,2.172,144,1.597,171,0.004,172,0.004,181,1.301,186,0.675,188,1.064,189,0.652,198,0.984,204,1.972,264,6.021,265,7.183,273,4.675,276,5.39,278,4.431,279,4.98,281,5.39,297,2.002,326,2.308,367,2.876,368,4.306,413,3.338,500,2.613,1545,3.432,1568,4.053,2129,4.675,2176,3.901,2180,3.023,2412,6.021,2441,6.021,2451,7.493,2455,6.011,2456,6.011,2457,7.062,2458,6.011,2459,7.742,2460,6.011,2461,8.109,2462,6.011,2463,4.675,2464,5.39,2465,5.774,2466,6.011,2467,6.011,2468,6.011,2469,6.011,2470,6.011,2471,6.011,2472,6.011,2473,6.011,2474,6.011,2475,6.011,2476,5.39,2477,6.011,2478,5.024,2479,6.011,2480,6.011,2481,4.98,2482,6.011,2483,5.39,2484,5.39,2485,6.011,2486,6.011]],["title/injectables/JwtValidationAdapter.html",[18,0.885,265,3.732]],["body/injectables/JwtValidationAdapter.html",[3,0.108,4,0.09,5,0.066,8,0.264,10,1.916,12,1.088,13,0.282,14,0.005,15,0.222,18,1.318,19,0.957,22,0.102,31,0.172,43,3.34,44,3.407,45,3.157,46,3.277,47,3.407,48,3.975,49,5.862,73,2.483,76,2.302,113,0.591,127,1.251,128,2.114,171,0.004,172,0.004,181,1.267,186,0.657,188,1.036,189,0.635,198,1.234,215,1.596,265,5.556,297,1.921,327,3.549,366,5.577,368,3.79,420,5.397,500,2.508,567,4.569,883,4.569,1356,4.431,1585,4.303,2129,5.862,2176,5.778,2178,5.301,2179,4.431,2441,7.698,2454,6.245,2465,6.601,2487,7.528,2488,5.172,2489,7.537,2490,7.537,2491,7.537,2492,5.768,2493,7.537,2494,5.768,2495,7.537,2496,6.245,2497,5.556,2498,7.537,2499,7.537,2500,6.758,2501,6.758,2502,5.768,2503,7.537,2504,5.768,2505,5.768,2506,5.768,2507,5.768,2508,5.768,2509,5.768]],["title/modules/LearnroomModule.html",[256,1.309,2510,3.732]],["body/modules/LearnroomModule.html",[3,0.13,4,0.108,5,0.079,14,0.005,15,0.289,19,1.157,22,0.123,31,0.207,171,0.004,172,0.004,256,2.198,258,2.633,259,3.694,266,4.273,267,3.216,268,2.976,270,3.496,271,3.032,911,7.593,912,4.177,939,7.33,940,6.253,1183,6.994,1268,6.263,1322,6.253,1627,3.507,1767,5.424,2510,7.49,2511,6.253,2512,6.253,2513,6.974,2514,6.974,2515,6.974,2516,6.974]],["title/classes/Lesson.html",[31,0.151,2214,2.812]],["body/classes/Lesson.html",[0,0.563,3,0.107,4,0.089,5,0.066,8,0.384,9,0.885,10,1.62,12,0.956,13,0.355,14,0.005,15,0.248,22,0.133,31,0.171,33,1.642,68,1.192,113,0.743,148,1.351,171,0.004,172,0.004,174,1.117,186,0.853,188,0.791,189,0.485,191,3.305,204,1.89,313,1.663,344,3.213,345,2.287,346,2.529,347,2.603,349,2.603,351,3.122,352,1.412,353,1.708,357,3.584,377,2.991,378,2.171,380,3.043,382,2.353,383,2.419,386,2.77,387,2.364,452,2.457,480,2.072,482,2.831,483,2.831,484,2.831,485,2.831,486,2.412,487,2.211,500,3.273,502,3.097,504,2.666,665,3.635,685,4.479,715,2.457,718,3.115,719,3.115,748,4.182,749,4.886,752,3.198,754,3.737,755,3.737,2210,7.371,2211,5.164,2212,5.774,2213,4.05,2214,4.182,2215,4.771,2216,6.751,2217,5.164,2517,7.529,2518,5.759,2519,5.759,2520,5.759]],["title/injectables/LessonRepo.html",[18,0.885,2521,3.732]],["body/injectables/LessonRepo.html",[3,0.12,4,0.1,5,0.073,8,0.295,13,0.348,14,0.005,15,0.274,18,1.415,19,1.069,22,0.113,31,0.192,68,1.334,70,2.053,73,2.319,76,2.093,77,0.886,113,0.635,127,1.343,148,1.157,171,0.004,172,0.004,181,1.361,186,0.705,188,1.112,189,0.682,198,1.055,297,2.147,305,2.831,325,1.783,326,2.474,352,1.581,353,1.911,367,3.006,387,2.024,407,4.62,480,2.318,527,3.789,528,4.776,530,3.892,595,3.241,763,4.533,847,3.658,860,5.34,1493,6.52,2197,4.62,2212,4.183,2213,5.691,2214,4.494,2215,6.705,2389,4.166,2521,5.965,2522,6.445,2523,6.445,2524,8.093,2525,6.445,2526,6.705,2527,6.705,2528,6.445,2529,6.445,2530,6.445,2531,6.445]],["title/classes/LessonScope.html",[31,0.151,2527,4.195]],["body/classes/LessonScope.html",[3,0.116,4,0.097,5,0.071,8,0.286,9,0.932,13,0.355,14,0.005,15,0.234,22,0.11,31,0.186,33,1.729,35,2.682,77,1.09,113,0.684,167,2.615,171,0.004,172,0.004,174,1.211,181,1.333,186,0.825,188,1.198,189,0.734,191,3.238,198,1.427,305,2.798,325,1.727,382,1.751,383,1.8,480,3.136,665,2.319,763,5.578,847,4.443,854,5.846,857,2.879,861,5.846,862,5.846,864,5.846,865,4.39,866,4.855,867,5.657,868,4.855,870,4.601,871,5.578,872,4.855,2212,4.051,2214,3.467,2527,8.017,2532,8.717,2533,5.172,2534,7.111,2535,7.931,2536,7.111,2537,6.242,2538,7.931,2539,6.242,2540,7.931,2541,5.597]],["title/injectables/Logger.html",[18,0.885,1633,2.891]],["body/injectables/Logger.html",[3,0.127,4,0.105,5,0.077,14,0.005,15,0.247,18,1.461,19,1.126,22,0.12,31,0.202,33,1.822,171,0.004,172,0.004,181,1.141,297,2.261,323,4.406,327,3.935,369,2.442,382,1.904,405,5.004,413,3.77,590,3.414,635,3.337,847,3.778,1016,4.521,1168,3.566,1585,3.876,1623,3.414,1633,5.54,1701,4.898,1743,5.279,1778,4.253,1831,4.774,1859,4.406,1948,4.253,1970,5.004,2036,6.646,2220,6.106,2542,6.788,2543,9.45,2544,6.788,2545,6.788,2546,4.774,2547,5.279,2548,5.624,2549,4.577,2550,7.494,2551,5.004,2552,6.788,2553,6.788,2554,5.004,2555,6.087,2556,4.406,2557,6.788,2558,6.788,2559,6.788]],["title/modules/LoggerModule.html",[256,1.309,643,3.172]],["body/modules/LoggerModule.html",[3,0.137,4,0.114,5,0.084,14,0.005,15,0.259,19,1.219,22,0.129,31,0.219,171,0.004,172,0.004,256,2.268,258,2.774,259,3.812,266,4.409,267,3.388,268,3.135,270,3.607,292,4.129,643,6.374,1633,5.968,2560,6.588,2561,6.588,2562,6.588,2563,7.347,2564,7.347]],["title/interfaces/Mail.html",[0,0.495,251,2.891]],["body/interfaces/Mail.html",[0,0.963,2,1.785,3,0.117,4,0.097,5,0.072,8,0.287,9,0.935,12,1.133,13,0.363,14,0.005,22,0.11,33,2.003,113,0.492,171,0.004,172,0.004,189,0.839,234,5.164,235,4.231,236,5.671,237,5.366,238,4.231,239,4.231,240,5.164,241,4.231,242,4.231,243,4.231,244,5.671,245,4.073,246,4.231,247,5.963,248,5.366,249,5.366,250,5.963,251,5.532,252,5.963,253,6.196,254,6.196,255,6.196]],["title/interfaces/MailAttachment.html",[0,0.495,236,3.286]],["body/interfaces/MailAttachment.html",[0,0.974,2,1.884,3,0.124,4,0.103,5,0.075,8,0.303,9,0.967,12,1.132,13,0.336,14,0.005,22,0.117,33,2.043,113,0.735,171,0.004,172,0.004,234,5.343,235,4.467,236,6.081,237,5.551,238,6.318,239,6.318,240,5.343,241,4.467,242,4.467,243,4.467,244,5.813,245,4.299,246,4.467,247,5.343,248,5.551,249,5.551,250,5.343,251,4.7,252,4.299,253,4.467,254,4.467,255,4.467]],["title/interfaces/MailContent.html",[0,0.495,244,3.286]],["body/interfaces/MailContent.html",[0,0.975,2,1.888,3,0.124,4,0.103,5,0.076,8,0.304,9,0.968,12,1.123,13,0.309,14,0.005,22,0.117,33,2.044,113,0.521,171,0.004,172,0.004,189,0.694,234,6.085,235,4.475,236,5.818,237,5.558,238,4.475,239,4.475,240,6.085,241,4.475,242,4.475,243,4.475,244,6.085,245,6.085,246,6.322,247,5.349,248,5.558,249,5.558,250,5.349,251,4.706,252,4.307,253,4.475,254,4.475,255,4.475]],["title/modules/MailModule.html",[256,1.309,2565,3.561]],["body/modules/MailModule.html",[0,0.635,3,0.121,4,0.101,5,0.074,12,0.953,13,0.333,14,0.005,15,0.262,19,1.077,22,0.114,24,5.276,31,0.193,71,3.674,77,1.117,113,0.638,127,1.349,171,0.004,172,0.004,181,1.091,186,0.566,188,0.892,189,0.547,198,1.063,256,2.296,258,2.451,270,2.671,271,2.822,292,3.057,401,3.174,1627,3.265,1628,4.213,1752,5.049,1753,5.717,1756,5.985,2565,6.242,2566,5.049,2567,7.708,2568,6.492,2569,7.354,2570,4.785,2571,4.378,2572,6.542,2573,5.821,2574,5.992,2575,5.992,2576,6.322,2577,5.379,2578,5.379,2579,5.379,2580,5.379,2581,6.736,2582,5.049,2583,5.379,2584,5.821,2585,5.821,2586,5.821]],["title/interfaces/MailModuleOptions.html",[0,0.495,2567,4.195]],["body/interfaces/MailModuleOptions.html",[0,0.627,2,1.823,3,0.12,4,0.099,5,0.073,8,0.293,9,0.948,12,1.084,13,0.358,14,0.005,15,0.26,19,1.064,22,0.113,24,6.193,31,0.191,71,2.897,77,1.108,113,0.503,127,1.338,171,0.004,172,0.004,256,2.282,270,2.637,271,2.787,292,3.018,401,2.503,1627,3.223,1628,4.16,1753,4.508,1756,5.438,2565,5.672,2566,4.985,2567,7.311,2569,7.311,2570,4.725,2571,4.323,2572,6.504,2573,5.748,2574,7.034,2575,7.034,2576,6.272,2577,5.311,2578,5.311,2579,5.311,2580,5.311,2581,6.682,2582,4.985,2583,5.311,2584,5.748,2585,5.748,2586,5.748]],["title/injectables/MailService.html",[18,0.885,2572,3.732]],["body/injectables/MailService.html",[0,0.652,3,0.124,4,0.103,5,0.076,8,0.305,12,0.887,13,0.31,14,0.005,15,0.265,17,3.7,18,1.445,19,1.105,22,0.117,31,0.198,35,2.416,68,1.71,70,2.632,71,4.059,72,5.279,73,2.354,76,2.137,113,0.648,122,2.287,128,1.869,171,0.004,172,0.004,181,1.389,186,0.72,188,1.135,189,0.696,198,1.091,251,5.36,297,2.219,1168,3.525,2570,4.91,2571,4.492,2572,6.089,2574,4.91,2575,4.91,2587,5.973,2588,6.845,2589,6.662,2590,8.819,2591,7.779,2592,6.662,2593,7.407,2594,6.662,2595,5.973,2596,5.973,2597,5.973,2598,5.973,2599,5.181]],["title/interfaces/MailServiceOptions.html",[0,0.495,2591,4.195]],["body/interfaces/MailServiceOptions.html",[0,0.68,2,1.976,3,0.13,4,0.108,5,0.079,8,0.318,9,0.996,12,1.067,13,0.318,14,0.005,15,0.27,17,3.858,18,1.482,19,1.153,22,0.122,31,0.207,35,2.479,68,1.438,70,2.701,71,3.14,72,4.083,73,1.821,76,1.797,122,2.385,128,1.949,171,0.004,172,0.004,251,4.84,1168,2.964,2570,5.12,2571,4.684,2572,5.12,2574,7.021,2575,7.021,2587,6.229,2590,8.203,2591,7.58,2593,6.229,2595,6.229,2596,6.229,2597,6.229,2598,6.229,2599,5.402]],["title/modules/ManagementModule.html",[256,1.309,2600,3.732]],["body/modules/ManagementModule.html",[3,0.105,4,0.087,5,0.064,12,0.603,13,0.21,14,0.005,15,0.298,19,0.931,22,0.099,31,0.167,43,2.488,44,2.537,45,2.352,46,2.441,47,2.537,77,0.771,117,3.643,137,3.786,138,3.517,139,3.786,144,1.491,148,1.008,171,0.004,172,0.004,256,2.143,258,2.12,259,3.219,266,3.723,267,2.589,268,2.395,270,3.408,271,3.219,320,2.589,325,1.553,352,1.816,353,1.665,367,2.085,559,6.613,573,3.403,618,6.103,622,3.037,912,3.64,1004,3.643,1330,5.758,1336,6.103,1350,4.366,1351,4.366,1370,6.865,1396,6.931,1400,6.341,1506,4.651,1507,3.517,1508,4.651,1509,4.651,1623,2.823,1829,3.118,1976,6.931,2025,6.135,2026,6.135,2027,6.135,2600,7.57,2601,5.034,2602,5.034,2603,5.614,2604,5.614,2605,4.366,2606,4.366,2607,6.639,2608,6.639,2609,5.758,2610,5.034,2611,5.614,2612,5.614,2613,5.614,2614,5.614,2615,5.614,2616,4.651,2617,5.614,2618,4.138,2619,4.138,2620,5.034,2621,6.639,2622,5.034,2623,4.366,2624,3.643,2625,5.614]],["title/modules/MongoMemoryDatabaseModule.html",[256,1.309,2626,3.937]],["body/modules/MongoMemoryDatabaseModule.html",[3,0.097,4,0.08,5,0.059,13,0.263,14,0.005,15,0.277,17,3.894,19,0.859,22,0.15,31,0.154,35,2.326,68,1.071,70,1.649,71,3.853,73,2.335,76,2.057,77,1.171,113,0.406,127,1.524,128,2.499,171,0.003,172,0.003,181,0.87,186,0.611,188,0.711,189,0.436,198,1.148,256,2.205,258,1.954,270,2.129,271,2.25,292,2.436,320,2.386,325,1.432,352,1.72,353,1.535,355,4.024,367,1.922,401,2.738,420,4.251,458,2.129,573,5.401,595,2.602,656,3.042,697,2.544,1016,2.799,1117,2.602,1118,3.242,1413,3.358,1431,3.358,1616,3.358,1623,3.526,1627,3.526,1752,4.024,1753,4.931,1756,5.749,2083,3.489,2342,3.137,2497,3.814,2556,3.358,2605,6.63,2606,4.024,2609,5.453,2619,5.168,2626,6.185,2627,6.589,2628,6.924,2629,7.131,2630,4.64,2631,7.644,2632,5.175,2633,8.91,2634,5.175,2635,6.287,2636,6.287,2637,7.131,2638,8.236,2639,5.175,2640,6.287,2641,4.64,2642,6.287,2643,4.64,2644,4.64,2645,4.64,2646,4.287,2647,3.814,2648,3.814,2649,4.287,2650,3.639,2651,4.64,2652,4.287,2653,4.024,2654,4.64,2655,4.64,2656,4.64,2657,4.64,2658,4.64,2659,4.64,2660,5.175,2661,5.175,2662,4.64,2663,7.012,2664,5.809,2665,3.639,2666,3.814,2667,4.64,2668,5.175,2669,5.175]],["title/classes/MoveElementParams.html",[31,0.151,923,3.937]],["body/classes/MoveElementParams.html",[3,0.126,4,0.105,5,0.077,8,0.309,9,1.061,13,0.312,14,0.005,15,0.246,22,0.147,31,0.281,37,2.5,111,3.113,142,3.246,171,0.004,172,0.004,174,1.31,186,0.726,189,0.569,215,1.868,346,2.183,413,3.749,587,3.854,769,2.591,876,2.991,878,3.749,901,4.763,902,4.896,903,2.88,905,6.139,907,3.854,923,6.477,928,3.475,984,3.854,1037,3.749,1057,4.551,1239,3.651,2170,4.551,2670,6.052,2671,8.027,2672,8.329,2673,6.75,2674,6.75,2675,8.099,2676,8.457,2677,5.593,2678,5.593,2679,5.593,2680,4.551,2681,5.249,2682,7.484,2683,5.593]],["title/classes/MoveElementPosition.html",[31,0.151,2671,4.195]],["body/classes/MoveElementPosition.html",[3,0.118,4,0.098,5,0.072,8,0.29,9,1.083,13,0.329,14,0.005,15,0.236,22,0.141,31,0.283,37,2.687,111,3.69,142,4.22,171,0.004,172,0.004,174,1.228,186,0.765,189,0.776,215,2.214,346,2.3,413,4.444,587,4.569,769,3.072,876,3.546,878,4.444,901,4.674,902,4.704,903,2.701,905,5.898,907,3.615,923,4.923,928,4.516,984,4.569,1037,4.444,1057,5.916,1239,4.328,2170,5.396,2670,5.676,2671,7.638,2675,7.867,2676,8.266,2677,5.245,2678,6.63,2679,6.63,2680,5.396,2681,6.223,2682,7.27,2683,6.63,2684,6.331,2685,6.331,2686,8.002,2687,6.331,2688,6.331]],["title/classes/News.html",[31,0.151,769,1.944]],["body/classes/News.html",[0,0.344,3,0.066,4,0.119,5,0.04,8,0.161,9,0.625,10,1.537,12,1.025,13,0.369,14,0.005,15,0.254,22,0.135,31,0.212,33,1.671,43,2.839,44,2.896,45,2.684,46,2.785,47,2.896,48,3.379,68,0.728,77,0.483,113,0.633,122,1.208,144,2.224,148,1.376,171,0.003,172,0.003,174,0.683,180,2.947,181,0.894,186,0.849,188,0.73,189,0.757,191,2.652,198,0.576,204,1.154,305,2.178,306,4.115,307,4.054,309,2.733,313,1.693,328,2.474,344,2.268,345,1.397,346,2.479,347,1.59,349,1.59,351,3.198,352,0.863,353,1.043,357,3.109,364,3.379,369,2.305,377,2.111,378,2.211,380,2.148,382,1.797,383,1.848,386,1.692,387,1.104,401,2.501,452,3.046,475,3.855,482,1.729,483,1.729,484,1.729,485,1.729,486,1.473,487,1.35,490,1.692,494,2.61,496,2.132,497,2.736,498,4.014,502,3.317,504,1.882,515,2.204,610,2.068,665,1.974,668,3.511,681,4.014,682,2.556,697,1.729,698,2.204,723,2.204,748,1.953,752,1.953,767,2.204,768,2.593,769,3.796,770,4.147,771,3.878,772,3.766,773,5.262,774,4.814,775,4.975,776,4.134,779,3.584,780,4.197,781,3.738,784,3.918,785,4.473,786,3.918,787,3.738,788,2.736,789,3.124,790,3.738,794,3.658,795,4.014,798,3.222,800,3.584,802,3.918,804,3.918,805,5.887,807,2.556,808,2.593,809,4.473,810,2.593,811,2.736,812,3.584,813,3.33,814,2.132,815,2.593,816,2.593,817,2.593,818,2.593,819,2.008,820,2.593,821,2.593,822,2.593,823,2.593,824,2.593,825,2.593,826,2.593,827,2.593,828,3.918,829,3.766,830,2.593,831,3.918,832,2.593,833,2.593,834,2.283,835,2.283,836,2.593,2689,5.315,2690,3.517,2691,3.517,2692,3.517,2693,3.517,2694,3.517,2695,3.517,2696,3.517,2697,3.517,2698,3.517,2699,3.517,2700,3.517,2701,3.517]],["title/controllers/NewsController.html",[910,2.288,2702,4.195]],["body/controllers/NewsController.html",[3,0.076,4,0.063,5,0.046,8,0.185,9,0.693,10,1.27,12,0.984,13,0.318,14,0.005,15,0.265,19,0.672,22,0.071,31,0.12,38,3.111,40,2.966,70,1.29,73,2.562,76,2.406,77,1.117,113,0.638,126,4.517,127,1.544,128,2.281,144,2.386,145,2.847,148,0.727,171,0.003,172,0.003,181,0.992,186,0.709,188,1.117,189,0.685,198,1.331,313,1.303,325,1.12,326,1.554,327,2.778,346,2.131,402,4.591,668,2.986,765,3.829,769,3.816,788,3.037,807,2.837,812,3.978,847,3.675,857,3.21,873,5.637,876,3.883,903,1.727,910,1.83,912,1.99,914,2.536,919,3.629,932,3.354,933,2.984,934,5.289,935,2.73,936,2.984,937,5.718,938,2.627,944,2.984,947,6.323,950,6.241,951,6.228,952,5.32,1388,5.13,1472,3.829,1537,3.576,1557,4.248,1564,5.723,1827,2.73,1935,4.791,2197,4.367,2374,2.627,2476,5.289,2702,4.888,2703,4.048,2704,5.13,2705,6.96,2706,5.718,2707,4.048,2708,4.048,2709,4.048,2710,5.899,2711,4.048,2712,7.61,2713,3.354,2714,5.637,2715,5.379,2716,4.895,2717,4.048,2718,4.888,2719,4.048,2720,5.899,2721,4.048,2722,5.289,2723,5.899,2724,4.048,2725,5.948,2726,5.899,2727,4.048,2728,4.694,2729,3.629,2730,2.984,2731,3.148,2732,3.629,2733,3.629,2734,4.048,2735,3.629,2736,3.629,2737,3.629,2738,3.629,2739,6.337,2740,3.354,2741,3.629,2742,3.629,2743,3.629,2744,3.629,2745,3.629,2746,3.354,2747,4.048,2748,4.048,2749,4.048,2750,4.048,2751,5.899,2752,4.048]],["title/classes/NewsFilterQuery.html",[31,0.151,2714,3.732]],["body/classes/NewsFilterQuery.html",[3,0.114,4,0.095,5,0.07,8,0.279,9,0.919,10,1.683,12,0.977,13,0.323,14,0.005,15,0.268,22,0.107,31,0.233,40,3.931,127,1.013,171,0.004,172,0.004,174,1.184,186,0.752,189,0.81,215,2.602,306,4.622,307,4.337,308,5.229,325,1.689,346,2.261,480,2.812,769,3.693,770,4.195,798,3.069,888,5.498,891,4.739,892,4.739,893,5.514,896,6.358,897,6.08,898,4.739,902,5.346,903,2.604,905,6.704,906,6.08,907,3.485,908,4.292,909,3.485,1493,5.762,2174,5.816,2714,5.762,2753,8.155,2754,5.473,2755,6.104,2756,5.498,2757,7.01,2758,6.104,2759,6.104,2760,6.104,2761,6.104,2762,7.01,2763,6.104,2764,7.818,2765,6.104,2766,7.818,2767,7.01,2768,6.104,2769,6.104]],["title/classes/NewsListResponse.html",[31,0.151,2716,3.561]],["body/classes/NewsListResponse.html",[3,0.087,4,0.127,5,0.053,8,0.214,9,0.77,10,1.759,12,1.002,13,0.355,14,0.005,15,0.263,22,0.115,31,0.195,33,1.428,37,2.765,40,2.356,68,0.97,113,0.592,127,1.253,144,2.172,171,0.003,172,0.003,174,0.909,180,2.394,186,0.75,188,0.644,189,0.724,191,3.036,215,2.779,306,2.303,307,3.293,308,2.84,309,2.794,313,2.144,317,2.471,325,1.297,346,2.143,377,1.861,378,2.177,380,1.894,387,1.471,417,2.602,475,2.356,595,3.293,665,1.74,668,3.191,769,3.726,770,3.967,771,3.15,772,2.471,774,3.159,775,3.041,794,2.675,795,2.935,798,3.293,807,2.254,811,3.371,882,3.041,883,2.84,884,3.644,885,3.454,891,3.97,892,3.97,893,3.97,896,4.827,897,3.644,898,2.84,901,4.884,902,4.805,903,1.999,908,3.295,909,3.739,938,3.041,1083,2.84,1142,6.025,1168,3.67,1478,3.295,1948,2.935,2122,3.644,2200,5.238,2201,5.238,2706,3.295,2716,4.605,2730,6.742,2770,3.644,2771,6.432,2772,5.388,2773,5.093,2774,4.686,2775,4.686,2776,4.201,2777,4.201,2778,4.201,2779,4.827,2780,6.255,2781,4.827,2782,5.564,2783,5.426,2784,5.426,2785,4.201,2786,3.882,2787,3.454,2788,5.093,2789,3.644,2790,3.644]],["title/classes/NewsMapper.html",[31,0.151,2731,3.937]],["body/classes/NewsMapper.html",[3,0.096,4,0.08,5,0.059,8,0.236,13,0.319,14,0.005,15,0.263,22,0.091,31,0.153,77,1.169,113,0.668,127,1.412,144,1.369,148,0.925,171,0.003,172,0.003,174,1,180,2.555,181,1.175,186,0.742,188,1.169,189,0.717,198,1.393,306,3.437,307,3.99,308,4.238,325,1.426,401,3.885,402,3.782,668,2.012,769,3.415,770,3.224,771,3.362,772,3.687,857,3.224,873,6.272,876,4.231,959,6.268,1157,4.714,1160,3.474,1161,3.474,2162,5.849,2171,5.849,2173,6.272,2174,3.474,2714,6.272,2725,6.618,2730,6.272,2731,5.437,2791,5.152,2792,6.991,2793,6.991,2794,6.991,2795,6.991,2796,5.152,2797,6.991,2798,5.152,2799,6.991,2800,5.152,2801,6.991,2802,5.152,2803,4.269,2804,7.935,2805,4.269,2806,4.269,2807,4.62,2808,5.152,2809,5.152,2810,5.152,2811,5.152,2812,5.152,2813,4.62,2814,5.152,2815,5.152,2816,5.152,2817,5.152,2818,5.152,2819,4.62,2820,5.152,2821,4.62,2822,6.991,2823,5.152,2824,5.152,2825,5.152,2826,5.152,2827,5.152,2828,5.152,2829,5.152,2830,5.152,2831,4.269,2832,5.152,2833,4.269,2834,5.152,2835,4.62,2836,4.62,2837,6.991,2838,5.152,2839,5.152,2840,5.152,2841,6.991,2842,6.991,2843,5.152,2844,5.152]],["title/modules/NewsModule.html",[256,1.309,2845,3.732]],["body/modules/NewsModule.html",[3,0.118,4,0.098,5,0.072,14,0.005,15,0.291,19,1.049,22,0.111,31,0.188,171,0.004,172,0.004,256,2.067,258,2.386,259,3.475,266,4.019,267,2.915,268,2.696,270,3.288,271,3.475,283,6.826,292,3.763,362,3.51,643,6.081,912,3.929,1413,4.101,2121,4.444,2702,7.633,2706,4.444,2728,6.916,2729,5.666,2845,7.593,2846,5.666,2847,5.666,2848,5.666,2849,6.32,2850,6.826,2851,6.32,2852,7.264,2853,6.32,2854,6.32,2855,5.666,2856,6.32,2857,6.32,2858,6.32,2859,6.32,2860,4.261,2861,4.101,2862,7.167,2863,6.32,2864,6.32,2865,6.32,2866,4.444]],["title/injectables/NewsRepo.html",[18,0.885,2850,3.561]],["body/injectables/NewsRepo.html",[3,0.071,4,0.059,5,0.043,8,0.174,9,0.661,10,1.212,13,0.353,14,0.005,15,0.253,18,0.984,19,0.63,22,0.067,31,0.113,33,1.227,35,1.962,71,4.071,73,2.595,76,2.405,77,0.922,113,0.73,127,1.495,128,2.474,148,0.682,167,2.358,171,0.003,172,0.003,181,0.946,186,0.829,188,1.277,189,0.783,191,3.346,198,1.541,297,1.265,305,2.263,313,1.638,317,3.538,320,3.421,325,1.051,327,3.158,352,1.381,353,1.126,382,1.065,383,1.095,422,5.973,475,2.831,480,2.413,496,4.497,516,6.346,518,5.216,519,3.413,520,4.378,521,4.378,522,3.959,523,3.045,524,4.378,525,4.378,526,4.378,532,2.671,534,2.954,536,2.954,538,2.671,540,2.954,542,2.954,544,2.954,546,2.954,566,3.959,595,2.831,605,5.002,668,3.239,697,1.867,764,2.379,765,3.653,767,4.202,769,3.651,770,4.154,775,3.653,812,5.002,834,4.353,835,4.353,847,2.544,857,2.596,867,4.814,878,3.126,1117,2.831,1151,5.217,1357,2.168,1504,2.954,1810,4.944,1993,6.014,2001,3.147,2002,3.147,2003,3.147,2004,3.147,2005,3.147,2006,3.147,2007,3.147,2008,3.147,2009,3.147,2011,3.147,2018,4.944,2020,5.048,2174,5.002,2193,6.039,2196,3.413,2197,3.214,2704,4.944,2756,2.671,2850,3.959,2867,3.798,2868,5.629,2869,5.048,2870,3.798,2871,5.468,2872,3.798,2873,5.629,2874,3.798,2875,7.418,2876,7.418,2877,5.048,2878,3.798,2879,3.798,2880,5.048,2881,3.798,2882,4.664,2883,3.798,2884,3.798,2885,5.629,2886,3.798,2887,5.629,2888,3.798,2889,3.798,2890,5.629,2891,3.798,2892,3.798,2893,3.147,2894,3.798,2895,2.799,2896,2.379,2897,6.708,2898,3.798,2899,3.798,2900,3.798]],["title/classes/NewsResponse.html",[31,0.151,2730,3.732]],["body/classes/NewsResponse.html",[3,0.073,4,0.138,5,0.045,8,0.179,9,0.676,10,1.954,12,1.051,13,0.374,14,0.005,15,0.248,22,0.101,31,0.171,33,0.854,37,1.889,40,2.895,113,0.591,127,1.133,144,2.304,171,0.003,172,0.003,174,0.76,180,2.932,186,0.847,189,0.706,215,2.763,306,3.356,307,3.433,308,4.139,309,3.422,313,2.222,317,3.036,325,1.083,346,2.548,377,2.712,378,2.419,380,2.759,417,3.197,475,3.433,665,2.138,668,3.473,769,3.862,770,4.257,771,3.858,772,3.601,774,4.604,775,4.431,794,2.235,795,2.452,798,3.433,807,2.769,811,3.875,882,3.736,883,3.49,884,4.477,885,4.243,891,4.563,892,4.563,893,4.563,896,5.032,897,4.477,898,3.49,901,4.743,902,4.425,903,1.67,908,2.753,909,3.898,938,2.541,1083,2.373,1139,6.492,1168,2.456,1478,4.048,1948,3.606,2122,4.477,2200,3.384,2201,3.384,2706,4.048,2716,2.753,2730,5.912,2770,3.044,2771,4.048,2772,2.452,2773,3.044,2779,5.032,2780,5.657,2781,5.032,2782,5.912,2783,5.657,2784,5.657,2785,3.51,2786,4.77,2787,4.243,2788,5.854,2789,3.044,2790,3.044,2901,3.915,2902,3.915,2903,3.915,2904,3.915,2905,3.915,2906,3.915,2907,3.915,2908,3.915,2909,3.915,2910,5.162,2911,3.915,2912,3.915,2913,3.044,2914,3.915,2915,3.915,2916,3.915,2917,3.915,2918,3.915,2919,3.915]],["title/classes/NewsScope.html",[31,0.151,2882,4.195]],["body/classes/NewsScope.html",[3,0.105,4,0.087,5,0.064,8,0.257,9,0.871,13,0.343,14,0.005,15,0.26,22,0.099,31,0.167,33,1.616,35,2.578,77,1.139,113,0.651,127,1.23,148,1.009,167,2.355,171,0.004,172,0.004,174,1.091,181,1.246,186,0.799,188,1.139,189,0.698,191,3.08,198,1.358,306,2.764,311,3.409,325,1.556,352,1.379,353,1.668,378,1.622,382,1.577,383,1.622,458,2.313,480,2.983,734,2.647,769,2.846,770,2.593,772,2.966,847,4.252,848,3.954,854,5.463,857,3.824,861,5.463,862,5.463,864,5.463,865,3.954,866,4.373,867,5.945,868,4.373,870,4.144,871,5.213,872,4.373,887,5.381,1055,2.593,1357,3.21,1742,3.649,1810,4.144,1815,5.042,2014,5.042,2174,4.998,2533,4.659,2871,6.497,2882,7.795,2920,7.434,2921,7.412,2922,7.412,2923,7.412,2924,5.623,2925,7.412,2926,5.623,2927,4.659,2928,5.213,2929,5.623,2930,5.623,2931,5.623,2932,7.412,2933,5.623,2934,5.623,2935,5.623,2936,5.623,2937,5.623]],["title/interfaces/NewsTargetFilter.html",[0,0.495,2871,3.732]],["body/interfaces/NewsTargetFilter.html",[0,0.739,2,2.147,3,0.141,4,0.117,5,0.086,8,0.345,9,1.047,13,0.334,14,0.005,15,0.223,22,0.133,171,0.004,172,0.004,305,2.988,306,4.815,307,4.925,325,2.089,770,3.482,1814,8.115,2871,6.568,2920,6.769,2938,7.549]],["title/injectables/NewsUc.html",[18,0.885,2728,3.414]],["body/injectables/NewsUc.html",[3,0.051,4,0.043,5,0.031,8,0.126,9,0.516,10,1.807,12,0.589,13,0.327,14,0.005,15,0.226,18,0.768,19,0.457,22,0.048,31,0.082,35,2.684,40,1.384,43,1.22,44,1.244,45,1.153,46,1.197,53,2.43,68,0.57,71,3.294,73,2.538,75,3.878,76,2.322,77,1.153,113,0.659,127,1.55,128,2.674,144,1.936,148,0.984,171,0.002,172,0.002,181,0.739,186,0.747,188,1.153,189,0.707,198,1.47,215,0.762,289,4.964,297,0.917,305,3.072,306,4.127,307,3.147,308,4.637,309,3.781,325,0.762,326,1.057,327,4.228,378,1.805,382,1.918,383,1.581,387,1.721,401,2.14,402,4.429,452,1.874,458,1.132,475,1.384,480,1.972,523,1.489,579,1.786,595,2.209,668,1.075,682,3.289,737,1.856,764,1.724,769,3.84,770,3.361,772,4.189,788,4.089,789,2.582,847,3.59,888,4.401,898,1.669,908,1.936,1117,2.209,1222,3.089,1357,1.572,1358,1.572,1545,1.572,1557,2.44,1564,2.962,1633,3.573,1648,2.468,1675,2.468,1676,2.281,1707,2.281,1783,3.939,1792,3.939,1810,5.638,1814,3.64,1818,3.222,1948,1.724,2036,3.855,2162,4.612,2171,4.612,2173,5.638,2174,4.611,2179,2.582,2193,4.401,2197,1.572,2202,2.029,2551,3.238,2706,3.855,2728,2.962,2740,3.64,2807,2.468,2813,2.468,2819,5.611,2821,5.611,2836,3.939,2850,5.126,2855,2.468,2871,3.238,2939,2.468,2940,4.393,2941,4.393,2942,4.393,2943,4.393,2944,5.482,2945,2.753,2946,4.393,2947,4.393,2948,2.753,2949,4.393,2950,2.753,2951,4.393,2952,2.753,2953,4.393,2954,4.915,2955,4.915,2956,3.696,2957,4.393,2958,2.753,2959,4.393,2960,2.753,2961,2.753,2962,4.393,2963,2.753,2964,3.238,2965,2.753,2966,5.482,2967,2.753,2968,4.393,2969,2.753,2970,2.468,2971,2.753,2972,2.753,2973,3.64,2974,5.184,2975,2.753,2976,2.468,2977,2.753,2978,6.257,2979,2.753,2980,4.393,2981,2.753,2982,4.393,2983,2.753,2984,5.611,2985,2.753,2986,2.753,2987,2.753,2988,4.393,2989,2.468,2990,4.393,2991,2.753,2992,2.753,2993,4.393,2994,2.753,2995,2.753,2996,5.482,2997,2.753,2998,4.393,2999,2.753,3000,2.753,3001,2.753,3002,2.753,3003,2.753,3004,2.753,3005,2.468,3006,4.393,3007,2.753,3008,2.753,3009,2.753,3010,4.393,3011,2.753,3012,2.753,3013,2.753,3014,2.753,3015,2.753]],["title/interfaces/Options.html",[0,0.495,71,2.288]],["body/interfaces/Options.html",[0,0.547,2,1.589,3,0.104,4,0.087,5,0.064,8,0.256,9,0.867,12,0.888,13,0.277,14,0.005,15,0.244,22,0.155,31,0.166,35,1.634,71,4.245,73,1.935,76,1.909,77,1.014,122,1.918,127,1.589,128,2.071,171,0.004,172,0.004,189,0.77,215,2.599,267,2.577,326,2.145,387,2.595,480,2.973,494,3.433,495,2.687,500,3.594,618,4.79,620,4.118,622,4.756,623,4.63,632,2.577,1168,2.384,1239,3.022,1330,4.345,1331,5.01,1332,5.01,1336,5.364,1338,4.63,1339,5.01,1341,4.229,1342,6.736,1343,5.441,1345,5.01,1346,5.191,1348,6.333,1349,4.63,1350,4.345,1351,4.345,1352,6.095,1353,4.099,1354,7.412,1355,5.441,1356,4.859,1357,5.02,1358,4.214,1359,6.618,1360,6.618,1361,5.01,1362,5.74,1363,6.618,1364,6.618,1365,4.63,1366,3.501,1367,5.74,1368,5.01,1369,5.01]],["title/classes/PaginationQuery.html",[31,0.151,2715,3.561]],["body/classes/PaginationQuery.html",[3,0.125,4,0.104,5,0.076,8,0.305,9,0.972,13,0.31,14,0.005,15,0.244,22,0.118,31,0.246,37,2.723,171,0.004,172,0.004,174,1.295,186,0.721,189,0.791,215,2.289,346,2.168,382,2.32,383,2.385,458,3.402,886,6.432,902,5.283,903,2.848,907,3.811,1055,3.814,1151,5.817,2135,6.853,2200,5.283,2201,5.676,2677,5.53,2682,5.53,2715,5.817,3016,6.674,3017,7.306,3018,6.674,3019,4.593,3020,8.271,3021,8.271,3022,8.271,3023,6.674,3024,6.674,3025,7.416,3026,6.674,3027,8.987,3028,5.984,3029,6.674,3030,6.674]],["title/classes/PaginationResponse.html",[31,0.151,2771,3.561]],["body/classes/PaginationResponse.html",[3,0.118,4,0.098,5,0.072,8,0.29,9,0.941,13,0.374,14,0.005,15,0.187,22,0.112,31,0.189,37,2.909,68,1.313,113,0.498,171,0.004,172,0.004,174,1.231,186,0.829,188,0.871,189,0.801,346,2.418,422,4.856,497,4.748,595,4.028,901,4.776,903,2.706,1142,6.472,1168,3.747,2200,5.799,2201,5.799,2771,5.634,2772,5.96,3031,6.342,3032,8.011,3033,6.342,3034,6.342,3035,6.342,3036,6.342,3037,6.342,3038,6.342,3039,6.342,3040,6.342]],["title/injectables/ParseObjectIdPipe.html",[18,0.885,937,3.561]],["body/injectables/ParseObjectIdPipe.html",[3,0.132,4,0.109,5,0.08,8,0.323,12,1.054,13,0.264,14,0.005,15,0.272,18,1.497,19,1.171,22,0.124,31,0.21,77,0.97,113,0.554,127,1.171,147,3.255,148,1.267,171,0.004,172,0.004,181,1.439,186,0.615,188,0.97,189,0.594,198,1.155,297,2.35,305,2.153,325,1.953,345,3.399,352,1.731,354,3.255,383,2.468,417,4.753,937,6.019,1005,4.963,1016,3.817,2124,6.019,3041,8.558,3042,6.327,3043,8.558,3044,7.057,3045,8.558,3046,8.558,3047,7.057,3048,7.057]],["title/classes/PatchGroupParams.html",[31,0.151,929,4.195]],["body/classes/PatchGroupParams.html",[3,0.134,4,0.111,5,0.082,8,0.328,9,1.015,12,0.928,13,0.269,14,0.005,15,0.255,22,0.126,31,0.257,113,0.678,171,0.004,172,0.004,174,1.391,180,3.602,186,0.625,215,2.391,346,1.879,876,3.83,879,6.429,901,4.248,903,3.059,906,6.72,907,4.094,929,7.16,963,5.348,997,5.66,1037,5.348,3049,7.17,3050,7.748,3051,7.17]],["title/interfaces/PlainTextMailContent.html",[0,0.495,247,3.286]],["body/interfaces/PlainTextMailContent.html",[0,0.975,2,1.895,3,0.124,4,0.103,5,0.076,8,0.305,9,0.971,12,1.128,13,0.31,14,0.005,22,0.117,33,2.104,113,0.523,171,0.004,172,0.004,189,0.696,234,5.361,235,4.492,236,5.828,237,5.571,238,4.492,239,4.492,240,5.361,241,4.492,242,4.492,243,4.492,244,6.093,245,4.323,246,4.492,247,5.828,248,6.508,249,6.508,250,5.361,251,4.717,252,4.323,253,4.492,254,4.492,255,4.492]],["title/classes/ResolvedUser.html",[31,0.151,2478,3.286]],["body/classes/ResolvedUser.html",[3,0.117,4,0.097,5,0.071,8,0.286,9,0.933,10,1.878,12,1.088,13,0.377,14,0.005,15,0.234,22,0.14,31,0.186,171,0.004,172,0.004,174,1.213,186,0.868,309,3.722,325,1.73,346,2.609,377,3.465,378,2.647,380,3.526,682,4.196,901,5.122,903,2.668,1016,4.295,2177,4.601,2180,4.387,2181,6.43,2184,5.584,2185,5.662,2186,5.662,2478,5.153,3052,5.607,3053,6.253,3054,6.253,3055,6.253,3056,6.253,3057,6.253,3058,6.253,3059,6.253,3060,6.253]],["title/classes/ResolvedUserMapper.html",[31,0.151,3061,4.195]],["body/classes/ResolvedUserMapper.html",[3,0.122,4,0.102,5,0.075,8,0.3,10,1.413,12,0.958,13,0.246,14,0.005,15,0.242,22,0.116,31,0.195,77,0.902,113,0.642,127,1.089,144,2.553,148,1.178,171,0.004,172,0.004,174,1.274,181,1.376,186,0.572,188,0.902,189,0.553,198,1.075,309,3.985,325,1.816,382,1.841,383,1.893,401,3.483,876,3.628,1157,5.52,1160,4.426,1161,4.426,2177,4.705,2180,4.696,2478,6.061,2831,5.438,2833,5.438,2835,5.885,3061,6.782,3062,6.564,3063,7.339,3064,6.564,3065,5.104,3066,5.885,3067,5.885,3068,5.885,3069,5.885,3070,6.564,3071,6.564,3072,6.564,3073,6.564,3074,6.564,3075,5.885,3076,6.564,3077,5.885]],["title/classes/RocketChatError.html",[31,0.151,32,3.937]],["body/classes/RocketChatError.html",[0,0.468,1,6.203,3,0.057,4,0.048,5,0.035,6,5.313,7,2.387,8,0.14,9,0.563,10,1.551,11,5.972,12,1.109,13,0.286,14,0.005,15,0.141,16,4.876,17,1.705,18,0.837,19,0.509,20,2.387,21,2.263,22,0.104,23,3.529,24,3.107,25,3.723,26,3.723,27,3.723,28,3.723,29,6.203,30,1.923,31,0.142,32,3.723,33,1.044,34,2.608,35,2.786,36,4.876,37,1.325,38,4.028,39,2.263,40,1.544,41,4.876,42,3.967,43,3.842,44,3.918,45,3.631,46,3.769,47,3.918,48,4.572,49,6.741,50,5.629,51,3.596,52,2.543,53,2.608,54,2.543,55,2.387,56,2.543,57,2.543,58,2.543,59,2.543,60,2.543,61,3.967,62,4.577,63,2.543,64,2.543,65,2.543,66,2.543,67,2.387,68,0.991,69,2.543,70,1.525,71,1.388,72,5.559,73,2.555,74,2.543,75,3.809,76,2.521,77,1.351,78,2.543,79,6.608,80,2.543,81,2.59,82,2.543,83,1.66,84,2.543,85,2.543,86,2.543,87,2.543,88,2.543,89,2.543,90,2.543,91,2.543,92,6.608,93,6.608,94,2.543,95,2.543,96,2.543,97,2.543,98,2.543,99,2.543,100,2.543,101,2.543,102,2.543,103,2.543,104,2.543,105,2.543,106,2.543,107,2.543,108,2.543,109,3.723,110,3.967,111,2.208,112,2.543,113,0.522,114,2.543,115,2.543,116,2.543,117,3.82,118,4.338,119,2.543,120,1.923,121,2.387,122,1.054,123,2.543,124,2.543,125,2.543,126,4.314,127,1.323,128,2.022,129,3.967,130,2.543,131,3.967,132,3.967,133,2.543,134,2.543,135,2.543,136,4.876,137,3.969,138,3.687,139,3.969,140,2.543,141,3.723,142,3.197,143,3.723,144,1.564,145,4.139,146,4.876,147,3.324,148,1.294,149,4.876,150,4.876,151,4.876,152,2.543,153,2.543,154,2.543,155,2.543,156,5.972,157,4.876,158,4.876,159,4.876,160,2.543,161,3.967,162,3.967,163,2.543,164,2.543,165,2.543,166,2.543,167,1.286,168,2.543,169,3.967,170,3.529,171,0.002,172,0.002,174,0.596,186,0.58,188,0.422,189,0.259,1224,2.159,3078,4.788,3079,3.07,3080,3.07]],["title/modules/RocketChatModule.html",[256,1.309,3081,3.732]],["body/modules/RocketChatModule.html",[3,0.132,4,0.11,5,0.081,6,6.331,13,0.266,14,0.005,15,0.254,19,1.178,22,0.125,23,7.073,31,0.211,67,7.182,71,3.882,77,0.975,113,0.557,171,0.004,172,0.004,181,1.193,186,0.619,188,0.975,189,0.598,198,1.162,256,2.389,258,2.68,270,2.92,271,3.086,292,3.342,401,3.354,1627,3.57,1628,4.607,1752,5.521,1753,6.041,1756,6.228,3081,6.807,3082,7.099,3083,7.099,3084,8.589,3085,6.365,3086,7.099,3087,7.099]],["title/interfaces/RocketChatOptions.html",[0,0.495,23,3.732]],["body/interfaces/RocketChatOptions.html",[0,0.468,1,6.199,2,0.872,3,0.057,4,0.048,5,0.035,6,2.259,7,2.383,8,0.14,9,0.562,10,1.55,11,5.967,12,1.118,13,0.299,14,0.005,15,0.141,16,4.871,17,1.702,18,0.836,19,0.508,20,2.383,21,2.259,22,0.104,23,4.333,24,4.674,25,5.601,26,5.601,27,5.601,28,5.601,29,5.935,30,1.92,31,0.142,32,2.383,33,0.668,34,2.119,35,2.623,36,2.539,37,0.848,38,3.503,39,2.259,40,1.541,41,2.539,42,2.539,43,3.84,44,3.916,45,3.629,46,3.767,47,3.916,48,4.57,49,6.738,50,5.625,51,3.592,52,2.539,53,2.606,54,2.539,55,2.383,56,2.539,57,2.539,58,2.539,59,2.539,60,2.539,61,3.961,62,4.572,63,2.539,64,2.539,65,2.539,66,2.539,67,2.383,68,0.634,69,2.539,70,1.523,71,1.385,72,5.558,73,2.554,74,2.539,75,3.807,76,2.52,77,1.35,78,2.539,79,6.604,80,2.539,81,2.586,82,2.539,83,1.658,84,2.539,85,2.539,86,2.539,87,2.539,88,2.539,89,2.539,90,2.539,91,2.539,92,6.604,93,6.604,94,2.539,95,2.539,96,2.539,97,2.539,98,2.539,99,2.539,100,2.539,101,2.539,102,2.539,103,2.539,104,2.539,105,2.539,106,2.539,107,2.539,108,2.539,109,3.718,110,3.961,111,2.205,112,2.539,113,0.461,114,2.539,115,2.539,116,2.539,117,3.815,118,4.333,119,2.539,120,1.92,121,2.383,122,1.052,123,2.539,124,2.539,125,2.539,126,4.31,127,1.322,128,2.02,129,3.961,130,2.539,131,3.961,132,3.961,133,2.539,134,2.539,135,2.539,136,4.871,137,3.964,138,3.683,139,3.964,140,2.539,141,3.718,142,3.194,143,3.718,144,1.562,145,4.135,146,4.871,147,3.322,148,1.293,149,4.871,150,4.871,151,4.871,152,2.539,153,2.539,154,2.539,155,2.539,156,5.967,157,4.871,158,4.871,159,4.871,160,2.539,161,3.961,162,3.961,163,2.539,164,2.539,165,2.539,166,2.539,167,1.284,168,2.539,169,3.961,170,3.524,171,0.002,172,0.002,189,0.73]],["title/classes/Role.html",[31,0.151,2180,2.546]],["body/classes/Role.html",[0,0.537,3,0.102,4,0.085,5,0.063,8,0.375,9,0.857,10,1.569,12,1.024,13,0.35,14,0.005,15,0.215,22,0.128,31,0.163,33,1.59,68,1.135,113,0.733,148,1.677,171,0.004,172,0.004,174,1.064,186,0.844,188,0.754,189,0.462,191,3.242,204,1.8,309,3.724,313,1.61,344,3.111,345,2.178,346,2.499,347,2.479,349,2.479,351,3.072,352,1.345,353,1.627,357,3.541,367,2.037,377,2.896,378,2.103,380,2.947,382,2.449,383,2.517,386,2.638,387,1.722,415,3.131,452,2.34,482,2.696,483,2.696,484,2.696,485,2.696,487,2.106,494,2.005,502,2.256,504,2.582,684,4.389,696,3.944,715,2.34,718,2.967,719,2.967,788,2.823,798,3.666,907,3.131,1355,4.043,1774,4.916,1932,4.265,2131,4.043,2177,5.17,2180,4.389,2236,7.232,2237,4.918,2238,4.918,2239,4.265,2240,4.043,2241,6.369,2242,6.537,2243,4.918,2244,4.918,2245,4.265,3088,7.291,3089,4.918,3090,5.485,3091,5.485,3092,5.485]],["title/injectables/RoleRepo.html",[18,0.885,3093,3.732]],["body/injectables/RoleRepo.html",[3,0.111,4,0.092,5,0.068,8,0.272,9,0.904,10,1.834,12,0.916,13,0.338,14,0.005,15,0.252,18,1.345,19,0.987,22,0.105,31,0.177,68,1.232,70,1.896,73,2.61,76,2.471,77,1.057,113,0.75,127,1.414,128,2.391,171,0.004,172,0.004,181,1.293,186,0.813,188,1.238,189,0.759,198,1.395,297,1.982,305,2.966,309,2.539,325,1.647,326,2.285,352,1.459,354,2.745,458,2.448,527,3.498,528,4.638,530,3.699,2180,4.889,3093,5.669,3094,5.951,3095,9.329,3096,6.897,3097,7.692,3098,7.692,3099,7.692,3100,6.897,3101,5.951,3102,7.692,3103,5.951,3104,7.692,3105,5.951,3106,5.951,3107,7.692,3108,7.692,3109,5.951]],["title/injectables/RoleUC.html",[18,0.885,3110,3.732]],["body/injectables/RoleUC.html",[3,0.125,4,0.104,5,0.076,8,0.305,12,0.717,13,0.31,14,0.005,15,0.265,18,1.446,19,1.107,22,0.118,31,0.198,68,1.382,70,2.126,73,2.356,76,2.139,77,0.917,113,0.649,127,1.107,128,1.872,148,1.198,171,0.004,172,0.004,181,1.39,186,0.721,188,1.136,189,0.697,198,1.093,297,2.223,309,4.12,325,1.847,326,2.562,1222,4.694,1666,3.923,2177,4.362,2180,4.724,2187,4.919,3093,7.253,3110,6.096,3111,6.674,3112,8.271,3113,6.674,3114,6.674,3115,8.271,3116,6.674,3117,6.674,3118,6.674,3119,6.674,3120,6.674,3121,6.674,3122,6.674]],["title/classes/School.html",[31,0.151,668,1.977]],["body/classes/School.html",[0,0.658,3,0.125,4,0.104,5,0.077,8,0.308,9,0.976,10,1.788,12,1.012,13,0.353,14,0.005,15,0.245,22,0.146,31,0.2,33,1.812,68,1.392,113,0.759,171,0.004,172,0.004,174,1.305,186,0.821,188,0.924,189,0.566,191,3.086,204,2.206,313,1.835,342,6.063,344,3.545,345,2.671,346,2.364,347,3.039,349,3.039,351,3.049,352,1.649,353,1.994,452,2.869,487,2.582,504,2.942,668,3.244,715,2.869,718,3.637,719,3.637,2168,4.534,2246,7.804,2247,6.029,3123,8.309,3124,6.029,3125,6.029]],["title/classes/SchoolInfoMapper.html",[31,0.151,2803,4.195]],["body/classes/SchoolInfoMapper.html",[3,0.134,4,0.112,5,0.082,8,0.329,13,0.27,14,0.005,15,0.256,22,0.127,31,0.214,77,0.989,113,0.565,127,1.194,148,1.292,171,0.004,172,0.004,174,1.397,181,1.456,186,0.628,188,0.989,189,0.606,198,1.179,325,1.992,401,3.628,668,3.765,876,3.839,1157,5.841,1160,4.854,1161,4.854,2779,7.107,2803,7.177,3126,8.662,3127,5.965,3128,8.662,3129,5.965,3130,7.199,3131,7.199,3132,5.965,3133,7.199]],["title/classes/SchoolInfoResponse.html",[31,0.151,2779,3.732]],["body/classes/SchoolInfoResponse.html",[3,0.132,4,0.11,5,0.081,8,0.325,9,1.009,10,2.115,12,1.031,13,0.322,14,0.005,15,0.21,22,0.125,31,0.211,113,0.771,171,0.004,172,0.004,174,1.377,186,0.749,215,2.556,313,2.12,346,2.251,668,3.747,891,5.207,892,5.207,901,4.54,903,3.029,909,4.053,1139,4.992,2779,6.331,2913,5.521,3134,9.236,3135,5.882,3136,5.882,3137,5.882]],["title/classes/SchoolNews.html",[31,0.151,834,3.286]],["body/classes/SchoolNews.html",[0,0.34,3,0.065,4,0.118,5,0.04,8,0.159,9,0.619,10,1.37,12,1.023,13,0.366,14,0.005,15,0.254,22,0.134,31,0.211,33,1.664,43,2.821,44,2.877,45,2.666,46,2.767,47,2.877,48,3.357,77,0.478,113,0.557,122,1.195,144,2.216,148,1.369,171,0.003,172,0.003,174,0.675,180,2.935,181,0.886,186,0.842,188,0.478,189,0.741,191,3.59,198,0.57,204,1.142,305,2.166,306,4.1,307,4.037,309,2.716,313,1.685,328,2.447,344,2.249,345,1.382,346,2.496,347,1.573,349,1.573,351,3.192,352,0.853,353,1.032,357,2.982,364,3.357,369,2.289,377,2.094,378,2.2,380,2.131,382,1.786,383,1.836,386,1.674,387,1.093,401,2.485,452,2.716,475,3.837,482,1.711,483,1.711,484,1.711,485,1.711,486,1.458,487,1.336,490,1.674,494,2.326,496,2.109,497,2.714,498,3.987,502,3.303,504,1.232,515,2.18,610,2.045,665,1.958,668,3.558,681,4.448,682,2.536,697,1.711,698,2.18,723,2.18,748,1.933,752,1.933,767,2.18,768,2.565,769,3.928,770,4.135,771,3.862,772,3.745,773,5.234,774,4.788,775,4.952,776,4.1,778,2.883,779,3.555,780,4.174,781,3.708,782,2.883,783,2.883,784,3.886,785,4.448,786,3.886,787,3.708,788,2.714,789,3.099,790,3.708,791,2.883,792,2.883,793,2.883,794,3.634,795,3.987,796,2.883,797,2.883,798,3.201,799,2.883,800,3.555,801,2.883,802,3.886,803,2.883,804,3.886,805,5.366,806,2.883,807,2.536,808,2.565,809,3.987,810,2.565,811,1.791,812,2.346,813,2.18,814,2.109,815,2.565,816,2.565,817,2.565,818,2.565,819,1.987,820,2.565,821,2.565,822,2.565,823,2.565,824,2.565,825,2.565,826,2.565,827,2.565,828,3.886,829,3.741,830,2.565,831,3.886,832,2.565,833,2.565,834,3.421,835,2.258,836,2.565,3138,3.48]],["title/classes/Scope.html",[31,0.151,847,2.288]],["body/classes/Scope.html",[3,0.114,4,0.095,5,0.07,8,0.28,9,0.921,13,0.361,14,0.005,15,0.231,22,0.108,31,0.182,35,2.816,68,1.268,77,1.077,113,0.615,127,1.016,167,3.282,171,0.004,172,0.004,174,1.188,181,1.317,186,0.821,188,1.077,189,0.66,198,1.003,352,1.502,353,1.816,382,1.718,383,1.766,458,2.52,847,3.541,857,4.44,861,6.368,862,6.368,864,5.775,865,6.771,867,6.496,870,5.775,871,6.405,1055,2.825,1083,3.713,1412,5.775,2927,7.158,3139,5.491,3140,7.835,3141,7.835,3142,7.025,3143,6.124,3144,6.124,3145,6.124,3146,6.124,3147,6.124,3148,6.124,3149,7.835,3150,7.835,3151,6.124,3152,6.124,3153,6.124]],["title/classes/ServerConsole.html",[31,0.151,3154,4.195]],["body/classes/ServerConsole.html",[3,0.116,4,0.096,5,0.071,8,0.284,12,0.934,13,0.296,14,0.005,15,0.233,22,0.109,31,0.185,68,1.285,77,1.086,113,0.62,167,3.834,171,0.004,172,0.004,174,1.205,181,1.329,186,0.758,188,1.086,189,0.666,198,1.294,206,2.987,215,2.616,268,3.373,326,2.384,346,2.072,618,5.941,622,5.376,632,2.864,1335,5.568,1338,6.549,1340,6.549,1348,6.516,1609,7.584,1612,5.376,1623,4.373,1841,5.941,1861,5.864,2413,5.735,2610,5.568,3154,6.549,3155,6.21,3156,7.904,3157,6.21,3158,6.437,3159,6.21,3160,7.904,3161,6.147,3162,6.21,3163,7.087,3164,6.21,3165,6.21]],["title/modules/ServerConsoleModule.html",[256,1.309,3166,3.732]],["body/modules/ServerConsoleModule.html",[3,0.127,4,0.106,5,0.078,14,0.005,15,0.292,19,1.128,22,0.12,31,0.202,171,0.004,172,0.004,256,2.164,258,2.568,259,3.638,266,4.208,267,3.137,268,2.902,270,3.442,271,3.638,614,7.286,620,5.013,622,4.526,632,3.137,1349,5.635,1829,3.777,1982,6.952,2389,3.501,2600,7.286,3154,6.933,3166,7.561,3167,6.098,3168,6.801,3169,6.801,3170,8.368,3171,6.801,3172,6.801,3173,6.098,3174,6.801]],["title/controllers/ServerController.html",[910,2.288,3175,4.195]],["body/controllers/ServerController.html",[3,0.138,4,0.115,5,0.084,8,0.338,12,0.945,14,0.005,15,0.218,19,1.227,22,0.13,31,0.22,51,4.76,72,5.173,77,1.016,171,0.004,172,0.004,181,1.48,186,0.644,198,1.211,206,3.556,346,1.938,382,2.469,910,3.978,912,3.634,1609,8.059,1611,6.189,1612,4.76,1622,5.749,1623,3.718,3175,7.292,3176,7.393,3177,7.393]],["title/modules/ServerModule.html",[256,1.309,3178,3.732]],["body/modules/ServerModule.html",[3,0.095,4,0.079,5,0.058,12,1.037,13,0.19,14,0.005,15,0.3,19,0.843,22,0.089,24,4.493,25,3.95,26,3.95,27,3.95,28,3.95,31,0.151,43,2.251,44,2.296,45,2.127,46,2.208,47,2.296,71,3.129,77,0.698,117,3.296,122,1.744,137,3.425,138,3.182,139,3.425,144,1.349,148,0.912,171,0.003,172,0.003,210,2.342,256,1.791,257,6.733,258,1.918,259,3.01,263,6.424,266,3.481,267,2.342,268,2.167,271,3.01,320,2.342,325,1.405,352,1.698,353,1.506,367,1.887,369,1.827,573,4.197,638,6.733,912,3.404,1004,3.296,1731,3.572,1732,3.296,1733,3.182,1734,3.95,1982,6.424,2025,5.736,2026,5.736,2027,5.736,2219,3.95,2389,2.614,2510,6.733,2565,6.226,2574,3.743,2575,3.743,2605,3.95,2606,3.95,2607,6.208,2608,6.208,2609,5.384,2616,4.208,2619,3.743,2620,4.554,2621,6.208,2622,4.554,2623,3.95,2624,3.296,2845,6.733,3081,6.525,3173,4.554,3175,6.526,3178,7.618,3179,4.554,3180,4.554,3181,6.733,3182,5.079,3183,5.079,3184,5.079,3185,5.079,3186,3.743,3187,5.079,3188,5.079,3189,5.079,3190,5.079,3191,5.079,3192,5.079,3193,5.079,3194,5.079,3195,5.079,3196,5.079,3197,5.079,3198,5.079,3199,5.079,3200,5.079,3201,5.079,3202,5.079,3203,5.079,3204,3.572,3205,5.079,3206,4.554,3207,4.208,3208,5.079]],["title/classes/StorageProvider.html",[31,0.151,488,2.891]],["body/classes/StorageProvider.html",[0,0.555,3,0.106,4,0.088,5,0.065,8,0.26,9,0.876,10,1.605,12,1.091,13,0.37,14,0.005,15,0.246,22,0.131,31,0.169,33,1.626,68,1.175,113,0.445,148,1.339,171,0.004,172,0.004,174,1.101,186,0.86,188,0.78,189,0.702,191,3.286,204,1.863,313,1.647,344,3.182,345,2.255,346,2.557,347,2.566,349,2.566,351,3.336,352,1.392,353,1.683,357,3.571,377,2.962,378,2.151,380,3.014,382,2.092,383,2.151,386,2.73,387,1.782,452,2.422,482,2.791,483,2.791,484,2.791,485,2.791,487,2.179,488,4.258,502,2.335,504,2.641,715,2.422,1713,6.478,1889,7.33,1893,6.88,1895,7.336,2248,7.33,2249,5.09,2250,7.33,2251,5.09,2252,5.09,2253,5.09,2254,5.09,2255,5.09,2256,5.09,2257,5.09,2258,5.09,2259,5.09,2260,5.09,3209,7.459,3210,5.676,3211,5.676,3212,5.676,3213,5.676]],["title/injectables/StorageProviderRepo.html",[18,0.885,1986,3.937]],["body/injectables/StorageProviderRepo.html",[3,0.1,4,0.083,5,0.061,8,0.246,10,1.549,13,0.366,14,0.005,15,0.239,18,1.258,19,0.892,22,0.095,31,0.16,33,1.569,73,2.642,76,2.454,77,0.739,113,0.766,127,0.892,128,1.508,167,3.014,171,0.003,172,0.003,181,1.21,186,0.86,188,1.341,189,0.822,191,3.627,198,1.615,297,1.791,305,2.642,313,1.913,320,3.994,325,1.488,422,6.237,488,4.63,516,6.756,518,6.307,519,4.362,520,5.596,521,5.596,522,5.06,523,3.892,524,5.596,525,5.596,526,5.596,532,3.782,534,4.182,536,4.182,538,3.782,540,4.182,542,4.182,544,4.182,546,4.182,1986,5.596,2001,4.455,2002,4.455,2003,4.455,2004,4.455,2005,4.455,2006,4.455,2007,4.455,2008,4.455,2009,4.455,2011,4.455,2869,6.452,2877,6.452,3214,5.377,3215,5.377,3216,5.377]],["title/classes/Submission.html",[31,0.151,2275,2.976]],["body/classes/Submission.html",[0,0.396,3,0.076,4,0.063,5,0.087,8,0.185,9,0.693,10,1.27,12,0.965,13,0.361,14,0.005,15,0.259,22,0.104,31,0.12,33,1.286,37,2.116,68,0.838,77,0.811,113,0.318,127,0.979,144,2.16,148,1.612,171,0.003,172,0.003,174,0.785,181,0.992,186,0.857,188,0.556,189,0.586,191,2.841,198,0.966,204,1.328,305,2.124,313,1.303,344,2.517,345,1.608,346,2.523,347,1.83,349,1.83,351,3.036,352,0.993,353,1.2,357,3.254,377,2.343,378,1.701,380,2.384,382,2.281,383,2.345,386,1.947,387,2.819,452,2.517,458,2.863,480,2.122,482,1.99,483,1.99,484,1.99,485,1.99,486,1.696,487,1.554,490,1.947,494,1.479,502,3.922,504,2.089,684,4.268,689,3.576,696,2.19,697,1.99,715,1.727,743,5.828,780,3.468,819,2.311,1083,3.576,1818,5.278,2261,5.948,2262,3.629,2263,5.948,2264,6.337,2265,6.337,2266,7.61,2267,5.277,2268,7.61,2269,4.319,2270,7.44,2271,3.629,2272,3.629,2273,3.629,2274,2.536,2275,3.468,2276,5.289,2277,5.289,2278,5.289,2279,5.289,2280,5.289,2281,4.888,2282,6.858,2283,5.289,2284,2.454,2285,5.289,2286,3.629,2287,3.629,2288,3.629,2289,3.629,2290,2.847,2291,3.629,2292,6.241,2293,3.629,2294,5.289,2295,3.629,2296,5.723,2297,3.629,2298,3.629,2299,3.629,2300,6.858,2301,3.629,3217,5.899,3218,4.048,3219,4.048,3220,4.048,3221,4.048,3222,4.048,3223,4.048,3224,4.048,3225,4.048,3226,4.048,3227,4.048]],["title/classes/SubmissionFactory.html",[31,0.151,3228,4.195]],["body/classes/SubmissionFactory.html",[3,0.084,4,0.07,5,0.051,8,0.206,9,0.747,13,0.367,14,0.005,15,0.25,22,0.079,31,0.134,33,1.386,37,2.22,45,2.663,53,1.99,68,0.93,70,2.025,77,0.873,113,0.724,122,2.182,127,1.055,167,1.881,171,0.003,172,0.003,174,0.871,181,1.069,186,0.839,188,1.336,189,0.778,191,3.536,198,1.48,210,2.071,215,2.042,313,1.63,317,3.352,320,2.931,325,1.243,364,3.891,382,2.466,383,2.606,387,1.41,389,7.622,391,7.56,393,3.721,395,5.927,396,6.647,397,5.266,398,5.662,399,5.266,400,4.943,401,2.482,402,4.994,403,6.113,404,7.18,405,6.24,407,3.629,409,5.266,410,3.721,411,5.266,413,4.097,414,4.788,415,4.58,416,4.622,417,3.53,418,5.266,419,3.721,420,2.723,421,3.31,422,4.863,423,3.721,424,3.493,425,3.721,426,7.649,428,3.125,429,3.721,431,3.721,432,6.479,434,3.721,435,4.943,436,5.266,438,3.721,439,3.721,440,3.721,442,4.943,444,3.721,446,3.721,447,3.853,449,3.721,628,2.915,2261,3.493,2263,4.943,2265,3.721,2267,2.915,2269,2.16,2275,3.736,2296,4.286,2312,4.788,3228,6.113,3229,4.027,3230,4.027,3231,6.356,3232,4.491,3233,4.027,3234,4.027,3235,4.027,3236,4.027,3237,4.027,3238,4.027,3239,4.027,3240,4.027,3241,4.027,3242,4.027,3243,3.493,3244,4.491,3245,4.027,3246,4.491,3247,4.027,3248,4.027,3249,4.027,3250,4.027]],["title/injectables/SubmissionRepo.html",[18,0.885,3251,4.54]],["body/injectables/SubmissionRepo.html",[3,0.107,4,0.089,5,0.065,8,0.262,13,0.333,14,0.005,15,0.262,18,1.311,19,0.949,22,0.101,31,0.17,35,2.446,68,1.185,70,1.823,73,2.591,75,3.659,76,2.445,77,1.149,113,0.696,127,1.472,128,2.49,171,0.004,172,0.004,181,1.26,186,0.774,188,1.219,189,0.748,198,1.369,297,1.906,305,3.043,325,1.583,326,2.197,352,1.839,353,1.697,354,2.639,367,2.125,527,3.363,528,4.568,530,3.606,669,3.585,734,3.53,743,4.697,764,3.585,765,4.866,839,6.723,841,6.212,847,2.586,857,3.458,867,3.713,2053,4.218,2267,3.713,2269,2.752,2270,4.741,2274,4.697,2275,3.363,2389,2.945,3251,6.723,3252,5.722,3253,7.498,3254,7.498,3255,5.722,3256,7.498,3257,5.722,3258,7.498,3259,5.722,3260,7.498,3261,5.722,3262,7.498,3263,5.722,3264,7.498,3265,5.722]],["title/injectables/SymetricKeyEncryptionService.html",[18,0.885,1725,3.732]],["body/injectables/SymetricKeyEncryptionService.html",[3,0.126,4,0.105,5,0.077,8,0.308,12,1.115,13,0.338,14,0.005,15,0.246,17,3.742,18,1.455,19,1.118,22,0.119,31,0.2,35,1.97,68,1.395,70,2.146,72,5.797,77,1.143,113,0.708,171,0.004,172,0.004,181,1.399,186,0.787,188,1.24,189,0.76,198,1.362,297,2.244,704,4.543,737,5.61,1168,3.549,1717,7.459,1725,6.132,1747,7.459,3266,6.737,3267,6.737,3268,6.737,3269,8.319,3270,6.737,3271,8.319,3272,6.737,3273,6.737,3274,6.041,3275,6.737,3276,6.737,3277,6.737,3278,6.737,3279,6.737]],["title/classes/TargetInfoMapper.html",[31,0.151,2805,4.195]],["body/classes/TargetInfoMapper.html",[3,0.134,4,0.111,5,0.082,8,0.329,13,0.269,14,0.005,15,0.255,22,0.127,31,0.214,77,0.987,113,0.564,127,1.192,148,1.29,171,0.004,172,0.004,174,1.394,181,1.454,186,0.626,188,0.987,189,0.605,198,1.176,325,1.988,401,3.625,770,3.313,809,6.036,876,3.834,1157,5.834,1161,4.845,2780,5.953,2781,7.102,2805,7.168,3127,5.953,3129,5.953,3132,5.953,3280,8.652,3281,8.652,3282,7.185,3283,7.185,3284,7.185]],["title/classes/TargetInfoResponse.html",[31,0.151,2781,3.732]],["body/classes/TargetInfoResponse.html",[3,0.132,4,0.11,5,0.081,8,0.325,9,1.009,10,2.115,12,1.031,13,0.322,14,0.005,15,0.21,22,0.125,31,0.211,113,0.771,171,0.004,172,0.004,174,1.377,186,0.749,215,2.556,313,2.12,346,2.251,770,4.426,891,5.207,892,5.207,901,4.54,903,3.029,909,4.053,1139,4.992,2781,6.331,2913,5.521,3135,5.882,3136,5.882,3137,5.882,3285,9.236]],["title/classes/Task.html",[31,0.151,2269,2.435]],["body/classes/Task.html",[0,0.429,3,0.051,4,0.043,5,0.031,8,0.286,9,0.643,10,1.344,12,0.821,13,0.347,14,0.005,15,0.225,22,0.12,31,0.13,33,0.955,35,2.392,37,2.263,53,1.216,68,0.568,75,2.891,77,1.198,81,4.132,113,0.704,122,1.504,127,1.598,144,1.814,148,1.424,171,0.002,172,0.002,174,0.532,181,0.737,186,0.854,188,0.938,189,0.765,191,2.32,198,1.428,204,0.9,215,1.514,305,2.825,313,1.208,344,1.87,345,1.09,346,2.321,347,1.24,349,1.24,351,2.836,352,1.075,353,0.814,357,2.838,367,2.536,368,1.38,369,0.987,374,1.567,377,1.74,378,2.288,380,1.771,382,1.915,383,1.969,386,1.32,387,2.144,392,2.311,452,1.171,458,2.251,480,3.081,482,1.349,483,1.349,484,1.349,485,1.349,486,1.149,487,1.053,490,1.32,494,1.003,500,1.905,502,3.264,504,1.552,567,1.664,584,1.567,665,2.947,667,3.038,684,3.141,685,2.134,689,1.664,696,1.484,697,1.349,700,1.719,710,1.93,712,1.85,715,1.171,718,1.484,719,1.484,748,2.434,749,2.844,752,1.524,754,4.054,755,1.781,780,2.576,789,2.576,853,4.971,882,1.781,1019,2.502,1055,2.523,1109,1.85,1341,2.108,1818,1.613,1949,1.85,2214,4.406,2269,3.934,2274,4.786,2275,3.672,2284,3.787,2290,1.93,2296,2.955,2302,4.393,2303,2.023,2304,4.393,2305,4.431,2306,4.431,2307,2.134,2308,2.134,2309,5.631,2310,5.35,2311,4.604,2312,5.149,2313,5.124,2314,1.85,2315,2.134,2316,2.134,2317,4.604,2318,2.023,2319,2.134,2320,2.955,2321,3.408,2322,3.408,2323,3.408,2324,1.93,2325,2.134,2326,3.23,2327,2.134,2328,2.134,2329,2.134,2330,2.134,2331,3.408,2332,3.408,2333,2.134,2334,2.134,2335,3.408,2336,2.134,2337,2.134,2338,1.781,2339,2.134,2340,4.858,2341,2.134,2342,1.664,2343,2.134,2344,4.858,2345,3.408,2346,4.254,2347,2.134,2348,3.408,2349,4.858,2350,2.134,2351,2.134,2352,4.858,2353,4.254,2354,2.134,2355,2.134,2356,2.134,2357,4.858,2358,2.134,2359,2.134,2360,2.134,2361,4.604,2362,2.134,2363,4.858,2364,2.134,2365,1.85,2366,3.408,2367,2.134,2368,3.408,2369,2.134,2370,2.134,2371,2.134,2372,3.408,2373,1.719,2374,1.781,2375,2.134,2376,2.134,2377,2.134,2378,3.408,2379,2.134,2380,3.408,2381,2.134,2382,3.408,2383,3.408,2384,2.134,2385,2.134,2386,2.134,2387,2.134,2388,1.613,2389,1.413,2390,3.23,2391,4.858,2392,4.858,2393,2.134,2394,2.134,2395,2.134,3286,4.382,3287,4.382,3288,4.382,3289,4.382,3290,4.382,3291,2.744,3292,2.744,3293,2.744,3294,2.744,3295,2.744,3296,2.744,3297,2.744,3298,2.744,3299,2.744,3300,2.744,3301,2.744,3302,2.744,3303,2.744,3304,2.744,3305,2.744,3306,2.744,3307,2.744,3308,2.744,3309,2.744,3310,2.744,3311,2.744]],["title/injectables/TaskAuthorizationService.html",[18,0.885,3312,3.732]],["body/injectables/TaskAuthorizationService.html",[3,0.115,4,0.096,5,0.07,8,0.282,13,0.295,14,0.005,15,0.256,18,1.376,19,1.023,22,0.139,31,0.183,68,1.277,70,1.965,73,2.272,75,2.449,76,2.035,77,0.847,113,0.618,127,1.023,128,2.208,144,2.091,171,0.004,172,0.004,181,1.323,186,0.686,188,1.081,189,0.663,198,1.01,297,2.054,305,2.786,325,1.706,326,2.367,500,2.681,665,2.923,753,4.545,788,4.855,798,3.101,837,6.783,1017,5.307,1019,4.493,1037,4.371,1119,5.307,1852,5.307,1858,5.801,1935,3.863,1947,4.545,2212,4.002,2213,4.337,3312,5.801,3313,5.529,3314,7.87,3315,6.167,3316,6.167,3317,7.87,3318,7.565,3319,6.167,3320,6.52,3321,7.056,3322,7.056,3323,5.529,3324,4.796,3325,8.667,3326,5.529,3327,6.167,3328,5.529,3329,6.167,3330,7.87,3331,6.167,3332,5.529]],["title/controllers/TaskController.html",[910,2.288,3333,4.195]],["body/controllers/TaskController.html",[3,0.117,4,0.098,5,0.072,8,0.288,13,0.236,14,0.005,15,0.294,19,1.043,22,0.111,31,0.187,70,2.003,73,2.292,76,2.06,77,1.095,113,0.493,127,1.526,128,1.764,148,1.128,171,0.004,172,0.004,181,1.339,186,0.548,188,0.864,189,0.529,198,1.029,325,1.74,326,2.413,346,1.648,734,3.751,857,3.674,876,2.786,903,2.682,910,2.841,912,3.09,914,3.938,933,4.633,935,4.239,936,4.633,938,4.08,944,4.633,951,5.76,952,4.974,2200,4.683,2201,4.683,2704,6.446,2713,5.208,2715,7.072,2772,4.991,3333,6.6,3334,6.286,3335,4.421,3336,6.286,3337,6.446,3338,6.286,3339,4.889,3340,5.208,3341,6.286,3342,6.286,3343,6.286,3344,6.286,3345,6.286,3346,6.286,3347,6.286,3348,6.286,3349,6.286]],["title/classes/TaskFactory.html",[31,0.151,3243,3.937]],["body/classes/TaskFactory.html",[3,0.085,4,0.071,5,0.052,8,0.209,9,0.756,13,0.368,14,0.005,15,0.22,22,0.08,31,0.136,33,1.403,35,1.337,37,2.237,45,2.696,53,2.026,68,0.946,70,2.051,77,0.884,113,0.74,122,2.557,127,1.068,167,1.915,171,0.003,172,0.003,174,0.887,181,1.082,186,0.842,188,1.34,189,0.781,191,3.549,198,1.487,210,2.108,215,2.061,313,1.645,317,3.395,320,2.968,325,1.265,364,3.929,382,2.48,383,2.62,387,1.435,389,7.644,391,7.584,393,3.788,395,5.962,396,6.699,397,5.333,398,5.69,399,5.333,400,5.006,401,2.513,402,5.016,403,6.172,404,7.212,405,6.282,407,3.675,409,5.333,410,3.788,411,5.333,413,4.137,414,4.835,415,4.617,416,4.667,417,3.575,418,5.333,419,3.788,420,2.771,421,3.37,422,4.902,423,3.788,424,3.555,425,3.788,426,7.684,428,3.164,429,3.788,431,3.788,432,6.516,434,3.788,435,5.006,436,5.333,438,3.788,439,3.788,440,3.788,442,5.006,444,3.788,446,3.788,447,3.902,449,3.788,2269,3.096,2302,3.215,2313,4.667,3230,4.099,3233,4.099,3234,4.099,3235,4.099,3236,4.099,3237,4.099,3238,4.099,3239,4.099,3240,4.099,3241,4.099,3242,4.099,3243,5.793,3247,4.099,3350,4.099,3351,5.333,3352,6.436,3353,4.571,3354,4.571,3355,4.099]],["title/classes/TaskListResponse.html",[31,0.151,3339,3.937]],["body/classes/TaskListResponse.html",[3,0.107,4,0.089,5,0.065,8,0.261,9,0.88,10,1.229,12,0.989,13,0.354,14,0.005,15,0.221,22,0.132,31,0.223,33,1.633,37,2.865,68,1.183,81,3.09,113,0.588,171,0.004,172,0.004,174,1.108,186,0.803,188,0.785,189,0.776,191,3.294,206,2.748,215,1.581,346,2.325,377,2.269,378,2.558,380,2.309,387,1.794,480,2.694,595,3.766,853,3.579,876,2.532,878,3.173,901,4.857,902,5.213,903,2.437,938,3.708,1012,3.463,1127,3.173,1142,6.537,1168,3.929,2200,5.555,2201,5.555,2269,2.748,2304,4.018,2306,3.708,2310,3.852,2311,3.852,2312,3.708,2313,3.579,2771,6.772,2772,5.769,2773,5.825,2776,5.122,2777,5.122,2778,5.122,2789,4.443,2790,4.443,3339,5.825,3356,5.122,3357,7.489,3358,5.713,3359,5.713,3360,7.349,3361,4.733,3362,5.122]],["title/classes/TaskMapper.html",[31,0.151,3340,4.195]],["body/classes/TaskMapper.html",[3,0.123,4,0.103,5,0.075,8,0.303,13,0.248,14,0.005,15,0.243,22,0.116,31,0.197,77,0.909,81,3.577,113,0.519,127,1.485,148,1.187,171,0.004,172,0.004,174,1.283,181,1.382,186,0.576,188,0.909,189,0.557,198,1.083,325,1.83,401,3.494,853,4.142,876,3.644,1157,5.545,1160,4.459,1161,4.459,2269,3.18,2310,4.459,2311,4.459,2312,4.291,2313,4.142,2314,6.314,2831,5.479,2833,5.479,3132,5.479,3340,6.813,3357,7.282,3363,6.612,3364,8.223,3365,6.612,3366,8.223,3367,6.612,3368,6.612,3369,6.612,3370,6.612,3371,6.612,3372,6.612,3373,6.612,3374,6.612,3375,6.612,3376,6.612,3377,6.612,3378,6.612,3379,6.612,3380,6.612,3381,6.612,3382,6.612,3383,6.612,3384,6.612,3385,6.612,3386,6.612,3387,6.612,3388,6.612]],["title/modules/TaskModule.html",[256,1.309,3181,3.732]],["body/modules/TaskModule.html",[3,0.124,4,0.103,5,0.076,14,0.005,15,0.294,19,1.101,22,0.117,31,0.197,171,0.004,172,0.004,256,2.132,258,2.506,259,3.583,266,4.145,267,3.061,268,2.832,270,3.391,271,2.885,837,6.911,848,4.668,912,4.052,1647,4.023,1666,3.901,2521,7.243,3181,7.664,3312,7.243,3323,5.951,3333,7.428,3337,7.243,3389,5.951,3390,5.951,3391,7.243,3392,6.637,3393,6.637,3394,6.637]],["title/injectables/TaskRepo.html",[18,0.885,3391,3.732]],["body/injectables/TaskRepo.html",[3,0.092,4,0.077,5,0.056,8,0.227,13,0.348,14,0.005,15,0.259,18,1.19,19,0.822,22,0.087,31,0.147,35,2.273,68,1.025,70,1.578,71,4.338,73,2.376,76,2.165,77,0.935,113,0.61,127,1.456,128,2.181,148,1.221,171,0.003,172,0.003,181,1.144,186,0.678,188,1.068,189,0.655,198,1.273,215,1.37,297,1.649,305,2.677,317,4.415,325,1.37,326,1.901,327,3.66,352,1.214,353,1.469,378,1.428,387,2.137,407,4.779,480,1.781,527,2.911,528,4.309,530,3.273,595,3.909,665,1.839,716,4.115,763,3.483,764,3.102,765,4.416,847,3.076,857,3.138,867,5.432,1117,3.422,1493,6.682,1504,3.851,2193,6.53,2196,4.125,2197,4.438,2201,2.911,2213,4.785,2214,4.317,2269,4.026,2274,3.102,2284,5.074,2305,3.214,2320,3.339,2365,4.588,2526,5.638,2880,6.101,2970,4.44,3335,4.785,3351,4.103,3391,5.015,3395,4.952,3396,7.774,3397,6.805,3398,4.952,3399,4.952,3400,4.952,3401,6.101,3402,8.774,3403,6.805,3404,4.952,3405,5.638,3406,4.103,3407,4.103,3408,4.952,3409,4.952,3410,4.952,3411,4.952,3412,4.952,3413,4.952,3414,4.952,3415,4.952,3416,4.952,3417,4.952,3418,4.952,3419,4.952,3420,4.952,3421,4.952,3422,4.952,3423,6.805,3424,4.952,3425,6.805,3426,4.952,3427,4.952,3428,4.952,3429,4.952,3430,4.952]],["title/classes/TaskResponse.html",[31,0.151,3357,3.937]],["body/classes/TaskResponse.html",[3,0.101,4,0.084,5,0.062,8,0.248,9,0.85,10,1.752,12,1.061,13,0.376,14,0.005,15,0.213,22,0.127,31,0.215,33,1.181,37,2.576,81,4.403,113,0.639,171,0.003,172,0.003,174,1.051,186,0.861,189,0.832,206,3.478,215,2.404,346,2.589,377,3.233,378,2.785,380,3.29,407,3.093,480,2.601,853,3.394,876,3.205,878,4.016,901,5.008,902,5.32,903,2.312,938,3.516,1012,4.935,1127,4.016,1168,3.086,2200,4.251,2201,4.251,2269,3.478,2304,5.725,2306,5.283,2310,3.653,2311,3.653,2312,3.516,2313,3.394,2771,5.086,2772,3.394,2773,4.213,2789,4.213,2790,4.213,3339,4.213,3356,4.858,3357,7.038,3360,7.197,3361,5.992,3362,7.299,3431,5.418,3432,7.232,3433,5.418,3434,5.418,3435,5.418,3436,5.418,3437,5.418,3438,5.418,3439,5.418,3440,5.418,3441,5.418,3442,5.418]],["title/classes/TaskScope.html",[31,0.151,3405,4.195]],["body/classes/TaskScope.html",[3,0.089,4,0.074,5,0.055,8,0.219,9,0.897,13,0.357,14,0.005,15,0.196,22,0.084,31,0.142,33,1.449,35,2.623,75,2.64,77,1.233,113,0.722,122,2.282,127,0.794,167,2.005,171,0.003,172,0.003,174,0.929,181,1.117,186,0.841,188,1.264,189,0.79,191,2.836,198,1.506,305,3.021,325,1.324,367,1.778,373,3.106,378,2.202,382,1.343,383,1.38,387,1.503,480,3.118,500,2.081,595,2.407,665,2.469,763,4.674,847,4.055,848,3.366,854,6.389,857,3.065,861,4.899,862,4.899,864,4.899,865,3.366,866,3.722,867,4.955,868,3.722,870,3.528,871,4.674,872,3.722,1741,3.366,1818,5.095,2214,4.24,2269,2.302,2284,2.901,2305,3.106,2306,5.354,2313,4.164,2320,4.482,2374,3.106,2533,3.965,2534,5.959,2536,5.959,2541,4.291,3405,8.258,3406,5.507,3407,5.507,3443,9.2,3444,6.646,3445,6.646,3446,6.646,3447,6.646,3448,6.646,3449,4.786,3450,6.646,3451,4.786,3452,4.786,3453,6.646,3454,4.786,3455,6.646,3456,4.786,3457,6.646,3458,4.786,3459,4.786,3460,6.646,3461,4.786,3462,3.528,3463,3.528,3464,3.528,3465,4.786,3466,4.786]],["title/injectables/TaskUC.html",[18,0.885,3337,3.732]],["body/injectables/TaskUC.html",[3,0.078,4,0.064,5,0.047,8,0.19,13,0.308,14,0.005,15,0.243,18,1.052,19,0.69,22,0.106,31,0.124,35,2.87,38,4.084,68,1.245,70,2.251,73,2.416,75,3.402,76,2.215,77,1.214,81,4.189,113,0.645,127,1.604,128,2.537,147,1.917,148,1.39,171,0.003,172,0.003,181,1.011,186,0.747,188,1.129,189,0.692,198,1.345,289,4.586,297,1.384,305,2.695,309,1.773,324,4.982,325,1.15,367,1.544,369,1.495,378,2.038,480,2.163,500,3.072,589,2.697,635,2.043,714,4.677,717,5.495,763,5.446,764,3.767,788,3.637,798,2.09,843,4.982,845,4.982,848,2.923,951,3.767,952,4.778,1666,2.443,1701,2.248,1776,2.604,1841,2.697,1866,2.803,2196,3.646,2197,5.521,2199,7.279,2202,3.064,2212,3.903,2305,3.903,2306,5.026,2314,2.803,2320,2.803,2521,6.51,2704,4.432,2713,4.982,2772,4.851,2989,3.727,3312,5.708,3318,3.444,3326,3.727,3328,3.727,3332,5.392,3335,4.229,3337,4.432,3351,3.444,3391,6.313,3406,4.982,3407,3.444,3467,3.727,3468,7.744,3469,6.014,3470,4.156,3471,4.156,3472,4.156,3473,4.156,3474,4.156,3475,4.156,3476,6.014,3477,6.943,3478,4.156,3479,4.156,3480,3.727,3481,3.727,3482,3.727,3483,3.444,3484,3.444,3485,4.156,3486,3.727,3487,3.232,3488,6.014,3489,4.156,3490,4.156,3491,4.156,3492,4.156,3493,6.014,3494,6.014,3495,6.014,3496,4.156,3497,6.014,3498,6.014,3499,4.156,3500,7.744,3501,6.014,3502,4.156,3503,6.014,3504,4.156,3505,6.014,3506,4.156,3507,2.604,3508,3.444,3509,2.803,3510,2.923,3511,4.156,3512,6.014,3513,4.156,3514,3.444]],["title/classes/TaskWithStatusVo.html",[31,0.151,2314,3.414]],["body/classes/TaskWithStatusVo.html",[0,0.52,3,0.066,4,0.055,5,0.04,8,0.327,9,0.752,10,1.143,12,0.823,13,0.314,14,0.005,15,0.247,22,0.135,31,0.158,33,0.766,35,2.241,37,2.23,53,1.557,68,0.727,75,2.11,77,1.272,81,4.94,113,0.676,122,1.206,127,1.653,144,1.896,148,1.281,171,0.003,172,0.003,174,0.682,186,0.622,188,0.483,189,0.296,204,1.153,215,1.772,305,2.553,313,1.414,351,2.591,352,1.303,353,1.042,357,1.973,367,2.846,368,1.767,369,1.264,374,2.006,378,2.058,387,2.01,392,2.801,458,2.634,480,3.099,486,1.472,487,1.349,490,1.69,494,1.284,500,2.309,502,2.936,504,1.244,567,2.13,584,2.006,665,2.846,667,3.556,684,2.671,689,2.13,696,1.901,697,1.727,700,2.201,710,2.471,712,2.37,715,1.499,718,1.901,719,1.901,748,1.952,749,2.28,752,1.952,754,4.631,755,2.28,780,2.066,789,3.122,853,5.398,882,2.28,1019,3.032,1055,2.953,1109,2.37,1341,2.554,1818,2.066,1949,2.37,2214,4.256,2269,4.503,2274,4.801,2275,3.764,2284,3.22,2290,2.471,2296,3.581,2302,3.735,2303,2.59,2304,3.735,2305,4.155,2306,4.155,2307,2.733,2308,2.733,2309,6.351,2310,5.81,2311,5.167,2312,5.592,2313,5.049,2314,3.581,2315,4.13,2316,2.733,2317,4.719,2318,2.59,2319,2.733,2320,2.37,2321,2.733,2322,2.733,2323,2.733,2324,2.471,2325,2.733,2326,2.59,2327,2.733,2328,2.733,2329,2.733,2330,2.733,2331,4.13,2332,4.13,2333,2.733,2334,2.733,2335,4.13,2336,2.733,2337,2.733,2338,2.28,2339,2.733,2340,2.733,2341,2.733,2342,2.13,2343,2.733,2344,2.733,2345,4.13,2346,4.979,2347,2.733,2348,4.13,2349,2.733,2350,2.733,2351,2.733,2352,2.733,2353,4.979,2354,2.733,2355,2.733,2356,2.733,2357,2.733,2358,2.733,2359,2.733,2360,2.733,2361,5.26,2362,2.733,2363,2.733,2364,2.733,2365,2.37,2366,4.13,2367,2.733,2368,2.733,2369,2.733,2370,2.733,2371,2.733,2372,4.13,2373,2.201,2374,2.28,2375,2.733,2376,2.733,2377,2.733,2378,2.733,2379,2.733,2380,2.733,2381,2.733,2382,2.733,2383,4.13,2384,2.733,2385,2.733,2386,2.733,2387,2.733,2388,2.066,2389,1.809,2390,3.915,2391,2.733,2392,5.55,2393,2.733,2394,2.733,2395,2.733,3515,5.311,3516,3.514]],["title/classes/Team.html",[31,0.151,807,2.435]],["body/classes/Team.html",[0,0.658,3,0.125,4,0.104,5,0.077,8,0.308,9,0.976,10,1.788,12,1.012,13,0.353,14,0.005,15,0.245,22,0.146,31,0.2,33,1.812,68,1.392,113,0.759,171,0.004,172,0.004,174,1.305,186,0.821,188,0.924,189,0.566,191,3.086,204,2.206,313,1.835,342,6.063,344,3.545,345,2.671,346,2.364,347,3.039,349,3.039,351,3.049,352,1.649,353,1.994,452,2.869,487,2.582,504,2.942,715,2.869,718,3.637,719,3.637,807,3.996,2169,4.534,2396,7.804,2397,6.029,3124,6.029,3125,6.029,3517,8.309]],["title/classes/TeamNews.html",[31,0.151,835,3.286]],["body/classes/TeamNews.html",[0,0.34,3,0.065,4,0.118,5,0.04,8,0.159,9,0.619,10,1.37,12,1.023,13,0.366,14,0.005,15,0.254,22,0.134,31,0.211,33,1.664,43,2.821,44,2.877,45,2.666,46,2.767,47,2.877,48,3.357,77,0.478,113,0.557,122,1.195,144,2.216,148,1.369,171,0.003,172,0.003,174,0.675,180,2.935,181,0.886,186,0.842,188,0.478,189,0.741,191,3.59,198,0.57,204,1.142,305,2.166,306,4.1,307,4.037,309,2.716,313,1.685,328,2.447,344,2.249,345,1.382,346,2.496,347,1.573,349,1.573,351,3.192,352,0.853,353,1.032,357,2.982,364,3.357,369,2.289,377,2.094,378,2.2,380,2.131,382,1.786,383,1.836,386,1.674,387,1.093,401,2.485,452,2.716,475,3.837,482,1.711,483,1.711,484,1.711,485,1.711,486,1.458,487,1.336,490,1.674,494,2.326,496,2.109,497,2.714,498,3.987,502,3.303,504,1.232,515,2.18,610,2.045,665,1.958,668,3.501,681,3.987,682,2.536,697,1.711,698,2.18,723,2.18,748,1.933,752,1.933,767,2.18,768,2.565,769,3.928,770,4.135,771,3.862,772,3.745,773,5.234,774,4.788,775,4.952,776,4.1,778,2.883,779,3.555,780,4.174,781,3.708,782,2.883,783,2.883,784,3.886,785,4.448,786,3.886,787,3.708,788,2.714,789,3.099,790,3.708,791,2.883,792,2.883,793,2.883,794,3.634,795,3.987,796,2.883,797,2.883,798,3.201,799,2.883,800,3.555,801,2.883,802,3.886,803,2.883,804,3.886,805,5.366,806,2.883,807,3.061,808,2.565,809,3.987,810,2.565,811,1.791,812,2.346,813,2.18,814,2.109,815,2.565,816,2.565,817,2.565,818,2.565,819,1.987,820,2.565,821,2.565,822,2.565,823,2.565,824,2.565,825,2.565,826,2.565,827,2.565,828,3.886,829,3.741,830,2.565,831,3.886,832,2.565,833,2.565,834,2.258,835,3.421,836,3.886,3518,3.48]],["title/controllers/TeamNewsController.html",[910,2.288,2852,4.195]],["body/controllers/TeamNewsController.html",[3,0.109,4,0.091,5,0.067,8,0.268,12,0.908,13,0.219,14,0.005,15,0.29,19,0.971,22,0.103,31,0.174,38,4.013,70,1.865,73,2.216,76,1.968,77,0.804,111,2.7,113,0.459,127,1.403,128,1.642,144,2.022,148,1.051,171,0.004,172,0.004,181,1.279,186,0.51,188,0.804,189,0.493,198,0.958,325,1.62,326,2.247,327,2.756,346,1.534,765,4.939,769,2.921,807,4.463,847,3.822,857,3.9,876,2.594,903,2.497,910,2.646,912,2.878,914,3.667,933,4.314,935,3.947,936,4.314,937,5.352,938,3.799,944,4.314,947,4.552,951,5.814,952,4.843,1357,3.342,1537,5.126,1593,4.552,1647,3.548,2169,3.947,2197,5.111,2714,6.599,2715,6.296,2716,4.116,2718,6.305,2728,5.701,2731,4.552,2732,5.248,2733,5.248,2739,4.85,2740,4.85,2741,5.248,2742,5.248,2743,5.248,2744,5.248,2745,5.248,2852,6.305,3519,7.61,3520,5.853,3521,8.455,3522,5.853,3523,7.61,3524,5.853,3525,8.455,3526,5.853,3527,5.853,3528,5.248,3529,5.853,3530,5.853]],["title/classes/TestBootstrapConsole.html",[31,0.151,3531,4.54]],["body/classes/TestBootstrapConsole.html",[3,0.13,4,0.108,5,0.079,8,0.319,12,0.749,14,0.005,15,0.251,22,0.15,31,0.207,33,1.853,43,3.091,44,3.152,45,2.921,46,3.032,47,3.152,48,3.678,73,1.828,76,2.37,77,1.167,127,1.41,128,1.956,171,0.004,172,0.004,174,1.353,181,1.429,186,0.608,198,1.142,271,3.032,622,4.596,632,3.216,1557,5.298,1612,3.772,1614,5.778,1615,6.253,1626,5.424,1629,5.14,1974,5.778,2861,4.526,3161,6.608,3531,7.619,3532,6.253,3533,9.164,3534,6.974,3535,7.619,3536,6.974,3537,5.778,3538,6.253,3539,6.253,3540,6.253,3541,6.253]],["title/injectables/TimeoutInterceptor.html",[18,0.885,2417,4.195]],["body/injectables/TimeoutInterceptor.html",[3,0.106,4,0.088,5,0.065,8,0.26,9,0.876,13,0.312,14,0.005,15,0.261,18,1.304,19,0.942,20,4.415,21,4.184,22,0.1,31,0.169,35,2.436,37,2.61,43,2.516,44,2.566,45,3.706,46,2.468,47,2.566,48,2.994,53,2.516,77,1.216,113,0.585,167,2.378,171,0.004,172,0.004,181,1.254,186,0.801,188,1.025,189,0.745,198,1.221,215,1.571,279,4.703,297,1.891,382,1.592,383,1.637,395,5.617,401,3.252,451,4.415,910,3.371,1016,3.07,1412,5.498,1537,4.522,1613,5.8,1618,6.18,1625,5.245,1681,5.09,1696,6.688,1697,6.688,1698,6.88,1699,7.933,1701,3.07,1702,7.469,1705,4.703,1829,4.142,1830,4.034,2018,4.184,2415,6.634,2417,6.18,2666,5.498,3542,5.676,3543,7.459,3544,5.498,3545,5.245,3546,6.18,3547,8.33,3548,8.33,3549,5.676,3550,5.676,3551,6.902,3552,5.676,3553,5.676,3554,5.676,3555,5.676,3556,5.676,3557,7.459,3558,7.459,3559,5.676,3560,7.459,3561,5.676,3562,5.676,3563,5.676,3564,5.676,3565,5.676,3566,7.459,3567,5.676,3568,5.676]],["title/classes/UpdateNewsParams.html",[31,0.151,2725,3.937]],["body/classes/UpdateNewsParams.html",[3,0.117,4,0.097,5,0.071,8,0.287,9,1.079,12,0.987,13,0.327,14,0.005,15,0.235,22,0.11,31,0.273,171,0.004,172,0.004,174,1.215,180,3.464,186,0.761,189,0.67,215,2.541,313,2.139,346,2.289,378,2.292,413,4.414,769,3.822,771,4.558,772,4.605,875,5.19,876,3.523,878,4.414,880,5.617,882,5.158,883,4.819,884,6.181,885,5.859,902,5.398,903,2.673,904,7.127,905,6.769,906,6.79,907,3.576,1239,4.299,2170,5.36,2678,6.586,2679,6.586,2680,5.36,2681,6.181,2725,6.181,3569,9.183,3570,7.948,3571,6.264,3572,6.264,3573,6.264]],["title/classes/User.html",[31,0.151,144,1.345]],["body/classes/User.html",[0,0.51,3,0.097,4,0.081,5,0.059,8,0.409,9,0.828,10,1.516,12,1.054,13,0.364,14,0.005,15,0.252,22,0.124,31,0.155,33,1.536,68,1.079,113,0.671,120,5.357,144,1.872,148,1.535,171,0.003,172,0.003,174,1.011,186,0.855,188,0.716,189,0.752,191,3.176,204,1.71,313,1.556,344,3.006,345,2.07,346,2.543,347,2.356,349,2.356,351,3.182,352,1.278,353,1.546,357,3.496,377,2.799,378,2.032,380,2.848,382,2.239,383,2.302,386,2.507,387,2.506,452,2.224,482,2.562,483,2.562,484,2.562,485,2.562,486,2.183,487,2.001,494,1.905,502,3.518,504,2.495,668,3.737,681,3.265,682,3.389,684,3.543,685,5.48,696,2.819,698,3.265,715,2.224,722,4.054,723,3.265,1774,4.751,2177,4.855,2179,3.064,2180,3.543,2185,5.549,2186,5.549,2241,4.054,2245,4.054,2398,7.085,2399,4.674,2400,4.674,2401,4.674,2402,4.674,2403,4.674,2404,4.674,2405,4.674,2406,4.674,2407,4.674,2408,4.674,2409,4.674,3089,4.674,3574,7.046,3575,5.212,3576,5.212,3577,5.212,3578,5.212,3579,5.212,3580,5.212,3581,5.212]],["title/controllers/UserController.html",[910,2.288,3582,4.195]],["body/controllers/UserController.html",[3,0.129,4,0.107,5,0.079,8,0.316,13,0.259,14,0.005,15,0.293,19,1.146,22,0.122,31,0.205,70,2.2,73,2.392,76,2.185,77,0.949,113,0.542,144,1.835,171,0.004,172,0.004,181,1.42,186,0.602,188,0.949,189,0.582,198,1.131,325,1.911,326,2.651,346,1.81,903,2.947,910,3.122,912,3.395,914,4.327,933,5.091,935,4.657,936,5.091,944,5.091,951,5.717,952,5.142,1647,4.187,2478,4.482,3582,6.999,3583,6.907,3584,6.907,3585,8.447,3586,6.907,3587,6.418,3588,6.907,3589,6.907,3590,6.907,3591,6.907,3592,6.907]],["title/injectables/UserFacade.html",[18,0.885,2457,3.732]],["body/injectables/UserFacade.html",[3,0.129,4,0.107,5,0.079,8,0.317,13,0.317,14,0.005,15,0.281,18,1.479,19,1.148,22,0.122,31,0.206,68,1.433,70,2.205,73,2.394,75,2.748,76,2.187,77,0.951,113,0.664,127,1.148,128,1.941,171,0.004,172,0.004,181,1.422,186,0.737,188,1.162,189,0.712,198,1.133,297,2.305,305,2.902,325,1.915,326,2.657,1160,4.666,2457,6.233,2478,5.927,3587,6.981,3593,6.92,3594,8.457,3595,6.92,3596,6.92,3597,8.457,3598,6.92,3599,6.92,3600,6.92]],["title/classes/UserInfoMapper.html",[31,0.151,2806,4.195]],["body/classes/UserInfoMapper.html",[3,0.134,4,0.111,5,0.082,8,0.327,13,0.268,14,0.005,15,0.255,22,0.126,31,0.213,77,0.983,113,0.562,127,1.187,144,2.617,148,1.284,171,0.004,172,0.004,174,1.388,181,1.451,186,0.624,188,0.983,189,0.603,198,1.172,325,1.98,401,3.618,876,3.825,1157,5.82,1160,4.825,1161,4.825,2782,7.092,2806,7.151,3063,7.739,3065,5.565,3066,6.416,3067,6.416,3068,6.416,3069,6.416,3127,5.929,3129,5.929,3601,8.631]],["title/classes/UserInfoResponse.html",[31,0.151,2782,3.732]],["body/classes/UserInfoResponse.html",[3,0.126,4,0.105,5,0.077,8,0.308,9,0.978,10,2.084,12,1.06,13,0.338,14,0.005,15,0.199,22,0.119,31,0.2,113,0.74,144,2.62,171,0.004,172,0.004,174,1.307,186,0.787,189,0.794,215,2.608,313,1.837,346,2.366,891,5.043,892,5.043,901,4.09,902,5.305,903,2.874,909,3.846,2185,5.857,2186,5.857,2782,6.132,2910,7.459,2913,5.239,2956,5.61,3135,5.582,3136,5.582,3137,5.582,3602,9.426,3603,7.459,3604,6.737]],["title/modules/UserModule.html",[256,1.309,263,3.561]],["body/modules/UserModule.html",[3,0.124,4,0.103,5,0.075,14,0.005,15,0.284,19,1.099,22,0.117,31,0.197,171,0.004,172,0.004,256,2.129,258,2.501,259,3.579,263,7.332,266,4.14,267,3.055,268,2.826,270,3.387,292,3.876,910,2.994,912,4.047,1647,4.016,1666,3.894,2457,7.607,3093,7.24,3110,7.24,3582,7.422,3587,6.908,3605,5.94,3606,5.94,3607,5.94,3608,6.908,3609,6.625,3610,6.625]],["title/injectables/UserRepo.html",[18,0.885,3608,3.561]],["body/injectables/UserRepo.html",[3,0.129,4,0.107,5,0.079,8,0.317,10,1.82,13,0.317,14,0.005,15,0.27,18,1.479,19,1.148,22,0.122,31,0.206,68,1.433,70,2.205,73,2.394,76,2.187,77,0.951,113,0.664,127,1.148,128,1.941,144,2.426,171,0.004,172,0.004,181,1.422,186,0.737,188,1.162,189,0.712,198,1.133,297,2.305,305,2.902,325,1.915,326,2.657,352,1.697,354,3.191,527,4.068,528,4.897,530,4.067,3096,7.583,3100,7.583,3608,5.947,3611,6.92,3612,6.92,3613,6.92,3614,6.92]],["title/injectables/UserUC.html",[18,0.885,3587,3.561]],["body/injectables/UserUC.html",[3,0.119,4,0.099,5,0.073,8,0.292,13,0.301,14,0.005,15,0.287,18,1.406,19,1.058,22,0.112,31,0.19,35,1.865,68,1.32,70,2.561,73,2.307,75,2.532,76,2.079,77,0.876,113,0.631,127,1.533,128,2.255,144,1.694,171,0.004,172,0.004,181,1.351,186,0.701,188,1.104,189,0.677,198,1.044,297,2.124,305,2.82,325,1.764,326,2.448,367,2.368,635,3.135,1272,4.7,1666,4.725,2177,4.239,2179,3.748,2478,5.713,3061,5.283,3110,7.28,3509,4.299,3587,5.653,3608,6.842,3615,6.376,3616,8.038,3617,6.376,3618,6.376,3619,8.038,3620,6.376,3621,6.376,3622,6.376,3623,5.283,3624,5.283,3625,5.283,3626,5.283,3627,6.376,3628,6.376,3629,5.717,3630,6.376,3631,5.717,3632,6.376,3633,6.376]],["title/classes/ValidationError.html",[31,0.151,185,3.732]],["body/classes/ValidationError.html",[3,0.116,4,0.096,5,0.071,8,0.284,9,0.929,12,1.038,13,0.376,14,0.005,15,0.233,19,1.03,22,0.109,30,5.922,31,0.185,33,1.723,34,2.752,37,1.718,68,1.285,70,3.222,83,5.113,113,0.487,171,0.004,172,0.004,174,1.205,177,6.819,178,3.646,179,5.858,180,3.178,181,1.329,182,7.205,183,7.205,185,5.826,186,0.866,188,0.853,189,0.523,191,3.647,192,5.568,193,5.568,194,5.568,195,5.568,196,5.568,197,5.568,198,1.294,199,5.568,200,3.89,201,4.829,202,5.568,203,5.145,204,2.037,207,3.545,208,4.577,211,5.568,595,3.123,3634,6.21,3635,6.21,3636,6.21,3637,6.21]],["title/classes/ValidationErrorDetailResponse.html",[31,0.151,221,4.195]],["body/classes/ValidationErrorDetailResponse.html",[3,0.141,4,0.118,5,0.086,12,1.089,13,0.284,14,0.005,22,0.133,31,0.225,34,3.959,68,1.569,70,2.415,113,0.595,171,0.004,172,0.004,174,1.471,186,0.661,188,1.042,189,0.639,203,6.281,218,5.275,221,7.401,3638,8.933,3639,7.581,3640,7.581,3641,7.581,3642,7.401]],["title/modules/ValidationModule.html",[256,1.309,644,3.732]],["body/modules/ValidationModule.html",[3,0.142,4,0.118,5,0.087,14,0.005,15,0.281,19,1.261,22,0.134,31,0.226,171,0.004,172,0.004,256,2.313,258,2.869,270,3.125,644,6.593,658,8.02,1616,4.931,1627,3.82,1767,5.908,2113,7.411,3643,7.597,3644,7.597,3645,7.597]],["title/changelog.html",[3646,3.289,3647,2.974,3648,3.792]],["body/changelog.html",[0,0.113,3,0.011,4,0.009,5,0.06,8,0.053,10,0.45,14,0.001,15,0.062,31,0.062,34,2.558,37,0.32,39,0.853,40,0.307,43,0.927,44,0.523,45,0.256,47,0.745,50,0.853,51,1.731,53,1.418,62,1.282,71,0.276,72,0.969,73,0.16,75,0.46,76,0.426,77,0.226,81,0.892,83,0.331,109,0.9,111,1.32,113,0.164,117,0.751,118,0.853,120,1.311,122,0.21,128,0.171,144,2.019,147,0.282,148,1.061,170,0.853,171,0.001,172,0.001,174,0.835,178,1.75,179,0.999,186,0.218,189,0.139,198,0.27,206,2.906,207,2.003,209,1.215,210,0.76,215,0.169,218,2.254,251,1.194,256,0.908,258,0.231,259,0.503,267,0.534,268,0.494,270,0.251,271,0.266,292,0.288,295,1.548,309,1.732,311,0.702,313,0.632,314,0.814,317,0.322,320,1.476,321,1.215,327,0.288,344,0.261,356,0.9,361,0.397,362,3.356,365,0.475,368,2.279,369,1.845,371,3.144,373,0.751,374,0.661,377,0.243,378,1.094,382,0.984,383,0.475,392,1.851,398,1.033,402,0.331,413,1.386,414,1.619,415,0.349,416,0.725,417,1.162,420,0.702,421,0.451,424,0.475,428,1.573,435,0.475,447,0.371,450,0.506,458,0.476,467,0.506,475,0.829,493,1.411,494,0.765,495,2.07,499,0.725,500,0.503,519,0.371,523,3.336,551,0.475,566,1.159,568,0.78,573,0.371,579,0.751,584,0.349,585,0.371,586,0.43,587,1.194,588,1.858,589,0.751,590,1.052,605,0.78,622,1.132,628,0.397,632,1.32,635,3.96,646,0.78,650,0.451,652,2.609,654,2.366,656,0.359,665,1.971,668,2.92,669,2.696,671,3.172,682,0.294,697,0.569,699,0.999,703,0.506,708,1.159,709,0.43,716,1.407,734,0.288,736,0.959,737,1.93,743,0.383,753,0.451,769,0.444,770,0.282,771,1.006,787,1.159,788,2.215,794,0.941,800,0.412,807,1.377,829,0.359,847,0.276,855,0.451,856,4.715,857,1.32,877,1.282,878,0.643,883,1.735,886,0.475,887,4.628,893,0.999,898,1.268,914,0.383,915,1.35,932,2.372,935,0.412,977,0.371,984,0.349,997,0.359,1008,1.07,1017,0.412,1020,0.339,1022,0.412,1027,0.68,1037,1.162,1055,0.76,1117,1.052,1120,0.853,1121,1.619,1124,0.383,1126,0.451,1127,2.254,1129,0.475,1132,0.412,1151,0.814,1168,2.109,1224,0.43,1239,1.35,1285,0.412,1290,0.412,1301,0.959,1341,1.688,1342,1.471,1346,1.755,1348,0.412,1352,0.751,1353,1.949,1356,0.969,1357,1.194,1358,0.661,1362,0.9,1413,1.358,1431,1.358,1472,1.358,1478,1.159,1482,1.94,1483,0.814,1494,0.506,1499,0.725,1500,0.475,1507,1.793,1526,0.475,1533,0.959,1534,0.359,1537,0.702,1545,1.194,1547,1.366,1557,2.254,1560,0.475,1563,1.282,1564,2.366,1565,1.735,1568,0.78,1574,1.358,1584,0.506,1585,5.222,1586,1.411,1611,4.157,1612,2.959,1622,0.475,1623,2.668,1627,0.829,1639,0.506,1641,5.175,1642,0.959,1647,0.371,1666,0.969,1673,2.372,1676,0.506,1677,1.471,1678,0.548,1680,0.451,1685,0.9,1687,1.159,1701,0.331,1718,1.282,1727,0.548,1731,2.669,1732,0.397,1733,1.033,1734,0.475,1741,1.471,1742,1.07,1743,0.475,1774,0.412,1776,1.311,1777,0.582,1778,0.725,1779,0.814,1828,0.68,1829,0.339,1830,1.898,1832,2.25,1841,2.277,1848,0.397,1850,0.475,1858,2.358,1859,1.07,1865,1.282,1882,0.506,1884,3.639,1886,0.959,1915,0.43,1918,0.9,1923,0.506,1924,1.112,1932,0.9,1935,1.033,1937,0.959,1944,0.475,1948,1.033,1949,0.412,1970,6.532,1971,1.282,2028,0.506,2031,0.853,2052,0.506,2053,0.853,2056,0.78,2081,0.853,2084,0.397,2096,1.215,2105,0.506,2116,0.475,2117,0.506,2118,1.733,2121,3.027,2122,3.69,2129,0.9,2130,0.43,2131,2.11,2135,0.506,2168,3.46,2169,1.411,2170,0.412,2177,1.851,2178,2.468,2179,4.501,2180,1.255,2182,0.814,2196,0.702,2197,0.941,2200,0.359,2213,1.159,2214,1.386,2220,1.112,2239,0.475,2264,0.959,2267,1.07,2269,2.07,2274,1.563,2275,0.68,2281,0.506,2284,0.999,2318,1.215,2326,0.451,2338,1.07,2361,2.11,2365,0.78,2374,0.397,2389,4.55,2413,0.383,2415,0.43,2416,3.363,2418,0.78,2426,0.475,2432,0.451,2433,1.93,2440,1.215,2443,0.506,2445,0.506,2454,0.506,2461,1.478,2463,2.729,2465,2.366,2497,1.215,2526,0.959,2546,0.43,2547,0.475,2556,2.277,2571,1.682,2588,1.733,2599,0.475,2618,0.451,2623,1.627,2624,0.397,2628,1.215,2648,0.451,2650,0.43,2653,0.475,2664,0.959,2665,2.468,2666,0.853,2680,1.93,2706,2.25,2756,0.43,2762,3.639,2787,2.586,2788,0.475,2860,1.93,2861,1.07,2862,5.044,2866,0.814,2893,0.506,2896,0.383,2928,0.814,2954,2.237,2956,1.112,2964,0.853,3017,5.286,3019,1.162,3028,1.038,3050,1.038,3085,0.548,3158,0.43,3186,2.586,3204,1.755,3320,2.067,3321,1.876,3322,1.876,3324,3.347,3335,2.468,3361,0.506,3463,0.451,3464,0.853,3483,0.959,3484,0.959,3507,2.543,3508,0.506,3510,1.471,3514,0.959,3544,1.215,3551,0.506,3603,1.478,3623,3.363,3624,0.506,3625,0.959,3642,0.959,3648,2.869,3649,0.611,3650,1.471,3651,0.959,3652,0.548,3653,0.611,3654,0.611,3655,1.648,3656,0.814,3657,4.632,3658,8.663,3659,4.532,3660,0.611,3661,0.611,3662,8.862,3663,4.064,3664,5.13,3665,9.061,3666,0.611,3667,3.755,3668,0.611,3669,7.722,3670,0.611,3671,1.648,3672,0.611,3673,2.863,3674,3.199,3675,0.611,3676,0.548,3677,2.25,3678,0.611,3679,0.611,3680,6.248,3681,3.795,3682,1.157,3683,0.611,3684,1.157,3685,0.611,3686,2.372,3687,2.651,3688,1.839,3689,0.611,3690,1.648,3691,0.611,3692,0.611,3693,0.611,3694,2.237,3695,1.648,3696,0.611,3697,0.611,3698,0.611,3699,0.548,3700,1.157,3701,1.733,3702,0.611,3703,1.648,3704,0.611,3705,1.157,3706,1.648,3707,4.059,3708,0.611,3709,0.611,3710,0.611,3711,0.611,3712,0.475,3713,0.611,3714,1.038,3715,3.056,3716,0.611,3717,1.157,3718,1.478,3719,0.611,3720,0.611,3721,0.611,3722,0.548,3723,0.611,3724,0.611,3725,0.611,3726,0.611,3727,3.199,3728,0.548,3729,2.495,3730,0.611,3731,1.876,3732,0.611,3733,0.611,3734,0.506,3735,1.478,3736,0.611,3737,1.038,3738,0.506,3739,3.402,3740,1.157,3741,0.611,3742,0.611,3743,2.863,3744,1.366,3745,0.814,3746,0.611,3747,0.611,3748,0.611,3749,0.611,3750,2.013,3751,0.611,3752,0.611,3753,3.509,3754,0.611,3755,0.475,3756,0.611,3757,0.611,3758,0.611,3759,1.157,3760,0.548,3761,0.611,3762,0.611,3763,2.495,3764,0.611,3765,0.611,3766,0.959,3767,1.159,3768,0.548,3769,0.611,3770,1.215,3771,2.669,3772,5.626,3773,0.611,3774,0.611,3775,2.092,3776,1.648,3777,2.797,3778,0.611,3779,0.611,3780,0.611,3781,0.611,3782,0.611,3783,0.412,3784,0.611,3785,0.611,3786,0.611,3787,0.611,3788,0.611,3789,0.611,3790,0.611,3791,0.9,3792,1.157,3793,0.611,3794,1.038,3795,0.611,3796,3.795,3797,2.869,3798,0.611,3799,6.167,3800,3.199,3801,0.611,3802,0.548,3803,0.611,3804,0.611,3805,0.611,3806,0.611,3807,0.451,3808,0.611,3809,0.611,3810,0.611,3811,0.611,3812,1.157,3813,0.611,3814,0.611,3815,0.611,3816,0.611,3817,0.9,3818,0.611,3819,0.611,3820,1.157,3821,0.611,3822,3.639,3823,0.611,3824,0.611,3825,0.611,3826,0.611,3827,1.157,3828,1.648,3829,0.611,3830,0.548,3831,0.611,3832,0.611,3833,0.611,3834,2.372,3835,0.611,3836,0.611,3837,1.157,3838,0.611,3839,0.451,3840,2.092,3841,0.548,3842,1.542,3843,0.611,3844,1.648,3845,0.611,3846,6.248,3847,0.611,3848,0.611,3849,0.611,3850,0.611,3851,5.772,3852,0.611,3853,4.254,3854,1.038,3855,0.611,3856,0.611,3857,0.611,3858,3.199,3859,2.372,3860,0.611,3861,0.611,3862,0.611,3863,0.611,3864,1.648,3865,0.611,3866,9.299,3867,0.611,3868,0.506,3869,1.876,3870,1.648,3871,1.157,3872,0.611,3873,0.611,3874,0.611,3875,0.611,3876,1.157,3877,0.611,3878,0.611,3879,1.876,3880,0.506,3881,1.478,3882,0.611,3883,0.611,3884,0.611,3885,0.611,3886,0.611,3887,1.478,3888,0.611,3889,0.611,3890,0.611,3891,0.611,3892,2.067,3893,3.199,3894,2.869,3895,0.611,3896,0.611,3897,0.611,3898,0.611,3899,0.611,3900,0.611,3901,0.611,3902,1.648,3903,0.959,3904,0.611,3905,0.611,3906,0.43,3907,0.611,3908,0.611,3909,0.611,3910,0.548,3911,1.648,3912,0.611,3913,5.772,3914,0.611,3915,1.157,3916,2.495,3917,0.611,3918,0.611,3919,0.611,3920,0.611,3921,1.478,3922,2.495,3923,0.611,3924,2.495,3925,0.611,3926,2.092,3927,1.157,3928,2.488,3929,0.611,3930,0.611,3931,2.092,3932,0.611,3933,4.254,3934,0.611,3935,0.611,3936,1.157,3937,2.092,3938,3.566,3939,0.611,3940,1.157,3941,0.548,3942,0.548,3943,0.475,3944,0.548,3945,2.729,3946,1.542,3947,0.43,3948,1.157,3949,0.611,3950,0.611,3951,1.478,3952,0.611,3953,0.611,3954,0.611,3955,0.611,3956,1.648,3957,0.611,3958,0.611,3959,5.772,3960,2.237,3961,1.157,3962,1.157,3963,1.157,3964,1.876,3965,0.611,3966,0.611,3967,0.611,3968,0.611,3969,1.157,3970,0.611,3971,0.611,3972,1.648,3973,0.611,3974,0.506,3975,0.814,3976,2.237,3977,0.548,3978,1.282,3979,0.611,3980,2.869,3981,0.611,3982,1.648,3983,2.651,3984,0.611,3985,0.611,3986,0.611,3987,1.038,3988,0.611,3989,1.157,3990,0.611,3991,0.611,3992,2.092,3993,2.495,3994,1.733,3995,0.959,3996,0.611,3997,0.611,3998,3.402,3999,0.611,4000,0.611,4001,0.611,4002,0.611,4003,0.611,4004,1.648,4005,0.959,4006,0.611,4007,3.509,4008,1.157,4009,0.611,4010,0.611,4011,0.611,4012,1.876,4013,0.548,4014,0.611,4015,0.611,4016,0.611,4017,0.506,4018,0.611,4019,0.611,4020,0.611,4021,0.611,4022,2.863,4023,2.092,4024,0.611,4025,1.038,4026,2.869,4027,0.506,4028,2.092,4029,1.157,4030,1.038,4031,1.471,4032,1.038,4033,1.038,4034,1.358,4035,0.611,4036,0.611,4037,0.548,4038,0.611,4039,0.506,4040,0.451,4041,0.506,4042,0.611,4043,0.548,4044,0.611,4045,2.092,4046,0.611,4047,6.606,4048,0.611,4049,0.611,4050,0.959,4051,0.611,4052,0.611,4053,0.611,4054,1.648,4055,0.611,4056,1.366,4057,0.611,4058,0.611,4059,0.611,4060,0.611,4061,1.157,4062,0.611,4063,0.611,4064,1.157,4065,0.611,4066,2.092,4067,0.959,4068,0.611,4069,0.611,4070,0.611,4071,0.611,4072,0.611,4073,0.611,4074,0.611,4075,0.611,4076,3.146,4077,0.611,4078,0.548,4079,0.611,4080,1.157,4081,1.215,4082,1.157,4083,0.611,4084,0.611,4085,4.064,4086,0.611,4087,0.611,4088,0.611,4089,0.611,4090,4.059,4091,0.611,4092,0.611,4093,0.611,4094,0.611,4095,2.495,4096,0.611,4097,0.611,4098,1.733,4099,0.506,4100,0.611,4101,0.548,4102,0.611,4103,1.876,4104,0.611,4105,0.611,4106,1.648,4107,0.611,4108,1.876,4109,0.611,4110,0.611,4111,1.648,4112,1.038,4113,1.038,4114,1.157,4115,1.157,4116,1.876,4117,1.157,4118,0.548,4119,0.611,4120,1.157,4121,1.157,4122,1.648,4123,1.157,4124,1.876,4125,0.611,4126,1.038,4127,0.611,4128,1.157,4129,1.038,4130,0.611,4131,2.869,4132,1.157,4133,0.611,4134,2.237,4135,0.611,4136,2.863,4137,3.199,4138,0.611,4139,0.611,4140,1.157,4141,0.611,4142,0.611,4143,0.611,4144,0.611,4145,0.548,4146,0.611,4147,0.611,4148,0.611,4149,0.611,4150,0.611,4151,0.611,4152,0.611,4153,0.611,4154,0.611,4155,1.157,4156,3.402,4157,1.478,4158,0.959,4159,0.611,4160,0.611,4161,1.157,4162,1.157,4163,0.611,4164,1.733,4165,0.611,4166,0.611,4167,0.611,4168,0.611,4169,0.611,4170,0.611,4171,2.092,4172,3.795,4173,0.611,4174,0.611,4175,0.611,4176,0.506,4177,0.611,4178,0.611,4179,0.611,4180,1.157,4181,1.038,4182,1.157,4183,1.038,4184,1.157,4185,0.611,4186,0.611,4187,0.611,4188,0.611,4189,0.611,4190,1.157,4191,0.611,4192,0.611,4193,1.038,4194,0.611,4195,0.611,4196,1.478,4197,1.876,4198,0.611,4199,0.611,4200,0.611,4201,0.611,4202,0.611,4203,0.611,4204,0.611,4205,2.863,4206,1.157,4207,0.611,4208,0.611,4209,0.611,4210,0.611,4211,0.611,4212,0.611,4213,1.038,4214,0.611,4215,0.611,4216,0.611,4217,0.611,4218,0.611,4219,0.611,4220,2.495,4221,1.157,4222,0.611,4223,1.648,4224,0.611,4225,0.611,4226,0.611,4227,1.157,4228,0.611,4229,0.611,4230,1.157,4231,0.611,4232,0.611,4233,0.9,4234,1.157,4235,0.611,4236,0.611,4237,0.611,4238,0.506,4239,0.611,4240,1.157,4241,1.038,4242,0.611,4243,0.611,4244,0.611,4245,0.611,4246,2.495,4247,0.548,4248,0.611,4249,0.611,4250,0.548,4251,2.092,4252,0.959,4253,0.611,4254,1.157,4255,1.648,4256,0.611,4257,0.611,4258,0.611,4259,0.611,4260,1.157,4261,0.611,4262,0.506,4263,0.611,4264,0.611,4265,0.611,4266,1.648,4267,0.611,4268,0.611,4269,1.157,4270,0.611,4271,0.611,4272,0.611,4273,0.548,4274,1.157,4275,0.611,4276,1.648,4277,0.611,4278,0.611,4279,1.215,4280,1.542,4281,0.611,4282,0.611,4283,0.611,4284,0.611,4285,1.648,4286,1.627,4287,0.611,4288,0.548,4289,0.611,4290,0.611,4291,0.611,4292,0.611,4293,1.648,4294,0.611,4295,0.611,4296,1.157,4297,0.611,4298,1.478,4299,1.157,4300,0.611,4301,0.611,4302,0.611,4303,0.611,4304,0.611,4305,0.475,4306,0.9,4307,0.475,4308,0.611,4309,0.611,4310,0.548,4311,1.038,4312,0.611,4313,0.611,4314,0.611,4315,0.611,4316,1.648,4317,0.611,4318,0.611,4319,0.611,4320,2.092,4321,0.611,4322,1.157,4323,1.157,4324,0.611,4325,0.611,4326,0.611,4327,1.157,4328,0.611,4329,0.611,4330,0.611,4331,0.548,4332,0.548,4333,0.611,4334,0.611,4335,0.611,4336,0.548,4337,0.611,4338,0.611,4339,0.611,4340,0.611,4341,0.611,4342,0.611,4343,0.611,4344,0.611,4345,0.548,4346,0.611,4347,0.611,4348,0.611,4349,0.611,4350,0.611,4351,1.157,4352,0.611,4353,0.611,4354,1.157,4355,0.611,4356,0.959,4357,1.542,4358,0.611,4359,1.157,4360,0.548,4361,0.611,4362,0.548,4363,0.611,4364,1.157,4365,0.611,4366,0.611,4367,0.506,4368,0.611,4369,2.495,4370,0.611,4371,0.611,4372,0.611,4373,0.611,4374,0.548,4375,0.611,4376,0.611,4377,0.611,4378,0.611,4379,0.611,4380,0.475,4381,0.611,4382,0.611,4383,0.611,4384,0.611,4385,0.611,4386,0.611,4387,0.853,4388,1.157,4389,0.611,4390,1.648,4391,0.611,4392,0.611,4393,0.611,4394,0.611,4395,0.611,4396,0.611,4397,0.611,4398,0.611,4399,0.611,4400,1.157,4401,0.506,4402,1.157,4403,0.548,4404,0.611,4405,0.611,4406,0.506,4407,0.611,4408,8.613,4409,0.611,4410,0.611,4411,0.506,4412,0.611,4413,0.611,4414,0.611,4415,0.611,4416,0.611,4417,2.863,4418,0.611,4419,1.215,4420,0.611,4421,0.611,4422,0.611,4423,0.611,4424,0.611,4425,2.092,4426,1.876,4427,1.542,4428,1.478,4429,2.495,4430,1.157,4431,1.157,4432,3.146,4433,1.627,4434,1.038,4435,1.157,4436,1.157,4437,0.959,4438,0.611,4439,0.611,4440,2.869,4441,0.506,4442,0.43,4443,0.611,4444,0.475,4445,0.43,4446,0.475,4447,0.611,4448,0.611,4449,0.611,4450,0.611,4451,0.611,4452,0.611,4453,0.611,4454,1.157,4455,0.611,4456,0.611,4457,1.157,4458,0.611,4459,0.611,4460,0.611,4461,0.548,4462,0.611,4463,0.611,4464,1.038,4465,0.506,4466,0.611,4467,1.648,4468,0.611,4469,0.548,4470,1.157,4471,0.611,4472,0.611,4473,0.548,4474,0.611,4475,1.157,4476,0.611,4477,0.611,4478,0.611,4479,0.611,4480,0.611,4481,1.038,4482,1.038,4483,2.092,4484,1.733,4485,0.611,4486,0.611,4487,0.611,4488,1.366,4489,0.611,4490,0.611,4491,0.611,4492,1.157,4493,1.648,4494,0.611,4495,0.611,4496,0.611,4497,0.611,4498,1.157,4499,0.611,4500,0.548,4501,1.157,4502,0.611,4503,0.548,4504,0.611,4505,0.611,4506,0.611,4507,1.157,4508,1.157,4509,0.611,4510,0.611,4511,0.611,4512,0.611,4513,0.611,4514,1.648,4515,1.648,4516,0.43,4517,2.067,4518,0.611,4519,1.157,4520,0.611,4521,0.611,4522,1.157,4523,1.648,4524,1.038,4525,0.611,4526,0.611,4527,0.548,4528,0.611,4529,0.611,4530,0.611,4531,0.611,4532,0.611,4533,0.611,4534,0.611,4535,0.611,4536,0.611,4537,0.611,4538,0.611,4539,0.611,4540,1.157,4541,0.548,4542,0.506,4543,0.611,4544,0.506,4545,0.611,4546,0.506,4547,0.611,4548,1.366,4549,0.611,4550,0.611,4551,0.611,4552,1.157,4553,0.611,4554,0.611,4555,0.611,4556,0.959,4557,0.611,4558,0.611,4559,0.611,4560,0.611,4561,0.611,4562,0.548,4563,0.611,4564,1.157,4565,0.611,4566,0.611,4567,1.157,4568,1.157,4569,1.648,4570,1.876,4571,1.157,4572,1.366,4573,0.959,4574,0.611,4575,0.548,4576,0.611,4577,0.853,4578,0.611,4579,0.611,4580,0.611,4581,0.611,4582,0.611,4583,0.548,4584,0.611,4585,1.157,4586,1.648,4587,1.038,4588,0.611,4589,0.611,4590,0.611,4591,1.157,4592,1.157,4593,0.611,4594,0.611,4595,0.611,4596,0.611,4597,0.611,4598,0.611,4599,0.611,4600,0.611,4601,0.611,4602,0.548,4603,0.548,4604,0.611,4605,0.611,4606,1.648,4607,0.611,4608,1.157,4609,0.611,4610,1.038,4611,0.611,4612,1.157,4613,0.611,4614,1.157,4615,0.959,4616,0.611,4617,0.548,4618,0.611,4619,0.611,4620,0.548,4621,1.648,4622,2.092,4623,1.157,4624,1.038,4625,1.157,4626,0.959,4627,1.157,4628,0.611,4629,1.157,4630,0.548,4631,0.611,4632,1.157,4633,1.038,4634,0.611,4635,0.548,4636,0.611,4637,0.611,4638,0.611,4639,1.157,4640,0.611,4641,0.611,4642,0.611,4643,0.611,4644,0.611,4645,0.611,4646,0.611,4647,0.611,4648,0.611,4649,0.611,4650,0.611,4651,0.611,4652,0.611,4653,0.611,4654,0.611,4655,0.611,4656,0.611,4657,0.611,4658,0.959,4659,0.611,4660,0.611,4661,0.611,4662,0.611,4663,0.611,4664,0.611,4665,0.611,4666,0.611,4667,0.611,4668,0.611,4669,0.506,4670,0.611,4671,0.506,4672,0.611,4673,0.611,4674,0.548,4675,0.611,4676,0.611,4677,0.611,4678,0.611,4679,0.611,4680,0.611,4681,0.611,4682,0.611,4683,0.611,4684,0.506,4685,0.611,4686,0.611,4687,0.611,4688,0.611,4689,1.648,4690,0.611,4691,1.157,4692,1.648,4693,1.157,4694,1.157,4695,1.157,4696,1.157,4697,0.611,4698,0.611,4699,0.611,4700,0.611,4701,0.611,4702,0.611,4703,0.548,4704,0.611,4705,1.157,4706,0.611,4707,0.611,4708,0.475,4709,0.611,4710,0.506,4711,0.611,4712,1.157,4713,0.611,4714,0.475,4715,0.611,4716,0.611,4717,0.611,4718,0.611,4719,0.506,4720,0.611,4721,1.648,4722,1.648,4723,0.611,4724,0.611,4725,0.611,4726,0.611,4727,0.611,4728,0.611,4729,0.611,4730,0.548,4731,0.611,4732,0.611,4733,1.157,4734,0.548,4735,0.548,4736,0.548,4737,0.611,4738,0.611,4739,0.611,4740,0.611,4741,0.611,4742,0.611,4743,0.611,4744,0.611,4745,0.611,4746,1.157,4747,1.157,4748,0.611,4749,0.548,4750,0.611,4751,0.611,4752,0.611,4753,1.157,4754,0.611,4755,0.611,4756,1.157,4757,0.611,4758,1.157,4759,0.611,4760,0.611,4761,2.092,4762,0.611,4763,0.611,4764,0.611,4765,0.611,4766,0.611,4767,0.9,4768,0.548,4769,1.157,4770,0.611,4771,0.611,4772,0.611,4773,0.611,4774,0.611,4775,0.611,4776,0.611,4777,0.611,4778,0.611,4779,0.611,4780,0.611,4781,0.611,4782,1.648,4783,0.611,4784,0.611,4785,0.611,4786,0.611,4787,0.611,4788,0.611,4789,0.611,4790,1.157,4791,1.157,4792,0.611,4793,0.611,4794,0.611,4795,2.092,4796,4.532,4797,1.157,4798,0.959,4799,1.038,4800,1.157,4801,1.157,4802,0.611,4803,1.157,4804,1.038,4805,1.157,4806,1.157,4807,1.157,4808,1.157,4809,2.092,4810,1.157,4811,2.092,4812,1.157,4813,1.157,4814,0.959,4815,1.648,4816,1.157,4817,0.611,4818,0.506,4819,0.9,4820,1.157,4821,0.611,4822,2.495,4823,1.157,4824,0.611,4825,0.506,4826,0.611,4827,2.092,4828,0.611,4829,0.611,4830,0.611,4831,0.611,4832,0.548,4833,0.611,4834,0.611,4835,0.611,4836,1.157,4837,1.157,4838,1.157,4839,0.611,4840,0.611,4841,0.611,4842,0.611,4843,0.611,4844,1.157,4845,1.157,4846,0.611,4847,0.611,4848,0.611,4849,0.475,4850,0.611,4851,0.611,4852,0.611,4853,1.157,4854,0.611,4855,1.648,4856,1.478,4857,0.611,4858,0.611,4859,0.506,4860,1.157,4861,1.157,4862,0.611,4863,0.475,4864,0.611,4865,0.611,4866,1.648,4867,1.157,4868,1.157,4869,0.611,4870,1.157,4871,0.611,4872,0.611,4873,0.611,4874,2.092,4875,0.611,4876,0.611,4877,0.611,4878,0.611,4879,0.611,4880,0.611,4881,0.611,4882,1.157,4883,0.611,4884,0.611,4885,0.611,4886,0.548,4887,0.611,4888,1.157,4889,0.611,4890,0.611,4891,0.506,4892,0.611,4893,1.157,4894,0.611,4895,0.548,4896,0.611,4897,1.157,4898,1.157,4899,0.611,4900,0.611,4901,0.548,4902,1.157,4903,0.611,4904,0.611,4905,1.157,4906,1.157,4907,0.611,4908,0.611,4909,0.611,4910,1.157,4911,1.157,4912,0.611,4913,0.611,4914,1.157,4915,0.611,4916,0.611,4917,0.611,4918,1.157,4919,0.611,4920,0.611,4921,0.548,4922,0.611,4923,2.092,4924,0.506,4925,0.611,4926,1.157,4927,0.475,4928,1.157,4929,0.611,4930,2.495,4931,1.157,4932,0.475,4933,0.611,4934,0.611,4935,0.506,4936,0.611,4937,0.611,4938,0.611,4939,0.611,4940,0.611,4941,0.611,4942,0.611,4943,0.611,4944,0.611,4945,0.611,4946,0.611,4947,0.611,4948,1.038,4949,0.611,4950,0.611,4951,0.611,4952,0.611,4953,0.506,4954,0.611,4955,0.611,4956,0.548,4957,0.611,4958,0.548,4959,0.611,4960,0.611,4961,0.611,4962,0.506,4963,0.475,4964,0.611,4965,0.611,4966,1.648,4967,0.611,4968,0.548,4969,0.611,4970,0.548,4971,0.611,4972,0.611,4973,0.611,4974,0.611,4975,0.611,4976,2.092,4977,0.611,4978,0.611,4979,0.548,4980,0.611,4981,1.478,4982,0.611,4983,0.611,4984,0.611,4985,0.611,4986,0.548,4987,0.611,4988,0.611,4989,1.157,4990,0.611,4991,0.611,4992,0.611,4993,0.475,4994,1.157,4995,0.611,4996,0.611,4997,0.611,4998,0.611,4999,1.648,5000,1.157,5001,1.157,5002,0.611,5003,0.548,5004,1.157,5005,0.548,5006,1.648,5007,0.611,5008,0.611,5009,0.611,5010,0.611,5011,0.611,5012,1.157,5013,1.157,5014,1.157,5015,1.157,5016,1.478,5017,1.157,5018,0.611,5019,1.157,5020,0.611,5021,1.157,5022,0.548,5023,1.648,5024,0.611,5025,0.611,5026,0.611,5027,0.611,5028,2.495,5029,0.611,5030,0.548,5031,0.611,5032,0.611,5033,0.611,5034,0.548,5035,0.611,5036,0.959,5037,0.611,5038,0.475,5039,0.611,5040,0.611,5041,0.611,5042,0.611,5043,1.157,5044,0.611,5045,0.611,5046,0.611,5047,0.611,5048,0.611,5049,0.611,5050,0.611,5051,0.506,5052,0.611,5053,0.611,5054,1.157,5055,0.548]],["title/dependencies.html",[259,2.647,4669,3.504]],["body/dependencies.html",[4,0.067,5,0.071,10,0.933,13,0.162,14,0.005,19,0.719,24,2.812,31,0.184,43,2.746,73,1.624,76,2.042,120,2.714,126,2.812,171,0.003,172,0.003,206,2.084,259,1.884,273,3.37,275,3.885,295,3.912,320,1.998,352,1.774,353,1.285,354,1.998,578,3.37,588,4.694,622,2.344,632,1.998,635,2.13,646,2.922,648,2.922,704,2.922,779,4.178,795,2.714,903,1.849,907,4.13,977,2.627,1227,3.37,1431,2.812,1505,3.37,1564,2.922,1616,2.812,1705,3.59,1732,2.812,1733,3.882,1734,3.37,1830,3.352,1848,5.123,1849,3.59,1882,3.59,1935,2.714,1957,3.885,2433,2.922,2464,6.485,2465,2.922,2500,3.885,2570,3.194,2571,2.922,2606,3.37,2665,3.047,2955,3.885,3161,3.37,3204,6.548,3274,3.885,3745,3.047,3794,3.885,3802,3.885,3854,3.885,3869,3.885,4158,5.134,4183,3.885,4310,3.885,4311,3.885,4356,5.134,4360,3.885,4461,3.885,4481,3.885,4482,3.885,4527,3.885,4562,3.885,4577,4.567,4587,3.885,4768,3.885,5003,3.885,5056,6.196,5057,8.944,5058,4.333,5059,4.333,5060,4.333,5061,4.333,5062,4.333,5063,4.333,5064,6.196,5065,4.333,5066,7.894,5067,4.333,5068,4.333,5069,4.333,5070,4.333,5071,4.333,5072,4.333,5073,4.333,5074,4.333,5075,4.333,5076,4.333,5077,3.59,5078,4.333,5079,4.333,5080,6.196,5081,4.333,5082,4.333,5083,4.333,5084,4.333,5085,4.333,5086,4.333,5087,4.333,5088,6.196,5089,4.333,5090,6.196,5091,4.333,5092,4.333,5093,4.333,5094,8.351,5095,4.333,5096,4.333,5097,4.333,5098,4.333,5099,3.885,5100,4.333,5101,4.333,5102,4.333,5103,4.333,5104,6.196,5105,4.333,5106,7.233,5107,4.333,5108,4.333,5109,6.196,5110,4.333,5111,6.196,5112,6.196,5113,4.333,5114,4.333,5115,4.333,5116,4.333,5117,3.194,5118,4.333,5119,4.333,5120,4.333,5121,4.333,5122,4.333,5123,6.196,5124,4.333,5125,4.333,5126,4.333,5127,4.333,5128,4.333,5129,4.333,5130,4.333,5131,4.333,5132,4.333,5133,4.333,5134,4.333,5135,4.333,5136,4.333,5137,4.333,5138,4.333,5139,4.333,5140,4.333,5141,6.196,5142,5.556,5143,4.333,5144,4.333,5145,4.333,5146,4.333,5147,3.885,5148,4.333,5149,4.333,5150,6.196,5151,4.333,5152,4.333,5153,4.333,5154,4.333,5155,4.333,5156,4.333,5157,4.333,5158,4.333,5159,4.333,5160,4.333,5161,4.333,5162,4.333,5163,6.196,5164,4.333,5165,4.333,5166,4.333,5167,4.333,5168,4.333,5169,6.196,5170,3.885,5171,4.333,5172,4.333,5173,4.333,5174,4.333,5175,4.333,5176,4.333,5177,4.333,5178,4.333,5179,3.885,5180,4.333,5181,4.333,5182,4.333,5183,4.333,5184,4.333,5185,4.333,5186,4.333,5187,4.333,5188,3.59,5189,4.333,5190,4.333,5191,4.333,5192,4.333,5193,4.333,5194,4.333,5195,4.333,5196,4.333,5197,4.333,5198,4.333,5199,4.333]],["title/miscellaneous/enumerations.html",[5200,2.744,5201,5.46]],["body/miscellaneous/enumerations.html",[8,0.338,14,0.005,171,0.004,172,0.004,307,4.42,383,2.937,665,2.74,668,2.88,716,3.627,807,3.548,1591,6.479,1935,4.622,1947,5.438,2163,5.737,2168,4.975,2169,4.975,2194,5.737,2195,6.836,2202,6.479,2203,7.283,3313,6.615,3318,7.283,3467,6.615,3477,7.881,3480,6.615,3481,6.615,3482,6.615,3483,6.113,5200,4.788,5201,6.615,5202,6.615,5203,6.615,5204,7.378,5205,7.378]],["title/miscellaneous/functions.html",[5200,2.744,5206,4.488]],["body/miscellaneous/functions.html",[8,0.254,12,0.943,13,0.329,14,0.005,34,3.655,38,2.933,113,0.689,122,1.909,138,5.166,142,4.221,171,0.004,172,0.004,177,4.962,188,1.206,189,0.739,198,1.495,200,4.61,206,2.675,313,1.228,320,3.803,361,3.609,369,2.001,373,3.609,383,2.122,421,4.099,458,2.288,480,2.001,488,4.708,500,2.418,595,2.797,628,5.924,779,6.451,813,3.484,856,4.099,876,2.465,928,4.518,1055,2.565,1623,3.7,1743,4.325,1819,5.424,1828,4.325,1852,3.75,1876,4.987,1880,4.987,1885,4.987,1903,6.598,1918,4.325,1923,4.608,1939,4.987,2032,4.608,2033,6.825,2067,4.608,2070,4.608,2074,4.608,2092,6.097,2096,5.424,2124,5.175,2373,3.484,2413,3.484,2548,4.608,2756,3.911,2767,7.394,3158,5.8,3360,6.833,3537,7.771,3739,4.987,4181,4.987,4273,4.987,4426,6.598,4626,4.608,4814,4.608,5117,4.099,5200,3.609,5206,4.099,5207,5.562,5208,5.562,5209,7.359,5210,7.394,5211,7.359,5212,7.359,5213,5.562,5214,5.562,5215,7.359,5216,5.562,5217,7.359,5218,5.562,5219,5.562,5220,5.562,5221,7.272,5222,4.987,5223,7.359,5224,4.987,5225,5.562,5226,4.987,5227,4.608,5228,7.359,5229,7.359,5230,4.987,5231,5.562,5232,4.987,5233,7.394,5234,5.562,5235,5.562,5236,4.608,5237,4.987,5238,7.359,5239,5.562,5240,5.562]],["title/index.html",[8,0.193,3646,3.289,3647,2.974]],["body/index.html",[10,1.01,14,0.005,34,2.905,37,2.09,53,2.079,83,2.538,113,0.514,148,0.842,171,0.003,172,0.004,178,3.484,179,2.844,180,1.715,206,3.152,210,3.023,215,1.298,217,3.045,259,2.04,295,4.654,323,3.045,355,3.649,361,5.308,362,3.64,365,5.097,366,2.939,368,2.359,369,1.688,373,3.045,382,1.316,392,3.457,400,3.649,416,2.939,523,2.538,589,4.254,590,4.964,632,3.968,652,2.844,654,3.164,709,3.3,769,2.516,790,3.3,794,2.679,829,3.853,855,3.458,878,2.606,883,2.844,914,4.733,1117,2.359,1290,3.164,1353,4.951,1366,2.939,1469,3.3,1483,5.752,1499,5.848,1507,2.939,1557,4.196,1562,3.3,1574,4.254,1585,3.742,1611,3.3,1612,2.538,1623,3.296,1701,2.538,1731,3.3,1732,3.045,1733,4.106,1779,5.313,1828,2.758,1830,3.545,1848,5.308,1850,3.649,1859,4.254,1935,2.939,2084,4.254,2089,3.649,2130,3.3,2196,2.844,2388,2.758,2418,3.164,2624,3.045,2652,3.887,2756,3.3,2895,4.831,2896,2.939,2956,3.164,3025,4.207,3463,3.458,3507,4.733,3650,3.3,3651,3.887,3677,3.3,3715,5.094,3722,4.207,3750,3.3,3760,5.877,3771,3.3,3783,3.164,3853,5.097,3866,4.207,3881,8.204,3892,3.887,3928,3.649,3941,5.877,3943,5.097,3947,3.3,3978,3.649,4039,3.887,4041,3.887,4196,4.207,4241,6.774,4280,4.831,4357,3.458,4387,3.458,4401,5.431,4419,4.831,4427,3.458,4444,3.649,4445,5.752,4516,3.3,4544,6.259,4546,5.431,4575,4.207,4714,3.649,4736,4.207,4818,3.887,4819,5.097,4859,3.887,4962,3.887,4993,3.649,5034,4.207,5036,3.887,5117,3.458,5241,3.649,5242,7.386,5243,4.831,5244,3.649,5245,3.887,5246,3.649,5247,5.431,5248,4.42,5249,4.207,5250,4.692,5251,5.877,5252,5.877,5253,4.692,5254,4.692,5255,4.692,5256,3.649,5257,4.207,5258,6.555,5259,4.207,5260,4.207,5261,3.458,5262,7.555,5263,5.313,5264,4.207,5265,4.692,5266,4.207,5267,5.431,5268,4.692,5269,3.887,5270,4.692,5271,4.692,5272,4.692,5273,4.207,5274,3.649,5275,4.692,5276,4.207,5277,6.555,5278,6.555,5279,8.605,5280,8.178,5281,4.692,5282,4.692,5283,6.555,5284,4.207,5285,4.692,5286,3.887,5287,6.555,5288,4.692,5289,4.207,5290,6.555,5291,3.458,5292,4.207,5293,4.692,5294,4.692,5295,3.649,5296,4.692,5297,4.207,5298,3.887,5299,5.097,5300,4.692,5301,4.692,5302,4.207,5303,4.692,5304,3.164,5305,3.887]],["title/license.html",[3646,3.289,3647,2.974,5306,3.792]],["body/license.html",[0,0.457,2,0.755,4,0.143,5,0.022,14,0.001,15,0.031,31,0.031,35,0.309,37,0.533,40,1.646,45,0.443,46,0.46,51,2.722,55,1.499,71,0.478,72,4.881,77,0.145,81,0.572,111,2.827,117,0.686,126,0.686,144,1.784,148,0.903,167,0.443,171,0.001,172,0.001,178,4.03,179,0.641,181,0.178,186,0.092,210,1.51,217,1.251,245,0.686,251,0.604,252,2.77,268,0.451,309,2.406,311,1.985,313,0.426,317,1.017,322,2.381,323,4.117,351,0.358,356,3.635,369,2.712,374,5.66,378,0.305,392,2.251,413,0.587,416,2.051,417,4.187,428,1.61,432,0.779,450,1.597,467,6.569,495,1.575,523,1.043,567,0.641,585,0.641,587,1.1,590,0.532,605,0.713,635,0.947,648,0.713,653,0.822,668,0.413,699,0.641,702,2.065,707,0.876,734,0.907,737,0.713,738,0.876,771,0.509,785,0.662,788,2.902,789,0.622,813,2.385,847,0.478,878,1.475,883,1.985,885,0.779,888,2.303,898,0.641,1019,0.604,1027,2.237,1055,1.755,1064,0.641,1117,0.969,1118,0.662,1125,0.822,1126,0.779,1168,1.133,1224,1.355,1285,3.152,1290,1.791,1355,2.805,1356,1.925,1358,1.1,1472,1.251,1503,0.876,1507,2.385,1534,3.466,1537,1.61,1538,3.978,1545,2.437,1567,0.876,1574,1.723,1585,1.516,1586,0.713,1623,2.965,1627,2.146,1640,0.948,1642,1.597,1664,2.381,1687,2.303,1701,0.572,1741,3.539,1776,2.051,1777,3.287,1779,3.539,1827,1.791,1848,1.251,1866,0.713,1924,0.713,1944,3.914,2056,1.3,2121,0.744,2131,2.413,2133,1.421,2179,3.466,2196,1.168,2201,1.133,2240,3.146,2373,2.051,2388,3.314,2389,1.685,2390,0.779,2430,0.876,2433,1.791,2481,0.876,2497,4.518,2546,0.744,2549,0.713,2551,0.779,2618,0.779,2624,0.686,2647,3.445,2649,0.876,2650,3.002,2653,2.065,2665,2.303,2681,4.162,2746,0.876,2756,4.311,2861,0.686,2895,1.421,2896,2.674,2956,0.713,2964,0.779,3017,2.065,3142,0.948,3158,1.355,3163,0.948,3462,1.421,3487,0.822,3507,2.674,3514,2.2,3528,1.728,3545,2.303,3624,2.2,3625,3.154,3626,0.876,3629,0.948,3652,0.948,3656,1.868,3657,2.413,3658,1.728,3663,1.728,3686,7.12,3687,1.597,3715,3.152,3718,0.948,3731,0.948,3734,1.597,3737,2.381,3738,1.597,3744,0.876,3750,3.539,3767,2.303,3822,0.948,3834,0.876,3839,0.779,3853,0.822,3879,0.948,3903,0.876,3943,6.982,3946,5.709,3947,1.868,3960,0.948,3974,1.597,3983,1.597,3994,0.876,3998,0.948,4005,1.597,4013,2.936,4017,1.597,4025,0.948,4031,0.744,4037,2.381,4039,0.876,4056,2.713,4067,0.876,4076,1.728,4081,0.779,4099,0.876,4112,1.728,4124,0.948,4145,0.948,4158,1.597,4197,0.948,4213,0.948,4233,2.96,4250,1.728,4252,0.876,4262,1.597,4279,0.779,4286,0.822,4288,0.948,4305,0.822,4306,2.96,4331,0.948,4362,0.948,4380,0.822,4387,1.421,4403,1.728,4406,1.597,4411,0.876,4427,0.779,4433,3.635,4444,6.507,4445,3.965,4446,2.065,4465,1.597,4500,0.948,4542,0.876,4556,0.876,4570,0.948,4572,1.597,4573,1.597,4602,0.948,4624,0.948,4626,0.876,4658,0.876,4684,0.876,4708,1.499,4798,1.597,4819,2.546,4825,1.597,4859,1.597,4863,2.065,4895,1.728,4927,2.065,4932,0.822,4935,3.537,4953,4.885,4956,0.948,4963,0.822,4968,6.305,4970,1.728,4979,0.948,5016,0.948,5022,1.728,5038,4.586,5117,0.779,5224,2.936,5226,0.948,5230,0.948,5232,0.948,5233,0.948,5242,0.876,5245,0.876,5261,5.383,5263,0.744,5264,2.381,5269,3.873,5289,0.948,5291,1.957,5299,2.065,5304,0.713,5306,8.949,5307,7.032,5308,6.88,5309,1.057,5310,2.656,5311,8.236,5312,5.701,5313,6.097,5314,3.806,5315,1.057,5316,1.057,5317,1.927,5318,3.806,5319,2.656,5320,2.656,5321,6.13,5322,1.057,5323,1.057,5324,1.728,5325,3.806,5326,3.873,5327,1.927,5328,1.927,5329,5.862,5330,5.033,5331,1.057,5332,1.057,5333,4.269,5334,1.728,5335,0.948,5336,0.948,5337,5.287,5338,8.942,5339,2.656,5340,2.381,5341,1.057,5342,1.057,5343,3.274,5344,5.352,5345,1.057,5346,5.352,5347,1.057,5348,3.806,5349,0.822,5350,0.876,5351,6.022,5352,0.948,5353,0.948,5354,5.638,5355,5.896,5356,3.806,5357,6.13,5358,1.057,5359,1.927,5360,1.057,5361,1.057,5362,2.381,5363,1.057,5364,1.057,5365,1.057,5366,1.057,5367,1.057,5368,1.057,5369,3.274,5370,2.656,5371,1.057,5372,1.057,5373,6.051,5374,2.065,5375,1.057,5376,2.2,5377,2.656,5378,1.057,5379,2.381,5380,0.822,5381,1.927,5382,1.927,5383,2.656,5384,1.057,5385,5.255,5386,3.806,5387,3.806,5388,4.269,5389,2.656,5390,1.927,5391,1.057,5392,1.057,5393,1.057,5394,2.656,5395,1.057,5396,1.057,5397,1.927,5398,1.057,5399,1.927,5400,1.057,5401,1.057,5402,3.274,5403,0.948,5404,1.927,5405,8.904,5406,2.656,5407,5.352,5408,2.936,5409,1.499,5410,1.057,5411,1.927,5412,2.656,5413,5.352,5414,5.638,5415,1.057,5416,3.274,5417,1.927,5418,3.274,5419,2.936,5420,1.057,5421,2.656,5422,8.012,5423,1.728,5424,1.057,5425,5.033,5426,1.057,5427,2.381,5428,3.002,5429,1.057,5430,6.716,5431,2.381,5432,1.927,5433,5.896,5434,4.269,5435,1.057,5436,1.927,5437,4.674,5438,1.057,5439,6.343,5440,1.927,5441,1.057,5442,0.876,5443,1.057,5444,2.656,5445,1.057,5446,1.057,5447,1.057,5448,0.876,5449,2.656,5450,2.936,5451,1.057,5452,1.057,5453,1.057,5454,1.728,5455,5.638,5456,0.948,5457,0.876,5458,2.381,5459,2.656,5460,2.656,5461,1.057,5462,3.413,5463,0.948,5464,1.355,5465,2.381,5466,1.057,5467,1.057,5468,1.057,5469,1.728,5470,1.057,5471,7.254,5472,2.381,5473,0.779,5474,1.927,5475,1.927,5476,3.154,5477,1.057,5478,1.057,5479,1.057,5480,1.927,5481,1.057,5482,1.597,5483,1.057,5484,3.154,5485,1.057,5486,0.876,5487,4.674,5488,2.713,5489,1.057,5490,3.413,5491,1.057,5492,1.057,5493,1.057,5494,1.057,5495,1.057,5496,1.057,5497,2.656,5498,1.057,5499,1.927,5500,1.927,5501,1.927,5502,1.057,5503,6.343,5504,1.728,5505,1.057,5506,1.057,5507,0.948,5508,1.057,5509,1.057,5510,2.656,5511,0.948,5512,1.057,5513,6.022,5514,0.822,5515,1.057,5516,1.057,5517,3.806,5518,3.827,5519,1.057,5520,1.057,5521,2.656,5522,1.057,5523,1.057,5524,3.274,5525,1.057,5526,1.057,5527,1.057,5528,1.057,5529,1.057,5530,1.057,5531,1.927,5532,1.057,5533,1.057,5534,1.057,5535,1.927,5536,1.057,5537,1.057,5538,1.057,5539,1.057,5540,1.057,5541,1.927,5542,1.421,5543,4.799,5544,1.057,5545,4.269,5546,1.057,5547,1.057,5548,2.656,5549,3.274,5550,3.274,5551,3.274,5552,1.057,5553,3.413,5554,3.413,5555,1.057,5556,2.656,5557,1.057,5558,1.927,5559,1.057,5560,1.728,5561,3.806,5562,1.927,5563,3.274,5564,3.274,5565,1.057,5566,2.656,5567,3.413,5568,1.057,5569,1.057,5570,3.873,5571,1.927,5572,0.779,5573,1.057,5574,0.948,5575,2.656,5576,1.057,5577,1.057,5578,2.381,5579,1.057,5580,1.057,5581,1.057,5582,1.057,5583,1.057,5584,2.656,5585,1.057,5586,0.948,5587,2.381,5588,1.927,5589,4.269,5590,6.76,5591,2.656,5592,1.927,5593,1.927,5594,1.927,5595,3.274,5596,0.948,5597,1.057,5598,1.057,5599,1.057,5600,3.827,5601,1.927,5602,1.057,5603,1.057,5604,1.057,5605,1.057,5606,1.927,5607,1.057,5608,1.927,5609,1.057,5610,1.057,5611,3.71,5612,1.057,5613,5.287,5614,1.057,5615,1.057,5616,1.057,5617,1.927,5618,1.057,5619,2.805,5620,3.274,5621,1.927,5622,0.948,5623,1.057,5624,1.057,5625,1.057,5626,1.057,5627,1.927,5628,1.057,5629,1.057,5630,0.876,5631,2.936,5632,1.057,5633,1.927,5634,1.057,5635,1.057,5636,2.381,5637,1.057,5638,1.057,5639,1.057,5640,1.057,5641,3.274,5642,1.057,5643,1.057,5644,0.948,5645,0.948,5646,0.948,5647,1.057,5648,1.057,5649,1.057,5650,3.806,5651,1.057,5652,3.274,5653,1.057,5654,1.057,5655,1.057,5656,1.057,5657,1.057,5658,1.057,5659,3.274,5660,1.057,5661,1.057,5662,2.656,5663,1.057,5664,0.876,5665,2.656,5666,1.057,5667,1.057,5668,1.057,5669,1.057,5670,1.057,5671,1.057,5672,1.057,5673,0.948,5674,1.057,5675,0.779,5676,1.927,5677,0.948,5678,1.057,5679,3.274,5680,1.057,5681,1.057,5682,1.927,5683,2.656,5684,2.656,5685,0.876,5686,1.927,5687,1.057,5688,4.674,5689,1.057,5690,1.057,5691,1.927,5692,1.057,5693,1.057,5694,1.057,5695,3.274,5696,2.656,5697,1.057,5698,3.806,5699,1.057,5700,1.057,5701,1.057,5702,1.057,5703,1.057,5704,1.927,5705,1.927,5706,1.728,5707,2.656,5708,0.948,5709,1.057,5710,2.656,5711,1.057,5712,1.597,5713,1.057,5714,1.927,5715,1.057,5716,1.057,5717,1.927,5718,7.746,5719,2.656,5720,1.057,5721,3.806,5722,5.638,5723,2.656,5724,1.057,5725,1.057,5726,1.057,5727,3.274,5728,1.057,5729,1.057,5730,1.057,5731,1.057,5732,1.057,5733,1.057,5734,1.057,5735,1.057,5736,1.057,5737,3.274,5738,1.927,5739,1.057,5740,1.057,5741,2.656,5742,1.057,5743,1.927,5744,2.656,5745,1.927,5746,1.057,5747,1.057,5748,1.057,5749,1.927,5750,2.656,5751,0.948,5752,1.057,5753,1.057,5754,1.927,5755,1.057,5756,0.948,5757,1.057,5758,1.057,5759,1.057,5760,2.656,5761,1.927,5762,0.948,5763,1.057,5764,1.057,5765,3.274,5766,1.057,5767,2.656,5768,1.057,5769,1.057,5770,1.927,5771,1.057,5772,1.057,5773,1.057,5774,2.656,5775,1.927,5776,1.927,5777,1.057,5778,1.927,5779,4.674,5780,1.728,5781,2.656,5782,3.274,5783,0.948,5784,1.057,5785,1.927,5786,1.057,5787,2.656,5788,1.057,5789,1.057,5790,1.057,5791,1.057,5792,1.057,5793,1.057,5794,2.656,5795,1.927,5796,1.057,5797,0.948,5798,1.057,5799,1.057,5800,1.927,5801,1.927,5802,1.057,5803,1.728,5804,1.057,5805,1.057,5806,0.876,5807,1.057,5808,2.656,5809,1.057,5810,1.057,5811,1.057,5812,1.057,5813,1.927,5814,2.656,5815,1.057,5816,1.057,5817,1.057,5818,1.057,5819,1.927,5820,1.057,5821,1.057,5822,1.057,5823,1.057,5824,1.057,5825,1.057,5826,1.057,5827,1.057,5828,0.822,5829,1.057,5830,1.057,5831,1.057,5832,3.274,5833,1.057,5834,1.057,5835,1.927,5836,1.057,5837,1.057,5838,1.057,5839,1.057,5840,1.057,5841,1.057,5842,1.057,5843,0.876,5844,1.057,5845,1.057,5846,1.057,5847,0.948,5848,1.927,5849,1.057,5850,1.057,5851,1.057,5852,1.057,5853,1.927,5854,1.057,5855,1.057,5856,0.948,5857,0.948,5858,0.744,5859,1.057,5860,1.927,5861,1.927,5862,1.057,5863,1.057,5864,1.057,5865,1.057,5866,2.656,5867,1.597,5868,1.057,5869,1.927,5870,1.927,5871,1.057,5872,0.876,5873,0.948,5874,1.057,5875,0.948,5876,1.057,5877,1.057,5878,1.927,5879,1.057,5880,2.656,5881,1.057,5882,1.057,5883,1.057,5884,1.057,5885,1.057,5886,1.057,5887,1.057,5888,1.057,5889,1.057,5890,0.948,5891,1.057,5892,0.876,5893,1.057,5894,1.057,5895,1.057,5896,1.057,5897,1.057,5898,1.057,5899,1.057,5900,1.057,5901,1.057,5902,1.057,5903,1.057,5904,0.822,5905,0.948,5906,1.927,5907,1.728,5908,1.057,5909,1.057,5910,1.057,5911,1.057,5912,1.057,5913,1.057,5914,0.948,5915,0.822,5916,1.057,5917,0.876,5918,1.057,5919,1.057,5920,1.057,5921,1.057,5922,1.057]],["title/modules.html",[258,2.609]],["body/modules.html",[14,0.004,171,0.004,172,0.004,257,4.856,258,2.487,263,4.633,283,4.633,288,4.633,614,4.856,638,4.856,641,4.856,642,4.856,643,4.127,644,4.856,1396,4.856,1534,5.847,1750,5.123,1976,4.856,1982,4.633,2433,7.045,2510,4.856,2565,4.633,2600,4.856,2626,5.123,2845,4.856,3081,4.856,3166,4.856,3178,4.856,3181,4.856,5923,10.447,5924,10.447,5925,9.48,5926,9.948]],["title/overview.html",[3807,5.092]],["body/overview.html",[2,1.188,14,0.005,171,0.003,172,0.003,174,0.81,257,6.801,258,1.577,259,2.623,260,3.744,261,3.744,262,3.744,263,6.907,264,5.51,265,5.222,266,3.034,267,1.926,268,1.782,283,6.589,284,3.744,285,3.744,286,3.744,287,3.744,288,6.033,289,5.741,290,4.983,297,1.391,559,4.983,614,6.323,615,3.744,616,3.744,617,3.744,618,5.877,638,6.994,639,3.744,640,3.744,641,5.222,642,5.222,643,5.674,644,5.222,837,4.983,912,2.053,939,5.222,1183,4.983,1336,4.598,1396,6.323,1397,3.744,1398,3.744,1399,3.744,1400,6.107,1465,6.221,1633,5.05,1636,5.222,1659,5.222,1788,5.965,1823,3.744,1824,3.744,1825,3.744,1875,5.222,1937,3.46,1976,6.323,1977,3.744,1978,3.744,1979,3.744,1982,6.86,1983,3.744,1985,3.744,1986,5.51,2457,6.52,2510,6.52,2511,3.744,2512,3.744,2521,5.222,2560,3.744,2561,3.744,2562,3.744,2565,4.983,2600,7.239,2601,3.744,2602,3.744,2728,5.965,2845,7.069,2846,3.744,2847,3.744,2848,3.744,2850,4.983,3081,5.222,3093,5.222,3110,5.222,3166,6.675,3167,3.744,3178,7.418,3179,3.744,3180,3.744,3181,7.133,3312,5.222,3337,5.222,3389,3.744,3390,3.744,3391,5.222,3587,4.983,3605,3.744,3606,3.744,3607,3.744,3608,4.983,3676,3.744,3807,3.078,3987,3.744,5927,4.176,5928,4.176]],["title/todo.html",[367,1.571,3646,3.289,3647,2.974]],["body/todo.html",[2,1.277,5,0.051,9,0.528,10,1.368,12,0.482,13,0.238,14,0.005,17,2.494,31,0.134,34,2.817,40,2.258,44,2.873,68,0.93,71,3.335,73,1.934,76,1.162,111,2.071,113,0.499,143,3.493,144,1.689,171,0.003,172,0.003,178,2.071,206,3.548,207,2.564,209,3.31,210,3.904,218,2.494,256,2.19,268,2.712,271,1.953,292,2.114,295,3.438,313,2.039,320,2.071,325,1.243,358,6.113,361,4.125,362,5.127,367,1.668,368,3.71,369,2.886,382,2.25,398,2.813,413,2.494,417,2.494,428,2.208,475,2.258,495,4.072,499,2.813,523,5.208,530,3.057,568,4.286,573,2.723,584,3.629,646,4.286,652,3.853,656,2.64,657,3.31,660,3.493,708,5.188,734,2.114,769,1.724,829,2.64,876,2.817,878,3.53,910,2.03,914,2.813,1117,3.71,1118,2.813,1121,2.915,1124,3.982,1227,3.493,1341,2.16,1353,2.494,1356,2.64,1357,2.564,1358,2.564,1413,4.788,1472,2.915,1499,4.622,1538,2.915,1545,2.564,1565,2.723,1574,4.125,1612,4.888,1623,2.258,1633,2.564,1647,2.723,1666,2.64,1701,3.438,1715,4.027,1731,3.158,1733,3.982,1741,3.158,1763,2.813,1778,3.982,1828,4.337,1830,3.438,1860,5.266,1971,3.493,2031,3.31,2033,3.493,2055,3.028,2083,5.709,2084,4.125,2116,6.584,2121,3.158,2220,4.286,2338,2.915,2342,2.723,2415,3.158,2431,3.721,2433,3.028,2463,3.493,2465,3.028,2481,5.266,2483,4.027,2546,3.158,2556,2.915,2635,6.615,2647,3.31,2665,3.158,2787,3.31,2860,3.028,2861,2.915,2896,2.813,3204,5.188,3462,3.31,3509,5.409,3657,3.31,3669,4.027,3680,7.014,3688,3.31,3712,3.493,3783,3.028,3846,3.721,3859,3.721,3868,5.266,3906,3.158,3928,3.493,3933,4.027,3975,3.158,3995,3.721,4017,3.721,4027,3.721,4031,5.188,4032,4.027,4033,4.027,4056,3.721,4085,4.027,4286,3.493,4357,4.685,4428,4.027,4432,4.027,4516,3.158,4658,3.721,4669,3.721,4671,3.721,4714,3.493,4963,3.493,4993,3.493,5051,3.721,5142,4.027,5170,4.027,5286,3.721,5295,3.493,5304,3.028,5305,3.721,5349,3.493,5473,3.31,5507,4.027,5630,3.721,5904,4.943,5929,3.721,5930,4.491,5931,4.027,5932,4.027,5933,3.493,5934,3.721,5935,4.491,5936,4.491,5937,4.027,5938,4.491,5939,4.491,5940,4.491,5941,4.491,5942,4.491,5943,4.491,5944,3.721,5945,4.491,5946,4.491,5947,4.491,5948,4.491,5949,4.491,5950,4.491,5951,4.491,5952,4.491,5953,4.491,5954,4.491,5955,4.491,5956,4.491,5957,4.491,5958,4.491,5959,4.027,5960,4.491,5961,4.491,5962,4.491,5963,4.491,5964,4.491,5965,4.027,5966,4.491,5967,4.491,5968,4.027,5969,4.027,5970,4.027,5971,4.491,5972,4.027,5973,4.491,5974,4.491,5975,4.491,5976,3.721,5977,4.491,5978,6.615,5979,4.491,5980,4.491,5981,4.491,5982,4.491,5983,4.491,5984,4.491,5985,4.491,5986,6.356,5987,4.027,5988,4.491]],["title/miscellaneous/typealiases.html",[5200,2.744,5989,6.089]],["body/miscellaneous/typealiases.html",[0,0.56,6,4.218,7,5.831,8,0.262,10,1.231,12,0.615,13,0.379,14,0.005,29,5.831,30,5.239,37,1.583,71,3.389,111,2.639,117,3.713,144,1.52,171,0.004,172,0.004,256,1.939,305,2.287,313,1.264,407,5.579,422,5.07,447,4.545,665,2.125,668,2.234,764,5.239,769,2.878,788,3.86,807,2.752,809,4.697,865,5.273,871,5.273,961,3.858,974,5.273,982,5.056,987,4.545,990,5.056,1010,5.273,1030,5.273,1413,3.713,1718,4.45,1838,4.741,1839,6.504,1843,6.212,1851,6.212,2163,4.45,2170,3.858,2171,5.526,2175,4.45,2180,3.77,2184,4.024,2187,5.526,2194,4.45,2195,5.831,2198,6.212,2239,4.45,2303,4.218,2317,5.526,2566,4.45,2576,5.831,2577,6.212,2619,4.218,2627,4.741,2628,5.526,2631,6.723,2665,5.273,2770,4.45,2772,3.585,2784,6.212,2939,5.13,2973,4.741,2974,4.741,3052,5.13,3139,5.13,4176,4.741,5200,3.713,5202,6.723,5203,5.13,5622,5.13,5990,5.722,5991,7.498,5992,7.498,5993,5.722,5994,8.476,5995,7.498,5996,5.722,5997,7.498,5998,7.498,5999,5.722,6000,5.722,6001,5.722,6002,5.13,6003,5.722,6004,5.13,6005,6.723,6006,5.13,6007,5.722,6008,7.498,6009,5.722,6010,7.498,6011,5.722,6012,5.13,6013,5.722,6014,5.13,6015,5.722,6016,5.722,6017,5.722,6018,4.024,6019,5.722,6020,5.13,6021,5.722,6022,5.722,6023,5.722]],["title/miscellaneous/variables.html",[3777,4.488,5200,2.744]],["body/miscellaneous/variables.html",[5,0.032,8,0.073,9,0.188,12,0.541,13,0.312,14,0.005,17,0.888,22,0.065,24,1.038,34,4.194,37,1.026,38,2.34,43,1.235,44,1.26,45,1.168,46,1.212,47,1.26,48,0.843,53,0.709,71,1.675,73,1.449,75,0.635,76,1.302,77,1.286,113,0.54,120,1.746,122,1.272,127,1.519,128,1.768,137,1.078,138,1.002,139,1.078,142,2.659,144,2.042,147,1.286,148,1.595,167,1.168,171,0.001,172,0.001,173,1.96,177,1.88,178,1.286,180,2.02,181,0.269,198,0.262,200,2.322,206,1.341,207,0.913,208,1.178,215,1.026,216,1.88,218,0.888,256,0.413,270,1.147,278,2.732,295,2.005,309,1.581,311,0.969,320,0.737,324,1.325,344,0.682,345,1.107,346,0.419,351,0.541,362,1.548,366,1.002,367,0.594,369,0.575,378,1.069,382,2.796,383,2.863,387,0.502,398,2.322,404,7.085,407,0.913,414,1.038,417,1.548,428,0.786,442,1.243,458,0.658,473,1.078,475,2.531,488,2.533,492,1.96,493,2.992,495,0.769,499,1.746,500,1.212,528,0.823,530,0.769,568,1.078,573,3.051,579,3.266,585,1.69,587,0.913,590,0.804,591,3.071,593,1.243,622,2.005,632,1.286,656,0.94,657,1.178,665,1.87,666,1.325,667,1.548,668,2.686,682,0.769,704,1.078,712,1.078,713,1.325,734,0.753,743,1.002,767,1.002,769,2.282,770,1.709,771,2.659,772,1.955,794,0.913,795,1.002,807,1.341,834,1.038,835,1.038,857,1.286,874,1.433,875,2.31,878,1.548,896,4.074,901,0.786,908,2.606,910,0.723,912,0.786,915,1.508,928,2.591,935,1.88,951,3.463,952,2.005,961,1.078,963,0.888,987,0.969,994,3.051,1007,1.96,1008,1.809,1009,1.96,1027,1.639,1038,2.722,1055,2.321,1095,1.124,1112,1.124,1117,0.804,1118,1.002,1127,1.548,1130,1.038,1222,1.124,1224,1.124,1239,0.865,1269,1.325,1280,2.31,1281,1.325,1282,2.31,1283,2.31,1284,4.17,1285,1.88,1286,3.676,1287,6.072,1288,4.926,1289,1.325,1290,1.88,1291,1.325,1292,1.325,1293,1.325,1294,1.325,1295,1.325,1296,1.325,1297,1.325,1298,1.325,1299,1.325,1341,0.769,1352,1.038,1353,0.888,1356,0.94,1358,0.913,1380,1.178,1478,2.606,1483,1.124,1499,1.002,1538,1.038,1550,1.243,1557,2.058,1585,0.913,1606,1.325,1607,1.433,1608,3.323,1611,1.124,1612,2.99,1613,1.243,1617,2.499,1618,2.31,1619,1.433,1620,1.433,1623,1.402,1624,2.499,1625,1.96,1626,1.243,1627,1.864,1628,1.038,1629,1.178,1633,2.533,1677,1.124,1680,1.178,1698,1.243,1701,1.508,1732,1.038,1733,1.746,1742,1.038,1756,1.078,1763,2.78,1778,1.002,1819,2.055,1828,0.94,1829,0.888,1830,1.508,1858,1.178,1865,1.243,1866,1.078,1893,2.168,1895,1.243,1900,1.325,1901,1.325,1902,2.499,1915,1.124,1954,1.433,1971,1.243,1974,1.325,2018,4.074,2023,1.325,2024,1.433,2028,1.325,2030,3.323,2031,1.178,2032,1.325,2033,4.901,2035,2.499,2036,2.606,2049,2.499,2050,1.433,2051,2.499,2052,1.325,2053,1.178,2054,2.499,2055,2.499,2056,1.078,2057,2.499,2058,1.433,2059,2.499,2060,1.433,2061,1.325,2062,1.433,2063,1.433,2064,1.433,2065,1.433,2066,1.433,2067,1.325,2070,1.325,2074,1.325,2080,2.499,2081,1.178,2082,1.433,2083,1.078,2084,2.405,2085,2.499,2086,1.325,2087,2.499,2088,1.433,2089,2.168,2090,1.433,2091,1.433,2092,1.325,2093,2.499,2094,1.433,2095,1.433,2096,1.178,2097,1.433,2098,1.433,2099,1.433,2100,1.433,2101,4.513,2102,2.499,2103,4.513,2104,1.433,2105,1.325,2106,1.433,2118,2.31,2124,1.124,2176,1.809,2177,3.324,2180,2.531,2182,1.124,2185,1.038,2186,1.038,2214,1.548,2240,1.178,2250,1.325,2263,2.168,2267,1.038,2269,1.782,2275,1.639,2342,1.69,2389,1.908,2424,1.433,2425,1.433,2426,2.168,2427,1.433,2443,1.325,2449,1.433,2450,1.433,2463,1.243,2465,3.394,2478,1.809,2487,1.433,2488,2.499,2501,1.433,2549,1.078,2556,1.809,2566,1.243,2569,2.31,2576,1.243,2578,2.31,2579,1.325,2580,1.325,2581,1.325,2582,1.243,2583,1.325,2605,2.168,2609,2.882,2619,2.055,2623,1.243,2624,1.809,2627,1.325,2628,2.732,2629,1.433,2630,2.499,2636,1.433,2638,3.979,2640,2.499,2641,1.433,2642,2.499,2643,1.433,2644,1.433,2645,1.433,2646,1.325,2647,1.178,2648,1.178,2649,1.325,2650,1.124,2651,1.433,2652,1.325,2653,1.243,2654,1.433,2655,1.433,2656,1.433,2657,1.433,2658,1.433,2659,1.433,2680,1.078,2753,1.433,2754,2.499,2770,1.243,2783,2.31,2860,1.078,2861,2.405,2927,2.31,3017,1.243,3065,1.243,3075,1.433,3077,1.433,3161,2.168,3166,1.178,3186,4.382,3228,2.31,3229,1.433,3243,2.168,3245,2.499,3248,1.433,3249,1.433,3250,5.331,3350,1.433,3355,1.433,3532,1.433,3535,2.499,3537,3.071,3538,1.433,3539,1.433,3540,1.433,3541,1.433,3544,1.178,3551,2.31,3631,1.433,3677,3.888,3688,3.271,3715,2.499,3745,2.606,3771,2.606,3777,1.178,3830,1.433,3928,2.168,3942,1.433,3974,1.325,3975,1.124,3976,1.433,3977,2.499,3978,1.243,4012,2.499,4031,1.124,4118,1.433,4306,1.243,4387,1.178,4442,1.124,4542,1.325,4548,1.325,4603,2.499,4730,2.499,4734,1.433,4818,1.325,5099,1.433,5200,1.038,5206,2.055,5210,5.331,5221,1.325,5241,2.168,5267,1.325,5297,1.433,5442,1.325,5473,1.178,5934,1.325,5944,3.071,5968,2.499,5978,1.433,5994,2.499,6002,1.433,6004,2.499,6005,3.979,6006,3.323,6014,1.433,6020,1.433,6024,1.599,6025,4.437,6026,1.599,6027,2.787,6028,1.599,6029,2.787,6030,3.979,6031,2.787,6032,2.787,6033,1.599,6034,2.787,6035,1.599,6036,2.787,6037,3.706,6038,2.787,6039,4.437,6040,2.787,6041,1.599,6042,1.599,6043,2.787,6044,2.787,6045,1.599,6046,2.787,6047,2.787,6048,1.599,6049,2.787,6050,2.787,6051,4.437,6052,2.787,6053,1.599,6054,2.787,6055,3.706,6056,4.437,6057,2.787,6058,1.599,6059,2.787,6060,1.599,6061,2.787,6062,3.706,6063,2.787,6064,1.599,6065,2.787,6066,1.599,6067,1.599,6068,1.599,6069,1.599,6070,2.787,6071,1.599,6072,2.787,6073,2.787,6074,1.599,6075,1.599,6076,1.599,6077,1.599,6078,1.599,6079,1.599,6080,2.787,6081,1.599,6082,1.599,6083,1.599,6084,1.599,6085,1.599,6086,1.599,6087,1.599,6088,1.433,6089,1.599,6090,1.599,6091,1.433,6092,1.599,6093,1.599,6094,1.599,6095,1.599,6096,1.599,6097,1.599,6098,1.599,6099,1.599,6100,1.599,6101,1.599,6102,2.31,6103,1.433,6104,1.433,6105,1.433,6106,1.599,6107,1.599,6108,1.599,6109,2.499,6110,1.599,6111,1.599,6112,1.599,6113,1.599,6114,1.599,6115,1.433,6116,1.599,6117,3.323,6118,1.599,6119,1.433,6120,1.599,6121,1.599,6122,1.599,6123,1.599,6124,1.599,6125,1.599,6126,1.599,6127,1.599,6128,1.599,6129,1.599,6130,1.599,6131,1.599,6132,1.599,6133,1.599,6134,1.599,6135,1.599,6136,1.599,6137,1.599,6138,1.599,6139,1.599,6140,1.599,6141,1.599,6142,1.599,6143,1.599,6144,1.599,6145,1.599,6146,1.599,6147,1.599,6148,1.599,6149,1.599,6150,5.945,6151,1.599,6152,1.599,6153,3.706,6154,1.599,6155,1.599,6156,1.599,6157,1.599,6158,1.599,6159,1.599,6160,2.787,6161,1.433,6162,1.599,6163,1.599,6164,1.599,6165,1.599,6166,1.599,6167,1.599,6168,2.787,6169,1.599,6170,1.599,6171,1.599,6172,1.599,6173,1.599,6174,1.599,6175,1.599,6176,1.599,6177,1.599,6178,1.599,6179,1.599,6180,1.599,6181,1.599,6182,1.599,6183,1.599,6184,1.599,6185,1.599,6186,1.599,6187,1.599,6188,1.599,6189,1.599,6190,1.599,6191,1.599,6192,1.599,6193,1.599]],["title/additional-documentation/nestjs-application.html",[590,1.826,632,1.674,1777,1.826,3019,2.016]],["body/additional-documentation/nestjs-application.html",[2,1.104,14,0.004,33,0.846,40,1.951,43,3.322,47,2.585,111,1.79,113,0.305,171,0.003,172,0.003,178,3.856,179,3.467,210,3.457,256,1.479,258,1.465,267,1.79,295,3.094,311,3.467,323,2.519,362,5.349,368,2.876,369,3.192,382,1.089,392,2.047,398,4.696,401,2.652,402,2.099,428,2.812,495,1.866,523,2.099,568,3.857,586,2.729,587,2.216,588,2.519,590,4.697,622,4.323,632,4.178,635,1.908,649,3.018,702,3.018,704,2.617,771,1.866,888,4.022,893,2.353,1117,2.876,1127,2.155,1168,2.898,1239,4.055,1346,4.022,1348,3.857,1353,2.155,1356,2.281,1358,3.266,1362,4.448,1366,4.696,1413,2.519,1431,3.712,1469,2.729,1530,3.215,1534,2.281,1538,4.408,1565,2.353,1585,2.216,1586,3.857,1612,4.523,1623,3.769,1629,2.86,1677,2.729,1687,4.022,1732,2.519,1733,2.431,1777,1.951,1778,2.431,1779,4.022,1828,3.362,1830,2.099,1848,2.519,1866,2.617,1924,2.617,1970,2.86,2083,5.054,2089,3.018,2130,4.022,2219,3.018,2388,2.281,2411,3.215,2418,3.857,2547,3.018,2549,2.617,2571,5.054,2588,3.215,2624,3.712,2648,2.86,2662,3.48,2787,2.86,2860,5.389,2861,4.865,2866,2.729,3019,3.177,3206,3.48,3207,4.739,3545,4.022,3647,4.022,3650,2.729,3680,3.215,3686,3.215,3688,6.54,3694,3.48,3701,4.739,3715,6.628,3745,2.729,3750,4.022,3766,4.739,3791,3.018,3807,2.86,3817,4.448,3834,3.215,3938,3.215,3947,2.729,3975,5.272,3978,4.448,3994,5.628,3995,4.739,4030,3.48,4034,5.187,4164,3.215,4356,3.215,4357,7.038,4387,5.891,4516,2.729,4544,3.215,4548,4.739,4674,6.091,4735,3.48,4767,4.448,4814,3.215,5179,3.48,5188,3.215,5241,3.018,5242,3.215,5243,2.86,5244,3.018,5246,3.018,5249,3.48,5256,5.283,5267,3.215,5286,3.215,5304,5.054,5312,3.215,5442,3.215,5463,5.128,5464,2.729,5472,3.48,5473,5.007,5513,3.48,5542,2.86,5611,2.86,5619,4.216,5675,2.86,5712,3.215,5756,3.48,5762,3.48,5872,4.739,5892,3.215,5915,3.018,5925,3.48,5965,5.128,5969,6.091,5970,6.091,6018,4.022,6030,3.48,6102,4.739,6103,5.128,6104,3.48,6105,3.48,6117,3.48,6194,3.881,6195,3.881,6196,3.881,6197,3.881,6198,3.881,6199,3.881,6200,3.881,6201,3.881,6202,3.881,6203,5.72,6204,3.881,6205,3.881,6206,3.881,6207,5.72,6208,7.496,6209,3.881,6210,3.881,6211,3.881,6212,3.215,6213,3.881,6214,7.496,6215,3.881,6216,3.48,6217,3.881,6218,3.881,6219,3.881,6220,8.361,6221,3.881,6222,3.881,6223,3.881,6224,3.881,6225,5.72,6226,3.881,6227,3.881,6228,3.881,6229,3.881,6230,5.72,6231,3.881,6232,3.881,6233,5.128,6234,5.72,6235,3.881,6236,3.881,6237,3.881,6238,3.881,6239,5.72,6240,3.881,6241,3.881,6242,3.018,6243,3.881,6244,3.881,6245,3.881,6246,3.881,6247,3.881,6248,3.881,6249,3.48,6250,3.881,6251,3.881,6252,3.881,6253,3.881,6254,3.881,6255,6.793,6256,5.128,6257,3.881,6258,3.881,6259,3.881,6260,3.881,6261,3.881,6262,3.881,6263,5.72,6264,3.881,6265,5.72,6266,4.739,6267,3.48,6268,3.881,6269,6.793,6270,5.72,6271,3.881,6272,3.881,6273,3.881,6274,3.48,6275,3.881,6276,3.48,6277,3.881,6278,3.881,6279,3.881,6280,3.881,6281,3.881,6282,3.881,6283,3.881,6284,3.881]],["title/additional-documentation/nestjs-application/software-architecture.html",[1777,1.826,3019,2.016,5248,2.448,5313,2.823]],["body/additional-documentation/nestjs-application/software-architecture.html",[0,0.646,2,0.731,4,0.04,5,0.039,10,1.217,14,0.002,34,3.036,37,0.404,38,1.356,39,1.895,40,4.379,46,0.634,51,4.498,53,1.843,72,0.857,77,0.2,83,0.789,111,2.775,113,0.202,122,0.501,141,1.134,144,2.019,147,0.673,148,0.619,170,1.895,171,0.001,172,0.001,174,0.669,178,3.634,179,2.091,186,0.457,188,0.474,204,0.844,206,3.79,207,2.709,209,1.075,210,1.591,216,1.734,218,2.31,259,2.063,268,1.097,271,0.634,292,0.687,309,1.097,311,2.091,313,0.762,314,1.026,320,0.673,323,2.699,331,1.208,361,5.56,362,0.81,364,0.769,367,0.542,368,1.293,369,2.919,373,0.946,374,1.969,382,0.409,383,0.995,392,2.503,414,0.946,416,2.161,417,0.81,420,3.647,428,2.045,432,1.075,497,0.751,523,0.789,585,5.863,586,1.026,587,2.375,588,4.715,590,4.024,605,0.983,622,0.789,635,4.088,648,4.057,649,2,652,3.429,653,1.134,654,4.455,656,0.857,665,0.542,669,1.611,697,0.717,716,1.696,734,0.687,770,1.186,771,1.237,788,1.324,794,1.969,807,0.701,811,0.751,829,1.512,847,0.659,857,1.918,877,1.134,883,1.559,887,0.946,893,3.175,898,1.559,909,0.833,977,2.091,1019,0.833,1022,0.983,1064,0.884,1118,0.914,1119,0.983,1120,1.895,1121,3.905,1124,0.914,1127,2.909,1168,3.88,1341,3.045,1353,1.428,1356,1.512,1358,1.468,1365,1.208,1366,0.914,1413,3.08,1431,0.946,1482,2.683,1507,4.762,1534,1.512,1545,0.833,1557,2.31,1562,2.925,1565,2.521,1585,0.833,1612,1.866,1627,3.183,1639,3.932,1687,3.978,1695,5.138,1701,4.328,1731,1.026,1732,2.239,1733,2.161,1741,2.426,1742,0.946,1763,0.914,1776,3.543,1777,1.735,1779,4.646,1828,2.028,1829,3.141,1830,4.867,1832,1.809,1841,2.239,1852,2.326,1915,1.026,1918,3.235,1924,0.983,1935,0.914,1947,1.075,1948,0.914,1970,1.075,2055,4.62,2056,0.983,2061,1.208,2081,1.075,2084,0.946,2124,1.026,2168,0.983,2177,1.356,2179,3.325,2180,0.733,2182,1.026,2196,0.884,2197,0.833,2200,0.857,2212,0.946,2220,2.326,2226,4.339,2240,2.543,2267,0.946,2284,1.559,2324,1.026,2365,0.983,2373,3.543,2388,2.789,2389,1.324,2412,1.134,2413,2.606,2415,1.026,2416,5.245,2418,0.983,2426,1.134,2430,1.208,2432,3.86,2440,1.075,2484,1.308,2496,1.208,2497,3.498,2546,2.426,2549,1.734,2551,3.066,2554,1.895,2582,1.134,2599,1.134,2646,1.208,2647,3.498,2650,2.426,2666,1.075,2680,1.734,2722,2.306,2866,1.026,2895,4.666,2896,3.281,2928,1.026,2964,1.075,3019,0.81,3158,1.026,3320,1.208,3324,1.134,3335,2.426,3464,1.075,3484,1.208,3487,2.683,3507,2.606,3510,6.739,3544,1.075,3545,1.026,3546,1.208,3650,1.809,3651,2.131,3656,2.925,3657,2.543,3659,2.858,3667,2.131,3677,1.026,3687,1.208,3728,1.308,3734,1.208,3735,2.306,3738,1.208,3750,1.809,3755,2.683,3766,1.208,3767,3.337,3770,1.075,3771,1.809,3777,1.075,3783,1.734,3807,1.075,3817,1.134,3839,3.066,3841,1.308,3842,1.075,3859,1.208,3868,1.208,3880,1.208,3887,1.308,3892,1.208,3894,3.093,3906,1.026,3910,1.308,3921,2.306,3938,1.208,3944,1.308,3946,3.86,3980,3.093,3983,1.208,4005,1.208,4031,1.026,4034,0.946,4040,3.066,4041,1.208,4043,1.308,4050,2.858,4078,1.308,4081,3.498,4098,1.208,4099,2.131,4101,1.308,4103,1.308,4113,1.308,4116,1.308,4134,1.308,4176,2.131,4233,7.471,4238,2.131,4279,3.066,4280,6.315,4298,1.308,4305,2,4336,2.306,4357,1.895,4367,3.932,4380,2,4401,1.208,4406,1.208,4419,3.498,4427,2.543,4433,3.235,4440,3.729,4445,3.683,4446,1.134,4464,1.308,4465,2.131,4469,1.308,4484,2.131,4488,2.858,4503,5.924,4516,1.026,4517,1.208,4546,1.208,4573,1.208,4577,1.075,4583,4.255,4620,3.093,4671,1.208,4684,1.208,4708,3.235,4710,1.208,4719,1.208,4767,1.134,4799,1.308,4804,1.308,4832,4.255,4849,2,4863,2,4891,1.208,4921,1.308,4924,1.208,4927,1.134,4932,2.683,4935,1.208,4948,1.308,4953,2.131,4981,1.308,4993,4.399,5005,1.308,5030,1.308,5038,2,5055,2.306,5188,2.131,5222,2.306,5227,2.131,5237,1.308,5241,2.683,5243,1.895,5248,5.873,5256,1.134,5257,2.306,5261,3.066,5263,1.026,5269,2.131,5274,7.138,5291,1.075,5295,1.134,5299,2,5312,2.131,5313,1.134,5324,2.306,5326,1.208,5329,1.308,5334,1.308,5337,1.308,5340,1.308,5349,1.134,5351,1.308,5362,1.308,5373,2.131,5374,4.073,5376,4.339,5379,2.306,5380,2,5403,1.308,5408,1.308,5409,5.138,5428,1.026,5431,1.308,5448,1.208,5450,3.093,5454,1.308,5456,1.308,5462,1.308,5464,2.426,5471,1.308,5476,6.019,5482,1.208,5484,1.208,5486,2.131,5488,1.208,5490,1.308,5514,3.235,5518,1.308,5542,1.075,5543,1.308,5560,1.308,5570,1.208,5572,1.075,5587,1.308,5590,1.308,5596,1.308,5600,2.306,5611,1.075,5613,1.308,5619,2.543,5631,1.308,5644,2.306,5645,4.255,5664,1.208,5673,3.729,5675,1.075,5677,1.308,5685,1.208,5706,1.308,5708,1.308,5712,1.208,5751,4.696,5780,1.308,5797,1.308,5806,4.686,5828,5.497,5843,1.208,5856,1.308,5857,1.308,5858,4.646,5867,1.208,5905,1.308,5917,1.208,5929,2.131,5932,1.308,5933,4.073,5972,2.306,5987,1.308,6212,1.208,6242,1.134,6285,1.458,6286,1.458,6287,6.143,6288,6.331,6289,2.572,6290,3.449,6291,3.093,6292,4.985,6293,2.572,6294,3.093,6295,5.656,6296,1.458,6297,1.458,6298,3.235,6299,3.729,6300,1.458,6301,1.458,6302,1.458,6303,1.458,6304,2.572,6305,1.458,6306,1.458,6307,4.745,6308,1.458,6309,1.458,6310,3.449,6311,2.572,6312,1.458,6313,1.458,6314,1.458,6315,1.458,6316,1.458,6317,1.458,6318,1.458,6319,1.308,6320,2.572,6321,5.237,6322,1.458,6323,1.458,6324,2.572,6325,2.572,6326,4.159,6327,3.449,6328,4.159,6329,1.458,6330,3.729,6331,3.729,6332,1.458,6333,1.458,6334,1.458,6335,1.458,6336,1.458,6337,3.093,6338,1.458,6339,1.458,6340,1.458,6341,7.88,6342,1.458,6343,7.691,6344,1.458,6345,2.306,6346,1.458,6347,2.572,6348,1.208,6349,4.666,6350,6.331,6351,1.458,6352,3.093,6353,2.306,6354,2.572,6355,1.458,6356,1.458,6357,1.458,6358,1.458,6359,1.458,6360,3.446,6361,2.572,6362,1.458,6363,1.458,6364,1.458,6365,1.458,6366,1.308,6367,1.458,6368,1.458,6369,1.458,6370,1.308,6371,1.458,6372,1.458,6373,1.458,6374,1.308,6375,2.572,6376,1.458,6377,3.449,6378,1.458,6379,1.458,6380,1.458,6381,2.572,6382,1.458,6383,2.572,6384,3.449,6385,1.458,6386,1.458,6387,1.458,6388,2.572,6389,3.449,6390,1.458,6391,1.458,6392,1.458,6393,1.458,6394,1.458,6395,1.458,6396,1.308,6397,1.458,6398,2.572,6399,1.458,6400,1.458,6401,6.331,6402,1.458,6403,1.308,6404,1.208,6405,1.458,6406,1.458,6407,1.458,6408,1.458,6409,1.458,6410,1.458,6411,1.458,6412,3.449,6413,1.458,6414,2.572,6415,3.449,6416,1.458,6417,1.458,6418,1.458,6419,1.458,6420,2.572,6421,1.458,6422,1.458,6423,1.458,6424,2.306,6425,1.458,6426,1.308,6427,1.458,6428,1.458,6429,2.572,6430,1.458,6431,1.308,6432,1.458,6433,2.572,6434,1.458,6435,1.458,6436,1.458,6437,1.458,6438,1.308,6439,1.458,6440,1.458,6441,2.572,6442,1.458,6443,1.458,6444,1.458,6445,1.458,6446,1.458,6447,1.308,6448,1.458,6449,1.458,6450,1.458,6451,1.308,6452,3.449,6453,1.458,6454,1.458,6455,1.458,6456,1.458,6457,2.572,6458,1.458,6459,1.458,6460,3.449,6461,1.458,6462,1.458,6463,2.572,6464,1.458,6465,2.572,6466,1.458,6467,1.458,6468,1.458,6469,1.458,6470,1.458,6471,1.458,6472,1.458,6473,2.572,6474,1.458,6475,1.458,6476,1.458,6477,1.458,6478,1.458,6479,1.458,6480,1.458,6481,1.458,6482,8.489,6483,1.458,6484,1.458,6485,1.308,6486,1.458,6487,1.458,6488,2.572,6489,1.458,6490,1.458,6491,1.458,6492,1.458,6493,1.458,6494,1.458,6495,1.308,6496,1.458,6497,1.458,6498,1.308,6499,1.458,6500,1.458,6501,1.458,6502,1.458,6503,2.572,6504,1.458,6505,1.458,6506,2.683,6507,1.458,6508,1.458,6509,1.208,6510,1.458,6511,1.458,6512,4.745,6513,1.458,6514,1.458,6515,1.458,6516,1.458,6517,1.458,6518,1.458,6519,1.458,6520,1.458,6521,1.458,6522,1.458,6523,1.458,6524,2.572,6525,1.458,6526,1.458,6527,2.572,6528,1.458,6529,1.458,6530,1.458,6531,2.572,6532,1.458,6533,1.458,6534,1.458,6535,1.458,6536,1.308,6537,2.572,6538,1.458,6539,2.572,6540,1.458,6541,1.458,6542,1.458,6543,1.308,6544,2.572]],["title/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[178,1.467,1777,1.599,3019,1.766,5248,2.145,6349,2.344]],["body/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[0,0.257,2,1.204,3,0.049,4,0.041,5,0.096,9,0.624,10,0.565,13,0.159,14,0.005,15,0.125,17,2.35,18,0.459,22,0.126,31,0.252,38,1.385,40,3.063,47,1.187,51,4.06,68,0.544,73,1.109,76,1.094,77,0.73,111,3.292,113,0.613,126,1.705,127,1.011,128,1.187,144,1.774,145,3.737,148,0.759,171,0.002,172,0.002,174,0.51,178,1.952,186,0.681,206,3.433,207,3.034,210,1.952,217,3.954,218,1.459,256,2.413,258,3.194,259,1.142,270,1.741,271,1.84,283,1.847,288,3.737,289,2.746,290,4.284,292,3.361,295,3.613,311,1.593,313,1.658,314,1.847,320,3.718,326,1.009,346,1.751,351,0.888,362,2.951,364,3.765,366,3.816,369,3.402,375,2.043,376,2.177,382,0.737,398,1.646,402,1.421,417,2.35,428,2.995,447,1.593,495,2.555,497,2.178,519,1.593,551,2.043,567,2.565,570,1.771,571,2.355,584,1.5,585,3.693,587,3.034,589,2.746,590,1.321,628,1.705,632,3.08,635,4.237,646,3.583,656,2.487,668,2.074,697,2.612,709,2.976,734,2.502,769,2.04,771,2.035,794,2.416,829,1.544,857,1.212,873,1.936,876,3.327,878,1.459,888,3.737,893,2.565,898,1.593,907,3.034,910,3.529,912,3.284,937,1.847,947,2.043,951,2.651,952,2.289,977,2.565,1020,1.459,1064,1.593,1117,1.321,1118,2.651,1121,3.448,1124,1.646,1127,1.459,1168,3.439,1272,4.923,1341,1.263,1356,1.544,1358,2.416,1366,3.816,1388,1.936,1469,1.847,1471,2.177,1472,4.335,1473,4.402,1500,2.043,1507,1.646,1534,1.544,1537,1.593,1545,2.416,1557,3.383,1565,1.593,1585,3.034,1586,2.853,1612,2.289,1623,1.321,1625,1.847,1647,1.593,1666,3.123,1695,4.132,1716,2.355,1763,1.646,1776,4.184,1777,2.672,1778,1.646,1781,2.355,1786,2.355,1788,4.813,1827,1.771,1828,3.926,1829,3.964,1831,3.737,1832,1.847,1833,1.847,1834,1.847,1839,2.043,1841,1.705,1852,1.771,1861,1.771,1949,1.771,2046,2.355,2055,1.771,2084,3.448,2116,3.291,2124,1.847,2130,1.847,2133,1.936,2212,2.746,2269,1.263,2324,2.976,2338,1.705,2373,1.646,2388,3.926,2389,1.352,2412,2.043,2413,2.651,2419,2.177,2432,1.936,2440,1.936,2465,1.771,2496,2.177,2554,3.119,2556,1.705,2618,3.916,2715,1.847,2735,2.355,2736,2.355,2737,2.355,2738,2.355,2739,2.177,2746,2.177,2786,2.177,2860,1.771,2895,3.119,2896,1.646,2928,1.847,2956,1.771,3042,2.355,3186,1.936,3204,1.847,3401,2.355,3463,1.936,3464,1.936,3507,2.651,3508,2.177,3509,5.435,3510,5.491,3608,1.847,3623,2.177,3626,2.177,3656,1.847,3659,2.177,3667,5.047,3677,2.976,3712,4.132,3714,2.355,3745,4.697,3750,2.976,3755,2.043,3767,1.847,3770,1.936,3777,1.936,3783,5.435,3842,1.936,3880,4.402,3906,2.976,3947,1.847,4031,5.02,4034,2.746,4040,1.936,4081,3.916,4129,2.355,4156,2.355,4164,2.177,4279,3.119,4280,1.936,4306,2.043,4307,3.291,4433,2.043,4437,2.177,4441,2.177,4442,2.976,4445,1.847,4446,2.043,4484,4.402,4541,2.355,4610,2.355,4615,2.177,4617,2.355,4630,2.355,4714,2.043,4819,2.043,4849,2.043,4901,2.355,4924,2.177,5221,2.177,5227,2.177,5245,2.177,5248,3.583,5256,2.043,5261,1.936,5263,1.847,5273,2.355,5274,4.132,5284,2.355,5291,1.936,5292,2.355,5298,2.177,5299,4.738,5302,2.355,5304,1.771,5305,2.177,5336,2.355,5350,2.177,5352,2.355,5380,2.043,5409,2.043,5423,2.355,5428,1.847,5448,2.177,5457,2.177,5458,2.355,5464,1.847,5482,2.177,5488,2.177,5514,2.043,5542,3.119,5553,2.355,5572,1.936,5611,1.936,5664,2.177,5675,1.936,5783,4.764,5828,3.291,5858,1.847,5875,2.355,5917,2.177,5933,4.738,5934,4.402,5944,4.402,6018,3.737,6088,2.355,6109,2.355,6115,2.355,6212,2.177,6216,2.355,6266,3.506,6287,2.355,6298,2.043,6331,2.355,6343,7.512,6345,2.355,6348,3.506,6349,4.923,6366,2.355,6374,2.355,6396,3.794,6403,4.764,6438,3.794,6495,3.794,6498,2.355,6506,2.043,6545,2.177,6546,2.355,6547,2.627,6548,5.313,6549,2.627,6550,6.73,6551,3.506,6552,2.627,6553,4.231,6554,6.092,6555,2.627,6556,2.627,6557,2.627,6558,2.627,6559,2.627,6560,2.627,6561,2.627,6562,4.231,6563,2.627,6564,2.627,6565,2.627,6566,2.355,6567,4.231,6568,2.627,6569,2.627,6570,2.627,6571,2.627,6572,2.355,6573,2.627,6574,2.627,6575,2.355,6576,4.231,6577,2.627,6578,2.177,6579,2.627,6580,2.627,6581,2.627,6582,2.627,6583,2.627,6584,2.627,6585,2.627,6586,2.627,6587,4.231,6588,4.231,6589,2.627,6590,2.355,6591,3.794,6592,2.627,6593,2.627,6594,2.627,6595,2.627,6596,2.627,6597,2.627,6598,2.627,6599,2.627,6600,2.627,6601,2.627,6602,2.627,6603,2.627,6604,2.627,6605,2.627,6606,2.627,6607,2.627,6608,2.627,6609,2.627,6610,2.627,6611,2.627,6612,2.627,6613,2.627,6614,2.627,6615,2.627,6616,2.627,6617,2.627,6618,2.627,6619,2.627,6620,2.627,6621,2.627,6622,2.627,6623,2.355,6624,2.627,6625,2.627,6626,2.355,6627,2.627,6628,2.627,6629,2.627,6630,2.627,6631,2.627,6632,2.627,6633,2.627,6634,2.627,6635,2.355,6636,2.627]],["title/additional-documentation/nestjs-application/domain-driven-design.html",[1777,1.599,3019,1.766,3509,2.145,6298,2.473,6637,2.852]],["body/additional-documentation/nestjs-application/domain-driven-design.html",[0,0.406,12,0.445,14,0.005,34,1.838,51,2.243,53,1.838,73,1.087,76,1.072,77,0.825,111,3.255,120,3.761,127,0.996,128,2.303,144,2.485,147,1.912,148,1.388,171,0.003,172,0.003,178,2.769,179,3.639,186,0.361,205,3.436,210,3.255,217,2.691,268,1.769,305,1.832,313,1.326,320,3.947,331,4.974,346,1.087,364,3.166,367,1.54,368,3.019,369,3.408,415,2.367,416,3.761,420,2.514,428,2.951,452,1.769,458,1.706,475,2.085,519,2.514,551,4.669,570,2.796,585,5.351,586,4.963,587,2.367,588,2.691,589,2.691,590,4.304,632,2.769,635,2.039,646,2.796,649,4.669,652,2.514,653,3.225,654,2.796,668,2.755,682,2.887,709,4.222,781,4.222,788,2.135,857,2.769,877,5.488,887,2.691,898,4.689,1064,3.639,1119,2.796,1124,3.761,1168,3.502,1239,2.243,1285,2.796,1348,2.796,1388,3.056,1538,2.691,1557,3.334,1562,2.916,1565,3.639,1568,2.796,1574,2.691,1585,3.428,1677,2.916,1701,2.243,1742,2.691,1763,2.598,1776,5.663,1829,5.116,1833,2.916,1834,2.916,1861,2.796,1915,2.916,1948,4.421,2055,2.796,2130,2.916,2133,3.056,2269,1.994,2342,2.514,2373,2.598,2388,3.529,2866,2.916,2964,3.056,2976,3.718,3005,3.718,3065,3.225,3204,2.916,3335,2.916,3462,3.056,3486,3.718,3507,2.598,3509,6.616,3510,2.916,3650,2.916,3656,2.916,3699,3.718,3715,2.796,3767,2.916,3770,6.051,3783,2.796,3791,3.225,3839,4.425,3906,4.222,3945,3.225,3946,3.056,4040,3.056,4108,6.327,4131,3.718,4279,5.201,4305,3.225,4307,3.225,4411,3.436,4419,3.056,4442,2.916,4444,4.669,4577,3.056,4708,3.225,4719,3.436,4891,3.436,4927,3.225,5038,3.225,5077,3.436,5117,3.056,5206,3.056,5244,3.225,5248,5.216,5261,3.056,5263,2.916,5350,4.974,5374,6.656,5380,3.225,5385,3.436,5428,2.916,5464,4.222,5572,3.056,5611,4.425,5619,4.425,5675,3.056,5806,3.436,5828,3.225,5847,3.718,5858,2.916,5892,3.436,5904,3.225,5914,5.383,5915,3.225,5929,3.436,5976,3.436,6018,2.916,6242,3.225,6266,3.436,6294,3.718,6298,4.669,6299,3.718,6343,6.384,6426,3.718,6431,3.718,6451,3.718,6485,3.718,6509,3.436,6545,3.436,6550,5.383,6566,5.383,6623,3.718,6626,3.718,6637,3.718,6638,4.147,6639,4.147,6640,4.147,6641,4.147,6642,4.147,6643,4.147,6644,4.147,6645,4.147,6646,6.003,6647,4.147,6648,4.147,6649,4.147,6650,4.147,6651,4.147,6652,4.147,6653,4.147,6654,4.147,6655,4.147,6656,4.147,6657,4.147,6658,4.147,6659,4.147,6660,4.147,6661,3.718,6662,4.147,6663,4.147,6664,3.718,6665,4.147,6666,3.718,6667,4.147,6668,4.147,6669,4.147,6670,4.147,6671,4.147,6672,4.147,6673,4.147,6674,5.383,6675,4.147,6676,4.147,6677,4.147,6678,4.147,6679,4.147,6680,4.147,6681,4.147,6682,4.147,6683,4.147,6684,4.147,6685,4.147,6686,4.147,6687,4.147,6688,4.147,6689,4.147,6690,4.147,6691,4.147,6692,4.147,6693,4.147,6694,4.147,6695,4.147,6696,4.147,6697,4.147,6698,4.147,6699,4.147,6700,4.147,6701,4.147,6702,4.147,6703,6.003,6704,4.147,6705,3.436,6706,4.147,6707,3.718,6708,4.147,6709,4.147,6710,4.147,6711,3.436]],["title/additional-documentation/nestjs-application/cross-cutting-concerns.html",[648,2.145,1777,1.599,3019,1.766,5858,2.237,6292,2.635]],["body/additional-documentation/nestjs-application/cross-cutting-concerns.html",[0,0.668,12,1.032,13,0.314,14,0.005,15,0.23,18,0.871,22,0.088,31,0.203,34,3.896,35,1.456,37,1.89,38,2.626,53,3.027,68,1.031,73,1.305,83,2.694,111,3.15,113,0.391,171,0.004,172,0.003,178,3.596,179,3.019,180,1.82,185,5.035,205,4.126,206,3.285,207,4.451,216,3.358,218,4.882,256,2.274,271,2.97,311,3.019,323,5.06,359,4.126,362,2.766,364,4.112,366,3.12,369,3.018,382,2.466,391,3.873,405,3.67,497,2.563,567,3.019,570,3.358,585,5.329,586,3.502,587,3.9,588,3.232,590,2.504,632,3.15,635,3.358,643,4.279,646,3.358,648,4.606,652,3.019,654,5.657,660,3.873,699,4.141,813,3.12,883,4.141,1168,2.125,1341,2.395,1357,2.843,1358,3.9,1492,4.126,1545,2.843,1623,2.504,1633,5.407,1646,4.465,1655,4.465,1685,5.312,1701,5.197,1762,4.465,1763,4.279,1764,3.873,1772,4.465,1776,3.12,1777,3.435,1778,4.884,1830,2.694,1831,3.502,1861,3.358,1991,4.465,2055,5.257,2056,6.386,2083,4.606,2086,4.126,2220,4.606,2225,4.465,2226,4.126,2228,4.465,2232,4.465,2234,4.465,2235,4.465,2374,4.433,2389,2.563,2413,3.12,2432,3.67,2546,3.502,2549,3.358,2554,5.035,2556,4.433,2984,4.465,3158,3.502,3463,3.67,3464,3.67,3507,3.12,3642,4.126,3771,3.502,3842,3.67,3853,3.873,4034,3.232,4633,4.465,5243,3.67,5304,3.358,5469,4.465,5586,4.465,5858,3.502,6256,4.465,6292,5.659,6404,4.126,6447,4.465,6551,4.126,6575,4.465,6578,4.126,6635,4.465,6711,4.126,6712,4.98,6713,8.39,6714,4.98,6715,8.39,6716,4.465,6717,4.98,6718,4.98,6719,7.797,6720,4.98,6721,4.98,6722,4.98,6723,6.831,6724,4.98,6725,4.98,6726,4.98,6727,4.465,6728,4.98,6729,6.831,6730,4.98,6731,4.98,6732,4.98,6733,4.98,6734,4.98,6735,4.98,6736,4.98,6737,4.98,6738,4.98,6739,4.98,6740,4.98]],["title/additional-documentation/nestjs-application/testing.html",[1777,2.126,2418,2.851,3019,2.348]],["body/additional-documentation/nestjs-application/testing.html",[13,0.189,14,0.005,15,0.097,31,0.098,34,3.625,38,2.983,40,0.975,45,0.812,46,0.843,51,3.06,53,2.239,73,2.242,75,0.77,76,1.59,77,0.777,81,1.048,111,2.609,113,0.336,118,1.429,121,1.507,122,0.665,127,1.332,128,2.428,144,1.139,147,1.977,148,0.59,171,0.002,172,0.002,174,0.376,178,3.023,186,0.44,188,0.266,198,0.317,206,0.932,216,2.89,218,1.076,256,1.981,258,1.242,259,1.863,268,0.827,270,1.763,271,1.863,289,2.135,299,1.738,300,1.738,306,0.953,309,0.827,311,4.511,313,0.428,314,2.314,318,1.738,320,1.977,352,0.475,362,5.369,364,1.735,366,1.214,368,2.155,369,3.147,373,2.135,375,1.507,382,1.417,383,1.457,415,4.748,416,3.544,417,1.076,420,3.062,428,3.223,500,0.843,528,1.693,530,2.061,570,3.814,584,1.107,585,2.598,587,1.878,589,2.135,590,2.844,632,0.894,635,2.483,643,1.214,650,1.429,652,1.994,665,0.72,682,0.932,699,1.175,704,2.218,708,1.363,734,2.663,767,1.214,769,2.36,800,1.307,813,1.214,829,2.519,847,1.487,876,0.859,909,1.107,910,2.283,912,0.953,1008,1.258,1020,1.076,1027,2.969,1055,2.609,1064,1.175,1124,1.214,1127,1.827,1168,3.269,1208,1.738,1227,1.507,1272,1.429,1285,2.89,1290,2.218,1341,3.685,1352,2.782,1353,1.076,1388,2.425,1431,1.258,1472,1.258,1499,1.214,1507,2.061,1534,1.934,1537,1.175,1545,1.107,1557,3.415,1560,1.507,1562,1.363,1563,1.507,1564,1.307,1565,3.429,1568,1.307,1586,4.146,1612,5.229,1614,5.094,1623,0.975,1626,4.399,1627,2.844,1628,3.278,1629,4.169,1647,1.175,1666,4.808,1673,1.606,1680,2.425,1685,1.507,1695,1.507,1698,1.507,1701,1.779,1718,2.558,1742,2.782,1763,2.685,1774,2.218,1775,2.95,1776,4.107,1778,1.214,1810,1.429,1827,1.307,1829,1.076,1830,2.318,1841,2.135,1852,1.307,1859,2.135,1861,4.651,1886,1.606,1924,1.307,1935,1.214,1944,2.558,1947,1.429,1948,1.214,1953,4.529,2031,1.429,2053,1.429,2056,1.307,2081,1.429,2083,4.146,2084,3.278,2096,2.425,2117,1.606,2121,1.363,2133,1.429,2136,1.738,2176,1.258,2177,1.022,2178,1.363,2196,1.175,2197,1.878,2219,1.507,2220,1.307,2267,1.258,2305,2.135,2338,1.258,2342,3.727,2388,1.139,2389,0.998,2411,1.606,2413,2.061,2415,2.314,2418,6.011,2431,1.606,2547,1.507,2548,1.606,2549,1.307,2550,1.738,2551,3.723,2554,1.429,2556,2.782,2616,1.606,2624,2.782,2626,2.558,2628,2.425,2637,1.738,2648,1.429,2650,1.363,2664,2.726,2666,1.429,2667,1.738,2683,1.606,2704,2.425,2712,1.738,2716,1.363,2718,1.606,2728,1.307,2757,1.738,2772,1.214,2788,1.507,2850,3.014,2860,3.814,2861,2.782,2866,3.978,2896,1.214,2928,3.552,2956,1.307,2973,1.606,2974,1.606,3178,2.425,3207,1.606,3324,1.507,3462,2.425,3487,1.507,3507,1.214,3509,1.307,3510,5.056,3544,4.532,3545,1.363,3546,1.606,3647,1.363,3656,1.363,3657,1.429,3677,2.314,3712,1.507,3715,1.307,3744,1.606,3755,1.507,3768,1.738,3770,2.425,3771,2.314,3783,3.406,3791,1.507,3797,1.738,3839,2.425,3842,4.532,3846,1.606,3903,1.606,3906,3.552,3943,2.558,3945,1.507,3946,1.429,3947,2.314,3951,1.738,3964,1.738,3975,2.314,4026,2.95,4027,3.551,4034,5.308,4040,1.429,4081,3.723,4126,2.95,4157,5.072,4193,5.877,4233,1.507,4247,1.738,4252,1.606,4262,1.606,4280,1.429,4286,1.507,4307,1.507,4345,1.738,4367,1.606,4374,1.738,4419,2.425,4427,3.159,4434,1.738,4437,1.606,4441,1.606,4442,2.314,4445,4.324,4473,1.738,4488,1.606,4516,2.314,4517,1.606,4556,3.551,4572,1.606,4577,1.429,4635,1.738,4710,1.606,4749,3.843,4767,1.507,4798,1.606,4825,1.606,4849,1.507,4856,5.877,4863,2.558,4932,1.507,4958,1.738,4962,1.606,4986,1.738,5036,1.606,5077,1.606,5147,1.738,5206,4.832,5236,1.606,5244,4.399,5251,1.738,5252,1.738,5260,1.738,5263,1.363,5266,1.738,5274,1.507,5291,2.425,5295,5.591,5298,1.606,5313,1.507,5326,1.606,5335,1.738,5349,1.507,5353,1.738,5373,1.606,5374,3.333,5376,1.606,5385,3.551,5409,1.507,5419,1.738,5427,1.738,5428,1.363,5457,1.606,5464,3.552,5465,1.738,5476,2.726,5484,1.606,5486,1.606,5504,1.738,5511,1.738,5514,1.507,5542,1.429,5554,1.738,5567,1.738,5570,1.606,5572,1.429,5578,1.738,5619,2.425,5630,1.606,5636,1.738,5646,6.672,5685,1.606,5803,1.738,5867,1.606,5872,1.606,5873,1.738,5890,4.529,5904,1.507,5933,3.333,5937,1.738,5959,1.738,5976,1.606,6012,1.738,6018,1.363,6091,1.738,6119,1.738,6161,2.95,6233,1.738,6242,5.364,6249,1.738,6267,1.738,6291,1.738,6319,1.738,6330,1.738,6337,2.95,6343,5.787,6348,1.606,6349,4.169,6352,1.738,6353,1.738,6360,1.606,6370,4.529,6404,1.606,6506,1.507,6509,3.551,6543,2.95,6545,4.185,6546,1.738,6551,1.606,6572,1.738,6578,1.606,6590,1.738,6591,1.738,6661,1.738,6664,2.95,6666,1.738,6674,1.738,6707,1.738,6711,2.726,6716,1.738,6727,1.738,6741,3.29,6742,1.938,6743,1.938,6744,1.938,6745,1.938,6746,1.938,6747,1.938,6748,1.938,6749,1.938,6750,1.938,6751,1.938,6752,1.938,6753,1.938,6754,1.938,6755,3.29,6756,1.938,6757,1.938,6758,1.938,6759,1.938,6760,1.938,6761,1.938,6762,1.938,6763,1.938,6764,1.938,6765,1.938,6766,1.938,6767,1.938,6768,1.938,6769,1.938,6770,1.938,6771,1.938,6772,1.938,6773,1.938,6774,1.938,6775,1.938,6776,1.938,6777,1.938,6778,1.938,6779,1.938,6780,1.938,6781,1.938,6782,4.286,6783,1.938,6784,4.286,6785,3.29,6786,5.657,6787,3.29,6788,4.286,6789,1.938,6790,1.938,6791,3.29,6792,1.938,6793,1.938,6794,1.938,6795,1.938,6796,1.938,6797,1.938,6798,1.938,6799,1.938,6800,6.148,6801,1.938,6802,1.938,6803,1.938,6804,1.938,6805,1.938,6806,1.938,6807,1.938,6808,1.938,6809,1.938,6810,1.938,6811,1.938,6812,1.938,6813,3.29,6814,1.938,6815,3.29,6816,1.938,6817,1.938,6818,1.938,6819,3.29,6820,1.938,6821,1.938,6822,4.286,6823,3.29,6824,3.29,6825,1.938,6826,1.938,6827,5.051,6828,1.938,6829,1.938,6830,1.938,6831,1.938,6832,1.938,6833,1.938,6834,1.938,6835,3.29,6836,3.29,6837,1.938,6838,3.29,6839,1.938,6840,1.938,6841,1.938,6842,1.938,6843,1.938,6844,3.29,6845,3.29,6846,1.938,6847,1.938,6848,1.938,6849,1.938,6850,3.29,6851,1.938,6852,1.938,6853,1.938,6854,1.938,6855,1.938,6856,1.938,6857,3.29,6858,5.051,6859,1.938,6860,1.938,6861,1.938,6862,1.938,6863,1.938,6864,1.938,6865,3.29,6866,1.938,6867,1.938,6868,1.938,6869,1.938,6870,1.938,6871,1.938,6872,1.938,6873,1.938,6874,1.938,6875,1.938,6876,3.29,6877,1.938,6878,1.938,6879,1.938,6880,1.938,6881,1.938,6882,1.938,6883,1.938,6884,1.938,6885,1.938,6886,1.938,6887,1.938,6888,1.938,6889,1.938,6890,1.938,6891,1.938,6892,1.938,6893,1.938,6894,1.938,6895,1.938,6896,1.938,6897,1.938,6898,1.938,6899,1.938,6900,1.938,6901,1.938,6902,1.938,6903,1.938,6904,1.938,6905,1.938,6906,1.938,6907,1.938,6908,1.938]],["title/additional-documentation/nestjs-application/decisions.html",[1777,2.126,3019,2.348,6705,3.504]],["body/additional-documentation/nestjs-application/decisions.html",[10,1.423,14,0.004,47,3.717,111,3.05,171,0.004,172,0.004,174,1.596,206,3.18,313,1.461,320,3.792,346,1.733,352,1.622,361,4.291,369,3.219,374,3.775,413,3.672,494,2.417,573,4.009,588,4.291,632,3.05,847,2.989,977,4.009,1020,3.672,1119,5.545,1127,4.567,1168,2.821,1341,3.18,1431,5.808,1545,3.775,1622,5.142,1623,3.325,1627,3.325,1830,3.577,1833,5.783,1834,4.65,1859,4.291,1924,4.459,2342,4.009,2433,6.035,2555,5.929,2893,6.813,2896,4.142,2928,5.783,3650,4.65,3701,5.479,3745,4.65,3767,4.65,3817,6.96,4034,4.291,4050,6.813,4098,5.479,4238,5.479,4332,5.929,4524,5.929,4703,5.929,4886,5.929,5236,5.479,5243,4.874,5248,4.459,5428,4.65,5843,5.479,5915,5.142,6349,4.874,6360,5.479,6506,5.142,6536,5.929,6705,6.813,6909,6.612,6910,6.612,6911,6.612,6912,6.612,6913,6.612,6914,6.612,6915,6.612,6916,6.612,6917,6.612,6918,8.223,6919,6.612,6920,6.612,6921,6.612,6922,6.612,6923,6.612,6924,6.612,6925,6.612,6926,6.612,6927,6.612,6928,6.612,6929,6.612,6930,6.612,6931,6.612]],["title/additional-documentation/nestjs-application/vscode.html",[1777,2.126,3019,2.348,5246,3.289]],["body/additional-documentation/nestjs-application/vscode.html",[5,0.099,14,0.004,111,3.34,171,0.004,172,0.004,210,4.01,362,4.828,495,4.181,589,4.701,590,4.372,605,4.884,632,4.01,648,4.884,1117,4.372,1127,4.022,1593,5.633,1612,3.918,1687,5.094,2618,5.339,2680,4.884,3545,5.094,3688,5.339,3945,5.633,3975,6.114,4034,4.701,4067,6.001,4380,5.633,4442,5.094,4615,7.203,5246,6.761,5276,7.795,5304,4.884,5473,5.339,5574,6.494,5907,8.353,5931,6.494,6018,5.094,6102,6.001,6274,6.494,6276,6.494,6932,7.243,6933,7.243,6934,7.243,6935,7.243,6936,7.243,6937,7.243,6938,7.243,6939,7.243,6940,7.243]],["title/additional-documentation/nestjs-application/git.html",[1777,2.126,3019,2.348,5247,3.504]],["body/additional-documentation/nestjs-application/git.html",[14,0.004,46,3.442,53,3.509,171,0.004,172,0.004,656,4.654,2389,4.076,2413,4.96,3186,5.836,4963,6.157,5051,7.591,5247,8.011,5259,7.099,6424,7.099,6941,7.918,6942,7.918,6943,7.918,6944,7.918]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/BaseFile.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["0",{"_index":458,"title":{},"body":{"classes/BaseFactory.html":{},"classes/DashboardEntity.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"injectables/DeleteFilesUc.html":{},"classes/EncryptedStringType.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"injectables/RoleRepo.html":{},"classes/Scope.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["0.1.1",{"_index":5135,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":5171,"title":{},"body":{"dependencies.html":{}}}],["0.1.4",{"_index":5181,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":5097,"title":{},"body":{"dependencies.html":{}}}],["0.22.0",{"_index":5087,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":5096,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":5162,"title":{},"body":{"dependencies.html":{}}}],["0.4.17",{"_index":5193,"title":{},"body":{"dependencies.html":{}}}],["0.5.19",{"_index":5185,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":5155,"title":{},"body":{"dependencies.html":{}}}],["0.5.4",{"_index":5140,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":5146,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":5184,"title":{},"body":{"dependencies.html":{}}}],["0.8.0",{"_index":5080,"title":{},"body":{"dependencies.html":{}}}],["0.8.1",{"_index":5149,"title":{},"body":{"dependencies.html":{}}}],["0.9.7",{"_index":5138,"title":{},"body":{"dependencies.html":{}}}],["0000d213816abba584714c0a",{"_index":1281,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["0000d224816abba584714c9c",{"_index":6883,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["0000d225816abba584714c9d",{"_index":6885,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["01",{"_index":4095,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":3664,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":3851,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":4090,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":3796,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":4047,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":3959,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":3913,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":3799,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":1055,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/Scope.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["1.0.0",{"_index":5163,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":5174,"title":{},"body":{"dependencies.html":{}}}],["1.0.5",{"_index":5122,"title":{},"body":{"dependencies.html":{}}}],["1.0.56",{"_index":5108,"title":{},"body":{"dependencies.html":{}}}],["1.0a",{"_index":5158,"title":{},"body":{"dependencies.html":{}}}],["1.1",{"_index":6835,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["1.1.0",{"_index":5119,"title":{},"body":{"dependencies.html":{}}}],["1.1.1",{"_index":5199,"title":{},"body":{"dependencies.html":{}}}],["1.1.4",{"_index":5172,"title":{},"body":{"dependencies.html":{}}}],["1.15.2",{"_index":5091,"title":{},"body":{"dependencies.html":{}}}],["1.17.0",{"_index":5062,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":6836,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["1.2.0",{"_index":5088,"title":{},"body":{"dependencies.html":{}}}],["1.2.7",{"_index":4631,"title":{},"body":{"changelog.html":{}}}],["1.28.1",{"_index":5125,"title":{},"body":{"dependencies.html":{}}}],["1.3.3",{"_index":5063,"title":{},"body":{"dependencies.html":{}}}],["1.6.2",{"_index":5102,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":3017,"title":{},"body":{"classes/PaginationQuery.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["106",{"_index":3919,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":3663,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["110",{"_index":3900,"title":{},"body":{"changelog.html":{}}}],["111",{"_index":3801,"title":{},"body":{"changelog.html":{}}}],["112",{"_index":3856,"title":{},"body":{"changelog.html":{}}}],["119",{"_index":3895,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":3753,"title":{},"body":{"changelog.html":{}}}],["12.0.0",{"_index":5165,"title":{},"body":{"dependencies.html":{}}}],["120",{"_index":3852,"title":{},"body":{"changelog.html":{}}}],["121",{"_index":3706,"title":{},"body":{"changelog.html":{}}}],["124",{"_index":3898,"title":{},"body":{"changelog.html":{}}}],["1289",{"_index":4518,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":3718,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1316",{"_index":4712,"title":{},"body":{"changelog.html":{}}}],["137",{"_index":3915,"title":{},"body":{"changelog.html":{}}}],["138",{"_index":4553,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":3729,"title":{},"body":{"changelog.html":{}}}],["14.14",{"_index":1972,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["1499",{"_index":4120,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":4076,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1508",{"_index":4148,"title":{},"body":{"changelog.html":{}}}],["154",{"_index":3782,"title":{},"body":{"changelog.html":{}}}],["155",{"_index":3704,"title":{},"body":{"changelog.html":{}}}],["15672:15672",{"_index":6205,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["1589",{"_index":4550,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":3687,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["16.2.0",{"_index":5120,"title":{},"body":{"dependencies.html":{}}}],["160",{"_index":4532,"title":{},"body":{"changelog.html":{}}}],["164",{"_index":3823,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":4220,"title":{},"body":{"changelog.html":{}}}],["1735",{"_index":4431,"title":{},"body":{"changelog.html":{}}}],["174",{"_index":3672,"title":{},"body":{"changelog.html":{}}}],["179",{"_index":3816,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":3926,"title":{},"body":{"changelog.html":{}}}],["187",{"_index":3861,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":3731,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1996",{"_index":5530,"title":{},"body":{"license.html":{}}}],["1:1",{"_index":6925,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["1:n",{"_index":6924,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["2",{"_index":1027,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["2.1.0",{"_index":5178,"title":{},"body":{"dependencies.html":{}}}],["2.19.2",{"_index":5137,"title":{},"body":{"dependencies.html":{}}}],["2.2.6",{"_index":5159,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":5123,"title":{},"body":{"dependencies.html":{}}}],["2.6.0",{"_index":5084,"title":{},"body":{"dependencies.html":{}}}],["2.8.1",{"_index":5105,"title":{},"body":{"dependencies.html":{}}}],["2.970.0",{"_index":5086,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":3998,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2007",{"_index":5310,"title":{},"body":{"license.html":{}}}],["2020",{"_index":4408,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":3662,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":3743,"title":{},"body":{"changelog.html":{}}}],["213",{"_index":3811,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":3727,"title":{},"body":{"changelog.html":{}}}],["22.10.0",{"_index":4930,"title":{},"body":{"changelog.html":{}}}],["22.10.2",{"_index":4928,"title":{},"body":{"changelog.html":{}}}],["22.10.3",{"_index":4926,"title":{},"body":{"changelog.html":{}}}],["22.7.1",{"_index":5054,"title":{},"body":{"changelog.html":{}}}],["22.8.0",{"_index":5028,"title":{},"body":{"changelog.html":{}}}],["22.9.0",{"_index":5027,"title":{},"body":{"changelog.html":{}}}],["22.9.1",{"_index":5023,"title":{},"body":{"changelog.html":{}}}],["22.9.10",{"_index":4999,"title":{},"body":{"changelog.html":{}}}],["22.9.17",{"_index":4994,"title":{},"body":{"changelog.html":{}}}],["22.9.18",{"_index":4989,"title":{},"body":{"changelog.html":{}}}],["22.9.2",{"_index":5021,"title":{},"body":{"changelog.html":{}}}],["22.9.20",{"_index":4976,"title":{},"body":{"changelog.html":{}}}],["22.9.3",{"_index":5017,"title":{},"body":{"changelog.html":{}}}],["22.9.4",{"_index":5015,"title":{},"body":{"changelog.html":{}}}],["22.9.5",{"_index":5012,"title":{},"body":{"changelog.html":{}}}],["22.9.6",{"_index":5006,"title":{},"body":{"changelog.html":{}}}],["22.9.7",{"_index":5004,"title":{},"body":{"changelog.html":{}}}],["22.9.8",{"_index":5001,"title":{},"body":{"changelog.html":{}}}],["22.9.9",{"_index":5000,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":3987,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["23.0.0",{"_index":4918,"title":{},"body":{"changelog.html":{}}}],["23.1.4",{"_index":4914,"title":{},"body":{"changelog.html":{}}}],["23.2.0",{"_index":4910,"title":{},"body":{"changelog.html":{}}}],["23.2.1",{"_index":4906,"title":{},"body":{"changelog.html":{}}}],["23.2.4",{"_index":4902,"title":{},"body":{"changelog.html":{}}}],["23.4.0",{"_index":4898,"title":{},"body":{"changelog.html":{}}}],["23.4.3",{"_index":4893,"title":{},"body":{"changelog.html":{}}}],["23.4.5",{"_index":4888,"title":{},"body":{"changelog.html":{}}}],["23.4.7",{"_index":4882,"title":{},"body":{"changelog.html":{}}}],["23.5.0",{"_index":4874,"title":{},"body":{"changelog.html":{}}}],["23.5.4",{"_index":4870,"title":{},"body":{"changelog.html":{}}}],["23.6.0",{"_index":4867,"title":{},"body":{"changelog.html":{}}}],["23.6.1",{"_index":4861,"title":{},"body":{"changelog.html":{}}}],["23.6.2",{"_index":4853,"title":{},"body":{"changelog.html":{}}}],["23.6.3",{"_index":4827,"title":{},"body":{"changelog.html":{}}}],["23.6.4",{"_index":4823,"title":{},"body":{"changelog.html":{}}}],["231",{"_index":3784,"title":{},"body":{"changelog.html":{}}}],["232",{"_index":3833,"title":{},"body":{"changelog.html":{}}}],["233",{"_index":3836,"title":{},"body":{"changelog.html":{}}}],["237",{"_index":3769,"title":{},"body":{"changelog.html":{}}}],["239",{"_index":3909,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":4064,"title":{},"body":{"changelog.html":{}}}],["24.0.1",{"_index":4820,"title":{},"body":{"changelog.html":{}}}],["24.0.2",{"_index":4816,"title":{},"body":{"changelog.html":{}}}],["24.2.2",{"_index":4795,"title":{},"body":{"changelog.html":{}}}],["24.2.3",{"_index":4794,"title":{},"body":{"changelog.html":{}}}],["24.2.4",{"_index":4793,"title":{},"body":{"changelog.html":{}}}],["24.2.5",{"_index":4788,"title":{},"body":{"changelog.html":{}}}],["24.3.0",{"_index":4787,"title":{},"body":{"changelog.html":{}}}],["24.3.1",{"_index":4783,"title":{},"body":{"changelog.html":{}}}],["24.3.2",{"_index":4777,"title":{},"body":{"changelog.html":{}}}],["24.3.3",{"_index":4774,"title":{},"body":{"changelog.html":{}}}],["24.4.0",{"_index":4769,"title":{},"body":{"changelog.html":{}}}],["24.4.1",{"_index":4761,"title":{},"body":{"changelog.html":{}}}],["24.4.2",{"_index":4758,"title":{},"body":{"changelog.html":{}}}],["24.4.3",{"_index":4756,"title":{},"body":{"changelog.html":{}}}],["24.4.4",{"_index":4753,"title":{},"body":{"changelog.html":{}}}],["24.4.5",{"_index":4747,"title":{},"body":{"changelog.html":{}}}],["24.4.6",{"_index":4744,"title":{},"body":{"changelog.html":{}}}],["24.5.0",{"_index":4733,"title":{},"body":{"changelog.html":{}}}],["24.5.1",{"_index":4731,"title":{},"body":{"changelog.html":{}}}],["2418",{"_index":4096,"title":{},"body":{"changelog.html":{}}}],["2466",{"_index":4065,"title":{},"body":{"changelog.html":{}}}],["247",{"_index":3845,"title":{},"body":{"changelog.html":{}}}],["2491",{"_index":3934,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":3763,"title":{},"body":{"changelog.html":{}}}],["25.0.0",{"_index":4729,"title":{},"body":{"changelog.html":{}}}],["25.0.1",{"_index":4726,"title":{},"body":{"changelog.html":{}}}],["25.0.10",{"_index":4697,"title":{},"body":{"changelog.html":{}}}],["25.0.11",{"_index":4694,"title":{},"body":{"changelog.html":{}}}],["25.0.12",{"_index":4691,"title":{},"body":{"changelog.html":{}}}],["25.0.2",{"_index":4725,"title":{},"body":{"changelog.html":{}}}],["25.0.3",{"_index":4720,"title":{},"body":{"changelog.html":{}}}],["25.0.4",{"_index":4718,"title":{},"body":{"changelog.html":{}}}],["25.0.5",{"_index":4716,"title":{},"body":{"changelog.html":{}}}],["25.0.6",{"_index":4715,"title":{},"body":{"changelog.html":{}}}],["25.0.7",{"_index":4711,"title":{},"body":{"changelog.html":{}}}],["25.0.8",{"_index":4704,"title":{},"body":{"changelog.html":{}}}],["25.0.9",{"_index":4700,"title":{},"body":{"changelog.html":{}}}],["25.1.0",{"_index":4672,"title":{},"body":{"changelog.html":{}}}],["25.1.1",{"_index":4667,"title":{},"body":{"changelog.html":{}}}],["25.1.10",{"_index":4642,"title":{},"body":{"changelog.html":{}}}],["25.1.11",{"_index":4640,"title":{},"body":{"changelog.html":{}}}],["25.1.12",{"_index":4638,"title":{},"body":{"changelog.html":{}}}],["25.1.13",{"_index":4637,"title":{},"body":{"changelog.html":{}}}],["25.1.2",{"_index":4663,"title":{},"body":{"changelog.html":{}}}],["25.1.3",{"_index":4662,"title":{},"body":{"changelog.html":{}}}],["25.1.4",{"_index":4659,"title":{},"body":{"changelog.html":{}}}],["25.1.5",{"_index":4656,"title":{},"body":{"changelog.html":{}}}],["25.1.6",{"_index":4653,"title":{},"body":{"changelog.html":{}}}],["25.1.7",{"_index":4649,"title":{},"body":{"changelog.html":{}}}],["25.1.8",{"_index":4647,"title":{},"body":{"changelog.html":{}}}],["25.1.9",{"_index":4645,"title":{},"body":{"changelog.html":{}}}],["25.2",{"_index":4424,"title":{},"body":{"changelog.html":{}}}],["25.2.0",{"_index":4600,"title":{},"body":{"changelog.html":{}}}],["25.2.1",{"_index":4598,"title":{},"body":{"changelog.html":{}}}],["25.2.2",{"_index":4595,"title":{},"body":{"changelog.html":{}}}],["25.2.3",{"_index":4594,"title":{},"body":{"changelog.html":{}}}],["25.2.4",{"_index":4590,"title":{},"body":{"changelog.html":{}}}],["25.2.5",{"_index":4589,"title":{},"body":{"changelog.html":{}}}],["25.2.6",{"_index":4588,"title":{},"body":{"changelog.html":{}}}],["25.3.0",{"_index":4450,"title":{},"body":{"changelog.html":{}}}],["25.3.1",{"_index":4447,"title":{},"body":{"changelog.html":{}}}],["25.3.2",{"_index":4438,"title":{},"body":{"changelog.html":{}}}],["25.3.3",{"_index":4422,"title":{},"body":{"changelog.html":{}}}],["25.3.4",{"_index":4420,"title":{},"body":{"changelog.html":{}}}],["25.3.5",{"_index":4415,"title":{},"body":{"changelog.html":{}}}],["25.3.6",{"_index":4412,"title":{},"body":{"changelog.html":{}}}],["25.3.7",{"_index":4407,"title":{},"body":{"changelog.html":{}}}],["25.3.8",{"_index":4404,"title":{},"body":{"changelog.html":{}}}],["25.3.9",{"_index":4400,"title":{},"body":{"changelog.html":{}}}],["25.4.1",{"_index":4399,"title":{},"body":{"changelog.html":{}}}],["25.5.0",{"_index":4377,"title":{},"body":{"changelog.html":{}}}],["25.5.1",{"_index":4376,"title":{},"body":{"changelog.html":{}}}],["25.5.10",{"_index":4329,"title":{},"body":{"changelog.html":{}}}],["25.5.11",{"_index":4328,"title":{},"body":{"changelog.html":{}}}],["25.5.12",{"_index":4326,"title":{},"body":{"changelog.html":{}}}],["25.5.13",{"_index":4324,"title":{},"body":{"changelog.html":{}}}],["25.5.14",{"_index":4321,"title":{},"body":{"changelog.html":{}}}],["25.5.15",{"_index":4317,"title":{},"body":{"changelog.html":{}}}],["25.5.16",{"_index":4314,"title":{},"body":{"changelog.html":{}}}],["25.5.2",{"_index":4372,"title":{},"body":{"changelog.html":{}}}],["25.5.3",{"_index":4323,"title":{},"body":{"changelog.html":{}}}],["25.5.4",{"_index":4352,"title":{},"body":{"changelog.html":{}}}],["25.5.5",{"_index":4350,"title":{},"body":{"changelog.html":{}}}],["25.5.6",{"_index":4343,"title":{},"body":{"changelog.html":{}}}],["25.5.7",{"_index":4341,"title":{},"body":{"changelog.html":{}}}],["25.5.8",{"_index":4338,"title":{},"body":{"changelog.html":{}}}],["25.5.9",{"_index":4333,"title":{},"body":{"changelog.html":{}}}],["25.6.0",{"_index":4283,"title":{},"body":{"changelog.html":{}}}],["25.6.1",{"_index":4281,"title":{},"body":{"changelog.html":{}}}],["25.6.10",{"_index":4227,"title":{},"body":{"changelog.html":{}}}],["25.6.11",{"_index":4223,"title":{},"body":{"changelog.html":{}}}],["25.6.12",{"_index":4242,"title":{},"body":{"changelog.html":{}}}],["25.6.13",{"_index":4239,"title":{},"body":{"changelog.html":{}}}],["25.6.2",{"_index":4277,"title":{},"body":{"changelog.html":{}}}],["25.6.3",{"_index":4275,"title":{},"body":{"changelog.html":{}}}],["25.6.4",{"_index":4272,"title":{},"body":{"changelog.html":{}}}],["25.6.5",{"_index":4270,"title":{},"body":{"changelog.html":{}}}],["25.6.6",{"_index":4267,"title":{},"body":{"changelog.html":{}}}],["25.6.7",{"_index":4263,"title":{},"body":{"changelog.html":{}}}],["25.6.8",{"_index":4253,"title":{},"body":{"changelog.html":{}}}],["25.6.9",{"_index":4248,"title":{},"body":{"changelog.html":{}}}],["2574",{"_index":4009,"title":{},"body":{"changelog.html":{}}}],["2579",{"_index":4014,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":3703,"title":{},"body":{"changelog.html":{}}}],["26.0",{"_index":4224,"title":{},"body":{"changelog.html":{}}}],["26.0.0",{"_index":4228,"title":{},"body":{"changelog.html":{}}}],["26.0.1",{"_index":4226,"title":{},"body":{"changelog.html":{}}}],["26.0.10",{"_index":4200,"title":{},"body":{"changelog.html":{}}}],["26.0.11",{"_index":4199,"title":{},"body":{"changelog.html":{}}}],["26.0.12",{"_index":4194,"title":{},"body":{"changelog.html":{}}}],["26.0.13",{"_index":4191,"title":{},"body":{"changelog.html":{}}}],["26.0.14",{"_index":4187,"title":{},"body":{"changelog.html":{}}}],["26.0.15",{"_index":4185,"title":{},"body":{"changelog.html":{}}}],["26.0.16",{"_index":4179,"title":{},"body":{"changelog.html":{}}}],["26.0.2",{"_index":4225,"title":{},"body":{"changelog.html":{}}}],["26.0.3",{"_index":4219,"title":{},"body":{"changelog.html":{}}}],["26.0.4",{"_index":4216,"title":{},"body":{"changelog.html":{}}}],["26.0.5",{"_index":4215,"title":{},"body":{"changelog.html":{}}}],["26.0.6",{"_index":4212,"title":{},"body":{"changelog.html":{}}}],["26.0.7",{"_index":4210,"title":{},"body":{"changelog.html":{}}}],["26.0.8",{"_index":4204,"title":{},"body":{"changelog.html":{}}}],["26.0.9",{"_index":4203,"title":{},"body":{"changelog.html":{}}}],["26.1.0",{"_index":4169,"title":{},"body":{"changelog.html":{}}}],["26.10.0",{"_index":3863,"title":{},"body":{"changelog.html":{}}}],["26.10.1",{"_index":3860,"title":{},"body":{"changelog.html":{}}}],["26.10.2",{"_index":3850,"title":{},"body":{"changelog.html":{}}}],["26.10.3",{"_index":3847,"title":{},"body":{"changelog.html":{}}}],["26.11.0",{"_index":3808,"title":{},"body":{"changelog.html":{}}}],["26.11.1",{"_index":3805,"title":{},"body":{"changelog.html":{}}}],["26.11.2",{"_index":3798,"title":{},"body":{"changelog.html":{}}}],["26.11.3",{"_index":3795,"title":{},"body":{"changelog.html":{}}}],["26.12.0",{"_index":3752,"title":{},"body":{"changelog.html":{}}}],["26.13.0",{"_index":3730,"title":{},"body":{"changelog.html":{}}}],["26.13.2",{"_index":3726,"title":{},"body":{"changelog.html":{}}}],["26.14.0",{"_index":3702,"title":{},"body":{"changelog.html":{}}}],["26.15.0",{"_index":3661,"title":{},"body":{"changelog.html":{}}}],["26.2.0",{"_index":4094,"title":{},"body":{"changelog.html":{}}}],["26.2.1",{"_index":4091,"title":{},"body":{"changelog.html":{}}}],["26.2.2",{"_index":4089,"title":{},"body":{"changelog.html":{}}}],["26.3.0",{"_index":4086,"title":{},"body":{"changelog.html":{}}}],["26.3.1",{"_index":4083,"title":{},"body":{"changelog.html":{}}}],["26.4.0",{"_index":4079,"title":{},"body":{"changelog.html":{}}}],["26.4.1",{"_index":4075,"title":{},"body":{"changelog.html":{}}}],["26.4.2",{"_index":4073,"title":{},"body":{"changelog.html":{}}}],["26.4.3",{"_index":4071,"title":{},"body":{"changelog.html":{}}}],["26.4.4",{"_index":4070,"title":{},"body":{"changelog.html":{}}}],["26.4.5",{"_index":4068,"title":{},"body":{"changelog.html":{}}}],["26.4.6",{"_index":4063,"title":{},"body":{"changelog.html":{}}}],["26.4.7",{"_index":4059,"title":{},"body":{"changelog.html":{}}}],["26.4.8",{"_index":4058,"title":{},"body":{"changelog.html":{}}}],["26.4.9",{"_index":4053,"title":{},"body":{"changelog.html":{}}}],["26.5.0",{"_index":4046,"title":{},"body":{"changelog.html":{}}}],["26.6.0",{"_index":3997,"title":{},"body":{"changelog.html":{}}}],["26.6.1",{"_index":3996,"title":{},"body":{"changelog.html":{}}}],["26.6.2",{"_index":3991,"title":{},"body":{"changelog.html":{}}}],["26.6.3",{"_index":3988,"title":{},"body":{"changelog.html":{}}}],["26.6.4",{"_index":3986,"title":{},"body":{"changelog.html":{}}}],["26.7.0",{"_index":3958,"title":{},"body":{"changelog.html":{}}}],["26.7.1",{"_index":3954,"title":{},"body":{"changelog.html":{}}}],["26.8.0",{"_index":3953,"title":{},"body":{"changelog.html":{}}}],["26.9.0",{"_index":3932,"title":{},"body":{"changelog.html":{}}}],["26.9.1",{"_index":3925,"title":{},"body":{"changelog.html":{}}}],["26.9.2",{"_index":3912,"title":{},"body":{"changelog.html":{}}}],["26.9.3",{"_index":3908,"title":{},"body":{"changelog.html":{}}}],["262",{"_index":3843,"title":{},"body":{"changelog.html":{}}}],["267",{"_index":3848,"title":{},"body":{"changelog.html":{}}}],["269",{"_index":3779,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":3914,"title":{},"body":{"changelog.html":{}}}],["2710",{"_index":4739,"title":{},"body":{"changelog.html":{}}}],["2714",{"_index":4871,"title":{},"body":{"changelog.html":{}}}],["274",{"_index":3809,"title":{},"body":{"changelog.html":{}}}],["279",{"_index":3826,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":3960,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["29",{"_index":3800,"title":{},"body":{"changelog.html":{}}}],["2922",{"_index":5035,"title":{},"body":{"changelog.html":{}}}],["297",{"_index":3790,"title":{},"body":{"changelog.html":{}}}],["2auth",{"_index":5961,"title":{},"body":{"todo.html":{}}}],["3",{"_index":1285,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["3.0.0",{"_index":5169,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":5175,"title":{},"body":{"dependencies.html":{}}}],["3.1",{"_index":6876,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["3.1.0",{"_index":5166,"title":{},"body":{"dependencies.html":{}}}],["3.1.20",{"_index":5157,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":5197,"title":{},"body":{"dependencies.html":{}}}],["3.2.2",{"_index":5078,"title":{},"body":{"dependencies.html":{}}}],["3.6.2",{"_index":5176,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":4213,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["3030/docs",{"_index":6264,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["3030/v3/docs",{"_index":6258,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["31",{"_index":4205,"title":{},"body":{"changelog.html":{}}}],["315",{"_index":3818,"title":{},"body":{"changelog.html":{}}}],["318",{"_index":3831,"title":{},"body":{"changelog.html":{}}}],["319",{"_index":3757,"title":{},"body":{"changelog.html":{}}}],["331",{"_index":3773,"title":{},"body":{"changelog.html":{}}}],["339",{"_index":3740,"title":{},"body":{"changelog.html":{}}}],["3395",{"_index":4957,"title":{},"body":{"changelog.html":{}}}],["343",{"_index":3758,"title":{},"body":{"changelog.html":{}}}],["354",{"_index":3774,"title":{},"body":{"changelog.html":{}}}],["3607",{"_index":4938,"title":{},"body":{"changelog.html":{}}}],["365",{"_index":3806,"title":{},"body":{"changelog.html":{}}}],["3686",{"_index":4950,"title":{},"body":{"changelog.html":{}}}],["369",{"_index":3668,"title":{},"body":{"changelog.html":{}}}],["37",{"_index":3885,"title":{},"body":{"changelog.html":{}}}],["370",{"_index":3804,"title":{},"body":{"changelog.html":{}}}],["3719",{"_index":4931,"title":{},"body":{"changelog.html":{}}}],["3767",{"_index":5044,"title":{},"body":{"changelog.html":{}}}],["377",{"_index":3793,"title":{},"body":{"changelog.html":{}}}],["379",{"_index":3684,"title":{},"body":{"changelog.html":{}}}],["38",{"_index":3897,"title":{},"body":{"changelog.html":{}}}],["3821",{"_index":5052,"title":{},"body":{"changelog.html":{}}}],["383",{"_index":3713,"title":{},"body":{"changelog.html":{}}}],["386",{"_index":3788,"title":{},"body":{"changelog.html":{}}}],["388",{"_index":3754,"title":{},"body":{"changelog.html":{}}}],["3892",{"_index":4955,"title":{},"body":{"changelog.html":{}}}],["391",{"_index":3736,"title":{},"body":{"changelog.html":{}}}],["394",{"_index":3732,"title":{},"body":{"changelog.html":{}}}],["3948",{"_index":4944,"title":{},"body":{"changelog.html":{}}}],["3958",{"_index":4966,"title":{},"body":{"changelog.html":{}}}],["3994",{"_index":5024,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":1290,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["4.0.0",{"_index":5094,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":5189,"title":{},"body":{"dependencies.html":{}}}],["4.14.0",{"_index":5115,"title":{},"body":{"dependencies.html":{}}}],["4.17.19",{"_index":5132,"title":{},"body":{"dependencies.html":{}}}],["4.2",{"_index":2639,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["4.2.0",{"_index":5114,"title":{},"body":{"dependencies.html":{}}}],["4.2.5",{"_index":5098,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":5065,"title":{},"body":{"dependencies.html":{}}}],["4.5.1",{"_index":5092,"title":{},"body":{"dependencies.html":{}}}],["4.5.11",{"_index":5057,"title":{},"body":{"dependencies.html":{}}}],["4.5.5",{"_index":5064,"title":{},"body":{"dependencies.html":{}}}],["4.7.1",{"_index":5116,"title":{},"body":{"dependencies.html":{}}}],["4.x",{"_index":6198,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["40",{"_index":3676,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["4008",{"_index":4947,"title":{},"body":{"changelog.html":{}}}],["4018",{"_index":4945,"title":{},"body":{"changelog.html":{}}}],["402",{"_index":3697,"title":{},"body":{"changelog.html":{}}}],["404",{"_index":5972,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["4042",{"_index":4977,"title":{},"body":{"changelog.html":{}}}],["4075",{"_index":4919,"title":{},"body":{"changelog.html":{}}}],["409/bad",{"_index":6739,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["409/conflict",{"_index":2086,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["4094",{"_index":4951,"title":{},"body":{"changelog.html":{}}}],["41",{"_index":3882,"title":{},"body":{"changelog.html":{}}}],["4105",{"_index":4961,"title":{},"body":{"changelog.html":{}}}],["4121",{"_index":4995,"title":{},"body":{"changelog.html":{}}}],["4142",{"_index":4868,"title":{},"body":{"changelog.html":{}}}],["4192",{"_index":4875,"title":{},"body":{"changelog.html":{}}}],["42",{"_index":3874,"title":{},"body":{"changelog.html":{}}}],["4215",{"_index":4990,"title":{},"body":{"changelog.html":{}}}],["4289",{"_index":4846,"title":{},"body":{"changelog.html":{}}}],["436",{"_index":3741,"title":{},"body":{"changelog.html":{}}}],["4385",{"_index":4601,"title":{},"body":{"changelog.html":{}}}],["44",{"_index":3871,"title":{},"body":{"changelog.html":{}}}],["4506",{"_index":4911,"title":{},"body":{"changelog.html":{}}}],["451",{"_index":3682,"title":{},"body":{"changelog.html":{}}}],["4520",{"_index":4831,"title":{},"body":{"changelog.html":{}}}],["4576",{"_index":4309,"title":{},"body":{"changelog.html":{}}}],["4577",{"_index":4899,"title":{},"body":{"changelog.html":{}}}],["46",{"_index":5928,"title":{},"body":{"overview.html":{}}}],["4666",{"_index":4460,"title":{},"body":{"changelog.html":{}}}],["4667",{"_index":4493,"title":{},"body":{"changelog.html":{}}}],["469",{"_index":3693,"title":{},"body":{"changelog.html":{}}}],["4720",{"_index":4907,"title":{},"body":{"changelog.html":{}}}],["4749",{"_index":4915,"title":{},"body":{"changelog.html":{}}}],["477",{"_index":3689,"title":{},"body":{"changelog.html":{}}}],["487",{"_index":3746,"title":{},"body":{"changelog.html":{}}}],["4876",{"_index":4903,"title":{},"body":{"changelog.html":{}}}],["490",{"_index":3749,"title":{},"body":{"changelog.html":{}}}],["495",{"_index":3709,"title":{},"body":{"changelog.html":{}}}],["4957",{"_index":4878,"title":{},"body":{"changelog.html":{}}}],["496",{"_index":3711,"title":{},"body":{"changelog.html":{}}}],["4965",{"_index":4883,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":3903,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["5.0.0",{"_index":5082,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":5083,"title":{},"body":{"dependencies.html":{}}}],["5.0.3",{"_index":5118,"title":{},"body":{"dependencies.html":{}}}],["5.1.0",{"_index":5071,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":5161,"title":{},"body":{"dependencies.html":{}}}],["5.13.9",{"_index":5139,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":6730,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["5007",{"_index":4889,"title":{},"body":{"changelog.html":{}}}],["501",{"_index":3721,"title":{},"body":{"changelog.html":{}}}],["5054",{"_index":4894,"title":{},"body":{"changelog.html":{}}}],["507",{"_index":3691,"title":{},"body":{"changelog.html":{}}}],["5202",{"_index":4155,"title":{},"body":{"changelog.html":{}}}],["5230",{"_index":4686,"title":{},"body":{"changelog.html":{}}}],["5250",{"_index":4836,"title":{},"body":{"changelog.html":{}}}],["526",{"_index":3666,"title":{},"body":{"changelog.html":{}}}],["527",{"_index":3716,"title":{},"body":{"changelog.html":{}}}],["5280",{"_index":4796,"title":{},"body":{"changelog.html":{}}}],["5287",{"_index":4359,"title":{},"body":{"changelog.html":{}}}],["532",{"_index":3679,"title":{},"body":{"changelog.html":{}}}],["54",{"_index":3886,"title":{},"body":{"changelog.html":{}}}],["5416",{"_index":4841,"title":{},"body":{"changelog.html":{}}}],["5420",{"_index":4784,"title":{},"body":{"changelog.html":{}}}],["543",{"_index":3696,"title":{},"body":{"changelog.html":{}}}],["5476",{"_index":4470,"title":{},"body":{"changelog.html":{}}}],["5542",{"_index":4843,"title":{},"body":{"changelog.html":{}}}],["5612",{"_index":4742,"title":{},"body":{"changelog.html":{}}}],["5672",{"_index":6209,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["5672:5672",{"_index":6204,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["5686",{"_index":4839,"title":{},"body":{"changelog.html":{}}}],["5733",{"_index":4862,"title":{},"body":{"changelog.html":{}}}],["5754",{"_index":4828,"title":{},"body":{"changelog.html":{}}}],["5773",{"_index":4854,"title":{},"body":{"changelog.html":{}}}],["578",{"_index":3724,"title":{},"body":{"changelog.html":{}}}],["5808",{"_index":4802,"title":{},"body":{"changelog.html":{}}}],["5835",{"_index":4817,"title":{},"body":{"changelog.html":{}}}],["5883",{"_index":4824,"title":{},"body":{"changelog.html":{}}}],["5900",{"_index":4534,"title":{},"body":{"changelog.html":{}}}],["5917",{"_index":4821,"title":{},"body":{"changelog.html":{}}}],["5987",{"_index":4764,"title":{},"body":{"changelog.html":{}}}],["5f2987e020834114b8efd6f8",{"_index":6884,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["6",{"_index":1008,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["6.0.0",{"_index":5104,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":5073,"title":{},"body":{"dependencies.html":{}}}],["6.3.0",{"_index":4183,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["6.9.4",{"_index":5167,"title":{},"body":{"dependencies.html":{}}}],["6.9.6",{"_index":3747,"title":{},"body":{"changelog.html":{}}}],["60",{"_index":5729,"title":{},"body":{"license.html":{}}}],["60000",{"_index":3106,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["6060",{"_index":4528,"title":{},"body":{"changelog.html":{}}}],["6080",{"_index":4525,"title":{},"body":{"changelog.html":{}}}],["6122",{"_index":4770,"title":{},"body":{"changelog.html":{}}}],["6151",{"_index":4569,"title":{},"body":{"changelog.html":{}}}],["6172",{"_index":4766,"title":{},"body":{"changelog.html":{}}}],["6294",{"_index":4028,"title":{},"body":{"changelog.html":{}}}],["6328",{"_index":4789,"title":{},"body":{"changelog.html":{}}}],["6382",{"_index":4778,"title":{},"body":{"changelog.html":{}}}],["64",{"_index":3877,"title":{},"body":{"changelog.html":{}}}],["6469",{"_index":4775,"title":{},"body":{"changelog.html":{}}}],["6506",{"_index":4678,"title":{},"body":{"changelog.html":{}}}],["6510",{"_index":4614,"title":{},"body":{"changelog.html":{}}}],["6511",{"_index":4762,"title":{},"body":{"changelog.html":{}}}],["6533",{"_index":4757,"title":{},"body":{"changelog.html":{}}}],["6554",{"_index":4759,"title":{},"body":{"changelog.html":{}}}],["6567",{"_index":4606,"title":{},"body":{"changelog.html":{}}}],["6586",{"_index":4564,"title":{},"body":{"changelog.html":{}}}],["6596",{"_index":4520,"title":{},"body":{"changelog.html":{}}}],["6637",{"_index":4748,"title":{},"body":{"changelog.html":{}}}],["6640",{"_index":4737,"title":{},"body":{"changelog.html":{}}}],["6676",{"_index":4692,"title":{},"body":{"changelog.html":{}}}],["6679",{"_index":4229,"title":{},"body":{"changelog.html":{}}}],["6690",{"_index":4471,"title":{},"body":{"changelog.html":{}}}],["6692",{"_index":4513,"title":{},"body":{"changelog.html":{}}}],["6696",{"_index":4727,"title":{},"body":{"changelog.html":{}}}],["6697",{"_index":4754,"title":{},"body":{"changelog.html":{}}}],["6727",{"_index":4591,"title":{},"body":{"changelog.html":{}}}],["6733",{"_index":4745,"title":{},"body":{"changelog.html":{}}}],["6738",{"_index":4474,"title":{},"body":{"changelog.html":{}}}],["6743",{"_index":4676,"title":{},"body":{"changelog.html":{}}}],["6766",{"_index":4608,"title":{},"body":{"changelog.html":{}}}],["6769",{"_index":4612,"title":{},"body":{"changelog.html":{}}}],["6774",{"_index":4681,"title":{},"body":{"changelog.html":{}}}],["6784",{"_index":4673,"title":{},"body":{"changelog.html":{}}}],["68",{"_index":3814,"title":{},"body":{"changelog.html":{}}}],["6809",{"_index":4683,"title":{},"body":{"changelog.html":{}}}],["6830",{"_index":4609,"title":{},"body":{"changelog.html":{}}}],["6942",{"_index":4721,"title":{},"body":{"changelog.html":{}}}],["6950",{"_index":4140,"title":{},"body":{"changelog.html":{}}}],["6960",{"_index":4705,"title":{},"body":{"changelog.html":{}}}],["6973",{"_index":4717,"title":{},"body":{"changelog.html":{}}}],["6986",{"_index":4621,"title":{},"body":{"changelog.html":{}}}],["699615164",{"_index":5954,"title":{},"body":{"todo.html":{}}}],["6b",{"_index":5607,"title":{},"body":{"license.html":{}}}],["6d",{"_index":5625,"title":{},"body":{"license.html":{}}}],["7",{"_index":3514,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"license.html":{}}}],["7.0.0",{"_index":5106,"title":{},"body":{"dependencies.html":{}}}],["7.24.0",{"_index":5113,"title":{},"body":{"dependencies.html":{}}}],["7.3.1",{"_index":5177,"title":{},"body":{"dependencies.html":{}}}],["7.4.4",{"_index":3748,"title":{},"body":{"changelog.html":{}}}],["7021",{"_index":4153,"title":{},"body":{"changelog.html":{}}}],["7028",{"_index":4510,"title":{},"body":{"changelog.html":{}}}],["7049",{"_index":4604,"title":{},"body":{"changelog.html":{}}}],["7083",{"_index":4478,"title":{},"body":{"changelog.html":{}}}],["7085",{"_index":4664,"title":{},"body":{"changelog.html":{}}}],["7091",{"_index":4636,"title":{},"body":{"changelog.html":{}}}],["7115",{"_index":4701,"title":{},"body":{"changelog.html":{}}}],["7142",{"_index":4455,"title":{},"body":{"changelog.html":{}}}],["7157",{"_index":4605,"title":{},"body":{"changelog.html":{}}}],["7165",{"_index":4668,"title":{},"body":{"changelog.html":{}}}],["7180",{"_index":4695,"title":{},"body":{"changelog.html":{}}}],["7205",{"_index":4485,"title":{},"body":{"changelog.html":{}}}],["7293",{"_index":4476,"title":{},"body":{"changelog.html":{}}}],["7331",{"_index":4521,"title":{},"body":{"changelog.html":{}}}],["7333",{"_index":4648,"title":{},"body":{"changelog.html":{}}}],["7353",{"_index":4557,"title":{},"body":{"changelog.html":{}}}],["7357",{"_index":4477,"title":{},"body":{"changelog.html":{}}}],["7370",{"_index":4489,"title":{},"body":{"changelog.html":{}}}],["7395",{"_index":4522,"title":{},"body":{"changelog.html":{}}}],["74",{"_index":5927,"title":{},"body":{"overview.html":{}}}],["7404",{"_index":4529,"title":{},"body":{"changelog.html":{}}}],["7411",{"_index":4483,"title":{},"body":{"changelog.html":{}}}],["7413",{"_index":4585,"title":{},"body":{"changelog.html":{}}}],["7452",{"_index":4657,"title":{},"body":{"changelog.html":{}}}],["7454",{"_index":4565,"title":{},"body":{"changelog.html":{}}}],["7474",{"_index":4543,"title":{},"body":{"changelog.html":{}}}],["7476",{"_index":4511,"title":{},"body":{"changelog.html":{}}}],["7483",{"_index":4443,"title":{},"body":{"changelog.html":{}}}],["7491",{"_index":4650,"title":{},"body":{"changelog.html":{}}}],["7499",{"_index":4501,"title":{},"body":{"changelog.html":{}}}],["7517",{"_index":4561,"title":{},"body":{"changelog.html":{}}}],["7530",{"_index":4558,"title":{},"body":{"changelog.html":{}}}],["7543",{"_index":4507,"title":{},"body":{"changelog.html":{}}}],["7555",{"_index":4459,"title":{},"body":{"changelog.html":{}}}],["7571",{"_index":4505,"title":{},"body":{"changelog.html":{}}}],["7572",{"_index":4576,"title":{},"body":{"changelog.html":{}}}],["7573",{"_index":4579,"title":{},"body":{"changelog.html":{}}}],["7614",{"_index":4487,"title":{},"body":{"changelog.html":{}}}],["7615",{"_index":4468,"title":{},"body":{"changelog.html":{}}}],["7638",{"_index":4646,"title":{},"body":{"changelog.html":{}}}],["7683",{"_index":4639,"title":{},"body":{"changelog.html":{}}}],["7695",{"_index":4641,"title":{},"body":{"changelog.html":{}}}],["7714",{"_index":4599,"title":{},"body":{"changelog.html":{}}}],["7734",{"_index":4439,"title":{},"body":{"changelog.html":{}}}],["7763",{"_index":4391,"title":{},"body":{"changelog.html":{}}}],["7773",{"_index":4596,"title":{},"body":{"changelog.html":{}}}],["7825",{"_index":4299,"title":{},"body":{"changelog.html":{}}}],["7827",{"_index":4383,"title":{},"body":{"changelog.html":{}}}],["7835",{"_index":4378,"title":{},"body":{"changelog.html":{}}}],["7836",{"_index":4452,"title":{},"body":{"changelog.html":{}}}],["7838",{"_index":4453,"title":{},"body":{"changelog.html":{}}}],["7841",{"_index":4451,"title":{},"body":{"changelog.html":{}}}],["7868",{"_index":4111,"title":{},"body":{"changelog.html":{}}}],["7872",{"_index":4537,"title":{},"body":{"changelog.html":{}}}],["7884",{"_index":4582,"title":{},"body":{"changelog.html":{}}}],["7915",{"_index":4502,"title":{},"body":{"changelog.html":{}}}],["7937",{"_index":4109,"title":{},"body":{"changelog.html":{}}}],["7944",{"_index":4147,"title":{},"body":{"changelog.html":{}}}],["7998",{"_index":4421,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":1937,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"changelog.html":{},"overview.html":{}}}],["8.0.0",{"_index":5067,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":5069,"title":{},"body":{"dependencies.html":{}}}],["8.0.9",{"_index":5066,"title":{},"body":{"dependencies.html":{}}}],["8.1.0",{"_index":5100,"title":{},"body":{"dependencies.html":{}}}],["8.3.0",{"_index":5196,"title":{},"body":{"dependencies.html":{}}}],["8.3.1",{"_index":4184,"title":{},"body":{"changelog.html":{}}}],["8.5.0",{"_index":5075,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":5127,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":6117,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["8020",{"_index":4393,"title":{},"body":{"changelog.html":{}}}],["8029",{"_index":4292,"title":{},"body":{"changelog.html":{}}}],["8030",{"_index":4384,"title":{},"body":{"changelog.html":{}}}],["8060",{"_index":4386,"title":{},"body":{"changelog.html":{}}}],["8077",{"_index":4448,"title":{},"body":{"changelog.html":{}}}],["8080",{"_index":6235,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["81",{"_index":3891,"title":{},"body":{"changelog.html":{}}}],["8101",{"_index":4425,"title":{},"body":{"changelog.html":{}}}],["8149",{"_index":4416,"title":{},"body":{"changelog.html":{}}}],["8179",{"_index":4389,"title":{},"body":{"changelog.html":{}}}],["8189",{"_index":4373,"title":{},"body":{"changelog.html":{}}}],["8198",{"_index":4402,"title":{},"body":{"changelog.html":{}}}],["8206",{"_index":4297,"title":{},"body":{"changelog.html":{}}}],["8209",{"_index":4409,"title":{},"body":{"changelog.html":{}}}],["8211",{"_index":4243,"title":{},"body":{"changelog.html":{}}}],["8213",{"_index":4308,"title":{},"body":{"changelog.html":{}}}],["8229",{"_index":4381,"title":{},"body":{"changelog.html":{}}}],["8230",{"_index":4395,"title":{},"body":{"changelog.html":{}}}],["8233",{"_index":4396,"title":{},"body":{"changelog.html":{}}}],["8235",{"_index":4413,"title":{},"body":{"changelog.html":{}}}],["8250",{"_index":4102,"title":{},"body":{"changelog.html":{}}}],["8260",{"_index":4394,"title":{},"body":{"changelog.html":{}}}],["8300",{"_index":4313,"title":{},"body":{"changelog.html":{}}}],["8303",{"_index":4351,"title":{},"body":{"changelog.html":{}}}],["8313",{"_index":4365,"title":{},"body":{"changelog.html":{}}}],["8315",{"_index":4371,"title":{},"body":{"changelog.html":{}}}],["8322",{"_index":4289,"title":{},"body":{"changelog.html":{}}}],["8329",{"_index":4397,"title":{},"body":{"changelog.html":{}}}],["8341",{"_index":4105,"title":{},"body":{"changelog.html":{}}}],["8358",{"_index":4353,"title":{},"body":{"changelog.html":{}}}],["8379",{"_index":4368,"title":{},"body":{"changelog.html":{}}}],["8380",{"_index":4303,"title":{},"body":{"changelog.html":{}}}],["8390",{"_index":4287,"title":{},"body":{"changelog.html":{}}}],["8408",{"_index":4107,"title":{},"body":{"changelog.html":{}}}],["8410",{"_index":4274,"title":{},"body":{"changelog.html":{}}}],["8412",{"_index":4355,"title":{},"body":{"changelog.html":{}}}],["8420",{"_index":4322,"title":{},"body":{"changelog.html":{}}}],["8440",{"_index":4133,"title":{},"body":{"changelog.html":{}}}],["8444",{"_index":4346,"title":{},"body":{"changelog.html":{}}}],["8448",{"_index":4020,"title":{},"body":{"changelog.html":{}}}],["8462",{"_index":4325,"title":{},"body":{"changelog.html":{}}}],["8477",{"_index":4254,"title":{},"body":{"changelog.html":{}}}],["8480",{"_index":4339,"title":{},"body":{"changelog.html":{}}}],["8482",{"_index":4290,"title":{},"body":{"changelog.html":{}}}],["8489",{"_index":4342,"title":{},"body":{"changelog.html":{}}}],["8499",{"_index":4327,"title":{},"body":{"changelog.html":{}}}],["8500",{"_index":4152,"title":{},"body":{"changelog.html":{}}}],["8503",{"_index":4334,"title":{},"body":{"changelog.html":{}}}],["8506",{"_index":4330,"title":{},"body":{"changelog.html":{}}}],["8512",{"_index":4315,"title":{},"body":{"changelog.html":{}}}],["8514",{"_index":4284,"title":{},"body":{"changelog.html":{}}}],["8534",{"_index":4234,"title":{},"body":{"changelog.html":{}}}],["8541",{"_index":4300,"title":{},"body":{"changelog.html":{}}}],["8571",{"_index":4318,"title":{},"body":{"changelog.html":{}}}],["8599",{"_index":4143,"title":{},"body":{"changelog.html":{}}}],["8634",{"_index":4271,"title":{},"body":{"changelog.html":{}}}],["8655",{"_index":4264,"title":{},"body":{"changelog.html":{}}}],["8657",{"_index":4268,"title":{},"body":{"changelog.html":{}}}],["8682",{"_index":4235,"title":{},"body":{"changelog.html":{}}}],["8691",{"_index":4206,"title":{},"body":{"changelog.html":{}}}],["8714",{"_index":4249,"title":{},"body":{"changelog.html":{}}}],["8728",{"_index":4165,"title":{},"body":{"changelog.html":{}}}],["8732",{"_index":4173,"title":{},"body":{"changelog.html":{}}}],["8748",{"_index":4180,"title":{},"body":{"changelog.html":{}}}],["8768",{"_index":4211,"title":{},"body":{"changelog.html":{}}}],["8770",{"_index":4245,"title":{},"body":{"changelog.html":{}}}],["8779",{"_index":4161,"title":{},"body":{"changelog.html":{}}}],["8782",{"_index":4240,"title":{},"body":{"changelog.html":{}}}],["8829",{"_index":4217,"title":{},"body":{"changelog.html":{}}}],["8836",{"_index":4214,"title":{},"body":{"changelog.html":{}}}],["8873",{"_index":4114,"title":{},"body":{"changelog.html":{}}}],["8880",{"_index":4177,"title":{},"body":{"changelog.html":{}}}],["8887",{"_index":4018,"title":{},"body":{"changelog.html":{}}}],["8898",{"_index":4087,"title":{},"body":{"changelog.html":{}}}],["8908",{"_index":4201,"title":{},"body":{"changelog.html":{}}}],["8909",{"_index":4186,"title":{},"body":{"changelog.html":{}}}],["8910",{"_index":4170,"title":{},"body":{"changelog.html":{}}}],["8917",{"_index":4192,"title":{},"body":{"changelog.html":{}}}],["8929",{"_index":4195,"title":{},"body":{"changelog.html":{}}}],["8933",{"_index":4163,"title":{},"body":{"changelog.html":{}}}],["8934",{"_index":4188,"title":{},"body":{"changelog.html":{}}}],["8959",{"_index":4006,"title":{},"body":{"changelog.html":{}}}],["8982",{"_index":4117,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":3827,"title":{},"body":{"changelog.html":{}}}],["9003",{"_index":4000,"title":{},"body":{"changelog.html":{}}}],["9004",{"_index":4080,"title":{},"body":{"changelog.html":{}}}],["9018",{"_index":3999,"title":{},"body":{"changelog.html":{}}}],["9029",{"_index":4077,"title":{},"body":{"changelog.html":{}}}],["9053",{"_index":3981,"title":{},"body":{"changelog.html":{}}}],["9055",{"_index":4135,"title":{},"body":{"changelog.html":{}}}],["9083",{"_index":3867,"title":{},"body":{"changelog.html":{}}}],["9085",{"_index":4130,"title":{},"body":{"changelog.html":{}}}],["9092",{"_index":3989,"title":{},"body":{"changelog.html":{}}}],["9093",{"_index":4003,"title":{},"body":{"changelog.html":{}}}],["9103",{"_index":4092,"title":{},"body":{"changelog.html":{}}}],["9130",{"_index":3929,"title":{},"body":{"changelog.html":{}}}],["9134",{"_index":4084,"title":{},"body":{"changelog.html":{}}}],["9139",{"_index":4072,"title":{},"body":{"changelog.html":{}}}],["9148",{"_index":4060,"title":{},"body":{"changelog.html":{}}}],["9150",{"_index":3965,"title":{},"body":{"changelog.html":{}}}],["9156",{"_index":4069,"title":{},"body":{"changelog.html":{}}}],["9157",{"_index":4008,"title":{},"body":{"changelog.html":{}}}],["9159",{"_index":4055,"title":{},"body":{"changelog.html":{}}}],["9170",{"_index":4062,"title":{},"body":{"changelog.html":{}}}],["9177",{"_index":3970,"title":{},"body":{"changelog.html":{}}}],["9190",{"_index":4016,"title":{},"body":{"changelog.html":{}}}],["9192",{"_index":3927,"title":{},"body":{"changelog.html":{}}}],["9197",{"_index":4036,"title":{},"body":{"changelog.html":{}}}],["9202",{"_index":4044,"title":{},"body":{"changelog.html":{}}}],["9211",{"_index":3966,"title":{},"body":{"changelog.html":{}}}],["9212",{"_index":3979,"title":{},"body":{"changelog.html":{}}}],["9213",{"_index":3961,"title":{},"body":{"changelog.html":{}}}],["9219",{"_index":3973,"title":{},"body":{"changelog.html":{}}}],["9229",{"_index":6228,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["9231",{"_index":3936,"title":{},"body":{"changelog.html":{}}}],["9233",{"_index":3955,"title":{},"body":{"changelog.html":{}}}],["9269",{"_index":3939,"title":{},"body":{"changelog.html":{}}}],["9431",{"_index":4048,"title":{},"body":{"changelog.html":{}}}],["99",{"_index":3022,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["999",{"_index":5283,"title":{},"body":{"index.html":{}}}],["9]{24",{"_index":892,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["_",{"_index":2046,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_${now.getdate()}_${now.gethours()}_${now.getminutes()}_${now.getseconds",{"_index":1520,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["_.snakecase(exceptionname).touppercase",{"_index":2064,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.snakecase(type).touppercase",{"_index":2076,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.spec.ts",{"_index":6547,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_.startcase(exceptionname",{"_index":2065,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.startcase(title",{"_index":2078,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.test.[ts|js",{"_index":6241,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["_id",{"_index":344,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"injectables/FeathersAuthProvider.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["_id.$oid",{"_index":1589,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["_operator",{"_index":861,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["_queries",{"_index":862,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["_timeout",{"_index":3547,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["a.m",{"_index":5301,"title":{},"body":{"index.html":{}}}],["aaa",{"_index":6778,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["ability",{"_index":5664,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["above",{"_index":5299,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["absence",{"_index":5552,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":1503,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"license.html":{}}}],["abstract",{"_index":497,"title":{},"body":{"classes/BaseFile.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"injectables/DashboardRepo.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/PaginationResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["abstractbootstrapconsole",{"_index":3533,"title":{},"body":{"classes/TestBootstrapConsole.html":{}}}],["abstraction",{"_index":6473,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["acacac",{"_index":712,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/variables.html":{}}}],["accept",{"_index":5738,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":5737,"title":{},"body":{"license.html":{}}}],["accepted",{"_index":5942,"title":{},"body":{"todo.html":{}}}],["accepts",{"_index":421,"title":{},"body":{"classes/BaseFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["access",{"_index":51,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"controllers/DelayController.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"controllers/ServerController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["access,@typescript",{"_index":61,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["accessable",{"_index":6534,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessed",{"_index":790,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"index.html":{}}}],["accessible",{"_index":4573,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessing",{"_index":4583,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accesskeyid",{"_index":1893,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{},"miscellaneous/variables.html":{}}}],["accessors",{"_index":1412,"title":{},"body":{"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"classes/Scope.html":{},"injectables/TimeoutInterceptor.html":{}}}],["accompanied",{"_index":5591,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":5902,"title":{},"body":{"license.html":{}}}],["accomplish",{"_index":5378,"title":{},"body":{"license.html":{}}}],["accord",{"_index":5551,"title":{},"body":{"license.html":{}}}],["according",{"_index":4099,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["account",{"_index":2178,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"injectables/JwtValidationAdapter.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accountid",{"_index":2176,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accounts",{"_index":4622,"title":{},"body":{"changelog.html":{}}}],["achieve",{"_index":5905,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["acknowledges",{"_index":5495,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":5785,"title":{},"body":{"license.html":{}}}],["act",{"_index":6777,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["action",{"_index":1865,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":4067,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["activate",{"_index":5040,"title":{},"body":{"changelog.html":{}}}],["activation",{"_index":4822,"title":{},"body":{"changelog.html":{}}}],["active",{"_index":2486,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["activities",{"_index":5421,"title":{},"body":{"license.html":{}}}],["activity",{"_index":5824,"title":{},"body":{"license.html":{}}}],["actors",{"_index":6646,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actual",{"_index":5806,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actually",{"_index":5645,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adapt",{"_index":5400,"title":{},"body":{"license.html":{}}}],["adapter",{"_index":6341,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["add",{"_index":2389,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"injectables/LessonRepo.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["addbearerauth",{"_index":6139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["added",{"_index":1585,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/Logger.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["addgroupmoderator(groupname",{"_index":100,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["adding",{"_index":414,"title":{},"body":{"classes/BaseFactory.html":{},"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["additional",{"_index":1777,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/ErrorResponse.html":{},"classes/GlobalValidationPipe.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionally",{"_index":3463,"title":{},"body":{"classes/TaskScope.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionaly",{"_index":6221,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["addquery",{"_index":864,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["addquery(query",{"_index":870,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["addreferences",{"_index":2139,"title":{},"body":{"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["addreferences(anotherreference",{"_index":1034,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["address",{"_index":5857,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["address/username",{"_index":4834,"title":{},"body":{"changelog.html":{}}}],["addressed",{"_index":5396,"title":{},"body":{"license.html":{}}}],["addresses",{"_index":3735,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adds",{"_index":1482,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["addtokentowhitelist",{"_index":2504,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["addtokentowhitelist(redisidentifier",{"_index":2509,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["addtowhitelist",{"_index":2489,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["addtowhitelist(accountid",{"_index":2491,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["adduser",{"_index":4166,"title":{},"body":{"changelog.html":{}}}],["adhere",{"_index":6671,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["adheres",{"_index":3653,"title":{},"body":{"changelog.html":{}}}],["adjusted",{"_index":4278,"title":{},"body":{"changelog.html":{}}}],["admin",{"_index":3938,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adminid",{"_index":27,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{}}}],["adminidandtoken",{"_index":1,"title":{"interfaces/AdminIdAndToken.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["adminidandtoken.id",{"_index":132,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["adminidandtoken.token",{"_index":131,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["administrate",{"_index":5037,"title":{},"body":{"changelog.html":{}}}],["administration",{"_index":3870,"title":{},"body":{"changelog.html":{}}}],["adminpassword",{"_index":26,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{}}}],["admins",{"_index":3972,"title":{},"body":{"changelog.html":{}}}],["admintables",{"_index":4743,"title":{},"body":{"changelog.html":{}}}],["admintoken",{"_index":28,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{}}}],["adminuser",{"_index":25,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{}}}],["adminusers",{"_index":4172,"title":{},"body":{"changelog.html":{}}}],["adopted",{"_index":5528,"title":{},"body":{"license.html":{}}}],["adversely",{"_index":5670,"title":{},"body":{"license.html":{}}}],["advised",{"_index":5891,"title":{},"body":{"license.html":{}}}],["affects",{"_index":5671,"title":{},"body":{"license.html":{}}}],["affero",{"_index":5308,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":5766,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":5492,"title":{},"body":{"license.html":{}}}],["afterall",{"_index":6843,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterall(async",{"_index":6845,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterbuild",{"_index":397,"title":{},"body":{"classes/BaseFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["afterbuild(afterbuildfn",{"_index":410,"title":{},"body":{"classes/BaseFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["afterbuildfn",{"_index":419,"title":{},"body":{"classes/BaseFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["afterduedateornone",{"_index":3407,"title":{},"body":{"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{}}}],["afterduedateornone(duedate",{"_index":3448,"title":{},"body":{"classes/TaskScope.html":{}}}],["aftereach",{"_index":6772,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["aftereach(async",{"_index":6891,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterwards",{"_index":6770,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["again",{"_index":4814,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application.html":{}}}],["against",{"_index":5542,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["age",{"_index":6454,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aggregate",{"_index":5578,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["aggregated",{"_index":4808,"title":{},"body":{"changelog.html":{}}}],["aggregates",{"_index":6359,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aggregations",{"_index":4847,"title":{},"body":{"changelog.html":{}}}],["agile",{"_index":6338,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["agnostic",{"_index":6536,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["ago",{"_index":1643,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["agpl",{"_index":5921,"title":{},"body":{"license.html":{}}}],["agree",{"_index":5841,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":5879,"title":{},"body":{"license.html":{}}}],["agreeing",{"_index":6643,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["agreement",{"_index":5794,"title":{},"body":{"license.html":{}}}],["aims",{"_index":6285,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ajv",{"_index":5074,"title":{},"body":{"dependencies.html":{}}}],["alert",{"_index":4198,"title":{},"body":{"changelog.html":{}}}],["alerts",{"_index":4555,"title":{},"body":{"changelog.html":{}}}],["algorithm",{"_index":2447,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["aliases",{"_index":5990,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aligned",{"_index":6335,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["alive",{"_index":4713,"title":{},"body":{"changelog.html":{}}}],["all_entities",{"_index":2609,"title":{},"body":{"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["allcollections",{"_index":6093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allcollections.map(async",{"_index":6095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allcollectionswithfilepaths",{"_index":1532,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["allcollectionswithfilepaths.filter",{"_index":1542,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["allcollectionswithfilepaths.map((file",{"_index":1548,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["alleging",{"_index":5773,"title":{},"body":{"license.html":{}}}],["allow",{"_index":3945,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["allowed",{"_index":3656,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["allows",{"_index":2680,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["alone",{"_index":6768,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["along",{"_index":5554,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["already",{"_index":605,"title":{},"body":{"classes/BusinessError.html":{},"injectables/FileSystemAdapter.html":{},"injectables/NewsRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["alternate",{"_index":5363,"title":{},"body":{"license.html":{}}}],["alternative",{"_index":5603,"title":{},"body":{"license.html":{}}}],["always",{"_index":6360,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["amount",{"_index":4176,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["amp",{"_index":5235,"title":{},"body":{"miscellaneous/functions.html":{}}}],["amqp",{"_index":5076,"title":{},"body":{"dependencies.html":{}}}],["amqpconnection",{"_index":2590,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["amqplib",{"_index":5079,"title":{},"body":{"dependencies.html":{}}}],["analog",{"_index":5032,"title":{},"body":{"changelog.html":{}}}],["analysis",{"_index":6256,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["analytics",{"_index":5192,"title":{},"body":{"dependencies.html":{}}}],["ancillary",{"_index":5739,"title":{},"body":{"license.html":{}}}],["and/opr",{"_index":6790,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["and/or",{"_index":5356,"title":{},"body":{"license.html":{}}}],["annotations",{"_index":6556,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anonymous",{"_index":6539,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["another",{"_index":6331,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anothernewsid",{"_index":6867,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["anotherreference",{"_index":2150,"title":{},"body":{"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["ansible",{"_index":3776,"title":{},"body":{"changelog.html":{}}}],["anti",{"_index":5516,"title":{},"body":{"license.html":{}}}],["antivirus",{"_index":4597,"title":{},"body":{"changelog.html":{}}}],["anymore",{"_index":3940,"title":{},"body":{"changelog.html":{}}}],["anyone",{"_index":5564,"title":{},"body":{"license.html":{}}}],["anything",{"_index":5408,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["anywhere",{"_index":6604,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["api",{"_index":206,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/DelayController.html":{},"classes/GlobalErrorFilter.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["api/v1",{"_index":5253,"title":{},"body":{"index.html":{}}}],["api/v3",{"_index":5254,"title":{},"body":{"index.html":{}}}],["api/v3/news",{"_index":5258,"title":{},"body":{"index.html":{}}}],["api_validation_error",{"_index":205,"title":{},"body":{"classes/ApiValidationError.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["apibearerauth",{"_index":6081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibody",{"_index":934,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{}}}],["apiproperty",{"_index":901,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/GlobalValidationPipe.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationResponse.html":{},"classes/PatchGroupParams.html":{},"classes/ResolvedUser.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/UserInfoResponse.html":{},"miscellaneous/variables.html":{}}}],["apiproperty()@decodehtmlentities",{"_index":3439,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apiproperty({description",{"_index":1139,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{}}}],["apiproperty({enum",{"_index":2915,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apiproperty({pattern",{"_index":2913,"title":{},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["apiproperty({type",{"_index":1142,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/NewsListResponse.html":{},"classes/PaginationResponse.html":{},"classes/TaskListResponse.html":{}}}],["apipropertyoptional",{"_index":902,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoResponse.html":{}}}],["apipropertyoptional()@decodehtmlentities",{"_index":3432,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apipropertyoptional({description",{"_index":2910,"title":{},"body":{"classes/NewsResponse.html":{},"classes/UserInfoResponse.html":{}}}],["apipropertyoptional({type",{"_index":2908,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apis",{"_index":6307,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["apitags",{"_index":933,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}}}],["apitags('dashboard",{"_index":943,"title":{},"body":{"controllers/DashboardController.html":{}}}],["apitags('news",{"_index":2733,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["apitags('task",{"_index":3342,"title":{},"body":{"controllers/TaskController.html":{}}}],["apitags('user",{"_index":3589,"title":{},"body":{"controllers/UserController.html":{}}}],["apivalidationerror",{"_index":173,"title":{"classes/ApiValidationError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["apivalidationerror(errors",{"_index":2138,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["apivalidationerror.validationerrors.map((validationerror",{"_index":228,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["apivalidationerrorresponse",{"_index":212,"title":{"classes/ApiValidationErrorResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{}}}],["apivalidationerrorresponse(error",{"_index":2068,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["app",{"_index":2084,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["app.close",{"_index":6893,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["app.init",{"_index":6888,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["app_filter",{"_index":660,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["app_guard",{"_index":659,"title":{},"body":{"modules/CoreModule.html":{}}}],["app_interceptor",{"_index":657,"title":{},"body":{"modules/CoreModule.html":{},"controllers/DelayController.html":{},"modules/InterceptorModule.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["app_pipe",{"_index":658,"title":{},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{}}}],["appear",{"_index":4319,"title":{},"body":{"changelog.html":{}}}],["appearing",{"_index":4988,"title":{},"body":{"changelog.html":{}}}],["append",{"_index":5988,"title":{},"body":{"todo.html":{}}}],["appendedattachment",{"_index":234,"title":{"interfaces/AppendedAttachment.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["applicable",{"_index":5413,"title":{},"body":{"license.html":{}}}],["applicaiton",{"_index":6230,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["application",{"_index":590,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"classes/BusinessError.html":{},"modules/CoreModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["applications",{"_index":5243,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["applied",{"_index":1471,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["applies",{"_index":5862,"title":{},"body":{"license.html":{}}}],["apply",{"_index":1538,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/InterceptorModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["applydecorators(...decorators",{"_index":6082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applying",{"_index":6896,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["approach",{"_index":6321,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriate",{"_index":5269,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriately",{"_index":5547,"title":{},"body":{"license.html":{}}}],["approximates",{"_index":5898,"title":{},"body":{"license.html":{}}}],["apps",{"_index":3942,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["apps/**/*.(t|j)s",{"_index":6112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../all",{"_index":6024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../auth.decorator.ts",{"_index":6006,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../bootstrap.console.ts",{"_index":6048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../clean",{"_index":6028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../console.ts",{"_index":6026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../constants.ts",{"_index":6051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../counted.ts",{"_index":5993,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../course.entity.ts",{"_index":6042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../course.factory.ts",{"_index":6033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../coursegroup.factory.ts",{"_index":6035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../create",{"_index":6039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../dashboard.entity.ts",{"_index":5994,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../dashboard.repo.ts",{"_index":6050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../database.config.ts",{"_index":6073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../decode",{"_index":5214,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../empty",{"_index":6045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../entity",{"_index":5996,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../feathers",{"_index":5998,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../file",{"_index":6075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../file.factory.ts",{"_index":6044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../filestorage.adapter.ts",{"_index":5213,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../find",{"_index":5203,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../global",{"_index":5210,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../jwt",{"_index":6074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../lesson.factory.ts",{"_index":6053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../mail.module.ts",{"_index":6002,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":5207,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../management.ts",{"_index":5208,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../mongo",{"_index":6041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../news",{"_index":6068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../news.factory.ts",{"_index":6037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../news.response.ts",{"_index":6004,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../news.types.ts",{"_index":5202,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../news.uc.ts",{"_index":6001,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../resolveduser.dto.ts",{"_index":6003,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../rocket",{"_index":5999,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../role.factory.ts",{"_index":6058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../school.factory.ts",{"_index":6060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../scope.ts",{"_index":5995,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../server",{"_index":6055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../setup",{"_index":6064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../storageprovider.factory.ts",{"_index":6066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../string",{"_index":5216,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../submission.factory.ts",{"_index":6067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../swagger.ts",{"_index":6031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../task.authorization.service.ts",{"_index":5205,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../task.entity.ts",{"_index":6007,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../task.factory.ts",{"_index":6069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../task.uc.ts",{"_index":5204,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../team.factory.ts",{"_index":6071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../types.ts",{"_index":5992,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../user.factory.ts",{"_index":6076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../user.ts",{"_index":6000,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../value",{"_index":6009,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server",{"_index":6216,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["apps/server/doc",{"_index":6268,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/path",{"_index":6120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src",{"_index":6273,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/src/$1",{"_index":6128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/config/database.config.ts",{"_index":2024,"title":{},"body":{"interfaces/GlobalConstants.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/console/console.module.ts",{"_index":3169,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["apps/server/src/console/console.ts",{"_index":6089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/console/server.console.ts",{"_index":3155,"title":{},"body":{"classes/ServerConsole.html":{}}}],["apps/server/src/console/server.console.ts:11",{"_index":3159,"title":{},"body":{"classes/ServerConsole.html":{}}}],["apps/server/src/console/server.console.ts:17",{"_index":3162,"title":{},"body":{"classes/ServerConsole.html":{}}}],["apps/server/src/console/server.console.ts:6",{"_index":3157,"title":{},"body":{"classes/ServerConsole.html":{}}}],["apps/server/src/console/test/bootstrap.console.ts",{"_index":3532,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/console/test/bootstrap.console.ts:5",{"_index":3534,"title":{},"body":{"classes/TestBootstrapConsole.html":{}}}],["apps/server/src/core/core.module.ts",{"_index":645,"title":{},"body":{"modules/CoreModule.html":{}}}],["apps/server/src/core/error/dto/api",{"_index":213,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["apps/server/src/core/error/dto/error.response.ts",{"_index":1768,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["apps/server/src/core/error/dto/error.response.ts:6",{"_index":1770,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["apps/server/src/core/error/dto/validation",{"_index":3638,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["apps/server/src/core/error/error.module.ts",{"_index":1761,"title":{},"body":{"modules/ErrorModule.html":{}}}],["apps/server/src/core/error/filter/global",{"_index":2032,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/error/interface/error",{"_index":2191,"title":{},"body":{"interfaces/IErrorType.html":{}}}],["apps/server/src/core/error/interface/feathers",{"_index":1820,"title":{},"body":{"interfaces/FeathersError.html":{}}}],["apps/server/src/core/error/server",{"_index":6173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/core/interceptor/interceptor.module.ts",{"_index":2410,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["apps/server/src/core/logger/logger.interface.ts",{"_index":2218,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:2",{"_index":2229,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:3",{"_index":2227,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:4",{"_index":2233,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:5",{"_index":2224,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:6",{"_index":2231,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.module.ts",{"_index":2563,"title":{},"body":{"modules/LoggerModule.html":{}}}],["apps/server/src/core/logger/logger.service.ts",{"_index":2542,"title":{},"body":{"injectables/Logger.html":{}}}],["apps/server/src/core/validation/pipe/global",{"_index":2114,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["apps/server/src/core/validation/validation.module.ts",{"_index":3643,"title":{},"body":{"modules/ValidationModule.html":{}}}],["apps/server/src/main.ts",{"_index":5218,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/server/src/management.ts",{"_index":5219,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/server/src/modules/authentication/auth.module.ts",{"_index":269,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/server/src/modules/authentication/constants.ts",{"_index":2424,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/decorator/auth.decorator.ts",{"_index":6020,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/guard/jwt",{"_index":2420,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["apps/server/src/modules/authentication/interface/jwt",{"_index":2452,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt",{"_index":2487,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts",{"_index":2455,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:10",{"_index":2458,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:20",{"_index":2460,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authorization/authorization.module.ts",{"_index":291,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts",{"_index":298,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:16",{"_index":316,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:32",{"_index":310,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:52",{"_index":319,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:6",{"_index":303,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/feathers",{"_index":1780,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["apps/server/src/modules/files/files.module.ts",{"_index":1987,"title":{},"body":{"modules/FilesModule.html":{}}}],["apps/server/src/modules/files/job/delete",{"_index":1631,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["apps/server/src/modules/files/repo/files.repo.ts",{"_index":1992,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["apps/server/src/modules/files/repo/files.repo.ts:13",{"_index":2010,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["apps/server/src/modules/files/repo/files.repo.ts:15",{"_index":1999,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["apps/server/src/modules/files/repo/files.repo.ts:23",{"_index":1997,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["apps/server/src/modules/files/repo/files.repo.ts:8",{"_index":1996,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["apps/server/src/modules/files/repo/storageprovider.repo.ts",{"_index":3214,"title":{},"body":{"injectables/StorageProviderRepo.html":{}}}],["apps/server/src/modules/files/repo/storageprovider.repo.ts:7",{"_index":3215,"title":{},"body":{"injectables/StorageProviderRepo.html":{}}}],["apps/server/src/modules/files/uc/delete",{"_index":1656,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["apps/server/src/modules/learnroom/controller/dashboard.controller.ts",{"_index":913,"title":{},"body":{"controllers/DashboardController.html":{}}}],["apps/server/src/modules/learnroom/controller/dashboard.controller.ts:17",{"_index":921,"title":{},"body":{"controllers/DashboardController.html":{}}}],["apps/server/src/modules/learnroom/controller/dashboard.controller.ts:25",{"_index":925,"title":{},"body":{"controllers/DashboardController.html":{}}}],["apps/server/src/modules/learnroom/controller/dashboard.controller.ts:36",{"_index":931,"title":{},"body":{"controllers/DashboardController.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts",{"_index":1135,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:13",{"_index":1155,"title":{},"body":{"classes/DashboardGridSubElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:18",{"_index":1154,"title":{},"body":{"classes/DashboardGridSubElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:23",{"_index":1152,"title":{},"body":{"classes/DashboardGridSubElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:31",{"_index":1145,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:36",{"_index":1148,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:41",{"_index":1147,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:46",{"_index":1140,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:51",{"_index":1149,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:56",{"_index":1150,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:62",{"_index":1144,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:70",{"_index":1311,"title":{},"body":{"classes/DashboardResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:76",{"_index":1310,"title":{},"body":{"classes/DashboardResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:8",{"_index":1153,"title":{},"body":{"classes/DashboardGridSubElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/moveposition.params.ts",{"_index":2670,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/moveposition.params.ts:13",{"_index":2687,"title":{},"body":{"classes/MoveElementPosition.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/moveposition.params.ts:18",{"_index":2688,"title":{},"body":{"classes/MoveElementPosition.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/moveposition.params.ts:24",{"_index":2685,"title":{},"body":{"classes/MoveElementPosition.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/moveposition.params.ts:30",{"_index":2673,"title":{},"body":{"classes/MoveElementParams.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/moveposition.params.ts:34",{"_index":2674,"title":{},"body":{"classes/MoveElementParams.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/patchgroup.params.ts",{"_index":3049,"title":{},"body":{"classes/PatchGroupParams.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/patchgroup.params.ts:12",{"_index":3051,"title":{},"body":{"classes/PatchGroupParams.html":{}}}],["apps/server/src/modules/learnroom/learnroom.module.ts",{"_index":2513,"title":{},"body":{"modules/LearnroomModule.html":{}}}],["apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts",{"_index":1156,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts:5",{"_index":1159,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["apps/server/src/modules/learnroom/uc/dashboard.uc.ts",{"_index":1312,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/learnroom/uc/dashboard.uc.ts:14",{"_index":1319,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/learnroom/uc/dashboard.uc.ts:26",{"_index":1321,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/learnroom/uc/dashboard.uc.ts:6",{"_index":1316,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/learnroom/uc/dashboard.uc.ts:9",{"_index":1317,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/management/console/database",{"_index":1331,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["apps/server/src/modules/management/controller/database",{"_index":1371,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["apps/server/src/modules/management/converter/bson.converter.ts",{"_index":560,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["apps/server/src/modules/management/converter/bson.converter.ts:11",{"_index":576,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["apps/server/src/modules/management/converter/bson.converter.ts:21",{"_index":564,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["apps/server/src/modules/management/management.module.ts",{"_index":2604,"title":{},"body":{"modules/ManagementModule.html":{}}}],["apps/server/src/modules/management/uc/database",{"_index":1453,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["apps/server/src/modules/news/controller/dto/create",{"_index":874,"title":{},"body":{"classes/CreateNewsParams.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news",{"_index":2753,"title":{},"body":{"classes/NewsFilterQuery.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts",{"_index":2770,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:17",{"_index":2905,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:22",{"_index":2917,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:27",{"_index":2901,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:32",{"_index":2904,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:39",{"_index":2909,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:44",{"_index":2911,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:51",{"_index":2916,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:57",{"_index":2914,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:62",{"_index":2912,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:67",{"_index":2907,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:72",{"_index":2903,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:77",{"_index":2919,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:82",{"_index":2902,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:87",{"_index":2918,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:92",{"_index":2906,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:95",{"_index":2774,"title":{},"body":{"classes/NewsListResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/school",{"_index":3134,"title":{},"body":{"classes/SchoolInfoResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/target",{"_index":3285,"title":{},"body":{"classes/TargetInfoResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/update",{"_index":3569,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["apps/server/src/modules/news/controller/dto/user",{"_index":3602,"title":{},"body":{"classes/UserInfoResponse.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts",{"_index":2703,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:21",{"_index":2708,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:36",{"_index":2717,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:57",{"_index":2721,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:71",{"_index":2727,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:85",{"_index":2711,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/team",{"_index":3519,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts",{"_index":2791,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:30",{"_index":2798,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:44",{"_index":2796,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:57",{"_index":2802,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:8",{"_index":2800,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/school",{"_index":3126,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["apps/server/src/modules/news/mapper/target",{"_index":3280,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["apps/server/src/modules/news/mapper/user",{"_index":3601,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["apps/server/src/modules/news/news.module.ts",{"_index":2851,"title":{},"body":{"modules/NewsModule.html":{}}}],["apps/server/src/modules/news/repo/news",{"_index":2920,"title":{},"body":{"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts",{"_index":2867,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:11",{"_index":2879,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:19",{"_index":2872,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:32",{"_index":2878,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:39",{"_index":2874,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts",{"_index":2939,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:120",{"_index":2969,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:144",{"_index":2950,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:155",{"_index":2961,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:175",{"_index":2967,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:193",{"_index":2960,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:203",{"_index":2963,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:22",{"_index":2946,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:35",{"_index":2948,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:65",{"_index":2952,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:96",{"_index":2958,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/rocketchat/rocket",{"_index":6,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts",{"_index":3356,"title":{},"body":{"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:10",{"_index":3440,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:13",{"_index":3431,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:16",{"_index":3437,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:20",{"_index":3433,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:24",{"_index":3435,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:27",{"_index":3436,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:30",{"_index":3438,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:33",{"_index":3434,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:36",{"_index":3442,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:39",{"_index":3441,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:48",{"_index":3358,"title":{},"body":{"classes/TaskListResponse.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts",{"_index":3334,"title":{},"body":{"controllers/TaskController.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts:19",{"_index":3336,"title":{},"body":{"controllers/TaskController.html":{}}}],["apps/server/src/modules/task/mapper/task.mapper.ts",{"_index":3363,"title":{},"body":{"classes/TaskMapper.html":{}}}],["apps/server/src/modules/task/mapper/task.mapper.ts:5",{"_index":3365,"title":{},"body":{"classes/TaskMapper.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts",{"_index":3252,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts:10",{"_index":3255,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts:13",{"_index":3259,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts:21",{"_index":3261,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts:26",{"_index":3257,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/modules/task/repo/task",{"_index":3443,"title":{},"body":{"classes/TaskScope.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts",{"_index":3395,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:10",{"_index":3398,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:24",{"_index":3400,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:67",{"_index":3404,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/task.module.ts",{"_index":3392,"title":{},"body":{"modules/TaskModule.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts",{"_index":3313,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"miscellaneous/enumerations.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts:11",{"_index":3316,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts:17",{"_index":3319,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts",{"_index":3467,"title":{},"body":{"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:13",{"_index":3471,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:21",{"_index":3472,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:35",{"_index":3473,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:60",{"_index":3474,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:85",{"_index":3478,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:91",{"_index":3475,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts",{"_index":3052,"title":{},"body":{"classes/ResolvedUser.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:11",{"_index":3056,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:14",{"_index":3055,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:17",{"_index":3053,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:20",{"_index":3060,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:23",{"_index":3058,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:26",{"_index":3057,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:29",{"_index":3059,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:8",{"_index":3054,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/user.controller.ts",{"_index":3583,"title":{},"body":{"controllers/UserController.html":{}}}],["apps/server/src/modules/user/controller/user.controller.ts:17",{"_index":3586,"title":{},"body":{"controllers/UserController.html":{}}}],["apps/server/src/modules/user/mapper/resolveduser.mapper.ts",{"_index":3062,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["apps/server/src/modules/user/mapper/resolveduser.mapper.ts:5",{"_index":3064,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts",{"_index":3094,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:11",{"_index":3103,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:16",{"_index":3101,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:21",{"_index":3105,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:7",{"_index":3099,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/user.repo.ts",{"_index":3611,"title":{},"body":{"injectables/UserRepo.html":{}}}],["apps/server/src/modules/user/repo/user.repo.ts:6",{"_index":3612,"title":{},"body":{"injectables/UserRepo.html":{}}}],["apps/server/src/modules/user/repo/user.repo.ts:9",{"_index":3613,"title":{},"body":{"injectables/UserRepo.html":{}}}],["apps/server/src/modules/user/uc/role.uc.ts",{"_index":3111,"title":{},"body":{"injectables/RoleUC.html":{}}}],["apps/server/src/modules/user/uc/role.uc.ts:10",{"_index":3116,"title":{},"body":{"injectables/RoleUC.html":{}}}],["apps/server/src/modules/user/uc/role.uc.ts:7",{"_index":3114,"title":{},"body":{"injectables/RoleUC.html":{}}}],["apps/server/src/modules/user/uc/user.uc.ts",{"_index":3615,"title":{},"body":{"injectables/UserUC.html":{}}}],["apps/server/src/modules/user/uc/user.uc.ts:10",{"_index":3618,"title":{},"body":{"injectables/UserUC.html":{}}}],["apps/server/src/modules/user/uc/user.uc.ts:13",{"_index":3620,"title":{},"body":{"injectables/UserUC.html":{}}}],["apps/server/src/modules/user/user.facade.ts",{"_index":3593,"title":{},"body":{"injectables/UserFacade.html":{}}}],["apps/server/src/modules/user/user.facade.ts:11",{"_index":3596,"title":{},"body":{"injectables/UserFacade.html":{}}}],["apps/server/src/modules/user/user.facade.ts:14",{"_index":3598,"title":{},"body":{"injectables/UserFacade.html":{}}}],["apps/server/src/modules/user/user.module.ts",{"_index":3609,"title":{},"body":{"modules/UserModule.html":{}}}],["apps/server/src/repositories/learnroom/course.repo.ts",{"_index":838,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["apps/server/src/repositories/learnroom/course.repo.ts:22",{"_index":840,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/repositories/learnroom/course.repo.ts:26",{"_index":842,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/repositories/learnroom/course.repo.ts:33",{"_index":844,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/repositories/learnroom/course.repo.ts:39",{"_index":846,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/repositories/learnroom/course.repo.ts:8",{"_index":869,"title":{},"body":{"classes/CourseScope.html":{}}}],["apps/server/src/repositories/learnroom/coursegroup.repo.ts",{"_index":758,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["apps/server/src/repositories/learnroom/coursegroup.repo.ts:10",{"_index":762,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["apps/server/src/repositories/learnroom/coursegroup.repo.ts:7",{"_index":760,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts",{"_index":1096,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:14",{"_index":1605,"title":{},"body":{"classes/DefaultGridReferenceModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:17",{"_index":1603,"title":{},"body":{"classes/DefaultGridReferenceModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:21",{"_index":1604,"title":{},"body":{"classes/DefaultGridReferenceModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:25",{"_index":1099,"title":{},"body":{"classes/DashboardGridElementModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:35",{"_index":1106,"title":{},"body":{"classes/DashboardGridElementModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:38",{"_index":1107,"title":{},"body":{"classes/DashboardGridElementModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:41",{"_index":1108,"title":{},"body":{"classes/DashboardGridElementModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:45",{"_index":1105,"title":{},"body":{"classes/DashboardGridElementModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:48",{"_index":1103,"title":{},"body":{"classes/DashboardGridElementModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:52",{"_index":1181,"title":{},"body":{"classes/DashboardModelEntity.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:6",{"_index":1602,"title":{},"body":{"classes/DefaultGridReferenceModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:60",{"_index":1182,"title":{},"body":{"classes/DashboardModelEntity.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.mapper.ts",{"_index":1184,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:14",{"_index":1192,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:17",{"_index":1205,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:21",{"_index":1201,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:33",{"_index":1196,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:45",{"_index":1207,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:58",{"_index":1194,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:66",{"_index":1203,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:88",{"_index":1199,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts",{"_index":1269,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:53",{"_index":2189,"title":{},"body":{"interfaces/IDashboardRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:54",{"_index":2188,"title":{},"body":{"interfaces/IDashboardRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:55",{"_index":2190,"title":{},"body":{"interfaces/IDashboardRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:59",{"_index":1273,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:63",{"_index":1277,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:69",{"_index":1278,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:75",{"_index":1275,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:81",{"_index":1276,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/server.controller.ts",{"_index":3176,"title":{},"body":{"controllers/ServerController.html":{}}}],["apps/server/src/server.controller.ts:7",{"_index":3177,"title":{},"body":{"controllers/ServerController.html":{}}}],["apps/server/src/server.module.ts",{"_index":3182,"title":{},"body":{"modules/ServerModule.html":{}}}],["apps/server/src/shared/$1",{"_index":6127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/error/api",{"_index":175,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts",{"_index":583,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:10",{"_index":596,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:12",{"_index":599,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:14",{"_index":598,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:16",{"_index":597,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:19",{"_index":594,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:34",{"_index":600,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:38",{"_index":601,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/validation.error.ts",{"_index":3634,"title":{},"body":{"classes/ValidationError.html":{}}}],["apps/server/src/shared/common/error/validation.error.ts:4",{"_index":3636,"title":{},"body":{"classes/ValidationError.html":{}}}],["apps/server/src/shared/common/interceptor/constants.ts",{"_index":6176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/interceptor/duration",{"_index":1692,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/test/create",{"_index":1607,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts",{"_index":3542,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:12",{"_index":3552,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:14",{"_index":3550,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:17",{"_index":3549,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:29",{"_index":3554,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:33",{"_index":3556,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts",{"_index":3016,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:14",{"_index":3023,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:8",{"_index":3026,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts",{"_index":3031,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:11",{"_index":3034,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:14",{"_index":3037,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:17",{"_index":3036,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:20",{"_index":3035,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:3",{"_index":3033,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/pipe/parse",{"_index":3041,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["apps/server/src/shared/controller/swagger.ts",{"_index":6133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/controller/transformer/decode",{"_index":5220,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/server/src/shared/controller/transformer/string",{"_index":5239,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/server/src/shared/domain/entity/all",{"_index":6077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts",{"_index":343,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:10",{"_index":350,"title":{},"body":{"classes/BaseEntity.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:19",{"_index":381,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:22",{"_index":385,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:25",{"_index":384,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:28",{"_index":388,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:7",{"_index":348,"title":{},"body":{"classes/BaseEntity.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts",{"_index":666,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:32",{"_index":680,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:35",{"_index":678,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:38",{"_index":683,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:42",{"_index":688,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:45",{"_index":693,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:48",{"_index":691,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:52",{"_index":675,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:65",{"_index":694,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:69",{"_index":695,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/coursegroup.entity.ts",{"_index":744,"title":{},"body":{"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{}}}],["apps/server/src/shared/domain/entity/coursegroup.entity.ts:15",{"_index":750,"title":{},"body":{"classes/CourseGroup.html":{}}}],["apps/server/src/shared/domain/entity/coursegroup.entity.ts:18",{"_index":747,"title":{},"body":{"classes/CourseGroup.html":{}}}],["apps/server/src/shared/domain/entity/coursegroup.entity.ts:26",{"_index":751,"title":{},"body":{"classes/CourseGroup.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts",{"_index":961,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:101",{"_index":2156,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:105",{"_index":2157,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:109",{"_index":2160,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:119",{"_index":2149,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:123",{"_index":2155,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:143",{"_index":2159,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:147",{"_index":2161,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:166",{"_index":979,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:168",{"_index":976,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:170",{"_index":980,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:172",{"_index":978,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:174",{"_index":993,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:181",{"_index":1001,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:185",{"_index":975,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:198",{"_index":988,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:20",{"_index":1599,"title":{},"body":{"classes/DefaultGridReference.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:202",{"_index":986,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:214",{"_index":983,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:22",{"_index":1600,"title":{},"body":{"classes/DefaultGridReference.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:222",{"_index":999,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:232",{"_index":991,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:24",{"_index":1598,"title":{},"body":{"classes/DefaultGridReference.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:244",{"_index":1003,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:253",{"_index":996,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:32",{"_index":1601,"title":{},"body":{"classes/DefaultGridReference.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:43",{"_index":2206,"title":{},"body":{"interfaces/IGridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:49",{"_index":2207,"title":{},"body":{"interfaces/IGridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:51",{"_index":2208,"title":{},"body":{"interfaces/IGridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:53",{"_index":2205,"title":{},"body":{"interfaces/IGridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:55",{"_index":2204,"title":{},"body":{"interfaces/IGridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:57",{"_index":2209,"title":{},"body":{"interfaces/IGridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:69",{"_index":2147,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:71",{"_index":2146,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:79",{"_index":2153,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:83",{"_index":2152,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:87",{"_index":2154,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:91",{"_index":2151,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:95",{"_index":2148,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:97",{"_index":2158,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts",{"_index":474,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts:17",{"_index":479,"title":{},"body":{"classes/BaseFile.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts:20",{"_index":481,"title":{},"body":{"classes/BaseFile.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts:23",{"_index":478,"title":{},"body":{"classes/BaseFile.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts:32",{"_index":1874,"title":{},"body":{"classes/File.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts:35",{"_index":1873,"title":{},"body":{"classes/File.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts:38",{"_index":1872,"title":{},"body":{"classes/File.html":{}}}],["apps/server/src/shared/domain/entity/lesson.entity.ts",{"_index":2211,"title":{},"body":{"interfaces/ILessonProperties.html":{},"classes/Lesson.html":{}}}],["apps/server/src/shared/domain/entity/lesson.entity.ts:14",{"_index":2520,"title":{},"body":{"classes/Lesson.html":{}}}],["apps/server/src/shared/domain/entity/lesson.entity.ts:18",{"_index":2519,"title":{},"body":{"classes/Lesson.html":{}}}],["apps/server/src/shared/domain/entity/lesson.entity.ts:21",{"_index":2517,"title":{},"body":{"classes/Lesson.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts",{"_index":768,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:31",{"_index":2699,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:35",{"_index":2690,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:39",{"_index":2692,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:42",{"_index":2693,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:45",{"_index":2695,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:48",{"_index":2696,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:51",{"_index":2697,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:55",{"_index":2698,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:58",{"_index":2694,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:61",{"_index":2691,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:64",{"_index":2700,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:66",{"_index":2689,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:79",{"_index":2701,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/role.entity.ts",{"_index":2237,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["apps/server/src/shared/domain/entity/role.entity.ts:15",{"_index":3091,"title":{},"body":{"classes/Role.html":{}}}],["apps/server/src/shared/domain/entity/role.entity.ts:19",{"_index":3092,"title":{},"body":{"classes/Role.html":{}}}],["apps/server/src/shared/domain/entity/role.entity.ts:29",{"_index":3088,"title":{},"body":{"classes/Role.html":{}}}],["apps/server/src/shared/domain/entity/school.entity.ts",{"_index":2247,"title":{},"body":{"interfaces/ISchoolProperties.html":{},"classes/School.html":{}}}],["apps/server/src/shared/domain/entity/school.entity.ts:10",{"_index":3123,"title":{},"body":{"classes/School.html":{}}}],["apps/server/src/shared/domain/entity/storageprovider.entity.ts",{"_index":2249,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{}}}],["apps/server/src/shared/domain/entity/storageprovider.entity.ts:15",{"_index":3211,"title":{},"body":{"classes/StorageProvider.html":{}}}],["apps/server/src/shared/domain/entity/storageprovider.entity.ts:18",{"_index":3210,"title":{},"body":{"classes/StorageProvider.html":{}}}],["apps/server/src/shared/domain/entity/storageprovider.entity.ts:21",{"_index":3213,"title":{},"body":{"classes/StorageProvider.html":{}}}],["apps/server/src/shared/domain/entity/storageprovider.entity.ts:24",{"_index":3209,"title":{},"body":{"classes/StorageProvider.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts",{"_index":2262,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:26",{"_index":3224,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:29",{"_index":3222,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:32",{"_index":3219,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:35",{"_index":3225,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:39",{"_index":3218,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:42",{"_index":3223,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:46",{"_index":3220,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:49",{"_index":3221,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:52",{"_index":3217,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:67",{"_index":3227,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:75",{"_index":3226,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts",{"_index":2303,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:101",{"_index":3308,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:108",{"_index":3306,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:115",{"_index":3303,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:123",{"_index":3305,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:131",{"_index":3304,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:138",{"_index":3301,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:162",{"_index":3311,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:168",{"_index":3310,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:174",{"_index":3300,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:195",{"_index":3302,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:32",{"_index":3516,"title":{},"body":{"classes/TaskWithStatusVo.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:34",{"_index":3515,"title":{},"body":{"classes/TaskWithStatusVo.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:48",{"_index":3296,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:51",{"_index":3291,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:54",{"_index":3294,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:57",{"_index":3297,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:60",{"_index":3299,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:63",{"_index":3293,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:66",{"_index":3295,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:69",{"_index":3298,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:74",{"_index":3290,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:90",{"_index":3309,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:95",{"_index":3307,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/team.entity.ts",{"_index":2397,"title":{},"body":{"interfaces/ITeamProperties.html":{},"classes/Team.html":{}}}],["apps/server/src/shared/domain/entity/team.entity.ts:10",{"_index":3517,"title":{},"body":{"classes/Team.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts",{"_index":2399,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts:19",{"_index":3576,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts:22",{"_index":3577,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts:25",{"_index":3578,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts:29",{"_index":3580,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts:33",{"_index":3574,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/shared/domain/interface/find",{"_index":2194,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/interface/user.ts",{"_index":2175,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/counted.ts",{"_index":6015,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/entity",{"_index":6019,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/news.types.ts",{"_index":2163,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/value",{"_index":6021,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/infra/console/console",{"_index":619,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{}}}],["apps/server/src/shared/infra/database/management/database",{"_index":1401,"title":{},"body":{"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{}}}],["apps/server/src/shared/infra/database/mongo",{"_index":2627,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/infra/encryption/encryption.module.ts",{"_index":1751,"title":{},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{}}}],["apps/server/src/shared/infra/encryption/encryption.module.ts:10",{"_index":1755,"title":{},"body":{"modules/EncryptionModule.html":{}}}],["apps/server/src/shared/infra/encryption/encryption.service.ts",{"_index":3266,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["apps/server/src/shared/infra/encryption/encryption.service.ts:13",{"_index":3270,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["apps/server/src/shared/infra/encryption/encryption.service.ts:6",{"_index":3268,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["apps/server/src/shared/infra/encryption/encryption.service.ts:9",{"_index":3272,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["apps/server/src/shared/infra/feathers/feathers",{"_index":1838,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/infra/feathers/feathers.module.ts",{"_index":1826,"title":{},"body":{"modules/FeathersModule.html":{}}}],["apps/server/src/shared/infra/file",{"_index":1900,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/infra/filestorage/filestorage.adapter.ts",{"_index":1876,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"miscellaneous/functions.html":{}}}],["apps/server/src/shared/infra/filestorage/filestorage.adapter.ts:21",{"_index":1879,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["apps/server/src/shared/infra/mail/mail.interface.ts",{"_index":235,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["apps/server/src/shared/infra/mail/mail.module.ts",{"_index":2566,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/infra/mail/mail.module.ts:28",{"_index":2568,"title":{},"body":{"modules/MailModule.html":{}}}],["apps/server/src/shared/infra/mail/mail.service.ts",{"_index":2587,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["apps/server/src/shared/infra/mail/mail.service.ts:12",{"_index":2592,"title":{},"body":{"injectables/MailService.html":{}}}],["apps/server/src/shared/infra/mail/mail.service.ts:18",{"_index":2594,"title":{},"body":{"injectables/MailService.html":{}}}],["apps/server/src/shared/repo/base.repo.ts",{"_index":517,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:14",{"_index":539,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:19",{"_index":535,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:27",{"_index":537,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:36",{"_index":541,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:40",{"_index":547,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:44",{"_index":543,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:48",{"_index":545,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:53",{"_index":531,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:6",{"_index":529,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:9",{"_index":533,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/lesson/lesson",{"_index":2532,"title":{},"body":{"classes/LessonScope.html":{}}}],["apps/server/src/shared/repo/lesson/lesson.repo.ts",{"_index":2522,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["apps/server/src/shared/repo/lesson/lesson.repo.ts:15",{"_index":2525,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["apps/server/src/shared/repo/lesson/lesson.repo.ts:9",{"_index":2523,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["apps/server/src/shared/repo/query/empty",{"_index":6170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/repo/scope.ts",{"_index":3139,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/repo/scope.ts:11",{"_index":3141,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/scope.ts:17",{"_index":3146,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/scope.ts:25",{"_index":3144,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/scope.ts:9",{"_index":3143,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/types/encryptedstring.type.ts",{"_index":1714,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["apps/server/src/shared/repo/types/encryptedstring.type.ts:10",{"_index":1723,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["apps/server/src/shared/repo/types/encryptedstring.type.ts:21",{"_index":1728,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["apps/server/src/shared/repo/types/encryptedstring.type.ts:36",{"_index":1730,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["apps/server/src/shared/testing/clean",{"_index":6092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/create",{"_index":6159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts",{"_index":390,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:106",{"_index":443,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:110",{"_index":433,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:122",{"_index":445,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:13",{"_index":408,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:29",{"_index":437,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:45",{"_index":427,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:58",{"_index":430,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:72",{"_index":412,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:84",{"_index":441,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:96",{"_index":448,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/course.factory.ts",{"_index":6147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/coursegroup.factory.ts",{"_index":6151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/file.factory.ts",{"_index":6166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/lesson.factory.ts",{"_index":6171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/news.factory.ts",{"_index":6154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/role.factory.ts",{"_index":6178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/school.factory.ts",{"_index":6180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/storageprovider.factory.ts",{"_index":6184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/submission.factory.ts",{"_index":3229,"title":{},"body":{"classes/SubmissionFactory.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/submission.factory.ts:8",{"_index":3232,"title":{},"body":{"classes/SubmissionFactory.html":{}}}],["apps/server/src/shared/testing/factory/task.factory.ts",{"_index":3350,"title":{},"body":{"classes/TaskFactory.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/task.factory.ts:6",{"_index":3353,"title":{},"body":{"classes/TaskFactory.html":{}}}],["apps/server/src/shared/testing/factory/team.factory.ts",{"_index":6187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/user.factory.ts",{"_index":6189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/setup",{"_index":6182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appthis",{"_index":5255,"title":{},"body":{"index.html":{}}}],["arc",{"_index":4552,"title":{},"body":{"changelog.html":{}}}],["architecture",{"_index":5248,"title":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["architecture/organizing",{"_index":6614,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["archive",{"_index":5916,"title":{},"body":{"license.html":{}}}],["archived",{"_index":2326,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"changelog.html":{}}}],["archivegroup(groupname",{"_index":94,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["archives",{"_index":6660,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["areas",{"_index":6774,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["aren't",{"_index":6673,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arg",{"_index":5081,"title":{},"body":{"dependencies.html":{}}}],["args",{"_index":3161,"title":{},"body":{"classes/ServerConsole.html":{},"classes/TestBootstrapConsole.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["argument",{"_index":6820,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["argumentshost",{"_index":2041,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["arise",{"_index":6315,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["arising",{"_index":5883,"title":{},"body":{"license.html":{}}}],["around",{"_index":5929,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arrange",{"_index":5803,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["arrangement",{"_index":5814,"title":{},"body":{"license.html":{}}}],["array",{"_index":1932,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"changelog.html":{}}}],["array.from(modelentity.gridelements).foreach((el",{"_index":1264,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["array.from(modelentity.gridelements).map(async",{"_index":1223,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["array.from(modelentity.references).map((ref",{"_index":1215,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["array.isarray(collectionnamefilter",{"_index":1539,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["array.isarray(constraint",{"_index":231,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["array.isarray(user.permissions",{"_index":1803,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["arrays",{"_index":4611,"title":{},"body":{"changelog.html":{}}}],["article",{"_index":5525,"title":{},"body":{"license.html":{}}}],["asc",{"_index":1591,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/enumerations.html":{}}}],["ascending",{"_index":3765,"title":{},"body":{"changelog.html":{}}}],["asking",{"_index":4666,"title":{},"body":{"changelog.html":{}}}],["aspect",{"_index":6448,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aspects",{"_index":6328,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["assert",{"_index":5353,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["assertions",{"_index":6866,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["assets",{"_index":5756,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["assigned",{"_index":4860,"title":{},"body":{"changelog.html":{}}}],["assigning",{"_index":6590,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["assignment",{"_index":62,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"changelog.html":{}}}],["assignment,@typescript",{"_index":58,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["associated",{"_index":5477,"title":{},"body":{"license.html":{}}}],["assume",{"_index":5875,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumes",{"_index":6625,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumption",{"_index":5901,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":5706,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["async",{"_index":73,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/StorageProviderRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["asynchronous",{"_index":4635,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["asynclocalstorage",{"_index":6517,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["atomic",{"_index":6423,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["attach",{"_index":5907,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["attachment",{"_index":243,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["attachments",{"_index":246,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["attempt",{"_index":5716,"title":{},"body":{"license.html":{}}}],["attempted",{"_index":4494,"title":{},"body":{"changelog.html":{}}}],["attention",{"_index":2360,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["attribute",{"_index":3858,"title":{},"body":{"changelog.html":{}}}],["attributes",{"_index":4266,"title":{},"body":{"changelog.html":{}}}],["attributions",{"_index":5692,"title":{},"body":{"license.html":{}}}],["aud",{"_index":2437,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["audience",{"_index":2445,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{}}}],["audit",{"_index":6512,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["auth",{"_index":143,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"todo.html":{}}}],["auth.guard.ts",{"_index":2421,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.provider",{"_index":296,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{}}}],["auth.provider.ts",{"_index":1781,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["auth.provider.ts:13",{"_index":1789,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:16",{"_index":1797,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:26",{"_index":1799,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:38",{"_index":1793,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:55",{"_index":1791,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:60",{"_index":1795,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["authconfig",{"_index":2429,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["authconfig.jwtoptions",{"_index":2450,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authconfig.secret",{"_index":2449,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authenticate",{"_index":935,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["authenticate('jwt",{"_index":944,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}}}],["authenticated",{"_index":2182,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authenticates",{"_index":6522,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authentication",{"_index":3677,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authguard",{"_index":2422,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":2423,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":257,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":5691,"title":{},"body":{"license.html":{}}}],["authorization",{"_index":3487,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorization.service",{"_index":294,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["authorizationmodule",{"_index":283,"title":{"modules/AuthorizationModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["authorizationservice",{"_index":289,"title":{"injectables/AuthorizationService.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/NewsUc.html":{},"injectables/TaskUC.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorized",{"_index":5685,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorizes",{"_index":5780,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authorizing",{"_index":5818,"title":{},"body":{"license.html":{}}}],["authors",{"_index":5696,"title":{},"body":{"license.html":{}}}],["authtoken",{"_index":79,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["auto",{"_index":6253,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["autodeployed",{"_index":4011,"title":{},"body":{"changelog.html":{}}}],["automated",{"_index":6741,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["automatic",{"_index":4124,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["automatically",{"_index":4819,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["autosync",{"_index":4189,"title":{},"body":{"changelog.html":{}}}],["availability",{"_index":6746,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["available",{"_index":1534,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"license.html":{},"modules.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["availabledate",{"_index":2304,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskWithStatusVo.html":{}}}],["avoid",{"_index":4026,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["avoiding",{"_index":6301,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["await",{"_index":128,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/StorageProviderRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["awaited",{"_index":6791,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["away",{"_index":5332,"title":{},"body":{"license.html":{}}}],["aws",{"_index":1882,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"changelog.html":{},"dependencies.html":{}}}],["axios",{"_index":3794,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["b",{"_index":2240,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["back",{"_index":444,"title":{},"body":{"classes/BaseFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["backend",{"_index":3931,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":6340,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["backuop",{"_index":1571,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["backup",{"_index":1487,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["backup.js",{"_index":4959,"title":{},"body":{"changelog.html":{}}}],["backup.sh",{"_index":5049,"title":{},"body":{"changelog.html":{}}}],["backup/setup/news.json",{"_index":2865,"title":{},"body":{"modules/NewsModule.html":{}}}],["bad_request",{"_index":6683,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["badges",{"_index":4568,"title":{},"body":{"changelog.html":{}}}],["badrequestexception",{"_index":1005,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"injectables/ParseObjectIdPipe.html":{}}}],["badrequestexception('dashboard",{"_index":1063,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["badrequestexception('invalid",{"_index":3048,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["badrequestexception('this",{"_index":1047,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["bar",{"_index":3918,"title":{},"body":{"changelog.html":{}}}],["base",{"_index":584,"title":{},"body":{"classes/BusinessError.html":{},"injectables/DatabaseManagementUc.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["base.entity",{"_index":487,"title":{},"body":{"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["base.factory",{"_index":3242,"title":{},"body":{"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["base64",{"_index":5195,"title":{},"body":{"dependencies.html":{}}}],["base64content",{"_index":238,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["based",{"_index":392,"title":{},"body":{"classes/BaseFactory.html":{},"injectables/DatabaseManagementUc.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["basedir",{"_index":1463,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["baseentity",{"_index":342,"title":{"classes/BaseEntity.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/ITeamProperties.html":{},"classes/School.html":{},"classes/Team.html":{}}}],["baseentity:10",{"_index":3125,"title":{},"body":{"classes/School.html":{},"classes/Team.html":{}}}],["baseentity:7",{"_index":3124,"title":{},"body":{"classes/School.html":{},"classes/Team.html":{}}}],["baseentitywithtimestamps",{"_index":357,"title":{"classes/BaseEntityWithTimestamps.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["baseentitywithtimestamps:19",{"_index":482,"title":{},"body":{"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["baseentitywithtimestamps:22",{"_index":484,"title":{},"body":{"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["baseentitywithtimestamps:25",{"_index":483,"title":{},"body":{"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["baseentitywithtimestamps:28",{"_index":485,"title":{},"body":{"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["basefactory",{"_index":389,"title":{"classes/BaseFactory.html":{}},"body":{"classes/BaseFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefactory.define",{"_index":6185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(course",{"_index":6148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(coursegroup",{"_index":6152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(coursenews",{"_index":6155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(directory",{"_index":6167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(file",{"_index":6169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(lesson",{"_index":6172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(role",{"_index":6179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(school",{"_index":6181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(schoolnews",{"_index":6156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(team",{"_index":6188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(teamnews",{"_index":6157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(user",{"_index":6190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory:106",{"_index":3239,"title":{},"body":{"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefactory:110",{"_index":3236,"title":{},"body":{"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefactory:122",{"_index":3240,"title":{},"body":{"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefactory:13",{"_index":3230,"title":{},"body":{"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefactory:29",{"_index":3237,"title":{},"body":{"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefactory:45",{"_index":3234,"title":{},"body":{"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefactory:58",{"_index":3235,"title":{},"body":{"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefactory:72",{"_index":3233,"title":{},"body":{"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefactory:84",{"_index":3238,"title":{},"body":{"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefactory:96",{"_index":3241,"title":{},"body":{"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefile",{"_index":473,"title":{"classes/BaseFile.html":{}},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"injectables/FilesRepo.html":{},"interfaces/IFileProperties.html":{},"miscellaneous/variables.html":{}}}],["basefile:17",{"_index":1689,"title":{},"body":{"classes/Directory.html":{},"classes/File.html":{}}}],["basefile:20",{"_index":1690,"title":{},"body":{"classes/Directory.html":{},"classes/File.html":{}}}],["basefile:23",{"_index":1688,"title":{},"body":{"classes/Directory.html":{},"classes/File.html":{}}}],["basepath",{"_index":1455,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["baserepo",{"_index":516,"title":{"injectables/BaseRepo.html":{}},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/FilesRepo.html":{},"interfaces/IDashboardRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:14",{"_index":2005,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:19",{"_index":2003,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:27",{"_index":2004,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:36",{"_index":2006,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:40",{"_index":2009,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:44",{"_index":2007,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:48",{"_index":2008,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:53",{"_index":2001,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:9",{"_index":2002,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["basic",{"_index":5486,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["basically",{"_index":6483,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batch",{"_index":6482,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batches",{"_index":6488,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bbb",{"_index":4311,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["bc",{"_index":3665,"title":{},"body":{"changelog.html":{}}}],["bcc",{"_index":254,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["bcryptjs",{"_index":5089,"title":{},"body":{"dependencies.html":{}}}],["bearer",{"_index":6141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bearerformat",{"_index":6142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["become",{"_index":5365,"title":{},"body":{"license.html":{}}}],["becomes",{"_index":5375,"title":{},"body":{"license.html":{}}}],["before",{"_index":829,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["beforeall",{"_index":6834,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["beforeall(async",{"_index":6822,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["beforehand",{"_index":6231,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["beginning",{"_index":5284,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["behalf",{"_index":5505,"title":{},"body":{"license.html":{}}}],["behavior",{"_index":3768,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["behaviour",{"_index":650,"title":{},"body":{"modules/CoreModule.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["behind",{"_index":3546,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["being",{"_index":4572,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["believe",{"_index":5812,"title":{},"body":{"license.html":{}}}],["bellow",{"_index":6324,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["belongs",{"_index":6400,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["below",{"_index":5511,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["benefit",{"_index":5359,"title":{},"body":{"license.html":{}}}],["benefits",{"_index":6471,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["beside",{"_index":6018,"title":{},"body":{"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["best",{"_index":5904,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["better",{"_index":1118,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bettermark's",{"_index":4363,"title":{},"body":{"changelog.html":{}}}],["bettermarks",{"_index":4320,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":4081,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["beyond",{"_index":5580,"title":{},"body":{"license.html":{}}}],["bind",{"_index":4806,"title":{},"body":{"changelog.html":{}}}],["biology",{"_index":1294,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["birth",{"_index":3911,"title":{},"body":{"changelog.html":{}}}],["birthdate",{"_index":3781,"title":{},"body":{"changelog.html":{}}}],["birthday",{"_index":4782,"title":{},"body":{"changelog.html":{}}}],["birthdays",{"_index":4779,"title":{},"body":{"changelog.html":{}}}],["bit",{"_index":6490,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["blackbox",{"_index":6750,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["blocks",{"_index":6757,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["blue",{"_index":3917,"title":{},"body":{"changelog.html":{}}}],["bob",{"_index":6659,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["body",{"_index":126,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bom",{"_index":5187,"title":{},"body":{"dependencies.html":{}}}],["boolean",{"_index":480,"title":{},"body":{"classes/BaseFile.html":{},"classes/DashboardEntity.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/Directory.html":{},"classes/File.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICreateNews.html":{},"interfaces/IFileProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskListResponse.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/functions.html":{}}}],["boolean.transformer.ts",{"_index":5217,"title":{},"body":{"miscellaneous/functions.html":{}}}],["boolish",{"_index":5240,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":3537,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["bootstrap.boot([process.argv0",{"_index":3541,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["bootstrapconsole",{"_index":3535,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["bootstraps",{"_index":6821,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["boss",{"_index":3923,"title":{},"body":{"changelog.html":{}}}],["bosscloud",{"_index":3899,"title":{},"body":{"changelog.html":{}}}],["both",{"_index":4626,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["box",{"_index":6814,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["branch",{"_index":3881,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["branches",{"_index":4012,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["brandenburg",{"_index":4138,"title":{},"body":{"changelog.html":{}}}],["brb",{"_index":4061,"title":{},"body":{"changelog.html":{}}}],["breathing",{"_index":6654,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["brings",{"_index":6469,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["broken",{"_index":3864,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":5925,"title":{},"body":{"modules.html":{},"additional-documentation/nestjs-application.html":{}}}],["browser",{"_index":5923,"title":{},"body":{"modules.html":{}}}],["bs",{"_index":3855,"title":{},"body":{"changelog.html":{}}}],["bson",{"_index":578,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"dependencies.html":{}}}],["bson.ejson.deserialize(bsondocuments",{"_index":582,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["bson.ejson.serialize(documents",{"_index":580,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["bson/ejson",{"_index":574,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["bsonconverter",{"_index":559,"title":{"injectables/BsonConverter.html":{}},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{},"overview.html":{}}}],["bsondocuments",{"_index":572,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["btw",{"_index":376,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bubble",{"_index":6500,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bucket",{"_index":493,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"interfaces/IFileProperties.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["bufferencoding",{"_index":1950,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["buffers",{"_index":6383,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bug",{"_index":3916,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":398,"title":{},"body":{"classes/BaseFactory.html":{},"classes/GlobalErrorFilter.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["build(params",{"_index":425,"title":{},"body":{"classes/BaseFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["building",{"_index":4168,"title":{},"body":{"changelog.html":{}}}],["buildlist",{"_index":399,"title":{},"body":{"classes/BaseFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["buildlist(number",{"_index":429,"title":{},"body":{"classes/BaseFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["buildpipelines",{"_index":4097,"title":{},"body":{"changelog.html":{}}}],["builds",{"_index":6233,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["built",{"_index":418,"title":{},"body":{"classes/BaseFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["bulk",{"_index":4103,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bump",{"_index":4182,"title":{},"body":{"changelog.html":{}}}],["bundesland=x",{"_index":6410,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bundle",{"_index":5935,"title":{},"body":{"todo.html":{}}}],["business",{"_index":585,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["business.error",{"_index":202,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror",{"_index":177,"title":{"classes/BusinessError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"classes/ValidationError.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["businesserror:10",{"_index":192,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:12",{"_index":196,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:14",{"_index":195,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:16",{"_index":194,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:19",{"_index":193,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:34",{"_index":197,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:38",{"_index":199,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businessexception",{"_index":6729,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["button",{"_index":4763,"title":{},"body":{"changelog.html":{}}}],["byclosed",{"_index":3444,"title":{},"body":{"classes/TaskScope.html":{}}}],["byclosed(userid",{"_index":3450,"title":{},"body":{"classes/TaskScope.html":{}}}],["bycourseids",{"_index":2534,"title":{},"body":{"classes/LessonScope.html":{},"classes/TaskScope.html":{}}}],["bycourseids(courseids",{"_index":2536,"title":{},"body":{"classes/LessonScope.html":{},"classes/TaskScope.html":{}}}],["bydraft",{"_index":3445,"title":{},"body":{"classes/TaskScope.html":{}}}],["bydraft(isdraft",{"_index":3453,"title":{},"body":{"classes/TaskScope.html":{}}}],["byhidden",{"_index":2535,"title":{},"body":{"classes/LessonScope.html":{}}}],["byhidden(ishidden",{"_index":2538,"title":{},"body":{"classes/LessonScope.html":{}}}],["bylessonids",{"_index":3446,"title":{},"body":{"classes/TaskScope.html":{}}}],["bylessonids(lessonids",{"_index":3455,"title":{},"body":{"classes/TaskScope.html":{}}}],["bypassdocumentvalidation",{"_index":1439,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["bytargets",{"_index":2921,"title":{},"body":{"classes/NewsScope.html":{}}}],["bytargets(targets",{"_index":2923,"title":{},"body":{"classes/NewsScope.html":{}}}],["byteacherid",{"_index":3447,"title":{},"body":{"classes/TaskScope.html":{}}}],["byteacherid(teacherid",{"_index":3457,"title":{},"body":{"classes/TaskScope.html":{}}}],["byunpublished",{"_index":2922,"title":{},"body":{"classes/NewsScope.html":{}}}],["byunpublished(unpublished",{"_index":2925,"title":{},"body":{"classes/NewsScope.html":{}}}],["byuseridquery",{"_index":3253,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["byuseridquery(userid",{"_index":3256,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["c",{"_index":1355,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/Options.html":{},"classes/Role.html":{},"license.html":{}}}],["cache",{"_index":3095,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["caches",{"_index":6381,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["caching",{"_index":4703,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["calculated",{"_index":4965,"title":{},"body":{"changelog.html":{}}}],["calendar",{"_index":6528,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["call",{"_index":420,"title":{},"body":{"classes/BaseFactory.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/JwtValidationAdapter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["callback",{"_index":2667,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["called",{"_index":416,"title":{},"body":{"classes/BaseFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["caller",{"_index":6457,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["callhandler",{"_index":1699,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["calling",{"_index":2082,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["calls",{"_index":4419,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["camelcase",{"_index":6589,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["can't",{"_index":6369,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["canactivate(context",{"_index":6879,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["cant",{"_index":4876,"title":{},"body":{"changelog.html":{}}}],["capabilities",{"_index":6237,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["capitalization",{"_index":4937,"title":{},"body":{"changelog.html":{}}}],["capture",{"_index":6442,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["care",{"_index":4442,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["careful",{"_index":6494,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["carefully",{"_index":6707,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cares",{"_index":6734,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["carry",{"_index":5558,"title":{},"body":{"license.html":{}}}],["case",{"_index":1776,"title":{},"body":{"classes/ErrorResponse.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cases",{"_index":5374,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["catch",{"_index":1680,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["catch(error",{"_index":2039,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["catched",{"_index":6502,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["catcherror",{"_index":20,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/TimeoutInterceptor.html":{}}}],["catcherror((e",{"_index":146,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["catcherror((err",{"_index":3563,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catches",{"_index":6504,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["categories",{"_index":6322,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["category",{"_index":6344,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cause",{"_index":4250,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["caused",{"_index":5019,"title":{},"body":{"changelog.html":{}}}],["causing",{"_index":4675,"title":{},"body":{"changelog.html":{}}}],["caution",{"_index":2552,"title":{},"body":{"injectables/Logger.html":{}}}],["cc",{"_index":253,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["cease",{"_index":5720,"title":{},"body":{"license.html":{}}}],["ceating",{"_index":2164,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["central",{"_index":4746,"title":{},"body":{"changelog.html":{}}}],["certain",{"_index":5682,"title":{},"body":{"license.html":{}}}],["cessation",{"_index":5730,"title":{},"body":{"license.html":{}}}],["chain",{"_index":4581,"title":{},"body":{"changelog.html":{}}}],["chains",{"_index":4027,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["chalk",{"_index":5093,"title":{},"body":{"dependencies.html":{}}}],["chance",{"_index":6479,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["change",{"_index":3657,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["changed",{"_index":1970,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"injectables/Logger.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["changelog",{"_index":3648,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":3650,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["changing",{"_index":3834,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["channel",{"_index":4078,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["channels",{"_index":4685,"title":{},"body":{"changelog.html":{}}}],["characteristics",{"_index":6532,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["characterized",{"_index":5661,"title":{},"body":{"license.html":{}}}],["characters",{"_index":1923,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["charge",{"_index":5344,"title":{},"body":{"license.html":{}}}],["chat",{"_index":170,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chat.module",{"_index":3193,"title":{},"body":{"modules/ServerModule.html":{}}}],["chat.module.ts",{"_index":3082,"title":{},"body":{"modules/RocketChatModule.html":{}}}],["chat.module.ts:6",{"_index":3083,"title":{},"body":{"modules/RocketChatModule.html":{}}}],["chat.service",{"_index":3086,"title":{},"body":{"modules/RocketChatModule.html":{}}}],["chat.service.ts",{"_index":7,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"miscellaneous/typealiases.html":{}}}],["chat.service.ts:16",{"_index":3080,"title":{},"body":{"classes/RocketChatError.html":{}}}],["chat.service.ts:18",{"_index":3079,"title":{},"body":{"classes/RocketChatError.html":{}}}],["chat.service.ts:21",{"_index":3078,"title":{},"body":{"classes/RocketChatError.html":{}}}],["chatadapter",{"_index":6391,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["check",{"_index":368,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkbox",{"_index":3984,"title":{},"body":{"changelog.html":{}}}],["checked",{"_index":6450,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["checkentitypermissions",{"_index":299,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkentitypermissions(userid",{"_index":304,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["checking",{"_index":2117,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checklist",{"_index":5293,"title":{},"body":{"index.html":{}}}],["checkout",{"_index":5297,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["checks",{"_index":4767,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkshorttitle",{"_index":1050,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["checkusernotexistbyemail(email",{"_index":6698,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["chemistry",{"_index":1295,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["child",{"_index":5262,"title":{},"body":{"index.html":{}}}],["children",{"_index":4449,"title":{},"body":{"changelog.html":{}}}],["choose",{"_index":4825,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["choosing",{"_index":5865,"title":{},"body":{"license.html":{}}}],["choreography",{"_index":6455,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chunk",{"_index":5168,"title":{},"body":{"dependencies.html":{}}}],["chunks",{"_index":4260,"title":{},"body":{"changelog.html":{}}}],["ci",{"_index":4121,"title":{},"body":{"changelog.html":{}}}],["circumstances",{"_index":5509,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":5517,"title":{},"body":{"license.html":{}}}],["civil",{"_index":5900,"title":{},"body":{"license.html":{}}}],["claim",{"_index":5770,"title":{},"body":{"license.html":{}}}],["claims",{"_index":5782,"title":{},"body":{"license.html":{}}}],["class",{"_index":31,"title":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/BaseFile.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/DatabaseManagementConsole.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/DeleteFilesConsole.html":{},"classes/Directory.html":{},"classes/EncryptedStringType.html":{},"classes/ErrorResponse.html":{},"classes/File.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"classes/Lesson.html":{},"classes/LessonScope.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/PatchGroupParams.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/BaseFile.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["classes",{"_index":174,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/BaseFile.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/DatabaseManagementConsole.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/DeleteFilesConsole.html":{},"classes/Directory.html":{},"classes/EncryptedStringType.html":{},"classes/ErrorResponse.html":{},"classes/File.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"classes/Lesson.html":{},"classes/LessonScope.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/PatchGroupParams.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["classname",{"_index":1822,"title":{},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{}}}],["classserializerinterceptor",{"_index":2414,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["clean",{"_index":3770,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cleanup",{"_index":708,"title":{},"body":{"classes/Course.html":{},"classes/DeleteFilesConsole.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cleanupcollections",{"_index":6027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cleanupthreshold",{"_index":2000,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["clear",{"_index":1567,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"license.html":{}}}],["clearcollection",{"_index":1405,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["clearcollection(collectionname",{"_index":1415,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["clearly",{"_index":6711,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cli",{"_index":6269,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["clicking",{"_index":4335,"title":{},"body":{"changelog.html":{}}}],["client",{"_index":588,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["clients",{"_index":6404,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["clienturl",{"_index":2619,"title":{},"body":{"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["clipboard",{"_index":5029,"title":{},"body":{"changelog.html":{}}}],["clone",{"_index":400,"title":{},"body":{"classes/BaseFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"index.html":{}}}],["clone(this",{"_index":431,"title":{},"body":{"classes/BaseFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["clone>(this",{"_index":466,"title":{},"body":{"classes/BaseFactory.html":{}}}],["close",{"_index":2664,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["closed",{"_index":2305,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["closely",{"_index":5897,"title":{},"body":{"license.html":{}}}],["closing",{"_index":4434,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cloud",{"_index":5241,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cloud.github.io/schulcloud",{"_index":4033,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["cloud.org",{"_index":5034,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["cloud/commons",{"_index":1734,"title":{},"body":{"classes/EncryptedStringType.html":{},"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{}}}],["cloud/mongoose",{"_index":5144,"title":{},"body":{"dependencies.html":{}}}],["cloud/node",{"_index":5130,"title":{},"body":{"dependencies.html":{}}}],["cloud/schulcloud",{"_index":5952,"title":{},"body":{"todo.html":{}}}],["clouds",{"_index":4792,"title":{},"body":{"changelog.html":{}}}],["cluster",{"_index":3902,"title":{},"body":{"changelog.html":{}}}],["cluster_authmodule",{"_index":260,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":261,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":262,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule",{"_index":284,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_exports",{"_index":285,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_imports",{"_index":286,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_providers",{"_index":287,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_consolewritermodule",{"_index":615,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"overview.html":{}}}],["cluster_consolewritermodule_exports",{"_index":616,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"overview.html":{}}}],["cluster_consolewritermodule_providers",{"_index":617,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":639,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":640,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_databasemanagementmodule",{"_index":1397,"title":{},"body":{"modules/DatabaseManagementModule.html":{},"overview.html":{}}}],["cluster_databasemanagementmodule_exports",{"_index":1399,"title":{},"body":{"modules/DatabaseManagementModule.html":{},"overview.html":{}}}],["cluster_databasemanagementmodule_imports",{"_index":1398,"title":{},"body":{"modules/DatabaseManagementModule.html":{},"overview.html":{}}}],["cluster_feathersmodule",{"_index":1823,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_exports",{"_index":1824,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_providers",{"_index":1825,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_filesmodule",{"_index":1983,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_imports",{"_index":1984,"title":{},"body":{"modules/FilesModule.html":{}}}],["cluster_filesmodule_providers",{"_index":1985,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesystemmodule",{"_index":1977,"title":{},"body":{"modules/FileSystemModule.html":{},"overview.html":{}}}],["cluster_filesystemmodule_exports",{"_index":1979,"title":{},"body":{"modules/FileSystemModule.html":{},"overview.html":{}}}],["cluster_filesystemmodule_providers",{"_index":1978,"title":{},"body":{"modules/FileSystemModule.html":{},"overview.html":{}}}],["cluster_learnroommodule",{"_index":2511,"title":{},"body":{"modules/LearnroomModule.html":{},"overview.html":{}}}],["cluster_learnroommodule_providers",{"_index":2512,"title":{},"body":{"modules/LearnroomModule.html":{},"overview.html":{}}}],["cluster_loggermodule",{"_index":2560,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_exports",{"_index":2562,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_providers",{"_index":2561,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_managementmodule",{"_index":2601,"title":{},"body":{"modules/ManagementModule.html":{},"overview.html":{}}}],["cluster_managementmodule_imports",{"_index":2603,"title":{},"body":{"modules/ManagementModule.html":{}}}],["cluster_managementmodule_providers",{"_index":2602,"title":{},"body":{"modules/ManagementModule.html":{},"overview.html":{}}}],["cluster_newsmodule",{"_index":2846,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_exports",{"_index":2847,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_imports",{"_index":2849,"title":{},"body":{"modules/NewsModule.html":{}}}],["cluster_newsmodule_providers",{"_index":2848,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_serverconsolemodule",{"_index":3167,"title":{},"body":{"modules/ServerConsoleModule.html":{},"overview.html":{}}}],["cluster_serverconsolemodule_imports",{"_index":3168,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["cluster_servermodule",{"_index":3179,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_servermodule_imports",{"_index":3180,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_taskmodule",{"_index":3389,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_taskmodule_providers",{"_index":3390,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":3605,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":3606,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":3607,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluttered",{"_index":6496,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["co",{"_index":5053,"title":{},"body":{"changelog.html":{}}}],["codacy",{"_index":4736,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["code",{"_index":178,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"classes/ValidationError.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["codes",{"_index":4749,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coersion",{"_index":2126,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["cohesion",{"_index":6311,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["collation",{"_index":4866,"title":{},"body":{"changelog.html":{}}}],["collect",{"_index":5843,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collectcoveragefrom",{"_index":6111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collection",{"_index":494,"title":{},"body":{"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"interfaces/Options.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collection(elementmodel",{"_index":1255,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["collection(this",{"_index":684,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"classes/Role.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/User.html":{}}}],["collection.deletemany",{"_index":1442,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collection.find({}).toarray",{"_index":1440,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collection.insertmany(jsondocuments",{"_index":1437,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collection.name",{"_index":1448,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collectionexists",{"_index":1406,"title":{},"body":{"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionexists(collectionname",{"_index":1417,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collectionname",{"_index":1380,"title":{},"body":{"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"miscellaneous/variables.html":{}}}],["collectionnamefilter",{"_index":1489,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionnamefilter.length",{"_index":1540,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionnamefilter?.includes(collectionname",{"_index":1543,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionnames",{"_index":1446,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collectionname}.json",{"_index":1525,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collections",{"_index":1342,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{},"changelog.html":{}}}],["collections.includes(collectionname",{"_index":1450,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collections.map((collection",{"_index":1447,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collections.map((collectionname",{"_index":1523,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collections.ts",{"_index":6029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collectionstoexport",{"_index":1579,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionstoexport.map(async",{"_index":1581,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionstoseed",{"_index":1552,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionstoseed.map(async",{"_index":1555,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionswithfilepaths",{"_index":1522,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["color",{"_index":667,"title":{},"body":{"classes/Course.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/variables.html":{}}}],["colors",{"_index":3810,"title":{},"body":{"changelog.html":{}}}],["columnnames",{"_index":4838,"title":{},"body":{"changelog.html":{}}}],["columns",{"_index":962,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["colums",{"_index":1058,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["combine",{"_index":3626,"title":{},"body":{"injectables/UserUC.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["combined",{"_index":5575,"title":{},"body":{"license.html":{}}}],["come",{"_index":5226,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["comes",{"_index":5565,"title":{},"body":{"license.html":{}}}],["command",{"_index":1348,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"classes/DeleteFilesConsole.html":{},"interfaces/Options.html":{},"classes/ServerConsole.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["command({command",{"_index":1340,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"classes/DeleteFilesConsole.html":{},"classes/ServerConsole.html":{}}}],["commander",{"_index":5099,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["commandresponse",{"_index":3540,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["commands",{"_index":5442,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["comment",{"_index":2263,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"miscellaneous/variables.html":{}}}],["commentschema",{"_index":4975,"title":{},"body":{"changelog.html":{}}}],["commercial",{"_index":5648,"title":{},"body":{"license.html":{}}}],["commit",{"_index":4546,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["commitment",{"_index":5795,"title":{},"body":{"license.html":{}}}],["committing",{"_index":5296,"title":{},"body":{"index.html":{}}}],["common",{"_index":5117,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["commons",{"_index":4519,"title":{},"body":{"changelog.html":{}}}],["communicate",{"_index":6351,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["communication",{"_index":5482,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["community",{"_index":5328,"title":{},"body":{"license.html":{}}}],["comparator",{"_index":6592,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["compare",{"_index":2052,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["compared",{"_index":6487,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comparison",{"_index":6920,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["compilation",{"_index":5571,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":5579,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":5827,"title":{},"body":{"license.html":{}}}],["compile",{"_index":1629,"title":{},"body":{"controllers/DelayController.html":{},"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compiler",{"_index":5468,"title":{},"body":{"license.html":{}}}],["compiling",{"_index":4584,"title":{},"body":{"changelog.html":{}}}],["complete",{"_index":5292,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["completed",{"_index":3904,"title":{},"body":{"changelog.html":{}}}],["completely",{"_index":6429,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["complex",{"_index":2554,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compliance",{"_index":5752,"title":{},"body":{"license.html":{}}}],["compliant",{"_index":6332,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comply",{"_index":5502,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":6265,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["component",{"_index":4233,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["component(s",{"_index":6387,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["components",{"_index":5274,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compose",{"_index":3969,"title":{},"body":{"changelog.html":{}}}],["compression",{"_index":5101,"title":{},"body":{"dependencies.html":{}}}],["computer",{"_index":5416,"title":{},"body":{"license.html":{}}}],["concept",{"_index":3667,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concepts",{"_index":6550,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["concerns",{"_index":5858,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["concrete",{"_index":6611,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concurrency",{"_index":4024,"title":{},"body":{"changelog.html":{}}}],["concurrently",{"_index":5103,"title":{},"body":{"dependencies.html":{}}}],["condition",{"_index":6760,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["conditioned",{"_index":5821,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":5385,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["conditons",{"_index":6393,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["config",{"_index":3186,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["config.initialoptions",{"_index":6097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configs",{"_index":4508,"title":{},"body":{"changelog.html":{}}}],["configuration",{"_index":1731,"title":{},"body":{"classes/EncryptedStringType.html":{},"modules/ServerModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["configuration.get('mail_send_exchange",{"_index":3196,"title":{},"body":{"modules/ServerModule.html":{}}}],["configuration.get('mail_send_routing_key",{"_index":3197,"title":{},"body":{"modules/ServerModule.html":{}}}],["configuration.get('rabbitmq_uri",{"_index":3195,"title":{},"body":{"modules/ServerModule.html":{}}}],["configuration.get('request_timeout",{"_index":6177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration.get('rocket_chat_admin_id",{"_index":3200,"title":{},"body":{"modules/ServerModule.html":{}}}],["configuration.get('rocket_chat_admin_password",{"_index":3203,"title":{},"body":{"modules/ServerModule.html":{}}}],["configuration.get('rocket_chat_admin_token",{"_index":3201,"title":{},"body":{"modules/ServerModule.html":{}}}],["configuration.get('rocket_chat_admin_user",{"_index":3202,"title":{},"body":{"modules/ServerModule.html":{}}}],["configuration.get('rocket_chat_uri",{"_index":3199,"title":{},"body":{"modules/ServerModule.html":{}}}],["configurations",{"_index":6275,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["configure",{"_index":6199,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["configured",{"_index":4004,"title":{},"body":{"changelog.html":{}}}],["configures",{"_index":647,"title":{},"body":{"modules/CoreModule.html":{}}}],["confirm",{"_index":5031,"title":{},"body":{"changelog.html":{}}}],["confirmed",{"_index":4833,"title":{},"body":{"changelog.html":{}}}],["conflicts",{"_index":6549,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["connect",{"_index":1120,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connected",{"_index":5275,"title":{},"body":{"index.html":{}}}],["connection",{"_index":2665,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["connectionoptions",{"_index":5991,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["connections",{"_index":4113,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connector",{"_index":4978,"title":{},"body":{"changelog.html":{}}}],["connector/framework",{"_index":6475,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consent",{"_index":4134,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consents",{"_index":4246,"title":{},"body":{"changelog.html":{}}}],["consentstatus",{"_index":4780,"title":{},"body":{"changelog.html":{}}}],["consentversion",{"_index":4019,"title":{},"body":{"changelog.html":{}}}],["consentversions",{"_index":4900,"title":{},"body":{"changelog.html":{}}}],["consentversionservice",{"_index":3789,"title":{},"body":{"changelog.html":{}}}],["consequence",{"_index":5741,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":5882,"title":{},"body":{"license.html":{}}}],["consider",{"_index":3962,"title":{},"body":{"changelog.html":{}}}],["considered",{"_index":5708,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consist",{"_index":6704,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["consistency",{"_index":4348,"title":{},"body":{"changelog.html":{}}}],["consistent",{"_index":4406,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consists",{"_index":6629,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["console",{"_index":622,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"classes/DatabaseManagementConsole.html":{},"classes/DeleteFilesConsole.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"classes/TestBootstrapConsole.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["console/database",{"_index":2614,"title":{},"body":{"modules/ManagementModule.html":{}}}],["consolelogger",{"_index":2543,"title":{},"body":{"injectables/Logger.html":{}}}],["consolemodule",{"_index":3170,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["consolewriter",{"_index":1338,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{},"classes/ServerConsole.html":{}}}],["consolewritermodule",{"_index":614,"title":{"modules/ConsoleWriterModule.html":{}},"body":{"modules/ConsoleWriterModule.html":{},"modules/ServerConsoleModule.html":{},"modules.html":{},"overview.html":{}}}],["consolewriterservice",{"_index":618,"title":{"injectables/ConsoleWriterService.html":{}},"body":{"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"classes/DatabaseManagementConsole.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{},"classes/ServerConsole.html":{},"overview.html":{}}}],["conspicuously",{"_index":5546,"title":{},"body":{"license.html":{}}}],["const",{"_index":127,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/Course.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/Scope.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["constants",{"_index":279,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/TimeoutInterceptor.html":{}}}],["constitutes",{"_index":5494,"title":{},"body":{"license.html":{}}}],["constraint",{"_index":229,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constraints",{"_index":6385,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["constructor",{"_index":68,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/EncryptedStringType.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/User.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["constructor(@inject('dashboard_repo",{"_index":1323,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["constructor(@inject('symmetric_cipher_key",{"_index":3275,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["constructor(@inject(request",{"_index":1854,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["constructor(amqpconnection",{"_index":2589,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(apivalidationerror",{"_index":219,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constructor(consolewriter",{"_index":1335,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"classes/ServerConsole.html":{}}}],["constructor(courserepo",{"_index":3315,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["constructor(customkey",{"_index":1722,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["constructor(dashboardrepo",{"_index":1315,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["constructor(data",{"_index":2773,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["constructor(deletefilesuc",{"_index":1635,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["constructor(e",{"_index":42,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["constructor(em",{"_index":527,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementService.html":{},"injectables/LessonRepo.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{}}}],["constructor(entityclass",{"_index":406,"title":{},"body":{"classes/BaseFactory.html":{}}}],["constructor(feathersauthprovider",{"_index":302,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["constructor(feathersserviceprovider",{"_index":1787,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["constructor(field",{"_index":3640,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(filesrepo",{"_index":1658,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["constructor(filestorageadapter",{"_index":1995,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["constructor(filesystemadapter",{"_index":1464,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["constructor(id",{"_index":973,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["constructor(key",{"_index":3267,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["constructor(message",{"_index":3635,"title":{},"body":{"classes/ValidationError.html":{}}}],["constructor(newsrepo",{"_index":2945,"title":{},"body":{"injectables/NewsUc.html":{}}}],["constructor(operator",{"_index":3140,"title":{},"body":{"classes/Scope.html":{}}}],["constructor(private",{"_index":326,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FilesRepo.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/ServerConsole.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["constructor(props",{"_index":504,"title":{},"body":{"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/Directory.html":{},"classes/File.html":{},"classes/GridElement.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["constructor(protected",{"_index":548,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["constructor(readonly",{"_index":203,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(request",{"_index":1869,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["constructor(rolerepo",{"_index":3113,"title":{},"body":{"injectables/RoleUC.html":{}}}],["constructor(task",{"_index":2315,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["constructor(taskrepo",{"_index":3470,"title":{},"body":{"injectables/TaskUC.html":{}}}],["constructor(total",{"_index":3032,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["constructor(type",{"_index":1769,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["constructor(undefined",{"_index":592,"title":{},"body":{"classes/BusinessError.html":{}}}],["constructor(userfacade",{"_index":2456,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(userrepo",{"_index":3617,"title":{},"body":{"injectables/UserUC.html":{}}}],["constructor(useruc",{"_index":3595,"title":{},"body":{"injectables/UserFacade.html":{}}}],["constructor(validationerrors",{"_index":184,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["construed",{"_index":5831,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":5631,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consumers",{"_index":6427,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consumption",{"_index":3889,"title":{},"body":{"changelog.html":{}}}],["contact",{"_index":4145,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["contain",{"_index":5828,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["contained",{"_index":5222,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["container",{"_index":4545,"title":{},"body":{"changelog.html":{}}}],["containing",{"_index":5289,"title":{},"body":{"index.html":{},"license.html":{}}}],["contains",{"_index":2895,"title":{},"body":{"injectables/NewsRepo.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["content",{"_index":771,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["contentdisposition",{"_index":237,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["contentid",{"_index":242,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["contents",{"_index":5792,"title":{},"body":{"license.html":{}}}],["context",{"_index":1701,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"interfaces/ILogger.html":{},"injectables/Logger.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["context.switchtohttp().getrequest",{"_index":6881,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["continue",{"_index":4403,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["continued",{"_index":5655,"title":{},"body":{"license.html":{}}}],["contract",{"_index":6304,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["contractual",{"_index":5705,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":5837,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":5335,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["contributor",{"_index":5779,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":5781,"title":{},"body":{"license.html":{}}}],["control",{"_index":4935,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["controlled",{"_index":5784,"title":{},"body":{"license.html":{}}}],["controller",{"_index":910,"title":{"controllers/DashboardController.html":{},"controllers/DatabaseManagementController.html":{},"controllers/DelayController.html":{},"controllers/NewsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}},"body":{"controllers/DashboardController.html":{},"controllers/DatabaseManagementController.html":{},"controllers/DelayController.html":{},"controllers/NewsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["controller('dashboard",{"_index":945,"title":{},"body":{"controllers/DashboardController.html":{}}}],["controller('management/database",{"_index":1389,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["controller('news",{"_index":2734,"title":{},"body":{"controllers/NewsController.html":{}}}],["controller('tasks",{"_index":3343,"title":{},"body":{"controllers/TaskController.html":{}}}],["controller('team",{"_index":3526,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["controller('user",{"_index":3590,"title":{},"body":{"controllers/UserController.html":{}}}],["controller.ts",{"_index":6562,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["controller/dashboard.controller",{"_index":2515,"title":{},"body":{"modules/LearnroomModule.html":{}}}],["controller/database",{"_index":2612,"title":{},"body":{"modules/ManagementModule.html":{}}}],["controller/dto",{"_index":1160,"title":{},"body":{"classes/DashboardMapper.html":{},"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TaskMapper.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{}}}],["controller/dto/resolveduser.dto",{"_index":3621,"title":{},"body":{"injectables/UserUC.html":{}}}],["controller/dto/target",{"_index":3282,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["controller/news.controller",{"_index":2856,"title":{},"body":{"modules/NewsModule.html":{}}}],["controller/task.controller",{"_index":3393,"title":{},"body":{"modules/TaskModule.html":{}}}],["controller/team",{"_index":2857,"title":{},"body":{"modules/NewsModule.html":{}}}],["controllers",{"_index":912,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/DatabaseManagementController.html":{},"controllers/DelayController.html":{},"modules/LearnroomModule.html":{},"modules/ManagementModule.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["convenient",{"_index":5435,"title":{},"body":{"license.html":{}}}],["convention",{"_index":6753,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["conventions",{"_index":6348,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["convert",{"_index":1592,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["converted",{"_index":4884,"title":{},"body":{"changelog.html":{}}}],["converter/bson.converter",{"_index":1509,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{}}}],["converttodatabasevalue",{"_index":1720,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["converttodatabasevalue(value",{"_index":1726,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["converttojsvalue",{"_index":1721,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["converttojsvalue(value",{"_index":1729,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["convey",{"_index":5422,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":5816,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":5662,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":5430,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":5704,"title":{},"body":{"license.html":{}}}],["cooperation",{"_index":5327,"title":{},"body":{"license.html":{}}}],["copies",{"_index":5321,"title":{},"body":{"license.html":{}}}],["copy",{"_index":467,"title":{},"body":{"classes/BaseFactory.html":{},"changelog.html":{},"license.html":{}}}],["copying",{"_index":5386,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":5323,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":5311,"title":{},"body":{"license.html":{}}}],["copyrightable",{"_index":5393,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":5508,"title":{},"body":{"license.html":{}}}],["core",{"_index":646,"title":{},"body":{"modules/CoreModule.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core.autocrlf",{"_index":6944,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["core/core.module",{"_index":3187,"title":{},"body":{"modules/ServerModule.html":{}}}],["core/error",{"_index":6735,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core/logger/logger.module",{"_index":1991,"title":{},"body":{"modules/FilesModule.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core/logger/logger.service",{"_index":1646,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["coremodule",{"_index":638,"title":{"modules/CoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["correct",{"_index":3842,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["correction",{"_index":5877,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":4856,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["corresponding",{"_index":5471,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cors",{"_index":3854,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["cost",{"_index":5601,"title":{},"body":{"license.html":{}}}],["count",{"_index":765,"title":{},"body":{"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"controllers/TeamNewsController.html":{}}}],["counted",{"_index":764,"title":{},"body":{"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{}}}],["countednewslist",{"_index":2885,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["countedtasklist",{"_index":3423,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["counterclaim",{"_index":5771,"title":{},"body":{"license.html":{}}}],["counterpart",{"_index":6022,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["counties",{"_index":4388,"title":{},"body":{"changelog.html":{}}}],["counties/kreise",{"_index":4456,"title":{},"body":{"changelog.html":{}}}],["countries",{"_index":5420,"title":{},"body":{"license.html":{}}}],["country",{"_index":5808,"title":{},"body":{"license.html":{}}}],["counts",{"_index":6017,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["couple",{"_index":6470,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["coupling",{"_index":6313,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["course",{"_index":665,"title":{"classes/Course.html":{}},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Lesson.html":{},"classes/LessonScope.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["course.entity",{"_index":752,"title":{},"body":{"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamNews.html":{}}}],["coursefactory",{"_index":6032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coursefactory.build",{"_index":6153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coursegroup",{"_index":743,"title":{"classes/CourseGroup.html":{}},"body":{"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["coursegroup.entity",{"_index":2271,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["coursegroupfactory",{"_index":6034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coursegroupid",{"_index":2280,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["coursegrouprepo",{"_index":757,"title":{"injectables/CourseGroupRepo.html":{}},"body":{"injectables/CourseGroupRepo.html":{}}}],["coursegroups",{"_index":753,"title":{},"body":{"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"interfaces/ICourseGroupProperties.html":{},"injectables/TaskAuthorizationService.html":{},"changelog.html":{}}}],["coursegroupsofuser",{"_index":3264,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["courseid",{"_index":749,"title":{},"body":{"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Lesson.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["courseids",{"_index":763,"title":{},"body":{"injectables/CourseGroupRepo.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{}}}],["coursename",{"_index":3362,"title":{},"body":{"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["coursenews",{"_index":767,"title":{"classes/CourseNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coursenews(props",{"_index":830,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["coursenewsfactory",{"_index":6036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["courserepo",{"_index":837,"title":{"injectables/CourseRepo.html":{}},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/TaskAuthorizationService.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["courses",{"_index":716,"title":{},"body":{"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsScope.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["coursescope",{"_index":849,"title":{"classes/CourseScope.html":{}},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["court",{"_index":5836,"title":{},"body":{"license.html":{}}}],["courts",{"_index":5896,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":5798,"title":{},"body":{"license.html":{}}}],["cover",{"_index":6664,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coverage",{"_index":4387,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["coveragedirectory",{"_index":6113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coveragepathignorepatterns",{"_index":6114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coveragethreshold",{"_index":6116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["covered",{"_index":5405,"title":{},"body":{"license.html":{}}}],["covers",{"_index":6872,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["cpu",{"_index":4150,"title":{},"body":{"changelog.html":{}}}],["create",{"_index":1557,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"classes/TestBootstrapConsole.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["create(@currentuser",{"_index":2735,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["create(currentuser",{"_index":2707,"title":{},"body":{"controllers/NewsController.html":{}}}],["create(userid",{"_index":2947,"title":{},"body":{"injectables/NewsUc.html":{}}}],["createcollection",{"_index":1407,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["createcollection(collectionname",{"_index":1419,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["createcurrenttestuser",{"_index":6038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["created",{"_index":1948,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"injectables/Logger.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["createdat",{"_index":377,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"changelog.html":{}}}],["createdat.$date",{"_index":1590,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["createdir",{"_index":1904,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["createdir(folderpath",{"_index":1913,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["createerrorresponse",{"_index":2035,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponse(error",{"_index":2043,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforbusinesserror",{"_index":5209,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createerrorresponseforbusinesserror(error",{"_index":2067,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforfeatherserror",{"_index":5211,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createerrorresponseforfeatherserror(error",{"_index":2074,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception",{"_index":2057,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(error",{"_index":2088,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(unknownerror",{"_index":2073,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforunknownerror",{"_index":2092,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforunknownerror(error",{"_index":2070,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["creategroup(name",{"_index":108,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["createinstance",{"_index":776,"title":{},"body":{"classes/CourseNews.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["createinstance(targetmodel",{"_index":804,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["createmikroormmodule",{"_index":2640,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["createnestapplication",{"_index":6877,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["createnewsparam",{"_index":6619,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createnewsparams",{"_index":873,"title":{"classes/CreateNewsParams.html":{}},"body":{"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createparamdecorator((data",{"_index":6086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createrabbitmqmodule",{"_index":2578,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["createrabbitmqmodule(options",{"_index":2584,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["createredisidentifierfromjwtdata",{"_index":2505,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["createredisidentifierfromjwtdata(accountid",{"_index":2508,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["creates",{"_index":1915,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["createspinner",{"_index":630,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["createstorageproviderclient",{"_index":5212,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createstorageproviderclient(storageprovider",{"_index":1885,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"miscellaneous/functions.html":{}}}],["createstudentstatusforuser",{"_index":3286,"title":{},"body":{"classes/Task.html":{}}}],["createstudentstatusforuser(userid",{"_index":2382,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["createteacherstatusforuser",{"_index":3287,"title":{},"body":{"classes/Task.html":{}}}],["createteacherstatusforuser(userid",{"_index":2368,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["createtestmodule",{"_index":1624,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["createtmpdir",{"_index":1905,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["createtmpdir(dirnameprefix",{"_index":1916,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["createuser(email",{"_index":116,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["createusertoken(userid",{"_index":84,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["creating",{"_index":877,"title":{},"body":{"classes/CreateNewsParams.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creating/populating",{"_index":4258,"title":{},"body":{"changelog.html":{}}}],["creation",{"_index":2122,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"changelog.html":{}}}],["creator",{"_index":475,"title":{},"body":{"classes/BaseFile.html":{},"classes/CourseNews.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creatorid",{"_index":781,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["credentials",{"_index":1892,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["criteria",{"_index":6477,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["criterion",{"_index":5447,"title":{},"body":{"license.html":{}}}],["critical",{"_index":6439,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cronjob",{"_index":4644,"title":{},"body":{"changelog.html":{}}}],["cross",{"_index":648,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"modules/CoreModule.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["crosscutting",{"_index":6511,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["crossing",{"_index":6612,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["crud",{"_index":6676,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["crypto",{"_index":3274,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{},"dependencies.html":{}}}],["cryptojs",{"_index":3273,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["cryptojs.aes.decrypt(data",{"_index":3278,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["cryptojs.aes.encrypt(data",{"_index":3276,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["csv",{"_index":3980,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["csvsyncer",{"_index":4939,"title":{},"body":{"changelog.html":{}}}],["ctx",{"_index":2106,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getresponse",{"_index":2108,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":6087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cumbersome",{"_index":360,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["cure",{"_index":5733,"title":{},"body":{"license.html":{}}}],["curentuser",{"_index":3485,"title":{},"body":{"injectables/TaskUC.html":{}}}],["current",{"_index":1478,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["currentdatetime",{"_index":1517,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["currently",{"_index":2648,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["currentschoolyear",{"_index":4842,"title":{},"body":{"changelog.html":{}}}],["currentuser",{"_index":951,"title":{},"body":{"controllers/DashboardController.html":{},"injectables/DashboardUc.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.schoolid",{"_index":2737,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.user.permissions.includes(permission",{"_index":3506,"title":{},"body":{"injectables/TaskUC.html":{}}}],["currentuser.userid",{"_index":947,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["custom",{"_index":1778,"title":{},"body":{"classes/ErrorResponse.html":{},"injectables/Logger.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["custom_error_type",{"_index":6731,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["customarily",{"_index":5593,"title":{},"body":{"license.html":{}}}],["customary",{"_index":5850,"title":{},"body":{"license.html":{}}}],["customer",{"_index":5598,"title":{},"body":{"license.html":{}}}],["customizing",{"_index":651,"title":{},"body":{"modules/CoreModule.html":{}}}],["customkey",{"_index":1724,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["customproviderclass.name",{"_index":2558,"title":{},"body":{"injectables/Logger.html":{}}}],["cutting",{"_index":6292,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["cycle",{"_index":3875,"title":{},"body":{"changelog.html":{}}}],["cycles",{"_index":6329,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["d",{"_index":702,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["damages",{"_index":5880,"title":{},"body":{"license.html":{}}}],["dash",{"_index":4575,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dashboard",{"_index":915,"title":{},"body":{"controllers/DashboardController.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/IDashboardRepo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["dashboard.getelement(position",{"_index":1328,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["dashboard.getgrid().map((elementwithposition",{"_index":1164,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["dashboard.id",{"_index":1162,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["dashboard.model.entity",{"_index":1209,"title":{},"body":{"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["dashboard.model.mapper",{"_index":1279,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["dashboard.moveelement(from",{"_index":1326,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["dashboard_repo",{"_index":2516,"title":{},"body":{"modules/LearnroomModule.html":{}}}],["dashboardcontroller",{"_index":911,"title":{"controllers/DashboardController.html":{}},"body":{"controllers/DashboardController.html":{},"modules/LearnroomModule.html":{}}}],["dashboarddefaultreference",{"_index":1111,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["dashboardelement",{"_index":1123,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["dashboardentity",{"_index":960,"title":{"classes/DashboardEntity.html":{}},"body":{"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["dashboardentity(hardcodedtestdashboardid",{"_index":1299,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["dashboardentity(modelentity.id",{"_index":1226,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["dashboardgridelementmodel",{"_index":1095,"title":{"classes/DashboardGridElementModel.html":{}},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"classes/DefaultGridReferenceModel.html":{},"miscellaneous/variables.html":{}}}],["dashboardgridelementmodel(gridelement.getid",{"_index":1242,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["dashboardgridelementresponse",{"_index":1134,"title":{"classes/DashboardGridElementResponse.html":{}},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{}}}],["dashboardgridsubelementresponse",{"_index":1141,"title":{"classes/DashboardGridSubElementResponse.html":{}},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["dashboardid",{"_index":926,"title":{},"body":{"controllers/DashboardController.html":{},"injectables/DashboardUc.html":{}}}],["dashboardmapper",{"_index":941,"title":{"classes/DashboardMapper.html":{}},"body":{"controllers/DashboardController.html":{},"classes/DashboardMapper.html":{}}}],["dashboardmapper.maptoresponse(dashboard",{"_index":948,"title":{},"body":{"controllers/DashboardController.html":{}}}],["dashboardmodel",{"_index":1306,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["dashboardmodelentity",{"_index":1130,"title":{"classes/DashboardModelEntity.html":{}},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["dashboardmodelentity(entity.getid",{"_index":1260,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["dashboardmodelmapper",{"_index":1183,"title":{"injectables/DashboardModelMapper.html":{}},"body":{"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"modules/LearnroomModule.html":{},"overview.html":{}}}],["dashboardprops",{"_index":974,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"miscellaneous/typealiases.html":{}}}],["dashboardrepo",{"_index":1268,"title":{"injectables/DashboardRepo.html":{}},"body":{"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"interfaces/IDashboardRepo.html":{},"modules/LearnroomModule.html":{}}}],["dashboardresponse",{"_index":920,"title":{"classes/DashboardResponse.html":{}},"body":{"controllers/DashboardController.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{}}}],["dashboards",{"_index":3828,"title":{},"body":{"changelog.html":{}}}],["dashboarduc",{"_index":939,"title":{"injectables/DashboardUc.html":{}},"body":{"controllers/DashboardController.html":{},"injectables/DashboardUc.html":{},"modules/LearnroomModule.html":{},"overview.html":{}}}],["data",{"_index":1168,"title":{},"body":{"classes/DashboardMapper.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICollectionFilePath.html":{},"modules/InterceptorModule.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"interfaces/Options.html":{},"classes/PaginationResponse.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["data.displaycolor",{"_index":1175,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["data.group",{"_index":1176,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["data.shorttitle",{"_index":1173,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["data.title",{"_index":1171,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["data/rules",{"_index":6408,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dataaccess",{"_index":6401,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["database",{"_index":1341,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementUc.html":{},"classes/EncryptedStringType.html":{},"interfaces/GlobalConstants.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/Options.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["database.js",{"_index":3205,"title":{},"body":{"modules/ServerModule.html":{}}}],["database.module.ts",{"_index":2630,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["database.module.ts:51",{"_index":2632,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["database.module.ts:64",{"_index":2634,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["database/mongo",{"_index":2629,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["database/types.ts",{"_index":6011,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["databasemanagementconsole",{"_index":1330,"title":{"classes/DatabaseManagementConsole.html":{}},"body":{"classes/DatabaseManagementConsole.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{}}}],["databasemanagementcontroller",{"_index":1370,"title":{"controllers/DatabaseManagementController.html":{}},"body":{"controllers/DatabaseManagementController.html":{},"modules/ManagementModule.html":{}}}],["databasemanagementmodule",{"_index":1396,"title":{"modules/DatabaseManagementModule.html":{}},"body":{"modules/DatabaseManagementModule.html":{},"modules/ManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["databasemanagementservice",{"_index":1400,"title":{"injectables/DatabaseManagementService.html":{}},"body":{"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{},"overview.html":{}}}],["databasemanagementuc",{"_index":1336,"title":{"injectables/DatabaseManagementUc.html":{}},"body":{"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{},"overview.html":{}}}],["databases",{"_index":6921,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["datalayer",{"_index":6363,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["datamodel",{"_index":6375,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["datase",{"_index":6202,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["date",{"_index":378,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"classes/File.html":{},"injectables/FilesRepo.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskListResponse.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["date.now",{"_index":1709,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["date.now()@email.de",{"_index":6163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dated",{"_index":6493,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["days",{"_index":1642,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"changelog.html":{},"license.html":{}}}],["db",{"_index":1413,"title":{},"body":{"injectables/DatabaseManagementService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db/protocol",{"_index":6474,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db_password",{"_index":2025,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{}}}],["db_url",{"_index":2026,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{}}}],["db_username",{"_index":2027,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{}}}],["dbname",{"_index":6014,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["dbs",{"_index":6462,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dd",{"_index":4941,"title":{},"body":{"changelog.html":{}}}],["dd.mm.yyyy",{"_index":4845,"title":{},"body":{"changelog.html":{}}}],["dd/mm/yyyy",{"_index":4940,"title":{},"body":{"changelog.html":{}}}],["ddd",{"_index":6638,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["deadlock",{"_index":4208,"title":{},"body":{"changelog.html":{}}}],["deata",{"_index":4896,"title":{},"body":{"changelog.html":{}}}],["debug",{"_index":2219,"title":{},"body":{"interfaces/ILogger.html":{},"modules/ServerModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["debug(message",{"_index":2223,"title":{},"body":{"interfaces/ILogger.html":{}}}],["debug?(message",{"_index":2234,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["debugger",{"_index":5276,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["debugging",{"_index":3207,"title":{},"body":{"modules/ServerModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["december",{"_index":5529,"title":{},"body":{"license.html":{}}}],["decide",{"_index":2481,"title":{},"body":{"injectables/JwtStrategy.html":{},"license.html":{},"todo.html":{}}}],["deciding",{"_index":3963,"title":{},"body":{"changelog.html":{}}}],["decision",{"_index":4101,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decisions",{"_index":6705,"title":{"additional-documentation/nestjs-application/decisions.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["declare",{"_index":4723,"title":{},"body":{"changelog.html":{}}}],["declared",{"_index":606,"title":{},"body":{"classes/BusinessError.html":{}}}],["declining",{"_index":5697,"title":{},"body":{"license.html":{}}}],["decoded",{"_index":5223,"title":{},"body":{"miscellaneous/functions.html":{}}}],["decodehtmlentities",{"_index":3360,"title":{},"body":{"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"miscellaneous/functions.html":{}}}],["decorated",{"_index":2132,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["decorator",{"_index":5221,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["decorators",{"_index":346,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"classes/Directory.html":{},"classes/File.html":{},"classes/GlobalValidationPipe.html":{},"classes/Lesson.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/PatchGroupParams.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserInfoResponse.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["decouple",{"_index":6286,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decoupled",{"_index":6417,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decouples",{"_index":6428,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decrypt",{"_index":1747,"title":{},"body":{"classes/EncryptedStringType.html":{},"injectables/SymetricKeyEncryptionService.html":{}}}],["decrypt(data",{"_index":3269,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["decryptedstring",{"_index":1748,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["decryption",{"_index":3990,"title":{},"body":{"changelog.html":{}}}],["dedicated",{"_index":3944,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deemed",{"_index":5519,"title":{},"body":{"license.html":{}}}],["deeppartial",{"_index":426,"title":{},"body":{"classes/BaseFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["default",{"_index":382,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/BaseFile.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/File.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseProperties.html":{},"classes/Lesson.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"controllers/ServerController.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"classes/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskScope.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["default...what",{"_index":705,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.color",{"_index":676,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.description",{"_index":677,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.name",{"_index":679,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.schema.json",{"_index":6201,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["defaultcolumns",{"_index":1007,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"miscellaneous/variables.html":{}}}],["defaultgridreference",{"_index":1015,"title":{"classes/DefaultGridReference.html":{}},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["defaultgridreference(modelentity.id",{"_index":1210,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["defaultgridreference(new",{"_index":1288,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["defaultgridreferencemodel",{"_index":1112,"title":{"classes/DefaultGridReferenceModel.html":{}},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"classes/DefaultGridReferenceModel.html":{},"miscellaneous/variables.html":{}}}],["defaultgridreferencemodel(metadata.id",{"_index":1231,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["defaultmessage",{"_index":208,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"classes/ValidationError.html":{},"miscellaneous/variables.html":{}}}],["defaultoptions",{"_index":2663,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["defaultrows",{"_index":1009,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":886,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/FileSystemAdapter.html":{},"classes/PaginationQuery.html":{},"changelog.html":{}}}],["defaulttimeout",{"_index":3548,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["defective",{"_index":5874,"title":{},"body":{"license.html":{}}}],["defending",{"_index":5360,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":5833,"title":{},"body":{"license.html":{}}}],["define",{"_index":364,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["define(this",{"_index":434,"title":{},"body":{"classes/BaseFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["defined",{"_index":186,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/BaseFile.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/ILogger.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["defines",{"_index":6212,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["defining",{"_index":375,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["definition",{"_index":217,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["definitions",{"_index":2618,"title":{},"body":{"modules/ManagementModule.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["delay",{"_index":1617,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["delay(100",{"_index":1621,"title":{},"body":{"controllers/DelayController.html":{}}}],["delaycontroller",{"_index":1606,"title":{"controllers/DelayController.html":{}},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":1564,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["delete(':id",{"_index":2710,"title":{},"body":{"controllers/NewsController.html":{}}}],["delete(id",{"_index":2949,"title":{},"body":{"injectables/NewsUc.html":{}}}],["delete(newsid",{"_index":2709,"title":{},"body":{"controllers/NewsController.html":{}}}],["deleted",{"_index":1673,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["deletedat",{"_index":476,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"injectables/FilesRepo.html":{},"interfaces/IFileProperties.html":{}}}],["deletedcount",{"_index":1441,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["deletedid",{"_index":2751,"title":{},"body":{"controllers/NewsController.html":{}}}],["deletefile",{"_index":1877,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"injectables/FilesRepo.html":{}}}],["deletefile(file",{"_index":1878,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"injectables/FilesRepo.html":{}}}],["deletefilesconsole",{"_index":1630,"title":{"classes/DeleteFilesConsole.html":{}},"body":{"classes/DeleteFilesConsole.html":{},"modules/FilesModule.html":{}}}],["deletefilesuc",{"_index":1636,"title":{"injectables/DeleteFilesUc.html":{}},"body":{"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"modules/FilesModule.html":{},"overview.html":{}}}],["deletegroup(groupname",{"_index":114,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["deleteobjectcommand",{"_index":1881,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["deletes",{"_index":6492,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deleteuser(username",{"_index":123,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["deleting",{"_index":4298,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deletion",{"_index":1641,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"changelog.html":{}}}],["deletioncommand",{"_index":1898,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["delivered",{"_index":6745,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["demands",{"_index":6453,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["denied",{"_index":5667,"title":{},"body":{"license.html":{}}}],["denominated",{"_index":5796,"title":{},"body":{"license.html":{}}}],["depend",{"_index":6674,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dependecy",{"_index":4679,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":259,"title":{"dependencies.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dependency",{"_index":3791,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dependent",{"_index":3815,"title":{},"body":{"changelog.html":{}}}],["depending",{"_index":1938,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["depends",{"_index":1925,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["deploy",{"_index":4125,"title":{},"body":{"changelog.html":{}}}],["deployed",{"_index":3890,"title":{},"body":{"changelog.html":{}}}],["deployment",{"_index":3671,"title":{},"body":{"changelog.html":{}}}],["deployments",{"_index":4123,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":1850,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"index.html":{}}}],["deprecates",{"_index":4539,"title":{},"body":{"changelog.html":{}}}],["deprive",{"_index":5804,"title":{},"body":{"license.html":{}}}],["depseudonymization",{"_index":4364,"title":{},"body":{"changelog.html":{}}}],["desc",{"_index":2203,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/enumerations.html":{}}}],["describe",{"_index":6509,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["describe(\"course",{"_index":6764,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["describe(\"when",{"_index":6765,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["describe('get",{"_index":6898,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["described",{"_index":6323,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["description",{"_index":215,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/BaseFactory.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"modules/FeathersModule.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"modules/InterceptorModule.html":{},"injectables/JwtValidationAdapter.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PatchGroupParams.html":{},"classes/SchoolInfoResponse.html":{},"classes/ServerConsole.html":{},"classes/SubmissionFactory.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskWithStatusVo.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoResponse.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["descriptions",{"_index":2392,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["descriptive",{"_index":6305,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deserialize",{"_index":561,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["deserialize(bsondocuments",{"_index":563,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["deserializes",{"_index":565,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["design",{"_index":6298,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["designated",{"_index":5609,"title":{},"body":{"license.html":{}}}],["designed",{"_index":5326,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["designing",{"_index":6497,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["designwe",{"_index":6296,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["destroyed",{"_index":6531,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail",{"_index":5856,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail.response",{"_index":225,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["detail.response.ts",{"_index":3639,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["detail.response.ts:1",{"_index":3641,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["detailed",{"_index":3722,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["details",{"_index":179,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ValidationError.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["detect",{"_index":1550,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"miscellaneous/variables.html":{}}}],["detection",{"_index":3876,"title":{},"body":{"changelog.html":{}}}],["detectleaks",{"_index":6123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detectopenhandles",{"_index":6122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["determine",{"_index":4464,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["determining",{"_index":5640,"title":{},"body":{"license.html":{}}}],["deubg",{"_index":6932,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["dev",{"_index":6225,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["develop",{"_index":5242,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["developer",{"_index":6754,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["developers",{"_index":4013,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["development",{"_index":4516,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["device",{"_index":4162,"title":{},"body":{"changelog.html":{}}}],["dfsdfsf",{"_index":5303,"title":{},"body":{"index.html":{}}}],["di",{"_index":6573,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dictionary",{"_index":2607,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{}}}],["didnt",{"_index":1116,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["die",{"_index":4043,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["diff",{"_index":5141,"title":{},"body":{"dependencies.html":{}}}],["diffenrent",{"_index":5980,"title":{},"body":{"todo.html":{}}}],["differ",{"_index":5855,"title":{},"body":{"license.html":{}}}],["different",{"_index":2896,"title":{},"body":{"injectables/NewsRepo.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["differently",{"_index":5689,"title":{},"body":{"license.html":{}}}],["digits",{"_index":4142,"title":{},"body":{"changelog.html":{}}}],["dir",{"_index":1475,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["direct",{"_index":2582,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["direction",{"_index":5506,"title":{},"body":{"license.html":{}}}],["directions",{"_index":5614,"title":{},"body":{"license.html":{}}}],["directly",{"_index":5409,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["directory",{"_index":499,"title":{"classes/Directory.html":{}},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/IFileProperties.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["directoryfactory",{"_index":6043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dirnameprefix",{"_index":1920,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["dirpath",{"_index":1965,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["disable",{"_index":44,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"classes/CourseNews.html":{},"injectables/DeleteFilesUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"modules/ManagementModule.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["disabled",{"_index":4515,"title":{},"body":{"changelog.html":{}}}],["disablestudentteamcreation",{"_index":5010,"title":{},"body":{"changelog.html":{}}}],["disclaim",{"_index":5539,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":5866,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":5687,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":4983,"title":{},"body":{"changelog.html":{}}}],["disconnected",{"_index":4812,"title":{},"body":{"changelog.html":{}}}],["discover",{"_index":6641,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovered",{"_index":6649,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovery",{"_index":358,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"todo.html":{}}}],["discriminatorcolumn",{"_index":496,"title":{},"body":{"classes/BaseFile.html":{},"classes/CourseNews.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["discriminatorvalue",{"_index":498,"title":{},"body":{"classes/BaseFile.html":{},"classes/CourseNews.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["discriminatory",{"_index":5819,"title":{},"body":{"license.html":{}}}],["display",{"_index":3737,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["displayat",{"_index":772,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"miscellaneous/variables.html":{}}}],["displaycolor",{"_index":1012,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["displayed",{"_index":885,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{},"license.html":{}}}],["displays",{"_index":5432,"title":{},"body":{"license.html":{}}}],["disposable",{"_index":4768,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["dist",{"_index":6217,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["distinguished",{"_index":6775,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["distinguishing",{"_index":5859,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":5319,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":5911,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":5822,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":5387,"title":{},"body":{"license.html":{}}}],["divide",{"_index":6347,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["divides",{"_index":6325,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dn",{"_index":4382,"title":{},"body":{"changelog.html":{}}}],["docker",{"_index":3694,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["docs",{"_index":5968,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["docu",{"_index":4571,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":878,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"injectables/NewsRepo.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["documentation",{"_index":4357,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["documentbuilder",{"_index":6134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documented",{"_index":3652,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["documents",{"_index":566,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/NewsRepo.html":{},"changelog.html":{}}}],["doe",{"_index":6192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["doesn't",{"_index":2652,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["doesnt",{"_index":6907,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["doing",{"_index":6377,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["domain",{"_index":3509,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"injectables/TaskUC.html":{},"injectables/UserUC.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["domains",{"_index":5107,"title":{},"body":{"dependencies.html":{}}}],["don't",{"_index":373,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/TaskScope.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["done",{"_index":5295,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dont",{"_index":3719,"title":{},"body":{"changelog.html":{}}}],["dos",{"_index":4554,"title":{},"body":{"changelog.html":{}}}],["dosomethingcrazy",{"_index":6782,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy(x,y,z",{"_index":6787,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy(x,y,z).catch(err",{"_index":6801,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy(x,y,z).then(result",{"_index":6796,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazysync(wrong",{"_index":6804,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["doubtful",{"_index":5642,"title":{},"body":{"license.html":{}}}],["down",{"_index":6748,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["downstream",{"_index":5749,"title":{},"body":{"license.html":{}}}],["draft",{"_index":3351,"title":{},"body":{"classes/TaskFactory.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["draft(isdraft",{"_index":3352,"title":{},"body":{"classes/TaskFactory.html":{}}}],["drafts",{"_index":3762,"title":{},"body":{"changelog.html":{}}}],["driven",{"_index":6637,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["driver",{"_index":6013,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["drop/create",{"_index":1561,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["dropcollection",{"_index":1408,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["dropcollection(collectionname",{"_index":1421,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["dropdown",{"_index":4146,"title":{},"body":{"changelog.html":{}}}],["dry",{"_index":6666,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dto",{"_index":876,"title":{},"body":{"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardMapper.html":{},"classes/GlobalValidationPipe.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/PatchGroupParams.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoMapper.html":{},"miscellaneous/functions.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dto's",{"_index":6554,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dto.availabledate",{"_index":3369,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.content",{"_index":2810,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.coursename",{"_index":3383,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.createdat",{"_index":2831,"title":{},"body":{"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.creator",{"_index":2826,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.description",{"_index":3387,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.displayat",{"_index":2812,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.displaycolor",{"_index":3385,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.duedate",{"_index":3371,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.firstname",{"_index":3066,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{}}}],["dto.gridelements",{"_index":1163,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["dto.id",{"_index":1161,"title":{},"body":{"classes/DashboardMapper.html":{},"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/UserInfoMapper.html":{}}}],["dto.lastname",{"_index":3068,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{}}}],["dto.name",{"_index":3132,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.permissions",{"_index":2835,"title":{},"body":{"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{}}}],["dto.roles",{"_index":3074,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["dto.school",{"_index":2824,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.schoolid",{"_index":3072,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["dto.source",{"_index":2814,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.sourcedescription",{"_index":2816,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.status",{"_index":3375,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.target",{"_index":2822,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.targetid",{"_index":2818,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.targetmodel",{"_index":2820,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.title",{"_index":2808,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.unpublished",{"_index":2839,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.updatedat",{"_index":2833,"title":{},"body":{"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.updater",{"_index":2829,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto/api",{"_index":2048,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["dto/error.response",{"_index":2047,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["dto/resolveduser.dto",{"_index":3588,"title":{},"body":{"controllers/UserController.html":{}}}],["dtolist",{"_index":2743,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["dtos",{"_index":2116,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dtos/entities",{"_index":6143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["due",{"_index":4865,"title":{},"body":{"changelog.html":{}}}],["duedate",{"_index":2306,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{}}}],["dummy",{"_index":3830,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["duplicate",{"_index":4374,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["duplicated",{"_index":4316,"title":{},"body":{"changelog.html":{}}}],["duplicating",{"_index":4892,"title":{},"body":{"changelog.html":{}}}],["duplication",{"_index":372,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["duplications",{"_index":4244,"title":{},"body":{"changelog.html":{}}}],["durable",{"_index":5592,"title":{},"body":{"license.html":{}}}],["duration",{"_index":1694,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["durationlogginginterceptor",{"_index":1691,"title":{"injectables/DurationLoggingInterceptor.html":{}},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["during",{"_index":3859,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dwelling",{"_index":5639,"title":{},"body":{"license.html":{}}}],["dynamically",{"_index":5478,"title":{},"body":{"license.html":{}}}],["dynamicmodule",{"_index":1756,"title":{},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/RocketChatModule.html":{},"miscellaneous/variables.html":{}}}],["e",{"_index":1224,"title":{},"body":{"injectables/DashboardModelMapper.html":{},"classes/GlobalErrorFilter.html":{},"classes/RocketChatError.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["e.g",{"_index":361,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["e.property",{"_index":2097,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["e.response.data",{"_index":64,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["e.response.data.errortype",{"_index":66,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["e.response.statuscode",{"_index":60,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["e.value",{"_index":2098,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["e2e",{"_index":2860,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["each",{"_index":4445,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["earlier",{"_index":5404,"title":{},"body":{"license.html":{}}}],["easier",{"_index":6290,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["eathers",{"_index":1840,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["edit",{"_index":787,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{}}}],["editable",{"_index":4236,"title":{},"body":{"changelog.html":{}}}],["editor",{"_index":4905,"title":{},"body":{"changelog.html":{}}}],["edu",{"_index":4136,"title":{},"body":{"changelog.html":{}}}],["edusharing",{"_index":3992,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":5894,"title":{},"body":{"license.html":{}}}],["effected",{"_index":5536,"title":{},"body":{"license.html":{}}}],["effective",{"_index":5520,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":5909,"title":{},"body":{"license.html":{}}}],["effects",{"_index":6379,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["effortless",{"_index":6747,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["efforts",{"_index":5764,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":5912,"title":{},"body":{"license.html":{}}}],["element",{"_index":997,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"injectables/DashboardModelMapper.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"classes/PatchGroupParams.html":{},"changelog.html":{}}}],["element.gridelement",{"_index":1071,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["element.removereference(position.groupindex",{"_index":1090,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["elementdto",{"_index":1165,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.displaycolor",{"_index":1174,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.groupelements",{"_index":1177,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.id",{"_index":1166,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.shorttitle",{"_index":1172,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.title",{"_index":1170,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.xposition",{"_index":1179,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.yposition",{"_index":1180,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementmodel",{"_index":1243,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["elementmodel.dashboard",{"_index":1256,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["elementmodel.references",{"_index":1254,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["elementmodel.title",{"_index":1250,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["elementmodel.xpos",{"_index":1245,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["elementmodel.ypos",{"_index":1247,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["elements",{"_index":1151,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"injectables/NewsRepo.html":{},"classes/PaginationQuery.html":{},"changelog.html":{}}}],["elementtomove",{"_index":1077,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["elementtomove.getreferences",{"_index":1086,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["elementtomove.isgroup",{"_index":1085,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["elementwithposition",{"_index":1178,"title":{},"body":{"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{}}}],["elementwithposition.gridelement.getcontent",{"_index":1169,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementwithposition.gridelement.getid",{"_index":1167,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementwithposition.pos.x",{"_index":1246,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["elementwithposition.pos.y",{"_index":1248,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["eligible",{"_index":4912,"title":{},"body":{"changelog.html":{}}}],["em",{"_index":530,"title":{},"body":{"injectables/BaseRepo.html":{},"classes/Course.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementService.html":{},"injectables/FilesRepo.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"injectables/LessonRepo.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["em.flush",{"_index":6917,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["em.getconnection('write').listcollections",{"_index":6094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["em.getconnection().deletemany(collectionname",{"_index":6096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["em.nativedelete(news",{"_index":6892,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["email",{"_index":120,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"interfaces/IUserProperties.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/User.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["email/username",{"_index":4835,"title":{},"body":{"changelog.html":{}}}],["emails",{"_index":4132,"title":{},"body":{"changelog.html":{}}}],["embed",{"_index":6650,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["embedded",{"_index":6928,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["embodied",{"_index":5588,"title":{},"body":{"license.html":{}}}],["employer",{"_index":5918,"title":{},"body":{"license.html":{}}}],["empty",{"_index":1742,"title":{},"body":{"classes/EncryptedStringType.html":{},"injectables/FileSystemAdapter.html":{},"classes/NewsScope.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["emptyresultquery",{"_index":2927,"title":{},"body":{"classes/NewsScope.html":{},"classes/Scope.html":{},"miscellaneous/variables.html":{}}}],["emptyresultquerytype",{"_index":871,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{},"miscellaneous/typealiases.html":{}}}],["en",{"_index":6667,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enable",{"_index":2121,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/NewsModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["enabled",{"_index":2118,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["enabled/disabled",{"_index":4925,"title":{},"body":{"changelog.html":{}}}],["enableimplicitconversion",{"_index":2128,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["enableopenapidocs",{"_index":6047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enables",{"_index":5424,"title":{},"body":{"license.html":{}}}],["enabling",{"_index":4702,"title":{},"body":{"changelog.html":{}}}],["encapsulate",{"_index":6354,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulated",{"_index":6388,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulates",{"_index":6327,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulation",{"_index":6365,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encoded",{"_index":1939,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"miscellaneous/functions.html":{}}}],["encoding",{"_index":1903,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"miscellaneous/functions.html":{}}}],["encodings",{"_index":5225,"title":{},"body":{"miscellaneous/functions.html":{}}}],["encouraged",{"_index":5368,"title":{},"body":{"license.html":{}}}],["encrypt",{"_index":1717,"title":{},"body":{"classes/EncryptedStringType.html":{},"injectables/SymetricKeyEncryptionService.html":{}}}],["encrypt(data",{"_index":3271,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["encryptedstring",{"_index":1745,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["encryptedstringtype",{"_index":1713,"title":{"classes/EncryptedStringType.html":{}},"body":{"classes/EncryptedStringType.html":{},"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{}}}],["encryption",{"_index":5043,"title":{},"body":{"changelog.html":{}}}],["encryption.service",{"_index":1757,"title":{},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{}}}],["encryptionmodule",{"_index":1750,"title":{"modules/EncryptionModule.html":{}},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules.html":{}}}],["encryptionmoduleoptions",{"_index":1754,"title":{"interfaces/EncryptionModuleOptions.html":{}},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{}}}],["encryptionservice",{"_index":1719,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["end",{"_index":1586,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["end2end",{"_index":6937,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["endings",{"_index":6943,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["endpoint",{"_index":1886,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["endpoints",{"_index":4488,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["endpointurl",{"_index":2250,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{},"miscellaneous/variables.html":{}}}],["enforce",{"_index":3528,"title":{},"body":{"controllers/TeamNewsController.html":{},"license.html":{}}}],["enforced",{"_index":6639,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enforcing",{"_index":5541,"title":{},"body":{"license.html":{}}}],["engine",{"_index":3685,"title":{},"body":{"changelog.html":{}}}],["english",{"_index":1296,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["enough",{"_index":6406,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["enqueuing",{"_index":4998,"title":{},"body":{"changelog.html":{}}}],["enrichment",{"_index":6409,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ensure",{"_index":311,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/NewsScope.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ensures",{"_index":5256,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["ensuretokeniswhitelisted",{"_index":2503,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["entered",{"_index":5829,"title":{},"body":{"license.html":{}}}],["entire",{"_index":5563,"title":{},"body":{"license.html":{}}}],["entirely",{"_index":5845,"title":{},"body":{"license.html":{}}}],["entites",{"_index":6407,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entities",{"_index":320,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"modules/ServerModule.html":{},"injectables/StorageProviderRepo.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entities.foreach((entity",{"_index":558,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["entities.map((n",{"_index":552,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["entities.transformer.ts",{"_index":5215,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entities.ts",{"_index":6025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entitiyids",{"_index":339,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entity",{"_index":313,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/BaseFile.html":{},"injectables/BaseRepo.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"classes/File.html":{},"injectables/FilesRepo.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfoResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entity.getgrid().map((elementwithposition",{"_index":1262,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["entity.getid",{"_index":1259,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["entity.ts",{"_index":6553,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["entity/course.entity",{"_index":2165,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["entity/role.entity",{"_index":2183,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{}}}],["entity/school.entity",{"_index":2166,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["entity/team.entity",{"_index":2167,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["entityclass",{"_index":409,"title":{},"body":{"classes/BaseFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["entityid",{"_index":305,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/Course.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"injectables/FeathersAuthProvider.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"classes/SchoolNews.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamNews.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["entityids",{"_index":3330,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["entitymanager",{"_index":528,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementService.html":{},"injectables/FilesRepo.html":{},"interfaces/IDashboardRepo.html":{},"injectables/LessonRepo.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["entityname",{"_index":2621,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{}}}],["entitypermissions",{"_index":333,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entitypermissions.includes(p",{"_index":337,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entityschema",{"_index":370,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["entries",{"_index":3841,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entry",{"_index":2476,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/NewsController.html":{}}}],["enum",{"_index":798,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/IFindOptions.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{}}}],["enumeration",{"_index":4920,"title":{},"body":{"changelog.html":{}}}],["enumerations",{"_index":5201,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumname",{"_index":897,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{}}}],["env",{"_index":3869,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["env/config",{"_index":5945,"title":{},"body":{"todo.html":{}}}],["environment",{"_index":4517,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["environments",{"_index":4159,"title":{},"body":{"changelog.html":{}}}],["eol",{"_index":1911,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["eq",{"_index":2541,"title":{},"body":{"classes/LessonScope.html":{},"classes/TaskScope.html":{}}}],["equal",{"_index":5047,"title":{},"body":{"changelog.html":{}}}],["equivalent",{"_index":5497,"title":{},"body":{"license.html":{}}}],["err",{"_index":1681,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"injectables/TimeoutInterceptor.html":{}}}],["err.code",{"_index":6802,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["error",{"_index":34,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/CoreModule.html":{},"injectables/DatabaseManagementUc.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ILogger.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["error('rocket",{"_index":169,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["error(message",{"_index":2225,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["error.filter",{"_index":1766,"title":{},"body":{"modules/ErrorModule.html":{}}}],["error.filter.ts",{"_index":2033,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["error.filter.ts:119",{"_index":2038,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:122",{"_index":2042,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:130",{"_index":2044,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.getresponse",{"_index":2069,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.interface.ts",{"_index":1821,"title":{},"body":{"interfaces/FeathersError.html":{}}}],["error.response",{"_index":224,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{}}}],["error.response.ts",{"_index":214,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.response.ts:23",{"_index":222,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.response.ts:8",{"_index":220,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.stack",{"_index":2101,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["error.validationerrors.map",{"_index":2095,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["error/error.module",{"_index":661,"title":{},"body":{"modules/CoreModule.html":{}}}],["errorhandler",{"_index":6459,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["errormodule",{"_index":641,"title":{"modules/ErrorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules.html":{},"overview.html":{}}}],["errormsg",{"_index":2094,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errorresponse",{"_index":200,"title":{"classes/ErrorResponse.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/ValidationError.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["errorresponse(snaketype",{"_index":2079,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["errorresponse(this.type",{"_index":613,"title":{},"body":{"classes/BusinessError.html":{}}}],["errorresponse(type",{"_index":2066,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":218,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["errortype",{"_index":41,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["errros",{"_index":4607,"title":{},"body":{"changelog.html":{}}}],["es6",{"_index":5109,"title":{},"body":{"dependencies.html":{}}}],["escaped",{"_index":5231,"title":{},"body":{"miscellaneous/functions.html":{}}}],["eslint",{"_index":43,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"classes/CourseNews.html":{},"injectables/DeleteFilesUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"modules/ManagementModule.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["eslint/dot",{"_index":470,"title":{},"body":{"classes/BaseFactory.html":{}}}],["eslint/no",{"_index":48,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"classes/News.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["eslint/restrict",{"_index":137,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/GlobalErrorFilter.html":{},"modules/ManagementModule.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["eslintrc.js",{"_index":6257,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["esmoduleinterop",{"_index":3725,"title":{},"body":{"changelog.html":{}}}],["especially",{"_index":6337,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["essential",{"_index":5465,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["establish",{"_index":6317,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["established",{"_index":3321,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"changelog.html":{}}}],["etc",{"_index":4993,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["evaluate",{"_index":6736,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["evaluated",{"_index":6737,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["even",{"_index":4859,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["event",{"_index":3879,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["events",{"_index":4108,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["eventual",{"_index":4347,"title":{},"body":{"changelog.html":{}}}],["eventually",{"_index":4405,"title":{},"body":{"changelog.html":{}}}],["everyone",{"_index":5317,"title":{},"body":{"license.html":{}}}],["everything",{"_index":4437,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["everywhere",{"_index":2484,"title":{},"body":{"injectables/JwtStrategy.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exact",{"_index":5403,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["example",{"_index":5476,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["examplecolor",{"_index":1053,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["examples",{"_index":5234,"title":{},"body":{"miscellaneous/functions.html":{}}}],["exampletitle",{"_index":1051,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["exceeds",{"_index":4752,"title":{},"body":{"changelog.html":{}}}],["except",{"_index":4056,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["exception",{"_index":1763,"title":{},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exception.constructor.name.replace('exception",{"_index":2063,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.getstatus",{"_index":2058,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.message",{"_index":2060,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.stack",{"_index":2090,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptionfactory",{"_index":2137,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["exceptionfilter",{"_index":2034,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["exceptionname",{"_index":2062,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptions",{"_index":2056,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exchange",{"_index":2574,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ServerModule.html":{}}}],["exchangeable",{"_index":6303,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exchanges",{"_index":2580,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["excluded",{"_index":5629,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":4288,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["exclusion",{"_index":4602,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["exclusive",{"_index":5789,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":5500,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":5838,"title":{},"body":{"license.html":{}}}],["executable",{"_index":5459,"title":{},"body":{"license.html":{}}}],["execute",{"_index":2861,"title":{},"body":{"modules/NewsModule.html":{},"classes/TestBootstrapConsole.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["execute/rollback",{"_index":6508,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["executed",{"_index":2866,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["executes",{"_index":6220,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["executing",{"_index":5415,"title":{},"body":{"license.html":{}}}],["execution",{"_index":3544,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["executioncontext",{"_index":1698,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exercise",{"_index":5765,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":5537,"title":{},"body":{"license.html":{}}}],["exist",{"_index":1949,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["existing",{"_index":1239,"title":{},"body":{"injectables/DashboardModelMapper.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/JwtConstants.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"interfaces/Options.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["existingreference",{"_index":1228,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["existinguser",{"_index":6699,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["exists",{"_index":1568,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/JwtStrategy.html":{},"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["existssync",{"_index":1955,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["existssync(folderpath",{"_index":1963,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["exit",{"_index":3920,"title":{},"body":{"changelog.html":{}}}],["exp",{"_index":2436,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["expect",{"_index":6370,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["expect(code).to",{"_index":6803,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(data.length).tobe(0",{"_index":6902,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(dosomethingcrazy(x,y,z)).to",{"_index":6785,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(dosomethingcrazysync(wrong",{"_index":6806,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(findallspy).tohavebeencalledwith(...expectedparams",{"_index":6863,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(result).to",{"_index":6788,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(service.findonebyidforuser(anothernewsid",{"_index":6868,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(total).tobe(0",{"_index":6901,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expectation",{"_index":6779,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expected",{"_index":5646,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["expectedparams",{"_index":6862,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expecting",{"_index":6800,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expects",{"_index":4624,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["expert",{"_index":4992,"title":{},"body":{"changelog.html":{}}}],["experts",{"_index":6642,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["expexting",{"_index":6792,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expiration",{"_index":2454,"title":{},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtValidationAdapter.html":{},"changelog.html":{}}}],["expiresin",{"_index":2448,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["explicit",{"_index":451,"title":{},"body":{"classes/BaseFactory.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TimeoutInterceptor.html":{}}}],["explicitly",{"_index":55,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"license.html":{}}}],["export",{"_index":22,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/BaseFile.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["exportcollection",{"_index":1374,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["exportcollection(@param('collectionname",{"_index":1394,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["exportcollection(collectionname",{"_index":1377,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["exportcollections",{"_index":1333,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{}}}],["exportcollections(options",{"_index":1339,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["exportcollectionstofilesystem",{"_index":1456,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["exportcollectionstofilesystem(collections",{"_index":1467,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["exported",{"_index":1473,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exportedcollections",{"_index":1580,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["exportedcollections.push(`${collectionname}:${sortedbsondocuments.length",{"_index":1597,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["exporting",{"_index":4630,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exports",{"_index":292,"title":{},"body":{"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementUc.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"interfaces/ICollectionFilePath.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/RocketChatModule.html":{},"modules/UserModule.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["expose",{"_index":3868,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposed",{"_index":6361,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposing",{"_index":6425,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["express",{"_index":1848,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["expressed",{"_index":5868,"title":{},"body":{"license.html":{}}}],["expressions",{"_index":139,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/GlobalErrorFilter.html":{},"modules/ManagementModule.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["expressly",{"_index":5715,"title":{},"body":{"license.html":{}}}],["extend",{"_index":413,"title":{},"body":{"classes/BaseFactory.html":{},"classes/GlobalValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["extended",{"_index":567,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["extending",{"_index":6085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extends",{"_index":33,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"classes/BaseFile.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"classes/EncryptedStringType.html":{},"interfaces/FeathersError.html":{},"classes/File.html":{},"injectables/FilesRepo.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/PlainTextMailContent.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"classes/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"classes/User.html":{},"classes/ValidationError.html":{},"additional-documentation/nestjs-application.html":{}}}],["extensions",{"_index":5574,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["extent",{"_index":5434,"title":{},"body":{"license.html":{}}}],["external",{"_index":4280,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["externalauthconfig",{"_index":2427,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["externalid",{"_index":773,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["externally",{"_index":4237,"title":{},"body":{"changelog.html":{}}}],["externaluseridentifier",{"_index":2401,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["externaluseridentifier'})@unique",{"_index":3575,"title":{},"body":{"classes/User.html":{}}}],["extract",{"_index":6412,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["extracting",{"_index":2136,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["extractjwt",{"_index":2462,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":2470,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extracts",{"_index":6519,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["extremely",{"_index":4578,"title":{},"body":{"changelog.html":{}}}],["f",{"_index":432,"title":{},"body":{"classes/BaseFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["f0",{"_index":891,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["f23f76",{"_index":1023,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["facade",{"_index":4503,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["facilitate",{"_index":6762,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["facilitating",{"_index":5851,"title":{},"body":{"license.html":{}}}],["facilities",{"_index":5501,"title":{},"body":{"license.html":{}}}],["factories",{"_index":3675,"title":{},"body":{"changelog.html":{}}}],["factory",{"_index":391,"title":{},"body":{"classes/BaseFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["factory.define",{"_index":439,"title":{},"body":{"classes/BaseFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["factory.define(generator",{"_index":454,"title":{},"body":{"classes/BaseFactory.html":{}}}],["fail",{"_index":4252,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["failed",{"_index":209,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["failing",{"_index":6938,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["failingfileids",{"_index":1674,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["failingfileids.length",{"_index":1684,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["failingfileids.push(file.id",{"_index":1682,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["fails",{"_index":4286,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["failure",{"_index":5889,"title":{},"body":{"license.html":{}}}],["fair",{"_index":5496,"title":{},"body":{"license.html":{}}}],["fake",{"_index":1018,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["fallback",{"_index":4498,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":500,"title":{},"body":{"classes/BaseFile.html":{},"classes/DatabaseManagementConsole.html":{},"classes/Directory.html":{},"injectables/FeathersAuthProvider.html":{},"classes/File.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"interfaces/Options.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["family",{"_index":5634,"title":{},"body":{"license.html":{}}}],["fantasy",{"_index":5288,"title":{},"body":{"index.html":{}}}],["fashion",{"_index":5401,"title":{},"body":{"license.html":{}}}],["fast",{"_index":6661,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["favicon",{"_index":5180,"title":{},"body":{"dependencies.html":{}}}],["favor",{"_index":5643,"title":{},"body":{"license.html":{}}}],["feathers",{"_index":295,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/JwtConstants.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathers/express",{"_index":6434,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["feathersapp",{"_index":1856,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["feathersapp.service(path",{"_index":1867,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["feathersauthprovider",{"_index":290,"title":{"injectables/FeathersAuthProvider.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["featherserror",{"_index":1819,"title":{"interfaces/FeathersError.html":{}},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["featherserror)?.type",{"_index":2050,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["feathersexpress",{"_index":1863,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["feathersjs/authentication",{"_index":5056,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/configuration",{"_index":5058,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/errors",{"_index":5059,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/express",{"_index":1849,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"dependencies.html":{}}}],["feathersjs/feathers",{"_index":5060,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/socketio",{"_index":5061,"title":{},"body":{"dependencies.html":{}}}],["feathersmodule",{"_index":288,"title":{"modules/FeathersModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/FeathersModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersservice",{"_index":1837,"title":{"interfaces/FeathersService.html":{}},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["feathersserviceparams",{"_index":1843,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feathersserviceprovider",{"_index":1788,"title":{"injectables/FeathersServiceProvider.html":{}},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersserviceresponse",{"_index":1851,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feature",{"_index":3853,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["feature/sc",{"_index":5287,"title":{},"body":{"index.html":{}}}],["feature_multiple_s3_providers_enabled=true",{"_index":5039,"title":{},"body":{"changelog.html":{}}}],["feature_prometheus_enabled",{"_index":4480,"title":{},"body":{"changelog.html":{}}}],["feature_show_version_enabled",{"_index":4560,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":6266,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["federal",{"_index":4457,"title":{},"body":{"changelog.html":{}}}],["fee",{"_index":5556,"title":{},"body":{"license.html":{}}}],["feedback",{"_index":4952,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":6278,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["fetch",{"_index":6675,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["fetching",{"_index":4523,"title":{},"body":{"changelog.html":{}}}],["ffffff",{"_index":6149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["field",{"_index":3642,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["fieldname",{"_index":502,"title":{},"body":{"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["fields",{"_index":5937,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["figure",{"_index":6320,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["file",{"_index":5,"title":{"classes/File.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/BaseFile.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["file.collectionname",{"_index":1549,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["file.entity",{"_index":2272,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["filefactory",{"_index":6049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fileids",{"_index":2283,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["filename",{"_index":1530,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application.html":{}}}],["filename.split('.')[0",{"_index":1531,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["filenames",{"_index":1526,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{}}}],["filenames.map((filename",{"_index":1528,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["filepath",{"_index":1511,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{}}}],["files",{"_index":495,"title":{},"body":{"classes/BaseFile.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IFileProperties.html":{},"interfaces/Options.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["files.console",{"_index":1990,"title":{},"body":{"modules/FilesModule.html":{}}}],["files.console.ts",{"_index":1632,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["files.console.ts:17",{"_index":1644,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["files.console.ts:7",{"_index":1637,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["files.filter((file",{"_index":2017,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["files.uc.ts",{"_index":1657,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["files.uc.ts:15",{"_index":1662,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["files.uc.ts:6",{"_index":1660,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["filesforcleanupquery",{"_index":2013,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["filesfordeletion",{"_index":1668,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["filesfordeletion.length",{"_index":1671,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["filesmodule",{"_index":1982,"title":{"modules/FilesModule.html":{}},"body":{"modules/FilesModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["filesrepo",{"_index":1659,"title":{"injectables/FilesRepo.html":{}},"body":{"injectables/DeleteFilesUc.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"overview.html":{}}}],["filestorage",{"_index":3717,"title":{},"body":{"changelog.html":{}}}],["filestorage/security",{"_index":3901,"title":{},"body":{"changelog.html":{}}}],["filestorageadapter",{"_index":1875,"title":{"injectables/FileStorageAdapter.html":{}},"body":{"injectables/FileStorageAdapter.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"overview.html":{}}}],["filesystem",{"_index":1343,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{}}}],["filesystemadapter",{"_index":1465,"title":{"injectables/FileSystemAdapter.html":{}},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"interfaces/ICollectionFilePath.html":{},"overview.html":{}}}],["filesystemmodule",{"_index":1976,"title":{"modules/FileSystemModule.html":{}},"body":{"modules/FileSystemModule.html":{},"modules/ManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["filter",{"_index":1357,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"modules/ErrorModule.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["filter((submission",{"_index":2354,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["filter.query.ts",{"_index":2754,"title":{},"body":{"classes/NewsFilterQuery.html":{},"miscellaneous/variables.html":{}}}],["filter.query.ts:17",{"_index":2760,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:25",{"_index":2758,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:33",{"_index":2763,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.ts",{"_index":2938,"title":{},"body":{"interfaces/NewsTargetFilter.html":{}}}],["filter/global",{"_index":1765,"title":{},"body":{"modules/ErrorModule.html":{}}}],["filtered",{"_index":1494,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{}}}],["filteredcollectionswithfilepaths",{"_index":1541,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["filteredcollectionswithfilepaths.length",{"_index":1544,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["filterquery",{"_index":867,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{}}}],["filters",{"_index":1493,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/LessonRepo.html":{},"classes/NewsFilterQuery.html":{},"injectables/TaskRepo.html":{}}}],["filters?.afterduedateornone",{"_index":3421,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["filters?.closed",{"_index":3417,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["filters?.draft",{"_index":3419,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["filters?.hidden",{"_index":2529,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["final",{"_index":6706,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["finally",{"_index":5725,"title":{},"body":{"license.html":{}}}],["find",{"_index":1117,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["find(params",{"_index":1842,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["findall",{"_index":2704,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["findall(currentuser",{"_index":2713,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{}}}],["findall(targets",{"_index":2870,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findallbycourseids",{"_index":2215,"title":{},"body":{"interfaces/ILessonProperties.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{}}}],["findallbycourseids'})@property",{"_index":2518,"title":{},"body":{"classes/Lesson.html":{}}}],["findallbycourseids(courseids",{"_index":2524,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["findallbyparentids",{"_index":3396,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallbyparentids(parentids",{"_index":3399,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallbyparentids_findallforstudent",{"_index":2319,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["findallbyparentids_findallforteacher",{"_index":2325,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["findallbyparentids_findallforteacher'})@manytomany('user",{"_index":3292,"title":{},"body":{"classes/Task.html":{}}}],["findallbytaskids",{"_index":3254,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["findallbytaskids(taskids",{"_index":3258,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["findallbyuserid",{"_index":839,"title":{},"body":{"injectables/CourseRepo.html":{},"injectables/SubmissionRepo.html":{}}}],["findallbyuserid(userid",{"_index":841,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/SubmissionRepo.html":{}}}],["findallfilesforcleanup",{"_index":1994,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["findallfilesforcleanup(cleanupthreshold",{"_index":1998,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["findallforstudent",{"_index":717,"title":{},"body":{"classes/Course.html":{},"injectables/CourseRepo.html":{},"interfaces/ICourseProperties.html":{},"injectables/TaskUC.html":{}}}],["findallforstudent'})@manytomany('user",{"_index":686,"title":{},"body":{"classes/Course.html":{}}}],["findallforstudent(userid",{"_index":843,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/TaskUC.html":{}}}],["findallforteacher",{"_index":714,"title":{},"body":{"classes/Course.html":{},"injectables/CourseRepo.html":{},"interfaces/ICourseProperties.html":{},"injectables/TaskUC.html":{}}}],["findallforteacher(userid",{"_index":845,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/TaskUC.html":{}}}],["findallforteam",{"_index":3521,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["findallforteam(teamid",{"_index":3522,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["findallforuser",{"_index":2940,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallforuser(userid",{"_index":2951,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallspy",{"_index":6859,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["findbycourseids",{"_index":759,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["findbycourseids(courseids",{"_index":761,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["findbyid",{"_index":3096,"title":{},"body":{"injectables/RoleRepo.html":{},"injectables/UserRepo.html":{}}}],["findbyid(id",{"_index":3100,"title":{},"body":{"injectables/RoleRepo.html":{},"injectables/UserRepo.html":{}}}],["findbyname",{"_index":3097,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["findbyname(name",{"_index":3102,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["finddocumentsofcollection",{"_index":1409,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["finddocumentsofcollection(collectionname",{"_index":1423,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["findforuser",{"_index":916,"title":{},"body":{"controllers/DashboardController.html":{}}}],["finding",{"_index":2172,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["findnewsandcount",{"_index":2868,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findnewsandcount(query",{"_index":2873,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findone",{"_index":2705,"title":{},"body":{"controllers/NewsController.html":{}}}],["findone(newsid",{"_index":2719,"title":{},"body":{"controllers/NewsController.html":{}}}],["findoneandupdate",{"_index":4375,"title":{},"body":{"changelog.html":{}}}],["findonebyid",{"_index":2869,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["findonebyid(id",{"_index":2877,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["findonebyidforuser",{"_index":2941,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findonebyidforuser(id",{"_index":2957,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findoneorfailhandler",{"_index":2620,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{}}}],["findtasksandcount",{"_index":3397,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findtasksandcount(query",{"_index":3403,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["finduser(userid",{"_index":6466,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["finished",{"_index":1655,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["first",{"_index":2956,"title":{},"body":{"injectables/NewsUc.html":{},"classes/UserInfoResponse.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["firstlogin",{"_index":3780,"title":{},"body":{"changelog.html":{}}}],["firstname",{"_index":2185,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"classes/ResolvedUser.html":{},"classes/User.html":{},"classes/UserInfoResponse.html":{},"miscellaneous/variables.html":{}}}],["fishery",{"_index":449,"title":{},"body":{"classes/BaseFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["fit",{"_index":6396,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["fitness",{"_index":5870,"title":{},"body":{"license.html":{}}}],["fix",{"_index":3680,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["fixable",{"_index":6254,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["fixed",{"_index":3658,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["fixes",{"_index":4432,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["fixme",{"_index":3461,"title":{},"body":{"classes/TaskScope.html":{}}}],["fixtures",{"_index":6830,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["flag",{"_index":2762,"title":{},"body":{"classes/NewsFilterQuery.html":{},"changelog.html":{}}}],["flags",{"_index":1354,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["flow",{"_index":5483,"title":{},"body":{"license.html":{}}}],["flush",{"_index":518,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["fly",{"_index":4167,"title":{},"body":{"changelog.html":{}}}],["focus",{"_index":6680,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["focuses",{"_index":6871,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["folder",{"_index":1366,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["folderpath",{"_index":1512,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{}}}],["folders",{"_index":6548,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["follow",{"_index":4927,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["following",{"_index":1687,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["foo",{"_index":6272,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["forallgrouptypes",{"_index":863,"title":{},"body":{"classes/CourseScope.html":{}}}],["forallgrouptypes(userid",{"_index":850,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["forbid",{"_index":5535,"title":{},"body":{"license.html":{}}}],["forbidden",{"_index":6623,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["forbiddenexception('jwt",{"_index":6083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forbidnonwhitelisted",{"_index":2134,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["force",{"_index":4500,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["forcefullsync",{"_index":4499,"title":{},"body":{"changelog.html":{}}}],["forcepathstyle",{"_index":1888,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["forceserverobjectid",{"_index":1438,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["foreign",{"_index":6927,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["forget",{"_index":6865,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["form",{"_index":4953,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["format",{"_index":699,"title":{},"body":{"classes/Course.html":{},"injectables/DatabaseManagementUc.html":{},"classes/ErrorResponse.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["formats",{"_index":4844,"title":{},"body":{"changelog.html":{}}}],["formatting",{"_index":4674,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["forms",{"_index":5583,"title":{},"body":{"license.html":{}}}],["forroot",{"_index":1752,"title":{},"body":{"modules/EncryptionModule.html":{},"modules/MailModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/RocketChatModule.html":{}}}],["forroot(options",{"_index":1753,"title":{},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/RocketChatModule.html":{}}}],["forwarding",{"_index":4054,"title":{},"body":{"changelog.html":{}}}],["found",{"_index":2624,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["foundation",{"_index":5314,"title":{},"body":{"license.html":{}}}],["framework",{"_index":6288,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["framework/feature",{"_index":6513,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["frameworks",{"_index":6430,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["free",{"_index":5312,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["freedom",{"_index":5333,"title":{},"body":{"license.html":{}}}],["freeport",{"_index":5121,"title":{},"body":{"dependencies.html":{}}}],["from/in",{"_index":6631,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["from/to",{"_index":6630,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["fromgroup",{"_index":2140,"title":{},"body":{"classes/GridElement.html":{}}}],["fromgroup(title",{"_index":1045,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["frompersistedgroup",{"_index":2141,"title":{},"body":{"classes/GridElement.html":{}}}],["frompersistedgroup(id",{"_index":1043,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["frompersistedreference",{"_index":2142,"title":{},"body":{"classes/GridElement.html":{}}}],["frompersistedreference(id",{"_index":1042,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["fromsinglereference",{"_index":2143,"title":{},"body":{"classes/GridElement.html":{}}}],["fromsinglereference(reference",{"_index":1044,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["frontend",{"_index":4082,"title":{},"body":{"changelog.html":{}}}],["fs",{"_index":1956,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["fs.rm",{"_index":1969,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["fsp",{"_index":1954,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"miscellaneous/variables.html":{}}}],["fulfilled",{"_index":6436,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["fulfilling",{"_index":5523,"title":{},"body":{"license.html":{}}}],["full",{"_index":1924,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["fully",{"_index":1021,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["function",{"_index":415,"title":{},"body":{"classes/BaseFactory.html":{},"injectables/FileStorageAdapter.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["functional",{"_index":649,"title":{},"body":{"modules/CoreModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["functionality",{"_index":6330,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["functioning",{"_index":5656,"title":{},"body":{"license.html":{}}}],["functions",{"_index":5206,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["further",{"_index":5611,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["future",{"_index":789,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamNews.html":{},"license.html":{}}}],["g",{"_index":6270,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["gate",{"_index":4174,"title":{},"body":{"changelog.html":{}}}],["gates",{"_index":6255,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["general",{"_index":3946,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["generalerror",{"_index":4340,"title":{},"body":{"changelog.html":{}}}],["generally",{"_index":5230,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["generate",{"_index":3744,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["generated",{"_index":5267,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["generatehardcodedtestdashboard",{"_index":1282,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["generateregistrationlink",{"_index":4949,"title":{},"body":{"changelog.html":{}}}],["generating",{"_index":6261,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["generation",{"_index":3674,"title":{},"body":{"changelog.html":{}}}],["generator",{"_index":435,"title":{},"body":{"classes/BaseFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"changelog.html":{}}}],["generatorfn",{"_index":436,"title":{},"body":{"classes/BaseFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["generic",{"_index":5227,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["genericdata",{"_index":29,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"miscellaneous/typealiases.html":{}}}],["generics",{"_index":3690,"title":{},"body":{"changelog.html":{}}}],["german",{"_index":1297,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["get(':id",{"_index":2720,"title":{},"body":{"controllers/NewsController.html":{}}}],["get(':teamid/news",{"_index":3523,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["get('me",{"_index":3585,"title":{},"body":{"controllers/UserController.html":{}}}],["get()@apibody({type",{"_index":919,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{}}}],["get(`${this.options.uri}${path",{"_index":140,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["get(id",{"_index":1845,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["get(path",{"_index":135,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["getadminidandtoken",{"_index":154,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["getasadmin(path",{"_index":133,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["getbasedir",{"_index":1501,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["getcollectionnames",{"_index":1410,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["getcontent",{"_index":1029,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["getdashboardbyid",{"_index":1270,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["getdashboardbyid(id",{"_index":1274,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["getdatabasecollection",{"_index":1411,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["getdatabasecollection(collectionname",{"_index":1426,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["getdb",{"_index":1429,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["getdefaultmaxduedate",{"_index":3468,"title":{},"body":{"injectables/TaskUC.html":{}}}],["getdescriptions",{"_index":2391,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["getdetails",{"_index":182,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ValidationError.html":{}}}],["getelement",{"_index":965,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["getelement(position",{"_index":981,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["getentitypermissions",{"_index":300,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["getentitypermissions(userid",{"_index":315,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["geteol",{"_index":1951,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["getgradeduserids",{"_index":2352,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["getgrid",{"_index":966,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["getgroupmembers(groupname",{"_index":106,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["getgroupmoderators(groupname",{"_index":104,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["gethello",{"_index":1609,"title":{},"body":{"controllers/DelayController.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{}}}],["getid",{"_index":967,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["getidentifiers",{"_index":735,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["getinout",{"_index":3156,"title":{},"body":{"classes/ServerConsole.html":{}}}],["getinout(whatever",{"_index":3160,"title":{},"body":{"classes/ServerConsole.html":{}}}],["getmaxsubmissions",{"_index":2363,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["getmetadata",{"_index":1014,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["getnewspermissions",{"_index":2942,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getnewspermissions(userid",{"_index":2959,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getnumberofgradedusers",{"_index":2357,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["getnumberofstudents",{"_index":672,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["getnumberofsubmittedusers",{"_index":2349,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["getparent",{"_index":2376,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["getparentid",{"_index":745,"title":{},"body":{"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{}}}],["getpermittedcourses",{"_index":3314,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["getpermittedcourses(userid",{"_index":3317,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["getpermittedentities",{"_index":301,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["getpermittedentities(userid",{"_index":318,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["getpermittedschools",{"_index":1782,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getpermittedschools(userid",{"_index":1790,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getpermittedtargets",{"_index":1783,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{}}}],["getpermittedtargets(userid",{"_index":1792,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{}}}],["getquery",{"_index":3145,"title":{},"body":{"classes/Scope.html":{}}}],["getreferences",{"_index":1033,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["getreferencesfromposition",{"_index":968,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["getreferencesfromposition(position",{"_index":989,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["getrequiredpermissions",{"_index":2943,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getrequiredpermissions(unpublished",{"_index":2962,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getresponse",{"_index":183,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ValidationError.html":{}}}],["gets",{"_index":423,"title":{},"body":{"classes/BaseFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["getseedfolder",{"_index":1457,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["getservice",{"_index":1868,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["getservice(path",{"_index":1855,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["getstudentid",{"_index":2300,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["getsubmissionsitems",{"_index":2340,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["getsubmitteduserids",{"_index":2344,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["getsubstitutionteacherids",{"_index":673,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["gettargetfilters",{"_index":2944,"title":{},"body":{"injectables/NewsUc.html":{}}}],["gettargetfilters(userid",{"_index":2965,"title":{},"body":{"injectables/NewsUc.html":{}}}],["gettargetfolder",{"_index":1458,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["gettargetfolder(toseedfolder",{"_index":1476,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["getter",{"_index":703,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{}}}],["gettimeout",{"_index":3553,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["getting",{"_index":3646,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["getuser",{"_index":1784,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuser(userid",{"_index":1794,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserlist(querystring",{"_index":88,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["getuserschoolpermissions",{"_index":1785,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserschoolpermissions(userid",{"_index":1796,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getusersdashboard",{"_index":1271,"title":{},"body":{"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"interfaces/IDashboardRepo.html":{}}}],["getusertargetpermissions",{"_index":1786,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["getusertargetpermissions(userid",{"_index":1798,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserwithpermissions",{"_index":3616,"title":{},"body":{"injectables/UserUC.html":{}}}],["getuserwithpermissions(userid",{"_index":3619,"title":{},"body":{"injectables/UserUC.html":{}}}],["git",{"_index":5247,"title":{"additional-documentation/nestjs-application/git.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["git://github.com/hpi",{"_index":5129,"title":{},"body":{"dependencies.html":{}}}],["git://github.com/leeroybrun/mongoose",{"_index":5152,"title":{},"body":{"dependencies.html":{}}}],["git://github.com/schul",{"_index":5143,"title":{},"body":{"dependencies.html":{}}}],["github",{"_index":3978,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["give",{"_index":5553,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["given",{"_index":1537,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["gives",{"_index":1827,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["giving",{"_index":5559,"title":{},"body":{"license.html":{}}}],["global",{"_index":656,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["globalconstants",{"_index":2023,"title":{"interfaces/GlobalConstants.html":{}},"body":{"interfaces/GlobalConstants.html":{},"miscellaneous/variables.html":{}}}],["globalerrorfilter",{"_index":1764,"title":{"classes/GlobalErrorFilter.html":{}},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["globalerrorfilter.logger",{"_index":2110,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["globally",{"_index":2411,"title":{},"body":{"modules/InterceptorModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["globals",{"_index":2028,"title":{},"body":{"interfaces/GlobalConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["globals.js",{"_index":5045,"title":{},"body":{"changelog.html":{}}}],["globalvalidationpipe",{"_index":2113,"title":{"classes/GlobalValidationPipe.html":{}},"body":{"classes/GlobalValidationPipe.html":{},"modules/ValidationModule.html":{}}}],["gnu",{"_index":5307,"title":{},"body":{"license.html":{}}}],["go",{"_index":4041,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["goal",{"_index":5976,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["goals",{"_index":5380,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["golden",{"_index":6657,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["golevelup/nestjs",{"_index":2570,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"dependencies.html":{}}}],["good",{"_index":5236,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["governed",{"_index":5679,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":5381,"title":{},"body":{"license.html":{}}}],["gracefully",{"_index":4805,"title":{},"body":{"changelog.html":{}}}],["grade",{"_index":2264,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"changelog.html":{}}}],["gradecomment",{"_index":2265,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{}}}],["graded",{"_index":2312,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/SubmissionFactory.html":{},"classes/Task.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TaskWithStatusVo.html":{}}}],["graded(isgraded",{"_index":3231,"title":{},"body":{"classes/SubmissionFactory.html":{}}}],["gradeduserids",{"_index":2353,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["gradefileids",{"_index":2285,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["gradefiles",{"_index":2266,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["grant",{"_index":5698,"title":{},"body":{"license.html":{}}}],["granted",{"_index":5487,"title":{},"body":{"license.html":{}}}],["grants",{"_index":5744,"title":{},"body":{"license.html":{}}}],["graph",{"_index":5926,"title":{},"body":{"modules.html":{}}}],["gratis",{"_index":5610,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":5903,"title":{},"body":{"license.html":{}}}],["greek",{"_index":1298,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["grid",{"_index":963,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"classes/PatchGroupParams.html":{},"miscellaneous/variables.html":{}}}],["gridarray",{"_index":1283,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["gridarray.push",{"_index":1284,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["gridelement",{"_index":1038,"title":{"classes/GridElement.html":{}},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"miscellaneous/variables.html":{}}}],["gridelement.frompersistedgroup(modelentity.id",{"_index":1219,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["gridelement.frompersistedgroup(new",{"_index":1291,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["gridelement.frompersistedreference",{"_index":1286,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["gridelement.fromsinglereference(referenceforindex",{"_index":1089,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["gridelement.getcontent().title",{"_index":1251,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["gridelement.getid",{"_index":1241,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["gridelement.getreferences().map((ref",{"_index":1252,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["gridelement.hasid",{"_index":1238,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["gridelement.isgroup",{"_index":1249,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["gridelement.setgroupname(params",{"_index":1329,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["gridelementcontent",{"_index":1030,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"miscellaneous/typealiases.html":{}}}],["gridelementreferencemetadata",{"_index":1010,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"miscellaneous/typealiases.html":{}}}],["gridelements",{"_index":1132,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReferenceModel.html":{},"changelog.html":{}}}],["gridelementwithposition",{"_index":987,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["gridindexfromposition",{"_index":969,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["gridindexfromposition(pos",{"_index":992,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["gridposition",{"_index":982,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"miscellaneous/typealiases.html":{}}}],["gridpositionwithgroupindex",{"_index":990,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"miscellaneous/typealiases.html":{}}}],["group",{"_index":1037,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/PatchGroupParams.html":{},"injectables/TaskAuthorizationService.html":{},"changelog.html":{}}}],["group.name",{"_index":110,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["groupdata",{"_index":1054,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["groupelements",{"_index":1136,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["groupindex",{"_index":1057,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{}}}],["grouping",{"_index":4259,"title":{},"body":{"changelog.html":{}}}],["groupmetadata",{"_index":1052,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["groupname",{"_index":93,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["groups",{"_index":3322,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"changelog.html":{}}}],["gt",{"_index":2937,"title":{},"body":{"classes/NewsScope.html":{}}}],["gte",{"_index":3466,"title":{},"body":{"classes/TaskScope.html":{}}}],["guarantee",{"_index":2746,"title":{},"body":{"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guard",{"_index":6088,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guards",{"_index":6576,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guest",{"_index":6524,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["guest:guest",{"_index":6211,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["guide",{"_index":6903,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["guidelines",{"_index":6389,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hack",{"_index":2364,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["halper",{"_index":2679,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/UpdateNewsParams.html":{}}}],["handle",{"_index":3464,"title":{},"body":{"classes/TaskScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handlebars",{"_index":5228,"title":{},"body":{"miscellaneous/functions.html":{}}}],["handled",{"_index":586,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handler",{"_index":4671,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["handles",{"_index":2081,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["handling",{"_index":652,"title":{},"body":{"modules/CoreModule.html":{},"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["happen",{"_index":6314,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["happened",{"_index":6610,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["happens",{"_index":6852,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["happy",{"_index":1115,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["hard",{"_index":3728,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hardcodedtestdashboardid",{"_index":1280,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["hash",{"_index":4512,"title":{},"body":{"changelog.html":{}}}],["hasid",{"_index":1028,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["haspermission",{"_index":3505,"title":{},"body":{"injectables/TaskUC.html":{}}}],["haspermissions",{"_index":335,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["hastaskdashboardpermission",{"_index":3469,"title":{},"body":{"injectables/TaskUC.html":{}}}],["hastaskdashboardpermission(currentuser",{"_index":3476,"title":{},"body":{"injectables/TaskUC.html":{}}}],["having",{"_index":5499,"title":{},"body":{"license.html":{}}}],["header",{"_index":2443,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["headers",{"_index":141,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["heart",{"_index":6451,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["heartened",{"_index":5367,"title":{},"body":{"license.html":{}}}],["heavily",{"_index":6364,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hell",{"_index":706,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["help",{"_index":6819,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helparea",{"_index":4144,"title":{},"body":{"changelog.html":{}}}],["helpdesk",{"_index":4379,"title":{},"body":{"changelog.html":{}}}],["helper",{"_index":2053,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"injectables/SubmissionRepo.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["helpers",{"_index":4541,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["helpful",{"_index":6793,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helps",{"_index":6781,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helpto",{"_index":6240,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["hence",{"_index":6446,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["here",{"_index":366,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/InterceptorModule.html":{},"injectables/JwtValidationAdapter.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hereafter",{"_index":5786,"title":{},"body":{"license.html":{}}}],["heroes",{"_index":6540,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hidden",{"_index":2212,"title":{},"body":{"interfaces/ILessonProperties.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["hide",{"_index":6681,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hiding",{"_index":6302,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hidrive",{"_index":3884,"title":{},"body":{"changelog.html":{}}}],["hierarchical",{"_index":4634,"title":{},"body":{"changelog.html":{}}}],["high",{"_index":6310,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["higher",{"_index":6626,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hint",{"_index":1560,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hints",{"_index":6376,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["history",{"_index":5142,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["history.git",{"_index":5145,"title":{},"body":{"dependencies.html":{}}}],["holder",{"_index":5722,"title":{},"body":{"license.html":{}}}],["holders",{"_index":5686,"title":{},"body":{"license.html":{}}}],["holding",{"_index":4256,"title":{},"body":{"changelog.html":{}}}],["homework",{"_index":4156,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["homeworkid",{"_index":2277,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["homeworks",{"_index":2318,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"changelog.html":{}}}],["homogeneitysolve",{"_index":6316,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hook",{"_index":4440,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hooked",{"_index":6447,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["hookfn",{"_index":411,"title":{},"body":{"classes/BaseFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["hooks",{"_index":4577,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hope",{"_index":707,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"license.html":{}}}],["host",{"_index":2040,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["host.switchtohttp",{"_index":2107,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["hosts",{"_index":5616,"title":{},"body":{"license.html":{}}}],["hot",{"_index":5969,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["hotfix",{"_index":4689,"title":{},"body":{"changelog.html":{}}}],["hotfixes",{"_index":4222,"title":{},"body":{"changelog.html":{}}}],["household",{"_index":5635,"title":{},"body":{"license.html":{}}}],["hpi",{"_index":1732,"title":{},"body":{"classes/EncryptedStringType.html":{},"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["html",{"_index":779,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["htmlcontent",{"_index":248,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["htmlmailcontent",{"_index":250,"title":{"interfaces/HtmlMailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["http",{"_index":216,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["http://fsf.org",{"_index":5316,"title":{},"body":{"license.html":{}}}],["http://localhost",{"_index":6186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://www.gnu.org/licenses",{"_index":5922,"title":{},"body":{"license.html":{}}}],["httpexception",{"_index":591,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["httpexceptions",{"_index":6728,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["httpmodule",{"_index":3084,"title":{},"body":{"modules/RocketChatModule.html":{}}}],["https://docs.nestjs.com/first",{"_index":6577,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://github.com/goldbergyoni/javascript",{"_index":6905,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["https://github.com/hpi",{"_index":5951,"title":{},"body":{"todo.html":{}}}],["https://github.com/mikro",{"_index":6669,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://github.com/thoughtbot/fishery",{"_index":394,"title":{},"body":{"classes/BaseFactory.html":{}}}],["https://hpi",{"_index":4032,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["https://jestjs.io",{"_index":6280,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://khalilstemmler.com/articles/oop",{"_index":6678,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://khalilstemmler.com/articles/software",{"_index":6613,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://mikro",{"_index":6281,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://min.io",{"_index":6283,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nestjs.com",{"_index":6279,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nuxtjs.org",{"_index":6419,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["https://stackoverflow.com/a/61909588",{"_index":5939,"title":{},"body":{"todo.html":{}}}],["https://vuejs.org",{"_index":6421,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["https://www.rabbitmq.com",{"_index":6284,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["httpservice",{"_index":16,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["httpstatus",{"_index":201,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/ValidationError.html":{}}}],["httpstatus.bad_request",{"_index":211,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["httpstatus.conflict",{"_index":607,"title":{},"body":{"classes/BusinessError.html":{},"classes/ErrorResponse.html":{}}}],["hub",{"_index":4547,"title":{},"body":{"changelog.html":{}}}],["human",{"_index":6732,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["hydra",{"_index":3935,"title":{},"body":{"changelog.html":{}}}],["i...properties",{"_index":711,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["i.e",{"_index":6440,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["iat",{"_index":2435,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["icollectionfilepath",{"_index":1510,"title":{"interfaces/ICollectionFilePath.html":{}},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["icons",{"_index":6940,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["icoursegroupproperties",{"_index":746,"title":{"interfaces/ICourseGroupProperties.html":{}},"body":{"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{}}}],["icourseproperties",{"_index":674,"title":{"interfaces/ICourseProperties.html":{}},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["icreatenews",{"_index":2162,"title":{"interfaces/ICreateNews.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["icurrentuser",{"_index":952,"title":{"interfaces/ICurrentUser.html":{}},"body":{"controllers/DashboardController.html":{},"injectables/DashboardUc.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/JwtPayload.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id",{"_index":10,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"classes/GridElement.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"classes/School.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["id.pipe.ts",{"_index":3042,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id.pipe.ts:7",{"_index":3044,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["id.tostring",{"_index":742,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["id.ts",{"_index":5997,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["idashboardrepo",{"_index":1300,"title":{"interfaces/IDashboardRepo.html":{}},"body":{"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"interfaces/IDashboardRepo.html":{}}}],["identical",{"_index":2499,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["identifiable",{"_index":5810,"title":{},"body":{"license.html":{}}}],["identified",{"_index":6738,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identifiedreference",{"_index":1100,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["identifier",{"_index":1772,"title":{},"body":{"classes/ErrorResponse.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identifiers",{"_index":2498,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["identify",{"_index":2683,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["identity",{"_index":6918,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["idm",{"_index":4492,"title":{},"body":{"changelog.html":{}}}],["ids",{"_index":321,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"changelog.html":{}}}],["idsasstring",{"_index":740,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["ierrortype",{"_index":593,"title":{"interfaces/IErrorType.html":{}},"body":{"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"miscellaneous/variables.html":{}}}],["if(enableuseractivation",{"_index":6692,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(existinguser.length",{"_index":6701,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(sendwelcomeemailtouser",{"_index":6694,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ifileproperties",{"_index":491,"title":{"interfaces/IFileProperties.html":{}},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["ifindoptions",{"_index":2193,"title":{"interfaces/IFindOptions.html":{}},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{}}}],["iframe",{"_index":4366,"title":{},"body":{"changelog.html":{}}}],["ignore",{"_index":4734,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["ignoreexpiration",{"_index":2471,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ignoring",{"_index":4864,"title":{},"body":{"changelog.html":{}}}],["igridelement",{"_index":985,"title":{"interfaces/IGridElement.html":{}},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardModelMapper.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["igridelementreference",{"_index":1013,"title":{"interfaces/IGridElementReference.html":{}},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardModelMapper.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["ilessonproperties",{"_index":2210,"title":{"interfaces/ILessonProperties.html":{}},"body":{"interfaces/ILessonProperties.html":{},"classes/Lesson.html":{}}}],["ilogger",{"_index":2036,"title":{"interfaces/ILogger.html":{}},"body":{"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"injectables/Logger.html":{},"injectables/NewsUc.html":{},"miscellaneous/variables.html":{}}}],["image",{"_index":3695,"title":{},"body":{"changelog.html":{}}}],["imateapotexception",{"_index":1847,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["imateapotexception('this",{"_index":1864,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["immediately",{"_index":1835,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["immutable",{"_index":4265,"title":{},"body":{"changelog.html":{}}}],["imp",{"_index":4531,"title":{},"body":{"changelog.html":{}}}],["impact",{"_index":5257,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["implement",{"_index":2546,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implementation",{"_index":5464,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["implementations",{"_index":6578,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["implemented",{"_index":2432,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implements",{"_index":1016,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReference.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"injectables/TimeoutInterceptor.html":{}}}],["implications",{"_index":6624,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["implicit",{"_index":6916,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["implied",{"_index":5832,"title":{},"body":{"license.html":{}}}],["import",{"_index":15,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/BaseFile.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["important",{"_index":1852,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TaskAuthorizationService.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["importcollection",{"_index":1375,"title":{},"body":{"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{}}}],["importcollection(@param('collectionname",{"_index":1391,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["importcollection(collectionname",{"_index":1383,"title":{},"body":{"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{}}}],["importcollections",{"_index":1376,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["imported",{"_index":1575,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["importeddocumentsamount",{"_index":1572,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["importer",{"_index":4760,"title":{},"body":{"changelog.html":{}}}],["importhash",{"_index":4665,"title":{},"body":{"changelog.html":{}}}],["importhashes",{"_index":4908,"title":{},"body":{"changelog.html":{}}}],["importing",{"_index":5777,"title":{},"body":{"license.html":{}}}],["imports",{"_index":271,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementUc.html":{},"modules/FilesModule.html":{},"interfaces/ICollectionFilePath.html":{},"modules/LearnroomModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/RocketChatModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"classes/TestBootstrapConsole.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["impose",{"_index":5707,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":5835,"title":{},"body":{"license.html":{}}}],["impossile",{"_index":2934,"title":{},"body":{"classes/NewsScope.html":{}}}],["improve",{"_index":3673,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":5361,"title":{},"body":{"license.html":{}}}],["improves",{"_index":6742,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["in/out",{"_index":6555,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["inability",{"_index":5884,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":5886,"title":{},"body":{"license.html":{}}}],["inc",{"_index":5315,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":5881,"title":{},"body":{"license.html":{}}}],["include",{"_index":356,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"license.html":{}}}],["included",{"_index":5460,"title":{},"body":{"license.html":{}}}],["includes",{"_index":5419,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["including",{"_index":1944,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["inclusion",{"_index":5582,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":2123,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["incomingmessage",{"_index":4618,"title":{},"body":{"changelog.html":{}}}],["incomplete",{"_index":5020,"title":{},"body":{"changelog.html":{}}}],["incorporate",{"_index":5366,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":5852,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":5638,"title":{},"body":{"license.html":{}}}],["increase",{"_index":4196,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["increased",{"_index":5013,"title":{},"body":{"changelog.html":{}}}],["increases",{"_index":6414,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["indemnification",{"_index":5703,"title":{},"body":{"license.html":{}}}],["independant",{"_index":5050,"title":{},"body":{"changelog.html":{}}}],["independend",{"_index":6709,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["independent",{"_index":5572,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["independently",{"_index":6456,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/BaseFile.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"interfaces/EncryptionModuleOptions.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index({name",{"_index":685,"title":{},"body":{"classes/Course.html":{},"classes/Lesson.html":{},"classes/Task.html":{},"classes/User.html":{}}}],["index.ts",{"_index":5934,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["indexed",{"_index":4881,"title":{},"body":{"changelog.html":{}}}],["indexes",{"_index":4085,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["indicate",{"_index":5747,"title":{},"body":{"license.html":{}}}],["indicating",{"_index":5713,"title":{},"body":{"license.html":{}}}],["individual",{"_index":4262,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["individuals",{"_index":5398,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":5649,"title":{},"body":{"license.html":{}}}],["inestapplication",{"_index":6144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inewsproperties",{"_index":805,"title":{"interfaces/INewsProperties.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["inewsscope",{"_index":2173,"title":{"interfaces/INewsScope.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["inewuserprops",{"_index":6686,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["infinity",{"_index":4042,"title":{},"body":{"changelog.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/BaseFile.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["info(text",{"_index":626,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["info.mapper",{"_index":2804,"title":{},"body":{"classes/NewsMapper.html":{}}}],["info.mapper.ts",{"_index":3127,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/UserInfoMapper.html":{}}}],["info.mapper.ts:5",{"_index":3129,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/UserInfoMapper.html":{}}}],["info.response",{"_index":2780,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/TargetInfoMapper.html":{}}}],["info.response.ts",{"_index":3135,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["info.response.ts:13",{"_index":3137,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["info.response.ts:18",{"_index":3604,"title":{},"body":{"classes/UserInfoResponse.html":{}}}],["info.response.ts:8",{"_index":3136,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["inform",{"_index":5622,"title":{},"body":{"license.html":{},"miscellaneous/typealiases.html":{}}}],["information",{"_index":1779,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["informations",{"_index":3723,"title":{},"body":{"changelog.html":{}}}],["infra",{"_index":2625,"title":{},"body":{"modules/ManagementModule.html":{}}}],["infra/encryption",{"_index":1735,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["infrastructure",{"_index":6566,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["infringe",{"_index":5745,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":5774,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":5412,"title":{},"body":{"license.html":{}}}],["inherit",{"_index":359,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["inheritance",{"_index":1129,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"changelog.html":{}}}],["inheritances",{"_index":2894,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["inherited",{"_index":191,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"classes/File.html":{},"injectables/FilesRepo.html":{},"classes/Lesson.html":{},"classes/LessonScope.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"classes/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskScope.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/ValidationError.html":{}}}],["init",{"_index":3670,"title":{},"body":{"changelog.html":{}}}],["inital",{"_index":3948,"title":{},"body":{"changelog.html":{}}}],["initialize",{"_index":6716,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["initialized",{"_index":2550,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["initializes",{"_index":6518,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["initiate",{"_index":5768,"title":{},"body":{"license.html":{}}}],["initpermissions",{"_index":6160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject",{"_index":17,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/DashboardUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/SymetricKeyEncryptionService.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["inject('mail_service_options",{"_index":2596,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["inject('rocket_chat_options",{"_index":69,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["inject(mikroorm",{"_index":2660,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["inject(mongomemoryserver",{"_index":2661,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["injectable",{"_index":18,"title":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"injectables/ConsoleWriterService.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/StorageProviderRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"injectables/ConsoleWriterService.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/StorageProviderRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injectables",{"_index":297,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"injectables/ConsoleWriterService.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/StorageProviderRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"overview.html":{}}}],["injected",{"_index":1831,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injection",{"_index":2547,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["injections",{"_index":6481,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["injectusername",{"_index":4724,"title":{},"body":{"changelog.html":{}}}],["inline",{"_index":241,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["inlineattachment",{"_index":240,"title":{"interfaces/InlineAttachment.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["inner",{"_index":5260,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["input",{"_index":2413,"title":{},"body":{"modules/InterceptorModule.html":{},"classes/ServerConsole.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["inputroles",{"_index":3117,"title":{},"body":{"injectables/RoleUC.html":{}}}],["inputroles.map((role",{"_index":3118,"title":{},"body":{"injectables/RoleUC.html":{}}}],["insensitive",{"_index":4738,"title":{},"body":{"changelog.html":{}}}],["insert",{"_index":3857,"title":{},"body":{"changelog.html":{}}}],["insertedcount",{"_index":1436,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["inside",{"_index":589,"title":{},"body":{"classes/BusinessError.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["inspired",{"_index":6904,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["install",{"_index":5472,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["installation",{"_index":5652,"title":{},"body":{"license.html":{}}}],["installed",{"_index":5665,"title":{},"body":{"license.html":{}}}],["instance",{"_index":1859,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"injectables/Logger.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["instanceof",{"_index":2018,"title":{},"body":{"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"injectables/NewsRepo.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["instances",{"_index":5036,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["instant",{"_index":710,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["instantiategridelementmodel",{"_index":1185,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["instantiategridelementmodel(gridelement",{"_index":1193,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["instead",{"_index":1565,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["instructions",{"_index":5273,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intact",{"_index":5548,"title":{},"body":{"license.html":{}}}],["integrate",{"_index":3873,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":4157,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["intended",{"_index":5336,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intention",{"_index":5540,"title":{},"body":{"license.html":{}}}],["interact",{"_index":5914,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interacting",{"_index":5847,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interaction",{"_index":5427,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["interactions",{"_index":6355,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interactive",{"_index":5431,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interacts",{"_index":6510,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["intercept",{"_index":1696,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["intercept(context",{"_index":1697,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["interceptor",{"_index":1625,"title":{},"body":{"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interceptor/interceptor.module",{"_index":664,"title":{},"body":{"modules/CoreModule.html":{}}}],["interceptormodule",{"_index":642,"title":{"modules/InterceptorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/InterceptorModule.html":{},"modules.html":{},"overview.html":{}}}],["interchange",{"_index":5594,"title":{},"body":{"license.html":{}}}],["interest",{"_index":5761,"title":{},"body":{"license.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AdminIdAndToken.html":{},"interfaces/AppendedAttachment.html":{},"interfaces/EncryptionModuleOptions.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/GlobalConstants.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"interfaces/MailServiceOptions.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/Options.html":{},"interfaces/PlainTextMailContent.html":{},"interfaces/RocketChatOptions.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"interfaces/AppendedAttachment.html":{},"classes/BaseFactory.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/Directory.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/Lesson.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/News.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/Options.html":{},"interfaces/PlainTextMailContent.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"changelog.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["interface/jwt",{"_index":2467,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"interfaces/AppendedAttachment.html":{},"interfaces/EncryptionModuleOptions.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/GlobalConstants.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"interfaces/MailServiceOptions.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/Options.html":{},"interfaces/PlainTextMailContent.html":{},"interfaces/RocketChatOptions.html":{},"license.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interfered",{"_index":5657,"title":{},"body":{"license.html":{}}}],["internal",{"_index":794,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["internal_server_error",{"_index":6684,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["internally",{"_index":636,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["internalservererrorexception",{"_index":2045,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["internalservererrorexception(error",{"_index":2072,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["internationale",{"_index":4872,"title":{},"body":{"changelog.html":{}}}],["internationalisation",{"_index":4765,"title":{},"body":{"changelog.html":{}}}],["interpretation",{"_index":5893,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":5470,"title":{},"body":{"license.html":{}}}],["intimate",{"_index":5481,"title":{},"body":{"license.html":{}}}],["intricacies",{"_index":6655,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introduce",{"_index":1832,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduced",{"_index":4924,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduces",{"_index":4891,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introducing",{"_index":6194,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["introduction",{"_index":5930,"title":{},"body":{"todo.html":{}}}],["invalid",{"_index":1547,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{}}}],["invalidate",{"_index":5569,"title":{},"body":{"license.html":{}}}],["inviteusertogroup(groupname",{"_index":98,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["invocation",{"_index":6537,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invocations",{"_index":6542,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoke",{"_index":6489,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoked",{"_index":6362,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoking",{"_index":6465,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["involved",{"_index":6656,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ipagination",{"_index":2199,"title":{"interfaces/IPagination.html":{}},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/TaskUC.html":{}}}],["ipermissionsandroles",{"_index":2187,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"injectables/RoleUC.html":{},"miscellaneous/typealiases.html":{}}}],["iprimarykey",{"_index":2608,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{}}}],["iprimarykeyvalue",{"_index":739,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["iresolveduser",{"_index":2181,"title":{"interfaces/IResolvedUser.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/ResolvedUser.html":{}}}],["irole",{"_index":2184,"title":{"interfaces/IRole.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/ResolvedUser.html":{},"miscellaneous/typealiases.html":{}}}],["iroleproperties",{"_index":2236,"title":{"interfaces/IRoleProperties.html":{}},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["irrevocable",{"_index":5489,"title":{},"body":{"license.html":{}}}],["isboolean",{"_index":2764,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isbusinesserror",{"_index":2051,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isbusinesserror(error",{"_index":2085,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["ischoolproperties",{"_index":2246,"title":{"interfaces/ISchoolProperties.html":{}},"body":{"interfaces/ISchoolProperties.html":{},"classes/School.html":{}}}],["isclosed",{"_index":3459,"title":{},"body":{"classes/TaskScope.html":{}}}],["isdate",{"_index":904,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{}}}],["isdate()@isoptional()@apipropertyoptional({description",{"_index":881,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isdirectory",{"_index":477,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["isdraft",{"_index":2313,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{}}}],["iserv",{"_index":4251,"title":{},"body":{"changelog.html":{}}}],["isexternal",{"_index":4171,"title":{},"body":{"changelog.html":{}}}],["isfeatherserror",{"_index":2049,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isfeatherserror(error",{"_index":2080,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isgraded",{"_index":2296,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["isgradedforuser",{"_index":3288,"title":{},"body":{"classes/Task.html":{}}}],["isgradedforuser(userid",{"_index":2380,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["isgroup",{"_index":1031,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["ishidden",{"_index":2540,"title":{},"body":{"classes/LessonScope.html":{}}}],["isin",{"_index":2765,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isin(target_model_values",{"_index":2769,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isint",{"_index":3027,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(0)@apipropertyoptional({description",{"_index":3024,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(1)@max(100)@apipropertyoptional({description",{"_index":3018,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["ismongoid",{"_index":2766,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isnumber",{"_index":2676,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{}}}],["isnumber()@min(0)@apiproperty",{"_index":2686,"title":{},"body":{"classes/MoveElementPosition.html":{}}}],["isnumber()@min(0)@isoptional()@apipropertyoptional({description",{"_index":2684,"title":{},"body":{"classes/MoveElementPosition.html":{}}}],["isolated",{"_index":6543,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["isolation",{"_index":6767,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["isoptional",{"_index":905,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/NewsFilterQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["isoptional()@isboolean()@stringtoboolean()@apipropertyoptional({description",{"_index":2761,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isoptional()@isdate()@apipropertyoptional({description",{"_index":3571,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["isoptional()@ismongoid()@apipropertyoptional({pattern",{"_index":2755,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isoptional()@isstring()@apipropertyoptional({description",{"_index":3570,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["isoptional()@isstring()@isin(target_model_values)@apipropertyoptional({enum",{"_index":2759,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["ispublished",{"_index":2997,"title":{},"body":{"injectables/NewsUc.html":{}}}],["iss",{"_index":2439,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["isstring",{"_index":906,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/PatchGroupParams.html":{},"classes/UpdateNewsParams.html":{}}}],["isstring()@apiproperty({description",{"_index":879,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/PatchGroupParams.html":{}}}],["isstring()@apiproperty({enum",{"_index":895,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstring()@apiproperty({pattern",{"_index":890,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstudent",{"_index":851,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["issubmitted",{"_index":2383,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["issubmittedforuser",{"_index":3289,"title":{},"body":{"classes/Task.html":{}}}],["issubmittedforuser(userid",{"_index":2378,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["issubstitutionteacher",{"_index":853,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TaskWithStatusVo.html":{}}}],["issue",{"_index":3681,"title":{},"body":{"changelog.html":{}}}],["issued",{"_index":4807,"title":{},"body":{"changelog.html":{}}}],["issuer",{"_index":2446,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["issues",{"_index":3701,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["isteacher",{"_index":852,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["istechnicalerror",{"_index":2054,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["istechnicalerror(error",{"_index":2087,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["istimestampenabled",{"_index":2559,"title":{},"body":{"injectables/Logger.html":{}}}],["istorageproviderproperties",{"_index":2248,"title":{"interfaces/IStorageProviderProperties.html":{}},"body":{"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{}}}],["isubmissionproperties",{"_index":2261,"title":{"interfaces/ISubmissionProperties.html":{}},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{}}}],["iswhitelisted",{"_index":2490,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["iswhitelisted(accountid",{"_index":2493,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["it's",{"_index":4040,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["it(\"should",{"_index":6766,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('bad",{"_index":6784,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('good",{"_index":6786,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('should",{"_index":6858,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["itaskproperties",{"_index":2302,"title":{"interfaces/ITaskProperties.html":{}},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskWithStatusVo.html":{}}}],["itaskstatus",{"_index":2309,"title":{"interfaces/ITaskStatus.html":{}},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["iteamproperties",{"_index":2396,"title":{"interfaces/ITeamProperties.html":{}},"body":{"interfaces/ITeamProperties.html":{},"classes/Team.html":{}}}],["item",{"_index":5445,"title":{},"body":{"license.html":{}}}],["items",{"_index":2239,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["iteration",{"_index":3952,"title":{},"body":{"changelog.html":{}}}],["itself",{"_index":5668,"title":{},"body":{"license.html":{}}}],["iupdatenews",{"_index":2171,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{}}}],["iuserproperties",{"_index":2398,"title":{"interfaces/IUserProperties.html":{}},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["javascript",{"_index":569,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["jest",{"_index":3975,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["jest.config.ts",{"_index":6030,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["jest.spyon(repo",{"_index":6860,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["jest/utils",{"_index":6131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jira",{"_index":5281,"title":{},"body":{"index.html":{}}}],["job",{"_index":1639,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["job/delete",{"_index":1989,"title":{},"body":{"modules/FilesModule.html":{}}}],["jobs",{"_index":4832,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["john",{"_index":6191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":4332,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["joinpath",{"_index":1906,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["joinpath(...paths",{"_index":1927,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["jose",{"_index":5124,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":704,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"injectables/SymetricKeyEncryptionService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["json",{"_index":568,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["json.parse(text",{"_index":1558,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["json.stringify",{"_index":1546,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["json.stringify(collections",{"_index":1363,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["json.stringify(e.constraints",{"_index":2099,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["json.stringify(sortedbsondocuments",{"_index":1594,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["jsondocuments",{"_index":581,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["jsondocuments.length",{"_index":1435,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["jsonwebtoken",{"_index":5126,"title":{},"body":{"dependencies.html":{}}}],["jti",{"_index":2441,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{}}}],["jwauthguard",{"_index":6875,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["jwt",{"_index":2465,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwt_whitelist_accept_all",{"_index":3872,"title":{},"body":{"changelog.html":{}}}],["jwtauthguard",{"_index":2419,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwtconstants",{"_index":278,"title":{"interfaces/JwtConstants.html":{}},"body":{"modules/AuthModule.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.jwtoptions",{"_index":2474,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtconstants.secret",{"_index":2473,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":2469,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":274,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register(jwtconstants",{"_index":282,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtoptions",{"_index":2425,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["jwtpayload",{"_index":2451,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{}}}],["jwtstrategy",{"_index":264,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"overview.html":{}}}],["jwtvalidationadapter",{"_index":265,"title":{"injectables/JwtValidationAdapter.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"overview.html":{}}}],["jwtwhitelist",{"_index":2501,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"miscellaneous/variables.html":{}}}],["kafka",{"_index":6432,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["keep",{"_index":1574,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"classes/EncryptedStringType.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["keeps",{"_index":6218,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["kernel",{"_index":5466,"title":{},"body":{"license.html":{}}}],["key",{"_index":737,"title":{},"body":{"classes/Course.html":{},"injectables/FileStorageAdapter.html":{},"interfaces/ICourseProperties.html":{},"injectables/NewsUc.html":{},"injectables/SymetricKeyEncryptionService.html":{},"changelog.html":{},"license.html":{}}}],["keyof",{"_index":6023,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["keys",{"_index":2430,"title":{},"body":{"interfaces/JwtConstants.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kickuserfromgroup(groupname",{"_index":96,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["kind",{"_index":5423,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["kinds",{"_index":5324,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["klara.fall@schul",{"_index":5033,"title":{},"body":{"changelog.html":{}}}],["know",{"_index":5349,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["knowingly",{"_index":5800,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":5807,"title":{},"body":{"license.html":{}}}],["known",{"_index":4307,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["knows",{"_index":6503,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kreisid",{"_index":4295,"title":{},"body":{"changelog.html":{}}}],["kurse",{"_index":713,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":3760,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["language",{"_index":4005,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["large",{"_index":6415,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["larger",{"_index":5576,"title":{},"body":{"license.html":{}}}],["last",{"_index":3603,"title":{},"body":{"classes/UserInfoResponse.html":{},"changelog.html":{}}}],["lastldapsync",{"_index":3838,"title":{},"body":{"changelog.html":{}}}],["lastname",{"_index":2186,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"classes/ResolvedUser.html":{},"classes/User.html":{},"classes/UserInfoResponse.html":{},"miscellaneous/variables.html":{}}}],["later",{"_index":813,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["latest",{"_index":2955,"title":{},"body":{"injectables/NewsUc.html":{},"dependencies.html":{}}}],["launch",{"_index":6274,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["launch/settings",{"_index":5950,"title":{},"body":{"todo.html":{}}}],["law",{"_index":5414,"title":{},"body":{"license.html":{}}}],["laws",{"_index":5390,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":5772,"title":{},"body":{"license.html":{}}}],["layer",{"_index":6343,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["layered",{"_index":6498,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["layering",{"_index":6308,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["layers",{"_index":5933,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ldap",{"_index":3669,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["ldap/:id",{"_index":4540,"title":{},"body":{"changelog.html":{}}}],["ldap_school_syncer_pool_size",{"_index":4463,"title":{},"body":{"changelog.html":{}}}],["ldap_system_syncer_pool_size",{"_index":4462,"title":{},"body":{"changelog.html":{}}}],["ldapjs",{"_index":5128,"title":{},"body":{"dependencies.html":{}}}],["ldapjs.git",{"_index":5131,"title":{},"body":{"dependencies.html":{}}}],["ldapschoolidentifier",{"_index":3837,"title":{},"body":{"changelog.html":{}}}],["ldapschoolsyncer",{"_index":4855,"title":{},"body":{"changelog.html":{}}}],["ldapsystemsyncers",{"_index":4984,"title":{},"body":{"changelog.html":{}}}],["lead",{"_index":4719,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["leads",{"_index":5232,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["lean",{"_index":5147,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["learnroom",{"_index":3949,"title":{},"body":{"changelog.html":{}}}],["learnroommodule",{"_index":2510,"title":{"modules/LearnroomModule.html":{}},"body":{"modules/LearnroomModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["leave",{"_index":5985,"title":{},"body":{"todo.html":{}}}],["leaves",{"_index":3543,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["legacy",{"_index":1828,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["legacy/feathers",{"_index":6262,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["legacy/feathers/mocha",{"_index":6243,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["legacy/nest",{"_index":5977,"title":{},"body":{"todo.html":{}}}],["legacyerrortypes",{"_index":6175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legal",{"_index":5355,"title":{},"body":{"license.html":{}}}],["lern",{"_index":3893,"title":{},"body":{"changelog.html":{}}}],["lernstore",{"_index":3993,"title":{},"body":{"changelog.html":{}}}],["less",{"_index":4981,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lesson",{"_index":2214,"title":{"classes/Lesson.html":{}},"body":{"interfaces/ILessonProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["lesson.entity",{"_index":2307,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["lessonfactory",{"_index":6052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lessonid",{"_index":2322,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["lessonids",{"_index":3406,"title":{},"body":{"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{}}}],["lessonrepo",{"_index":2521,"title":{"injectables/LessonRepo.html":{}},"body":{"injectables/LessonRepo.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"overview.html":{}}}],["lessons",{"_index":2213,"title":{},"body":{"interfaces/ILessonProperties.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"changelog.html":{}}}],["lessonscope",{"_index":2527,"title":{"classes/LessonScope.html":{}},"body":{"injectables/LessonRepo.html":{},"classes/LessonScope.html":{}}}],["letter",{"_index":6587,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["letting",{"_index":5371,"title":{},"body":{"license.html":{}}}],["level",{"_index":4849,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["levels",{"_index":6763,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["liability",{"_index":5688,"title":{},"body":{"license.html":{}}}],["liable",{"_index":5411,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":5458,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["library",{"_index":5630,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["license",{"_index":5306,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":5394,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":5395,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":5397,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":5330,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":5748,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":5695,"title":{},"body":{"license.html":{}}}],["lifecycle",{"_index":3844,"title":{},"body":{"changelog.html":{}}}],["likewise",{"_index":5742,"title":{},"body":{"license.html":{}}}],["limit",{"_index":2201,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"license.html":{}}}],["limitation",{"_index":5878,"title":{},"body":{"license.html":{}}}],["limited",{"_index":3974,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["limiting",{"_index":4037,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["limits",{"_index":4149,"title":{},"body":{"changelog.html":{}}}],["line",{"_index":46,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"classes/CourseNews.html":{},"injectables/DeleteFilesUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"modules/ManagementModule.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["lines",{"_index":6118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["link",{"_index":3983,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["linked",{"_index":5479,"title":{},"body":{"license.html":{}}}],["links",{"_index":4023,"title":{},"body":{"changelog.html":{}}}],["linter",{"_index":5965,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["list",{"_index":317,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"classes/NewsListResponse.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{}}}],["listener",{"_index":4654,"title":{},"body":{"changelog.html":{}}}],["lists",{"_index":1931,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["literal",{"_index":407,"title":{},"body":{"classes/BaseFactory.html":{},"classes/GridElement.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/JwtConstants.html":{},"injectables/LessonRepo.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["litigation",{"_index":5769,"title":{},"body":{"license.html":{}}}],["living",{"_index":6653,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["lms",{"_index":6399,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["load",{"_index":1533,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{}}}],["load/init",{"_index":2341,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["load/perf",{"_index":5943,"title":{},"body":{"todo.html":{}}}],["load/persist",{"_index":6563,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["loadallcollectionsfromdatabase",{"_index":1459,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["loadallcollectionsfromdatabase(targetfolder",{"_index":1479,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["loadallcollectionsfromfilesystem",{"_index":1460,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["loadallcollectionsfromfilesystem(basedir",{"_index":1485,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["loadcollectionsavailablefromsourceandfilterbycollectionnames",{"_index":1461,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["loadcollectionsavailablefromsourceandfilterbycollectionnames(source",{"_index":1488,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["loaded",{"_index":3486,"title":{},"body":{"injectables/TaskUC.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["loader",{"_index":6812,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["loadind",{"_index":4209,"title":{},"body":{"changelog.html":{}}}],["loading",{"_index":4261,"title":{},"body":{"changelog.html":{}}}],["loads",{"_index":1481,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["local",{"_index":4158,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"license.html":{}}}],["localhost:15672",{"_index":6210,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["localhost:3030",{"_index":6223,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["localization",{"_index":6422,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["locally",{"_index":3206,"title":{},"body":{"modules/ServerModule.html":{},"additional-documentation/nestjs-application.html":{}}}],["locate",{"_index":6621,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["located",{"_index":6403,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["location",{"_index":1500,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["locator",{"_index":4504,"title":{},"body":{"changelog.html":{}}}],["lock",{"_index":4202,"title":{},"body":{"changelog.html":{}}}],["lodash",{"_index":1505,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"dependencies.html":{}}}],["log",{"_index":2220,"title":{},"body":{"interfaces/ILogger.html":{},"injectables/Logger.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["log(message",{"_index":2228,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["log/response",{"_index":5966,"title":{},"body":{"todo.html":{}}}],["logfile",{"_index":6529,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logged",{"_index":5272,"title":{},"body":{"index.html":{}}}],["logger",{"_index":1633,"title":{"injectables/Logger.html":{}},"body":{"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"injectables/NewsUc.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logger('error",{"_index":2037,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["logger(deletefilesconsole.name",{"_index":1649,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["logger(durationlogginginterceptor.name",{"_index":1703,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logger(newsuc.name",{"_index":2975,"title":{},"body":{"injectables/NewsUc.html":{}}}],["logger.error(error",{"_index":2103,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(errormsg",{"_index":2100,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(exception",{"_index":2091,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.info(`could",{"_index":6797,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["logger.interface",{"_index":2544,"title":{},"body":{"injectables/Logger.html":{}}}],["logger.service",{"_index":2564,"title":{},"body":{"modules/LoggerModule.html":{}}}],["logger/logger.module",{"_index":662,"title":{},"body":{"modules/CoreModule.html":{}}}],["loggermodule",{"_index":643,"title":{"modules/LoggerModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/FilesModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["loggerservice",{"_index":6723,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging",{"_index":654,"title":{},"body":{"modules/CoreModule.html":{},"injectables/DurationLoggingInterceptor.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging.interceptor.ts",{"_index":1693,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logging.interceptor.ts:11",{"_index":1704,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logging.interceptor.ts:13",{"_index":1700,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logic",{"_index":3510,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["logic/rules",{"_index":6380,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logical",{"_index":6426,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["login",{"_index":4164,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["loginuseruc",{"_index":6596,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["logoutuser(authtoken",{"_index":86,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["logs",{"_index":5932,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["long",{"_index":5291,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["longer",{"_index":4417,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":855,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/JwtConstants.html":{},"changelog.html":{},"index.html":{}}}],["loop",{"_index":1678,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"changelog.html":{}}}],["loss",{"_index":5885,"title":{},"body":{"license.html":{}}}],["losses",{"_index":5887,"title":{},"body":{"license.html":{}}}],["lost",{"_index":4800,"title":{},"body":{"changelog.html":{}}}],["lot",{"_index":4982,"title":{},"body":{"changelog.html":{}}}],["low",{"_index":6312,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lowercase",{"_index":6588,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["lte",{"_index":2014,"title":{},"body":{"injectables/FilesRepo.html":{},"classes/NewsScope.html":{}}}],["ltitools",{"_index":4370,"title":{},"body":{"changelog.html":{}}}],["luckily",{"_index":6515,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["m:n",{"_index":6926,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["machine",{"_index":5585,"title":{},"body":{"license.html":{}}}],["made",{"_index":5362,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mail",{"_index":251,"title":{"interfaces/Mail.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"interfaces/PlainTextMailContent.html":{},"changelog.html":{},"license.html":{}}}],["mail.interface",{"_index":2595,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["mail.service",{"_index":2573,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["mail_service_options",{"_index":2585,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["mailattachment",{"_index":236,"title":{"interfaces/MailAttachment.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["mailcatcher",{"_index":3968,"title":{},"body":{"changelog.html":{}}}],["mailcontent",{"_index":244,"title":{"interfaces/MailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["maildrop",{"_index":3967,"title":{},"body":{"changelog.html":{}}}],["mailmodule",{"_index":2565,"title":{"modules/MailModule.html":{}},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["mailmodule.forroot",{"_index":3194,"title":{},"body":{"modules/ServerModule.html":{}}}],["mailmoduleoptions",{"_index":2567,"title":{"interfaces/MailModuleOptions.html":{}},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["mails",{"_index":4045,"title":{},"body":{"changelog.html":{}}}],["mailservice",{"_index":2572,"title":{"injectables/MailService.html":{}},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["mailserviceoptions",{"_index":2591,"title":{"interfaces/MailServiceOptions.html":{}},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["main",{"_index":3880,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["main.ts",{"_index":1860,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"todo.html":{}}}],["mainly",{"_index":6464,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintain",{"_index":4684,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintainability",{"_index":4620,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintenance",{"_index":3921,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["major",{"_index":5462,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["make",{"_index":2497,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["makes",{"_index":5514,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["making",{"_index":2681,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/UpdateNewsParams.html":{},"license.html":{}}}],["malformed",{"_index":6853,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["malfunction",{"_index":3896,"title":{},"body":{"changelog.html":{}}}],["manage",{"_index":6353,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["managed",{"_index":4238,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["management",{"_index":3766,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["management.console",{"_index":2615,"title":{},"body":{"modules/ManagementModule.html":{}}}],["management.console.ts",{"_index":1332,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["management.console.ts:11",{"_index":1337,"title":{},"body":{"classes/DatabaseManagementConsole.html":{}}}],["management.console.ts:25",{"_index":1347,"title":{},"body":{"classes/DatabaseManagementConsole.html":{}}}],["management.console.ts:49",{"_index":1344,"title":{},"body":{"classes/DatabaseManagementConsole.html":{}}}],["management.controller",{"_index":2613,"title":{},"body":{"modules/ManagementModule.html":{}}}],["management.controller.ts",{"_index":1372,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["management.controller.ts:15",{"_index":1385,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["management.controller.ts:21",{"_index":1382,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["management.controller.ts:27",{"_index":1379,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["management.controller.ts:9",{"_index":1387,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["management.module.ts",{"_index":1402,"title":{},"body":{"modules/DatabaseManagementModule.html":{}}}],["management.service",{"_index":1403,"title":{},"body":{"modules/DatabaseManagementModule.html":{}}}],["management.service.ts",{"_index":1404,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:13",{"_index":1427,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:18",{"_index":1428,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:30",{"_index":1424,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:36",{"_index":1416,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:42",{"_index":1425,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:50",{"_index":1418,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:56",{"_index":1420,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:6",{"_index":1414,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:60",{"_index":1422,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:9",{"_index":1430,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.uc",{"_index":1351,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{}}}],["management.uc.ts",{"_index":1454,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["management.uc.ts:134",{"_index":1496,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:183",{"_index":1468,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:19",{"_index":1466,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:30",{"_index":1502,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:38",{"_index":1474,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:46",{"_index":1477,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:63",{"_index":1480,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:76",{"_index":1486,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:91",{"_index":1490,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management/database",{"_index":1373,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["managementmodule",{"_index":2600,"title":{"modules/ManagementModule.html":{}},"body":{"modules/ManagementModule.html":{},"modules/ServerConsoleModule.html":{},"modules.html":{},"overview.html":{}}}],["manager",{"_index":5077,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["managing",{"_index":6402,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mandatory/optional",{"_index":5936,"title":{},"body":{"todo.html":{}}}],["manipulated",{"_index":4877,"title":{},"body":{"changelog.html":{}}}],["manner",{"_index":5787,"title":{},"body":{"license.html":{}}}],["manual",{"_index":4122,"title":{},"body":{"changelog.html":{}}}],["manually",{"_index":6794,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["many",{"_index":4465,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["manytomany",{"_index":696,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"classes/Role.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/User.html":{}}}],["manytomany('file",{"_index":2282,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["manytomany('role",{"_index":2241,"title":{},"body":{"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["manytomany('user",{"_index":689,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["manytoone",{"_index":486,"title":{},"body":{"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["manytoone('course",{"_index":748,"title":{},"body":{"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamNews.html":{}}}],["manytoone('coursegroup",{"_index":2279,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["manytoone('dashboardgridelementmodel",{"_index":1122,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["manytoone('dashboardmodelentity",{"_index":1101,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["manytoone('lesson",{"_index":2321,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["manytoone('school",{"_index":681,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/ICourseProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["manytoone('storageprovider",{"_index":501,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["manytoone('task",{"_index":2276,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["manytoone('team",{"_index":836,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["manytoone('user",{"_index":780,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamNews.html":{}}}],["map",{"_index":977,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["map((submission",{"_index":2356,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["mapcreatenewstodomain",{"_index":2792,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapcreatenewstodomain(params",{"_index":2795,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapdashboardtoentity",{"_index":1186,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapdashboardtoentity(modelentity",{"_index":1195,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapdashboardtomodel",{"_index":1187,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapdashboardtomodel(entity",{"_index":1198,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapdomaintoresponse",{"_index":6569,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapelementtoentity",{"_index":1188,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapelementtoentity(modelentity",{"_index":1200,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapfootodomain",{"_index":6570,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapgridelementtomodel",{"_index":1189,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapgridelementtomodel(elementwithposition",{"_index":1202,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapnewsscopetodomain",{"_index":2793,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapnewsscopetodomain(query",{"_index":2797,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapped",{"_index":2324,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mappedelements",{"_index":1261,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mappedelements.includes(el",{"_index":1265,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapper",{"_index":1272,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"injectables/UserUC.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mapper.ts",{"_index":6568,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapper/dashboard.mapper",{"_index":942,"title":{},"body":{"controllers/DashboardController.html":{}}}],["mapper/news.mapper",{"_index":2732,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["mapper/task.mapper",{"_index":3341,"title":{},"body":{"controllers/TaskController.html":{}}}],["mappers",{"_index":6874,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mapping",{"_index":6349,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mapreferencetoentity",{"_index":1190,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapreferencetoentity(modelentity",{"_index":1204,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapreferencetomodel",{"_index":1191,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapreferencetomodel(reference",{"_index":1206,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["maps",{"_index":6374,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["maptoresponse",{"_index":1157,"title":{},"body":{"classes/DashboardMapper.html":{},"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/UserInfoMapper.html":{}}}],["maptoresponse(dashboard",{"_index":1158,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["maptoresponse(news",{"_index":2799,"title":{},"body":{"classes/NewsMapper.html":{}}}],["maptoresponse(schoolinfo",{"_index":3128,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["maptoresponse(target",{"_index":3281,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["maptoresponse(taskwithstatus",{"_index":3364,"title":{},"body":{"classes/TaskMapper.html":{}}}],["maptoresponse(user",{"_index":3063,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{}}}],["mapupdatenewstodomain",{"_index":2794,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapupdatenewstodomain(params",{"_index":2801,"title":{},"body":{"classes/NewsMapper.html":{}}}],["march",{"_index":5830,"title":{},"body":{"license.html":{}}}],["marked",{"_index":1640,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"license.html":{}}}],["marker",{"_index":3813,"title":{},"body":{"changelog.html":{}}}],["marks",{"_index":5702,"title":{},"body":{"license.html":{}}}],["masks",{"_index":5392,"title":{},"body":{"license.html":{}}}],["master",{"_index":4401,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["match",{"_index":1469,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"classes/ErrorResponse.html":{},"interfaces/ICollectionFilePath.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["matched",{"_index":604,"title":{},"body":{"classes/BusinessError.html":{}}}],["matches",{"_index":6849,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["matching",{"_index":172,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/BaseFile.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["material",{"_index":5503,"title":{},"body":{"license.html":{}}}],["materially",{"_index":5669,"title":{},"body":{"license.html":{}}}],["materials",{"_index":4110,"title":{},"body":{"changelog.html":{}}}],["math",{"_index":1289,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["math.floor(index",{"_index":1065,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["matrix",{"_index":4116,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matrixchat",{"_index":6405,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matter",{"_index":6467,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["max",{"_index":3028,"title":{},"body":{"classes/PaginationQuery.html":{},"changelog.html":{}}}],["max(100",{"_index":3030,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["maximum",{"_index":3021,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["maxsubmissions",{"_index":2311,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TaskWithStatusVo.html":{}}}],["maxworkers",{"_index":6129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maybe",{"_index":2646,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["md",{"_index":5971,"title":{},"body":{"todo.html":{}}}],["me(@currentuser",{"_index":3591,"title":{},"body":{"controllers/UserController.html":{}}}],["me(authtoken",{"_index":74,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["me(currentuser",{"_index":3584,"title":{},"body":{"controllers/UserController.html":{}}}],["meaning",{"_index":5709,"title":{},"body":{"license.html":{}}}],["meaningful",{"_index":5300,"title":{},"body":{"index.html":{}}}],["means",{"_index":5261,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["measure",{"_index":5522,"title":{},"body":{"license.html":{}}}],["measures",{"_index":5264,"title":{},"body":{"index.html":{},"license.html":{}}}],["mechanism",{"_index":4038,"title":{},"body":{"changelog.html":{}}}],["mechanisms",{"_index":6541,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["medium",{"_index":5545,"title":{},"body":{"license.html":{}}}],["meet",{"_index":5557,"title":{},"body":{"license.html":{}}}],["meets",{"_index":5446,"title":{},"body":{"license.html":{}}}],["member",{"_index":50,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/FeathersAuthProvider.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"changelog.html":{}}}],["members",{"_index":109,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"changelog.html":{}}}],["membership",{"_index":4728,"title":{},"body":{"changelog.html":{}}}],["memory",{"_index":2628,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["menu",{"_index":5443,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":5869,"title":{},"body":{"license.html":{}}}],["mere",{"_index":5426,"title":{},"body":{"license.html":{}}}],["merge",{"_index":5305,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["merged",{"_index":4221,"title":{},"body":{"changelog.html":{}}}],["mergeelementintoposition",{"_index":970,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["mergeelementintoposition(element",{"_index":995,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["merges",{"_index":4690,"title":{},"body":{"changelog.html":{}}}],["mergify",{"_index":4967,"title":{},"body":{"changelog.html":{}}}],["merging",{"_index":5758,"title":{},"body":{"license.html":{}}}],["merlin",{"_index":4022,"title":{},"body":{"changelog.html":{}}}],["message",{"_index":83,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/ValidationError.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["messages",{"_index":6433,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["messenger",{"_index":4007,"title":{},"body":{"changelog.html":{}}}],["messuring",{"_index":4119,"title":{},"body":{"changelog.html":{}}}],["met",{"_index":5491,"title":{},"body":{"license.html":{}}}],["meta",{"_index":6911,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["metadata",{"_index":1227,"title":{},"body":{"injectables/DashboardModelMapper.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["metadata.displaycolor",{"_index":1233,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["metadata.id",{"_index":1230,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["metadata.title",{"_index":1235,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["method",{"_index":1841,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/ServerConsole.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["methods",{"_index":181,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"modules/RocketChatModule.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["metic",{"_index":4643,"title":{},"body":{"changelog.html":{}}}],["metrics",{"_index":4482,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["microservice",{"_index":6413,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["microservices",{"_index":6356,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["middleware",{"_index":4714,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["migrate",{"_index":5133,"title":{},"body":{"dependencies.html":{}}}],["migrated",{"_index":4948,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["migration",{"_index":2862,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{}}}],["migrations",{"_index":4190,"title":{},"body":{"changelog.html":{}}}],["migrations/scheduled",{"_index":2864,"title":{},"body":{"modules/NewsModule.html":{}}}],["mikro",{"_index":352,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"injectables/BaseRepo.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementService.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"classes/EncryptedStringType.html":{},"injectables/FeathersAuthProvider.html":{},"classes/File.html":{},"injectables/FilesRepo.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"modules/ServerModule.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"injectables/UserRepo.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mikroorm",{"_index":2635,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{}}}],["mikroorm.init",{"_index":6183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mikroorm/asynclocalstorage",{"_index":5964,"title":{},"body":{"todo.html":{}}}],["mikroormcoremodule",{"_index":2656,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormcoremodule.exports",{"_index":2658,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormcoremodule.exports.push(mongomemoryserver",{"_index":2659,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule",{"_index":2605,"title":{},"body":{"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.forroot",{"_index":2616,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mikroormmodule.forrootasync",{"_index":2641,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.imports",{"_index":2654,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.imports.length",{"_index":2655,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.imports[0",{"_index":2657,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmoduleasyncoptions",{"_index":2636,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodulesyncoptions",{"_index":2651,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["milliseconds",{"_index":3557,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["mimetype",{"_index":239,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["min",{"_index":2677,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/PaginationQuery.html":{}}}],["min(0",{"_index":2682,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/PaginationQuery.html":{}}}],["min(1",{"_index":3029,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["minimizes",{"_index":6478,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["minimum",{"_index":3020,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["minio",{"_index":4160,"title":{},"body":{"changelog.html":{}}}],["minor",{"_index":4629,"title":{},"body":{"changelog.html":{}}}],["minus",{"_index":6594,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["misc",{"_index":6931,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["miscellaneous",{"_index":5200,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["misconfigured",{"_index":4997,"title":{},"body":{"changelog.html":{}}}],["misrepresentation",{"_index":5693,"title":{},"body":{"license.html":{}}}],["missed",{"_index":2387,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["missing",{"_index":1858,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TaskAuthorizationService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["mission",{"_index":2933,"title":{},"body":{"classes/NewsScope.html":{}}}],["mix",{"_index":6339,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mixwith",{"_index":5134,"title":{},"body":{"dependencies.html":{}}}],["mkdir",{"_index":1959,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["mkdir(folderpath",{"_index":1964,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["mkdtemp",{"_index":1960,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["mkdtemp(dirpath",{"_index":1968,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["mm",{"_index":4942,"title":{},"body":{"changelog.html":{}}}],["mocha",{"_index":4548,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["mocha's",{"_index":6771,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocked",{"_index":6827,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocking",{"_index":6815,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocks",{"_index":6817,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mode",{"_index":3994,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["model",{"_index":898,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["modelentity",{"_index":1197,"title":{},"body":{"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["modelentity.color",{"_index":1212,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["modelentity.gridelements.init",{"_index":1221,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["modelentity.gridelements.isinitialized",{"_index":1220,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["modelentity.gridelements.remove(el",{"_index":1266,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["modelentity.references.init",{"_index":1214,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["modelentity.references.isinitialized",{"_index":1213,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["modelentity.title",{"_index":1211,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["modelentity.xpos",{"_index":1217,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["modelentity.ypos",{"_index":1218,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["models",{"_index":3005,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["modification",{"_index":5388,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":5449,"title":{},"body":{"license.html":{}}}],["modified",{"_index":4968,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["modifier",{"_index":4491,"title":{},"body":{"changelog.html":{}}}],["modifies",{"_index":5562,"title":{},"body":{"license.html":{}}}],["modifing",{"_index":4302,"title":{},"body":{"changelog.html":{}}}],["modify",{"_index":5357,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":5417,"title":{},"body":{"license.html":{}}}],["modifytimestamp",{"_index":4497,"title":{},"body":{"changelog.html":{}}}],["modularization",{"_index":6196,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["modularize",{"_index":1736,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["module",{"_index":256,"title":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"modules/EncryptionModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/RocketChatModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/RocketChatModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["module.createnestapplication",{"_index":6887,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(entitymanager",{"_index":6890,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(mikroorm",{"_index":6889,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(newsrepo);test",{"_index":6856,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(newsuc",{"_index":6855,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.ts",{"_index":6115,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/application",{"_index":6811,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module/repo",{"_index":6602,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/uc",{"_index":6597,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modulefileextensions",{"_index":6098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modulenamemapper",{"_index":6125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moduleref",{"_index":2637,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["moduleref.get(catscontroller",{"_index":6826,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["moduleref.get(sampleservice",{"_index":6825,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["modules",{"_index":258,"title":{"modules.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"modules/EncryptionModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/RocketChatModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["modules/authentication/auth.module",{"_index":3184,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/authorization/authorization.module.ts",{"_index":6607,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers",{"_index":6605,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers.module.ts",{"_index":6606,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/files/files.module",{"_index":3173,"title":{},"body":{"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{}}}],["modules/learnroom/learnroom.module",{"_index":3191,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/management/management.module",{"_index":3172,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["modules/news/news.module",{"_index":3190,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/rocketchat/rocket",{"_index":3192,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/task/task.module",{"_index":3188,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/user/user.module",{"_index":3189,"title":{},"body":{"modules/ServerModule.html":{}}}],["moment",{"_index":5136,"title":{},"body":{"dependencies.html":{}}}],["mongo",{"_index":573,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongo.ensureinstance",{"_index":2644,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongo.geturi",{"_index":2645,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongod",{"_index":2662,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application.html":{}}}],["mongodatabasemoduleoptions",{"_index":2631,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/typealiases.html":{}}}],["mongodb",{"_index":1431,"title":{},"body":{"injectables/DatabaseManagementService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongoexport",{"_index":1470,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["mongoimport",{"_index":1497,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["mongomemorydatabasemodule",{"_index":2626,"title":{"modules/MongoMemoryDatabaseModule.html":{}},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mongomemorydatabasemodule.forroot",{"_index":6839,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mongomemoryserver",{"_index":2638,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongomemoryserver.create",{"_index":2643,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongoose",{"_index":3204,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["monitoring",{"_index":6443,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["moodle",{"_index":5154,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":3507,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["moreover",{"_index":5731,"title":{},"body":{"license.html":{}}}],["mostly",{"_index":6744,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mount",{"_index":3941,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["mounted",{"_index":5252,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mounts",{"_index":5946,"title":{},"body":{"todo.html":{}}}],["move",{"_index":3623,"title":{},"body":{"injectables/UserUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["moved",{"_index":3840,"title":{},"body":{"changelog.html":{}}}],["moveelement",{"_index":917,"title":{},"body":{"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{}}}],["moveelement(dashboardid",{"_index":922,"title":{},"body":{"controllers/DashboardController.html":{}}}],["moveelement(from",{"_index":998,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["moveelementondashboard",{"_index":1313,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["moveelementondashboard(dashboardid",{"_index":1318,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["moveelementparams",{"_index":923,"title":{"classes/MoveElementParams.html":{}},"body":{"controllers/DashboardController.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{}}}],["moveelementposition",{"_index":2671,"title":{"classes/MoveElementPosition.html":{}},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{}}}],["ms",{"_index":1618,"title":{},"body":{"controllers/DelayController.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["msg",{"_index":2059,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["much",{"_index":4804,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multilayered",{"_index":6342,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multiple",{"_index":1121,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/GlobalValidationPipe.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mylearningapp",{"_index":6371,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mylearningappadapter",{"_index":6373,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["n",{"_index":554,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["n21",{"_index":4791,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":113,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["named",{"_index":5298,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nameonly",{"_index":1444,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["names",{"_index":1472,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"controllers/NewsController.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["naming",{"_index":3712,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nanoid",{"_index":5156,"title":{},"body":{"dependencies.html":{}}}],["nat",{"_index":4178,"title":{},"body":{"changelog.html":{}}}],["native",{"_index":5173,"title":{},"body":{"dependencies.html":{}}}],["nature",{"_index":5573,"title":{},"body":{"license.html":{}}}],["nbc",{"_index":3924,"title":{},"body":{"changelog.html":{}}}],["nbc_importpassword",{"_index":4973,"title":{},"body":{"changelog.html":{}}}],["nbc_importurl",{"_index":4971,"title":{},"body":{"changelog.html":{}}}],["nbc_importuser",{"_index":4972,"title":{},"body":{"changelog.html":{}}}],["ne",{"_index":3460,"title":{},"body":{"classes/TaskScope.html":{}}}],["necessary",{"_index":4708,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["need",{"_index":2373,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["needed",{"_index":3734,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["needing",{"_index":3751,"title":{},"body":{"changelog.html":{}}}],["needs",{"_index":4367,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nest",{"_index":2083,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nest/legacy",{"_index":5975,"title":{},"body":{"todo.html":{}}}],["nest:build",{"_index":6214,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:build:all",{"_index":6219,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:console",{"_index":6238,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:console:dev",{"_index":6239,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:docs:build",{"_index":6232,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:docs:serve",{"_index":6234,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:lint",{"_index":6251,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:lint:fix",{"_index":6252,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:prebuild",{"_index":6213,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start",{"_index":6222,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:debug",{"_index":6226,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:dev",{"_index":6224,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:prod",{"_index":6229,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test",{"_index":6103,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:all",{"_index":6246,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:cov",{"_index":6247,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:debug",{"_index":6250,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:e2e",{"_index":6105,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:spec",{"_index":6104,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:watch",{"_index":6248,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nested",{"_index":4886,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["nestexpress.set('feathersapp",{"_index":1862,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["nestinterceptor",{"_index":1613,"title":{},"body":{"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["nestjs",{"_index":632,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"injectables/ConsoleWriterService.html":{},"classes/DatabaseManagementConsole.html":{},"classes/DeleteFilesConsole.html":{},"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/Options.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"classes/TestBootstrapConsole.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["nestjs/clithen",{"_index":6271,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nestjs/common",{"_index":19,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"injectables/LessonRepo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/StorageProviderRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1616,"title":{},"body":{"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/InterceptorModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":275,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":5068,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":273,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":5070,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":903,"title":{},"body":{"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/PatchGroupParams.html":{},"classes/ResolvedUser.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"controllers/UserController.html":{},"classes/UserInfoResponse.html":{},"dependencies.html":{}}}],["nestjs/testing",{"_index":1615,"title":{},"body":{"controllers/DelayController.html":{},"classes/TestBootstrapConsole.html":{}}}],["nestjs/testing.test",{"_index":6816,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["nestjs@7",{"_index":3786,"title":{},"body":{"changelog.html":{}}}],["nestjs@8",{"_index":3787,"title":{},"body":{"changelog.html":{}}}],["net",{"_index":5271,"title":{},"body":{"index.html":{}}}],["network",{"_index":5329,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["neutral",{"_index":6468,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["never",{"_index":314,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["new",{"_index":148,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/BaseFile.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"modules/ManagementModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/Role.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/User.html":{},"classes/UserInfoMapper.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newfactory",{"_index":461,"title":{},"body":{"classes/BaseFactory.html":{}}}],["newgroupname",{"_index":1056,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["newly",{"_index":6648,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["newpropsfactory",{"_index":459,"title":{},"body":{"classes/BaseFactory.html":{}}}],["news",{"_index":769,"title":{"classes/News.html":{}},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["news.content",{"_index":2811,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.controller",{"_index":2858,"title":{},"body":{"modules/NewsModule.html":{}}}],["news.controller.ts",{"_index":3520,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["news.controller.ts:22",{"_index":3524,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["news.createdat",{"_index":2832,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.createinstance(targetmodel",{"_index":2981,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news.displayat",{"_index":2813,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.id",{"_index":2807,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.params.ts",{"_index":875,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{},"miscellaneous/variables.html":{}}}],["news.params.ts:14",{"_index":3573,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:15",{"_index":900,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:21",{"_index":880,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{}}}],["news.params.ts:28",{"_index":3572,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:29",{"_index":889,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:37",{"_index":899,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:44",{"_index":894,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.permissions",{"_index":2836,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.source",{"_index":2815,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.sourcedescription",{"_index":2817,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.target.id",{"_index":2819,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.targetmodel",{"_index":2821,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.title",{"_index":2809,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.updatedat",{"_index":2834,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.updater",{"_index":2828,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news:104",{"_index":777,"title":{},"body":{"classes/CourseNews.html":{}}}],["news:110",{"_index":3518,"title":{},"body":{"classes/TeamNews.html":{}}}],["news:31",{"_index":801,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:35",{"_index":778,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:39",{"_index":783,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:42",{"_index":791,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:45",{"_index":796,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:48",{"_index":797,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:55",{"_index":799,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:58",{"_index":793,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:61",{"_index":782,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:64",{"_index":803,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:66",{"_index":792,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:79",{"_index":806,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:98",{"_index":3138,"title":{},"body":{"classes/SchoolNews.html":{}}}],["news[key",{"_index":3002,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news].param.ts",{"_index":6618,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news].response.dto",{"_index":6622,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news_add_target_schools",{"_index":2863,"title":{},"body":{"modules/NewsModule.html":{}}}],["news_create",{"_index":2979,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news_edit",{"_index":2974,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["news_sources",{"_index":2783,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"miscellaneous/variables.html":{}}}],["news_sources[number",{"_index":2785,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{}}}],["news_view",{"_index":2973,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newscontroller",{"_index":2702,"title":{"controllers/NewsController.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{}}}],["newscount",{"_index":2990,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsentities",{"_index":2890,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["newsentities.filter((news",{"_index":2897,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["newsentity",{"_index":2887,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["newsfilterquery",{"_index":2714,"title":{"classes/NewsFilterQuery.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"controllers/TeamNewsController.html":{}}}],["newsid",{"_index":2712,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newslist",{"_index":2740,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"controllers/TeamNewsController.html":{}}}],["newslist.length",{"_index":2995,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newslist.map((news",{"_index":2744,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["newslist.map(async",{"_index":2992,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newslistresponse",{"_index":2716,"title":{"classes/NewsListResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newslistresponse(dtolist",{"_index":2745,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["newsmapper",{"_index":2731,"title":{"classes/NewsMapper.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"controllers/TeamNewsController.html":{}}}],["newsmapper.mapcreatenewstodomain(params",{"_index":2738,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapnewsscopetodomain(scope",{"_index":2742,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["newsmapper.maptoresponse(news",{"_index":2739,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapupdatenewstodomain(params",{"_index":2750,"title":{},"body":{"controllers/NewsController.html":{}}}],["newsmodule",{"_index":2845,"title":{"modules/NewsModule.html":{}},"body":{"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["newsrepo",{"_index":2850,"title":{"injectables/NewsRepo.html":{}},"body":{"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newsresponse",{"_index":2730,"title":{"classes/NewsResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{}}}],["newsscope",{"_index":2882,"title":{"classes/NewsScope.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{}}}],["newstarget",{"_index":809,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TargetInfoMapper.html":{},"classes/TeamNews.html":{},"miscellaneous/typealiases.html":{}}}],["newstargetfilter",{"_index":2871,"title":{"interfaces/NewsTargetFilter.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{}}}],["newstargetmodel",{"_index":307,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"miscellaneous/enumerations.html":{}}}],["newstargetmodel.course",{"_index":828,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodel.school",{"_index":328,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodel.team",{"_index":831,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newsuc",{"_index":2728,"title":{"injectables/NewsUc.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsUc.html":{},"controllers/TeamNewsController.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newsuc.getrequiredpermissions(ispublished",{"_index":2999,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsuc.getrequiredpermissions(unpublished",{"_index":2986,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newvar",{"_index":159,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["nexboard",{"_index":4946,"title":{},"body":{"changelog.html":{}}}],["next",{"_index":45,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"classes/CourseNews.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"modules/ManagementModule.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["next.handle().pipe",{"_index":3561,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["next.handle().pipe(tap",{"_index":1710,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["niedersachsen",{"_index":4514,"title":{},"body":{"changelog.html":{}}}],["node",{"_index":1971,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":5249,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{}}}],["node_env",{"_index":5046,"title":{},"body":{"changelog.html":{}}}],["nodejs",{"_index":6516,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["nodeps",{"_index":5151,"title":{},"body":{"dependencies.html":{}}}],["nodeps.git",{"_index":5153,"title":{},"body":{"dependencies.html":{}}}],["non",{"_index":1741,"title":{},"body":{"classes/EncryptedStringType.html":{},"classes/TaskScope.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["noncommercially",{"_index":5605,"title":{},"body":{"license.html":{}}}],["none",{"_index":4829,"title":{},"body":{"changelog.html":{}}}],["nonemptytargets",{"_index":3010,"title":{},"body":{"injectables/NewsUc.html":{}}}],["normal",{"_index":4305,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["normally",{"_index":5633,"title":{},"body":{"license.html":{}}}],["not_found_error",{"_index":6174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["not_found_error_type",{"_index":6054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notable",{"_index":3649,"title":{},"body":{"changelog.html":{}}}],["notation",{"_index":471,"title":{},"body":{"classes/BaseFactory.html":{}}}],["note",{"_index":355,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/MongoMemoryDatabaseModule.html":{},"index.html":{}}}],["notfound",{"_index":6458,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["notfoundexception",{"_index":1004,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"injectables/FeathersAuthProvider.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{}}}],["notfoundexception('no",{"_index":1076,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["notfoundexception(`the",{"_index":2622,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{}}}],["nothing",{"_index":5743,"title":{},"body":{"license.html":{}}}],["notice",{"_index":5437,"title":{},"body":{"license.html":{}}}],["notices",{"_index":5433,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":5732,"title":{},"body":{"license.html":{}}}],["notify",{"_index":5728,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":5683,"title":{},"body":{"license.html":{}}}],["november",{"_index":5309,"title":{},"body":{"license.html":{}}}],["now",{"_index":887,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/ICollectionFilePath.html":{},"classes/NewsScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["now.getfullyear()}_",{"_index":1518,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["now.getmonth",{"_index":1519,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["now}ms",{"_index":1712,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["npm",{"_index":3688,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["null",{"_index":1818,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"injectables/NewsUc.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{}}}],["nullish",{"_index":1740,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["number",{"_index":37,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/BaseFactory.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/DeleteFilesConsole.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/IPagination.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/JwtPayload.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"classes/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskWithStatusVo.html":{},"injectables/TimeoutInterceptor.html":{},"classes/ValidationError.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["numbered",{"_index":5861,"title":{},"body":{"license.html":{}}}],["numberoffiles",{"_index":1670,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["numberofstudents",{"_index":2366,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["numbers",{"_index":6016,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["numeric",{"_index":4851,"title":{},"body":{"changelog.html":{}}}],["nuxt",{"_index":4098,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["nvmrc",{"_index":6197,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["o",{"_index":1365,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["o.id",{"_index":3332,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{}}}],["oauth",{"_index":4562,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["oauth2",{"_index":4360,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["object",{"_index":417,"title":{},"body":{"classes/BaseFactory.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["object.assign(this",{"_index":819,"title":{},"body":{"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/TeamNews.html":{}}}],["object.entries(params",{"_index":3001,"title":{},"body":{"injectables/NewsUc.html":{}}}],["object.setprototypeof(this",{"_index":56,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["object.values(constraint",{"_index":233,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["object.values(newstargetmodel",{"_index":908,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"miscellaneous/variables.html":{}}}],["objectid",{"_index":345,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"injectables/FeathersAuthProvider.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["objectid().tohexstring",{"_index":6161,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["objectid().tostring",{"_index":1287,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["objectid.createfromhexstring(id",{"_index":1114,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["objectid.isvalid(value",{"_index":3047,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["objects",{"_index":570,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["obligate",{"_index":5842,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":5618,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":5524,"title":{},"body":{"license.html":{}}}],["observable",{"_index":1702,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["obsolete",{"_index":4974,"title":{},"body":{"changelog.html":{}}}],["obviously",{"_index":6395,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occasionally",{"_index":5604,"title":{},"body":{"license.html":{}}}],["occurred",{"_index":2061,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occurring",{"_index":5740,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":4411,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["odered",{"_index":2953,"title":{},"body":{"injectables/NewsUc.html":{}}}],["of.ts",{"_index":6010,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["offer",{"_index":5354,"title":{},"body":{"license.html":{}}}],["offered",{"_index":5624,"title":{},"body":{"license.html":{}}}],["offering",{"_index":5608,"title":{},"body":{"license.html":{}}}],["offers",{"_index":6236,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["official",{"_index":5451,"title":{},"body":{"license.html":{}}}],["officialschoolnumber",{"_index":4296,"title":{},"body":{"changelog.html":{}}}],["officialschoonnumber",{"_index":4141,"title":{},"body":{"changelog.html":{}}}],["offline",{"_index":4218,"title":{},"body":{"changelog.html":{}}}],["offset",{"_index":3427,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["ok",{"_index":4781,"title":{},"body":{"changelog.html":{}}}],["ok/err",{"_index":6677,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["okay",{"_index":6752,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["old",{"_index":3892,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["older",{"_index":4956,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["omit",{"_index":2577,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["once",{"_index":6293,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["one",{"_index":1545,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/JwtStrategy.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["onepassword",{"_index":3778,"title":{},"body":{"changelog.html":{}}}],["onerror",{"_index":4917,"title":{},"body":{"changelog.html":{}}}],["ones",{"_index":6593,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["onetomany",{"_index":1109,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["onetomany('dashboardgridelementmodel",{"_index":1131,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["onetomany('defaultgridreferencemodel",{"_index":1104,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["onetomany('submission",{"_index":2323,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["oneweekago",{"_index":3512,"title":{},"body":{"injectables/TaskUC.html":{}}}],["oneweekago.setdate(oneweekago.getdate",{"_index":3513,"title":{},"body":{"injectables/TaskUC.html":{}}}],["onload",{"_index":4670,"title":{},"body":{"changelog.html":{}}}],["onmoduledestroy",{"_index":2633,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["onto",{"_index":6386,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["onupdate",{"_index":379,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["open",{"_index":3964,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["openapi",{"_index":3745,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["opened",{"_index":6227,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["operate",{"_index":5890,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["operated",{"_index":5612,"title":{},"body":{"license.html":{}}}],["operates",{"_index":6743,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["operating",{"_index":5467,"title":{},"body":{"license.html":{}}}],["operation",{"_index":5022,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["operational",{"_index":4496,"title":{},"body":{"changelog.html":{}}}],["operations",{"_index":3320,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["operator",{"_index":3142,"title":{},"body":{"classes/Scope.html":{},"license.html":{}}}],["opportunity",{"_index":5849,"title":{},"body":{"license.html":{}}}],["opposed",{"_index":6913,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["ops",{"_index":3933,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["opt",{"_index":4923,"title":{},"body":{"changelog.html":{}}}],["optimization",{"_index":6628,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["optimizations",{"_index":6919,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["option",{"_index":2653,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["optional",{"_index":189,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"classes/BaseFile.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"interfaces/Mail.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["optionaldatathere",{"_index":6733,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["optionally",{"_index":1492,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["options",{"_index":71,"title":{"interfaces/Options.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"classes/DatabaseManagementConsole.html":{},"modules/EncryptionModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["options.collection",{"_index":1360,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["options.exchange",{"_index":2581,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["options.order",{"_index":2988,"title":{},"body":{"injectables/NewsUc.html":{}}}],["options.routingkey",{"_index":2586,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["options.symmetriccipherkey",{"_index":1760,"title":{},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{}}}],["options.ts",{"_index":2195,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["options.uri",{"_index":2583,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["options?.collection",{"_index":1359,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["options?.override",{"_index":1368,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["ora",{"_index":633,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["ora.ora",{"_index":629,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["orchestration",{"_index":4291,"title":{},"body":{"changelog.html":{}}}],["orchestrator",{"_index":4385,"title":{},"body":{"changelog.html":{}}}],["order",{"_index":2196,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["orderby",{"_index":1504,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["orderby(bsondocuments",{"_index":1588,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["ordering",{"_index":4852,"title":{},"body":{"changelog.html":{}}}],["organisation",{"_index":4538,"title":{},"body":{"changelog.html":{}}}],["organization",{"_index":5754,"title":{},"body":{"license.html":{}}}],["organizations",{"_index":5399,"title":{},"body":{"license.html":{}}}],["oriented",{"_index":6295,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["origin",{"_index":4331,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["original",{"_index":4970,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["orm",{"_index":2342,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["orm.close",{"_index":6894,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["orm.io",{"_index":6282,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["orm/core",{"_index":353,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"classes/EncryptedStringType.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"modules/ServerModule.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"dependencies.html":{}}}],["orm/core/enums",{"_index":2881,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["orm/entitymanager",{"_index":6831,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["orm/mikro",{"_index":6670,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["orm/mongodb",{"_index":354,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementService.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FilesRepo.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/IDashboardRepo.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/UserRepo.html":{},"dependencies.html":{}}}],["orm/nestjs",{"_index":2606,"title":{},"body":{"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"dependencies.html":{}}}],["orphaned",{"_index":3692,"title":{},"body":{"changelog.html":{}}}],["os",{"_index":1926,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["os.eol",{"_index":1962,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["others",{"_index":2133,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["otherwise",{"_index":2650,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ours",{"_index":6584,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["out",{"_index":268,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DeleteFilesUc.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/NewsModule.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"changelog.html":{},"license.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["outcome",{"_index":6761,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["outdated",{"_index":5948,"title":{},"body":{"todo.html":{}}}],["outgoing",{"_index":6463,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["output",{"_index":3158,"title":{},"body":{"classes/ServerConsole.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["outputs",{"_index":4960,"title":{},"body":{"changelog.html":{}}}],["outside",{"_index":1064,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["over",{"_index":4050,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["overall",{"_index":6873,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overhead",{"_index":6367,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overridden",{"_index":6726,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["override",{"_index":1352,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["overrideguard(jwtauthguard",{"_index":6878,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overrideprovider(authorizationservice",{"_index":6886,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overrides",{"_index":1762,"title":{},"body":{"modules/ErrorModule.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["overrides/configures",{"_index":655,"title":{},"body":{"modules/CoreModule.html":{}}}],["overriding",{"_index":6012,"title":{},"body":{"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["overview",{"_index":3807,"title":{"overview.html":{}},"body":{"changelog.html":{},"overview.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overwritten",{"_index":4247,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["owned",{"_index":5783,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owner",{"_index":6333,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ownership",{"_index":2786,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owns",{"_index":3401,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["p",{"_index":6203,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["package",{"_index":4669,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"todo.html":{}}}],["packaged",{"_index":5568,"title":{},"body":{"license.html":{}}}],["packages",{"_index":5940,"title":{},"body":{"todo.html":{}}}],["packaging",{"_index":5461,"title":{},"body":{"license.html":{}}}],["page",{"_index":3019,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/PaginationQuery.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["pages",{"_index":3025,"title":{},"body":{"classes/PaginationQuery.html":{},"index.html":{}}}],["paginate",{"_index":1813,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["pagination",{"_index":2197,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/LessonRepo.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["pagination.query",{"_index":6559,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pagination?.limit",{"_index":3429,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["pagination?.skip",{"_index":3428,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["pagination].query.ts",{"_index":6620,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationquery",{"_index":2715,"title":{"classes/PaginationQuery.html":{}},"body":{"controllers/NewsController.html":{},"classes/PaginationQuery.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationresponse",{"_index":2771,"title":{"classes/PaginationResponse.html":{}},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["paginationresponse:102",{"_index":2775,"title":{},"body":{"classes/NewsListResponse.html":{}}}],["paginationresponse:14",{"_index":2778,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/TaskListResponse.html":{}}}],["paginationresponse:17",{"_index":2777,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/TaskListResponse.html":{}}}],["paginationresponse:20",{"_index":2776,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/TaskListResponse.html":{}}}],["paginationresponse:55",{"_index":3359,"title":{},"body":{"classes/TaskListResponse.html":{}}}],["paging",{"_index":4980,"title":{},"body":{"changelog.html":{}}}],["papaparse",{"_index":5160,"title":{},"body":{"dependencies.html":{}}}],["paper",{"_index":5913,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":5719,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":5793,"title":{},"body":{"license.html":{}}}],["parallel",{"_index":3797,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["parallelize",{"_index":4088,"title":{},"body":{"changelog.html":{}}}],["param",{"_index":327,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"injectables/BsonConverter.html":{},"controllers/DashboardController.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DeleteFilesUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{}}}],["param('id",{"_index":950,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{}}}],["param('teamid",{"_index":3527,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["param)).rejects.tothrow(badrequestexception",{"_index":6807,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["param)).tothrow(badrequestexception",{"_index":6805,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["param.ts",{"_index":6558,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paramdisplayat",{"_index":2980,"title":{},"body":{"injectables/NewsUc.html":{}}}],["parameter",{"_index":2374,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"controllers/NewsController.html":{},"classes/Task.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["parameters",{"_index":188,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["params",{"_index":402,"title":{},"body":{"classes/BaseFactory.html":{},"controllers/DashboardController.html":{},"injectables/DashboardUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["params(params",{"_index":440,"title":{},"body":{"classes/BaseFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["params.content",{"_index":2841,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.course",{"_index":3354,"title":{},"body":{"classes/TaskFactory.html":{}}}],["params.displayat",{"_index":2842,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.from",{"_index":954,"title":{},"body":{"controllers/DashboardController.html":{}}}],["params.target",{"_index":2977,"title":{},"body":{"injectables/NewsUc.html":{}}}],["params.targetid",{"_index":2844,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.targetmodel",{"_index":2843,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.title",{"_index":959,"title":{},"body":{"controllers/DashboardController.html":{},"classes/NewsMapper.html":{}}}],["params.to",{"_index":955,"title":{},"body":{"controllers/DashboardController.html":{}}}],["param|query].ts",{"_index":6557,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parent",{"_index":2361,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"changelog.html":{}}}],["parentids",{"_index":3402,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentids.courseids",{"_index":3412,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentids.lessonids",{"_index":3414,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentids.teacherid",{"_index":3410,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentidscope",{"_index":3408,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentidscope.bycourseids(parentids.courseids",{"_index":3413,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentidscope.bylessonids(parentids.lessonids",{"_index":3415,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentidscope.byteacherid(parentids.teacherid",{"_index":3411,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parents",{"_index":2365,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskWithStatusVo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["parse",{"_index":4610,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parsed",{"_index":6617,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parseobjectidpipe",{"_index":937,"title":{"injectables/ParseObjectIdPipe.html":{}},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"injectables/ParseObjectIdPipe.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parser",{"_index":5090,"title":{},"body":{"dependencies.html":{}}}],["parsing",{"_index":3910,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["part",{"_index":2388,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["partial",{"_index":447,"title":{},"body":{"classes/BaseFactory.html":{},"interfaces/ICreateNews.html":{},"interfaces/IFindOptions.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["partialtype",{"_index":2678,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/UpdateNewsParams.html":{}}}],["particular",{"_index":5455,"title":{},"body":{"license.html":{}}}],["parties",{"_index":5425,"title":{},"body":{"license.html":{}}}],["parts",{"_index":5484,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["party",{"_index":5613,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["party's",{"_index":5759,"title":{},"body":{"license.html":{}}}],["pascalcase",{"_index":6585,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pass",{"_index":2130,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["passed",{"_index":442,"title":{},"body":{"classes/BaseFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"miscellaneous/variables.html":{}}}],["passport",{"_index":2464,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":272,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":2466,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":2468,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":117,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"modules/ManagementModule.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["passwordrecovery",{"_index":4282,"title":{},"body":{"changelog.html":{}}}],["past",{"_index":784,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["patch",{"_index":932,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"changelog.html":{}}}],["patch(':id",{"_index":2726,"title":{},"body":{"controllers/NewsController.html":{}}}],["patch(':id/element",{"_index":930,"title":{},"body":{"controllers/DashboardController.html":{}}}],["patch(':id/moveelement",{"_index":949,"title":{},"body":{"controllers/DashboardController.html":{}}}],["patch(':id/moveelement')@apibody({type",{"_index":924,"title":{},"body":{"controllers/DashboardController.html":{}}}],["patchgroup",{"_index":918,"title":{},"body":{"controllers/DashboardController.html":{}}}],["patchgroup(dashboardid",{"_index":927,"title":{},"body":{"controllers/DashboardController.html":{}}}],["patchgroupparams",{"_index":929,"title":{"classes/PatchGroupParams.html":{}},"body":{"controllers/DashboardController.html":{},"classes/PatchGroupParams.html":{}}}],["patching",{"_index":3050,"title":{},"body":{"classes/PatchGroupParams.html":{},"changelog.html":{}}}],["patent",{"_index":5718,"title":{},"body":{"license.html":{}}}],["patents",{"_index":5778,"title":{},"body":{"license.html":{}}}],["path",{"_index":1499,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["path's",{"_index":6126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path.join(...paths",{"_index":1975,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["paths",{"_index":1483,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["pattern",{"_index":909,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["payload",{"_index":2461,"title":{},"body":{"injectables/JwtStrategy.html":{},"changelog.html":{}}}],["payload.ts",{"_index":2453,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["payload.user",{"_index":2480,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payment",{"_index":5823,"title":{},"body":{"license.html":{}}}],["peer",{"_index":5620,"title":{},"body":{"license.html":{}}}],["peers",{"_index":5623,"title":{},"body":{"license.html":{}}}],["pencil",{"_index":4337,"title":{},"body":{"changelog.html":{}}}],["per",{"_index":6572,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["performance",{"_index":4197,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["performing",{"_index":5475,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":5727,"title":{},"body":{"license.html":{}}}],["permission",{"_index":788,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"changelog.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["permission.includes('news",{"_index":3015,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permissions",{"_index":309,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolNews.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["permissions.every((p",{"_index":336,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["permissions.filter((permission",{"_index":3014,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permissions.refid",{"_index":4933,"title":{},"body":{"changelog.html":{}}}],["permissions.refpermmodel",{"_index":4934,"title":{},"body":{"changelog.html":{}}}],["permissive",{"_index":5550,"title":{},"body":{"license.html":{}}}],["permit",{"_index":5581,"title":{},"body":{"license.html":{}}}],["permits",{"_index":5370,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":5318,"title":{},"body":{"license.html":{}}}],["permittedcourses",{"_index":3325,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["permittedcourses.map((o",{"_index":3331,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["perpetuity",{"_index":5660,"title":{},"body":{"license.html":{}}}],["persist",{"_index":519,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FilesRepo.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persist(entity",{"_index":532,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/FilesRepo.html":{},"interfaces/IDashboardRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["persist/make",{"_index":6633,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["persistall",{"_index":520,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["persistall(entities",{"_index":534,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["persistallandflush",{"_index":521,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["persistallandflush(entities",{"_index":536,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["persistance",{"_index":3832,"title":{},"body":{"changelog.html":{}}}],["persistandflush",{"_index":522,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/FilesRepo.html":{},"interfaces/IDashboardRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["persistandflush(entity",{"_index":538,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/FilesRepo.html":{},"interfaces/IDashboardRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["persisted",{"_index":551,"title":{},"body":{"injectables/BaseRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persistence",{"_index":6636,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["persistent",{"_index":2599,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["persisting",{"_index":6724,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["person",{"_index":6755,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["personal",{"_index":4112,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["pertinent",{"_index":5840,"title":{},"body":{"license.html":{}}}],["phenomenon",{"_index":6647,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["physical",{"_index":5589,"title":{},"body":{"license.html":{}}}],["physically",{"_index":5602,"title":{},"body":{"license.html":{}}}],["physics",{"_index":1293,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["pick",{"_index":4423,"title":{},"body":{"changelog.html":{}}}],["pieces",{"_index":5347,"title":{},"body":{"license.html":{}}}],["pin",{"_index":4131,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["pins",{"_index":4294,"title":{},"body":{"changelog.html":{}}}],["pipe",{"_index":145,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pipe/global",{"_index":3644,"title":{},"body":{"modules/ValidationModule.html":{}}}],["pipeline",{"_index":4066,"title":{},"body":{"changelog.html":{}}}],["pipes",{"_index":6575,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["pipetransform",{"_index":3045,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["pipline",{"_index":4628,"title":{},"body":{"changelog.html":{}}}],["place",{"_index":3625,"title":{},"body":{"injectables/UserUC.html":{},"changelog.html":{},"license.html":{}}}],["plain",{"_index":571,"title":{},"body":{"injectables/BsonConverter.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["plainsecrets",{"_index":4479,"title":{},"body":{"changelog.html":{}}}],["plaintextcontent",{"_index":249,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["plaintextmailcontent",{"_index":247,"title":{"interfaces/PlainTextMailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["platform",{"_index":1727,"title":{},"body":{"classes/EncryptedStringType.html":{},"changelog.html":{}}}],["please",{"_index":6424,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["plugin",{"_index":5111,"title":{},"body":{"dependencies.html":{}}}],["plus",{"_index":5763,"title":{},"body":{"license.html":{}}}],["point",{"_index":882,"title":{},"body":{"classes/CreateNewsParams.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/UpdateNewsParams.html":{}}}],["pointer",{"_index":5910,"title":{},"body":{"license.html":{}}}],["policy",{"_index":4901,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["polymorphic",{"_index":1128,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["pool",{"_index":4461,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["populate",{"_index":2893,"title":{},"body":{"injectables/NewsRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["populated",{"_index":812,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["populates",{"_index":4857,"title":{},"body":{"changelog.html":{}}}],["port",{"_index":6208,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["portion",{"_index":5627,"title":{},"body":{"license.html":{}}}],["pos",{"_index":994,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"miscellaneous/variables.html":{}}}],["pos.x",{"_index":1059,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["pos.y",{"_index":1061,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["position",{"_index":984,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"changelog.html":{}}}],["position.groupindex",{"_index":1084,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["positionfromgridindex",{"_index":971,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["positionfromgridindex(index",{"_index":1000,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["possesses",{"_index":5599,"title":{},"body":{"license.html":{}}}],["possession",{"_index":5566,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":5892,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["possible",{"_index":4427,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["post",{"_index":1388,"title":{},"body":{"controllers/DatabaseManagementController.html":{},"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["post('export",{"_index":1381,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["post('export/:collectionname",{"_index":1378,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["post('seed",{"_index":1386,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["post('seed/:collectionname",{"_index":1384,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["post(`${this.options.uri}${path",{"_index":153,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["post(`${this.options.uri}/api/v1/login",{"_index":160,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["post(path",{"_index":152,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["postasadmin(path",{"_index":125,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["potential",{"_index":4207,"title":{},"body":{"changelog.html":{}}}],["povider",{"_index":5958,"title":{},"body":{"todo.html":{}}}],["power",{"_index":5534,"title":{},"body":{"license.html":{}}}],["pr",{"_index":5279,"title":{},"body":{"index.html":{}}}],["practical",{"_index":5331,"title":{},"body":{"license.html":{}}}],["practice",{"_index":5797,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["practices",{"_index":6906,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["practices/layers/orm",{"_index":5963,"title":{},"body":{"todo.html":{}}}],["preamble",{"_index":5322,"title":{},"body":{"license.html":{}}}],["precise",{"_index":5384,"title":{},"body":{"license.html":{}}}],["preconditions",{"_index":5244,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["predecessor",{"_index":5760,"title":{},"body":{"license.html":{}}}],["predefined",{"_index":6727,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["preexisting",{"_index":6769,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["preferred",{"_index":5448,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["prefix",{"_index":914,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/DatabaseManagementController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["preload",{"_index":4771,"title":{},"body":{"changelog.html":{}}}],["preloaded",{"_index":6930,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["preloading",{"_index":6929,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["prematurely",{"_index":4813,"title":{},"body":{"changelog.html":{}}}],["prepare",{"_index":2553,"title":{},"body":{"injectables/Logger.html":{}}}],["prepared",{"_index":3761,"title":{},"body":{"changelog.html":{}}}],["preparing",{"_index":3950,"title":{},"body":{"changelog.html":{}}}],["prepended",{"_index":5268,"title":{},"body":{"index.html":{}}}],["present",{"_index":4542,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["presentation",{"_index":6345,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["presents",{"_index":5441,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":5690,"title":{},"body":{"license.html":{}}}],["prettier",{"_index":4735,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["prevent",{"_index":371,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{}}}],["prevented",{"_index":4570,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["previous",{"_index":5762,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["price",{"_index":5343,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":5825,"title":{},"body":{"license.html":{}}}],["primary",{"_index":736,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{}}}],["primarykey",{"_index":347,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["primaryrolesearchoperation",{"_index":2238,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["primaryrolesearchoperation'})@unique",{"_index":3090,"title":{},"body":{"classes/Role.html":{}}}],["principle",{"_index":6829,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["principles",{"_index":6294,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["principles/command",{"_index":6679,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["print",{"_index":4632,"title":{},"body":{"changelog.html":{}}}],["prior",{"_index":1664,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"license.html":{}}}],["prioritization",{"_index":4115,"title":{},"body":{"changelog.html":{}}}],["prisma",{"_index":6915,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["privacy",{"_index":4897,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":35,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/ConsoleWriterService.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"injectables/JwtStrategy.html":{},"classes/LessonScope.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/Task.html":{},"classes/TaskFactory.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserUC.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["privatedevice",{"_index":2506,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["problem",{"_index":4962,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["problems",{"_index":4380,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["procedures",{"_index":5653,"title":{},"body":{"license.html":{}}}],["process",{"_index":4710,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["processed",{"_index":6533,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["processes",{"_index":6485,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["processing",{"_index":6384,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["procuring",{"_index":5815,"title":{},"body":{"license.html":{}}}],["produce",{"_index":5469,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["produces",{"_index":6721,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["product",{"_index":5590,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["production",{"_index":3995,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["products",{"_index":5826,"title":{},"body":{"license.html":{}}}],["program",{"_index":5338,"title":{},"body":{"license.html":{}}}],["program's",{"_index":5544,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":5919,"title":{},"body":{"license.html":{}}}],["programming",{"_index":5456,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["programs",{"_index":5348,"title":{},"body":{"license.html":{}}}],["prohibit",{"_index":5507,"title":{},"body":{"license.html":{},"todo.html":{}}}],["prohibiting",{"_index":5531,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":5820,"title":{},"body":{"license.html":{}}}],["project",{"_index":3651,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prom",{"_index":5164,"title":{},"body":{"dependencies.html":{}}}],["prometheus",{"_index":4481,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["prominent",{"_index":5444,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":5436,"title":{},"body":{"license.html":{}}}],["promise",{"_index":76,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/StorageProviderRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["promise((resolve",{"_index":1619,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["promise.all",{"_index":1222,"title":{},"body":{"injectables/DashboardModelMapper.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/NewsUc.html":{},"injectables/RoleUC.html":{},"miscellaneous/variables.html":{}}}],["promise.resolve",{"_index":1974,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["promise.resolve(currentuser.user",{"_index":3592,"title":{},"body":{"controllers/UserController.html":{}}}],["promises",{"_index":1953,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["promisify",{"_index":5110,"title":{},"body":{"dependencies.html":{}}}],["propagate",{"_index":5407,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":5746,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":5418,"title":{},"body":{"license.html":{}}}],["proper",{"_index":5002,"title":{},"body":{"changelog.html":{}}}],["properly",{"_index":3739,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["properties",{"_index":9,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/BaseFile.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/DeleteFilesConsole.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"interfaces/EncryptionModuleOptions.html":{},"interfaces/FeathersError.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/Lesson.html":{},"classes/LessonScope.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"interfaces/MailServiceOptions.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/PatchGroupParams.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"classes/School.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationError.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["properties)mongodb",{"_index":6912,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["propertiestopopulate",{"_index":1993,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{}}}],["property",{"_index":351,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"classes/File.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["property()@index({name",{"_index":3089,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["property({fieldname",{"_index":3212,"title":{},"body":{"classes/StorageProvider.html":{}}}],["property({onupdate",{"_index":386,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["propertydecorator",{"_index":5238,"title":{},"body":{"miscellaneous/functions.html":{}}}],["props",{"_index":452,"title":{},"body":{"classes/BaseFactory.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/File.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["props.accesskeyid",{"_index":2256,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{}}}],["props.availabledate",{"_index":2328,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["props.bucket",{"_index":511,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["props.color",{"_index":730,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.colums",{"_index":1066,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["props.comment",{"_index":2289,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["props.content",{"_index":816,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.course",{"_index":755,"title":{},"body":{"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Lesson.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["props.creator",{"_index":515,"title":{},"body":{"classes/BaseFile.html":{},"classes/CourseNews.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.deletedat",{"_index":507,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["props.description",{"_index":720,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.displayat",{"_index":818,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.duedate",{"_index":2330,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["props.email",{"_index":2409,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["props.endpointurl",{"_index":2254,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{}}}],["props.externalid",{"_index":823,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.firstname",{"_index":2405,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["props.grade",{"_index":2293,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["props.gradecomment",{"_index":2295,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["props.grid.foreach((element",{"_index":1069,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["props.hidden",{"_index":2216,"title":{},"body":{"interfaces/ILessonProperties.html":{},"classes/Lesson.html":{}}}],["props.id",{"_index":1039,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["props.lastname",{"_index":2407,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["props.lesson",{"_index":2336,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["props.name",{"_index":718,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"classes/Lesson.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{}}}],["props.permissions",{"_index":2242,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["props.private",{"_index":2331,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["props.references",{"_index":1041,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["props.region",{"_index":2260,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{}}}],["props.roles",{"_index":2244,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["props.rows",{"_index":1067,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["props.school",{"_index":723,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/ICourseProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["props.secretaccesskey",{"_index":2258,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{}}}],["props.source",{"_index":825,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.sourcedescription",{"_index":827,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.storagefilename",{"_index":509,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["props.storageprovider",{"_index":513,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["props.student",{"_index":2287,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["props.students",{"_index":724,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{}}}],["props.substitutionteachers",{"_index":728,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.target",{"_index":821,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.task",{"_index":2291,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["props.teacher",{"_index":2334,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["props.teachers",{"_index":726,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.title",{"_index":814,"title":{},"body":{"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.updater",{"_index":820,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["propsfactory",{"_index":396,"title":{},"body":{"classes/BaseFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["protect",{"_index":5350,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["protected",{"_index":395,"title":{},"body":{"classes/BaseFactory.html":{},"injectables/DashboardRepo.html":{},"injectables/FilesRepo.html":{},"interfaces/IDashboardRepo.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"injectables/TimeoutInterceptor.html":{}}}],["protecting",{"_index":5515,"title":{},"body":{"license.html":{}}}],["protection",{"_index":5555,"title":{},"body":{"license.html":{}}}],["protocol",{"_index":6287,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["protocols",{"_index":5673,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prototype",{"_index":54,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["prove",{"_index":5873,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["provide",{"_index":1627,"title":{},"body":{"controllers/DelayController.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/RocketChatModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["provided",{"_index":323,"title":{},"body":{"injectables/AuthorizationService.html":{},"modules/ErrorModule.html":{},"injectables/Logger.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["provider",{"_index":2556,"title":{},"body":{"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["providers",{"_index":270,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"controllers/DelayController.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/RocketChatModule.html":{},"modules/ServerConsoleModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["provides",{"_index":2551,"title":{},"body":{"injectables/Logger.html":{},"injectables/NewsUc.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["providing",{"_index":653,"title":{},"body":{"modules/CoreModule.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["provision",{"_index":5684,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":5724,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":5863,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":5864,"title":{},"body":{"license.html":{}}}],["pseudonym/roster/ltitools",{"_index":4358,"title":{},"body":{"changelog.html":{}}}],["pseudonyms",{"_index":4293,"title":{},"body":{"changelog.html":{}}}],["public",{"_index":72,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"controllers/DelayController.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"controllers/ServerController.html":{},"injectables/SymetricKeyEncryptionService.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["publicity",{"_index":5694,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":5377,"title":{},"body":{"license.html":{}}}],["publicteachers",{"_index":5014,"title":{},"body":{"changelog.html":{}}}],["publish",{"_index":4017,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["published",{"_index":888,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsUc.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pull",{"_index":4544,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{}}}],["pulled",{"_index":6418,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["purpose",{"_index":5224,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["purposes",{"_index":5636,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["pursuant",{"_index":5813,"title":{},"body":{"license.html":{}}}],["push",{"_index":3878,"title":{},"body":{"changelog.html":{}}}],["put",{"_index":1124,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["putting",{"_index":6635,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["qa",{"_index":4486,"title":{},"body":{"changelog.html":{}}}],["qf",{"_index":4100,"title":{},"body":{"changelog.html":{}}}],["qr",{"_index":4285,"title":{},"body":{"changelog.html":{}}}],["qs",{"_index":4527,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["qualify",{"_index":5736,"title":{},"body":{"license.html":{}}}],["quality",{"_index":5872,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["queries",{"_index":2928,"title":{},"body":{"classes/NewsScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["queries.length",{"_index":2932,"title":{},"body":{"classes/NewsScope.html":{}}}],["queries/requests",{"_index":6472,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["query",{"_index":857,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"injectables/FeathersAuthProvider.html":{},"classes/GlobalValidationPipe.html":{},"classes/LessonScope.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["query('x",{"_index":956,"title":{},"body":{"controllers/DashboardController.html":{}}}],["query('y",{"_index":957,"title":{},"body":{"controllers/DashboardController.html":{}}}],["query.targetid",{"_index":2838,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.targetmodel",{"_index":2837,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.unpublished",{"_index":2840,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query/body",{"_index":6616,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["query/empty",{"_index":3147,"title":{},"body":{"classes/Scope.html":{}}}],["queryordermap",{"_index":2880,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["querys",{"_index":3208,"title":{},"body":{"modules/ServerModule.html":{}}}],["querystring",{"_index":4526,"title":{},"body":{"changelog.html":{}}}],["rabbitmq",{"_index":2571,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{}}}],["rabbitmq:3.8.9",{"_index":6206,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["rabbitmq_url",{"_index":6200,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["rabbitmqmodule",{"_index":2569,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["rabbitmqmodule.forroot(rabbitmqmodule",{"_index":2579,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["rabbitmqmoduleoptions",{"_index":2576,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["raise",{"_index":4709,"title":{},"body":{"changelog.html":{}}}],["ram",{"_index":4151,"title":{},"body":{"changelog.html":{}}}],["random",{"_index":1922,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["rates",{"_index":6444,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["re",{"_index":4890,"title":{},"body":{"changelog.html":{}}}],["react",{"_index":5112,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":1935,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"controllers/NewsController.html":{},"injectables/TaskAuthorizationService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["readable",{"_index":5586,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["readdir",{"_index":1907,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["readdir(folderpath",{"_index":1929,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["readfile",{"_index":1908,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["readfile(filepath",{"_index":1933,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["readily",{"_index":5802,"title":{},"body":{"license.html":{}}}],["reading",{"_index":5675,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["readme",{"_index":4567,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":70,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["readpreference",{"_index":4436,"title":{},"body":{"changelog.html":{}}}],["reads",{"_index":4344,"title":{},"body":{"changelog.html":{}}}],["ready",{"_index":6663,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["real",{"_index":6828,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["really",{"_index":700,"title":{},"body":{"classes/Course.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["reason",{"_index":5811,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":5600,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["receipt",{"_index":5734,"title":{},"body":{"license.html":{}}}],["receive",{"_index":5346,"title":{},"body":{"license.html":{}}}],["received",{"_index":5570,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["receives",{"_index":5750,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":5817,"title":{},"body":{"license.html":{}}}],["recent",{"_index":4964,"title":{},"body":{"changelog.html":{}}}],["recieve",{"_index":3829,"title":{},"body":{"changelog.html":{}}}],["recipient",{"_index":5659,"title":{},"body":{"license.html":{}}}],["recipient's",{"_index":5809,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":252,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"license.html":{}}}],["recognized",{"_index":5452,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":6942,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["recommendations",{"_index":6936,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["recommended",{"_index":6934,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["reconnect",{"_index":4797,"title":{},"body":{"changelog.html":{}}}],["record",{"_index":30,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/ValidationError.html":{},"miscellaneous/typealiases.html":{}}}],["recreate",{"_index":4269,"title":{},"body":{"changelog.html":{}}}],["recreating",{"_index":4706,"title":{},"body":{"changelog.html":{}}}],["recursively",{"_index":1943,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["red",{"_index":5957,"title":{},"body":{"todo.html":{}}}],["redis",{"_index":2500,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"dependencies.html":{}}}],["redisidentifier",{"_index":2507,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["redistribute",{"_index":5906,"title":{},"body":{"license.html":{}}}],["reduce",{"_index":3887,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reduces",{"_index":4469,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["redundant",{"_index":5237,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refactor",{"_index":1301,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"changelog.html":{}}}],["refactored",{"_index":3824,"title":{},"body":{"changelog.html":{}}}],["refactoring",{"_index":3951,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["refactorings",{"_index":6416,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refactors",{"_index":4472,"title":{},"body":{"changelog.html":{}}}],["refer",{"_index":6645,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["reference",{"_index":811,"title":{},"body":{"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reference.getmetadata",{"_index":1049,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardModelMapper.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["referenced",{"_index":800,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["referencedid",{"_index":1036,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["referenceforindex",{"_index":1087,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["references",{"_index":1020,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["references[position.groupindex",{"_index":1088,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["referring",{"_index":5342,"title":{},"body":{"license.html":{}}}],["refers",{"_index":5389,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":5170,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["reflects",{"_index":6652,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["refrain",{"_index":5844,"title":{},"body":{"license.html":{}}}],["regard",{"_index":5680,"title":{},"body":{"license.html":{}}}],["regarding",{"_index":5265,"title":{},"body":{"index.html":{}}}],["regardless",{"_index":5567,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["regards",{"_index":4936,"title":{},"body":{"changelog.html":{}}}],["regenerate",{"_index":5485,"title":{},"body":{"license.html":{}}}],["regex",{"_index":4603,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["region",{"_index":1889,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{}}}],["registered",{"_index":4128,"title":{},"body":{"changelog.html":{}}}],["registernewuser(creatorid",{"_index":6685,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["registration",{"_index":3772,"title":{},"body":{"changelog.html":{}}}],["registrationlink",{"_index":4652,"title":{},"body":{"changelog.html":{}}}],["registrationlinks",{"_index":4909,"title":{},"body":{"changelog.html":{}}}],["registrationpin",{"_index":4418,"title":{},"body":{"changelog.html":{}}}],["regression",{"_index":5018,"title":{},"body":{"changelog.html":{}}}],["regularfiles",{"_index":2016,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["reigstration",{"_index":4414,"title":{},"body":{"changelog.html":{}}}],["reimplement",{"_index":6854,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reinstated",{"_index":5723,"title":{},"body":{"license.html":{}}}],["rejected",{"_index":6864,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["rejections",{"_index":4655,"title":{},"body":{"changelog.html":{}}}],["related",{"_index":893,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["relates",{"_index":6668,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["relation",{"_index":6923,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["relations",{"_index":3817,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["relationship",{"_index":2390,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"license.html":{}}}],["relative",{"_index":1498,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["release",{"_index":4126,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["released",{"_index":5382,"title":{},"body":{"license.html":{}}}],["releasing",{"_index":5372,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":5560,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["relicensing",{"_index":5383,"title":{},"body":{"license.html":{}}}],["relies",{"_index":6627,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reload",{"_index":5970,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["relying",{"_index":5801,"title":{},"body":{"license.html":{}}}],["remain",{"_index":5617,"title":{},"body":{"license.html":{}}}],["remains",{"_index":5340,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["remote",{"_index":5846,"title":{},"body":{"license.html":{}}}],["remotely",{"_index":5848,"title":{},"body":{"license.html":{}}}],["removal",{"_index":5681,"title":{},"body":{"license.html":{}}}],["remove",{"_index":523,"title":{},"body":{"injectables/BaseRepo.html":{},"classes/DeleteFilesConsole.html":{},"injectables/FilesRepo.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/StorageProviderRepo.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["remove(entity",{"_index":540,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["removeall",{"_index":524,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["removeall(entities",{"_index":542,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["removeallandflush",{"_index":525,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["removeallandflush(entities",{"_index":544,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["removeandflush",{"_index":526,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["removeandflush(entity",{"_index":546,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["removed",{"_index":856,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/DeleteFilesUc.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["removedeletedfilesdata",{"_index":1634,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{}}}],["removedeletedfilesdata(removedsince",{"_index":1661,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["removedeletedfilesdata(removedsincedays",{"_index":1638,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["removedirrecursive",{"_index":1909,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["removedirrecursive(folderpath",{"_index":1940,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["removedsince",{"_index":1651,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{}}}],["removedsince.setdate(removedsince.getdate",{"_index":1652,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["removedsincedays",{"_index":1645,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["removefromposition",{"_index":972,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["removefromposition(position",{"_index":1002,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["removegroupmoderator(groupname",{"_index":102,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["removeing",{"_index":4010,"title":{},"body":{"changelog.html":{}}}],["removereference",{"_index":2144,"title":{},"body":{"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["removereference(index",{"_index":1032,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["removes",{"_index":1942,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["removing",{"_index":4429,"title":{},"body":{"changelog.html":{}}}],["rename",{"_index":3775,"title":{},"body":{"changelog.html":{}}}],["rename_team",{"_index":4840,"title":{},"body":{"changelog.html":{}}}],["renamed",{"_index":4533,"title":{},"body":{"changelog.html":{}}}],["renamegroupondashboard",{"_index":1314,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["renamegroupondashboard(dashboardid",{"_index":1320,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["rendered",{"_index":5233,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["repair",{"_index":4362,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["repaired",{"_index":4390,"title":{},"body":{"changelog.html":{}}}],["repeats",{"_index":2617,"title":{},"body":{"modules/ManagementModule.html":{}}}],["replace",{"_index":3484,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["replaced",{"_index":2338,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["replaces",{"_index":4509,"title":{},"body":{"changelog.html":{}}}],["replacing",{"_index":6714,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["replikaset",{"_index":5960,"title":{},"body":{"todo.html":{}}}],["replyto",{"_index":255,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["repo",{"_index":1666,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"modules/FilesModule.html":{},"injectables/RoleUC.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"modules/UserModule.html":{},"injectables/UserUC.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repo.integration.spec.js",{"_index":6833,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["repo.ts",{"_index":6565,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["repo/news",{"_index":2972,"title":{},"body":{"injectables/NewsUc.html":{}}}],["repo/news.repo",{"_index":2855,"title":{},"body":{"modules/NewsModule.html":{},"injectables/NewsUc.html":{}}}],["report",{"_index":1362,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["reported",{"_index":6740,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["reporting",{"_index":6358,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reports",{"_index":6847,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["repositories",{"_index":3906,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repository",{"_index":3783,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["represent",{"_index":738,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"license.html":{}}}],["representation",{"_index":6259,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["req",{"_index":6880,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["req.user",{"_index":6882,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reqlib",{"_index":4304,"title":{},"body":{"changelog.html":{}}}],["request",{"_index":1830,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["request(app.gethttpserver()).delete(`/news/${newsid}`).expect(404",{"_index":6908,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["request(app.gethttpserver()).get(`/news`).expect(200",{"_index":6899,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["request.user",{"_index":2482,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["request.user.user",{"_index":2483,"title":{},"body":{"injectables/JwtStrategy.html":{},"todo.html":{}}}],["request/response",{"_index":6438,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["request/response/error",{"_index":6445,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["request_timeout",{"_index":3551,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["requested",{"_index":2623,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["requester",{"_index":4627,"title":{},"body":{"changelog.html":{}}}],["requests",{"_index":2416,"title":{},"body":{"modules/InterceptorModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["requesttimeoutexception",{"_index":3558,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["require",{"_index":4306,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["require('../../../../../../src/services/authentication/logic/whitelist",{"_index":2502,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["require('../../../../../src/services/authentication/configuration",{"_index":2428,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["require('../../../../config/globals",{"_index":2029,"title":{},"body":{"interfaces/GlobalConstants.html":{}}}],["require('./tsconfig.json",{"_index":6132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('rimraf",{"_index":1958,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["require('ts",{"_index":6130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1356,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"classes/GlobalValidationPipe.html":{},"injectables/JwtValidationAdapter.html":{},"interfaces/Options.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["requiredpermissions",{"_index":2998,"title":{},"body":{"injectables/NewsUc.html":{}}}],["requirement",{"_index":5561,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":5619,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["requires",{"_index":1866,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"injectables/TaskUC.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["requiring",{"_index":5402,"title":{},"body":{"license.html":{}}}],["reset",{"_index":267,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"classes/DatabaseManagementConsole.html":{},"modules/DatabaseManagementModule.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/NewsModule.html":{},"interfaces/Options.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/nestjs-application.html":{}}}],["resolve",{"_index":3820,"title":{},"body":{"changelog.html":{}}}],["resolved",{"_index":3629,"title":{},"body":{"injectables/UserUC.html":{},"license.html":{}}}],["resolved.permissions",{"_index":3632,"title":{},"body":{"injectables/UserUC.html":{}}}],["resolved.roles",{"_index":3633,"title":{},"body":{"injectables/UserUC.html":{}}}],["resolveduser",{"_index":2478,"title":{"classes/ResolvedUser.html":{}},"body":{"injectables/JwtStrategy.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserUC.html":{},"miscellaneous/variables.html":{}}}],["resolvedusermapper",{"_index":3061,"title":{"classes/ResolvedUserMapper.html":{}},"body":{"classes/ResolvedUserMapper.html":{},"injectables/UserUC.html":{}}}],["resolvedusermapper.maptoresponse(user",{"_index":3631,"title":{},"body":{"injectables/UserUC.html":{},"miscellaneous/variables.html":{}}}],["resolvepermissionsbyroles",{"_index":3112,"title":{},"body":{"injectables/RoleUC.html":{}}}],["resolvepermissionsbyroles(inputroles",{"_index":3115,"title":{},"body":{"injectables/RoleUC.html":{}}}],["resolvepermissionsfromsubrolesbyid",{"_index":3098,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["resolvepermissionsfromsubrolesbyid(id",{"_index":3104,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["resolves",{"_index":2875,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["resolveuser",{"_index":3594,"title":{},"body":{"injectables/UserFacade.html":{}}}],["resolveuser(userid",{"_index":3597,"title":{},"body":{"injectables/UserFacade.html":{}}}],["resort",{"_index":3905,"title":{},"body":{"changelog.html":{}}}],["resource",{"_index":3888,"title":{},"body":{"changelog.html":{}}}],["resources",{"_index":6844,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["respect",{"_index":5538,"title":{},"body":{"license.html":{}}}],["respond",{"_index":5981,"title":{},"body":{"todo.html":{}}}],["responds",{"_index":2718,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["response",{"_index":38,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"controllers/NewsController.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["response.body",{"_index":6900,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["response.status(errorresponse.code).json(errorresponse",{"_index":2112,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["response.ts",{"_index":6561,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["response?.data",{"_index":151,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["response].ts",{"_index":6560,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responsejson",{"_index":163,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["responsejson.data.authtoken",{"_index":165,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["responsejson.data.userid",{"_index":164,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["responses",{"_index":6382,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsibilities",{"_index":6615,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responsibility",{"_index":6326,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsible",{"_index":5751,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["respository",{"_index":6632,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["ressource",{"_index":4118,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["ressources",{"_index":6215,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["resssource",{"_index":5982,"title":{},"body":{"todo.html":{}}}],["rest",{"_index":1695,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["restart",{"_index":6505,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restful/socket",{"_index":6435,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restored",{"_index":4566,"title":{},"body":{"changelog.html":{}}}],["restrict",{"_index":4301,"title":{},"body":{"changelog.html":{}}}],["restricted",{"_index":1675,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"injectables/NewsUc.html":{}}}],["restricting",{"_index":5532,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":5710,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":4895,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["restricts",{"_index":4623,"title":{},"body":{"changelog.html":{}}}],["restructure",{"_index":4029,"title":{},"body":{"changelog.html":{}}}],["result",{"_index":734,"title":{},"body":{"classes/Course.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardModelMapper.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"classes/NewsScope.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["result.color",{"_index":1232,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["result.gridelement",{"_index":1236,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["result.query",{"_index":3148,"title":{},"body":{"classes/Scope.html":{}}}],["result.query.ts",{"_index":6046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["result.title",{"_index":1234,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["resulted",{"_index":4887,"title":{},"body":{"changelog.html":{}}}],["resultelement",{"_index":1079,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["resulting",{"_index":5369,"title":{},"body":{"license.html":{}}}],["results",{"_index":171,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/BaseFile.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["retains",{"_index":5663,"title":{},"body":{"license.html":{}}}],["retention",{"_index":6491,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieve",{"_index":2722,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieves",{"_index":6527,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retry",{"_index":6499,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["return",{"_index":77,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["returned",{"_index":424,"title":{},"body":{"classes/BaseFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"changelog.html":{}}}],["returning",{"_index":3361,"title":{},"body":{"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"changelog.html":{}}}],["returns",{"_index":198,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"modules/RocketChatModule.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["retvalue",{"_index":6783,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reusability",{"_index":6300,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reusable",{"_index":3698,"title":{},"body":{"changelog.html":{}}}],["reused",{"_index":6574,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reused/called",{"_index":6394,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["revert",{"_index":4181,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["reverted",{"_index":4273,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["review",{"_index":4593,"title":{},"body":{"changelog.html":{}}}],["reviewers",{"_index":5294,"title":{},"body":{"index.html":{}}}],["reviewing",{"_index":5895,"title":{},"body":{"license.html":{}}}],["revised",{"_index":5853,"title":{},"body":{"license.html":{}}}],["rewindsequence",{"_index":403,"title":{},"body":{"classes/BaseFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["rewrite",{"_index":3812,"title":{},"body":{"changelog.html":{}}}],["rich",{"_index":6651,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["right",{"_index":3624,"title":{},"body":{"injectables/UserUC.html":{},"changelog.html":{},"license.html":{}}}],["rights",{"_index":5351,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rimraf",{"_index":1957,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"dependencies.html":{}}}],["rimraf.sync(folderpath",{"_index":1973,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["risk",{"_index":5871,"title":{},"body":{"license.html":{}}}],["rocket",{"_index":3085,"title":{},"body":{"modules/RocketChatModule.html":{},"changelog.html":{}}}],["rocket_chat_options",{"_index":3087,"title":{},"body":{"modules/RocketChatModule.html":{}}}],["rocketchat",{"_index":39,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rocketchatadapter",{"_index":6390,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rocketchaterror",{"_index":32,"title":{"classes/RocketChatError.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["rocketchaterror(e",{"_index":149,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["rocketchaterror.prototype",{"_index":57,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["rocketchatmodule",{"_index":3081,"title":{"modules/RocketChatModule.html":{}},"body":{"modules/RocketChatModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["rocketchatmodule.forroot",{"_index":3198,"title":{},"body":{"modules/ServerModule.html":{}}}],["rocketchatoptions",{"_index":23,"title":{"interfaces/RocketChatOptions.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{}}}],["rocketchatservice",{"_index":67,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{}}}],["role",{"_index":2180,"title":{"classes/Role.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"injectables/JwtStrategy.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/User.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["role.entity",{"_index":2400,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["role.id",{"_index":3077,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"miscellaneous/variables.html":{}}}],["role.name",{"_index":3076,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["role.permissions",{"_index":3121,"title":{},"body":{"injectables/RoleUC.html":{}}}],["role.uc",{"_index":3622,"title":{},"body":{"injectables/UserUC.html":{}}}],["role/permissions",{"_index":6437,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rolefactory",{"_index":6057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roleidbasedsearches",{"_index":2402,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["roleidbasedsearches'})@manytomany('role",{"_index":3579,"title":{},"body":{"classes/User.html":{}}}],["roleids",{"_index":4730,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["rolerepo",{"_index":3093,"title":{"injectables/RoleRepo.html":{}},"body":{"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["roles",{"_index":2177,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleUC.html":{},"classes/User.html":{},"injectables/UserUC.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["roles.foreach((role",{"_index":3120,"title":{},"body":{"injectables/RoleUC.html":{}}}],["roles.map((role",{"_index":3075,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"miscellaneous/variables.html":{}}}],["roleuc",{"_index":3110,"title":{"injectables/RoleUC.html":{}},"body":{"injectables/RoleUC.html":{},"modules/UserModule.html":{},"injectables/UserUC.html":{},"overview.html":{}}}],["rollback",{"_index":4707,"title":{},"body":{"changelog.html":{}}}],["rom",{"_index":5666,"title":{},"body":{"license.html":{}}}],["room",{"_index":4312,"title":{},"body":{"changelog.html":{}}}],["roomname",{"_index":92,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["rooms",{"_index":4616,"title":{},"body":{"changelog.html":{}}}],["root",{"_index":365,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"index.html":{}}}],["rootdir",{"_index":6099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rootpath",{"_index":4490,"title":{},"body":{"changelog.html":{}}}],["roots",{"_index":6124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rostering",{"_index":4361,"title":{},"body":{"changelog.html":{}}}],["roughly",{"_index":6851,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["route",{"_index":1611,"title":{},"body":{"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"controllers/ServerController.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["route/hash",{"_index":4580,"title":{},"body":{"changelog.html":{}}}],["routes",{"_index":3928,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["routes.test.js",{"_index":4680,"title":{},"body":{"changelog.html":{}}}],["routingkey",{"_index":2575,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ServerModule.html":{}}}],["rows",{"_index":964,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["royalty",{"_index":5767,"title":{},"body":{"license.html":{}}}],["rss",{"_index":795,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["rule",{"_index":6672,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["rules",{"_index":4279,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["run",{"_index":3715,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["runner",{"_index":6810,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["running",{"_index":3545,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["runs",{"_index":4039,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["runtime",{"_index":6818,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["rxjs",{"_index":1705,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":21,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/TimeoutInterceptor.html":{}}}],["s3",{"_index":1884,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"changelog.html":{}}}],["s3_key",{"_index":5041,"title":{},"body":{"changelog.html":{}}}],["s3client",{"_index":1880,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"miscellaneous/functions.html":{}}}],["safari",{"_index":4354,"title":{},"body":{"changelog.html":{}}}],["safest",{"_index":5908,"title":{},"body":{"license.html":{}}}],["safety",{"_index":5270,"title":{},"body":{"index.html":{}}}],["sale",{"_index":5776,"title":{},"body":{"license.html":{}}}],["same",{"_index":3767,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["sameschool",{"_index":1801,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["sample",{"_index":1861,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/ServerConsole.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["samplecontroller",{"_index":6823,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["samples",{"_index":6591,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sampleservice",{"_index":6824,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sampleucmethod(params",{"_index":6718,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sanitization",{"_index":4426,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["sanitize",{"_index":4310,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["sanitizer",{"_index":5938,"title":{},"body":{"todo.html":{}}}],["satisfied",{"_index":332,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["satisfy",{"_index":322,"title":{},"body":{"injectables/AuthorizationService.html":{},"license.html":{}}}],["save",{"_index":6249,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["saying",{"_index":5615,"title":{},"body":{"license.html":{}}}],["sc",{"_index":3866,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["scan",{"_index":4996,"title":{},"body":{"changelog.html":{}}}],["scans",{"_index":1491,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["scenarios",{"_index":6411,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schedules",{"_index":1663,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["schema",{"_index":709,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["schema.ts",{"_index":6564,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["schemas",{"_index":4129,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["scheme",{"_index":6140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["school",{"_index":668,"title":{"classes/School.html":{}},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["school's",{"_index":4257,"title":{},"body":{"changelog.html":{}}}],["school._id",{"_index":6162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["school.entity",{"_index":698,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/ICourseProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["school.id",{"_index":6165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["school_edit",{"_index":5007,"title":{},"body":{"changelog.html":{}}}],["school_student_team_manage",{"_index":5008,"title":{},"body":{"changelog.html":{}}}],["schoolfactory",{"_index":6059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schoolfactory.build",{"_index":6150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schoolid",{"_index":682,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["schoolids",{"_index":4625,"title":{},"body":{"changelog.html":{}}}],["schoolinfo",{"_index":3130,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfo.id",{"_index":3131,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfo.name",{"_index":3133,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfomapper",{"_index":2803,"title":{"classes/SchoolInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{}}}],["schoolinfomapper.maptoresponse(news.school",{"_index":2825,"title":{},"body":{"classes/NewsMapper.html":{}}}],["schoolinforesponse",{"_index":2779,"title":{"classes/SchoolInfoResponse.html":{}},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{}}}],["schoolnews",{"_index":834,"title":{"classes/SchoolNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"miscellaneous/variables.html":{}}}],["schoolnews(props",{"_index":833,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["schoolnewsfactory",{"_index":6061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schools",{"_index":2168,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/ISchoolProperties.html":{},"classes/School.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schoolslist",{"_index":4001,"title":{},"body":{"changelog.html":{}}}],["schoolyear",{"_index":4826,"title":{},"body":{"changelog.html":{}}}],["schoolyears",{"_index":3835,"title":{},"body":{"changelog.html":{}}}],["schould",{"_index":884,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{}}}],["schul",{"_index":1733,"title":{},"body":{"classes/EncryptedStringType.html":{},"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schulcloud",{"_index":1622,"title":{},"body":{"controllers/DelayController.html":{},"controllers/ServerController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["schule",{"_index":4873,"title":{},"body":{"changelog.html":{}}}],["schuljahreswechsel",{"_index":4786,"title":{},"body":{"changelog.html":{}}}],["science",{"_index":1292,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["scope",{"_index":847,"title":{"classes/Scope.html":{}},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["scope.addquery(parentidscope.query",{"_index":3416,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.afterduedateornone(filters.afterduedateornone",{"_index":3422,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.byclosed(filters.closed",{"_index":3418,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.bycourseids(courseids",{"_index":2528,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["scope.bydraft(filters.draft",{"_index":3420,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.byhidden(filters.hidden",{"_index":2530,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["scope.bytargets(targets",{"_index":2883,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.byunpublished(unpublished",{"_index":2884,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.forallgrouptypes(userid",{"_index":858,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["scope.query",{"_index":860,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/LessonRepo.html":{}}}],["scope.request",{"_index":1853,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["scope.target",{"_index":3007,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope.targetid",{"_index":3529,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["scope.targetmodel",{"_index":3530,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["scope.transient",{"_index":2545,"title":{},"body":{"injectables/Logger.html":{}}}],["scope.ts",{"_index":2533,"title":{},"body":{"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["scope.ts:10",{"_index":2539,"title":{},"body":{"classes/LessonScope.html":{}}}],["scope.ts:12",{"_index":3458,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:20",{"_index":3452,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:22",{"_index":2926,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:28",{"_index":3456,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:34",{"_index":3454,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:43",{"_index":3449,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:5",{"_index":2537,"title":{},"body":{"classes/LessonScope.html":{}}}],["scope.ts:6",{"_index":3451,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:7",{"_index":2924,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope:11",{"_index":866,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["scope:25",{"_index":872,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["scope:9",{"_index":868,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["scope?.target",{"_index":3004,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope?.unpublished",{"_index":2985,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scopeid",{"_index":1808,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["scopeoperator",{"_index":865,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{},"miscellaneous/typealiases.html":{}}}],["scopes",{"_index":2723,"title":{},"body":{"controllers/NewsController.html":{}}}],["script",{"_index":3707,"title":{},"body":{"changelog.html":{}}}],["scripts",{"_index":5473,"title":{},"body":{"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["sdk",{"_index":5085,"title":{},"body":{"dependencies.html":{}}}],["sdk/client",{"_index":1883,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["search",{"_index":3324,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["searchable",{"_index":4392,"title":{},"body":{"changelog.html":{}}}],["searching",{"_index":4574,"title":{},"body":{"changelog.html":{}}}],["searchuserforschool",{"_index":2403,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["searchuserforschool'})@manytoone('school",{"_index":3581,"title":{},"body":{"classes/User.html":{}}}],["second",{"_index":6725,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["secondarily",{"_index":5410,"title":{},"body":{"license.html":{}}}],["secondary",{"_index":5358,"title":{},"body":{"license.html":{}}}],["secret",{"_index":2426,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["secretaccesskey",{"_index":1895,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":2472,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secrutiy",{"_index":4732,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":5513,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["sections",{"_index":5584,"title":{},"body":{"license.html":{}}}],["secure",{"_index":4369,"title":{},"body":{"changelog.html":{}}}],["secured",{"_index":4002,"title":{},"body":{"changelog.html":{}}}],["secures",{"_index":3862,"title":{},"body":{"changelog.html":{}}}],["securing",{"_index":4688,"title":{},"body":{"changelog.html":{}}}],["security",{"_index":3659,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["see",{"_index":210,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BaseFactory.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/IDashboardRepo.html":{},"modules/ServerModule.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["seed",{"_index":1346,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["seedcollections",{"_index":1334,"title":{},"body":{"classes/DatabaseManagementConsole.html":{}}}],["seedcollections(options",{"_index":1345,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["seeddata",{"_index":6773,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["seeddatabasecollectionsfromfilesystem",{"_index":1462,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["seeddatabasecollectionsfromfilesystem(collections",{"_index":1495,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["seededcollectionswithamount",{"_index":1554,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["seededcollectionswithamount.push(`${collectionname}:${importeddocumentsamount",{"_index":1576,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["seeds",{"_index":3764,"title":{},"body":{"changelog.html":{}}}],["seems",{"_index":5973,"title":{},"body":{"todo.html":{}}}],["selected",{"_index":5955,"title":{},"body":{"todo.html":{}}}],["selection",{"_index":5048,"title":{},"body":{"changelog.html":{}}}],["self",{"_index":5055,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sell",{"_index":5791,"title":{},"body":{"license.html":{}}}],["selling",{"_index":5775,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":3654,"title":{},"body":{"changelog.html":{}}}],["semiconductor",{"_index":5391,"title":{},"body":{"license.html":{}}}],["send",{"_index":2588,"title":{},"body":{"injectables/MailService.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["send(data",{"_index":2593,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["sending",{"_index":3982,"title":{},"body":{"changelog.html":{}}}],["sends",{"_index":6693,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["sense",{"_index":6366,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sent",{"_index":6530,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sentence",{"_index":1775,"title":{},"body":{"classes/ErrorResponse.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sentry",{"_index":4428,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["sentry/node",{"_index":5072,"title":{},"body":{"dependencies.html":{}}}],["sentry_dsn",{"_index":4430,"title":{},"body":{"changelog.html":{}}}],["separable",{"_index":5626,"title":{},"body":{"license.html":{}}}],["separate",{"_index":2549,"title":{},"body":{"injectables/Logger.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["separated",{"_index":5286,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["separately",{"_index":4446,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["separates",{"_index":6476,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["separating",{"_index":6708,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["separation",{"_index":6299,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["seperate",{"_index":5251,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["seperation",{"_index":5250,"title":{},"body":{"index.html":{}}}],["sequence",{"_index":404,"title":{},"body":{"classes/BaseFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"miscellaneous/variables.html":{}}}],["sequence}@example.com",{"_index":6193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serialization",{"_index":1715,"title":{},"body":{"classes/EncryptedStringType.html":{},"todo.html":{}}}],["serialize",{"_index":562,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["serialize(documents",{"_index":575,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["serialized",{"_index":4524,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["serializedprimarykey",{"_index":349,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["serializes",{"_index":577,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["serve",{"_index":5179,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application.html":{}}}],["served",{"_index":6263,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["server",{"_index":1623,"title":{},"body":{"controllers/DelayController.html":{},"injectables/Logger.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["server.console",{"_index":3174,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["server.controller",{"_index":3185,"title":{},"body":{"modules/ServerModule.html":{}}}],["server/overview.html",{"_index":5974,"title":{},"body":{"todo.html":{}}}],["server/pull/2729#pullrequestreview",{"_index":5953,"title":{},"body":{"todo.html":{}}}],["serverconsole",{"_index":3154,"title":{"classes/ServerConsole.html":{}},"body":{"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{}}}],["serverconsolemodule",{"_index":3166,"title":{"modules/ServerConsoleModule.html":{}},"body":{"modules/ServerConsoleModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["servercontroller",{"_index":3175,"title":{"controllers/ServerController.html":{}},"body":{"controllers/ServerController.html":{},"modules/ServerModule.html":{}}}],["servererrortypes",{"_index":6062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverlogger",{"_index":6713,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["servermodule",{"_index":3178,"title":{"modules/ServerModule.html":{}},"body":{"modules/ServerModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["servers",{"_index":4979,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["serves",{"_index":5463,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["service",{"_index":635,"title":{},"body":{"injectables/ConsoleWriterService.html":{},"classes/EncryptedStringType.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"injectables/TaskUC.html":{},"injectables/UserUC.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["service.find",{"_index":1811,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["service.findallforuser(userid",{"_index":6861,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["service.get",{"_index":6609,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.get(userid",{"_index":1807,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["service.provider",{"_index":1836,"title":{},"body":{"modules/FeathersModule.html":{}}}],["service.provider.ts",{"_index":1839,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.provider.ts:13",{"_index":1846,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:19",{"_index":1844,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:33",{"_index":1870,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.provider.ts:36",{"_index":1871,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.ts",{"_index":6567,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["services",{"_index":1829,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"modules/ManagementModule.html":{},"modules/ServerConsoleModule.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["servicing",{"_index":5876,"title":{},"body":{"license.html":{}}}],["session",{"_index":4435,"title":{},"body":{"changelog.html":{}}}],["set",{"_index":53,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"modules/InterceptorModule.html":{},"injectables/NewsUc.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/SubmissionFactory.html":{},"classes/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskWithStatusVo.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["set(gradeduserids)].length",{"_index":2359,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["set(permissions",{"_index":3122,"title":{},"body":{"injectables/RoleUC.html":{}}}],["set(submitteduserids)].length",{"_index":2351,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["setcontext",{"_index":2557,"title":{},"body":{"injectables/Logger.html":{}}}],["setdescription('this",{"_index":6136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setgroupname",{"_index":2145,"title":{},"body":{"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["setgroupname(newgroupname",{"_index":1035,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["sets",{"_index":4473,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["settimeout(milliseconds",{"_index":3555,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["settimeout(resolve",{"_index":1620,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["setting",{"_index":6084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settings",{"_index":4615,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["settitle('hpi",{"_index":6135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":1353,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICollectionFilePath.html":{},"modules/InterceptorModule.html":{},"interfaces/Options.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["setupentities",{"_index":6063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setuppath",{"_index":1551,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["setuserstatus(authtoken",{"_index":80,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["setversion('3.0",{"_index":6138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":5518,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["share",{"_index":5334,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["shared",{"_index":4031,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/common",{"_index":223,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{}}}],["shared/controller",{"_index":938,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"controllers/TeamNewsController.html":{}}}],["shared/controller/transformer",{"_index":2768,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["shared/core",{"_index":6579,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/domain",{"_index":325,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/JwtPayload.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"modules/ServerModule.html":{},"injectables/StorageProviderRepo.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"todo.html":{}}}],["shared/domain/entity/base.entity",{"_index":1110,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["shared/domain/types",{"_index":2970,"title":{},"body":{"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{}}}],["shared/infra",{"_index":3683,"title":{},"body":{"changelog.html":{}}}],["shared/infra/console",{"_index":2610,"title":{},"body":{"modules/ManagementModule.html":{},"classes/ServerConsole.html":{}}}],["shared/infra/console/console",{"_index":1349,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{},"modules/ServerConsoleModule.html":{}}}],["shared/infra/database",{"_index":1508,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{}}}],["shared/infra/feathers",{"_index":293,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/FeathersAuthProvider.html":{}}}],["shared/infra/file",{"_index":1506,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{}}}],["shared/infra/filestorage",{"_index":1988,"title":{},"body":{"modules/FilesModule.html":{},"injectables/FilesRepo.html":{}}}],["shared/infra/mail",{"_index":3183,"title":{},"body":{"modules/ServerModule.html":{}}}],["shared/pipes",{"_index":6603,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/repo",{"_index":848,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/NewsScope.html":{},"modules/TaskModule.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{}}}],["shared/repo/base.repo",{"_index":2011,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["shared/repo/types/encryptedstring.type",{"_index":2251,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{}}}],["shared/utils",{"_index":6580,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators",{"_index":6600,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators/text.validator.ts",{"_index":6583,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sharetoken",{"_index":4349,"title":{},"body":{"changelog.html":{}}}],["sharing",{"_index":4137,"title":{},"body":{"changelog.html":{}}}],["sheets",{"_index":4750,"title":{},"body":{"changelog.html":{}}}],["shit",{"_index":701,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["short",{"_index":1146,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["shortid",{"_index":5150,"title":{},"body":{"dependencies.html":{}}}],["shorttitle",{"_index":1011,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["shouldnt",{"_index":4776,"title":{},"body":{"changelog.html":{}}}],["show",{"_index":2954,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{}}}],["show_version",{"_index":4559,"title":{},"body":{"changelog.html":{}}}],["shows",{"_index":4336,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["side",{"_index":6378,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sign",{"_index":5920,"title":{},"body":{"license.html":{}}}],["signature",{"_index":6514,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["significant",{"_index":5651,"title":{},"body":{"license.html":{}}}],["similar",{"_index":5379,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simple",{"_index":3755,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["simplicity",{"_index":5987,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simplification",{"_index":6495,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["simplify",{"_index":6780,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["simply",{"_index":5266,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["simulates",{"_index":6895,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["simultaneously",{"_index":5839,"title":{},"body":{"license.html":{}}}],["single",{"_index":1358,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"classes/GlobalValidationPipe.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["situation",{"_index":6368,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["six",{"_index":1921,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["size",{"_index":4751,"title":{},"body":{"changelog.html":{}}}],["sizes",{"_index":4698,"title":{},"body":{"changelog.html":{}}}],["sizetype",{"_index":1133,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["sjw",{"_index":3756,"title":{},"body":{"changelog.html":{}}}],["skip",{"_index":2200,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["skipped",{"_index":2135,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"classes/PaginationQuery.html":{},"changelog.html":{}}}],["slash",{"_index":5979,"title":{},"body":{"todo.html":{}}}],["slow",{"_index":1563,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["small",{"_index":6939,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["snaketype",{"_index":2075,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["socketio",{"_index":5182,"title":{},"body":{"dependencies.html":{}}}],["sockets",{"_index":5030,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["soft",{"_index":3708,"title":{},"body":{"changelog.html":{}}}],["soften",{"_index":4904,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":5313,"title":{"additional-documentation/nestjs-application/software-architecture.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sold",{"_index":5637,"title":{},"body":{"license.html":{}}}],["sole",{"_index":5498,"title":{},"body":{"license.html":{}}}],["solely",{"_index":5510,"title":{},"body":{"license.html":{}}}],["solid",{"_index":6909,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["solution",{"_index":1119,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/TaskAuthorizationService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["solutions",{"_index":5917,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["solved",{"_index":4506,"title":{},"body":{"changelog.html":{}}}],["solving",{"_index":4051,"title":{},"body":{"changelog.html":{}}}],["something",{"_index":6719,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["something...later",{"_index":6722,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sort",{"_index":1584,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{}}}],["sorted",{"_index":4850,"title":{},"body":{"changelog.html":{}}}],["sortedbsondocuments",{"_index":1587,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["sorting",{"_index":2526,"title":{},"body":{"injectables/LessonRepo.html":{},"injectables/TaskRepo.html":{},"changelog.html":{}}}],["sorting.ts",{"_index":5949,"title":{},"body":{"todo.html":{}}}],["sortorder",{"_index":2202,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/NewsUc.html":{},"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["sortorder.asc",{"_index":3499,"title":{},"body":{"injectables/TaskUC.html":{}}}],["sortorder.desc",{"_index":2989,"title":{},"body":{"injectables/NewsUc.html":{},"injectables/TaskUC.html":{}}}],["sortordermap",{"_index":2198,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/typealiases.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/BaseFile.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcecode",{"_index":6552,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcedescription",{"_index":774,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["sources",{"_index":4030,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["sourcetype",{"_index":2784,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"miscellaneous/typealiases.html":{}}}],["sovereignty",{"_index":6309,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["span",{"_index":6507,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spanid",{"_index":6521,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spare",{"_index":5597,"title":{},"body":{"license.html":{}}}],["speak",{"_index":5341,"title":{},"body":{"license.html":{}}}],["spec",{"_index":6080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spec.ts",{"_index":6102,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["spec\\\\.ts",{"_index":6107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":3738,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specific",{"_index":40,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["specifically",{"_index":5325,"title":{},"body":{"license.html":{}}}],["specification",{"_index":4484,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specifics",{"_index":6634,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specified",{"_index":5454,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specifies",{"_index":5860,"title":{},"body":{"license.html":{}}}],["specify",{"_index":2649,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["speed",{"_index":4255,"title":{},"body":{"changelog.html":{}}}],["spin",{"_index":3803,"title":{},"body":{"changelog.html":{}}}],["spinner",{"_index":625,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["spirit",{"_index":5854,"title":{},"body":{"license.html":{}}}],["split",{"_index":6346,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sportinhalt",{"_index":4139,"title":{},"body":{"changelog.html":{}}}],["spy",{"_index":6857,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["spyied",{"_index":6848,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sql",{"_index":6460,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sql/nosql",{"_index":6922,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["sql/sql",{"_index":6480,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["src",{"_index":6109,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["src/...*.spec.ts",{"_index":6100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/config",{"_index":2611,"title":{},"body":{"modules/ManagementModule.html":{}}}],["src/core/error/dto/error.response",{"_index":602,"title":{},"body":{"classes/BusinessError.html":{}}}],["src/core/error/interface",{"_index":603,"title":{},"body":{"classes/BusinessError.html":{}}}],["src/core/logger",{"_index":1707,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"injectables/NewsUc.html":{}}}],["src/core/logger/logger.module",{"_index":2853,"title":{},"body":{"modules/NewsModule.html":{}}}],["src/core/logger/logger.service",{"_index":1665,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["src/modules/authentication/decorator/auth.decorator",{"_index":936,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}}}],["src/modules/authorization/authorization.module",{"_index":2854,"title":{},"body":{"modules/NewsModule.html":{}}}],["src/modules/authorization/authorization.service",{"_index":2971,"title":{},"body":{"injectables/NewsUc.html":{}}}],["src/modules/database",{"_index":6837,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["src/modules/user",{"_index":276,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["src/repositories",{"_index":3323,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"modules/TaskModule.html":{}}}],["src/repositories/learnroom/dashboard.model.mapper",{"_index":2514,"title":{},"body":{"modules/LearnroomModule.html":{}}}],["src/repositories/learnroom/dashboard.repo",{"_index":1322,"title":{},"body":{"injectables/DashboardUc.html":{},"modules/LearnroomModule.html":{}}}],["stabilisation",{"_index":4773,"title":{},"body":{"changelog.html":{}}}],["stability",{"_index":4563,"title":{},"body":{"changelog.html":{}}}],["stabilized",{"_index":3819,"title":{},"body":{"changelog.html":{}}}],["stable",{"_index":6306,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stack",{"_index":2089,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["stacks",{"_index":4619,"title":{},"body":{"changelog.html":{}}}],["staging",{"_index":4127,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":5450,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["standards",{"_index":5453,"title":{},"body":{"license.html":{}}}],["start",{"_index":5304,"title":{},"body":{"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["started",{"_index":3647,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["starting",{"_index":4818,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["starts",{"_index":6207,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["starttitle",{"_index":2077,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["startup",{"_index":4633,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["state",{"_index":4556,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["stated",{"_index":5490,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statement",{"_index":5712,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statements",{"_index":6119,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["states",{"_index":4458,"title":{},"body":{"changelog.html":{}}}],["static",{"_index":401,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"classes/DefaultGridReference.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUserMapper.html":{},"modules/RocketChatModule.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/SubmissionFactory.html":{},"classes/TargetInfoMapper.html":{},"classes/TaskFactory.html":{},"classes/TaskMapper.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfoMapper.html":{},"additional-documentation/nestjs-application.html":{}}}],["stating",{"_index":5549,"title":{},"body":{"license.html":{}}}],["statistic",{"_index":4682,"title":{},"body":{"changelog.html":{}}}],["statistics",{"_index":4809,"title":{},"body":{"changelog.html":{}}}],["stats",{"_index":4801,"title":{},"body":{"changelog.html":{}}}],["status",{"_index":81,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/Task.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["status.graded",{"_index":3378,"title":{},"body":{"classes/TaskMapper.html":{}}}],["status.isdraft",{"_index":3379,"title":{},"body":{"classes/TaskMapper.html":{}}}],["status.issubstitutionteacher",{"_index":3380,"title":{},"body":{"classes/TaskMapper.html":{}}}],["status.maxsubmissions",{"_index":3377,"title":{},"body":{"classes/TaskMapper.html":{}}}],["status.submitted",{"_index":3376,"title":{},"body":{"classes/TaskMapper.html":{}}}],["statuscode",{"_index":36,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["stay",{"_index":6334,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["step",{"_index":6703,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["steps",{"_index":5352,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["stick",{"_index":6749,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["still",{"_index":6640,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["stop",{"_index":2666,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["stopping",{"_index":4410,"title":{},"body":{"changelog.html":{}}}],["storage",{"_index":3822,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["storagefilename",{"_index":492,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"interfaces/IFileProperties.html":{},"miscellaneous/variables.html":{}}}],["storageprovider",{"_index":488,"title":{"classes/StorageProvider.html":{}},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["storageprovider.accesskeyid",{"_index":1894,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["storageprovider.endpointurl",{"_index":1887,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["storageprovider.entity",{"_index":489,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["storageprovider.region",{"_index":1890,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["storageprovider.secretaccesskey",{"_index":1896,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["storageproviderclient",{"_index":1897,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["storageproviderclient.send(deletioncommand",{"_index":1899,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["storageproviderfactory",{"_index":6065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storageproviderfactory.build",{"_index":6168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storageproviderid",{"_index":503,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["storageproviderrepo",{"_index":1986,"title":{"injectables/StorageProviderRepo.html":{}},"body":{"modules/FilesModule.html":{},"injectables/StorageProviderRepo.html":{},"overview.html":{}}}],["storageproviders",{"_index":2252,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{}}}],["store",{"_index":3894,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stored",{"_index":6398,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stores",{"_index":6523,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["storing",{"_index":4021,"title":{},"body":{"changelog.html":{}}}],["story",{"_index":6850,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["strategies",{"_index":6005,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["strategies.includes('jwt",{"_index":6078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strategy",{"_index":2463,"title":{},"body":{"injectables/JwtStrategy.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["strategy/jwt",{"_index":280,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/jwt.strategy",{"_index":277,"title":{},"body":{"modules/AuthModule.html":{}}}],["strato",{"_index":3883,"title":{},"body":{"changelog.html":{}}}],["strictly",{"_index":6297,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["string",{"_index":12,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"interfaces/AppendedAttachment.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/GlobalConstants.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["strings",{"_index":1743,"title":{},"body":{"classes/EncryptedStringType.html":{},"injectables/Logger.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["stringtoboolean",{"_index":2767,"title":{},"body":{"classes/NewsFilterQuery.html":{},"miscellaneous/functions.html":{}}}],["strip",{"_index":5186,"title":{},"body":{"dependencies.html":{}}}],["strong",{"_index":1833,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["strongly",{"_index":6941,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["structure",{"_index":6545,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["structured",{"_index":6546,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["structures",{"_index":2555,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["stucture",{"_index":5947,"title":{},"body":{"todo.html":{}}}],["student",{"_index":2267,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["student/teacher",{"_index":3985,"title":{},"body":{"changelog.html":{}}}],["student_create",{"_index":4660,"title":{},"body":{"changelog.html":{}}}],["student_edit",{"_index":4661,"title":{},"body":{"changelog.html":{}}}],["student_list",{"_index":4790,"title":{},"body":{"changelog.html":{}}}],["student_team_creation",{"_index":4922,"title":{},"body":{"changelog.html":{}}}],["studentdashboard",{"_index":3482,"title":{},"body":{"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["studentfiles",{"_index":2268,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["studentid",{"_index":2278,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["students",{"_index":669,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"injectables/SubmissionRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["students/teacher",{"_index":4929,"title":{},"body":{"changelog.html":{}}}],["studio",{"_index":5278,"title":{},"body":{"index.html":{}}}],["stuff",{"_index":5302,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["style",{"_index":6319,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["styling",{"_index":4231,"title":{},"body":{"changelog.html":{}}}],["sub",{"_index":2440,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["subdividing",{"_index":5757,"title":{},"body":{"license.html":{}}}],["subdocument",{"_index":4885,"title":{},"body":{"changelog.html":{}}}],["subelements",{"_index":1143,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["subject",{"_index":245,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"license.html":{}}}],["sublicenses",{"_index":5788,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":5512,"title":{},"body":{"license.html":{}}}],["submission",{"_index":2275,"title":{"classes/Submission.html":{}},"body":{"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["submission.entity",{"_index":2308,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["submission.getstudentid",{"_index":2348,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["submission.isgraded",{"_index":2355,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["submissionfactory",{"_index":3228,"title":{"classes/SubmissionFactory.html":{}},"body":{"classes/SubmissionFactory.html":{},"miscellaneous/variables.html":{}}}],["submissionfactory.define(submission",{"_index":3248,"title":{},"body":{"classes/SubmissionFactory.html":{},"miscellaneous/variables.html":{}}}],["submissionrepo",{"_index":3251,"title":{"injectables/SubmissionRepo.html":{}},"body":{"injectables/SubmissionRepo.html":{}}}],["submissions",{"_index":2274,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskWithStatusVo.html":{},"changelog.html":{}}}],["submissions.map((submission",{"_index":2347,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["submitted",{"_index":2310,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TaskWithStatusVo.html":{}}}],["submitteduserids",{"_index":2346,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["subprograms",{"_index":5480,"title":{},"body":{"license.html":{}}}],["subsection",{"_index":5606,"title":{},"body":{"license.html":{}}}],["subset",{"_index":6245,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["substantial",{"_index":5647,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":5755,"title":{},"body":{"license.html":{}}}],["substitution",{"_index":3705,"title":{},"body":{"changelog.html":{}}}],["substitutionids",{"_index":690,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["substitutionids.map((id",{"_index":741,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["substitutionteachers",{"_index":670,"title":{},"body":{"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseProperties.html":{}}}],["succeed",{"_index":6799,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["succesful",{"_index":4810,"title":{},"body":{"changelog.html":{}}}],["successful",{"_index":4495,"title":{},"body":{"changelog.html":{}}}],["successfully",{"_index":1685,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["such",{"_index":5373,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sue",{"_index":5799,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":5654,"title":{},"body":{"license.html":{}}}],["sufficient",{"_index":312,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["suffix",{"_index":5986,"title":{},"body":{"todo.html":{}}}],["suggested",{"_index":5931,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["suites",{"_index":6244,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["summarize",{"_index":4549,"title":{},"body":{"changelog.html":{}}}],["super",{"_index":204,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BaseFile.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"classes/EncryptedStringType.html":{},"classes/File.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/ValidationError.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["super(e.response.statustext",{"_index":52,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["super(em",{"_index":2012,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["super(total",{"_index":2789,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["super(type",{"_index":226,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["superhero",{"_index":3937,"title":{},"body":{"changelog.html":{}}}],["superheros",{"_index":3971,"title":{},"body":{"changelog.html":{}}}],["supertest",{"_index":6813,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["supplement",{"_index":5676,"title":{},"body":{"license.html":{}}}],["support",{"_index":2433,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"modules.html":{},"todo.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["support_${objectid",{"_index":2442,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["supported",{"_index":1022,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["supporting",{"_index":6195,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["supportjwtservice",{"_index":3825,"title":{},"body":{"changelog.html":{}}}],["supports",{"_index":450,"title":{},"body":{"classes/BaseFactory.html":{},"changelog.html":{},"license.html":{}}}],["supportuserid",{"_index":2434,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["sure",{"_index":5339,"title":{},"body":{"license.html":{}}}],["surrender",{"_index":5834,"title":{},"body":{"license.html":{}}}],["survive",{"_index":5711,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":5888,"title":{},"body":{"license.html":{}}}],["svg",{"_index":5924,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":4356,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{}}}],["swaggermodule.createdocument(app",{"_index":6145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggermodule.setup(path",{"_index":6146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symetrickeyencryptionservice",{"_index":1725,"title":{"injectables/SymetricKeyEncryptionService.html":{}},"body":{"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"injectables/SymetricKeyEncryptionService.html":{}}}],["symetrickeyencryptionservice(configuration.get('s3_key",{"_index":1739,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["symetrickeyencryptionservice(customkey",{"_index":1738,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["symmetric",{"_index":5042,"title":{},"body":{"changelog.html":{}}}],["symmetric_cipher_key",{"_index":1759,"title":{},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{}}}],["symmetriccipherkey",{"_index":1758,"title":{},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{}}}],["synapse",{"_index":4535,"title":{},"body":{"changelog.html":{}}}],["sync",{"_index":3846,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["synced",{"_index":4858,"title":{},"body":{"changelog.html":{}}}],["syncers",{"_index":4467,"title":{},"body":{"changelog.html":{}}}],["synchronization",{"_index":4536,"title":{},"body":{"changelog.html":{}}}],["synchronizing",{"_index":4969,"title":{},"body":{"changelog.html":{}}}],["syncindex",{"_index":4074,"title":{},"body":{"changelog.html":{}}}],["syncindexes",{"_index":4093,"title":{},"body":{"changelog.html":{}}}],["syncing",{"_index":4985,"title":{},"body":{"changelog.html":{}}}],["syncs",{"_index":4811,"title":{},"body":{"changelog.html":{}}}],["syntax",{"_index":1676,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"injectables/NewsUc.html":{},"changelog.html":{}}}],["system",{"_index":1507,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["system.adapter",{"_index":1981,"title":{},"body":{"modules/FileSystemModule.html":{}}}],["system.adapter.ts",{"_index":1902,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"miscellaneous/variables.html":{}}}],["system.adapter.ts:12",{"_index":1912,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:18",{"_index":1952,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:26",{"_index":1914,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:36",{"_index":1930,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:48",{"_index":1946,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:57",{"_index":1934,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:68",{"_index":1917,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:78",{"_index":1941,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:84",{"_index":1928,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.module.ts",{"_index":1980,"title":{},"body":{"modules/FileSystemModule.html":{}}}],["system/file",{"_index":1901,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"miscellaneous/variables.html":{}}}],["system/school",{"_index":4466,"title":{},"body":{"changelog.html":{}}}],["systemid",{"_index":3865,"title":{},"body":{"changelog.html":{}}}],["systems",{"_index":1918,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["t",{"_index":422,"title":{},"body":{"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"injectables/NewsRepo.html":{},"classes/PaginationResponse.html":{},"injectables/StorageProviderRepo.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"miscellaneous/typealiases.html":{}}}],["tab",{"_index":1593,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["table",{"_index":4230,"title":{},"body":{"changelog.html":{}}}],["tablename",{"_index":715,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/User.html":{}}}],["tables",{"_index":4475,"title":{},"body":{"changelog.html":{}}}],["take",{"_index":5263,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["taken",{"_index":4848,"title":{},"body":{"changelog.html":{}}}],["takes",{"_index":4441,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["taking",{"_index":3977,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["tangible",{"_index":5632,"title":{},"body":{"license.html":{}}}],["tap",{"_index":1706,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["target",{"_index":770,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["target._id.tostring",{"_index":1816,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["target.id",{"_index":3283,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["target.name",{"_index":3284,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["target.targetids",{"_index":2931,"title":{},"body":{"classes/NewsScope.html":{}}}],["target.targetids.length",{"_index":3012,"title":{},"body":{"injectables/NewsUc.html":{}}}],["target.targetmodel",{"_index":2929,"title":{},"body":{"classes/NewsScope.html":{}}}],["target:in",{"_index":2930,"title":{},"body":{"classes/NewsScope.html":{}}}],["target_model_values",{"_index":896,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"miscellaneous/variables.html":{}}}],["targetelement",{"_index":1092,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["targetelement.addreferences(element.getreferences",{"_index":1093,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["targetfolder",{"_index":1484,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["targetid",{"_index":308,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{}}}],["targetids",{"_index":1814,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{}}}],["targetinfomapper",{"_index":2805,"title":{"classes/TargetInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/TargetInfoMapper.html":{}}}],["targetinfomapper.maptoresponse(news.target",{"_index":2823,"title":{},"body":{"classes/NewsMapper.html":{}}}],["targetinforesponse",{"_index":2781,"title":{"classes/TargetInfoResponse.html":{}},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{}}}],["targetmodel",{"_index":306,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["targetmodels",{"_index":2966,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetmodels.map(async",{"_index":3008,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetpermissions",{"_index":1806,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["targets",{"_index":1810,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["targets.filter((target",{"_index":3011,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targets.map((target",{"_index":1815,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/NewsScope.html":{}}}],["task",{"_index":2269,"title":{"classes/Task.html":{}},"body":{"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["task.authorization.service",{"_index":3479,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.availabledate",{"_index":3370,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.createdat",{"_index":3373,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.createstudentstatusforuser(userid",{"_index":3502,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.createteacherstatusforuser(userid",{"_index":3504,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.duedate",{"_index":3372,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.entity",{"_index":2273,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["task.factory",{"_index":3244,"title":{},"body":{"classes/SubmissionFactory.html":{}}}],["task.findall",{"_index":3720,"title":{},"body":{"changelog.html":{}}}],["task.getdescriptions",{"_index":3382,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.id",{"_index":3367,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.name",{"_index":3368,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.updatedat",{"_index":3374,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task/open",{"_index":4049,"title":{},"body":{"changelog.html":{}}}],["task_dashboard_teacher_view_v3",{"_index":3481,"title":{},"body":{"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["task_dashboard_view_v3",{"_index":3483,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["taskauthorizationservice",{"_index":3312,"title":{"injectables/TaskAuthorizationService.html":{}},"body":{"injectables/TaskAuthorizationService.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"overview.html":{}}}],["taskcontroller",{"_index":3333,"title":{"controllers/TaskController.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{}}}],["taskdashboardpermission",{"_index":3477,"title":{},"body":{"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["taskdashboardpermission.studentdashboard",{"_index":3489,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskdashboardpermission.teacherdashboard",{"_index":3491,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskdesc",{"_index":3381,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskdesc.color",{"_index":3386,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskdesc.description",{"_index":3388,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskdesc.name",{"_index":3384,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskentities",{"_index":3425,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["taskfactory",{"_index":3243,"title":{"classes/TaskFactory.html":{}},"body":{"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"miscellaneous/variables.html":{}}}],["taskfactory.build",{"_index":3249,"title":{},"body":{"classes/SubmissionFactory.html":{},"miscellaneous/variables.html":{}}}],["taskfactory.define(task",{"_index":3355,"title":{},"body":{"classes/TaskFactory.html":{},"miscellaneous/variables.html":{}}}],["taskids",{"_index":3260,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["tasklistresponse",{"_index":3339,"title":{"classes/TaskListResponse.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["tasklistresponse(taskresponses",{"_index":3349,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskmapper",{"_index":3340,"title":{"classes/TaskMapper.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskMapper.html":{}}}],["taskmapper.maptoresponse(taskwithstatus",{"_index":3348,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskmodule",{"_index":3181,"title":{"modules/TaskModule.html":{}},"body":{"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["taskparentdescriptions",{"_index":2317,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/typealiases.html":{}}}],["taskparentpermission",{"_index":3318,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["taskparentpermission.read",{"_index":3328,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{}}}],["taskparentpermission.write",{"_index":3326,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{}}}],["taskrepo",{"_index":3391,"title":{"injectables/TaskRepo.html":{}},"body":{"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"overview.html":{}}}],["taskresponse",{"_index":3357,"title":{"classes/TaskResponse.html":{}},"body":{"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{}}}],["taskresponses",{"_index":3346,"title":{},"body":{"controllers/TaskController.html":{}}}],["tasks",{"_index":3335,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["tasks.map((task",{"_index":3501,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskscope",{"_index":3405,"title":{"classes/TaskScope.html":{}},"body":{"injectables/TaskRepo.html":{},"classes/TaskScope.html":{}}}],["taskscope('$or",{"_index":3409,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["taskswithstatus",{"_index":3344,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskswithstatus.map((taskwithstatus",{"_index":3347,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskuc",{"_index":3337,"title":{"injectables/TaskUC.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"overview.html":{}}}],["taskwithstatus",{"_index":3366,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskwithstatusvo",{"_index":2314,"title":{"classes/TaskWithStatusVo.html":{}},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskMapper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{}}}],["taskwithstatusvo(task",{"_index":3503,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskwithstatusvos",{"_index":3500,"title":{},"body":{"injectables/TaskUC.html":{}}}],["teacher",{"_index":2284,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["teacher/student",{"_index":4693,"title":{},"body":{"changelog.html":{}}}],["teacher_list",{"_index":4913,"title":{},"body":{"changelog.html":{}}}],["teacherdashboard",{"_index":3480,"title":{},"body":{"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["teacherid",{"_index":2320,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{}}}],["teacherids",{"_index":692,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["teachers",{"_index":671,"title":{},"body":{"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{}}}],["team",{"_index":807,"title":{"classes/Team.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/ITeamProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["team.entity",{"_index":808,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["teamfactory",{"_index":6070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["teamfactory.build",{"_index":6158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["teamid",{"_index":3525,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["teammembers",{"_index":2270,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{}}}],["teamnews",{"_index":835,"title":{"classes/TeamNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"miscellaneous/variables.html":{}}}],["teamnews(props",{"_index":832,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["teamnewscontroller",{"_index":2852,"title":{"controllers/TeamNewsController.html":{}},"body":{"modules/NewsModule.html":{},"controllers/TeamNewsController.html":{}}}],["teamnewsfactory",{"_index":6072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["teams",{"_index":2169,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/ITeamProperties.html":{},"classes/Team.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["teardown",{"_index":5959,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["tech",{"_index":6277,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["technial",{"_index":6525,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technical",{"_index":2055,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["technically",{"_index":6336,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technological",{"_index":5521,"title":{},"body":{"license.html":{}}}],["technology",{"_index":6289,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tell",{"_index":6267,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["tells",{"_index":5438,"title":{},"body":{"license.html":{}}}],["temp",{"_index":1919,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["template",{"_index":138,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"classes/GlobalErrorFilter.html":{},"modules/ManagementModule.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["templates",{"_index":4015,"title":{},"body":{"changelog.html":{}}}],["temporary",{"_index":1017,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"injectables/TaskAuthorizationService.html":{},"changelog.html":{}}}],["term",{"_index":5488,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["terminate",{"_index":5717,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":5735,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":5726,"title":{},"body":{"license.html":{}}}],["termination",{"_index":5714,"title":{},"body":{"license.html":{}}}],["terms",{"_index":4444,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["test",{"_index":1612,"title":{},"body":{"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/TestBootstrapConsole.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["test.createtestingmodule",{"_index":1626,"title":{},"body":{"controllers/DelayController.html":{},"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["test.module.ts",{"_index":1608,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["test.module.ts:12",{"_index":1610,"title":{},"body":{"controllers/DelayController.html":{}}}],["test/...*.e2e",{"_index":6101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testable",{"_index":6662,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["testbootstrapconsole",{"_index":3531,"title":{"classes/TestBootstrapConsole.html":{}},"body":{"classes/TestBootstrapConsole.html":{}}}],["testcase",{"_index":6758,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testdata",{"_index":6776,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tested",{"_index":6242,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testenvironment",{"_index":6121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testhelpers",{"_index":3907,"title":{},"body":{"changelog.html":{}}}],["testing",{"_index":2418,"title":{"additional-documentation/nestjs-application/testing.html":{}},"body":{"modules/InterceptorModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testingmodule",{"_index":1614,"title":{},"body":{"controllers/DelayController.html":{},"classes/TestBootstrapConsole.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule",{"_index":6838,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.close",{"_index":6846,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(entitymanager",{"_index":6842,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(mikroorm",{"_index":6841,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(newsrepo",{"_index":6840,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testpathignorepatterns",{"_index":6108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testregex",{"_index":6106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tests",{"_index":362,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/NewsModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["text",{"_index":628,"title":{},"body":{"injectables/ConsoleWriterService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"classes/SubmissionFactory.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["text.validator.ts",{"_index":6598,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textutils",{"_index":6581,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textvalidator",{"_index":6599,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["that's",{"_index":363,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["thats",{"_index":6392,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["theme",{"_index":4741,"title":{},"body":{"changelog.html":{}}}],["therefore",{"_index":5376,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["things",{"_index":1126,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"changelog.html":{},"license.html":{}}}],["think",{"_index":6551,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["third",{"_index":5543,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["this(entityclass",{"_index":455,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this._id",{"_index":1113,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["this._operator",{"_index":3149,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries",{"_index":3151,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries.length",{"_index":3150,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries.push(query",{"_index":3153,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries[0",{"_index":3152,"title":{},"body":{"classes/Scope.html":{}}}],["this._timeout",{"_index":3566,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["this.accesskeyid",{"_index":2255,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{}}}],["this.addquery",{"_index":854,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["this.addquery(emptyresultquery",{"_index":2935,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery(queries[0",{"_index":2936,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery(query",{"_index":3465,"title":{},"body":{"classes/TaskScope.html":{}}}],["this.adminidandtoken",{"_index":156,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.amqpconnection.publish(this.options.exchange",{"_index":2597,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["this.aud",{"_index":2438,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["this.authorizationservice.checkentitypermissions",{"_index":3000,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.checkentitypermissions(creatorid",{"_index":6687,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.authorizationservice.checkentitypermissions(userid",{"_index":2978,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getentitypermissions(userid",{"_index":3013,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getpermittedcourses(userid",{"_index":3493,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.authorizationservice.getpermittedentities(userid",{"_index":3009,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.availabledate",{"_index":2327,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.basepath",{"_index":1514,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.bsonconverter.deserialize(bsondocuments",{"_index":1559,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.bsonconverter.serialize(jsondocuments",{"_index":1583,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.bucket",{"_index":510,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["this.byuseridquery(userid",{"_index":3263,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["this.cache",{"_index":3108,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["this.clone(newpropsfactory",{"_index":462,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.closed.set(props.closed",{"_index":2339,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.code",{"_index":608,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.color",{"_index":731,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.columns",{"_index":1060,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.comment",{"_index":2288,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.consolewriter.info('schulcloud",{"_index":3164,"title":{},"body":{"classes/ServerConsole.html":{}}}],["this.consolewriter.info(`input",{"_index":3165,"title":{},"body":{"classes/ServerConsole.html":{}}}],["this.consolewriter.info(report",{"_index":1364,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["this.constructor",{"_index":468,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.content",{"_index":815,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.course",{"_index":754,"title":{},"body":{"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Lesson.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.course._id",{"_index":756,"title":{},"body":{"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{}}}],["this.course.color",{"_index":2395,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.course.getnumberofstudents",{"_index":2367,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.course.getsubstitutionteacherids().includes(userid",{"_index":2377,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.course.name",{"_index":2393,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.courserepo.findallforstudent(userid",{"_index":3329,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["this.courserepo.findallforteacher(userid",{"_index":3327,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["this.createerrorresponse(error",{"_index":2111,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["this.creator",{"_index":514,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["this.dashboardrepo.getdashboardbyid(dashboardid",{"_index":1325,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["this.dashboardrepo.getusersdashboard",{"_index":1324,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["this.dashboardrepo.persistandflush(dashboard",{"_index":1327,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["this.dashboarduc.getusersdashboard",{"_index":946,"title":{},"body":{"controllers/DashboardController.html":{}}}],["this.dashboarduc.moveelementondashboard(dashboardid",{"_index":953,"title":{},"body":{"controllers/DashboardController.html":{}}}],["this.dashboarduc.renamegroupondashboard(dashboardid",{"_index":958,"title":{},"body":{"controllers/DashboardController.html":{}}}],["this.data",{"_index":2790,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["this.databasemanagementservice.clearcollection(collectionname",{"_index":1569,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementservice.collectionexists(collectionname",{"_index":1566,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementservice.createcollection(collectionname",{"_index":1570,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementservice.finddocumentsofcollection(collectionname",{"_index":1582,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementservice.getcollectionnames",{"_index":1521,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementservice.importcollection",{"_index":1573,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementuc.exportcollectionstofilesystem",{"_index":1393,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["this.databasemanagementuc.exportcollectionstofilesystem([collectionname",{"_index":1395,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["this.databasemanagementuc.exportcollectionstofilesystem(filter",{"_index":1369,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["this.databasemanagementuc.seeddatabasecollectionsfromfilesystem",{"_index":1390,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["this.databasemanagementuc.seeddatabasecollectionsfromfilesystem([collectionname",{"_index":1392,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["this.databasemanagementuc.seeddatabasecollectionsfromfilesystem(filter",{"_index":1361,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["this.db.collection(collectionname",{"_index":1433,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.db.createcollection(collectionname",{"_index":1451,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.db.dropcollection(collectionname",{"_index":1452,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.db.listcollections(undefined",{"_index":1443,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.deletedat",{"_index":506,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["this.deletefilesuc.removedeletedfilesdata(removedsince",{"_index":1653,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["this.description",{"_index":721,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.details",{"_index":612,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.displayat",{"_index":817,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.displaycolor",{"_index":1025,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.duedate",{"_index":2329,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.em.find(basefile",{"_index":2015,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["this.em.find(coursegroup",{"_index":3265,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["this.em.find(lesson",{"_index":2531,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["this.em.findandcount(course",{"_index":859,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["this.em.findandcount(coursegroup",{"_index":766,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["this.em.findandcount(news",{"_index":2891,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.findandcount(submission",{"_index":3262,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["this.em.findandcount(task",{"_index":3426,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.findone(dashboardgridelementmodel",{"_index":1240,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["this.em.findone(dashboardmodelentity",{"_index":1258,"title":{},"body":{"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.em.findone(defaultgridreferencemodel",{"_index":1229,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["this.em.findoneorfail(dashboardmodelentity",{"_index":1307,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.em.findoneorfail(news",{"_index":2888,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.findoneorfail(role",{"_index":3107,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["this.em.findoneorfail(storageprovider",{"_index":3216,"title":{},"body":{"injectables/StorageProviderRepo.html":{}}}],["this.em.findoneorfail(user",{"_index":3614,"title":{},"body":{"injectables/UserRepo.html":{}}}],["this.em.flush",{"_index":555,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.getconnection('write').getdb",{"_index":1432,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.em.persist(entity",{"_index":549,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.persist(modelentity",{"_index":1303,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.em.persist(n",{"_index":553,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.persistandflush(entity",{"_index":550,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.persistandflush(modelentity",{"_index":1305,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.em.populate(coursenews",{"_index":2900,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(newsentities",{"_index":2892,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(newsentity",{"_index":2889,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(regularfiles",{"_index":2019,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["this.em.populate(schoolnews",{"_index":2898,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(taskentities",{"_index":3430,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.populate(teamnews",{"_index":2899,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.remove(el",{"_index":1267,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["this.em.remove(entity",{"_index":556,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.removeandflush(entity",{"_index":557,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.email",{"_index":2408,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["this.encoding",{"_index":1961,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["this.encryptionservice",{"_index":1737,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["this.encryptionservice.decrypt(value",{"_index":1749,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["this.encryptionservice.encrypt(value",{"_index":1746,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["this.endpointurl",{"_index":2253,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{}}}],["this.entityclass",{"_index":469,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.entityclass(props",{"_index":457,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.errortype",{"_index":65,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.externalid",{"_index":822,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.feathersauthprovider.getpermittedschools(userid",{"_index":340,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getpermittedtargets(userid",{"_index":341,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getuserschoolpermissions(userid",{"_index":329,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getusertargetpermissions(userid",{"_index":330,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersserviceprovider.getservice('users",{"_index":1817,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`${targetmodel}/:scopeid/userpermissions",{"_index":1805,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`/users/:scopeid/${targetmodel",{"_index":1809,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`path",{"_index":6608,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.filesrepo.deletefile(file",{"_index":1679,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["this.filesrepo.findallfilesforcleanup(removedsince",{"_index":1669,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["this.filestorageadapter.deletefile(file",{"_index":2021,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["this.filesystemadapter.createdir(targetfolder",{"_index":1578,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.eol",{"_index":1596,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.joinpath(__dirname",{"_index":1513,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.joinpath(basedir",{"_index":1529,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.joinpath(targetfolder",{"_index":1524,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.joinpath(this.basedir",{"_index":1515,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.readdir(basedir",{"_index":1527,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.readfile(filepath",{"_index":1556,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.writefile(filepath",{"_index":1595,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.findallforstudent(currentuser.userid",{"_index":3490,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.findallforteacher(currentuser.userid",{"_index":3492,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.findbyid(id",{"_index":3109,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["this.findnewsandcount(scope.query",{"_index":2886,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.findtasksandcount(scope.query",{"_index":3424,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.firstname",{"_index":2404,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["this.get('/api/v1/me",{"_index":78,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.get(path",{"_index":134,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.getadminidandtoken",{"_index":129,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.getasadmin(`/api/v1/groups.members?roomname=${groupname",{"_index":107,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.getasadmin(`/api/v1/groups.moderators?roomname=${groupname",{"_index":105,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.getasadmin(`/api/v1/users.list?${querystring",{"_index":89,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.getcollectionnames",{"_index":1449,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.getdatabasecollection(collectionname",{"_index":1434,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.getdefaultmaxduedate",{"_index":3496,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.getelement(position",{"_index":1082,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.getentitypermissions(userid",{"_index":334,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.getgradeduserids",{"_index":2358,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.getgradeduserids().some((id",{"_index":2381,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.getmaxsubmissions",{"_index":2371,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.getnewspermissions(userid",{"_index":2993,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getnumberofgradedusers",{"_index":2370,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.getnumberofsubmittedusers",{"_index":2369,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.getparent",{"_index":2362,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.getpermittedtargets(userid",{"_index":2987,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getreferencesfromposition(from",{"_index":1078,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.getseedfolder",{"_index":1516,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.getsubmissionsitems",{"_index":2345,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.getsubmitteduserids",{"_index":2350,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.getsubmitteduserids().some((id",{"_index":2379,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.gettargetfilters(userid",{"_index":3006,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.gettargetfolder(toseedfolder",{"_index":1577,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.getuser(userid",{"_index":1800,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.grade",{"_index":2292,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.gradecomment",{"_index":2294,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.gradecomment.length",{"_index":2297,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.gradefiles",{"_index":2298,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.gradefiles.length",{"_index":2299,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.grid",{"_index":1068,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.grid.delete(this.gridindexfromposition(position",{"_index":1091,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.grid.get(key",{"_index":1074,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.grid.get(this.gridindexfromposition(position",{"_index":1075,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.grid.keys()].map((key",{"_index":1072,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.grid.set(this.gridindexfromposition(element.pos",{"_index":1070,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.grid.set(this.gridindexfromposition(position",{"_index":1094,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.hastaskdashboardpermission(currentuser",{"_index":3488,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.hidden",{"_index":2217,"title":{},"body":{"interfaces/ILessonProperties.html":{},"classes/Lesson.html":{}}}],["this.httpservice",{"_index":136,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.id",{"_index":1024,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.instantiategridelementmodel(gridelement",{"_index":1244,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["this.isdirectory",{"_index":505,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["this.isdraft",{"_index":2372,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.isgradedforuser(userid",{"_index":2385,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.isgroup",{"_index":1046,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.issubmittedforuser(userid",{"_index":2384,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.issubstitutionteacher(userid",{"_index":2375,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.joinpath(os.tmpdir",{"_index":1966,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["this.jwtvalidationadapter.iswhitelisted(accountid",{"_index":2477,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.key).tostring",{"_index":3277,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["this.key).tostring(cryptojs.enc.utf8",{"_index":3279,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["this.lastname",{"_index":2406,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["this.lesson",{"_index":2335,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.lesson.name",{"_index":2394,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.lessonrepo.findallbycourseids(courseids",{"_index":3495,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.limit",{"_index":3040,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.loadallcollectionsfromdatabase(folder",{"_index":1536,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.loadallcollectionsfromfilesystem(folder",{"_index":1535,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.loadcollectionsavailablefromsourceandfilterbycollectionnames",{"_index":1553,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.logger",{"_index":1648,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"injectables/NewsUc.html":{}}}],["this.logger.error('the",{"_index":1686,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["this.logger.error(err",{"_index":1683,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["this.logger.log('cleanup",{"_index":1654,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["this.logger.log(`${numberoffiles",{"_index":1672,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["this.logger.log(`cleanup",{"_index":1650,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["this.logger.log(`create",{"_index":2976,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.log(`finished",{"_index":6720,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`news",{"_index":2983,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`return",{"_index":2994,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`start",{"_index":2984,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`user",{"_index":6696,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.setcontext(deletefilesuc.name",{"_index":1667,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["this.logger.setcontext(youruc.name",{"_index":6717,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.verbose('before",{"_index":1708,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.logger.verbose(`after",{"_index":1711,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.mapelementtoentity(e",{"_index":1225,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["this.mapgridelementtomodel(elementwithposition",{"_index":1263,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["this.mapper.mapdashboardtoentity(dashboardmodel",{"_index":1308,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.mapper.mapdashboardtoentity(modelentity",{"_index":1304,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.mapper.mapdashboardtomodel(entity",{"_index":1302,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.mapreferencetoentity(ref",{"_index":1216,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["this.mapreferencetomodel(ref",{"_index":1253,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["this.mergeelementintoposition(elementtomove",{"_index":1080,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.message",{"_index":611,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.mongod.stop",{"_index":2669,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["this.name",{"_index":719,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"classes/Lesson.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{}}}],["this.newsrepo.findall(targets",{"_index":2991,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.findonebyid(id",{"_index":2996,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.persistandflush(news",{"_index":2982,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.removeandflush(news",{"_index":3003,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsuc.create",{"_index":2736,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.newsuc.delete(newsid",{"_index":2752,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.findallforuser",{"_index":2741,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["this.newsuc.findonebyidforuser(newsid",{"_index":2748,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.update(newsid",{"_index":2749,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.options.adminid",{"_index":157,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.options.adminpassword",{"_index":162,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.options.admintoken",{"_index":158,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.options.adminuser",{"_index":161,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.options.module",{"_index":3536,"title":{},"body":{"classes/TestBootstrapConsole.html":{}}}],["this.options.routingkey",{"_index":2598,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["this.options.uri",{"_index":168,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.orm.close",{"_index":2668,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["this.params(params",{"_index":3247,"title":{},"body":{"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["this.permissions",{"_index":2243,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["this.persistandflush(dashboard",{"_index":1309,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.positionfromgridindex(key",{"_index":1073,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.post('/api/v1/logout",{"_index":87,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.post('/api/v1/users.setstatus",{"_index":82,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.post(path",{"_index":130,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/groups.addmoderator",{"_index":101,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/groups.archive",{"_index":95,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/groups.create",{"_index":112,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/groups.delete",{"_index":115,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/groups.invite",{"_index":99,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/groups.kick",{"_index":97,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/groups.removemoderator",{"_index":103,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/groups.unarchive",{"_index":91,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/users.create",{"_index":119,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/users.createtoken",{"_index":85,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/users.delete",{"_index":124,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.private",{"_index":2332,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.propertiestopopulate",{"_index":2020,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{}}}],["this.propsfactory",{"_index":453,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.propsfactory.afterbuild(afterbuildfn",{"_index":460,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.propsfactory.build(params",{"_index":456,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.propsfactory.params(params",{"_index":463,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.propsfactory.rewindsequence",{"_index":465,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.propsfactory.transient(transient",{"_index":464,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.propsfactory['sequence",{"_index":472,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.references",{"_index":1040,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.references.length",{"_index":1048,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.region",{"_index":2259,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{}}}],["this.removeandflush(file",{"_index":2022,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["this.removefromposition(from",{"_index":1081,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.request.app.get('feathersapp",{"_index":1857,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["this.response",{"_index":63,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.rolerepo.resolvepermissionsfromsubrolesbyid(role.id",{"_index":3119,"title":{},"body":{"injectables/RoleUC.html":{}}}],["this.roles.set(props.roles",{"_index":2245,"title":{},"body":{"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["this.roleuc.resolvepermissionsbyroles(roles",{"_index":3630,"title":{},"body":{"injectables/UserUC.html":{}}}],["this.rows",{"_index":1062,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.school",{"_index":722,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["this.secretaccesskey",{"_index":2257,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{}}}],["this.skip",{"_index":3039,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.source",{"_index":824,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.sourcedescription",{"_index":826,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.spinner.info(text",{"_index":637,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["this.status",{"_index":2316,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.statuscode",{"_index":59,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.storagefilename",{"_index":508,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["this.storageprovider",{"_index":512,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["this.student",{"_index":2286,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.student.id",{"_index":2301,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.students.length",{"_index":732,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.students.set(props.students",{"_index":725,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{}}}],["this.submissions.getitems",{"_index":2343,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.submissions.set(props.submissions",{"_index":2337,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.substitutionteachers.getidentifiers('id",{"_index":733,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.substitutionteachers.set(props.substitutionteachers",{"_index":729,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.task",{"_index":2290,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.taskrepo.findallbyparentids",{"_index":3497,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.taskuc.findall(currentuser",{"_index":3345,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.teacher",{"_index":2333,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.teachers.set(props.teachers",{"_index":727,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.timeout",{"_index":5956,"title":{},"body":{"todo.html":{}}}],["this.timeout(10000",{"_index":6795,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["this.title",{"_index":610,"title":{},"body":{"classes/BusinessError.html":{},"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.title.substr(0",{"_index":1026,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.total",{"_index":3038,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.type",{"_index":609,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.useremailservice.sendwelcomemessage(user",{"_index":6695,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userfacade.resolveuser(userid",{"_index":2479,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.userrepo.findbyemail(props.email",{"_index":6700,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userrepo.findbyid(userid",{"_index":3627,"title":{},"body":{"injectables/UserUC.html":{}}}],["this.userrepo.save(user",{"_index":6691,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userservice.checkusernotexistbyemail(props.email",{"_index":6689,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.useruc.getuserwithpermissions(userid",{"_index":3600,"title":{},"body":{"injectables/UserFacade.html":{}}}],["this.validaterocketchatconfig",{"_index":155,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.validationerrors",{"_index":227,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["those",{"_index":5038,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["though",{"_index":5678,"title":{},"body":{"license.html":{}}}],["thoughtbot/fishery",{"_index":393,"title":{},"body":{"classes/BaseFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["thr",{"_index":3956,"title":{},"body":{"changelog.html":{}}}],["three",{"_index":4798,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["through",{"_index":5428,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["throw",{"_index":147,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/AuthorizationService.html":{},"classes/DashboardEntity.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["throwerror",{"_index":3559,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(err",{"_index":3565,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(new",{"_index":3564,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["thrown",{"_index":4958,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["throws",{"_index":331,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["thumbnails",{"_index":4772,"title":{},"body":{"changelog.html":{}}}],["thuringia",{"_index":5011,"title":{},"body":{"changelog.html":{}}}],["thus",{"_index":5504,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ticket",{"_index":5280,"title":{},"body":{"index.html":{}}}],["tickets",{"_index":4592,"title":{},"body":{"changelog.html":{}}}],["ticketsystem.hpi",{"_index":5282,"title":{},"body":{"index.html":{}}}],["tightly",{"_index":6397,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["time",{"_index":883,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/JwtValidationAdapter.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["timeframe",{"_index":3511,"title":{},"body":{"injectables/TaskUC.html":{}}}],["timeout",{"_index":2415,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["timeout(milliseconds",{"_index":3568,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout(this.timeout",{"_index":3562,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout/firewall",{"_index":4803,"title":{},"body":{"changelog.html":{}}}],["timeouterror",{"_index":3560,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeoutinterceptor",{"_index":2417,"title":{"injectables/TimeoutInterceptor.html":{}},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{}}}],["timeoutinterceptor.defaulttimeout",{"_index":3567,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeouts",{"_index":4345,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["times",{"_index":4799,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["timestamp",{"_index":2788,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["timezone",{"_index":3700,"title":{},"body":{"changelog.html":{}}}],["timouts",{"_index":6789,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tiny",{"_index":5190,"title":{},"body":{"dependencies.html":{}}}],["title",{"_index":180,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ICreateNews.html":{},"interfaces/IErrorType.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/PatchGroupParams.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/ValidationError.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["tls",{"_index":1891,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["tmpdirpath",{"_index":1967,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["toarray",{"_index":1445,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["todo",{"_index":367,"title":{"todo.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/EncryptedStringType.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"modules/InterceptorModule.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/Role.html":{},"modules/ServerModule.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"injectables/UserUC.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["together",{"_index":2757,"title":{},"body":{"classes/NewsFilterQuery.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["toggle",{"_index":5009,"title":{},"body":{"changelog.html":{}}}],["token",{"_index":11,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["tombstone",{"_index":4106,"title":{},"body":{"changelog.html":{}}}],["tooling",{"_index":6809,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tools",{"_index":5245,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["topic",{"_index":4232,"title":{},"body":{"changelog.html":{}}}],["topics",{"_index":6712,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["topromise",{"_index":150,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["toseedfolder",{"_index":1367,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{}}}],["total",{"_index":2772,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["trace",{"_index":2226,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["traceid",{"_index":6520,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tracing",{"_index":6544,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trade",{"_index":5700,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":5699,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":5701,"title":{},"body":{"license.html":{}}}],["transaction",{"_index":4433,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transactions",{"_index":6506,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["transfer",{"_index":5429,"title":{},"body":{"license.html":{}}}],["transferred",{"_index":5658,"title":{},"body":{"license.html":{}}}],["transferring",{"_index":5753,"title":{},"body":{"license.html":{}}}],["transfers",{"_index":6665,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["transform",{"_index":2124,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/ParseObjectIdPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transform(value",{"_index":3043,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["transform:true",{"_index":2127,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transformer",{"_index":5095,"title":{},"body":{"dependencies.html":{}}}],["transformoptions",{"_index":2125,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transient",{"_index":405,"title":{},"body":{"classes/BaseFactory.html":{},"injectables/Logger.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["transient(transient",{"_index":446,"title":{},"body":{"classes/BaseFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["translate",{"_index":5259,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["translates",{"_index":6441,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["transmission",{"_index":5621,"title":{},"body":{"license.html":{}}}],["transparent",{"_index":1716,"title":{},"body":{"classes/EncryptedStringType.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transport",{"_index":6535,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trashbin",{"_index":4454,"title":{},"body":{"changelog.html":{}}}],["trashbins",{"_index":4154,"title":{},"body":{"changelog.html":{}}}],["travis",{"_index":4035,"title":{},"body":{"changelog.html":{}}}],["treated",{"_index":5677,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["treaty",{"_index":5527,"title":{},"body":{"license.html":{}}}],["tries",{"_index":4986,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["trigger",{"_index":6452,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggerd",{"_index":6538,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggered",{"_index":5005,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trim",{"_index":4551,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":122,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFile.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/JwtConstants.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/News.html":{},"interfaces/Options.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/SubmissionFactory.html":{},"classes/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["try",{"_index":1677,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ts",{"_index":5944,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["tsc",{"_index":4785,"title":{},"body":{"changelog.html":{}}}],["tsp",{"_index":4722,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":4932,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["typ",{"_index":2444,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["type",{"_index":13,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/BaseFile.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerModule.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["type.interface.ts",{"_index":2192,"title":{},"body":{"interfaces/IErrorType.html":{}}}],["typealiases",{"_index":5989,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":6910,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["typeof",{"_index":1083,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ISubmissionProperties.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/Scope.html":{},"classes/Submission.html":{}}}],["typeorm",{"_index":6914,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["types",{"_index":697,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/ICourseProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamNews.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["types.ts",{"_index":6056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types/entity",{"_index":1006,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["types/news.types",{"_index":810,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["typesafety",{"_index":2747,"title":{},"body":{"controllers/NewsController.html":{}}}],["typescript",{"_index":47,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"modules/ManagementModule.html":{},"classes/News.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["typical",{"_index":5644,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typically",{"_index":6484,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typing",{"_index":1834,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["t|j)s",{"_index":6110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["u",{"_index":438,"title":{},"body":{"classes/BaseFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["uc",{"_index":1647,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"modules/FilesModule.html":{},"modules/TaskModule.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["uc.ts",{"_index":6571,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uc/dashboard.uc",{"_index":940,"title":{},"body":{"controllers/DashboardController.html":{},"modules/LearnroomModule.html":{}}}],["uc/database",{"_index":1350,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{}}}],["uc/news.uc",{"_index":2729,"title":{},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{}}}],["uc/task.authorization.service",{"_index":3394,"title":{},"body":{"modules/TaskModule.html":{}}}],["uc/task.uc",{"_index":3338,"title":{},"body":{"controllers/TaskController.html":{}}}],["uc/user.uc",{"_index":3599,"title":{},"body":{"injectables/UserFacade.html":{}}}],["ui",{"_index":5188,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["un",{"_index":6501,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unambigious",{"_index":1771,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["unarchivegroup(groupname",{"_index":90,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["unauthorizedexception",{"_index":324,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/TaskUC.html":{},"miscellaneous/variables.html":{}}}],["unauthorizedexception('insufficient",{"_index":338,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["unbind",{"_index":4815,"title":{},"body":{"changelog.html":{}}}],["unblock",{"_index":4687,"title":{},"body":{"changelog.html":{}}}],["unchanged",{"_index":4869,"title":{},"body":{"changelog.html":{}}}],["uncle",{"_index":6658,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["und",{"_index":6449,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["undefined",{"_index":387,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"classes/EncryptedStringType.html":{},"classes/File.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"classes/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":3943,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["understand",{"_index":6291,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["unexpected",{"_index":6798,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unfamiliar",{"_index":6759,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["ungroup",{"_index":3710,"title":{},"body":{"changelog.html":{}}}],["unhandled",{"_index":2105,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["unhandledexception",{"_index":4699,"title":{},"body":{"changelog.html":{}}}],["unhandledrejection",{"_index":4586,"title":{},"body":{"changelog.html":{}}}],["uniform",{"_index":6318,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unique",{"_index":1774,"title":{},"body":{"classes/ErrorResponse.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Role.html":{},"classes/User.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["unit",{"_index":4034,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["univention",{"_index":3742,"title":{},"body":{"changelog.html":{}}}],["universal",{"_index":5191,"title":{},"body":{"dependencies.html":{}}}],["unknown",{"_index":579,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["unknownerror",{"_index":2071,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["unless",{"_index":5650,"title":{},"body":{"license.html":{}}}],["unlike",{"_index":6870,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unlimited",{"_index":5493,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":5406,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":4025,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["unpacking",{"_index":5674,"title":{},"body":{"license.html":{}}}],["unprivileged",{"_index":4991,"title":{},"body":{"changelog.html":{}}}],["unpublished",{"_index":2174,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{}}}],["unreleased",{"_index":3660,"title":{},"body":{"changelog.html":{}}}],["unsafe",{"_index":49,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/JwtValidationAdapter.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["unskip",{"_index":2859,"title":{},"body":{"modules/NewsModule.html":{}}}],["unstable",{"_index":3759,"title":{},"body":{"changelog.html":{}}}],["untestable",{"_index":6710,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["until",{"_index":1019,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskWithStatusVo.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unused",{"_index":3538,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["up",{"_index":3771,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["update",{"_index":2706,"title":{},"body":{"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"modules/NewsModule.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{}}}],["update(id",{"_index":2968,"title":{},"body":{"injectables/NewsUc.html":{}}}],["update(newsid",{"_index":2724,"title":{},"body":{"controllers/NewsController.html":{}}}],["updated",{"_index":2787,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["updatedat",{"_index":380,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["updatenewsparams",{"_index":2725,"title":{"classes/UpdateNewsParams.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/UpdateNewsParams.html":{}}}],["updater",{"_index":775,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["updaterid",{"_index":802,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["updates",{"_index":5016,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["updates/sync",{"_index":4755,"title":{},"body":{"changelog.html":{}}}],["updating",{"_index":2170,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["updator/creator",{"_index":2876,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["upgraded",{"_index":3785,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":5183,"title":{},"body":{"dependencies.html":{}}}],["uploaded",{"_index":4954,"title":{},"body":{"changelog.html":{}}}],["uploads",{"_index":2281,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"changelog.html":{}}}],["upon",{"_index":6644,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["uppercase",{"_index":6586,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uppercase_snake_case",{"_index":1773,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["uri",{"_index":24,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":2031,"title":{},"body":{"interfaces/GlobalConstants.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["urls",{"_index":4241,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["urlsafe",{"_index":5194,"title":{},"body":{"dependencies.html":{}}}],["usage",{"_index":3714,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["use",{"_index":369,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"injectables/FileSystemAdapter.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"injectables/Logger.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Task.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["usecase",{"_index":6350,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["useclass",{"_index":1767,"title":{},"body":{"modules/ErrorModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/ValidationModule.html":{}}}],["used",{"_index":111,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/JwtStrategy.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["usedecorators",{"_index":6090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usedglobals",{"_index":2030,"title":{},"body":{"interfaces/GlobalConstants.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":2642,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["useful",{"_index":1125,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"license.html":{}}}],["useguards(jwtauthguard",{"_index":6079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":144,"title":{"classes/User.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/AuthorizationService.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"injectables/FeathersAuthProvider.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"injectables/JwtStrategy.html":{},"modules/ManagementModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["user(props",{"_index":6690,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user+password",{"_index":3678,"title":{},"body":{"changelog.html":{}}}],["user._id",{"_index":6164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.createdat",{"_index":3070,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user.entity",{"_index":490,"title":{},"body":{"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamNews.html":{}}}],["user.facade",{"_index":3610,"title":{},"body":{"modules/UserModule.html":{}}}],["user.factory",{"_index":3246,"title":{},"body":{"classes/SubmissionFactory.html":{}}}],["user.firstname",{"_index":3067,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{}}}],["user.id",{"_index":3065,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user.lastname",{"_index":3069,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{}}}],["user.ldapdn",{"_index":4880,"title":{},"body":{"changelog.html":{}}}],["user.ldapid",{"_index":4879,"title":{},"body":{"changelog.html":{}}}],["user.permissions",{"_index":1804,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["user.repo.ts",{"_index":6601,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user.roles.getitems",{"_index":3628,"title":{},"body":{"injectables/UserUC.html":{}}}],["user.school.tostring",{"_index":3073,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user.schoolid.tostring",{"_index":1802,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["user.ts",{"_index":6040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.uc.ts",{"_index":6595,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user.updatedat",{"_index":3071,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user/account",{"_index":2485,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["user/class",{"_index":6357,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["user_already_exists",{"_index":6682,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user_create",{"_index":6688,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["useralreadyexisterror",{"_index":6702,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["usercontroller",{"_index":3582,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["userfacade",{"_index":2457,"title":{"injectables/UserFacade.html":{}},"body":{"injectables/JwtStrategy.html":{},"injectables/UserFacade.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["userfactory",{"_index":3245,"title":{},"body":{"classes/SubmissionFactory.html":{},"miscellaneous/variables.html":{}}}],["userfactory.build",{"_index":3250,"title":{},"body":{"classes/SubmissionFactory.html":{},"miscellaneous/variables.html":{}}}],["userid",{"_index":75,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/AuthorizationService.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"injectables/NewsUc.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"injectables/UserFacade.html":{},"injectables/UserUC.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["userid)).rejects.tothrow(notfoundexception",{"_index":6869,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["userid.tostring",{"_index":1812,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["userids",{"_index":687,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{}}}],["userinfomapper",{"_index":2806,"title":{"classes/UserInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/UserInfoMapper.html":{}}}],["userinfomapper.maptoresponse(news.creator",{"_index":2827,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinfomapper.maptoresponse(news.updater",{"_index":2830,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinforesponse",{"_index":2782,"title":{"classes/UserInfoResponse.html":{}},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{}}}],["usermodule",{"_index":263,"title":{"modules/UserModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ServerModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":118,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["userrepo",{"_index":3608,"title":{"injectables/UserRepo.html":{}},"body":{"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["users",{"_index":2179,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/NewsUc.html":{},"classes/User.html":{},"injectables/UserUC.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["users.email",{"_index":4651,"title":{},"body":{"changelog.html":{}}}],["users/admin",{"_index":4613,"title":{},"body":{"changelog.html":{}}}],["users/admin/students",{"_index":5026,"title":{},"body":{"changelog.html":{}}}],["users/admin/teachers",{"_index":5025,"title":{},"body":{"changelog.html":{}}}],["userservice",{"_index":6697,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["usersforconsent",{"_index":4677,"title":{},"body":{"changelog.html":{}}}],["useruc",{"_index":3587,"title":{"injectables/UserUC.html":{}},"body":{"controllers/UserController.html":{},"injectables/UserFacade.html":{},"modules/UserModule.html":{},"injectables/UserUC.html":{},"overview.html":{}}}],["uses",{"_index":4863,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["usevalue",{"_index":1628,"title":{},"body":{"controllers/DelayController.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/RocketChatModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["using",{"_index":428,"title":{},"body":{"classes/BaseFactory.html":{},"injectables/ConsoleWriterService.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"modules/InterceptorModule.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["usually",{"_index":6352,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["utf",{"_index":1936,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["util",{"_index":3508,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["utilities",{"_index":6808,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["utils",{"_index":4617,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uuid",{"_index":5003,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["v1",{"_index":6137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v2",{"_index":4104,"title":{},"body":{"changelog.html":{}}}],["v3",{"_index":5978,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["v3/docs",{"_index":6260,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["v3/index",{"_index":5983,"title":{},"body":{"todo.html":{}}}],["v3/news",{"_index":4057,"title":{},"body":{"changelog.html":{}}}],["v3/user/me",{"_index":4052,"title":{},"body":{"changelog.html":{}}}],["valid",{"_index":2131,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"changelog.html":{},"license.html":{}}}],["validate",{"_index":2412,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/JwtStrategy.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validate(payload",{"_index":2459,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validated",{"_index":2496,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validatenested",{"_index":2675,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{}}}],["validatenested()@apiproperty",{"_index":2672,"title":{},"body":{"classes/MoveElementParams.html":{}}}],["validaterocketchatconfig",{"_index":166,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["validates",{"_index":4696,"title":{},"body":{"changelog.html":{}}}],["validating",{"_index":2495,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["validation",{"_index":207,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/ValidationError.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validation.adapter",{"_index":281,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["validation.adapter.ts",{"_index":2488,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"miscellaneous/variables.html":{}}}],["validation.adapter.ts:15",{"_index":2494,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["validation.adapter.ts:20",{"_index":2492,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["validation.error.ts",{"_index":176,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["validation.error.ts:4",{"_index":187,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["validation.pipe",{"_index":3645,"title":{},"body":{"modules/ValidationModule.html":{}}}],["validation.pipe.ts",{"_index":2115,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validation.pipe.ts:12",{"_index":2120,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validation/validation.module",{"_index":663,"title":{},"body":{"modules/CoreModule.html":{}}}],["validation_error",{"_index":3637,"title":{},"body":{"classes/ValidationError.html":{}}}],["validationerror",{"_index":185,"title":{"classes/ValidationError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/GlobalValidationPipe.html":{},"classes/ValidationError.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validationerror.constraints",{"_index":230,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrordetailresponse",{"_index":221,"title":{"classes/ValidationErrorDetailResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["validationerrordetailresponse(validationerror.property",{"_index":232,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrors",{"_index":190,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{}}}],["validationmodule",{"_index":644,"title":{"modules/ValidationModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{}}}],["validationpipe",{"_index":2119,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validator",{"_index":907,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/IRoleProperties.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/NewsFilterQuery.html":{},"classes/PaginationQuery.html":{},"classes/PatchGroupParams.html":{},"classes/Role.html":{},"classes/UpdateNewsParams.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validators",{"_index":6582,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validobjectid",{"_index":3046,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["value",{"_index":383,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/BaseFile.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"classes/File.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"classes/Lesson.html":{},"classes/LessonScope.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"classes/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskScope.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["value?.length",{"_index":1744,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["valueof",{"_index":6008,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["values",{"_index":1718,"title":{},"body":{"classes/EncryptedStringType.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["variable",{"_index":4921,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["variables",{"_index":3777,"title":{"miscellaneous/variables.html":{}},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["vars",{"_index":3539,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["verbatim",{"_index":5320,"title":{},"body":{"license.html":{}}}],["verbose",{"_index":2221,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose(message",{"_index":2230,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose?(message",{"_index":2235,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["verification",{"_index":6897,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verified",{"_index":121,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["verify",{"_index":4193,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["verifying",{"_index":6832,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verison",{"_index":4398,"title":{},"body":{"changelog.html":{}}}],["version",{"_index":3686,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["versioning",{"_index":3655,"title":{},"body":{"changelog.html":{}}}],["versionnumber",{"_index":4530,"title":{},"body":{"changelog.html":{}}}],["versions",{"_index":5337,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["very",{"_index":1562,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["via",{"_index":1127,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["view",{"_index":2964,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["viewers",{"_index":786,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["violates",{"_index":5672,"title":{},"body":{"license.html":{}}}],["violation",{"_index":5721,"title":{},"body":{"license.html":{}}}],["virtuals",{"_index":5148,"title":{},"body":{"dependencies.html":{}}}],["visibilities",{"_index":5962,"title":{},"body":{"todo.html":{}}}],["visibility",{"_index":2386,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["visible",{"_index":785,"title":{},"body":{"classes/CourseNews.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{}}}],["visiblelessons",{"_index":3494,"title":{},"body":{"injectables/TaskUC.html":{}}}],["visiblelessons.map((o",{"_index":3498,"title":{},"body":{"injectables/TaskUC.html":{}}}],["visual",{"_index":5277,"title":{},"body":{"index.html":{}}}],["void",{"_index":167,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"injectables/ConsoleWriterService.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"classes/LessonScope.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"injectables/StorageProviderRepo.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/TaskScope.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["volume",{"_index":5577,"title":{},"body":{"license.html":{}}}],["vor",{"_index":4276,"title":{},"body":{"changelog.html":{}}}],["vs",{"_index":2431,"title":{},"body":{"interfaces/JwtConstants.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["vscode",{"_index":5246,"title":{"additional-documentation/nestjs-application/vscode.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/extensions.json",{"_index":6935,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/lauch",{"_index":5984,"title":{},"body":{"todo.html":{}}}],["vscode/launch.default.json",{"_index":6276,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/settings.default.json",{"_index":6933,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["vue.js",{"_index":5229,"title":{},"body":{"miscellaneous/functions.html":{}}}],["vulnerabilities",{"_index":3792,"title":{},"body":{"changelog.html":{}}}],["wait",{"_index":3802,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["waive",{"_index":5533,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":5899,"title":{},"body":{"license.html":{}}}],["want",{"_index":3462,"title":{},"body":{"classes/TaskScope.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["want's",{"_index":6372,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["warn",{"_index":2222,"title":{},"body":{"interfaces/ILogger.html":{}}}],["warn(message",{"_index":2232,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["warning",{"_index":4987,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":5440,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":5439,"title":{},"body":{"license.html":{}}}],["watch",{"_index":5967,"title":{},"body":{"todo.html":{}}}],["way",{"_index":2647,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ways",{"_index":5587,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["web",{"_index":5915,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["weight",{"_index":4175,"title":{},"body":{"changelog.html":{}}}],["well",{"_index":3839,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["went",{"_index":6756,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["whatever",{"_index":3163,"title":{},"body":{"classes/ServerConsole.html":{},"license.html":{}}}],["whereas",{"_index":6486,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["wherever",{"_index":2548,"title":{},"body":{"injectables/Logger.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["whether",{"_index":5641,"title":{},"body":{"license.html":{}}}],["whiltelisted",{"_index":3930,"title":{},"body":{"changelog.html":{}}}],["whitelist",{"_index":2129,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"changelog.html":{}}}],["whitelisted",{"_index":2475,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["whitespaces",{"_index":4837,"title":{},"body":{"changelog.html":{}}}],["whole",{"_index":3947,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["whose",{"_index":5628,"title":{},"body":{"license.html":{}}}],["widely",{"_index":5457,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["widespread",{"_index":5364,"title":{},"body":{"license.html":{}}}],["wil",{"_index":4830,"title":{},"body":{"changelog.html":{}}}],["window",{"_index":4658,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["windows",{"_index":5051,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["winston",{"_index":4587,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["wip",{"_index":5290,"title":{},"body":{"index.html":{}}}],["wipo",{"_index":5526,"title":{},"body":{"license.html":{}}}],["wish",{"_index":5345,"title":{},"body":{"license.html":{}}}],["wishes",{"_index":3733,"title":{},"body":{"changelog.html":{}}}],["within",{"_index":587,"title":{},"body":{"classes/BusinessError.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["without",{"_index":3750,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["without/succeeds",{"_index":5941,"title":{},"body":{"todo.html":{}}}],["wlo",{"_index":3957,"title":{},"body":{"changelog.html":{}}}],["wopi",{"_index":3849,"title":{},"body":{"changelog.html":{}}}],["words",{"_index":5285,"title":{},"body":{"index.html":{}}}],["work",{"_index":374,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["work's",{"_index":5474,"title":{},"body":{"license.html":{}}}],["workers",{"_index":3976,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["workflow",{"_index":3821,"title":{},"body":{"changelog.html":{}}}],["workflows",{"_index":3699,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["working",{"_index":4963,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["workings",{"_index":6751,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["works",{"_index":2756,"title":{},"body":{"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["world",{"_index":6431,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["worldwide",{"_index":5790,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":1208,"title":{},"body":{"injectables/DashboardModelMapper.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["wrap(dashboard).toreference",{"_index":1257,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["wrap(element).toreference",{"_index":1237,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["wrapped",{"_index":6091,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["wrappedreference",{"_index":1102,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["wraps",{"_index":6420,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["write",{"_index":1947,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"injectables/TaskAuthorizationService.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["writeerrorlog",{"_index":2102,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["writeerrorlog(error",{"_index":2109,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["writefile",{"_index":1910,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["writefile(filepath",{"_index":1945,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["writer",{"_index":634,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["writer.module",{"_index":3171,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["writer.module.ts",{"_index":621,"title":{},"body":{"modules/ConsoleWriterModule.html":{}}}],["writer.service",{"_index":623,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["writer.service.ts",{"_index":624,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["writer.service.ts:10",{"_index":631,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["writer.service.ts:12",{"_index":627,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["writer/console",{"_index":620,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{},"modules/ServerConsoleModule.html":{}}}],["writes",{"_index":6526,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["writevalidationerrors",{"_index":2093,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["writevalidationerrors(error",{"_index":2104,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["writing",{"_index":5867,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["written",{"_index":5595,"title":{},"body":{"license.html":{}}}],["wrong",{"_index":2096,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["x",{"_index":142,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["xml2js",{"_index":5198,"title":{},"body":{"dependencies.html":{}}}],["xpos",{"_index":1097,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["xposition",{"_index":1137,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["xss",{"_index":4916,"title":{},"body":{"changelog.html":{}}}],["xunit",{"_index":6461,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["y",{"_index":928,"title":{},"body":{"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["year",{"_index":3922,"title":{},"body":{"changelog.html":{}}}],["years",{"_index":5596,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["yes",{"_index":595,"title":{},"body":{"classes/BusinessError.html":{},"classes/DashboardGridElementModel.html":{},"injectables/DatabaseManagementUc.html":{},"classes/EncryptedStringType.html":{},"interfaces/FeathersService.html":{},"interfaces/ILogger.html":{},"injectables/LessonRepo.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/NewsListResponse.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"classes/TaskListResponse.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/ValidationError.html":{},"miscellaneous/functions.html":{}}}],["yourself",{"_index":5805,"title":{},"body":{"license.html":{}}}],["youruc",{"_index":6715,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["ypos",{"_index":1098,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["yposition",{"_index":1138,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["yyyy",{"_index":4943,"title":{},"body":{"changelog.html":{}}}],["zones",{"_index":4740,"title":{},"body":{"changelog.html":{}}}],["zoom",{"_index":266,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AdminIdAndToken.html":{"url":"interfaces/AdminIdAndToken.html","title":"interface - AdminIdAndToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AdminIdAndToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/rocketchat/rocket-chat.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpService, Inject, Injectable } from '@nestjs/common';\nimport { catchError } from 'rxjs/operators';\n\nexport interface RocketChatOptions {\n\turi?: string;\n\tadminUser?: string;\n\tadminPassword?: string;\n\tadminId?: string;\n\tadminToken?: string;\n}\n\ntype GenericData = Record;\n\nexport class RocketChatError extends Error {\n\tprivate statusCode: number;\n\n\tprivate response: GenericData;\n\n\t// rocketchat specific error type\n\tprivate errorType: string;\n\n\tconstructor(e: any) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\tsuper(e.response.statusText);\n\n\t\t// Set the prototype explicitly.\n\t\tObject.setPrototypeOf(this, RocketChatError.prototype);\n\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access\n\t\tthis.statusCode = e.response.statusCode;\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment\n\t\tthis.response = e.response.data;\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment\n\t\tthis.errorType = e.response.data.errorType;\n\t}\n}\n\ninterface AdminIdAndToken {\n\tid: string;\n\ttoken: string;\n}\n\n@Injectable()\nexport class RocketChatService {\n\tprivate adminIdAndToken: AdminIdAndToken;\n\n\tconstructor(\n\t\t@Inject('ROCKET_CHAT_OPTIONS') private readonly options: RocketChatOptions,\n\t\tprivate readonly httpService: HttpService\n\t) {}\n\n\tpublic async me(authToken: string, userId: string): Promise {\n\t\treturn this.get('/api/v1/me', authToken, userId);\n\t}\n\n\tpublic async setUserStatus(authToken: string, userId: string, status: string): Promise {\n\t\treturn this.post('/api/v1/users.setStatus', authToken, userId, {\n\t\t\tmessage: '',\n\t\t\tstatus,\n\t\t});\n\t}\n\n\tpublic async createUserToken(userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/users.createToken', {\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async logoutUser(authToken: string, userId: string): Promise {\n\t\treturn this.post('/api/v1/logout', authToken, userId, {});\n\t}\n\n\tpublic async getUserList(queryString: string): Promise {\n\t\treturn this.getAsAdmin(`/api/v1/users.list?${queryString}`);\n\t}\n\n\tpublic async unarchiveGroup(groupName: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.unarchive', {\n\t\t\troomName: groupName,\n\t\t});\n\t}\n\n\tpublic async archiveGroup(groupName: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.archive', {\n\t\t\troomName: groupName,\n\t\t});\n\t}\n\n\tpublic async kickUserFromGroup(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.kick', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async inviteUserToGroup(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.invite', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async addGroupModerator(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.addModerator', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async removeGroupModerator(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.removeModerator', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async getGroupModerators(groupName: string): Promise {\n\t\treturn this.getAsAdmin(`/api/v1/groups.moderators?roomName=${groupName}`);\n\t}\n\n\tpublic async getGroupMembers(groupName: string): Promise {\n\t\treturn this.getAsAdmin(`/api/v1/groups.members?roomName=${groupName}`);\n\t}\n\n\tpublic async createGroup(name: string, members: string[]): Promise {\n\t\t// group.name is only used\n\t\treturn this.postAsAdmin('/api/v1/groups.create', {\n\t\t\tname,\n\t\t\tmembers,\n\t\t});\n\t}\n\n\tpublic async deleteGroup(groupName: string): Promise {\n\t\t// group.name is only used\n\t\treturn this.postAsAdmin('/api/v1/groups.delete', {\n\t\t\troomName: groupName,\n\t\t});\n\t}\n\n\tpublic async createUser(email: string, password: string, username: string, name: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/users.create', {\n\t\t\temail,\n\t\t\tpassword,\n\t\t\tusername,\n\t\t\tname,\n\t\t\tverified: true,\n\t\t});\n\t}\n\n\tpublic async deleteUser(username: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/users.delete', {\n\t\t\tusername,\n\t\t});\n\t}\n\n\tprivate async postAsAdmin(path: string, body: GenericData): Promise {\n\t\tconst adminIdAndToken = await this.getAdminIdAndToken();\n\t\treturn this.post(path, adminIdAndToken.token, adminIdAndToken.id, body);\n\t}\n\n\tprivate async getAsAdmin(path: string): Promise {\n\t\tconst adminIdAndToken = await this.getAdminIdAndToken();\n\t\treturn this.get(path, adminIdAndToken.token, adminIdAndToken.id);\n\t}\n\n\tprivate async get(path: string, authToken: string, userId: string): Promise {\n\t\tconst response = await this.httpService\n\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t.get(`${this.options.uri}${path}`, {\n\t\t\t\theaders: {\n\t\t\t\t\t'X-Auth-Token': authToken,\n\t\t\t\t\t'X-User-ID': userId,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tcatchError((e) => {\n\t\t\t\t\tthrow new RocketChatError(e);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.toPromise();\n\t\treturn response?.data as GenericData;\n\t}\n\n\tprivate async post(path: string, authToken: string, userId: string, body: GenericData): Promise {\n\t\tconst response = await this.httpService\n\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t.post(`${this.options.uri}${path}`, body, {\n\t\t\t\theaders: {\n\t\t\t\t\t'X-Auth-Token': authToken,\n\t\t\t\t\t'X-User-ID': userId,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tcatchError((e) => {\n\t\t\t\t\tthrow new RocketChatError(e);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.toPromise();\n\t\treturn response?.data as GenericData;\n\t}\n\n\tprivate async getAdminIdAndToken(): Promise {\n\t\tthis.validateRocketChatConfig();\n\n\t\tif (this.adminIdAndToken) {\n\t\t\treturn this.adminIdAndToken;\n\t\t}\n\n\t\tif (this.options.adminId && this.options.adminToken) {\n\t\t\tconst newVar = { id: this.options.adminId, token: this.options.adminToken } as AdminIdAndToken;\n\t\t\tthis.adminIdAndToken = newVar;\n\t\t\treturn newVar;\n\t\t}\n\t\tconst response = await this.httpService\n\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t.post(`${this.options.uri}/api/v1/login`, {\n\t\t\t\tuser: this.options.adminUser,\n\t\t\t\tpassword: this.options.adminPassword,\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tcatchError((e) => {\n\t\t\t\t\tthrow new RocketChatError(e);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.toPromise();\n\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\t\tconst responseJson = response?.data;\n\t\tthis.adminIdAndToken = {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\tid: responseJson.data.userId as string,\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\ttoken: responseJson.data.authToken as string,\n\t\t} as AdminIdAndToken;\n\t\treturn this.adminIdAndToken;\n\t}\n\n\tprivate validateRocketChatConfig(): void {\n\t\tif (!this.options.uri) {\n\t\t\tthrow new Error('rocket chat uri not set');\n\t\t}\n\t\tif (!(this.options.adminId && this.options.adminToken) && !(this.options.adminUser && this.options.adminPassword)) {\n\t\t\tthrow new Error('rocket chat adminId and adminToken OR adminUser and adminPassword must be set');\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiValidationError.html":{"url":"classes/ApiValidationError.html","title":"class - ApiValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/api-validation.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BusinessError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                details\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDetails\n                            \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(validationErrors: ValidationError[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/api-validation.error.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validationErrors\n                                                  \n                                                        \n                                                                        ValidationError[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:12\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDetails\n                        \n                    \n                \n            \n            \n                \ngetDetails()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Record\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResponse\n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus, ValidationError } from '@nestjs/common';\nimport { BusinessError } from './business.error';\n\nexport class ApiValidationError extends BusinessError {\n\tconstructor(readonly validationErrors: ValidationError[] = []) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\ttype: 'API_VALIDATION_ERROR',\n\t\t\t\ttitle: 'API Validation Error',\n\t\t\t\tdefaultMessage: 'API validation failed, see validationErrors for details',\n\t\t\t},\n\t\t\tHttpStatus.BAD_REQUEST\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiValidationErrorResponse.html":{"url":"classes/ApiValidationErrorResponse.html","title":"class - ApiValidationErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/api-validation-error.response.ts\n        \n\n\n            \n                Description\n            \n            \n                HTTP response definition for api validation errors.\n\n            \n\n            \n                Extends\n            \n            \n                        ErrorResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                validationErrors\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiValidationError: ApiValidationError)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiValidationError\n                                                  \n                                                        \n                                                                        ApiValidationError\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        validationErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ValidationErrorDetailResponse[]\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiValidationError } from '@shared/common';\nimport { ErrorResponse } from './error.response';\nimport { ValidationErrorDetailResponse } from './validation-error-detail.response';\n\n/**\n * HTTP response definition for api validation errors.\n */\nexport class ApiValidationErrorResponse extends ErrorResponse {\n\tconstructor(apiValidationError: ApiValidationError) {\n\t\tconst { type, title, message, code } = apiValidationError;\n\t\tsuper(type, title, message, code);\n\n\t\tthis.validationErrors = apiValidationError.validationErrors.map((validationError) => {\n\t\t\tconst constraint = validationError.constraints ? validationError.constraints : ['validation failed'];\n\t\t\tif (Array.isArray(constraint)) {\n\t\t\t\treturn new ValidationErrorDetailResponse(validationError.property, constraint);\n\t\t\t}\n\t\t\tconst errors = Object.values(constraint);\n\t\t\treturn new ValidationErrorDetailResponse(validationError.property, errors);\n\t\t});\n\t}\n\n\tvalidationErrors: ValidationErrorDetailResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppendedAttachment.html":{"url":"interfaces/AppendedAttachment.html","title":"interface - AppendedAttachment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppendedAttachment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailAttachment\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contentDisposition\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contentDisposition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentDisposition:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nJwtValidationAdapter\n\nJwtValidationAdapter\n\nAuthModule -->\n\nJwtValidationAdapter->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authentication/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStrategy\n                        \n                        \n                            JwtValidationAdapter\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { UserModule } from '@src/modules/user';\nimport { JwtStrategy } from './strategy/jwt.strategy';\nimport { jwtConstants } from './constants';\nimport { JwtValidationAdapter } from './strategy/jwt-validation.adapter';\n\n@Module({\n\timports: [PassportModule, JwtModule.register(jwtConstants), UserModule],\n\tproviders: [JwtStrategy, JwtValidationAdapter],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthorizationModule.html":{"url":"modules/AuthorizationModule.html","title":"module - AuthorizationModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthorizationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthorizationService\n                        \n                        \n                            FeathersAuthProvider\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeathersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthorizationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersModule } from '@shared/infra/feathers';\nimport { AuthorizationService } from './authorization.service';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Module({\n\timports: [FeathersModule],\n\tproviders: [AuthorizationService, FeathersAuthProvider],\n\texports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizationService.html":{"url":"injectables/AuthorizationService.html","title":"injectable - AuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkEntityPermissions\n                            \n                            \n                                    Async\n                                getEntityPermissions\n                            \n                            \n                                    Async\n                                getPermittedEntities\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersAuthProvider: FeathersAuthProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/authorization.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersAuthProvider\n                                                  \n                                                        \n                                                                        FeathersAuthProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkEntityPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkEntityPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:32\n                \n            \n\n\n            \n                \n                    Ensure that a user has sufficient permissions for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getEntityPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getEntityPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:16\n                \n            \n\n\n            \n                \n                    Get all permissions a user has for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The list of entity permissions for the user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedEntities\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedEntities(userId: EntityId, targetModel: NewsTargetModel, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:52\n                \n            \n\n\n            \n                \n                    Get all entities for which a user has specific permissions\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The list of ids of all entities that satisfy the provided permissions for the user\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { EntityId, NewsTargetModel } from '@shared/domain';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Injectable()\nexport class AuthorizationService {\n\tconstructor(private feathersAuthProvider: FeathersAuthProvider) {}\n\n\t/**\n\t * Get all permissions a user has for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @returns The list of entity permissions for the user\n\t */\n\tasync getEntityPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId): Promise {\n\t\tconst permissions =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getUserSchoolPermissions(userId, targetId)\n\t\t\t\t: await this.feathersAuthProvider.getUserTargetPermissions(userId, targetModel, targetId);\n\t\treturn permissions;\n\t}\n\n\t/**\n\t * Ensure that a user has sufficient permissions for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @param permissions\n\t * @throws UnauthorizedException if the permissions are not satisfied\n\t */\n\tasync checkEntityPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\ttargetId: EntityId,\n\t\tpermissions: string[]\n\t): Promise | never {\n\t\tconst entityPermissions = await this.getEntityPermissions(userId, targetModel, targetId);\n\t\tconst hasPermissions = permissions.every((p) => entityPermissions.includes(p));\n\t\tif (!hasPermissions) {\n\t\t\tthrow new UnauthorizedException('Insufficient permissions');\n\t\t}\n\t}\n\n\t/**\n\t * Get all entities for which a user has specific permissions\n\t * @param userId\n\t * @param targetModel\n\t * @param permissions\n\t * @returns The list of ids of all entities that satisfy the provided permissions for the user\n\t */\n\tasync getPermittedEntities(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst entitiyIds =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getPermittedSchools(userId)\n\t\t\t\t: await this.feathersAuthProvider.getPermittedTargets(userId, targetModel, permissions);\n\n\t\treturn entitiyIds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntityWithTimestamps.html":{"url":"classes/BaseEntityWithTimestamps.html","title":"class - BaseEntityWithTimestamps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntityWithTimestamps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseFactory.html":{"url":"classes/BaseFactory.html","title":"class - BaseFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/testing/factory/base.factory.ts\n        \n\n\n            \n                Description\n            \n            \n                Entity factory based on thoughtbot/fishery\nhttps://github.com/thoughtbot/fishery\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                propsFactory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterBuild\n                            \n                            \n                                build\n                            \n                            \n                                buildList\n                            \n                            \n                                    Protected\n                                clone\n                            \n                            \n                                    Static\n                                define\n                            \n                            \n                                params\n                            \n                            \n                                rewindSequence\n                            \n                            \n                                    Protected\n                                sequence\n                            \n                            \n                                transient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(EntityClass: literal type, propsFactory: Factory)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/testing/factory/base.factory.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        EntityClass\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        propsFactory\n                                                  \n                                                        \n                                                                    Factory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        propsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Factory\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/testing/factory/base.factory.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterBuild\n                        \n                    \n                \n            \n            \n                \nafterBuild(afterBuildFn: HookFn)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:72\n                \n            \n\n\n            \n                \n                    Extend the factory by adding a function to be called after an object is built.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    afterBuildFn\n                                    \n                                            HookFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe function to call. It accepts your object of type T. The value this function returns gets returned from \"build\"\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        build\n                        \n                    \n                \n            \n            \n                \nbuild(params: DeepPartial)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:45\n                \n            \n\n\n            \n                \n                    Build an entity using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildList\n                        \n                    \n                \n            \n            \n                \nbuildList(number: number, params: DeepPartial)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:58\n                \n            \n\n\n            \n                \n                    Build a list of entities using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    number\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        a list of entities\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        clone\n                        \n                    \n                \n            \n            \n                \n                    \n                    clone(this: F, propsFactory: Factory)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:110\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        F\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                            F\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    propsFactory\n                                    \n                                            Factory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        define\n                        \n                    \n                \n            \n            \n                \n                    \n                    define(this, EntityClass: literal type, generator: GeneratorFn)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:29\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        U\n                        I\n                        F\n                    \n                \n            \n\n            \n                \n                    Define a factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    EntityClass\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The constructor of the entity to be built.\n\n                                    \n                                \n                                \n                                    generator\n                                    \n                                            GeneratorFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Your factory function - see Factory.define() in thoughtbot/fishery\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        params\n                        \n                    \n                \n            \n            \n                \nparams(params: DeepPartial)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:84\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rewindSequence\n                        \n                    \n                \n            \n            \n                \nrewindSequence()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:106\n                \n            \n\n\n            \n                \n                    Set sequence back to its default value\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        sequence\n                        \n                    \n                \n            \n            \n                \n                    \n                    sequence()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:122\n                \n            \n\n\n            \n                \n                    Get the next sequence value\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        the next sequence value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transient\n                        \n                    \n                \n            \n            \n                \ntransient(transient: Partial)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:96\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default transient parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    transient\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ntransient params\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DeepPartial, Factory, GeneratorFn, HookFn } from 'fishery';\n\n/**\n * Entity factory based on thoughtbot/fishery\n * https://github.com/thoughtbot/fishery\n *\n * @template T The entity to be built\n * @template U The properties interface of the entity\n * @template I The transient parameters that your factory supports\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport class BaseFactory {\n\tprotected readonly propsFactory: Factory;\n\n\tconstructor(private readonly EntityClass: { new (props: U): T }, propsFactory: Factory) {\n\t\tthis.propsFactory = propsFactory;\n\t}\n\n\t/**\n\t * Define a factory\n\t * @template T The entity to be built\n\t * @template U The properties interface of the entity\n\t * @template I The transient parameters that your factory supports\n\t * @param EntityClass The constructor of the entity to be built.\n\t * @param generator Your factory function - see `Factory.define()` in thoughtbot/fishery\n\t * @returns\n\t */\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tstatic define>(\n\t\tthis: new (EntityClass: { new (props: U): T }, propsFactory: Factory) => F,\n\t\tEntityClass: { new (props: U): T },\n\t\tgenerator: GeneratorFn\n\t): F {\n\t\tconst propsFactory = Factory.define(generator);\n\t\tconst factory = new this(EntityClass, propsFactory);\n\n\t\treturn factory;\n\t}\n\n\t/**\n\t * Build an entity using your factory\n\t * @param params\n\t * @returns an entity\n\t */\n\tbuild(params: DeepPartial = {}): T {\n\t\tconst props = this.propsFactory.build(params);\n\t\tconst entity = new this.EntityClass(props);\n\n\t\treturn entity;\n\t}\n\n\t/**\n\t * Build a list of entities using your factory\n\t * @param number\n\t * @param params\n\t * @returns a list of entities\n\t */\n\tbuildList(number: number, params: DeepPartial = {}): T[] {\n\t\tconst list: T[] = [];\n\t\tfor (let i = 0; i ): this {\n\t\tconst newPropsFactory = this.propsFactory.afterBuild(afterBuildFn);\n\t\tconst newFactory = this.clone(newPropsFactory);\n\n\t\treturn newFactory;\n\t}\n\n\t/**\n\t * Extend the factory by adding default parameters to be passed to the factory when \"build\" is called\n\t * @param params\n\t * @returns a new factory\n\t */\n\tparams(params: DeepPartial): this {\n\t\tconst newPropsFactory = this.propsFactory.params(params);\n\t\tconst newFactory = this.clone(newPropsFactory);\n\n\t\treturn newFactory;\n\t}\n\n\t/**\n\t * Extend the factory by adding default transient parameters to be passed to the factory when \"build\" is called\n\t * @param transient - transient params\n\t * @returns a new factory\n\t */\n\ttransient(transient: Partial): this {\n\t\tconst newPropsFactory = this.propsFactory.transient(transient);\n\t\tconst newFactory = this.clone(newPropsFactory);\n\n\t\treturn newFactory;\n\t}\n\n\t/**\n\t * Set sequence back to its default value\n\t */\n\trewindSequence(): void {\n\t\tthis.propsFactory.rewindSequence();\n\t}\n\n\tprotected clone>(this: F, propsFactory: Factory): F {\n\t\tconst copy = new (this.constructor as {\n\t\t\tnew (EntityClass: { new (props: U): T }, propsFactory: Factory): F;\n\t\t})(this.EntityClass, propsFactory);\n\n\t\treturn copy;\n\t}\n\n\t/**\n\t * Get the next sequence value\n\t * @returns the next sequence value\n\t */\n\tprotected sequence(): number {\n\t\t// eslint-disable-next-line @typescript-eslint/dot-notation\n\t\treturn this.propsFactory['sequence']();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseFile.html":{"url":"classes/BaseFile.html","title":"class - BaseFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/file.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                creator\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                isDirectory\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDirectory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, ManyToOne } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { StorageProvider } from './storageprovider.entity';\nimport type { User } from './user.entity';\n\nexport interface IFileProperties {\n\tdeletedAt?: Date;\n\tstorageFileName: string;\n\tbucket: string;\n\tstorageProvider: StorageProvider;\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorColumn: 'isDirectory', abstract: true })\nexport abstract class BaseFile extends BaseEntityWithTimestamps {\n\t@Property()\n\tdeletedAt?: Date;\n\n\t@Property()\n\tisDirectory: boolean;\n\n\t@Property()\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorValue: 'true' })\nexport class Directory extends BaseFile {}\n\n@Entity({ collection: 'files', discriminatorValue: 'false' })\nexport class File extends BaseFile {\n\t@Property()\n\tstorageFileName: string;\n\n\t@Property()\n\tbucket: string;\n\n\t@ManyToOne('StorageProvider', { fieldName: 'storageProviderId' })\n\tstorageProvider: StorageProvider;\n\n\tconstructor(props: IFileProperties) {\n\t\tsuper();\n\t\tthis.isDirectory = false;\n\t\tthis.deletedAt = props.deletedAt;\n\t\tthis.storageFileName = props.storageFileName;\n\t\tthis.bucket = props.bucket;\n\t\tthis.storageProvider = props.storageProvider;\n\t\tthis.creator = props.creator;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseRepo.html":{"url":"injectables/BaseRepo.html","title":"injectable - BaseRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BaseRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/base.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                flush\n                            \n                            \n                                persist\n                            \n                            \n                                persistAll\n                            \n                            \n                                    Async\n                                persistAllAndFlush\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                    Async\n                                removeAllAndFlush\n                            \n                            \n                                    Async\n                                removeAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/base.repo.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                    \n                    flush()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persist\n                        \n                    \n                \n            \n            \n                \npersist(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAll\n                        \n                    \n                \n            \n            \n                \npersistAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAll\n                        \n                    \n                \n            \n            \n                \nremoveAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { BaseEntity } from '@shared/domain';\nimport { EntityManager } from '@mikro-orm/mongodb';\n\n@Injectable()\nexport class BaseRepo {\n\tconstructor(protected readonly em: EntityManager) {}\n\n\tpersist(entity: T): T {\n\t\tthis.em.persist(entity);\n\t\treturn entity;\n\t}\n\n\tasync persistAndFlush(entity: T): Promise {\n\t\tawait this.em.persistAndFlush(entity);\n\t\treturn entity;\n\t}\n\n\tpersistAll(entities: T[]): T[] {\n\t\tconst persisted = entities.map((n) => {\n\t\t\tthis.em.persist(n);\n\t\t\treturn n;\n\t\t});\n\t\treturn persisted;\n\t}\n\n\tasync persistAllAndFlush(entities: T[]): Promise {\n\t\tconst persisted = entities.map((n) => {\n\t\t\tthis.em.persist(n);\n\t\t\treturn n;\n\t\t});\n\t\tawait this.em.flush();\n\t\treturn persisted;\n\t}\n\n\tremove(entity: T): void {\n\t\tthis.em.remove(entity);\n\t}\n\n\tasync removeAndFlush(entity: T): Promise {\n\t\tawait this.em.removeAndFlush(entity);\n\t}\n\n\tremoveAll(entities: T[]): void {\n\t\tentities.forEach((entity) => this.em.remove(entity));\n\t}\n\n\tasync removeAllAndFlush(entities: T[]): Promise {\n\t\tentities.forEach((entity) => this.em.remove(entity));\n\t\tawait this.em.flush();\n\t}\n\n\tasync flush(): Promise {\n\t\tawait this.em.flush();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BsonConverter.html":{"url":"injectables/BsonConverter.html","title":"injectable - BsonConverter","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BsonConverter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/converter/bson.converter.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserialize\n                            \n                            \n                                serialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deserialize\n                        \n                    \n                \n            \n            \n                \ndeserialize(bsonDocuments: [])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/converter/bson.converter.ts:21\n                \n            \n\n\n            \n                \n                    Deserializes documents from Extended JSON JavaScript objects to plain JavaScript objects.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    bsonDocuments\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mongo-bson/ejson objects\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     []\n\n                    \n                    \n                        mongo-json documents\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize(documents: [])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/converter/bson.converter.ts:11\n                \n            \n\n\n            \n                \n                    Serializes documents from plain JavaScript objects to Extended JSON JavaScript objects.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    documents\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mongo-json documents\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     []\n\n                    \n                    \n                        mongo-bson/ejson objects\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport BSON from 'bson';\n\n@Injectable()\nexport class BsonConverter {\n\t/**\n\t * Serializes documents from plain JavaScript objects to Extended JSON JavaScript objects.\n\t * @param documents mongo-json documents\n\t * @returns mongo-bson/ejson objects\n\t */\n\tserialize(documents: unknown[]): unknown[] {\n\t\tconst bsonDocuments = BSON.EJSON.serialize(documents) as unknown[];\n\t\treturn bsonDocuments;\n\t}\n\n\t/**\n\t * Deserializes documents from Extended JSON JavaScript objects to plain JavaScript objects.\n\t * @param bsonDocuments mongo-bson/ejson objects\n\t * @returns mongo-json documents\n\t */\n\tdeserialize(bsonDocuments: unknown[]): unknown[] {\n\t\tconst jsonDocuments = BSON.EJSON.deserialize(bsonDocuments) as unknown[];\n\t\treturn jsonDocuments;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BusinessError.html":{"url":"classes/BusinessError.html","title":"class - BusinessError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BusinessError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/business.error.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract base class for business errors, errors that are handled\nwithin of a client or inside of the application.\n\n            \n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                details\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDetails\n                            \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: IErrorType, code: HttpStatus, details?: Record)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/business.error.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        IErrorType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                    HttpStatus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                    Record\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDetails\n                        \n                    \n                \n            \n            \n                \ngetDetails()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/error/business.error.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Record\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResponse\n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/error/business.error.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\nimport { ErrorResponse } from '@src/core/error/dto/error.response';\nimport { IErrorType } from '@src/core/error/interface';\n\n/**\n * Abstract base class for business errors, errors that are handled\n * within of a client or inside of the application.\n */\nexport abstract class BusinessError extends HttpException {\n\treadonly code: number;\n\n\treadonly type: string;\n\n\treadonly title: string;\n\n\treadonly message: string;\n\n\t// Is not matched by type validation because HttpException is already declared\n\treadonly details: Record;\n\n\tconstructor(\n\t\t{ type, title, defaultMessage }: IErrorType,\n\t\tcode: HttpStatus = HttpStatus.CONFLICT,\n\t\tdetails?: Record\n\t) {\n\t\tsuper({ code, type, title, message: defaultMessage }, code);\n\t\tthis.code = code;\n\t\tthis.type = type;\n\t\tthis.title = title;\n\t\tthis.message = defaultMessage;\n\t\tthis.details = details || {};\n\t}\n\n\tgetDetails(): Record {\n\t\treturn this.details;\n\t}\n\n\tgetResponse(): ErrorResponse {\n\t\treturn new ErrorResponse(this.type, this.title, this.message, this.code);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConsoleWriterModule.html":{"url":"modules/ConsoleWriterModule.html","title":"module - ConsoleWriterModule","body":"\n                   \n\n\n\n\n    Modules\n    ConsoleWriterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ConsoleWriterModule\n\n\n\ncluster_ConsoleWriterModule_exports\n\n\n\ncluster_ConsoleWriterModule_providers\n\n\n\n\nConsoleWriterService \n\nConsoleWriterService \n\n\n\nConsoleWriterModule\n\nConsoleWriterModule\n\nConsoleWriterService  -->\n\nConsoleWriterModule->ConsoleWriterService \n\n\n\n\n\nConsoleWriterService\n\nConsoleWriterService\n\nConsoleWriterModule -->\n\nConsoleWriterService->ConsoleWriterModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/shared/infra/console/console-writer/console-writer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ConsoleWriterService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ConsoleWriterService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConsoleWriterService } from './console-writer.service';\n\n@Module({\n\tproviders: [ConsoleWriterService],\n\texports: [ConsoleWriterService],\n})\nexport class ConsoleWriterModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsoleWriterService.html":{"url":"injectables/ConsoleWriterService.html","title":"injectable - ConsoleWriterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConsoleWriterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/console/console-writer/console-writer.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                spinner\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                info\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        info\n                        \n                    \n                \n            \n            \n                \ninfo(text: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/console/console-writer/console-writer.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        spinner\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ora.Ora\n\n                    \n                \n                \n                    \n                        Default value : createSpinner()\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/infra/console/console-writer/console-writer.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { createSpinner } from 'nestjs-console';\nimport ora from 'ora';\n\n@Injectable()\n/**\n * Console writer service using ora spinner internally.\n */\nexport class ConsoleWriterService {\n\tprivate spinner: ora.Ora = createSpinner();\n\n\tinfo(text: string): void {\n\t\tthis.spinner.info(text);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/core.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\nOverrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ErrorModule\n                        \n                        \n                            InterceptorModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            ValidationModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ErrorModule } from './error/error.module';\nimport { LoggerModule } from './logger/logger.module';\nimport { ValidationModule } from './validation/validation.module';\nimport { InterceptorModule } from './interceptor/interceptor.module';\n\n/**\n * The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\n * Overrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n */\n@Module({\n\timports: [LoggerModule, ErrorModule, ValidationModule, InterceptorModule],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Course.html":{"url":"classes/Course.html","title":"class - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/course.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                school\n                            \n                            \n                                students\n                            \n                            \n                                substitutionTeachers\n                            \n                            \n                                teachers\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNumberOfStudents\n                            \n                            \n                                getSubstitutionTeacherIds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ICourseProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ICourseProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT.color\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT.description\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT.name\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('School', {fieldName: 'schoolId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        students\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({name: 'findAllForStudent'})@ManyToMany('User', undefined, {fieldName: 'userIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        substitutionTeachers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('User', undefined, {fieldName: 'substitutionIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teachers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('User', undefined, {fieldName: 'teacherIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getNumberOfStudents\n                        \n                    \n                \n            \n            \n                \ngetNumberOfStudents()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/course.entity.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSubstitutionTeacherIds\n                        \n                    \n                \n            \n            \n                \ngetSubstitutionTeacherIds()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/course.entity.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityId[]\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, Index, ManyToOne, ManyToMany, Collection } from '@mikro-orm/core';\n\nimport { EntityId } from '../types';\n\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { School } from './school.entity';\nimport type { User } from './user.entity';\n\nexport interface ICourseProperties {\n\tname?: string;\n\tdescription?: string;\n\tschool: School;\n\tstudents?: User[];\n\tteachers?: User[];\n\tsubstitutionTeachers?: User[];\n\t// TODO: color format\n\tcolor?: string;\n}\n\n// that is really really shit default handling :D constructor, getter, js default, em default...what the hell\n// i hope it can cleanup with adding schema instant of I...Properties.\nconst DEFAULT = {\n\tcolor: '#ACACAC',\n\tname: 'Kurse',\n\tdescription: '',\n};\n\n@Index({ name: 'findAllForTeacher', properties: ['substitutionTeachers', 'teachers'] })\n@Entity({ tableName: 'courses' })\nexport class Course extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string = DEFAULT.name;\n\n\t@Property()\n\tdescription: string = DEFAULT.description;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@Index({ name: 'findAllForStudent' })\n\t@ManyToMany('User', undefined, { fieldName: 'userIds' })\n\tstudents = new Collection(this);\n\n\t@ManyToMany('User', undefined, { fieldName: 'teacherIds' })\n\tteachers = new Collection(this);\n\n\t@ManyToMany('User', undefined, { fieldName: 'substitutionIds' })\n\tsubstitutionTeachers = new Collection(this);\n\n\t// TODO: string color format\n\t@Property()\n\tcolor: string = DEFAULT.color;\n\n\tconstructor(props: ICourseProperties) {\n\t\tsuper();\n\t\tif (props.name) this.name = props.name;\n\t\tif (props.description) this.description = props.description;\n\t\tthis.school = props.school;\n\t\tif (props.students) this.students.set(props.students);\n\t\tif (props.teachers) this.teachers.set(props.teachers);\n\t\tif (props.substitutionTeachers) this.substitutionTeachers.set(props.substitutionTeachers);\n\t\tif (props.color) this.color = props.color;\n\t}\n\n\tgetNumberOfStudents(): number {\n\t\treturn this.students.length;\n\t}\n\n\tgetSubstitutionTeacherIds(): EntityId[] {\n\t\tconst substitutionIds = this.substitutionTeachers.getIdentifiers('id');\n\t\t// The result of getIdentifiers is a primary key type where we have no represent for it ((string | ObjectId) & IPrimaryKeyValue)[]\n\t\tconst idsAsString = substitutionIds.map((id) => id.toString());\n\n\t\treturn idsAsString;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseGroup.html":{"url":"classes/CourseGroup.html","title":"class - CourseGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/coursegroup.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                            \n                                students\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getParentId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ICourseGroupProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/coursegroup.entity.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ICourseGroupProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        course\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Course', {fieldName: 'courseId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/coursegroup.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        students\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('User', undefined, {fieldName: 'userIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/coursegroup.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getParentId\n                        \n                    \n                \n            \n            \n                \ngetParentId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/coursegroup.entity.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ObjectId\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Collection, ManyToMany, ManyToOne } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { User } from './user.entity';\nimport type { Course } from './course.entity';\n\nexport interface ICourseGroupProperties {\n\tcourse: Course;\n\tstudents?: User[];\n}\n\n@Entity({ tableName: 'coursegroups' })\nexport class CourseGroup extends BaseEntityWithTimestamps {\n\t@ManyToMany('User', undefined, { fieldName: 'userIds' })\n\tstudents = new Collection(this);\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse: Course;\n\n\tconstructor(props: ICourseGroupProperties) {\n\t\tsuper();\n\t\tthis.course = props.course;\n\t\tif (props.students) this.students.set(props.students);\n\t}\n\n\tgetParentId(): ObjectId {\n\t\treturn this.course._id;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseGroupRepo.html":{"url":"injectables/CourseGroupRepo.html","title":"injectable - CourseGroupRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CourseGroupRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/coursegroup.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findByCourseIds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/repositories/learnroom/coursegroup.repo.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByCourseIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByCourseIds(courseIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/coursegroup.repo.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\n\nimport { Counted, EntityId, CourseGroup } from '@shared/domain';\n\n@Injectable()\nexport class CourseGroupRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findByCourseIds(courseIds: EntityId[]): Promise> {\n\t\tconst [courseGroups, count] = await this.em.findAndCount(CourseGroup, {\n\t\t\tcourse: { $in: courseIds },\n\t\t});\n\t\treturn [courseGroups, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseNews.html":{"url":"classes/CourseNews.html","title":"class - CourseNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/news.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Course')\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:104\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:35\n\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'creatorId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:61\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:39\n\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:42\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:66\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('School', {fieldName: 'schoolId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:58\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:45\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:48\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:55\n\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:31\n\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'updaterId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:64\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModel, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { School } from './school.entity';\nimport type { Team } from './team.entity';\nimport type { User } from './user.entity';\nimport { NewsTarget, NewsTargetModel } from '../types/news.types';\nimport { EntityId } from '../types';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId | School;\n\tcreator: EntityId | User;\n\ttarget: EntityId | NewsTarget;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: User;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTarget;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToOne('User', { fieldName: 'creatorId' })\n\tcreator!: User;\n\n\t@ManyToOne('User', { fieldName: 'updaterId' })\n\tupdater?: User;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, updater: props.updater, target: props.target });\n\t\tthis.externalId = props.externalId;\n\t\tthis.source = props.source;\n\t\tthis.sourceDescription = props.sourceDescription;\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne('School')\n\ttarget: School;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne('Course')\n\ttarget: Course;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne('Team')\n\ttarget: Team;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseRepo.html":{"url":"injectables/CourseRepo.html","title":"injectable - CourseRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CourseRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/course.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllByUserId\n                            \n                            \n                                    Async\n                                findAllForStudent\n                            \n                            \n                                    Async\n                                findAllForTeacher\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/repositories/learnroom/course.repo.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByUserId(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/course.repo.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForStudent(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/course.repo.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForTeacher\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForTeacher(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/course.repo.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\n\nimport { EntityId, Course, Counted } from '@shared/domain';\nimport { Scope } from '@shared/repo';\n\nclass CourseScope extends Scope {\n\tforAllGroupTypes(userId: EntityId): CourseScope {\n\t\tconst isStudent = { students: userId };\n\t\tconst isTeacher = { teachers: userId };\n\t\tconst isSubstitutionTeacher = { substitutionTeachers: userId };\n\n\t\tif (userId) {\n\t\t\tthis.addQuery({ $or: [isStudent, isTeacher, isSubstitutionTeacher] });\n\t\t}\n\n\t\treturn this;\n\t}\n}\n\n@Injectable()\nexport class CourseRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\t/* It look like it is not used and can removed. Also no index is set for this query. */\n\tasync findAllByUserId(userId: EntityId): Promise> {\n\t\tconst scope = new CourseScope();\n\t\tscope.forAllGroupTypes(userId);\n\t\tconst [courses, count] = await this.em.findAndCount(Course, scope.query);\n\t\treturn [courses, count];\n\t}\n\n\tasync findAllForStudent(userId: EntityId): Promise> {\n\t\tconst query = { students: userId };\n\t\tconst [courses, count] = await this.em.findAndCount(Course, query);\n\t\treturn [courses, count];\n\t}\n\n\tasync findAllForTeacher(userId: EntityId): Promise> {\n\t\tconst isTeacher = { teachers: userId };\n\t\tconst isSubstitutionTeacher = { substitutionTeachers: userId };\n\t\tconst query = { $or: [isTeacher, isSubstitutionTeacher] };\n\t\tconst [courses, count] = await this.em.findAndCount(Course, query);\n\t\treturn [courses, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseScope.html":{"url":"classes/CourseScope.html","title":"class - CourseScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/course.repo.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _operator\n                            \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                forAllGroupTypes\n                            \n                            \n                                addQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _operator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScopeOperator\n\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        forAllGroupTypes\n                        \n                    \n                \n            \n            \n                \nforAllGroupTypes(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/course.repo.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CourseScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\n\nimport { EntityId, Course, Counted } from '@shared/domain';\nimport { Scope } from '@shared/repo';\n\nclass CourseScope extends Scope {\n\tforAllGroupTypes(userId: EntityId): CourseScope {\n\t\tconst isStudent = { students: userId };\n\t\tconst isTeacher = { teachers: userId };\n\t\tconst isSubstitutionTeacher = { substitutionTeachers: userId };\n\n\t\tif (userId) {\n\t\t\tthis.addQuery({ $or: [isStudent, isTeacher, isSubstitutionTeacher] });\n\t\t}\n\n\t\treturn this;\n\t}\n}\n\n@Injectable()\nexport class CourseRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\t/* It look like it is not used and can removed. Also no index is set for this query. */\n\tasync findAllByUserId(userId: EntityId): Promise> {\n\t\tconst scope = new CourseScope();\n\t\tscope.forAllGroupTypes(userId);\n\t\tconst [courses, count] = await this.em.findAndCount(Course, scope.query);\n\t\treturn [courses, count];\n\t}\n\n\tasync findAllForStudent(userId: EntityId): Promise> {\n\t\tconst query = { students: userId };\n\t\tconst [courses, count] = await this.em.findAndCount(Course, query);\n\t\treturn [courses, count];\n\t}\n\n\tasync findAllForTeacher(userId: EntityId): Promise> {\n\t\tconst isTeacher = { teachers: userId };\n\t\tconst isSubstitutionTeacher = { substitutionTeachers: userId };\n\t\tconst query = { $or: [isTeacher, isSubstitutionTeacher] };\n\t\tconst [courses, count] = await this.em.findAndCount(Course, query);\n\t\treturn [courses, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNewsParams.html":{"url":"classes/CreateNewsParams.html","title":"class - CreateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/create-news.params.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for creating a news document.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                    Optional\n                                displayAt\n                            \n                            \n                                targetId\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Content of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiPropertyOptional({description: 'The point in time from when the News entity schould be displayed. Defaults to now so that the news is published'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Title of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsDate, IsOptional, IsString } from 'class-validator';\nimport { NewsTargetModel } from '@shared/domain';\n\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\n/**\n * DTO for creating a news document.\n */\nexport class CreateNewsParams {\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@IsDate()\n\t@IsOptional()\n\t@ApiPropertyOptional({\n\t\tdescription:\n\t\t\t'The point in time from when the News entity schould be displayed. Defaults to now so that the news is published',\n\t})\n\tdisplayAt?: Date;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DashboardController.html":{"url":"controllers/DashboardController.html","title":"controller - DashboardController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DashboardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dashboard.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                dashboard\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findForUser\n                            \n                            \n                                    Async\n                                moveElement\n                            \n                            \n                                    Async\n                                patchGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findForUser()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiBody({type: DashboardResponse})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/controller/dashboard.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        moveElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    moveElement(dashboardId: string, params: MoveElementParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/moveElement')@ApiBody({type: DashboardResponse})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/controller/dashboard.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dashboardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                MoveElementParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        patchGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    patchGroup(dashboardId: string, x: number, y: number, params: PatchGroupParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/element')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/controller/dashboard.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dashboardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    x\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    y\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                PatchGroupParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Patch, Param, Body, Query } from '@nestjs/common';\nimport { ApiTags, ApiBody } from '@nestjs/swagger';\nimport { Authenticate } from '@src/modules/authentication/decorator/auth.decorator';\nimport { ParseObjectIdPipe } from '@shared/controller';\nimport { DashboardUc } from '../uc/dashboard.uc';\nimport { DashboardResponse, MoveElementParams, PatchGroupParams } from './dto';\nimport { DashboardMapper } from '../mapper/dashboard.mapper';\n\n@ApiTags('Dashboard')\n@Authenticate('jwt')\n@Controller('dashboard')\nexport class DashboardController {\n\tconstructor(private readonly dashboardUc: DashboardUc) {}\n\n\t@Get()\n\t@ApiBody({ type: DashboardResponse })\n\tasync findForUser(): Promise {\n\t\tconst dashboard = await this.dashboardUc.getUsersDashboard(/* currentUser.userId */);\n\t\tconst dto = DashboardMapper.mapToResponse(dashboard);\n\t\treturn dto;\n\t}\n\n\t@Patch(':id/moveElement')\n\t@ApiBody({ type: DashboardResponse })\n\tasync moveElement(\n\t\t@Param('id', ParseObjectIdPipe) dashboardId: string,\n\t\t/* @CurrentUser() currentUser: ICurrentUser, */\n\t\t@Body() params: MoveElementParams\n\t): Promise {\n\t\tconst dashboard = await this.dashboardUc.moveElementOnDashboard(dashboardId, params.from, params.to);\n\t\tconst dto = DashboardMapper.mapToResponse(dashboard);\n\t\treturn dto;\n\t}\n\n\t@Patch(':id/element')\n\tasync patchGroup(\n\t\t@Param('id', ParseObjectIdPipe) dashboardId: string,\n\t\t@Query('x') x: number,\n\t\t@Query('y') y: number,\n\t\t@Body() params: PatchGroupParams\n\t): Promise {\n\t\tconst dashboard = await this.dashboardUc.renameGroupOnDashboard(dashboardId, { x, y }, params.title);\n\t\tconst dto = DashboardMapper.mapToResponse(dashboard);\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardEntity.html":{"url":"classes/DashboardEntity.html","title":"class - DashboardEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columns\n                            \n                            \n                                grid\n                            \n                            \n                                id\n                            \n                            \n                                rows\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getElement\n                            \n                            \n                                getGrid\n                            \n                            \n                                getId\n                            \n                            \n                                    Private\n                                getReferencesFromPosition\n                            \n                            \n                                    Private\n                                gridIndexFromPosition\n                            \n                            \n                                    Private\n                                mergeElementIntoPosition\n                            \n                            \n                                moveElement\n                            \n                            \n                                    Private\n                                positionFromGridIndex\n                            \n                            \n                                    Private\n                                removeFromPosition\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, props: DashboardProps)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:185\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        DashboardProps\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:168\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        grid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:172\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:166\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rows\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:170\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getElement\n                        \n                    \n                \n            \n            \n                \ngetElement(position: GridPosition)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:214\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                                GridPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IGridElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGrid\n                        \n                    \n                \n            \n            \n                \ngetGrid()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         GridElementWithPosition[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getId\n                        \n                    \n                \n            \n            \n                \ngetId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:198\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getReferencesFromPosition\n                        \n                    \n                \n            \n            \n                \n                    \n                    getReferencesFromPosition(position: GridPositionWithGroupIndex)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:232\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                                GridPositionWithGroupIndex\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IGridElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        gridIndexFromPosition\n                        \n                    \n                \n            \n            \n                \n                    \n                    gridIndexFromPosition(pos: GridPosition)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pos\n                                    \n                                                GridPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        mergeElementIntoPosition\n                        \n                    \n                \n            \n            \n                \n                    \n                    mergeElementIntoPosition(element: IGridElement, position: GridPosition)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:253\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                                IGridElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                                GridPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IGridElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moveElement\n                        \n                    \n                \n            \n            \n                \nmoveElement(from: GridPositionWithGroupIndex, to: GridPositionWithGroupIndex)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:222\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    from\n                                    \n                                                GridPositionWithGroupIndex\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                                GridPositionWithGroupIndex\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GridElementWithPosition\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        positionFromGridIndex\n                        \n                    \n                \n            \n            \n                \n                    \n                    positionFromGridIndex(index: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GridPosition\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        removeFromPosition\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeFromPosition(position: GridPositionWithGroupIndex)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:244\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                                GridPositionWithGroupIndex\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException, BadRequestException } from '@nestjs/common';\nimport { EntityId } from '../types/entity-id';\n\nconst defaultColumns = 6;\nconst defaultRows = 6;\n\nexport type GridElementReferenceMetadata = {\n\tid: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n};\n\nexport interface IGridElementReference {\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class DefaultGridReference implements IGridElementReference {\n\t// This is only a temporary fake class, for use until other references, like courses, are fully supported.\n\tid: EntityId;\n\n\ttitle: string;\n\n\tdisplayColor: string;\n\n\tconstructor(id: EntityId, title: string, displayColor = '#f23f76') {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.displayColor = displayColor;\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn {\n\t\t\tid: this.id,\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: this.title.substr(0, 2),\n\t\t\tdisplayColor: this.displayColor,\n\t\t};\n\t}\n}\n\nexport interface IGridElement {\n\thasId(): boolean;\n\n\tgetId: () => EntityId;\n\n\tgetContent: () => GridElementContent;\n\n\tisGroup(): boolean;\n\n\tremoveReference(index: number): void;\n\n\tgetReferences(): IGridElementReference[];\n\n\taddReferences(anotherReference: IGridElementReference[]): void;\n\n\tsetGroupName(newGroupName: string): void;\n}\n\nexport type GridElementContent = {\n\treferencedId?: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n\tgroup?: GridElementReferenceMetadata[];\n};\n\nexport class GridElement implements IGridElement {\n\tid: EntityId;\n\n\ttitle: string;\n\n\tprivate constructor(props: { id?: EntityId; title?: string; references: IGridElementReference[] }) {\n\t\tif (props.id) this.id = props.id;\n\t\tif (props.title) this.title = props.title;\n\t\tthis.references = props.references;\n\t}\n\n\tstatic FromPersistedReference(id: EntityId, reference: IGridElementReference): GridElement {\n\t\treturn new GridElement({ id, references: [reference] });\n\t}\n\n\tstatic FromPersistedGroup(id: EntityId, title: string, group: IGridElementReference[]): GridElement {\n\t\treturn new GridElement({ id, title, references: group });\n\t}\n\n\tstatic FromSingleReference(reference: IGridElementReference): GridElement {\n\t\treturn new GridElement({ references: [reference] });\n\t}\n\n\tstatic FromGroup(title: string, references: IGridElementReference[]): GridElement {\n\t\treturn new GridElement({ title, references });\n\t}\n\n\treferences: IGridElementReference[];\n\n\thasId(): boolean {\n\t\treturn !!this.id;\n\t}\n\n\tgetId(): EntityId {\n\t\treturn this.id;\n\t}\n\n\tgetReferences(): IGridElementReference[] {\n\t\treturn this.references;\n\t}\n\n\tremoveReference(index: number): void {\n\t\tif (!this.isGroup()) {\n\t\t\tthrow new BadRequestException('this element is not a group.');\n\t\t}\n\t\tif (index > 0 && this.references.length  reference.getMetadata());\n\t\tconst checkShortTitle = this.title ? this.title.substr(0, 2) : 'exampleTitle';\n\t\tconst groupMetadata = {\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: checkShortTitle,\n\t\t\tdisplayColor: 'exampleColor',\n\t\t\tgroup: groupData,\n\t\t};\n\t\treturn groupMetadata;\n\t}\n\n\tisGroup(): boolean {\n\t\treturn this.references.length > 1;\n\t}\n\n\tsetGroupName(newGroupName: string): void {\n\t\tif (!this.isGroup()) {\n\t\t\treturn;\n\t\t}\n\t\tthis.title = newGroupName;\n\t}\n}\n\nexport type GridPosition = { x: number; y: number };\nexport type GridPositionWithGroupIndex = { x: number; y: number; groupIndex?: number };\n\nexport type GridElementWithPosition = {\n\tgridElement: IGridElement;\n\tpos: GridPosition;\n};\n\nexport type DashboardProps = { colums?: number; rows?: number; grid: GridElementWithPosition[] };\n\nexport class DashboardEntity {\n\tid: EntityId;\n\n\tcolumns: number;\n\n\trows: number;\n\n\tgrid: Map;\n\n\tprivate gridIndexFromPosition(pos: GridPosition): number {\n\t\tif (pos.x > this.columns || pos.y > this.rows) {\n\t\t\tthrow new BadRequestException('dashboard element position is outside the grid.');\n\t\t}\n\t\treturn this.columns * pos.y + pos.x;\n\t}\n\n\tprivate positionFromGridIndex(index: number): GridPosition {\n\t\tconst y = Math.floor(index / this.columns);\n\t\tconst x = index % this.columns;\n\t\treturn { x, y };\n\t}\n\n\tconstructor(id: string, props: DashboardProps) {\n\t\tthis.columns = props.colums || defaultColumns;\n\t\tthis.rows = props.rows || defaultRows;\n\t\tthis.grid = new Map();\n\t\tprops.grid.forEach((element) => {\n\t\t\tthis.grid.set(this.gridIndexFromPosition(element.pos), element.gridElement);\n\t\t});\n\t\tthis.id = id;\n\t\tObject.assign(this, {});\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetGrid(): GridElementWithPosition[] {\n\t\tconst result = [...this.grid.keys()].map((key) => {\n\t\t\tconst position = this.positionFromGridIndex(key);\n\t\t\tconst value = this.grid.get(key) as IGridElement;\n\t\t\treturn {\n\t\t\t\tpos: position,\n\t\t\t\tgridElement: value,\n\t\t\t};\n\t\t});\n\t\treturn result;\n\t}\n\n\tgetElement(position: GridPosition): IGridElement {\n\t\tconst element = this.grid.get(this.gridIndexFromPosition(position));\n\t\tif (!element) {\n\t\t\tthrow new NotFoundException('no element at grid position');\n\t\t}\n\t\treturn element;\n\t}\n\n\tmoveElement(from: GridPositionWithGroupIndex, to: GridPositionWithGroupIndex): GridElementWithPosition {\n\t\tconst elementToMove = this.getReferencesFromPosition(from);\n\t\tconst resultElement = this.mergeElementIntoPosition(elementToMove, to);\n\t\tthis.removeFromPosition(from);\n\t\treturn {\n\t\t\tpos: to,\n\t\t\tgridElement: resultElement,\n\t\t};\n\t}\n\n\tprivate getReferencesFromPosition(position: GridPositionWithGroupIndex): IGridElement {\n\t\tconst elementToMove = this.getElement(position);\n\n\t\tif (typeof position.groupIndex === 'number' && elementToMove.isGroup()) {\n\t\t\tconst references = elementToMove.getReferences();\n\t\t\tconst referenceForIndex = references[position.groupIndex];\n\t\t\treturn GridElement.FromSingleReference(referenceForIndex);\n\t\t}\n\n\t\treturn elementToMove;\n\t}\n\n\tprivate removeFromPosition(position: GridPositionWithGroupIndex): void {\n\t\tconst element = this.getElement(position);\n\t\tif (typeof position.groupIndex === 'number') {\n\t\t\telement.removeReference(position.groupIndex);\n\t\t} else {\n\t\t\tthis.grid.delete(this.gridIndexFromPosition(position));\n\t\t}\n\t}\n\n\tprivate mergeElementIntoPosition(element: IGridElement, position: GridPosition): IGridElement {\n\t\tconst targetElement = this.grid.get(this.gridIndexFromPosition(position));\n\t\tif (targetElement) {\n\t\t\ttargetElement.addReferences(element.getReferences());\n\t\t\treturn targetElement;\n\t\t}\n\t\tthis.grid.set(this.gridIndexFromPosition(position), element);\n\t\treturn element;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardGridElementModel.html":{"url":"classes/DashboardGridElementModel.html","title":"class - DashboardGridElementModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardGridElementModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/dashboard.model.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dashboard\n                            \n                            \n                                references\n                            \n                            \n                                title\n                            \n                            \n                                xPos\n                            \n                            \n                                yPos\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id?: string)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dashboard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentifiedReference\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('DashboardModelEntity', {wrappedReference: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        references\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Collection\n\n                    \n                \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany('DefaultGridReferenceModel', 'gridelement')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        xPos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        yPos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, ManyToOne, OneToMany, Collection, IdentifiedReference } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from '@shared/domain/entity/base.entity';\n\n@Entity({ tableName: 'dashboarddefaultreference' })\nexport class DefaultGridReferenceModel extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@Property()\n\ttitle: string;\n\n\t@Property()\n\tcolor: string;\n\n\t// not really happy with this, but didnt find a better solution yet to connect the gridelement with multiple references.\n\t@ManyToOne('DashboardGridElementModel', { wrappedReference: true })\n\tgridelement: IdentifiedReference;\n}\n\n@Entity({ tableName: 'dashboardelement' })\nexport class DashboardGridElementModel extends BaseEntityWithTimestamps {\n\tconstructor(id?: string) {\n\t\tsuper();\n\t\tif (id) {\n\t\t\tthis._id = ObjectId.createFromHexString(id);\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\t@Property()\n\ttitle: string;\n\n\t@Property()\n\txPos: number;\n\n\t@Property()\n\tyPos: number;\n\n\t// todo: put in references to useful things like courses via polymorphic inheritance (see news)\n\t@OneToMany('DefaultGridReferenceModel', 'gridelement')\n\treferences: Collection = new Collection(this);\n\n\t@ManyToOne('DashboardModelEntity', { wrappedReference: true })\n\tdashboard: IdentifiedReference;\n}\n\n@Entity({ tableName: 'dashboard' })\nexport class DashboardModelEntity extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@OneToMany('DashboardGridElementModel', 'dashboard')\n\tgridElements: Collection = new Collection(this);\n\n\t// userId\n\n\t// sizetype\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardGridElementResponse.html":{"url":"classes/DashboardGridElementResponse.html","title":"class - DashboardGridElementResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardGridElementResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayColor\n                            \n                            \n                                groupElements\n                            \n                            \n                                id\n                            \n                            \n                                shortTitle\n                            \n                            \n                                title\n                            \n                            \n                                xPosition\n                            \n                            \n                                yPosition\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Color of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DashboardGridSubElementResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, description: 'List of all subelements in the group'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the Grid element', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shortTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Short title of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Title of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        xPosition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'X position of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        yPosition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Y position of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:56\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class DashboardGridSubElementResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n}\n\nexport class DashboardGridElementResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\tdescription: 'X position of the Grid element',\n\t})\n\txPosition: number;\n\n\t@ApiProperty({\n\t\tdescription: 'Y position of the Grid element',\n\t})\n\tyPosition: number;\n\n\t@ApiProperty({\n\t\ttype: [DashboardGridSubElementResponse],\n\t\tdescription: 'List of all subelements in the group',\n\t})\n\tgroupElements: DashboardGridSubElementResponse[];\n}\n\nexport class DashboardResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Dashboard entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\ttype: [DashboardGridElementResponse],\n\t\tdescription: 'List of all elements visible on the dashboard',\n\t})\n\tgridElements: DashboardGridElementResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardGridSubElementResponse.html":{"url":"classes/DashboardGridSubElementResponse.html","title":"class - DashboardGridSubElementResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardGridSubElementResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayColor\n                            \n                            \n                                id\n                            \n                            \n                                shortTitle\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Color of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the Grid element', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shortTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Short title of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Title of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class DashboardGridSubElementResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n}\n\nexport class DashboardGridElementResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\tdescription: 'X position of the Grid element',\n\t})\n\txPosition: number;\n\n\t@ApiProperty({\n\t\tdescription: 'Y position of the Grid element',\n\t})\n\tyPosition: number;\n\n\t@ApiProperty({\n\t\ttype: [DashboardGridSubElementResponse],\n\t\tdescription: 'List of all subelements in the group',\n\t})\n\tgroupElements: DashboardGridSubElementResponse[];\n}\n\nexport class DashboardResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Dashboard entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\ttype: [DashboardGridElementResponse],\n\t\tdescription: 'List of all elements visible on the dashboard',\n\t})\n\tgridElements: DashboardGridElementResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardMapper.html":{"url":"classes/DashboardMapper.html","title":"class - DashboardMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(dashboard: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dashboard\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DashboardResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DashboardEntity } from '@shared/domain';\nimport { DashboardResponse, DashboardGridElementResponse } from '../controller/dto';\n\nexport class DashboardMapper {\n\tstatic mapToResponse(dashboard: DashboardEntity): DashboardResponse {\n\t\tconst dto = new DashboardResponse();\n\n\t\tdto.id = dashboard.id;\n\n\t\tdto.gridElements = dashboard.getGrid().map((elementWithPosition) => {\n\t\t\tconst elementDTO = new DashboardGridElementResponse();\n\n\t\t\telementDTO.id = elementWithPosition.gridElement.getId();\n\t\t\tconst data = elementWithPosition.gridElement.getContent();\n\t\t\telementDTO.title = data.title;\n\t\t\telementDTO.shortTitle = data.shortTitle;\n\t\t\telementDTO.displayColor = data.displayColor;\n\t\t\tif (data.group) {\n\t\t\t\telementDTO.groupElements = data.group;\n\t\t\t}\n\n\t\t\tconst { pos } = elementWithPosition;\n\t\t\telementDTO.xPosition = pos.x;\n\t\t\telementDTO.yPosition = pos.y;\n\n\t\t\treturn elementDTO;\n\t\t});\n\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardModelEntity.html":{"url":"classes/DashboardModelEntity.html","title":"class - DashboardModelEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardModelEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/dashboard.model.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                gridElements\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        gridElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Collection\n\n                    \n                \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany('DashboardGridElementModel', 'dashboard')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, ManyToOne, OneToMany, Collection, IdentifiedReference } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from '@shared/domain/entity/base.entity';\n\n@Entity({ tableName: 'dashboarddefaultreference' })\nexport class DefaultGridReferenceModel extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@Property()\n\ttitle: string;\n\n\t@Property()\n\tcolor: string;\n\n\t// not really happy with this, but didnt find a better solution yet to connect the gridelement with multiple references.\n\t@ManyToOne('DashboardGridElementModel', { wrappedReference: true })\n\tgridelement: IdentifiedReference;\n}\n\n@Entity({ tableName: 'dashboardelement' })\nexport class DashboardGridElementModel extends BaseEntityWithTimestamps {\n\tconstructor(id?: string) {\n\t\tsuper();\n\t\tif (id) {\n\t\t\tthis._id = ObjectId.createFromHexString(id);\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\t@Property()\n\ttitle: string;\n\n\t@Property()\n\txPos: number;\n\n\t@Property()\n\tyPos: number;\n\n\t// todo: put in references to useful things like courses via polymorphic inheritance (see news)\n\t@OneToMany('DefaultGridReferenceModel', 'gridelement')\n\treferences: Collection = new Collection(this);\n\n\t@ManyToOne('DashboardModelEntity', { wrappedReference: true })\n\tdashboard: IdentifiedReference;\n}\n\n@Entity({ tableName: 'dashboard' })\nexport class DashboardModelEntity extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@OneToMany('DashboardGridElementModel', 'dashboard')\n\tgridElements: Collection = new Collection(this);\n\n\t// userId\n\n\t// sizetype\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DashboardModelMapper.html":{"url":"injectables/DashboardModelMapper.html","title":"injectable - DashboardModelMapper","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DashboardModelMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/dashboard.model.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                instantiateGridElementModel\n                            \n                            \n                                    Async\n                                mapDashboardToEntity\n                            \n                            \n                                    Async\n                                mapDashboardToModel\n                            \n                            \n                                    Async\n                                mapElementToEntity\n                            \n                            \n                                    Async\n                                mapGridElementToModel\n                            \n                            \n                                mapReferenceToEntity\n                            \n                            \n                                    Async\n                                mapReferenceToModel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        instantiateGridElementModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    instantiateGridElementModel(gridElement: IGridElement)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    gridElement\n                                    \n                                                IGridElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        mapDashboardToEntity\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapDashboardToEntity(modelEntity: DashboardModelEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modelEntity\n                                    \n                                                DashboardModelEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        mapDashboardToModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapDashboardToModel(entity: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        mapElementToEntity\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapElementToEntity(modelEntity: DashboardGridElementModel)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modelEntity\n                                    \n                                                DashboardGridElementModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        mapGridElementToModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapGridElementToModel(elementWithPosition: GridElementWithPosition, dashboard: DashboardModelEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elementWithPosition\n                                    \n                                                GridElementWithPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dashboard\n                                    \n                                                DashboardModelEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapReferenceToEntity\n                        \n                    \n                \n            \n            \n                \nmapReferenceToEntity(modelEntity: DefaultGridReferenceModel)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modelEntity\n                                    \n                                                DefaultGridReferenceModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DefaultGridReference\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        mapReferenceToModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapReferenceToModel(reference: IGridElementReference, element: DashboardGridElementModel)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reference\n                                    \n                                                IGridElementReference\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    element\n                                    \n                                                DashboardGridElementModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Collection, wrap, EntityManager } from '@mikro-orm/core';\nimport { Injectable } from '@nestjs/common';\nimport {\n\tDashboardEntity,\n\tGridElement,\n\tIGridElement,\n\tGridElementWithPosition,\n\tDefaultGridReference,\n\tIGridElementReference,\n} from '@shared/domain';\nimport { DashboardGridElementModel, DashboardModelEntity, DefaultGridReferenceModel } from './dashboard.model.entity';\n\n@Injectable()\nexport class DashboardModelMapper {\n\tconstructor(protected readonly em: EntityManager) {}\n\n\tmapReferenceToEntity(modelEntity: DefaultGridReferenceModel): DefaultGridReference {\n\t\treturn new DefaultGridReference(modelEntity.id, modelEntity.title, modelEntity.color);\n\t}\n\n\tasync mapElementToEntity(modelEntity: DashboardGridElementModel): Promise {\n\t\tif (!modelEntity.references.isInitialized()) {\n\t\t\tawait modelEntity.references.init();\n\t\t}\n\t\tconst references = Array.from(modelEntity.references).map((ref) => this.mapReferenceToEntity(ref));\n\t\tconst result = {\n\t\t\tpos: { x: modelEntity.xPos, y: modelEntity.yPos },\n\t\t\tgridElement: GridElement.FromPersistedGroup(modelEntity.id, modelEntity.title, references),\n\t\t};\n\t\treturn result;\n\t}\n\n\tasync mapDashboardToEntity(modelEntity: DashboardModelEntity): Promise {\n\t\tif (!modelEntity.gridElements.isInitialized()) {\n\t\t\tawait modelEntity.gridElements.init();\n\t\t}\n\t\tconst grid = await Promise.all(\n\t\t\tArray.from(modelEntity.gridElements).map(async (e) => {\n\t\t\t\treturn this.mapElementToEntity(e);\n\t\t\t})\n\t\t);\n\t\treturn new DashboardEntity(modelEntity.id, { grid });\n\t}\n\n\tasync mapReferenceToModel(\n\t\treference: IGridElementReference,\n\t\telement: DashboardGridElementModel\n\t): Promise {\n\t\tconst metadata = reference.getMetadata();\n\t\tconst existingReference = await this.em.findOne(DefaultGridReferenceModel, metadata.id);\n\t\tconst result = existingReference || new DefaultGridReferenceModel(metadata.id);\n\t\tresult.color = metadata.displayColor;\n\t\tresult.title = metadata.title;\n\t\tresult.gridelement = wrap(element).toReference();\n\t\treturn result;\n\t}\n\n\tprivate async instantiateGridElementModel(gridElement: IGridElement): Promise {\n\t\tif (!gridElement.hasId()) {\n\t\t\treturn new DashboardGridElementModel();\n\t\t}\n\t\tconst existing = await this.em.findOne(DashboardGridElementModel, gridElement.getId());\n\t\treturn existing || new DashboardGridElementModel(gridElement.getId());\n\t}\n\n\tasync mapGridElementToModel(\n\t\telementWithPosition: GridElementWithPosition,\n\t\tdashboard: DashboardModelEntity\n\t): Promise {\n\t\tconst { gridElement } = elementWithPosition;\n\t\tconst elementModel = await this.instantiateGridElementModel(gridElement);\n\t\telementModel.xPos = elementWithPosition.pos.x;\n\t\telementModel.yPos = elementWithPosition.pos.y;\n\n\t\tif (gridElement.isGroup()) {\n\t\t\telementModel.title = gridElement.getContent().title;\n\t\t}\n\n\t\tconst references = await Promise.all(\n\t\t\tgridElement.getReferences().map((ref) => this.mapReferenceToModel(ref, elementModel))\n\t\t);\n\t\telementModel.references = new Collection(elementModel, references);\n\n\t\telementModel.dashboard = wrap(dashboard).toReference();\n\t\treturn elementModel;\n\t}\n\n\tasync mapDashboardToModel(entity: DashboardEntity): Promise {\n\t\tconst existing = await this.em.findOne(DashboardModelEntity, entity.getId());\n\t\tconst modelEntity = existing || new DashboardModelEntity(entity.getId());\n\t\tconst mappedElements = await Promise.all(\n\t\t\tentity.getGrid().map((elementWithPosition) => this.mapGridElementToModel(elementWithPosition, modelEntity))\n\t\t);\n\n\t\tArray.from(modelEntity.gridElements).forEach((el) => {\n\t\t\tif (!mappedElements.includes(el)) {\n\t\t\t\tmodelEntity.gridElements.remove(el);\n\t\t\t\tthis.em.remove(el);\n\t\t\t}\n\t\t});\n\n\t\treturn modelEntity;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DashboardRepo.html":{"url":"injectables/DashboardRepo.html","title":"injectable - DashboardRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DashboardRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/dashboard.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getDashboardById\n                            \n                            \n                                    Async\n                                getUsersDashboard\n                            \n                            \n                                    Async\n                                persist\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager, mapper: DashboardModelMapper)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapper\n                                                  \n                                                        \n                                                                        DashboardModelMapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getDashboardById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDashboardById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUsersDashboard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsersDashboard()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persist\n                        \n                    \n                \n            \n            \n                \n                    \n                    persist(entity: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, DashboardEntity, DefaultGridReference, GridElement, GridElementWithPosition } from '@shared/domain';\nimport { EntityManager, ObjectId } from '@mikro-orm/mongodb';\nimport { DashboardModelEntity } from './dashboard.model.entity';\nimport { DashboardModelMapper } from './dashboard.model.mapper';\n\nconst hardcodedTestDashboardId = '0000d213816abba584714c0a';\nconst generateHardcodedTestDashboard = () => {\n\tconst gridArray: GridElementWithPosition[] = [];\n\n\tgridArray.push({\n\t\tpos: { x: 1, y: 3 },\n\t\tgridElement: GridElement.FromPersistedReference(\n\t\t\tnew ObjectId().toString(),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'Math')\n\t\t),\n\t});\n\tgridArray.push({\n\t\tpos: { x: 1, y: 4 },\n\t\tgridElement: GridElement.FromPersistedGroup(new ObjectId().toString(), 'Science', [\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'Physics'),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'Biology'),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'Chemistry'),\n\t\t]),\n\t});\n\tgridArray.push({\n\t\tpos: { x: 2, y: 1 },\n\t\tgridElement: GridElement.FromPersistedReference(\n\t\t\tnew ObjectId().toString(),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'English')\n\t\t),\n\t});\n\tgridArray.push({\n\t\tpos: { x: 3, y: 1 },\n\t\tgridElement: GridElement.FromPersistedReference(\n\t\t\tnew ObjectId().toString(),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'German')\n\t\t),\n\t});\n\tgridArray.push({\n\t\tpos: { x: 4, y: 1 },\n\t\tgridElement: GridElement.FromPersistedReference(\n\t\t\tnew ObjectId().toString(),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'Greek')\n\t\t),\n\t});\n\n\tconst dashboard = new DashboardEntity(hardcodedTestDashboardId, { grid: gridArray });\n\treturn dashboard;\n};\n\nexport interface IDashboardRepo {\n\tgetUsersDashboard(): Promise;\n\tgetDashboardById(id: EntityId): Promise;\n\tpersistAndFlush(entity: DashboardEntity): Promise;\n}\n\n@Injectable()\nexport class DashboardRepo implements IDashboardRepo {\n\tconstructor(protected readonly em: EntityManager, protected readonly mapper: DashboardModelMapper) {}\n\n\t// ToDo: refactor this to be in an abstract class (see baseRepo)\n\tasync persist(entity: DashboardEntity): Promise {\n\t\tconst modelEntity = await this.mapper.mapDashboardToModel(entity);\n\t\tthis.em.persist(modelEntity);\n\t\treturn this.mapper.mapDashboardToEntity(modelEntity);\n\t}\n\n\tasync persistAndFlush(entity: DashboardEntity): Promise {\n\t\tconst modelEntity = await this.mapper.mapDashboardToModel(entity);\n\t\tawait this.em.persistAndFlush(modelEntity);\n\t\treturn this.mapper.mapDashboardToEntity(modelEntity);\n\t}\n\n\tasync getDashboardById(id: EntityId): Promise {\n\t\tconst dashboardModel = await this.em.findOneOrFail(DashboardModelEntity, id);\n\t\tconst dashboard = await this.mapper.mapDashboardToEntity(dashboardModel);\n\t\treturn dashboard;\n\t}\n\n\tasync getUsersDashboard(): Promise {\n\t\tconst dashboardModel = await this.em.findOne(DashboardModelEntity, hardcodedTestDashboardId);\n\t\tif (dashboardModel) {\n\t\t\treturn this.mapper.mapDashboardToEntity(dashboardModel);\n\t\t}\n\n\t\tconst dashboard = generateHardcodedTestDashboard();\n\t\tawait this.persistAndFlush(dashboard);\n\n\t\treturn dashboard;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardResponse.html":{"url":"classes/DashboardResponse.html","title":"class - DashboardResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                gridElements\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        gridElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DashboardGridElementResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, description: 'List of all elements visible on the dashboard'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the Dashboard entity', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:70\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class DashboardGridSubElementResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n}\n\nexport class DashboardGridElementResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\tdescription: 'X position of the Grid element',\n\t})\n\txPosition: number;\n\n\t@ApiProperty({\n\t\tdescription: 'Y position of the Grid element',\n\t})\n\tyPosition: number;\n\n\t@ApiProperty({\n\t\ttype: [DashboardGridSubElementResponse],\n\t\tdescription: 'List of all subelements in the group',\n\t})\n\tgroupElements: DashboardGridSubElementResponse[];\n}\n\nexport class DashboardResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Dashboard entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\ttype: [DashboardGridElementResponse],\n\t\tdescription: 'List of all elements visible on the dashboard',\n\t})\n\tgridElements: DashboardGridElementResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DashboardUc.html":{"url":"injectables/DashboardUc.html","title":"injectable - DashboardUc","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DashboardUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/uc/dashboard.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUsersDashboard\n                            \n                            \n                                    Async\n                                moveElementOnDashboard\n                            \n                            \n                                    Async\n                                renameGroupOnDashboard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dashboardRepo: IDashboardRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/uc/dashboard.uc.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dashboardRepo\n                                                  \n                                                        \n                                                                        IDashboardRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUsersDashboard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsersDashboard()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/dashboard.uc.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        moveElementOnDashboard\n                        \n                    \n                \n            \n            \n                \n                    \n                    moveElementOnDashboard(dashboardId: EntityId, from: GridPositionWithGroupIndex, to: GridPositionWithGroupIndex)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/dashboard.uc.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dashboardId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    from\n                                    \n                                                GridPositionWithGroupIndex\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                                GridPositionWithGroupIndex\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        renameGroupOnDashboard\n                        \n                    \n                \n            \n            \n                \n                    \n                    renameGroupOnDashboard(dashboardId: EntityId, position: GridPosition, params: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/dashboard.uc.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dashboardId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                                GridPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { DashboardEntity, EntityId, GridPositionWithGroupIndex, GridPosition } from '@shared/domain';\nimport { IDashboardRepo } from '@src/repositories/learnroom/dashboard.repo';\n\n@Injectable()\nexport class DashboardUc {\n\tconstructor(@Inject('DASHBOARD_REPO') private readonly dashboardRepo: IDashboardRepo) {}\n\n\tasync getUsersDashboard(): Promise {\n\t\tconst dashboard = await this.dashboardRepo.getUsersDashboard();\n\t\treturn dashboard;\n\t}\n\n\tasync moveElementOnDashboard(\n\t\tdashboardId: EntityId,\n\t\tfrom: GridPositionWithGroupIndex,\n\t\tto: GridPositionWithGroupIndex\n\t\t/* currentUser: ICurrentUser */\n\t): Promise {\n\t\tconst dashboard = await this.dashboardRepo.getDashboardById(dashboardId);\n\t\tdashboard.moveElement(from, to);\n\t\tawait this.dashboardRepo.persistAndFlush(dashboard);\n\t\treturn dashboard;\n\t}\n\n\tasync renameGroupOnDashboard(\n\t\tdashboardId: EntityId,\n\t\tposition: GridPosition,\n\t\tparams: string\n\t): Promise {\n\t\tconst dashboard = await this.dashboardRepo.getDashboardById(dashboardId);\n\t\tconst gridElement = dashboard.getElement(position);\n\t\tgridElement.setGroupName(params);\n\t\tawait this.dashboardRepo.persistAndFlush(dashboard);\n\t\treturn dashboard;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatabaseManagementConsole.html":{"url":"classes/DatabaseManagementConsole.html","title":"class - DatabaseManagementConsole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatabaseManagementConsole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/console/database-management.console.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                exportCollections\n                            \n                            \n                                    Async\n                                seedCollections\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(consoleWriter: ConsoleWriterService, databaseManagementUc: DatabaseManagementUc)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/management/console/database-management.console.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        consoleWriter\n                                                  \n                                                        \n                                                                        ConsoleWriterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        databaseManagementUc\n                                                  \n                                                        \n                                                                        DatabaseManagementUc\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        exportCollections\n                        \n                    \n                \n            \n            \n                \n                    \n                    exportCollections(options: Options)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'export', options: undefined, description: 'export database collections to filesystem'})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/console/database-management.console.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                Options\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        seedCollections\n                        \n                    \n                \n            \n            \n                \n                    \n                    seedCollections(options: Options)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'seed', options: undefined, description: 'reset database collections with seed data from filesystem'})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/console/database-management.console.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                Options\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Command, Console } from 'nestjs-console';\nimport { ConsoleWriterService } from '@shared/infra/console/console-writer/console-writer.service';\nimport { DatabaseManagementUc } from '../uc/database-management.uc';\n\ninterface Options {\n\tcollection?: string;\n\toverride?: boolean;\n}\n\n@Console({ command: 'database', description: 'database setup console' })\nexport class DatabaseManagementConsole {\n\tconstructor(private consoleWriter: ConsoleWriterService, private databaseManagementUc: DatabaseManagementUc) {}\n\n\t@Command({\n\t\tcommand: 'seed',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tflags: '-c, --collection ',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'filter for a single ',\n\t\t\t},\n\t\t],\n\t\tdescription: 'reset database collections with seed data from filesystem',\n\t})\n\tasync seedCollections(options: Options): Promise {\n\t\tconst filter = options?.collection ? [options.collection] : undefined;\n\t\tconst collections = await this.databaseManagementUc.seedDatabaseCollectionsFromFileSystem(filter);\n\t\tconst report = JSON.stringify(collections);\n\t\tthis.consoleWriter.info(report);\n\t\treturn collections;\n\t}\n\n\t@Command({\n\t\tcommand: 'export',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tflags: '-c, --collection ',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'filter for a single ',\n\t\t\t},\n\t\t\t{\n\t\t\t\tflags: '-o, --override',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'optional export collections to setup folder and override existing files',\n\t\t\t},\n\t\t],\n\t\tdescription: 'export database collections to filesystem',\n\t})\n\tasync exportCollections(options: Options): Promise {\n\t\tconst filter = options?.collection ? [options.collection] : undefined;\n\t\tconst toSeedFolder = options?.override ? true : undefined;\n\t\tconst collections = await this.databaseManagementUc.exportCollectionsToFileSystem(filter, toSeedFolder);\n\t\tconst report = JSON.stringify(collections);\n\t\tthis.consoleWriter.info(report);\n\t\treturn collections;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DatabaseManagementController.html":{"url":"controllers/DatabaseManagementController.html","title":"controller - DatabaseManagementController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DatabaseManagementController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/controller/database-management.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                management/database\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                exportCollection\n                            \n                            \n                                    Async\n                                exportCollections\n                            \n                            \n                                    Async\n                                importCollection\n                            \n                            \n                                    Async\n                                importCollections\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        exportCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    exportCollection(collectionName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('export/:collectionName')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/controller/database-management.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        exportCollections\n                        \n                    \n                \n            \n            \n                \n                    \n                    exportCollections()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('export')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/controller/database-management.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        importCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    importCollection(collectionName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('seed/:collectionName')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/controller/database-management.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        importCollections\n                        \n                    \n                \n            \n            \n                \n                    \n                    importCollections()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('seed')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/controller/database-management.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Param, Post } from '@nestjs/common';\nimport { DatabaseManagementUc } from '../uc/database-management.uc';\n\n@Controller('management/database')\nexport class DatabaseManagementController {\n\tconstructor(private databaseManagementUc: DatabaseManagementUc) {}\n\n\t@Post('seed')\n\tasync importCollections(): Promise {\n\t\tconst result = await this.databaseManagementUc.seedDatabaseCollectionsFromFileSystem();\n\t\treturn result;\n\t}\n\n\t@Post('seed/:collectionName')\n\tasync importCollection(@Param('collectionName') collectionName: string): Promise {\n\t\tconst result = await this.databaseManagementUc.seedDatabaseCollectionsFromFileSystem([collectionName]);\n\t\treturn result;\n\t}\n\n\t@Post('export')\n\tasync exportCollections(): Promise {\n\t\tconst result = await this.databaseManagementUc.exportCollectionsToFileSystem();\n\t\treturn result;\n\t}\n\n\t@Post('export/:collectionName')\n\tasync exportCollection(@Param('collectionName') collectionName: string): Promise {\n\t\tconst result = await this.databaseManagementUc.exportCollectionsToFileSystem([collectionName]);\n\t\treturn result;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseManagementModule.html":{"url":"modules/DatabaseManagementModule.html","title":"module - DatabaseManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DatabaseManagementModule\n\n\n\ncluster_DatabaseManagementModule_imports\n\n\n\ncluster_DatabaseManagementModule_exports\n\n\n\n\nDatabaseManagementService\n\nDatabaseManagementService\n\n\n\nDatabaseManagementModule\n\nDatabaseManagementModule\n\nDatabaseManagementModule -->\n\nDatabaseManagementService->DatabaseManagementModule\n\n\n\n\n\nDatabaseManagementService \n\nDatabaseManagementService \n\nDatabaseManagementService  -->\n\nDatabaseManagementModule->DatabaseManagementService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/shared/infra/database/management/database-management.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            DatabaseManagementService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DatabaseManagementService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DatabaseManagementService } from './database-management.service';\n\n@Module({\n\timports: [DatabaseManagementService],\n\texports: [DatabaseManagementService],\n})\nexport class DatabaseManagementModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseManagementService.html":{"url":"injectables/DatabaseManagementService.html","title":"injectable - DatabaseManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/database/management/database-management.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearCollection\n                            \n                            \n                                    Async\n                                collectionExists\n                            \n                            \n                                    Async\n                                createCollection\n                            \n                            \n                                    Async\n                                dropCollection\n                            \n                            \n                                    Async\n                                findDocumentsOfCollection\n                            \n                            \n                                    Async\n                                getCollectionNames\n                            \n                            \n                                    Private\n                                getDatabaseCollection\n                            \n                            \n                                    Async\n                                importCollection\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    db\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        clearCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearCollection(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        collectionExists\n                        \n                    \n                \n            \n            \n                \n                    \n                    collectionExists(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    createCollection(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        dropCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    dropCollection(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findDocumentsOfCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    findDocumentsOfCollection(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCollectionNames\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCollectionNames()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getDatabaseCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDatabaseCollection(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Collection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        importCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    importCollection(collectionName: string, jsonDocuments: [])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    jsonDocuments\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        db\n                    \n                \n\n                \n                    \n                        getdb()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { Collection, Db } from 'mongodb';\n\n@Injectable()\nexport class DatabaseManagementService {\n\tconstructor(private em: EntityManager) {}\n\n\tprivate get db(): Db {\n\t\treturn this.em.getConnection('write').getDb();\n\t}\n\n\tprivate getDatabaseCollection(collectionName: string): Collection {\n\t\tconst collection = this.db.collection(collectionName);\n\t\treturn collection;\n\t}\n\n\tasync importCollection(collectionName: string, jsonDocuments: unknown[]): Promise {\n\t\tconst collection = this.getDatabaseCollection(collectionName);\n\t\tif (jsonDocuments.length === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tconst { insertedCount } = await collection.insertMany(jsonDocuments, {\n\t\t\tforceServerObjectId: true,\n\t\t\tbypassDocumentValidation: true,\n\t\t});\n\t\treturn insertedCount;\n\t}\n\n\tasync findDocumentsOfCollection(collectionName: string): Promise {\n\t\tconst collection = this.getDatabaseCollection(collectionName);\n\t\tconst documents = (await collection.find({}).toArray()) as unknown[];\n\t\treturn documents;\n\t}\n\n\tasync clearCollection(collectionName: string): Promise {\n\t\tconst collection = this.getDatabaseCollection(collectionName);\n\t\tconst { deletedCount } = await collection.deleteMany({});\n\t\treturn deletedCount || 0;\n\t}\n\n\tasync getCollectionNames(): Promise {\n\t\tconst collections = (await this.db.listCollections(undefined, { nameOnly: true }).toArray()) as unknown[] as {\n\t\t\tname: string;\n\t\t}[];\n\t\tconst collectionNames = collections.map((collection) => collection.name);\n\t\treturn collectionNames;\n\t}\n\n\tasync collectionExists(collectionName: string): Promise {\n\t\tconst collections = await this.getCollectionNames();\n\t\tconst result = collections.includes(collectionName);\n\t\treturn result;\n\t}\n\n\tasync createCollection(collectionName: string): Promise {\n\t\tawait this.db.createCollection(collectionName);\n\t}\n\n\tasync dropCollection(collectionName: string): Promise {\n\t\tawait this.db.dropCollection(collectionName);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseManagementUc.html":{"url":"injectables/DatabaseManagementUc.html","title":"injectable - DatabaseManagementUc","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseManagementUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/uc/database-management.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                basePath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                exportCollectionsToFileSystem\n                            \n                            \n                                    Private\n                                getSeedFolder\n                            \n                            \n                                    Private\n                                getTargetFolder\n                            \n                            \n                                    Private\n                                    Async\n                                loadAllCollectionsFromDatabase\n                            \n                            \n                                    Private\n                                    Async\n                                loadAllCollectionsFromFilesystem\n                            \n                            \n                                    Private\n                                    Async\n                                loadCollectionsAvailableFromSourceAndFilterByCollectionNames\n                            \n                            \n                                    Async\n                                seedDatabaseCollectionsFromFileSystem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    baseDir\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fileSystemAdapter: FileSystemAdapter, databaseManagementService: DatabaseManagementService, bsonConverter: BsonConverter)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/management/uc/database-management.uc.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileSystemAdapter\n                                                  \n                                                        \n                                                                        FileSystemAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        databaseManagementService\n                                                  \n                                                        \n                                                                        DatabaseManagementService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bsonConverter\n                                                  \n                                                        \n                                                                        BsonConverter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        exportCollectionsToFileSystem\n                        \n                    \n                \n            \n            \n                \n                    \n                    exportCollectionsToFileSystem(collections?: string[], toSeedFolder?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:183\n                \n            \n\n\n            \n                \n                    Exports all or defined  from database as bson to filesystem.\nThe behaviour should match $ mongoexport\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    collections\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        optional filter applied on existing collections\n\n                                    \n                                \n                                \n                                    toSeedFolder\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        optional override existing seed data files\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        the list of collection names exported\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getSeedFolder\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSeedFolder()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:38\n                \n            \n\n\n            \n                \n                    setup dir with json files\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getTargetFolder\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTargetFolder(toSeedFolder?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:46\n                \n            \n\n\n            \n                \n                    export folder name based on current date\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    toSeedFolder\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        loadAllCollectionsFromDatabase\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadAllCollectionsFromDatabase(targetFolder: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:63\n                \n            \n\n\n            \n                \n                    Loads all collection names from database and adds related file paths.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetFolder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        loadAllCollectionsFromFilesystem\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadAllCollectionsFromFilesystem(baseDir: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:76\n                \n            \n\n\n            \n                \n                    Loads all collection names and file paths from backup files.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    baseDir\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        loadCollectionsAvailableFromSourceAndFilterByCollectionNames\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadCollectionsAvailableFromSourceAndFilterByCollectionNames(source: \"files\" | \"database\", folder: string, collectionNameFilter?: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:91\n                \n            \n\n\n            \n                \n                    Scans  for existing collections and optionally filters them based on \n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                            \"files\" | \"database\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    folder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    collectionNameFilter\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        the filtered collection names and related file paths\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        seedDatabaseCollectionsFromFileSystem\n                        \n                    \n                \n            \n            \n                \n                    \n                    seedDatabaseCollectionsFromFileSystem(collections?: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:134\n                \n            \n\n\n            \n                \n                    Imports all or filtered  from filesystem as bson to database.\nThe behaviour should match $ mongoimport\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    collections\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        optional filter applied on existing collections\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        the list of collection names exported\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        basePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '../../../../../../backup'\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/management/uc/database-management.uc.ts:19\n                        \n                    \n\n            \n                \n                    relative path to seed data folder based of location of this file.\n\n                \n            \n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        baseDir\n                    \n                \n\n                \n                    \n                        getbaseDir()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:30\n                                \n                            \n                    \n                        \n                                absolute path reference for seed data base folder.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { orderBy } from 'lodash';\nimport { FileSystemAdapter } from '@shared/infra/file-system';\nimport { DatabaseManagementService } from '@shared/infra/database';\nimport { BsonConverter } from '../converter/bson.converter';\n\nexport interface ICollectionFilePath {\n\tfilePath: string;\n\tcollectionName: string;\n}\n\n@Injectable()\nexport class DatabaseManagementUc {\n\t/**\n\t * relative path to seed data folder based of location of this file.\n\t */\n\tprivate basePath = '../../../../../../backup';\n\n\tconstructor(\n\t\tprivate fileSystemAdapter: FileSystemAdapter,\n\t\tprivate databaseManagementService: DatabaseManagementService,\n\t\tprivate bsonConverter: BsonConverter\n\t) {}\n\n\t/**\n\t * absolute path reference for seed data base folder.\n\t */\n\tprivate get baseDir(): string {\n\t\tconst folderPath = this.fileSystemAdapter.joinPath(__dirname, this.basePath);\n\t\treturn folderPath;\n\t}\n\n\t/**\n\t * setup dir with json files\n\t */\n\tprivate getSeedFolder() {\n\t\treturn this.fileSystemAdapter.joinPath(this.baseDir, 'setup');\n\t}\n\n\t/**\n\t * export folder name based on current date\n\t * @returns\n\t */\n\tprivate getTargetFolder(toSeedFolder?: boolean) {\n\t\tif (toSeedFolder === true) {\n\t\t\tconst targetFolder = this.getSeedFolder();\n\t\t\treturn targetFolder;\n\t\t}\n\t\tconst now = new Date();\n\t\tconst currentDateTime = `${now.getFullYear()}_${\n\t\t\tnow.getMonth() + 1\n\t\t}_${now.getDate()}_${now.getHours()}_${now.getMinutes()}_${now.getSeconds()}`;\n\t\tconst targetFolder = this.fileSystemAdapter.joinPath(this.baseDir, currentDateTime);\n\t\treturn targetFolder;\n\t}\n\n\t/**\n\t * Loads all collection names from database and adds related file paths.\n\t * @returns {ICollectionFilePath}\n\t */\n\tprivate async loadAllCollectionsFromDatabase(targetFolder: string): Promise {\n\t\tconst collections = await this.databaseManagementService.getCollectionNames();\n\t\tconst collectionsWithFilePaths = collections.map((collectionName) => ({\n\t\t\tfilePath: this.fileSystemAdapter.joinPath(targetFolder, `${collectionName}.json`),\n\t\t\tcollectionName,\n\t\t}));\n\t\treturn collectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Loads all collection names and file paths from backup files.\n\t * @returns {ICollectionFilePath}\n\t */\n\tprivate async loadAllCollectionsFromFilesystem(baseDir: string): Promise {\n\t\tconst filenames = await this.fileSystemAdapter.readDir(baseDir);\n\t\tconst collectionsWithFilePaths = filenames.map((fileName) => ({\n\t\t\tfilePath: this.fileSystemAdapter.joinPath(baseDir, fileName),\n\t\t\tcollectionName: fileName.split('.')[0],\n\t\t}));\n\t\treturn collectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Scans  for existing collections and optionally filters them based on \n\t * @param source\n\t * @param collectionNameFilter\n\t * @returns {ICollectionFilePath} the filtered collection names and related file paths\n\t */\n\tprivate async loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\tsource: 'files' | 'database',\n\t\tfolder: string,\n\t\tcollectionNameFilter?: string[]\n\t) {\n\t\tlet allCollectionsWithFilePaths: ICollectionFilePath[] = [];\n\n\t\t// load all available collections from source\n\t\tif (source === 'files') {\n\t\t\tallCollectionsWithFilePaths = await this.loadAllCollectionsFromFilesystem(folder);\n\t\t} else {\n\t\t\t// source === 'database'\n\t\t\tallCollectionsWithFilePaths = await this.loadAllCollectionsFromDatabase(folder);\n\t\t}\n\n\t\t// when a collection name filter is given, apply it and check\n\t\tif (Array.isArray(collectionNameFilter) && collectionNameFilter.length > 0) {\n\t\t\tconst filteredCollectionsWithFilePaths = allCollectionsWithFilePaths.filter(({ collectionName }) =>\n\t\t\t\tcollectionNameFilter?.includes(collectionName)\n\t\t\t);\n\n\t\t\tif (filteredCollectionsWithFilePaths.length !== collectionNameFilter.length) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`At least one collectionName of ${JSON.stringify(\n\t\t\t\t\t\tcollectionNameFilter\n\t\t\t\t\t)} is invalid. Collection names available in '${source}' are: ${JSON.stringify(\n\t\t\t\t\t\tallCollectionsWithFilePaths.map((file) => file.collectionName)\n\t\t\t\t\t)}`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn filteredCollectionsWithFilePaths;\n\t\t}\n\n\t\treturn allCollectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Imports all or filtered  from filesystem as bson to database.\n\t * The behaviour should match $ mongoimport\n\t * @param collections optional filter applied on existing collections\n\t * @returns the list of collection names exported\n\t */\n\tasync seedDatabaseCollectionsFromFileSystem(collections?: string[]): Promise {\n\t\t// detect collections to seed based on filesystem data\n\t\tconst setupPath = this.getSeedFolder();\n\t\tconst collectionsToSeed = await this.loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\t\t'files',\n\t\t\tsetupPath,\n\t\t\tcollections\n\t\t);\n\n\t\tconst seededCollectionsWithAmount: string[] = [];\n\n\t\tawait Promise.all(\n\t\t\tcollectionsToSeed.map(async ({ filePath, collectionName }) => {\n\t\t\t\t// load text from backup file\n\t\t\t\tconst text = await this.fileSystemAdapter.readFile(filePath);\n\t\t\t\t// create bson-objects from text\n\t\t\t\tconst bsonDocuments = JSON.parse(text) as unknown[];\n\t\t\t\t// deserialize bson (format of mongoexport) to json documents we can import to mongo\n\t\t\t\tconst jsonDocuments = this.bsonConverter.deserialize(bsonDocuments);\n\n\t\t\t\t// hint: collection drop/create is very slow, delete all documents instead\n\t\t\t\tconst collectionExists = await this.databaseManagementService.collectionExists(collectionName);\n\t\t\t\tif (collectionExists) {\n\t\t\t\t\t// clear existing documents, if collection exists\n\t\t\t\t\tawait this.databaseManagementService.clearCollection(collectionName);\n\t\t\t\t} else {\n\t\t\t\t\t// create collection\n\t\t\t\t\tawait this.databaseManagementService.createCollection(collectionName);\n\t\t\t\t}\n\n\t\t\t\t// import backuop data into database collection\n\t\t\t\tconst importedDocumentsAmount = await this.databaseManagementService.importCollection(\n\t\t\t\t\tcollectionName,\n\t\t\t\t\tjsonDocuments\n\t\t\t\t);\n\t\t\t\t// keep collection name and number of imported documents\n\t\t\t\tseededCollectionsWithAmount.push(`${collectionName}:${importedDocumentsAmount}`);\n\t\t\t})\n\t\t);\n\t\treturn seededCollectionsWithAmount;\n\t}\n\n\t/**\n\t * Exports all or defined  from database as bson to filesystem.\n\t * The behaviour should match $ mongoexport\n\t * @param collections optional filter applied on existing collections\n\t * @param toSeedFolder optional override existing seed data files\n\t * @returns the list of collection names exported\n\t */\n\tasync exportCollectionsToFileSystem(collections?: string[], toSeedFolder?: boolean): Promise {\n\t\tconst targetFolder = this.getTargetFolder(toSeedFolder);\n\t\tawait this.fileSystemAdapter.createDir(targetFolder);\n\t\t// detect collections to export based on database collections\n\t\tconst collectionsToExport = await this.loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\t\t'database',\n\t\t\ttargetFolder,\n\t\t\tcollections\n\t\t);\n\t\tconst exportedCollections: string[] = [];\n\n\t\tawait Promise.all(\n\t\t\tcollectionsToExport.map(async ({ filePath, collectionName }) => {\n\t\t\t\t// load json documents from collection\n\t\t\t\tconst jsonDocuments = await this.databaseManagementService.findDocumentsOfCollection(collectionName);\n\t\t\t\t// serialize to bson (format of mongoexport)\n\t\t\t\tconst bsonDocuments = this.bsonConverter.serialize(jsonDocuments);\n\t\t\t\t// sort results to have 'new' data added at documents end\n\t\t\t\tconst sortedBsonDocuments = orderBy(bsonDocuments, ['_id.$oid', 'createdAt.$date'], ['asc', 'asc']);\n\t\t\t\t// convert to text\n\t\t\t\tconst TAB = '\t';\n\t\t\t\tconst text = JSON.stringify(sortedBsonDocuments, undefined, TAB);\n\t\t\t\t// persist to filesystem\n\t\t\t\tawait this.fileSystemAdapter.writeFile(filePath, text + this.fileSystemAdapter.EOL);\n\t\t\t\t// keep collection name and number of exported documents\n\t\t\t\texportedCollections.push(`${collectionName}:${sortedBsonDocuments.length}`);\n\t\t\t})\n\t\t);\n\t\treturn exportedCollections;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DefaultGridReference.html":{"url":"classes/DefaultGridReference.html","title":"class - DefaultGridReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DefaultGridReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IGridElementReference\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayColor\n                            \n                            \n                                id\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMetadata\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: EntityId, title: string, displayColor: string)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        EntityId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        displayColor\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:22\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMetadata\n                        \n                    \n                \n            \n            \n                \ngetMetadata()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         GridElementReferenceMetadata\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException, BadRequestException } from '@nestjs/common';\nimport { EntityId } from '../types/entity-id';\n\nconst defaultColumns = 6;\nconst defaultRows = 6;\n\nexport type GridElementReferenceMetadata = {\n\tid: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n};\n\nexport interface IGridElementReference {\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class DefaultGridReference implements IGridElementReference {\n\t// This is only a temporary fake class, for use until other references, like courses, are fully supported.\n\tid: EntityId;\n\n\ttitle: string;\n\n\tdisplayColor: string;\n\n\tconstructor(id: EntityId, title: string, displayColor = '#f23f76') {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.displayColor = displayColor;\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn {\n\t\t\tid: this.id,\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: this.title.substr(0, 2),\n\t\t\tdisplayColor: this.displayColor,\n\t\t};\n\t}\n}\n\nexport interface IGridElement {\n\thasId(): boolean;\n\n\tgetId: () => EntityId;\n\n\tgetContent: () => GridElementContent;\n\n\tisGroup(): boolean;\n\n\tremoveReference(index: number): void;\n\n\tgetReferences(): IGridElementReference[];\n\n\taddReferences(anotherReference: IGridElementReference[]): void;\n\n\tsetGroupName(newGroupName: string): void;\n}\n\nexport type GridElementContent = {\n\treferencedId?: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n\tgroup?: GridElementReferenceMetadata[];\n};\n\nexport class GridElement implements IGridElement {\n\tid: EntityId;\n\n\ttitle: string;\n\n\tprivate constructor(props: { id?: EntityId; title?: string; references: IGridElementReference[] }) {\n\t\tif (props.id) this.id = props.id;\n\t\tif (props.title) this.title = props.title;\n\t\tthis.references = props.references;\n\t}\n\n\tstatic FromPersistedReference(id: EntityId, reference: IGridElementReference): GridElement {\n\t\treturn new GridElement({ id, references: [reference] });\n\t}\n\n\tstatic FromPersistedGroup(id: EntityId, title: string, group: IGridElementReference[]): GridElement {\n\t\treturn new GridElement({ id, title, references: group });\n\t}\n\n\tstatic FromSingleReference(reference: IGridElementReference): GridElement {\n\t\treturn new GridElement({ references: [reference] });\n\t}\n\n\tstatic FromGroup(title: string, references: IGridElementReference[]): GridElement {\n\t\treturn new GridElement({ title, references });\n\t}\n\n\treferences: IGridElementReference[];\n\n\thasId(): boolean {\n\t\treturn !!this.id;\n\t}\n\n\tgetId(): EntityId {\n\t\treturn this.id;\n\t}\n\n\tgetReferences(): IGridElementReference[] {\n\t\treturn this.references;\n\t}\n\n\tremoveReference(index: number): void {\n\t\tif (!this.isGroup()) {\n\t\t\tthrow new BadRequestException('this element is not a group.');\n\t\t}\n\t\tif (index > 0 && this.references.length  reference.getMetadata());\n\t\tconst checkShortTitle = this.title ? this.title.substr(0, 2) : 'exampleTitle';\n\t\tconst groupMetadata = {\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: checkShortTitle,\n\t\t\tdisplayColor: 'exampleColor',\n\t\t\tgroup: groupData,\n\t\t};\n\t\treturn groupMetadata;\n\t}\n\n\tisGroup(): boolean {\n\t\treturn this.references.length > 1;\n\t}\n\n\tsetGroupName(newGroupName: string): void {\n\t\tif (!this.isGroup()) {\n\t\t\treturn;\n\t\t}\n\t\tthis.title = newGroupName;\n\t}\n}\n\nexport type GridPosition = { x: number; y: number };\nexport type GridPositionWithGroupIndex = { x: number; y: number; groupIndex?: number };\n\nexport type GridElementWithPosition = {\n\tgridElement: IGridElement;\n\tpos: GridPosition;\n};\n\nexport type DashboardProps = { colums?: number; rows?: number; grid: GridElementWithPosition[] };\n\nexport class DashboardEntity {\n\tid: EntityId;\n\n\tcolumns: number;\n\n\trows: number;\n\n\tgrid: Map;\n\n\tprivate gridIndexFromPosition(pos: GridPosition): number {\n\t\tif (pos.x > this.columns || pos.y > this.rows) {\n\t\t\tthrow new BadRequestException('dashboard element position is outside the grid.');\n\t\t}\n\t\treturn this.columns * pos.y + pos.x;\n\t}\n\n\tprivate positionFromGridIndex(index: number): GridPosition {\n\t\tconst y = Math.floor(index / this.columns);\n\t\tconst x = index % this.columns;\n\t\treturn { x, y };\n\t}\n\n\tconstructor(id: string, props: DashboardProps) {\n\t\tthis.columns = props.colums || defaultColumns;\n\t\tthis.rows = props.rows || defaultRows;\n\t\tthis.grid = new Map();\n\t\tprops.grid.forEach((element) => {\n\t\t\tthis.grid.set(this.gridIndexFromPosition(element.pos), element.gridElement);\n\t\t});\n\t\tthis.id = id;\n\t\tObject.assign(this, {});\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetGrid(): GridElementWithPosition[] {\n\t\tconst result = [...this.grid.keys()].map((key) => {\n\t\t\tconst position = this.positionFromGridIndex(key);\n\t\t\tconst value = this.grid.get(key) as IGridElement;\n\t\t\treturn {\n\t\t\t\tpos: position,\n\t\t\t\tgridElement: value,\n\t\t\t};\n\t\t});\n\t\treturn result;\n\t}\n\n\tgetElement(position: GridPosition): IGridElement {\n\t\tconst element = this.grid.get(this.gridIndexFromPosition(position));\n\t\tif (!element) {\n\t\t\tthrow new NotFoundException('no element at grid position');\n\t\t}\n\t\treturn element;\n\t}\n\n\tmoveElement(from: GridPositionWithGroupIndex, to: GridPositionWithGroupIndex): GridElementWithPosition {\n\t\tconst elementToMove = this.getReferencesFromPosition(from);\n\t\tconst resultElement = this.mergeElementIntoPosition(elementToMove, to);\n\t\tthis.removeFromPosition(from);\n\t\treturn {\n\t\t\tpos: to,\n\t\t\tgridElement: resultElement,\n\t\t};\n\t}\n\n\tprivate getReferencesFromPosition(position: GridPositionWithGroupIndex): IGridElement {\n\t\tconst elementToMove = this.getElement(position);\n\n\t\tif (typeof position.groupIndex === 'number' && elementToMove.isGroup()) {\n\t\t\tconst references = elementToMove.getReferences();\n\t\t\tconst referenceForIndex = references[position.groupIndex];\n\t\t\treturn GridElement.FromSingleReference(referenceForIndex);\n\t\t}\n\n\t\treturn elementToMove;\n\t}\n\n\tprivate removeFromPosition(position: GridPositionWithGroupIndex): void {\n\t\tconst element = this.getElement(position);\n\t\tif (typeof position.groupIndex === 'number') {\n\t\t\telement.removeReference(position.groupIndex);\n\t\t} else {\n\t\t\tthis.grid.delete(this.gridIndexFromPosition(position));\n\t\t}\n\t}\n\n\tprivate mergeElementIntoPosition(element: IGridElement, position: GridPosition): IGridElement {\n\t\tconst targetElement = this.grid.get(this.gridIndexFromPosition(position));\n\t\tif (targetElement) {\n\t\t\ttargetElement.addReferences(element.getReferences());\n\t\t\treturn targetElement;\n\t\t}\n\t\tthis.grid.set(this.gridIndexFromPosition(position), element);\n\t\treturn element;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DefaultGridReferenceModel.html":{"url":"classes/DefaultGridReferenceModel.html","title":"class - DefaultGridReferenceModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DefaultGridReferenceModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/dashboard.model.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                gridelement\n                            \n                            \n                                title\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gridelement\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IdentifiedReference\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('DashboardGridElementModel', {wrappedReference: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, ManyToOne, OneToMany, Collection, IdentifiedReference } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from '@shared/domain/entity/base.entity';\n\n@Entity({ tableName: 'dashboarddefaultreference' })\nexport class DefaultGridReferenceModel extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@Property()\n\ttitle: string;\n\n\t@Property()\n\tcolor: string;\n\n\t// not really happy with this, but didnt find a better solution yet to connect the gridelement with multiple references.\n\t@ManyToOne('DashboardGridElementModel', { wrappedReference: true })\n\tgridelement: IdentifiedReference;\n}\n\n@Entity({ tableName: 'dashboardelement' })\nexport class DashboardGridElementModel extends BaseEntityWithTimestamps {\n\tconstructor(id?: string) {\n\t\tsuper();\n\t\tif (id) {\n\t\t\tthis._id = ObjectId.createFromHexString(id);\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\t@Property()\n\ttitle: string;\n\n\t@Property()\n\txPos: number;\n\n\t@Property()\n\tyPos: number;\n\n\t// todo: put in references to useful things like courses via polymorphic inheritance (see news)\n\t@OneToMany('DefaultGridReferenceModel', 'gridelement')\n\treferences: Collection = new Collection(this);\n\n\t@ManyToOne('DashboardModelEntity', { wrappedReference: true })\n\tdashboard: IdentifiedReference;\n}\n\n@Entity({ tableName: 'dashboard' })\nexport class DashboardModelEntity extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@OneToMany('DashboardGridElementModel', 'dashboard')\n\tgridElements: Collection = new Collection(this);\n\n\t// userId\n\n\t// sizetype\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DelayController.html":{"url":"controllers/DelayController.html","title":"controller - DelayController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DelayController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/test/create-test.module.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/test/create-test.module.ts:12\n                \n            \n\n\n            \n                \n                    default route to test public access\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, NestInterceptor } from '@nestjs/common';\n\nimport { Test, TestingModule } from '@nestjs/testing';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\n\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\n@Controller()\nclass DelayController {\n\t/** default route to test public access */\n\t@Get()\n\tasync getHello(): Promise {\n\t\tawait delay(100);\n\t\treturn 'Schulcloud Server API';\n\t}\n}\n\nexport const createTestModule = (interceptor: NestInterceptor): Promise => {\n\treturn Test.createTestingModule({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\t\tuseValue: interceptor,\n\t\t\t},\n\t\t],\n\t\tcontrollers: [DelayController],\n\t}).compile();\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteFilesConsole.html":{"url":"classes/DeleteFilesConsole.html","title":"class - DeleteFilesConsole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteFilesConsole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/files/job/delete-files.console.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                removeDeletedFilesData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(deleteFilesUc: DeleteFilesUc)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/files/job/delete-files.console.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deleteFilesUc\n                                                  \n                                                        \n                                                                        DeleteFilesUc\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/files/job/delete-files.console.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeDeletedFilesData\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeDeletedFilesData(removedSinceDays: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'cleanup-job ', description: 'cleanup job to remove files that were marked for deletion  days ago'})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/files/job/delete-files.console.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    removedSinceDays\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Console, Command } from 'nestjs-console';\nimport { Logger } from '../../../core/logger/logger.service';\nimport { DeleteFilesUc } from '../uc';\n\n@Console({ command: 'files', description: 'file deletion console' })\nexport class DeleteFilesConsole {\n\tprivate logger: Logger;\n\n\tconstructor(private deleteFilesUc: DeleteFilesUc) {\n\t\tthis.logger = new Logger(DeleteFilesConsole.name);\n\t}\n\n\t@Command({\n\t\tcommand: 'cleanup-job ',\n\t\tdescription: 'cleanup job to remove files that were marked for deletion  days ago',\n\t})\n\tasync removeDeletedFilesData(removedSinceDays: number): Promise {\n\t\tthis.logger.log(`cleanup job will remove files that were marked for deletion ${removedSinceDays} days ago`);\n\t\tconst removedSince = new Date();\n\t\tremovedSince.setDate(removedSince.getDate() - removedSinceDays);\n\n\t\tawait this.deleteFilesUc.removeDeletedFilesData(removedSince);\n\t\tthis.logger.log('cleanup job finished');\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeleteFilesUc.html":{"url":"injectables/DeleteFilesUc.html","title":"injectable - DeleteFilesUc","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DeleteFilesUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/files/uc/delete-files.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                removeDeletedFilesData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(filesRepo: FilesRepo, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/files/uc/delete-files.uc.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filesRepo\n                                                  \n                                                        \n                                                                        FilesRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeDeletedFilesData\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeDeletedFilesData(removedSince: Date)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/files/uc/delete-files.uc.ts:15\n                \n            \n\n\n            \n                \n                    Schedules files that have been removed prior removedSince by a user to be removed.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    removedSince\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Logger } from '@src/core/logger/logger.service';\nimport { FilesRepo } from '../repo';\n\n@Injectable()\nexport class DeleteFilesUc {\n\tconstructor(private filesRepo: FilesRepo, private logger: Logger) {\n\t\tthis.logger.setContext(DeleteFilesUc.name);\n\t}\n\n\t/**\n\t * Schedules files that have been removed prior removedSince by a user to be removed.\n\t * @param removedSince\n\t */\n\tasync removeDeletedFilesData(removedSince: Date): Promise {\n\t\tconst filesForDeletion = await this.filesRepo.findAllFilesForCleanup(removedSince);\n\t\tconst numberOfFiles = filesForDeletion.length;\n\t\tthis.logger.log(`${numberOfFiles} files will be deleted`);\n\t\tconst failingFileIds: string[] = [];\n\t\t// eslint-disable-next-line no-restricted-syntax\n\t\tfor (const file of filesForDeletion) {\n\t\t\ttry {\n\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\tawait this.filesRepo.deleteFile(file);\n\t\t\t} catch (err) {\n\t\t\t\tfailingFileIds.push(file.id);\n\t\t\t\tthis.logger.error(err);\n\t\t\t}\n\t\t}\n\t\tthis.logger.log(`${numberOfFiles - failingFileIds.length} out of ${numberOfFiles} files were successfully deleted`);\n\t\tif (failingFileIds.length > 0) {\n\t\t\tthis.logger.error('the following files could not be deleted:', failingFileIds);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Directory.html":{"url":"classes/Directory.html","title":"class - Directory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Directory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/file.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseFile\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                creator\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                isDirectory\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseFile\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFile:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseFile\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFile:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDirectory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseFile\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFile:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, ManyToOne } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { StorageProvider } from './storageprovider.entity';\nimport type { User } from './user.entity';\n\nexport interface IFileProperties {\n\tdeletedAt?: Date;\n\tstorageFileName: string;\n\tbucket: string;\n\tstorageProvider: StorageProvider;\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorColumn: 'isDirectory', abstract: true })\nexport abstract class BaseFile extends BaseEntityWithTimestamps {\n\t@Property()\n\tdeletedAt?: Date;\n\n\t@Property()\n\tisDirectory: boolean;\n\n\t@Property()\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorValue: 'true' })\nexport class Directory extends BaseFile {}\n\n@Entity({ collection: 'files', discriminatorValue: 'false' })\nexport class File extends BaseFile {\n\t@Property()\n\tstorageFileName: string;\n\n\t@Property()\n\tbucket: string;\n\n\t@ManyToOne('StorageProvider', { fieldName: 'storageProviderId' })\n\tstorageProvider: StorageProvider;\n\n\tconstructor(props: IFileProperties) {\n\t\tsuper();\n\t\tthis.isDirectory = false;\n\t\tthis.deletedAt = props.deletedAt;\n\t\tthis.storageFileName = props.storageFileName;\n\t\tthis.bucket = props.bucket;\n\t\tthis.storageProvider = props.storageProvider;\n\t\tthis.creator = props.creator;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DurationLoggingInterceptor.html":{"url":"injectables/DurationLoggingInterceptor.html","title":"injectable - DurationLoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DurationLoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                This interceptor is logging the duration of a REST call.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(DurationLoggingInterceptor.name)\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Logger } from '@src/core/logger';\n\n/**\n * This interceptor is logging the duration of a REST call.\n */\n@Injectable()\nexport class DurationLoggingInterceptor implements NestInterceptor {\n\tprivate readonly logger = new Logger(DurationLoggingInterceptor.name);\n\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\tthis.logger.verbose('Before...');\n\t\tconst now = Date.now();\n\t\treturn next.handle().pipe(tap(() => this.logger.verbose(`After... ${Date.now() - now}ms`)));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EncryptedStringType.html":{"url":"classes/EncryptedStringType.html","title":"class - EncryptedStringType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EncryptedStringType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/types/EncryptedString.type.ts\n        \n\n\n            \n                Description\n            \n            \n                Serialization type to transparent encrypt string values in database.\n\n            \n\n            \n                Extends\n            \n            \n                        Type\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                encryptionService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                convertToDatabaseValue\n                            \n                            \n                                convertToJSValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(customKey?: string)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/types/EncryptedString.type.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        customKey\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        encryptionService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SymetricKeyEncryptionService\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/repo/types/EncryptedString.type.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        convertToDatabaseValue\n                        \n                    \n                \n            \n            \n                \nconvertToDatabaseValue(value: string | undefined, platform: Platform)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/types/EncryptedString.type.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    platform\n                                    \n                                            Platform\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        convertToJSValue\n                        \n                    \n                \n            \n            \n                \nconvertToJSValue(value: string | undefined, platform: Platform)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/types/EncryptedString.type.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    platform\n                                    \n                                            Platform\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Configuration } from '@hpi-schul-cloud/commons';\nimport { Type, Platform } from '@mikro-orm/core';\nimport { SymetricKeyEncryptionService } from '../../infra/encryption';\n\n/**\n * Serialization type to transparent encrypt string values in database.\n */\nexport class EncryptedStringType extends Type {\n\t// TODO modularize service?\n\tprivate encryptionService: SymetricKeyEncryptionService;\n\n\tconstructor(customKey?: string) {\n\t\tsuper();\n\t\tif (customKey) {\n\t\t\tthis.encryptionService = new SymetricKeyEncryptionService(customKey);\n\t\t} else {\n\t\t\tthis.encryptionService = new SymetricKeyEncryptionService(Configuration.get('S3_KEY'));\n\t\t}\n\t}\n\n\tconvertToDatabaseValue(value: string | undefined, platform: Platform): string {\n\t\t// keep nullish values\n\t\tif (!value) {\n\t\t\treturn value as string;\n\t\t}\n\n\t\t// encrypt non-empty strings only\n\t\tif (value?.length === 0) {\n\t\t\treturn '';\n\t\t}\n\t\tconst encryptedString = this.encryptionService.encrypt(value);\n\n\t\treturn encryptedString;\n\t}\n\n\tconvertToJSValue(value: string | undefined, platform: Platform): string {\n\t\t// keep nullish values\n\t\tif (!value) {\n\t\t\treturn value as string;\n\t\t}\n\n\t\t// decrypt non-empty strings only\n\t\tif (value?.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// decrypt only non-empty strings\n\t\tconst decryptedString: string = this.encryptionService.decrypt(value);\n\n\t\treturn decryptedString;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EncryptionModule.html":{"url":"modules/EncryptionModule.html","title":"module - EncryptionModule","body":"\n                   \n\n\n\n\n    Modules\n    EncryptionModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/shared/infra/encryption/encryption.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: EncryptionModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/encryption/encryption.module.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                EncryptionModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { SymetricKeyEncryptionService } from './encryption.service';\n\nexport interface EncryptionModuleOptions {\n\tSymmetricCipherKey: string;\n}\n\n@Module({})\nexport class EncryptionModule {\n\tstatic forRoot(options: EncryptionModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: EncryptionModule,\n\t\t\tproviders: [\n\t\t\t\tSymetricKeyEncryptionService,\n\t\t\t\t{\n\t\t\t\t\tprovide: 'SYMMETRIC_CIPHER_KEY',\n\t\t\t\t\tuseValue: options.SymmetricCipherKey,\n\t\t\t\t},\n\t\t\t],\n\t\t\texports: [SymetricKeyEncryptionService],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EncryptionModuleOptions.html":{"url":"interfaces/EncryptionModuleOptions.html","title":"interface - EncryptionModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EncryptionModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/encryption/encryption.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            SymmetricCipherKey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        SymmetricCipherKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SymmetricCipherKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { SymetricKeyEncryptionService } from './encryption.service';\n\nexport interface EncryptionModuleOptions {\n\tSymmetricCipherKey: string;\n}\n\n@Module({})\nexport class EncryptionModule {\n\tstatic forRoot(options: EncryptionModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: EncryptionModule,\n\t\t\tproviders: [\n\t\t\t\tSymetricKeyEncryptionService,\n\t\t\t\t{\n\t\t\t\t\tprovide: 'SYMMETRIC_CIPHER_KEY',\n\t\t\t\t\tuseValue: options.SymmetricCipherKey,\n\t\t\t\t},\n\t\t\t],\n\t\t\texports: [SymetricKeyEncryptionService],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ErrorModule.html":{"url":"modules/ErrorModule.html","title":"module - ErrorModule","body":"\n                   \n\n\n\n\n    Modules\n    ErrorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/error/error.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_FILTER } from '@nestjs/core';\nimport { GlobalErrorFilter } from './filter/global-error.filter';\n\n/**\n * Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_FILTER,\n\t\t\tuseClass: GlobalErrorFilter,\n\t\t},\n\t],\n})\nexport class ErrorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorResponse.html":{"url":"classes/ErrorResponse.html","title":"class - ErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/error.response.ts\n        \n\n\n            \n                Description\n            \n            \n                HTTP response definition for errors.\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: string, title: string, message: string, code: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/error.response.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\n/**\n * HTTP response definition for errors.\n */\nexport class ErrorResponse {\n\tconstructor(\n\t\t/**\n\t\t * Unambigious error identifier, format: UPPERCASE_SNAKE_CASE\n\t\t */\n\t\treadonly type: string,\n\t\t/**\n\t\t * Description about the type, unique by type, format: Sentence case\n\t\t */\n\t\treadonly title: string,\n\t\t/**\n\t\t * additional custom information about the error\n\t\t */\n\t\treadonly message: string,\n\t\t/**\n\t\t * Must match HTTP error code\n\t\t */\n\t\treadonly code: number = HttpStatus.CONFLICT\n\t) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersAuthProvider.html":{"url":"injectables/FeathersAuthProvider.html","title":"injectable - FeathersAuthProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeathersAuthProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/feathers-auth.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getPermittedSchools\n                            \n                            \n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                getUserSchoolPermissions\n                            \n                            \n                                    Async\n                                getUserTargetPermissions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersServiceProvider: FeathersServiceProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersServiceProvider\n                                                  \n                                                        \n                                                                        FeathersServiceProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedSchools\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedSchools(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedTargets\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, targetModel: NewsTargetModel, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserSchoolPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserSchoolPermissions(userId: EntityId, schoolId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserTargetPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserTargetPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { BaseEntity, EntityId, NewsTargetModel } from '@shared/domain';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { FeathersServiceProvider } from '@shared/infra/feathers';\n\ninterface User {\n\t_id: ObjectId;\n\tschoolId: ObjectId;\n\tpermissions: string[];\n}\n\n@Injectable()\nexport class FeathersAuthProvider {\n\tconstructor(private feathersServiceProvider: FeathersServiceProvider) {}\n\n\tasync getUserSchoolPermissions(userId: EntityId, schoolId: EntityId): Promise | never {\n\t\tconst user = await this.getUser(userId);\n\t\t// test user is school member\n\t\tconst sameSchool = user.schoolId.toString() === schoolId;\n\t\tif (sameSchool && Array.isArray(user.permissions)) {\n\t\t\treturn user.permissions;\n\t\t}\n\t\treturn [];\n\t}\n\n\tasync getUserTargetPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\ttargetId: EntityId\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`${targetModel}/:scopeId/userPermissions/`);\n\t\tconst targetPermissions = (await service.get(userId, {\n\t\t\troute: { scopeId: targetId },\n\t\t})) as string[];\n\t\treturn targetPermissions;\n\t}\n\n\tasync getPermittedTargets(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`/users/:scopeId/${targetModel}`);\n\t\tconst targets = (await service.find({\n\t\t\troute: { scopeId: userId.toString() },\n\t\t\tquery: {\n\t\t\t\tpermissions,\n\t\t\t},\n\t\t\tpaginate: false,\n\t\t})) as BaseEntity[];\n\t\tconst targetIds = targets.map((target) => target._id.toString());\n\t\treturn targetIds;\n\t}\n\n\tasync getPermittedSchools(userId: EntityId): Promise {\n\t\tconst user = await this.getUser(userId);\n\t\treturn [user.schoolId.toString()] as EntityId[];\n\t}\n\n\tprivate async getUser(userId: EntityId): Promise {\n\t\tconst service = this.feathersServiceProvider.getService('users');\n\t\tconst user = (await service.get(userId)) as User;\n\t\tif (user == null) throw new NotFoundException();\n\t\treturn user;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersError.html":{"url":"interfaces/FeathersError.html","title":"interface - FeathersError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FeathersError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/feathers-error.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            className\n                                        \n                                \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        className\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        className:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FeathersError extends Error {\n\tcode: number;\n\tclassName: string;\n\ttype: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeathersModule.html":{"url":"modules/FeathersModule.html","title":"module - FeathersModule","body":"\n                   \n\n\n\n\n    Modules\n    FeathersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_exports\n\n\n\ncluster_FeathersModule_providers\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\n\n\nFeathersModule\n\nFeathersModule\n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/shared/infra/feathers/feathers.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            This Module gives access to legacy feathers services. It is request based injected.\nIntroduce strong typing immediately when using this modules service.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersServiceProvider } from './feathers-service.provider';\n\n/**\n * This Module gives access to legacy feathers services. It is request based injected.\n * Introduce strong typing immediately when using this modules service.\n */\n@Module({\n\tproviders: [FeathersServiceProvider],\n\texports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersService.html":{"url":"interfaces/FeathersService.html","title":"interface - FeathersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FeathersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/feathers/feathers-service.provider.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        find\n                                    \n                                \n                                \n                                    \n                                        get\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \n                    Access legacy eathers service find method\n                \n            \n            \n                \nfind(params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/feathers/feathers-service.provider.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \n                    Access legacy eathers service get method\n                \n            \n            \n                \nget(id: string, params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/feathers/feathers-service.provider.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject, ImATeapotException } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: string, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst feathersApp = this.request.app.get('feathersApp') as Application;\n\t\tif (feathersApp == null) {\n\t\t\t// missing a feathers instance defined in module definition\n\t\t\t// see main.ts how it might work\n\t\t\t// sample: nestExpress.set('feathersApp', feathersExpress);\n\t\t\tthrow new ImATeapotException('this action requires a feathers instance available');\n\t\t}\n\t\tconst service = feathersApp.service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersServiceProvider.html":{"url":"injectables/FeathersServiceProvider.html","title":"injectable - FeathersServiceProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeathersServiceProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/feathers/feathers-service.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                This Service gives access to legacy feathers services. It is request based injected.\nIMPORTANT: Introduce strong typing immediately when using this modules service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(request: Request)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/infra/feathers/feathers-service.provider.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getService\n                        \n                    \n                \n            \n            \n                \ngetService(path: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/feathers/feathers-service.provider.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FeathersService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject, ImATeapotException } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: string, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst feathersApp = this.request.app.get('feathersApp') as Application;\n\t\tif (feathersApp == null) {\n\t\t\t// missing a feathers instance defined in module definition\n\t\t\t// see main.ts how it might work\n\t\t\t// sample: nestExpress.set('feathersApp', feathersExpress);\n\t\t\tthrow new ImATeapotException('this action requires a feathers instance available');\n\t\t}\n\t\tconst service = feathersApp.service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/File.html":{"url":"classes/File.html","title":"class - File","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/file.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseFile\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bucket\n                            \n                            \n                                storageFileName\n                            \n                            \n                                storageProvider\n                            \n                            \n                                    Optional\n                                creator\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                isDirectory\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: IFileProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        IFileProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bucket\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        storageFileName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        storageProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StorageProvider\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('StorageProvider', {fieldName: 'storageProviderId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseFile\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFile:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseFile\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFile:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDirectory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseFile\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFile:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, ManyToOne } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { StorageProvider } from './storageprovider.entity';\nimport type { User } from './user.entity';\n\nexport interface IFileProperties {\n\tdeletedAt?: Date;\n\tstorageFileName: string;\n\tbucket: string;\n\tstorageProvider: StorageProvider;\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorColumn: 'isDirectory', abstract: true })\nexport abstract class BaseFile extends BaseEntityWithTimestamps {\n\t@Property()\n\tdeletedAt?: Date;\n\n\t@Property()\n\tisDirectory: boolean;\n\n\t@Property()\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorValue: 'true' })\nexport class Directory extends BaseFile {}\n\n@Entity({ collection: 'files', discriminatorValue: 'false' })\nexport class File extends BaseFile {\n\t@Property()\n\tstorageFileName: string;\n\n\t@Property()\n\tbucket: string;\n\n\t@ManyToOne('StorageProvider', { fieldName: 'storageProviderId' })\n\tstorageProvider: StorageProvider;\n\n\tconstructor(props: IFileProperties) {\n\t\tsuper();\n\t\tthis.isDirectory = false;\n\t\tthis.deletedAt = props.deletedAt;\n\t\tthis.storageFileName = props.storageFileName;\n\t\tthis.bucket = props.bucket;\n\t\tthis.storageProvider = props.storageProvider;\n\t\tthis.creator = props.creator;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileStorageAdapter.html":{"url":"injectables/FileStorageAdapter.html","title":"injectable - FileStorageAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FileStorageAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/filestorage/filestorage.adapter.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteFile(file: File)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/filestorage/filestorage.adapter.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { S3Client, DeleteObjectCommand } from '@aws-sdk/client-s3';\n\nimport { Injectable } from '@nestjs/common';\nimport { StorageProvider, File } from '@shared/domain';\n\nfunction createStorageProviderClient(storageProvider: StorageProvider): S3Client {\n\treturn new S3Client({\n\t\tendpoint: storageProvider.endpointUrl,\n\t\tforcePathStyle: true,\n\t\tregion: storageProvider.region,\n\t\ttls: true,\n\t\tcredentials: {\n\t\t\taccessKeyId: storageProvider.accessKeyId,\n\t\t\tsecretAccessKey: storageProvider.secretAccessKey,\n\t\t},\n\t});\n}\n\n@Injectable()\nexport class FileStorageAdapter {\n\tasync deleteFile(file: File): Promise {\n\t\tconst { storageProvider, bucket, storageFileName } = file;\n\t\tconst storageProviderClient = createStorageProviderClient(storageProvider);\n\t\tconst deletionCommand = new DeleteObjectCommand({ Bucket: bucket, Key: storageFileName });\n\t\tawait storageProviderClient.send(deletionCommand);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileSystemAdapter.html":{"url":"injectables/FileSystemAdapter.html","title":"injectable - FileSystemAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FileSystemAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/file-system/file-system.adapter.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                encoding\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createDir\n                            \n                            \n                                    Async\n                                createTmpDir\n                            \n                            \n                                joinPath\n                            \n                            \n                                    Async\n                                readDir\n                            \n                            \n                                    Async\n                                readFile\n                            \n                            \n                                    Async\n                                removeDirRecursive\n                            \n                            \n                                    Async\n                                writeFile\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    EOL\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createDir\n                        \n                    \n                \n            \n            \n                \n                    \n                    createDir(folderPath: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:26\n                \n            \n\n\n            \n                \n                    creates a directory if not already exists\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    folderPath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createTmpDir\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTmpDir(dirNamePrefix: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:68\n                \n            \n\n\n            \n                \n                    Creates a folder in systems temp path.\nThe dirNamePrefix given will be extended by six random characters.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dirNamePrefix\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        full path string to temp folder, format depends on os\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joinPath\n                        \n                    \n                \n            \n            \n                \njoinPath(...paths: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    paths\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        readDir\n                        \n                    \n                \n            \n            \n                \n                    \n                    readDir(folderPath: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:36\n                \n            \n\n\n            \n                \n                    Lists filenames of given folderPath\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    folderPath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        path to an existing folder\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        string array of filenames\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        readFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    readFile(filePath: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:57\n                \n            \n\n\n            \n                \n                    Read file from filesystem with given encoding, defaults to utf-8\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filePath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        path to existing file, format depending on os\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        file content as encoded text\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeDirRecursive\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeDirRecursive(folderPath: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:78\n                \n            \n\n\n            \n                \n                    Removes the given folder recursively including content when not empty.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    folderPath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        path to an existing folder, format depending on\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        writeFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    writeFile(filePath: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:48\n                \n            \n\n\n            \n                \n                    Write text to file, will override existing files.\nThe folder in which the file will be created must exist.\nThe path format depends on os\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filePath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        path to a file\n\n                                    \n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        encoding\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BufferEncoding\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        EOL\n                    \n                \n\n                \n                    \n                        getEOL()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:18\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { promises as fsp, existsSync } from 'fs';\nimport os from 'os';\nimport path from 'path';\n\nimport rimraf = require('rimraf');\n\nconst { mkdir, readdir, writeFile, readFile, mkdtemp } = fsp;\n\n@Injectable()\nexport class FileSystemAdapter {\n\tprivate encoding: BufferEncoding;\n\n\tconstructor() {\n\t\tthis.encoding = 'utf-8';\n\t}\n\n\tget EOL(): string {\n\t\treturn os.EOL;\n\t}\n\n\t/**\n\t * creates a directory if not already exists\n\t * @param folderPath\n\t */\n\tasync createDir(folderPath: string): Promise {\n\t\tconst exists = existsSync(folderPath);\n\t\tif (!exists) await mkdir(folderPath);\n\t}\n\n\t/**\n\t * Lists filenames of given folderPath\n\t * @param folderPath path to an existing folder\n\t * @returns string array of filenames\n\t */\n\tasync readDir(folderPath: string): Promise {\n\t\tconst filenames = await readdir(folderPath, { encoding: this.encoding });\n\t\treturn filenames;\n\t}\n\n\t/**\n\t * Write text to file, will override existing files.\n\t * The folder in which the file will be created must exist.\n\t * The path format depends on os\n\t * @param filePath path to a file\n\t * @param text\n\t */\n\tasync writeFile(filePath: string, text: string): Promise {\n\t\tawait writeFile(filePath, text);\n\t}\n\n\t/**\n\t * Read file from filesystem with given encoding, defaults to utf-8\n\t * @param filePath path to existing file, format depending on os\n\t * @returns file content as encoded text\n\t */\n\tasync readFile(filePath: string): Promise {\n\t\tconst text = await readFile(filePath, this.encoding);\n\t\treturn text;\n\t}\n\n\t/**\n\t * Creates a folder in systems temp path.\n\t * The dirNamePrefix given will be extended by six random characters.\n\t * @param dirNamePrefix\n\t * @returns full path string to temp folder, format depends on os\n\t */\n\tasync createTmpDir(dirNamePrefix: string): Promise {\n\t\tconst dirPath = this.joinPath(os.tmpdir(), dirNamePrefix);\n\t\tconst tmpDirPath = await mkdtemp(dirPath);\n\t\treturn tmpDirPath;\n\t}\n\n\t/**\n\t * Removes the given folder recursively including content when not empty.\n\t * @param folderPath path to an existing folder, format depending on\n\t */\n\tasync removeDirRecursive(folderPath: string): Promise {\n\t\t// fs.rm changed in node 14.14, use rimraf instead\n\t\trimraf.sync(folderPath);\n\t\treturn Promise.resolve();\n\t}\n\n\tjoinPath(...paths: string[]): string {\n\t\treturn path.join(...paths);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FileSystemModule.html":{"url":"modules/FileSystemModule.html","title":"module - FileSystemModule","body":"\n                   \n\n\n\n\n    Modules\n    FileSystemModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FileSystemModule\n\n\n\ncluster_FileSystemModule_providers\n\n\n\ncluster_FileSystemModule_exports\n\n\n\n\nFileSystemAdapter \n\nFileSystemAdapter \n\n\n\nFileSystemModule\n\nFileSystemModule\n\nFileSystemAdapter  -->\n\nFileSystemModule->FileSystemAdapter \n\n\n\n\n\nFileSystemAdapter\n\nFileSystemAdapter\n\nFileSystemModule -->\n\nFileSystemAdapter->FileSystemModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/shared/infra/file-system/file-system.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FileSystemAdapter\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FileSystemAdapter\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FileSystemAdapter } from './file-system.adapter';\n\n@Module({\n\tproviders: [FileSystemAdapter],\n\texports: [FileSystemAdapter],\n})\nexport class FileSystemModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n    Modules\n    FilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_imports\n\n\n\ncluster_FilesModule_providers\n\n\n\n\nLoggerModule\n\nLoggerModule\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nLoggerModule->FilesModule\n\n\n\n\n\nDeleteFilesUc\n\nDeleteFilesUc\n\nFilesModule -->\n\nDeleteFilesUc->FilesModule\n\n\n\n\n\nFileStorageAdapter\n\nFileStorageAdapter\n\nFilesModule -->\n\nFileStorageAdapter->FilesModule\n\n\n\n\n\nFilesRepo\n\nFilesRepo\n\nFilesModule -->\n\nFilesRepo->FilesModule\n\n\n\n\n\nStorageProviderRepo\n\nStorageProviderRepo\n\nFilesModule -->\n\nStorageProviderRepo->FilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/files/files.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DeleteFilesUc\n                        \n                        \n                            FileStorageAdapter\n                        \n                        \n                            FilesRepo\n                        \n                        \n                            StorageProviderRepo\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LoggerModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FileStorageAdapter } from '@shared/infra/filestorage';\nimport { DeleteFilesConsole } from './job/delete-files.console';\nimport { LoggerModule } from '../../core/logger/logger.module';\nimport { FilesRepo, StorageProviderRepo } from './repo';\nimport { DeleteFilesUc } from './uc';\n\n@Module({\n\timports: [LoggerModule],\n\tproviders: [DeleteFilesConsole, DeleteFilesUc, FilesRepo, StorageProviderRepo, FileStorageAdapter],\n})\nexport class FilesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesRepo.html":{"url":"injectables/FilesRepo.html","title":"injectable - FilesRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FilesRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/files/repo/files.repo.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseRepo\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                propertiesToPopulate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteFile\n                            \n                            \n                                    Async\n                                findAllFilesForCleanup\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                persist\n                            \n                            \n                                persistAll\n                            \n                            \n                                    Async\n                                persistAllAndFlush\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                    Async\n                                removeAllAndFlush\n                            \n                            \n                                    Async\n                                removeAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fileStorageAdapter: FileStorageAdapter, em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/files/repo/files.repo.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileStorageAdapter\n                                                  \n                                                        \n                                                                        FileStorageAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteFile(file: BaseFile)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/files/repo/files.repo.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                BaseFile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllFilesForCleanup\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllFilesForCleanup(cleanupThreshold: Date)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/files/repo/files.repo.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cleanupThreshold\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                    \n                    flush()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persist\n                        \n                    \n                \n            \n            \n                \npersist(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:9\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAll\n                        \n                    \n                \n            \n            \n                \npersistAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAll\n                        \n                    \n                \n            \n            \n                \nremoveAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        propertiesToPopulate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['storageProvider']\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/files/repo/files.repo.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityManager } from '@mikro-orm/mongodb';\nimport { BaseRepo } from '@shared/repo/base.repo';\nimport { BaseFile, File } from '@shared/domain';\nimport { FileStorageAdapter } from '@shared/infra/filestorage';\n\n@Injectable()\nexport class FilesRepo extends BaseRepo {\n\tconstructor(private fileStorageAdapter: FileStorageAdapter, protected readonly em: EntityManager) {\n\t\tsuper(em);\n\t}\n\n\tpropertiesToPopulate = ['storageProvider'];\n\n\tasync findAllFilesForCleanup(cleanupThreshold: Date): Promise {\n\t\tconst filesForCleanupQuery = { deletedAt: { $lte: cleanupThreshold } };\n\t\tconst files = await this.em.find(BaseFile, filesForCleanupQuery);\n\t\tconst regularFiles = files.filter((file) => file instanceof File);\n\t\tawait this.em.populate(regularFiles, this.propertiesToPopulate);\n\t\treturn files;\n\t}\n\n\tasync deleteFile(file: BaseFile): Promise {\n\t\tif (file instanceof File) await this.fileStorageAdapter.deleteFile(file);\n\t\tawait this.removeAndFlush(file);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GlobalConstants.html":{"url":"interfaces/GlobalConstants.html","title":"interface - GlobalConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GlobalConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/config/database.config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            DB_PASSWORD\n                                        \n                                \n                                \n                                        \n                                            DB_URL\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            DB_USERNAME\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        DB_PASSWORD\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_PASSWORD:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DB_URL\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_URL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DB_USERNAME\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_USERNAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import globals = require('../../../../config/globals');\n\ninterface GlobalConstants {\n\tDB_URL: string;\n\tDB_PASSWORD?: string;\n\tDB_USERNAME?: string;\n}\n\nconst usedGlobals: GlobalConstants = globals;\n\n/** Database URL */\nexport const { DB_URL, DB_PASSWORD, DB_USERNAME } = usedGlobals;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalErrorFilter.html":{"url":"classes/GlobalErrorFilter.html","title":"class - GlobalErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/filter/global-error.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                            \n                                createErrorResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILogger\n\n                    \n                \n                \n                    \n                        Default value : new Logger('Error')\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/core/error/filter/global-error.filter.ts:119\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(error: T, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponse\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponse(error: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, InternalServerErrorException } from '@nestjs/common';\nimport _ from 'lodash';\nimport { Response } from 'express';\nimport { BusinessError, ApiValidationError } from '@shared/common';\nimport { Logger, ILogger } from '@src/core/logger';\nimport { ErrorResponse } from '../dto/error.response';\nimport { FeathersError } from '../interface';\nimport { ApiValidationErrorResponse } from '../dto/api-validation-error.response';\n\nconst isFeathersError = (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n};\n\nconst isBusinessError = (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n};\n\n/**\n * Compare helper to detect an error is a build in NestJS http exception.\n * @param error\n * @returns\n */\nconst isTechnicalError = (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n};\n\n/**\n * Creates ErrorResponse from NestJS build in technical exceptions\n * @param exception\n * @returns {ErrorResponse}\n */\nconst createErrorResponseForHttpException = (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n};\n\nfunction createErrorResponseForBusinessError(error: BusinessError): ErrorResponse {\n\tif (error instanceof ApiValidationError) {\n\t\tconst response = new ApiValidationErrorResponse(error);\n\t\treturn response;\n\t}\n\tconst response = error.getResponse();\n\treturn response;\n}\n\nfunction createErrorResponseForUnknownError(error?: unknown): ErrorResponse {\n\tconst unknownError = new InternalServerErrorException(error);\n\tconst response = createErrorResponseForHttpException(unknownError);\n\treturn response;\n}\n\nfunction createErrorResponseForFeathersError(error: FeathersError) {\n\tconst { code, className: type, name: title, message } = error;\n\tconst snakeType = _.snakeCase(type).toUpperCase();\n\tconst startTitle = _.startCase(title);\n\treturn new ErrorResponse(snakeType, startTitle, message, code);\n}\n\nconst createErrorResponse = (error: unknown, logger: ILogger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create response from unknown error\n\t\treturn createErrorResponseForUnknownError(error);\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n};\n\nconst writeValidationErrors = (error: ApiValidationError, logger: ILogger) => {\n\tconst errorMsg = error.validationErrors.map(\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t(e) => `Wrong property ${e.property} got ${e.value} : ${JSON.stringify(e.constraints)}`\n\t);\n\tlogger.error(errorMsg, error.stack, 'API Validation Error');\n};\n\nconst writeErrorLog = (error: unknown, logger: ILogger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tif (error instanceof ApiValidationError) {\n\t\t\t\twriteValidationErrors(error, logger);\n\t\t\t} else {\n\t\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t\t}\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n};\n\n@Catch()\nexport class GlobalErrorFilter implements ExceptionFilter {\n\tprivate static readonly logger: ILogger = new Logger('Error');\n\n\t// eslint-disable-next-line class-methods-use-this\n\tcatch(error: T, host: ArgumentsHost): void {\n\t\tconst ctx = host.switchToHttp();\n\t\tconst response = ctx.getResponse();\n\t\twriteErrorLog(error, GlobalErrorFilter.logger);\n\t\tconst errorResponse: ErrorResponse = this.createErrorResponse(error);\n\t\tresponse.status(errorResponse.code).json(errorResponse);\n\t}\n\n\tcreateErrorResponse(error: T): ErrorResponse {\n\t\treturn createErrorResponse(error, GlobalErrorFilter.logger);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalValidationPipe.html":{"url":"classes/GlobalValidationPipe.html","title":"class - GlobalValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/validation/pipe/global-validation.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                \nGlobal Pipe setup\n\nValidation of DTOs will base on type-checking\nwhich is enabled by default. To you might use\nthe class-validator decorators to extend\nvalidation.\n\n            \n\n            \n                Extends\n            \n            \n                    ValidationPipe\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/validation/pipe/global-validation.pipe.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ValidationError, ValidationPipe } from '@nestjs/common';\nimport { ApiValidationError } from '@shared/common';\n\n/** *********************************************\n * Global Pipe setup\n * **********************************************\n * Validation of DTOs will base on type-checking\n * which is enabled by default. To you might use\n * the class-validator decorators to extend\n * validation.\n */\nexport class GlobalValidationPipe extends ValidationPipe {\n\tconstructor() {\n\t\tsuper({\n\t\t\t// enable DTO instance creation for incoming data\n\t\t\ttransform: true,\n\t\t\ttransformOptions: {\n\t\t\t\t// enable type coersion, requires transform:true\n\t\t\t\tenableImplicitConversion: true,\n\t\t\t},\n\t\t\twhitelist: true, // only pass valid @ApiProperty-decorated DTO properties, remove others\n\t\t\tforbidNonWhitelisted: false, // additional params are just skipped (required when extracting multiple DTO from single query)\n\t\t\texceptionFactory: (errors: ValidationError[]) => {\n\t\t\t\treturn new ApiValidationError(errors);\n\t\t\t},\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GridElement.html":{"url":"classes/GridElement.html","title":"class - GridElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GridElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IGridElement\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                references\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addReferences\n                            \n                            \n                                    Static\n                                FromGroup\n                            \n                            \n                                    Static\n                                FromPersistedGroup\n                            \n                            \n                                    Static\n                                FromPersistedReference\n                            \n                            \n                                    Static\n                                FromSingleReference\n                            \n                            \n                                getContent\n                            \n                            \n                                getId\n                            \n                            \n                                getReferences\n                            \n                            \n                                hasId\n                            \n                            \n                                isGroup\n                            \n                            \n                                removeReference\n                            \n                            \n                                setGroupName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:71\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        references\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IGridElementReference[]\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:71\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addReferences\n                        \n                    \n                \n            \n            \n                \naddReferences(anotherReference: IGridElementReference[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    anotherReference\n                                    \n                                                IGridElementReference[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        FromGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    FromGroup(title: string, references: IGridElementReference[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    references\n                                    \n                                                IGridElementReference[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GridElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        FromPersistedGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    FromPersistedGroup(id: EntityId, title: string, group: IGridElementReference[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    group\n                                    \n                                                IGridElementReference[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GridElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        FromPersistedReference\n                        \n                    \n                \n            \n            \n                \n                    \n                    FromPersistedReference(id: EntityId, reference: IGridElementReference)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reference\n                                    \n                                                IGridElementReference\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GridElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        FromSingleReference\n                        \n                    \n                \n            \n            \n                \n                    \n                    FromSingleReference(reference: IGridElementReference)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reference\n                                    \n                                                IGridElementReference\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GridElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getContent\n                        \n                    \n                \n            \n            \n                \ngetContent()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         GridElementContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getId\n                        \n                    \n                \n            \n            \n                \ngetId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityId\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferences\n                        \n                    \n                \n            \n            \n                \ngetReferences()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         IGridElementReference[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasId\n                        \n                    \n                \n            \n            \n                \nhasId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isGroup\n                        \n                    \n                \n            \n            \n                \nisGroup()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeReference\n                        \n                    \n                \n            \n            \n                \nremoveReference(index: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setGroupName\n                        \n                    \n                \n            \n            \n                \nsetGroupName(newGroupName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newGroupName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException, BadRequestException } from '@nestjs/common';\nimport { EntityId } from '../types/entity-id';\n\nconst defaultColumns = 6;\nconst defaultRows = 6;\n\nexport type GridElementReferenceMetadata = {\n\tid: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n};\n\nexport interface IGridElementReference {\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class DefaultGridReference implements IGridElementReference {\n\t// This is only a temporary fake class, for use until other references, like courses, are fully supported.\n\tid: EntityId;\n\n\ttitle: string;\n\n\tdisplayColor: string;\n\n\tconstructor(id: EntityId, title: string, displayColor = '#f23f76') {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.displayColor = displayColor;\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn {\n\t\t\tid: this.id,\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: this.title.substr(0, 2),\n\t\t\tdisplayColor: this.displayColor,\n\t\t};\n\t}\n}\n\nexport interface IGridElement {\n\thasId(): boolean;\n\n\tgetId: () => EntityId;\n\n\tgetContent: () => GridElementContent;\n\n\tisGroup(): boolean;\n\n\tremoveReference(index: number): void;\n\n\tgetReferences(): IGridElementReference[];\n\n\taddReferences(anotherReference: IGridElementReference[]): void;\n\n\tsetGroupName(newGroupName: string): void;\n}\n\nexport type GridElementContent = {\n\treferencedId?: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n\tgroup?: GridElementReferenceMetadata[];\n};\n\nexport class GridElement implements IGridElement {\n\tid: EntityId;\n\n\ttitle: string;\n\n\tprivate constructor(props: { id?: EntityId; title?: string; references: IGridElementReference[] }) {\n\t\tif (props.id) this.id = props.id;\n\t\tif (props.title) this.title = props.title;\n\t\tthis.references = props.references;\n\t}\n\n\tstatic FromPersistedReference(id: EntityId, reference: IGridElementReference): GridElement {\n\t\treturn new GridElement({ id, references: [reference] });\n\t}\n\n\tstatic FromPersistedGroup(id: EntityId, title: string, group: IGridElementReference[]): GridElement {\n\t\treturn new GridElement({ id, title, references: group });\n\t}\n\n\tstatic FromSingleReference(reference: IGridElementReference): GridElement {\n\t\treturn new GridElement({ references: [reference] });\n\t}\n\n\tstatic FromGroup(title: string, references: IGridElementReference[]): GridElement {\n\t\treturn new GridElement({ title, references });\n\t}\n\n\treferences: IGridElementReference[];\n\n\thasId(): boolean {\n\t\treturn !!this.id;\n\t}\n\n\tgetId(): EntityId {\n\t\treturn this.id;\n\t}\n\n\tgetReferences(): IGridElementReference[] {\n\t\treturn this.references;\n\t}\n\n\tremoveReference(index: number): void {\n\t\tif (!this.isGroup()) {\n\t\t\tthrow new BadRequestException('this element is not a group.');\n\t\t}\n\t\tif (index > 0 && this.references.length  reference.getMetadata());\n\t\tconst checkShortTitle = this.title ? this.title.substr(0, 2) : 'exampleTitle';\n\t\tconst groupMetadata = {\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: checkShortTitle,\n\t\t\tdisplayColor: 'exampleColor',\n\t\t\tgroup: groupData,\n\t\t};\n\t\treturn groupMetadata;\n\t}\n\n\tisGroup(): boolean {\n\t\treturn this.references.length > 1;\n\t}\n\n\tsetGroupName(newGroupName: string): void {\n\t\tif (!this.isGroup()) {\n\t\t\treturn;\n\t\t}\n\t\tthis.title = newGroupName;\n\t}\n}\n\nexport type GridPosition = { x: number; y: number };\nexport type GridPositionWithGroupIndex = { x: number; y: number; groupIndex?: number };\n\nexport type GridElementWithPosition = {\n\tgridElement: IGridElement;\n\tpos: GridPosition;\n};\n\nexport type DashboardProps = { colums?: number; rows?: number; grid: GridElementWithPosition[] };\n\nexport class DashboardEntity {\n\tid: EntityId;\n\n\tcolumns: number;\n\n\trows: number;\n\n\tgrid: Map;\n\n\tprivate gridIndexFromPosition(pos: GridPosition): number {\n\t\tif (pos.x > this.columns || pos.y > this.rows) {\n\t\t\tthrow new BadRequestException('dashboard element position is outside the grid.');\n\t\t}\n\t\treturn this.columns * pos.y + pos.x;\n\t}\n\n\tprivate positionFromGridIndex(index: number): GridPosition {\n\t\tconst y = Math.floor(index / this.columns);\n\t\tconst x = index % this.columns;\n\t\treturn { x, y };\n\t}\n\n\tconstructor(id: string, props: DashboardProps) {\n\t\tthis.columns = props.colums || defaultColumns;\n\t\tthis.rows = props.rows || defaultRows;\n\t\tthis.grid = new Map();\n\t\tprops.grid.forEach((element) => {\n\t\t\tthis.grid.set(this.gridIndexFromPosition(element.pos), element.gridElement);\n\t\t});\n\t\tthis.id = id;\n\t\tObject.assign(this, {});\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetGrid(): GridElementWithPosition[] {\n\t\tconst result = [...this.grid.keys()].map((key) => {\n\t\t\tconst position = this.positionFromGridIndex(key);\n\t\t\tconst value = this.grid.get(key) as IGridElement;\n\t\t\treturn {\n\t\t\t\tpos: position,\n\t\t\t\tgridElement: value,\n\t\t\t};\n\t\t});\n\t\treturn result;\n\t}\n\n\tgetElement(position: GridPosition): IGridElement {\n\t\tconst element = this.grid.get(this.gridIndexFromPosition(position));\n\t\tif (!element) {\n\t\t\tthrow new NotFoundException('no element at grid position');\n\t\t}\n\t\treturn element;\n\t}\n\n\tmoveElement(from: GridPositionWithGroupIndex, to: GridPositionWithGroupIndex): GridElementWithPosition {\n\t\tconst elementToMove = this.getReferencesFromPosition(from);\n\t\tconst resultElement = this.mergeElementIntoPosition(elementToMove, to);\n\t\tthis.removeFromPosition(from);\n\t\treturn {\n\t\t\tpos: to,\n\t\t\tgridElement: resultElement,\n\t\t};\n\t}\n\n\tprivate getReferencesFromPosition(position: GridPositionWithGroupIndex): IGridElement {\n\t\tconst elementToMove = this.getElement(position);\n\n\t\tif (typeof position.groupIndex === 'number' && elementToMove.isGroup()) {\n\t\t\tconst references = elementToMove.getReferences();\n\t\t\tconst referenceForIndex = references[position.groupIndex];\n\t\t\treturn GridElement.FromSingleReference(referenceForIndex);\n\t\t}\n\n\t\treturn elementToMove;\n\t}\n\n\tprivate removeFromPosition(position: GridPositionWithGroupIndex): void {\n\t\tconst element = this.getElement(position);\n\t\tif (typeof position.groupIndex === 'number') {\n\t\t\telement.removeReference(position.groupIndex);\n\t\t} else {\n\t\t\tthis.grid.delete(this.gridIndexFromPosition(position));\n\t\t}\n\t}\n\n\tprivate mergeElementIntoPosition(element: IGridElement, position: GridPosition): IGridElement {\n\t\tconst targetElement = this.grid.get(this.gridIndexFromPosition(position));\n\t\tif (targetElement) {\n\t\t\ttargetElement.addReferences(element.getReferences());\n\t\t\treturn targetElement;\n\t\t}\n\t\tthis.grid.set(this.gridIndexFromPosition(position), element);\n\t\treturn element;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HtmlMailContent.html":{"url":"interfaces/HtmlMailContent.html","title":"interface - HtmlMailContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HtmlMailContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailContent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            htmlContent\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            plainTextContent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        htmlContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        htmlContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plainTextContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        plainTextContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICollectionFilePath.html":{"url":"interfaces/ICollectionFilePath.html","title":"interface - ICollectionFilePath","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICollectionFilePath\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/uc/database-management.uc.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            collectionName\n                                        \n                                \n                                \n                                        \n                                            filePath\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        collectionName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        collectionName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filePath\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filePath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { orderBy } from 'lodash';\nimport { FileSystemAdapter } from '@shared/infra/file-system';\nimport { DatabaseManagementService } from '@shared/infra/database';\nimport { BsonConverter } from '../converter/bson.converter';\n\nexport interface ICollectionFilePath {\n\tfilePath: string;\n\tcollectionName: string;\n}\n\n@Injectable()\nexport class DatabaseManagementUc {\n\t/**\n\t * relative path to seed data folder based of location of this file.\n\t */\n\tprivate basePath = '../../../../../../backup';\n\n\tconstructor(\n\t\tprivate fileSystemAdapter: FileSystemAdapter,\n\t\tprivate databaseManagementService: DatabaseManagementService,\n\t\tprivate bsonConverter: BsonConverter\n\t) {}\n\n\t/**\n\t * absolute path reference for seed data base folder.\n\t */\n\tprivate get baseDir(): string {\n\t\tconst folderPath = this.fileSystemAdapter.joinPath(__dirname, this.basePath);\n\t\treturn folderPath;\n\t}\n\n\t/**\n\t * setup dir with json files\n\t */\n\tprivate getSeedFolder() {\n\t\treturn this.fileSystemAdapter.joinPath(this.baseDir, 'setup');\n\t}\n\n\t/**\n\t * export folder name based on current date\n\t * @returns\n\t */\n\tprivate getTargetFolder(toSeedFolder?: boolean) {\n\t\tif (toSeedFolder === true) {\n\t\t\tconst targetFolder = this.getSeedFolder();\n\t\t\treturn targetFolder;\n\t\t}\n\t\tconst now = new Date();\n\t\tconst currentDateTime = `${now.getFullYear()}_${\n\t\t\tnow.getMonth() + 1\n\t\t}_${now.getDate()}_${now.getHours()}_${now.getMinutes()}_${now.getSeconds()}`;\n\t\tconst targetFolder = this.fileSystemAdapter.joinPath(this.baseDir, currentDateTime);\n\t\treturn targetFolder;\n\t}\n\n\t/**\n\t * Loads all collection names from database and adds related file paths.\n\t * @returns {ICollectionFilePath}\n\t */\n\tprivate async loadAllCollectionsFromDatabase(targetFolder: string): Promise {\n\t\tconst collections = await this.databaseManagementService.getCollectionNames();\n\t\tconst collectionsWithFilePaths = collections.map((collectionName) => ({\n\t\t\tfilePath: this.fileSystemAdapter.joinPath(targetFolder, `${collectionName}.json`),\n\t\t\tcollectionName,\n\t\t}));\n\t\treturn collectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Loads all collection names and file paths from backup files.\n\t * @returns {ICollectionFilePath}\n\t */\n\tprivate async loadAllCollectionsFromFilesystem(baseDir: string): Promise {\n\t\tconst filenames = await this.fileSystemAdapter.readDir(baseDir);\n\t\tconst collectionsWithFilePaths = filenames.map((fileName) => ({\n\t\t\tfilePath: this.fileSystemAdapter.joinPath(baseDir, fileName),\n\t\t\tcollectionName: fileName.split('.')[0],\n\t\t}));\n\t\treturn collectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Scans  for existing collections and optionally filters them based on \n\t * @param source\n\t * @param collectionNameFilter\n\t * @returns {ICollectionFilePath} the filtered collection names and related file paths\n\t */\n\tprivate async loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\tsource: 'files' | 'database',\n\t\tfolder: string,\n\t\tcollectionNameFilter?: string[]\n\t) {\n\t\tlet allCollectionsWithFilePaths: ICollectionFilePath[] = [];\n\n\t\t// load all available collections from source\n\t\tif (source === 'files') {\n\t\t\tallCollectionsWithFilePaths = await this.loadAllCollectionsFromFilesystem(folder);\n\t\t} else {\n\t\t\t// source === 'database'\n\t\t\tallCollectionsWithFilePaths = await this.loadAllCollectionsFromDatabase(folder);\n\t\t}\n\n\t\t// when a collection name filter is given, apply it and check\n\t\tif (Array.isArray(collectionNameFilter) && collectionNameFilter.length > 0) {\n\t\t\tconst filteredCollectionsWithFilePaths = allCollectionsWithFilePaths.filter(({ collectionName }) =>\n\t\t\t\tcollectionNameFilter?.includes(collectionName)\n\t\t\t);\n\n\t\t\tif (filteredCollectionsWithFilePaths.length !== collectionNameFilter.length) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`At least one collectionName of ${JSON.stringify(\n\t\t\t\t\t\tcollectionNameFilter\n\t\t\t\t\t)} is invalid. Collection names available in '${source}' are: ${JSON.stringify(\n\t\t\t\t\t\tallCollectionsWithFilePaths.map((file) => file.collectionName)\n\t\t\t\t\t)}`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn filteredCollectionsWithFilePaths;\n\t\t}\n\n\t\treturn allCollectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Imports all or filtered  from filesystem as bson to database.\n\t * The behaviour should match $ mongoimport\n\t * @param collections optional filter applied on existing collections\n\t * @returns the list of collection names exported\n\t */\n\tasync seedDatabaseCollectionsFromFileSystem(collections?: string[]): Promise {\n\t\t// detect collections to seed based on filesystem data\n\t\tconst setupPath = this.getSeedFolder();\n\t\tconst collectionsToSeed = await this.loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\t\t'files',\n\t\t\tsetupPath,\n\t\t\tcollections\n\t\t);\n\n\t\tconst seededCollectionsWithAmount: string[] = [];\n\n\t\tawait Promise.all(\n\t\t\tcollectionsToSeed.map(async ({ filePath, collectionName }) => {\n\t\t\t\t// load text from backup file\n\t\t\t\tconst text = await this.fileSystemAdapter.readFile(filePath);\n\t\t\t\t// create bson-objects from text\n\t\t\t\tconst bsonDocuments = JSON.parse(text) as unknown[];\n\t\t\t\t// deserialize bson (format of mongoexport) to json documents we can import to mongo\n\t\t\t\tconst jsonDocuments = this.bsonConverter.deserialize(bsonDocuments);\n\n\t\t\t\t// hint: collection drop/create is very slow, delete all documents instead\n\t\t\t\tconst collectionExists = await this.databaseManagementService.collectionExists(collectionName);\n\t\t\t\tif (collectionExists) {\n\t\t\t\t\t// clear existing documents, if collection exists\n\t\t\t\t\tawait this.databaseManagementService.clearCollection(collectionName);\n\t\t\t\t} else {\n\t\t\t\t\t// create collection\n\t\t\t\t\tawait this.databaseManagementService.createCollection(collectionName);\n\t\t\t\t}\n\n\t\t\t\t// import backuop data into database collection\n\t\t\t\tconst importedDocumentsAmount = await this.databaseManagementService.importCollection(\n\t\t\t\t\tcollectionName,\n\t\t\t\t\tjsonDocuments\n\t\t\t\t);\n\t\t\t\t// keep collection name and number of imported documents\n\t\t\t\tseededCollectionsWithAmount.push(`${collectionName}:${importedDocumentsAmount}`);\n\t\t\t})\n\t\t);\n\t\treturn seededCollectionsWithAmount;\n\t}\n\n\t/**\n\t * Exports all or defined  from database as bson to filesystem.\n\t * The behaviour should match $ mongoexport\n\t * @param collections optional filter applied on existing collections\n\t * @param toSeedFolder optional override existing seed data files\n\t * @returns the list of collection names exported\n\t */\n\tasync exportCollectionsToFileSystem(collections?: string[], toSeedFolder?: boolean): Promise {\n\t\tconst targetFolder = this.getTargetFolder(toSeedFolder);\n\t\tawait this.fileSystemAdapter.createDir(targetFolder);\n\t\t// detect collections to export based on database collections\n\t\tconst collectionsToExport = await this.loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\t\t'database',\n\t\t\ttargetFolder,\n\t\t\tcollections\n\t\t);\n\t\tconst exportedCollections: string[] = [];\n\n\t\tawait Promise.all(\n\t\t\tcollectionsToExport.map(async ({ filePath, collectionName }) => {\n\t\t\t\t// load json documents from collection\n\t\t\t\tconst jsonDocuments = await this.databaseManagementService.findDocumentsOfCollection(collectionName);\n\t\t\t\t// serialize to bson (format of mongoexport)\n\t\t\t\tconst bsonDocuments = this.bsonConverter.serialize(jsonDocuments);\n\t\t\t\t// sort results to have 'new' data added at documents end\n\t\t\t\tconst sortedBsonDocuments = orderBy(bsonDocuments, ['_id.$oid', 'createdAt.$date'], ['asc', 'asc']);\n\t\t\t\t// convert to text\n\t\t\t\tconst TAB = '\t';\n\t\t\t\tconst text = JSON.stringify(sortedBsonDocuments, undefined, TAB);\n\t\t\t\t// persist to filesystem\n\t\t\t\tawait this.fileSystemAdapter.writeFile(filePath, text + this.fileSystemAdapter.EOL);\n\t\t\t\t// keep collection name and number of exported documents\n\t\t\t\texportedCollections.push(`${collectionName}:${sortedBsonDocuments.length}`);\n\t\t\t})\n\t\t);\n\t\treturn exportedCollections;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICourseGroupProperties.html":{"url":"interfaces/ICourseGroupProperties.html","title":"interface - ICourseGroupProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICourseGroupProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/coursegroup.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            course\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            students\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        course\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        course:         Course\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Course\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        students\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        students:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Collection, ManyToMany, ManyToOne } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { User } from './user.entity';\nimport type { Course } from './course.entity';\n\nexport interface ICourseGroupProperties {\n\tcourse: Course;\n\tstudents?: User[];\n}\n\n@Entity({ tableName: 'coursegroups' })\nexport class CourseGroup extends BaseEntityWithTimestamps {\n\t@ManyToMany('User', undefined, { fieldName: 'userIds' })\n\tstudents = new Collection(this);\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse: Course;\n\n\tconstructor(props: ICourseGroupProperties) {\n\t\tsuper();\n\t\tthis.course = props.course;\n\t\tif (props.students) this.students.set(props.students);\n\t}\n\n\tgetParentId(): ObjectId {\n\t\treturn this.course._id;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICourseProperties.html":{"url":"interfaces/ICourseProperties.html","title":"interface - ICourseProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICourseProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/course.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            school\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            students\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            substitutionTeachers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            teachers\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        school:         School\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         School\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        students\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        students:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        substitutionTeachers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        substitutionTeachers:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teachers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teachers:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, Index, ManyToOne, ManyToMany, Collection } from '@mikro-orm/core';\n\nimport { EntityId } from '../types';\n\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { School } from './school.entity';\nimport type { User } from './user.entity';\n\nexport interface ICourseProperties {\n\tname?: string;\n\tdescription?: string;\n\tschool: School;\n\tstudents?: User[];\n\tteachers?: User[];\n\tsubstitutionTeachers?: User[];\n\t// TODO: color format\n\tcolor?: string;\n}\n\n// that is really really shit default handling :D constructor, getter, js default, em default...what the hell\n// i hope it can cleanup with adding schema instant of I...Properties.\nconst DEFAULT = {\n\tcolor: '#ACACAC',\n\tname: 'Kurse',\n\tdescription: '',\n};\n\n@Index({ name: 'findAllForTeacher', properties: ['substitutionTeachers', 'teachers'] })\n@Entity({ tableName: 'courses' })\nexport class Course extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string = DEFAULT.name;\n\n\t@Property()\n\tdescription: string = DEFAULT.description;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@Index({ name: 'findAllForStudent' })\n\t@ManyToMany('User', undefined, { fieldName: 'userIds' })\n\tstudents = new Collection(this);\n\n\t@ManyToMany('User', undefined, { fieldName: 'teacherIds' })\n\tteachers = new Collection(this);\n\n\t@ManyToMany('User', undefined, { fieldName: 'substitutionIds' })\n\tsubstitutionTeachers = new Collection(this);\n\n\t// TODO: string color format\n\t@Property()\n\tcolor: string = DEFAULT.color;\n\n\tconstructor(props: ICourseProperties) {\n\t\tsuper();\n\t\tif (props.name) this.name = props.name;\n\t\tif (props.description) this.description = props.description;\n\t\tthis.school = props.school;\n\t\tif (props.students) this.students.set(props.students);\n\t\tif (props.teachers) this.teachers.set(props.teachers);\n\t\tif (props.substitutionTeachers) this.substitutionTeachers.set(props.substitutionTeachers);\n\t\tif (props.color) this.color = props.color;\n\t}\n\n\tgetNumberOfStudents(): number {\n\t\treturn this.students.length;\n\t}\n\n\tgetSubstitutionTeacherIds(): EntityId[] {\n\t\tconst substitutionIds = this.substitutionTeachers.getIdentifiers('id');\n\t\t// The result of getIdentifiers is a primary key type where we have no represent for it ((string | ObjectId) & IPrimaryKeyValue)[]\n\t\tconst idsAsString = substitutionIds.map((id) => id.toString());\n\n\t\treturn idsAsString;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICreateNews.html":{"url":"interfaces/ICreateNews.html","title":"interface - ICreateNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICreateNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/types/news.types.ts\n        \n\n\n            \n                Description\n            \n            \n                news interface for ceating news\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            displayAt\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from './entity-id';\nimport type { Course } from '../entity/course.entity';\nimport type { School } from '../entity/school.entity';\nimport type { Team } from '../entity/team.entity';\n\nexport enum NewsTargetModel {\n\t'School' = 'schools',\n\t'Course' = 'courses',\n\t'Team' = 'teams',\n}\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt?: Date;\n\ttarget: { targetModel: NewsTargetModel; targetId: EntityId };\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** interface for finding news with optional targetId */\nexport interface INewsScope {\n\ttarget?: { targetModel: NewsTargetModel; targetId?: EntityId };\n\tunpublished?: boolean;\n}\n\nexport type NewsTarget = School | Team | Course;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICurrentUser.html":{"url":"interfaces/ICurrentUser.html","title":"interface - ICurrentUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICurrentUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accountId\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            schoolId\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accountId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accountId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    account id as string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users role ids as string[]\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        schoolId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users schoolId as string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         IResolvedUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IResolvedUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    authenticated users id\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import type { Role } from '../entity/role.entity';\n\nexport interface IRole {\n\tname: string;\n\n\tid: string;\n}\n\nexport interface IResolvedUser {\n\tfirstName: string;\n\n\tlastName: string;\n\n\tid: string;\n\n\tcreatedAt: Date;\n\n\tupdatedAt: Date;\n\n\troles: IRole[];\n\n\tpermissions: string[];\n\n\tschoolId: string;\n}\n\nexport interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n\n\tuser: IResolvedUser;\n}\n\nexport type IPermissionsAndRoles = {\n\tpermissions: string[];\n\troles: Role[];\n};\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDashboardRepo.html":{"url":"interfaces/IDashboardRepo.html","title":"interface - IDashboardRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDashboardRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/dashboard.repo.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getDashboardById\n                                    \n                                \n                                \n                                    \n                                        getUsersDashboard\n                                    \n                                \n                                \n                                    \n                                        persistAndFlush\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDashboardById\n                        \n                    \n                \n            \n            \n                \ngetDashboardById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsersDashboard\n                        \n                    \n                \n            \n            \n                \ngetUsersDashboard()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \npersistAndFlush(entity: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, DashboardEntity, DefaultGridReference, GridElement, GridElementWithPosition } from '@shared/domain';\nimport { EntityManager, ObjectId } from '@mikro-orm/mongodb';\nimport { DashboardModelEntity } from './dashboard.model.entity';\nimport { DashboardModelMapper } from './dashboard.model.mapper';\n\nconst hardcodedTestDashboardId = '0000d213816abba584714c0a';\nconst generateHardcodedTestDashboard = () => {\n\tconst gridArray: GridElementWithPosition[] = [];\n\n\tgridArray.push({\n\t\tpos: { x: 1, y: 3 },\n\t\tgridElement: GridElement.FromPersistedReference(\n\t\t\tnew ObjectId().toString(),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'Math')\n\t\t),\n\t});\n\tgridArray.push({\n\t\tpos: { x: 1, y: 4 },\n\t\tgridElement: GridElement.FromPersistedGroup(new ObjectId().toString(), 'Science', [\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'Physics'),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'Biology'),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'Chemistry'),\n\t\t]),\n\t});\n\tgridArray.push({\n\t\tpos: { x: 2, y: 1 },\n\t\tgridElement: GridElement.FromPersistedReference(\n\t\t\tnew ObjectId().toString(),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'English')\n\t\t),\n\t});\n\tgridArray.push({\n\t\tpos: { x: 3, y: 1 },\n\t\tgridElement: GridElement.FromPersistedReference(\n\t\t\tnew ObjectId().toString(),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'German')\n\t\t),\n\t});\n\tgridArray.push({\n\t\tpos: { x: 4, y: 1 },\n\t\tgridElement: GridElement.FromPersistedReference(\n\t\t\tnew ObjectId().toString(),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'Greek')\n\t\t),\n\t});\n\n\tconst dashboard = new DashboardEntity(hardcodedTestDashboardId, { grid: gridArray });\n\treturn dashboard;\n};\n\nexport interface IDashboardRepo {\n\tgetUsersDashboard(): Promise;\n\tgetDashboardById(id: EntityId): Promise;\n\tpersistAndFlush(entity: DashboardEntity): Promise;\n}\n\n@Injectable()\nexport class DashboardRepo implements IDashboardRepo {\n\tconstructor(protected readonly em: EntityManager, protected readonly mapper: DashboardModelMapper) {}\n\n\t// ToDo: refactor this to be in an abstract class (see baseRepo)\n\tasync persist(entity: DashboardEntity): Promise {\n\t\tconst modelEntity = await this.mapper.mapDashboardToModel(entity);\n\t\tthis.em.persist(modelEntity);\n\t\treturn this.mapper.mapDashboardToEntity(modelEntity);\n\t}\n\n\tasync persistAndFlush(entity: DashboardEntity): Promise {\n\t\tconst modelEntity = await this.mapper.mapDashboardToModel(entity);\n\t\tawait this.em.persistAndFlush(modelEntity);\n\t\treturn this.mapper.mapDashboardToEntity(modelEntity);\n\t}\n\n\tasync getDashboardById(id: EntityId): Promise {\n\t\tconst dashboardModel = await this.em.findOneOrFail(DashboardModelEntity, id);\n\t\tconst dashboard = await this.mapper.mapDashboardToEntity(dashboardModel);\n\t\treturn dashboard;\n\t}\n\n\tasync getUsersDashboard(): Promise {\n\t\tconst dashboardModel = await this.em.findOne(DashboardModelEntity, hardcodedTestDashboardId);\n\t\tif (dashboardModel) {\n\t\t\treturn this.mapper.mapDashboardToEntity(dashboardModel);\n\t\t}\n\n\t\tconst dashboard = generateHardcodedTestDashboard();\n\t\tawait this.persistAndFlush(dashboard);\n\n\t\treturn dashboard;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IErrorType.html":{"url":"interfaces/IErrorType.html","title":"interface - IErrorType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IErrorType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/error-type.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            defaultMessage\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        defaultMessage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IErrorType {\n\treadonly type: string;\n\treadonly title: string;\n\treadonly defaultMessage: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFileProperties.html":{"url":"interfaces/IFileProperties.html","title":"interface - IFileProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFileProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/file.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bucket\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            creator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            deletedAt\n                                        \n                                \n                                \n                                        \n                                            storageFileName\n                                        \n                                \n                                \n                                        \n                                            storageProvider\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bucket\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bucket:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deletedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deletedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storageFileName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        storageFileName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storageProvider\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        storageProvider:         StorageProvider\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StorageProvider\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, ManyToOne } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { StorageProvider } from './storageprovider.entity';\nimport type { User } from './user.entity';\n\nexport interface IFileProperties {\n\tdeletedAt?: Date;\n\tstorageFileName: string;\n\tbucket: string;\n\tstorageProvider: StorageProvider;\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorColumn: 'isDirectory', abstract: true })\nexport abstract class BaseFile extends BaseEntityWithTimestamps {\n\t@Property()\n\tdeletedAt?: Date;\n\n\t@Property()\n\tisDirectory: boolean;\n\n\t@Property()\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorValue: 'true' })\nexport class Directory extends BaseFile {}\n\n@Entity({ collection: 'files', discriminatorValue: 'false' })\nexport class File extends BaseFile {\n\t@Property()\n\tstorageFileName: string;\n\n\t@Property()\n\tbucket: string;\n\n\t@ManyToOne('StorageProvider', { fieldName: 'storageProviderId' })\n\tstorageProvider: StorageProvider;\n\n\tconstructor(props: IFileProperties) {\n\t\tsuper();\n\t\tthis.isDirectory = false;\n\t\tthis.deletedAt = props.deletedAt;\n\t\tthis.storageFileName = props.storageFileName;\n\t\tthis.bucket = props.bucket;\n\t\tthis.storageProvider = props.storageProvider;\n\t\tthis.creator = props.creator;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFindOptions.html":{"url":"interfaces/IFindOptions.html","title":"interface - IFindOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFindOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/find-options.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            order\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pagination\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        order:         SortOrderMap\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SortOrderMap\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pagination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pagination:         IPagination\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IPagination\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPagination {\n\tskip?: number;\n\tlimit?: number;\n}\n\nexport enum SortOrder {\n\tasc = 'asc',\n\tdesc = 'desc',\n}\n\nexport type SortOrderMap = Partial>;\n\nexport interface IFindOptions {\n\tpagination?: IPagination;\n\torder?: SortOrderMap;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGridElement.html":{"url":"interfaces/IGridElement.html","title":"interface - IGridElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IGridElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            getContent\n                                        \n                                \n                                \n                                        \n                                            getId\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        addReferences\n                                    \n                                \n                                \n                                    \n                                        getReferences\n                                    \n                                \n                                \n                                    \n                                        hasId\n                                    \n                                \n                                \n                                    \n                                        isGroup\n                                    \n                                \n                                \n                                    \n                                        removeReference\n                                    \n                                \n                                \n                                    \n                                        setGroupName\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addReferences\n                        \n                    \n                \n            \n            \n                \naddReferences(anotherReference: IGridElementReference[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    anotherReference\n                                    \n                                                IGridElementReference[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferences\n                        \n                    \n                \n            \n            \n                \ngetReferences()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         IGridElementReference[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasId\n                        \n                    \n                \n            \n            \n                \nhasId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isGroup\n                        \n                    \n                \n            \n            \n                \nisGroup()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeReference\n                        \n                    \n                \n            \n            \n                \nremoveReference(index: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setGroupName\n                        \n                    \n                \n            \n            \n                \nsetGroupName(newGroupName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newGroupName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        getContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getContent:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getId:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NotFoundException, BadRequestException } from '@nestjs/common';\nimport { EntityId } from '../types/entity-id';\n\nconst defaultColumns = 6;\nconst defaultRows = 6;\n\nexport type GridElementReferenceMetadata = {\n\tid: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n};\n\nexport interface IGridElementReference {\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class DefaultGridReference implements IGridElementReference {\n\t// This is only a temporary fake class, for use until other references, like courses, are fully supported.\n\tid: EntityId;\n\n\ttitle: string;\n\n\tdisplayColor: string;\n\n\tconstructor(id: EntityId, title: string, displayColor = '#f23f76') {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.displayColor = displayColor;\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn {\n\t\t\tid: this.id,\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: this.title.substr(0, 2),\n\t\t\tdisplayColor: this.displayColor,\n\t\t};\n\t}\n}\n\nexport interface IGridElement {\n\thasId(): boolean;\n\n\tgetId: () => EntityId;\n\n\tgetContent: () => GridElementContent;\n\n\tisGroup(): boolean;\n\n\tremoveReference(index: number): void;\n\n\tgetReferences(): IGridElementReference[];\n\n\taddReferences(anotherReference: IGridElementReference[]): void;\n\n\tsetGroupName(newGroupName: string): void;\n}\n\nexport type GridElementContent = {\n\treferencedId?: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n\tgroup?: GridElementReferenceMetadata[];\n};\n\nexport class GridElement implements IGridElement {\n\tid: EntityId;\n\n\ttitle: string;\n\n\tprivate constructor(props: { id?: EntityId; title?: string; references: IGridElementReference[] }) {\n\t\tif (props.id) this.id = props.id;\n\t\tif (props.title) this.title = props.title;\n\t\tthis.references = props.references;\n\t}\n\n\tstatic FromPersistedReference(id: EntityId, reference: IGridElementReference): GridElement {\n\t\treturn new GridElement({ id, references: [reference] });\n\t}\n\n\tstatic FromPersistedGroup(id: EntityId, title: string, group: IGridElementReference[]): GridElement {\n\t\treturn new GridElement({ id, title, references: group });\n\t}\n\n\tstatic FromSingleReference(reference: IGridElementReference): GridElement {\n\t\treturn new GridElement({ references: [reference] });\n\t}\n\n\tstatic FromGroup(title: string, references: IGridElementReference[]): GridElement {\n\t\treturn new GridElement({ title, references });\n\t}\n\n\treferences: IGridElementReference[];\n\n\thasId(): boolean {\n\t\treturn !!this.id;\n\t}\n\n\tgetId(): EntityId {\n\t\treturn this.id;\n\t}\n\n\tgetReferences(): IGridElementReference[] {\n\t\treturn this.references;\n\t}\n\n\tremoveReference(index: number): void {\n\t\tif (!this.isGroup()) {\n\t\t\tthrow new BadRequestException('this element is not a group.');\n\t\t}\n\t\tif (index > 0 && this.references.length  reference.getMetadata());\n\t\tconst checkShortTitle = this.title ? this.title.substr(0, 2) : 'exampleTitle';\n\t\tconst groupMetadata = {\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: checkShortTitle,\n\t\t\tdisplayColor: 'exampleColor',\n\t\t\tgroup: groupData,\n\t\t};\n\t\treturn groupMetadata;\n\t}\n\n\tisGroup(): boolean {\n\t\treturn this.references.length > 1;\n\t}\n\n\tsetGroupName(newGroupName: string): void {\n\t\tif (!this.isGroup()) {\n\t\t\treturn;\n\t\t}\n\t\tthis.title = newGroupName;\n\t}\n}\n\nexport type GridPosition = { x: number; y: number };\nexport type GridPositionWithGroupIndex = { x: number; y: number; groupIndex?: number };\n\nexport type GridElementWithPosition = {\n\tgridElement: IGridElement;\n\tpos: GridPosition;\n};\n\nexport type DashboardProps = { colums?: number; rows?: number; grid: GridElementWithPosition[] };\n\nexport class DashboardEntity {\n\tid: EntityId;\n\n\tcolumns: number;\n\n\trows: number;\n\n\tgrid: Map;\n\n\tprivate gridIndexFromPosition(pos: GridPosition): number {\n\t\tif (pos.x > this.columns || pos.y > this.rows) {\n\t\t\tthrow new BadRequestException('dashboard element position is outside the grid.');\n\t\t}\n\t\treturn this.columns * pos.y + pos.x;\n\t}\n\n\tprivate positionFromGridIndex(index: number): GridPosition {\n\t\tconst y = Math.floor(index / this.columns);\n\t\tconst x = index % this.columns;\n\t\treturn { x, y };\n\t}\n\n\tconstructor(id: string, props: DashboardProps) {\n\t\tthis.columns = props.colums || defaultColumns;\n\t\tthis.rows = props.rows || defaultRows;\n\t\tthis.grid = new Map();\n\t\tprops.grid.forEach((element) => {\n\t\t\tthis.grid.set(this.gridIndexFromPosition(element.pos), element.gridElement);\n\t\t});\n\t\tthis.id = id;\n\t\tObject.assign(this, {});\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetGrid(): GridElementWithPosition[] {\n\t\tconst result = [...this.grid.keys()].map((key) => {\n\t\t\tconst position = this.positionFromGridIndex(key);\n\t\t\tconst value = this.grid.get(key) as IGridElement;\n\t\t\treturn {\n\t\t\t\tpos: position,\n\t\t\t\tgridElement: value,\n\t\t\t};\n\t\t});\n\t\treturn result;\n\t}\n\n\tgetElement(position: GridPosition): IGridElement {\n\t\tconst element = this.grid.get(this.gridIndexFromPosition(position));\n\t\tif (!element) {\n\t\t\tthrow new NotFoundException('no element at grid position');\n\t\t}\n\t\treturn element;\n\t}\n\n\tmoveElement(from: GridPositionWithGroupIndex, to: GridPositionWithGroupIndex): GridElementWithPosition {\n\t\tconst elementToMove = this.getReferencesFromPosition(from);\n\t\tconst resultElement = this.mergeElementIntoPosition(elementToMove, to);\n\t\tthis.removeFromPosition(from);\n\t\treturn {\n\t\t\tpos: to,\n\t\t\tgridElement: resultElement,\n\t\t};\n\t}\n\n\tprivate getReferencesFromPosition(position: GridPositionWithGroupIndex): IGridElement {\n\t\tconst elementToMove = this.getElement(position);\n\n\t\tif (typeof position.groupIndex === 'number' && elementToMove.isGroup()) {\n\t\t\tconst references = elementToMove.getReferences();\n\t\t\tconst referenceForIndex = references[position.groupIndex];\n\t\t\treturn GridElement.FromSingleReference(referenceForIndex);\n\t\t}\n\n\t\treturn elementToMove;\n\t}\n\n\tprivate removeFromPosition(position: GridPositionWithGroupIndex): void {\n\t\tconst element = this.getElement(position);\n\t\tif (typeof position.groupIndex === 'number') {\n\t\t\telement.removeReference(position.groupIndex);\n\t\t} else {\n\t\t\tthis.grid.delete(this.gridIndexFromPosition(position));\n\t\t}\n\t}\n\n\tprivate mergeElementIntoPosition(element: IGridElement, position: GridPosition): IGridElement {\n\t\tconst targetElement = this.grid.get(this.gridIndexFromPosition(position));\n\t\tif (targetElement) {\n\t\t\ttargetElement.addReferences(element.getReferences());\n\t\t\treturn targetElement;\n\t\t}\n\t\tthis.grid.set(this.gridIndexFromPosition(position), element);\n\t\treturn element;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGridElementReference.html":{"url":"interfaces/IGridElementReference.html","title":"interface - IGridElementReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IGridElementReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            getMetadata\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        getMetadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getMetadata:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NotFoundException, BadRequestException } from '@nestjs/common';\nimport { EntityId } from '../types/entity-id';\n\nconst defaultColumns = 6;\nconst defaultRows = 6;\n\nexport type GridElementReferenceMetadata = {\n\tid: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n};\n\nexport interface IGridElementReference {\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class DefaultGridReference implements IGridElementReference {\n\t// This is only a temporary fake class, for use until other references, like courses, are fully supported.\n\tid: EntityId;\n\n\ttitle: string;\n\n\tdisplayColor: string;\n\n\tconstructor(id: EntityId, title: string, displayColor = '#f23f76') {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.displayColor = displayColor;\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn {\n\t\t\tid: this.id,\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: this.title.substr(0, 2),\n\t\t\tdisplayColor: this.displayColor,\n\t\t};\n\t}\n}\n\nexport interface IGridElement {\n\thasId(): boolean;\n\n\tgetId: () => EntityId;\n\n\tgetContent: () => GridElementContent;\n\n\tisGroup(): boolean;\n\n\tremoveReference(index: number): void;\n\n\tgetReferences(): IGridElementReference[];\n\n\taddReferences(anotherReference: IGridElementReference[]): void;\n\n\tsetGroupName(newGroupName: string): void;\n}\n\nexport type GridElementContent = {\n\treferencedId?: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n\tgroup?: GridElementReferenceMetadata[];\n};\n\nexport class GridElement implements IGridElement {\n\tid: EntityId;\n\n\ttitle: string;\n\n\tprivate constructor(props: { id?: EntityId; title?: string; references: IGridElementReference[] }) {\n\t\tif (props.id) this.id = props.id;\n\t\tif (props.title) this.title = props.title;\n\t\tthis.references = props.references;\n\t}\n\n\tstatic FromPersistedReference(id: EntityId, reference: IGridElementReference): GridElement {\n\t\treturn new GridElement({ id, references: [reference] });\n\t}\n\n\tstatic FromPersistedGroup(id: EntityId, title: string, group: IGridElementReference[]): GridElement {\n\t\treturn new GridElement({ id, title, references: group });\n\t}\n\n\tstatic FromSingleReference(reference: IGridElementReference): GridElement {\n\t\treturn new GridElement({ references: [reference] });\n\t}\n\n\tstatic FromGroup(title: string, references: IGridElementReference[]): GridElement {\n\t\treturn new GridElement({ title, references });\n\t}\n\n\treferences: IGridElementReference[];\n\n\thasId(): boolean {\n\t\treturn !!this.id;\n\t}\n\n\tgetId(): EntityId {\n\t\treturn this.id;\n\t}\n\n\tgetReferences(): IGridElementReference[] {\n\t\treturn this.references;\n\t}\n\n\tremoveReference(index: number): void {\n\t\tif (!this.isGroup()) {\n\t\t\tthrow new BadRequestException('this element is not a group.');\n\t\t}\n\t\tif (index > 0 && this.references.length  reference.getMetadata());\n\t\tconst checkShortTitle = this.title ? this.title.substr(0, 2) : 'exampleTitle';\n\t\tconst groupMetadata = {\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: checkShortTitle,\n\t\t\tdisplayColor: 'exampleColor',\n\t\t\tgroup: groupData,\n\t\t};\n\t\treturn groupMetadata;\n\t}\n\n\tisGroup(): boolean {\n\t\treturn this.references.length > 1;\n\t}\n\n\tsetGroupName(newGroupName: string): void {\n\t\tif (!this.isGroup()) {\n\t\t\treturn;\n\t\t}\n\t\tthis.title = newGroupName;\n\t}\n}\n\nexport type GridPosition = { x: number; y: number };\nexport type GridPositionWithGroupIndex = { x: number; y: number; groupIndex?: number };\n\nexport type GridElementWithPosition = {\n\tgridElement: IGridElement;\n\tpos: GridPosition;\n};\n\nexport type DashboardProps = { colums?: number; rows?: number; grid: GridElementWithPosition[] };\n\nexport class DashboardEntity {\n\tid: EntityId;\n\n\tcolumns: number;\n\n\trows: number;\n\n\tgrid: Map;\n\n\tprivate gridIndexFromPosition(pos: GridPosition): number {\n\t\tif (pos.x > this.columns || pos.y > this.rows) {\n\t\t\tthrow new BadRequestException('dashboard element position is outside the grid.');\n\t\t}\n\t\treturn this.columns * pos.y + pos.x;\n\t}\n\n\tprivate positionFromGridIndex(index: number): GridPosition {\n\t\tconst y = Math.floor(index / this.columns);\n\t\tconst x = index % this.columns;\n\t\treturn { x, y };\n\t}\n\n\tconstructor(id: string, props: DashboardProps) {\n\t\tthis.columns = props.colums || defaultColumns;\n\t\tthis.rows = props.rows || defaultRows;\n\t\tthis.grid = new Map();\n\t\tprops.grid.forEach((element) => {\n\t\t\tthis.grid.set(this.gridIndexFromPosition(element.pos), element.gridElement);\n\t\t});\n\t\tthis.id = id;\n\t\tObject.assign(this, {});\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetGrid(): GridElementWithPosition[] {\n\t\tconst result = [...this.grid.keys()].map((key) => {\n\t\t\tconst position = this.positionFromGridIndex(key);\n\t\t\tconst value = this.grid.get(key) as IGridElement;\n\t\t\treturn {\n\t\t\t\tpos: position,\n\t\t\t\tgridElement: value,\n\t\t\t};\n\t\t});\n\t\treturn result;\n\t}\n\n\tgetElement(position: GridPosition): IGridElement {\n\t\tconst element = this.grid.get(this.gridIndexFromPosition(position));\n\t\tif (!element) {\n\t\t\tthrow new NotFoundException('no element at grid position');\n\t\t}\n\t\treturn element;\n\t}\n\n\tmoveElement(from: GridPositionWithGroupIndex, to: GridPositionWithGroupIndex): GridElementWithPosition {\n\t\tconst elementToMove = this.getReferencesFromPosition(from);\n\t\tconst resultElement = this.mergeElementIntoPosition(elementToMove, to);\n\t\tthis.removeFromPosition(from);\n\t\treturn {\n\t\t\tpos: to,\n\t\t\tgridElement: resultElement,\n\t\t};\n\t}\n\n\tprivate getReferencesFromPosition(position: GridPositionWithGroupIndex): IGridElement {\n\t\tconst elementToMove = this.getElement(position);\n\n\t\tif (typeof position.groupIndex === 'number' && elementToMove.isGroup()) {\n\t\t\tconst references = elementToMove.getReferences();\n\t\t\tconst referenceForIndex = references[position.groupIndex];\n\t\t\treturn GridElement.FromSingleReference(referenceForIndex);\n\t\t}\n\n\t\treturn elementToMove;\n\t}\n\n\tprivate removeFromPosition(position: GridPositionWithGroupIndex): void {\n\t\tconst element = this.getElement(position);\n\t\tif (typeof position.groupIndex === 'number') {\n\t\t\telement.removeReference(position.groupIndex);\n\t\t} else {\n\t\t\tthis.grid.delete(this.gridIndexFromPosition(position));\n\t\t}\n\t}\n\n\tprivate mergeElementIntoPosition(element: IGridElement, position: GridPosition): IGridElement {\n\t\tconst targetElement = this.grid.get(this.gridIndexFromPosition(position));\n\t\tif (targetElement) {\n\t\t\ttargetElement.addReferences(element.getReferences());\n\t\t\treturn targetElement;\n\t\t}\n\t\tthis.grid.set(this.gridIndexFromPosition(position), element);\n\t\treturn element;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILessonProperties.html":{"url":"interfaces/ILessonProperties.html","title":"interface - ILessonProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILessonProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/lesson.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            course\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hidden\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        course\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        course:         Course\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Course\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, ManyToOne, Property, Index } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\n\nexport interface ILessonProperties {\n\tname: string;\n\thidden?: boolean;\n\tcourse: Course;\n}\n\n@Entity({ tableName: 'lessons' })\nexport class Lesson extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Index({ name: 'findAllByCourseIds' })\n\t@Property()\n\thidden = false;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse: Course;\n\n\tconstructor(props: ILessonProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tif (props.hidden !== undefined) this.hidden = props.hidden;\n\t\tthis.course = props.course;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILogger.html":{"url":"interfaces/ILogger.html","title":"interface - ILogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Optional\n                                    \n                                        debug\n                                    \n                                \n                                \n                                    \n                                        error\n                                    \n                                \n                                \n                                    \n                                        log\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        verbose\n                                    \n                                \n                                \n                                    \n                                        warn\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: any, trace?: string, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    trace\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        verbose\n                        \n                    \n                \n            \n            \n                \nverbose(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface ILogger {\n\tlog(message: any, context?: string): any;\n\terror(message: any, trace?: string, context?: string): any;\n\twarn(message: any, context?: string): any;\n\tdebug?(message: any, context?: string): any;\n\tverbose?(message: any, context?: string): any;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsProperties.html":{"url":"interfaces/INewsProperties.html","title":"interface - INewsProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  INewsProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/news.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            creator\n                                        \n                                \n                                \n                                        \n                                            displayAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            externalId\n                                        \n                                \n                                \n                                        \n                                            school\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            source\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sourceDescription\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updater\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator:         EntityId | User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId | User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        externalId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        externalId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        school:         EntityId | School\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId | School\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source:     \"internal\" | \"rss\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"internal\" | \"rss\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sourceDescription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sourceDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         EntityId | NewsTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId | NewsTarget\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updater\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updater:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { School } from './school.entity';\nimport type { Team } from './team.entity';\nimport type { User } from './user.entity';\nimport { NewsTarget, NewsTargetModel } from '../types/news.types';\nimport { EntityId } from '../types';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId | School;\n\tcreator: EntityId | User;\n\ttarget: EntityId | NewsTarget;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: User;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTarget;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToOne('User', { fieldName: 'creatorId' })\n\tcreator!: User;\n\n\t@ManyToOne('User', { fieldName: 'updaterId' })\n\tupdater?: User;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, updater: props.updater, target: props.target });\n\t\tthis.externalId = props.externalId;\n\t\tthis.source = props.source;\n\t\tthis.sourceDescription = props.sourceDescription;\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne('School')\n\ttarget: School;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne('Course')\n\ttarget: Course;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne('Team')\n\ttarget: Team;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsScope.html":{"url":"interfaces/INewsScope.html","title":"interface - INewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  INewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/types/news.types.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for finding news with optional targetId\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            target\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            unpublished\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unpublished\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unpublished:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from './entity-id';\nimport type { Course } from '../entity/course.entity';\nimport type { School } from '../entity/school.entity';\nimport type { Team } from '../entity/team.entity';\n\nexport enum NewsTargetModel {\n\t'School' = 'schools',\n\t'Course' = 'courses',\n\t'Team' = 'teams',\n}\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt?: Date;\n\ttarget: { targetModel: NewsTargetModel; targetId: EntityId };\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** interface for finding news with optional targetId */\nexport interface INewsScope {\n\ttarget?: { targetModel: NewsTargetModel; targetId?: EntityId };\n\tunpublished?: boolean;\n}\n\nexport type NewsTarget = School | Team | Course;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPagination.html":{"url":"interfaces/IPagination.html","title":"interface - IPagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/find-options.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            limit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            skip\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPagination {\n\tskip?: number;\n\tlimit?: number;\n}\n\nexport enum SortOrder {\n\tasc = 'asc',\n\tdesc = 'desc',\n}\n\nexport type SortOrderMap = Partial>;\n\nexport interface IFindOptions {\n\tpagination?: IPagination;\n\torder?: SortOrderMap;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IResolvedUser.html":{"url":"interfaces/IResolvedUser.html","title":"interface - IResolvedUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IResolvedUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            schoolId\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         IRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IRole[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        schoolId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { Role } from '../entity/role.entity';\n\nexport interface IRole {\n\tname: string;\n\n\tid: string;\n}\n\nexport interface IResolvedUser {\n\tfirstName: string;\n\n\tlastName: string;\n\n\tid: string;\n\n\tcreatedAt: Date;\n\n\tupdatedAt: Date;\n\n\troles: IRole[];\n\n\tpermissions: string[];\n\n\tschoolId: string;\n}\n\nexport interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n\n\tuser: IResolvedUser;\n}\n\nexport type IPermissionsAndRoles = {\n\tpermissions: string[];\n\troles: Role[];\n};\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRole.html":{"url":"interfaces/IRole.html","title":"interface - IRole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { Role } from '../entity/role.entity';\n\nexport interface IRole {\n\tname: string;\n\n\tid: string;\n}\n\nexport interface IResolvedUser {\n\tfirstName: string;\n\n\tlastName: string;\n\n\tid: string;\n\n\tcreatedAt: Date;\n\n\tupdatedAt: Date;\n\n\troles: IRole[];\n\n\tpermissions: string[];\n\n\tschoolId: string;\n}\n\nexport interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n\n\tuser: IResolvedUser;\n}\n\nexport type IPermissionsAndRoles = {\n\tpermissions: string[];\n\troles: Role[];\n};\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRoleProperties.html":{"url":"interfaces/IRoleProperties.html","title":"interface - IRoleProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRoleProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/role.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            permissions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            roles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         Role[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, Unique, Index, ManyToMany, Collection } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface IRoleProperties {\n\tpermissions?: string[];\n\troles?: Role[];\n\tname: string;\n}\n\n@Entity({ tableName: 'roles' })\nexport class Role extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'primaryRoleSearchOperation' })\n\t@Unique()\n\tname: string;\n\n\t// @Enum({ items: ['a', 'b', 'c'] }) in array with no permission is valid => validator function\n\t@Property()\n\tpermissions: string[] = [];\n\t// TODO: enum\n\n\t// @ManyToMany('Role', 'roles')\n\t// roles = new Collection(this);\n\n\t// @ManyToMany({ fieldName: 'roles', type: Role })\n\t// roles = new Collection(this);\n\n\t@ManyToMany('Role')\n\troles = new Collection(this);\n\n\tconstructor(props: IRoleProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tif (props.permissions) this.permissions = props.permissions;\n\t\tif (props.roles) this.roles.set(props.roles);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISchoolProperties.html":{"url":"interfaces/ISchoolProperties.html","title":"interface - ISchoolProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISchoolProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/school.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from './base.entity';\n\nexport interface ISchoolProperties {\n\tname: string;\n}\n@Entity({ tableName: 'schools' })\nexport class School extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: ISchoolProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IStorageProviderProperties.html":{"url":"interfaces/IStorageProviderProperties.html","title":"interface - IStorageProviderProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IStorageProviderProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/storageprovider.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessKeyId\n                                        \n                                \n                                \n                                        \n                                            endpointUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            region\n                                        \n                                \n                                \n                                        \n                                            secretAccessKey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessKeyId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessKeyId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endpointUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endpointUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        region\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        region:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secretAccessKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secretAccessKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { EncryptedStringType } from '@shared/repo/types/EncryptedString.type';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface IStorageProviderProperties {\n\tendpointUrl: string;\n\taccessKeyId: string;\n\tsecretAccessKey: string;\n\tregion?: string;\n}\n\n@Entity({ tableName: 'storageproviders' })\nexport class StorageProvider extends BaseEntityWithTimestamps {\n\t@Property()\n\tendpointUrl!: string;\n\n\t@Property()\n\taccessKeyId!: string;\n\n\t@Property({ fieldName: 'secretAccessKey', type: EncryptedStringType })\n\tsecretAccessKey!: string;\n\n\t@Property()\n\tregion?: string;\n\n\tconstructor(props: IStorageProviderProperties) {\n\t\tsuper();\n\t\tthis.endpointUrl = props.endpointUrl;\n\t\tthis.accessKeyId = props.accessKeyId;\n\t\tthis.secretAccessKey = props.secretAccessKey;\n\t\tthis.region = props.region;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISubmissionProperties.html":{"url":"interfaces/ISubmissionProperties.html","title":"interface - ISubmissionProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISubmissionProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/submission.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            comment\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            courseGroup\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            grade\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            gradeComment\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            gradeFiles\n                                        \n                                \n                                \n                                        \n                                            student\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            studentFiles\n                                        \n                                \n                                \n                                        \n                                            task\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            teamMembers\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        courseGroup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        courseGroup:     CourseGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CourseGroup[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        grade\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        grade:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gradeComment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gradeComment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gradeFiles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gradeFiles:         File[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         File[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        student\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        student:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        studentFiles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        studentFiles:         File[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         File[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task:         Task\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Task\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teamMembers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teamMembers:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, ManyToOne, Collection, Property, ManyToMany } from '@mikro-orm/core';\n\nimport { EntityId } from '../types';\n\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { CourseGroup } from './coursegroup.entity';\nimport type { User } from './user.entity';\nimport type { File } from './file.entity';\nimport type { Task } from './task.entity';\n\nexport interface ISubmissionProperties {\n\ttask: Task;\n\tstudent: User;\n\tcourseGroup?: CourseGroup[];\n\tteamMembers?: User[];\n\tcomment: string;\n\tstudentFiles?: File[];\n\tgrade?: number;\n\tgradeComment?: string;\n\tgradeFiles?: File[];\n}\n\n@Entity({ tableName: 'submissions' })\nexport class Submission extends BaseEntityWithTimestamps {\n\t@ManyToOne('Task', { fieldName: 'homeworkId' })\n\ttask: Task;\n\n\t@ManyToOne('User', { fieldName: 'studentId' })\n\tstudent: User;\n\n\t@ManyToOne('CourseGroup', { fieldName: 'courseGroupId' })\n\tcourseGroup?: CourseGroup;\n\n\t@ManyToMany('User', undefined, { fieldName: 'teamMembers' })\n\tteamMembers = new Collection(this);\n\n\t/* ***** student uploads ***** */\n\t@Property()\n\tcomment: string | null;\n\n\t@ManyToMany('File', undefined, { fieldName: 'fileIds' })\n\tstudentFiles = new Collection(this);\n\n\t/* ***** teacher uploads ***** */\n\t@Property()\n\tgrade: number | null;\n\n\t@Property()\n\tgradeComment: string | null;\n\n\t@ManyToMany('File', undefined, { fieldName: 'gradeFileIds' })\n\tgradeFiles = new Collection(this);\n\n\tconstructor(props: ISubmissionProperties) {\n\t\tsuper();\n\t\tthis.student = props.student;\n\t\tthis.comment = props.comment;\n\t\tthis.task = props.task;\n\n\t\tthis.grade = props.grade || null;\n\t\tthis.gradeComment = props.gradeComment || null;\n\n\t\tconst { courseGroup, teamMembers, studentFiles, gradeFiles } = props;\n\t\tObject.assign(this, { courseGroup, teamMembers, studentFiles, gradeFiles });\n\t}\n\n\tisGraded(): boolean {\n\t\tconst isGraded =\n\t\t\t(typeof this.grade === 'number' && this.grade >= 0) ||\n\t\t\t(typeof this.gradeComment === 'string' && this.gradeComment.length > 0) ||\n\t\t\t(this.gradeFiles !== undefined && this.gradeFiles.length > 0);\n\t\treturn isGraded;\n\t}\n\n\tgetStudentId(): EntityId {\n\t\treturn this.student.id;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITaskProperties.html":{"url":"interfaces/ITaskProperties.html","title":"interface - ITaskProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITaskProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/task.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            availableDate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            closed\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            course\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dueDate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lesson\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            private\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            submissions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            teacher\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        availableDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        availableDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        closed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        closed:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        course:         Course\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Course\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dueDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dueDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lesson\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lesson:         Lesson\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Lesson\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        private\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        private:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        submissions:         Submission[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Submission[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teacher\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teacher:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Collection, Entity, ManyToOne, OneToMany, ManyToMany, Property, Index } from '@mikro-orm/core';\n\nimport { EntityId } from '../types';\n\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { Lesson } from './lesson.entity';\nimport type { Submission } from './submission.entity';\nimport { User } from './user.entity';\n\nexport interface ITaskProperties {\n\tname: string;\n\tavailableDate?: Date;\n\tdueDate?: Date;\n\tprivate?: boolean;\n\tteacher?: User;\n\tcourse?: Course;\n\tlesson?: Lesson;\n\tsubmissions?: Submission[];\n\tclosed?: User[];\n}\n\nexport interface ITaskStatus {\n\tsubmitted: number;\n\tmaxSubmissions: number;\n\tgraded: number;\n\tisDraft: boolean;\n\tisSubstitutionTeacher: boolean;\n}\n\nexport class TaskWithStatusVo {\n\ttask!: Task;\n\n\tstatus!: ITaskStatus;\n\n\tconstructor(task: Task, status: ITaskStatus) {\n\t\tthis.task = task;\n\t\tthis.status = status;\n\t}\n}\n\nexport type TaskParentDescriptions = { name: string; description: string; color: string };\n\n@Entity({ tableName: 'homeworks' })\n@Index({ name: 'findAllByParentIds_findAllForStudent', properties: ['private', 'dueDate', 'closed'] })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tavailableDate?: Date;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate = true;\n\n\t@ManyToOne('User', { fieldName: 'teacherId' })\n\tteacher?: User;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse?: Course;\n\n\t@ManyToOne('Lesson', { fieldName: 'lessonId' })\n\tlesson?: Lesson; // In database exist also null, but it can not set.\n\n\t@OneToMany('Submission', 'task')\n\tsubmissions = new Collection(this);\n\n\t// TODO: is mapped to boolean in future\n\t@Index({ name: 'findAllByParentIds_findAllForTeacher' })\n\t@ManyToMany('User', undefined, { fieldName: 'archived' })\n\tclosed = new Collection(this);\n\n\tconstructor(props: ITaskProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.availableDate = props.availableDate;\n\t\tthis.dueDate = props.dueDate;\n\t\tif (props.private !== undefined) this.private = props.private;\n\t\tthis.teacher = props.teacher;\n\t\tthis.course = props.course;\n\t\tthis.lesson = props.lesson;\n\t\tthis.submissions.set(props.submissions || []);\n\t\t// TODO: is replaced with boolean in future\n\t\tthis.closed.set(props.closed || []);\n\t}\n\n\tisDraft(): boolean {\n\t\t// private can be undefined in the database\n\t\treturn !!this.private;\n\t}\n\n\tprivate getSubmissionsItems(): Submission[] {\n\t\t// TODO: load/init check until mikro-orm base entity is extended\n\t\tconst submissions = this.submissions.getItems();\n\t\treturn submissions;\n\t}\n\n\tgetSubmittedUserIds(): EntityId[] {\n\t\tconst submissions = this.getSubmissionsItems();\n\t\tconst submittedUserIds = submissions.map((submission) => submission.getStudentId());\n\n\t\treturn submittedUserIds;\n\t}\n\n\tgetNumberOfSubmittedUsers(): number {\n\t\tconst submittedUserIds = this.getSubmittedUserIds();\n\t\tconst submitted = [...new Set(submittedUserIds)].length;\n\n\t\treturn submitted;\n\t}\n\n\tgetGradedUserIds(): EntityId[] {\n\t\tconst gradedUserIds = this.getSubmissionsItems()\n\t\t\t.filter((submission) => submission.isGraded())\n\t\t\t.map((submission) => submission.getStudentId());\n\n\t\treturn gradedUserIds;\n\t}\n\n\tgetNumberOfGradedUsers(): number {\n\t\tconst gradedUserIds = this.getGradedUserIds();\n\t\tconst graded = [...new Set(gradedUserIds)].length;\n\n\t\treturn graded;\n\t}\n\n\t// attention based on this parent use this.getParent() instant\n\tgetMaxSubmissions(): number {\n\t\t// hack until parents are defined\n\t\tconst numberOfStudents = this.course ? this.course.getNumberOfStudents() : 0;\n\n\t\treturn numberOfStudents;\n\t}\n\n\tcreateTeacherStatusForUser(userId: EntityId): ITaskStatus {\n\t\tconst submitted = this.getNumberOfSubmittedUsers();\n\t\tconst graded = this.getNumberOfGradedUsers();\n\t\tconst maxSubmissions = this.getMaxSubmissions();\n\t\tconst isDraft = this.isDraft();\n\t\t// only point that need the parameter\n\t\t// const isSubstitutionTeacher = this.isSubstitutionTeacher(userId);\n\t\t// work with getParent()\n\t\tlet isSubstitutionTeacher = false;\n\t\tif (this.course) {\n\t\t\tisSubstitutionTeacher = this.course.getSubstitutionTeacherIds().includes(userId);\n\t\t}\n\n\t\tconst status = {\n\t\t\tsubmitted,\n\t\t\tgraded,\n\t\t\tmaxSubmissions,\n\t\t\tisDraft,\n\t\t\tisSubstitutionTeacher,\n\t\t};\n\n\t\treturn status;\n\t}\n\n\tisSubmittedForUser(userId: EntityId): boolean {\n\t\tconst submitted = this.getSubmittedUserIds().some((id) => userId === id);\n\n\t\treturn submitted;\n\t}\n\n\tisGradedForUser(userId: EntityId): boolean {\n\t\tconst graded = this.getGradedUserIds().some((id) => userId === id);\n\n\t\treturn graded;\n\t}\n\n\tcreateStudentStatusForUser(userId: EntityId): ITaskStatus {\n\t\tconst isSubmitted = this.isSubmittedForUser(userId);\n\t\tconst isGraded = this.isGradedForUser(userId);\n\t\tconst maxSubmissions = 1;\n\t\tconst isDraft = this.isDraft();\n\t\tconst isSubstitutionTeacher = false;\n\n\t\tconst status = {\n\t\t\tsubmitted: isSubmitted ? 1 : 0,\n\t\t\tgraded: isGraded ? 1 : 0,\n\t\t\tmaxSubmissions,\n\t\t\tisDraft,\n\t\t\tisSubstitutionTeacher,\n\t\t\t// TODO: visibility of parent is missed ..but isSubstitutionTeacher and this is not really a part from task,\n\t\t\t// for this we must add parent relationship\n\t\t};\n\n\t\treturn status;\n\t}\n\n\t// TODO: based on the parent relationship\n\tgetDescriptions(): TaskParentDescriptions {\n\t\tlet descriptions: TaskParentDescriptions;\n\t\tif (this.course) {\n\t\t\tdescriptions = {\n\t\t\t\tname: this.course.name,\n\t\t\t\tdescription: this.lesson ? this.lesson.name : '',\n\t\t\t\tcolor: this.course.color,\n\t\t\t};\n\t\t} else {\n\t\t\tdescriptions = {\n\t\t\t\tname: '',\n\t\t\t\tdescription: '',\n\t\t\t\tcolor: '#ACACAC',\n\t\t\t};\n\t\t}\n\n\t\treturn descriptions;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITaskStatus.html":{"url":"interfaces/ITaskStatus.html","title":"interface - ITaskStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITaskStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/task.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            graded\n                                        \n                                \n                                \n                                        \n                                            isDraft\n                                        \n                                \n                                \n                                        \n                                            isSubstitutionTeacher\n                                        \n                                \n                                \n                                        \n                                            maxSubmissions\n                                        \n                                \n                                \n                                        \n                                            submitted\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        graded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        graded:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isDraft\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isDraft:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isSubstitutionTeacher\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isSubstitutionTeacher:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxSubmissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxSubmissions:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submitted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        submitted:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Collection, Entity, ManyToOne, OneToMany, ManyToMany, Property, Index } from '@mikro-orm/core';\n\nimport { EntityId } from '../types';\n\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { Lesson } from './lesson.entity';\nimport type { Submission } from './submission.entity';\nimport { User } from './user.entity';\n\nexport interface ITaskProperties {\n\tname: string;\n\tavailableDate?: Date;\n\tdueDate?: Date;\n\tprivate?: boolean;\n\tteacher?: User;\n\tcourse?: Course;\n\tlesson?: Lesson;\n\tsubmissions?: Submission[];\n\tclosed?: User[];\n}\n\nexport interface ITaskStatus {\n\tsubmitted: number;\n\tmaxSubmissions: number;\n\tgraded: number;\n\tisDraft: boolean;\n\tisSubstitutionTeacher: boolean;\n}\n\nexport class TaskWithStatusVo {\n\ttask!: Task;\n\n\tstatus!: ITaskStatus;\n\n\tconstructor(task: Task, status: ITaskStatus) {\n\t\tthis.task = task;\n\t\tthis.status = status;\n\t}\n}\n\nexport type TaskParentDescriptions = { name: string; description: string; color: string };\n\n@Entity({ tableName: 'homeworks' })\n@Index({ name: 'findAllByParentIds_findAllForStudent', properties: ['private', 'dueDate', 'closed'] })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tavailableDate?: Date;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate = true;\n\n\t@ManyToOne('User', { fieldName: 'teacherId' })\n\tteacher?: User;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse?: Course;\n\n\t@ManyToOne('Lesson', { fieldName: 'lessonId' })\n\tlesson?: Lesson; // In database exist also null, but it can not set.\n\n\t@OneToMany('Submission', 'task')\n\tsubmissions = new Collection(this);\n\n\t// TODO: is mapped to boolean in future\n\t@Index({ name: 'findAllByParentIds_findAllForTeacher' })\n\t@ManyToMany('User', undefined, { fieldName: 'archived' })\n\tclosed = new Collection(this);\n\n\tconstructor(props: ITaskProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.availableDate = props.availableDate;\n\t\tthis.dueDate = props.dueDate;\n\t\tif (props.private !== undefined) this.private = props.private;\n\t\tthis.teacher = props.teacher;\n\t\tthis.course = props.course;\n\t\tthis.lesson = props.lesson;\n\t\tthis.submissions.set(props.submissions || []);\n\t\t// TODO: is replaced with boolean in future\n\t\tthis.closed.set(props.closed || []);\n\t}\n\n\tisDraft(): boolean {\n\t\t// private can be undefined in the database\n\t\treturn !!this.private;\n\t}\n\n\tprivate getSubmissionsItems(): Submission[] {\n\t\t// TODO: load/init check until mikro-orm base entity is extended\n\t\tconst submissions = this.submissions.getItems();\n\t\treturn submissions;\n\t}\n\n\tgetSubmittedUserIds(): EntityId[] {\n\t\tconst submissions = this.getSubmissionsItems();\n\t\tconst submittedUserIds = submissions.map((submission) => submission.getStudentId());\n\n\t\treturn submittedUserIds;\n\t}\n\n\tgetNumberOfSubmittedUsers(): number {\n\t\tconst submittedUserIds = this.getSubmittedUserIds();\n\t\tconst submitted = [...new Set(submittedUserIds)].length;\n\n\t\treturn submitted;\n\t}\n\n\tgetGradedUserIds(): EntityId[] {\n\t\tconst gradedUserIds = this.getSubmissionsItems()\n\t\t\t.filter((submission) => submission.isGraded())\n\t\t\t.map((submission) => submission.getStudentId());\n\n\t\treturn gradedUserIds;\n\t}\n\n\tgetNumberOfGradedUsers(): number {\n\t\tconst gradedUserIds = this.getGradedUserIds();\n\t\tconst graded = [...new Set(gradedUserIds)].length;\n\n\t\treturn graded;\n\t}\n\n\t// attention based on this parent use this.getParent() instant\n\tgetMaxSubmissions(): number {\n\t\t// hack until parents are defined\n\t\tconst numberOfStudents = this.course ? this.course.getNumberOfStudents() : 0;\n\n\t\treturn numberOfStudents;\n\t}\n\n\tcreateTeacherStatusForUser(userId: EntityId): ITaskStatus {\n\t\tconst submitted = this.getNumberOfSubmittedUsers();\n\t\tconst graded = this.getNumberOfGradedUsers();\n\t\tconst maxSubmissions = this.getMaxSubmissions();\n\t\tconst isDraft = this.isDraft();\n\t\t// only point that need the parameter\n\t\t// const isSubstitutionTeacher = this.isSubstitutionTeacher(userId);\n\t\t// work with getParent()\n\t\tlet isSubstitutionTeacher = false;\n\t\tif (this.course) {\n\t\t\tisSubstitutionTeacher = this.course.getSubstitutionTeacherIds().includes(userId);\n\t\t}\n\n\t\tconst status = {\n\t\t\tsubmitted,\n\t\t\tgraded,\n\t\t\tmaxSubmissions,\n\t\t\tisDraft,\n\t\t\tisSubstitutionTeacher,\n\t\t};\n\n\t\treturn status;\n\t}\n\n\tisSubmittedForUser(userId: EntityId): boolean {\n\t\tconst submitted = this.getSubmittedUserIds().some((id) => userId === id);\n\n\t\treturn submitted;\n\t}\n\n\tisGradedForUser(userId: EntityId): boolean {\n\t\tconst graded = this.getGradedUserIds().some((id) => userId === id);\n\n\t\treturn graded;\n\t}\n\n\tcreateStudentStatusForUser(userId: EntityId): ITaskStatus {\n\t\tconst isSubmitted = this.isSubmittedForUser(userId);\n\t\tconst isGraded = this.isGradedForUser(userId);\n\t\tconst maxSubmissions = 1;\n\t\tconst isDraft = this.isDraft();\n\t\tconst isSubstitutionTeacher = false;\n\n\t\tconst status = {\n\t\t\tsubmitted: isSubmitted ? 1 : 0,\n\t\t\tgraded: isGraded ? 1 : 0,\n\t\t\tmaxSubmissions,\n\t\t\tisDraft,\n\t\t\tisSubstitutionTeacher,\n\t\t\t// TODO: visibility of parent is missed ..but isSubstitutionTeacher and this is not really a part from task,\n\t\t\t// for this we must add parent relationship\n\t\t};\n\n\t\treturn status;\n\t}\n\n\t// TODO: based on the parent relationship\n\tgetDescriptions(): TaskParentDescriptions {\n\t\tlet descriptions: TaskParentDescriptions;\n\t\tif (this.course) {\n\t\t\tdescriptions = {\n\t\t\t\tname: this.course.name,\n\t\t\t\tdescription: this.lesson ? this.lesson.name : '',\n\t\t\t\tcolor: this.course.color,\n\t\t\t};\n\t\t} else {\n\t\t\tdescriptions = {\n\t\t\t\tname: '',\n\t\t\t\tdescription: '',\n\t\t\t\tcolor: '#ACACAC',\n\t\t\t};\n\t\t}\n\n\t\treturn descriptions;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITeamProperties.html":{"url":"interfaces/ITeamProperties.html","title":"interface - ITeamProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITeamProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/team.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from './base.entity';\n\nexport interface ITeamProperties {\n\tname: string;\n}\n@Entity({ tableName: 'teams' })\nexport class Team extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: ITeamProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserProperties.html":{"url":"interfaces/IUserProperties.html","title":"interface - IUserProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/user.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            firstName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            school\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         Role[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        school:         School\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         School\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Collection, Entity, ManyToMany, ManyToOne, Property, Index, Unique } from '@mikro-orm/core';\nimport type { Role } from './role.entity';\nimport type { School } from './school.entity';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface IUserProperties {\n\temail: string;\n\tfirstName?: string;\n\tlastName?: string;\n\tschool: School;\n\troles: Role[];\n}\n\n@Entity({ tableName: 'users' })\nexport class User extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'externalUserIdentifier' })\n\t@Unique()\n\temail: string;\n\n\t@Property()\n\tfirstName?: string;\n\n\t@Property()\n\tlastName?: string;\n\n\t@Index({ name: 'roleIdBasedSearches' })\n\t@ManyToMany('Role', undefined, { fieldName: 'roles' })\n\troles = new Collection(this);\n\n\t@Index({ name: 'searchUserForSchool' })\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\tconstructor(props: IUserProperties) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.email = props.email;\n\t\tthis.school = props.school;\n\t\tthis.roles.set(props.roles);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InlineAttachment.html":{"url":"interfaces/InlineAttachment.html","title":"interface - InlineAttachment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InlineAttachment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailAttachment\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contentDisposition\n                                        \n                                \n                                \n                                        \n                                            contentId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contentDisposition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentDisposition:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contentId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InterceptorModule.html":{"url":"modules/InterceptorModule.html","title":"module - InterceptorModule","body":"\n                   \n\n\n\n\n    Modules\n    InterceptorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/interceptor/interceptor.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            \nGlobal Interceptor setup\n\nHere, we globally apply\n\nvalidate input data using @ClassSerializerInterceptor\nset a timeout for requests using @TimeoutInterceptor\n\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ClassSerializerInterceptor, Module } from '@nestjs/common';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\nimport { TimeoutInterceptor } from '@shared/common';\n\n/** *********************************************\n * Global Interceptor setup\n * **********************************************\n * Here, we globally apply\n * - validate input data using @ClassSerializerInterceptor\n * - set a timeout for requests using @TimeoutInterceptor\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\tuseClass: ClassSerializerInterceptor,\n\t\t},\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR, // TODO remove (for testing)\n\t\t\tuseClass: TimeoutInterceptor,\n\t\t},\n\t],\n})\nexport class InterceptorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/guard/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtConstants.html":{"url":"interfaces/JwtConstants.html","title":"interface - JwtConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/constants.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            jwtOptions\n                                        \n                                \n                                \n                                        \n                                            secret\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        jwtOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jwtOptions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secret\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import externalAuthConfig = require('../../../../../src/services/authentication/configuration');\n\nconst { authConfig } = externalAuthConfig;\n\n/*\n\tTODO: look at existing keys, vs implemented keys\n\tsupport: true,\n\tsupportUserId,\n\taccountId,\n\tuserId,\n\tiat,\n\texp,\n\taud: this.aud,\n\tiss: 'feathers',\n\tsub: accountId,\n\tjti: `support_${ObjectId()}`,\n*/\nexport interface JwtConstants {\n\tsecret: string;\n\tjwtOptions: {\n\t\theader: { typ: string };\n\t\taudience: string;\n\t\tissuer: string;\n\t\talgorithm: string;\n\t\texpiresIn: string;\n\t};\n}\n\nexport const jwtConstants: JwtConstants = {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n};\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/interface/jwt-payload.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ICurrentUser\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            aud\n                                        \n                                \n                                \n                                        \n                                            exp\n                                        \n                                \n                                \n                                        \n                                            iat\n                                        \n                                \n                                \n                                        \n                                            iss\n                                        \n                                \n                                \n                                        \n                                            jti\n                                        \n                                \n                                \n                                        \n                                            sub\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aud\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        aud:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    audience\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    expiration in // TODO\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iss\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iss:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    issuer\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jti\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jti:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    // TODO\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ICurrentUser } from '@shared/domain';\n\nexport interface JwtPayload extends ICurrentUser {\n\t/** audience */\n\taud: string;\n\t/** expiration in // TODO\n\t *\n\t */\n\texp: number;\n\tiat: number;\n\t/** issuer */\n\tiss: string;\n\tjti: string;\n\n\t/** // TODO\n\t *\n\t */\n\tsub: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/strategy/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userFacade: UserFacade, jwtValidationAdapter: JwtValidationAdapter)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userFacade\n                                                  \n                                                        \n                                                                        UserFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtValidationAdapter\n                                                  \n                                                        \n                                                                        JwtValidationAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { UserFacade } from '@src/modules/user';\nimport { jwtConstants } from '../constants';\nimport { JwtPayload } from '../interface/jwt-payload';\nimport { JwtValidationAdapter } from './jwt-validation.adapter';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n\tconstructor(private readonly userFacade: UserFacade, private readonly jwtValidationAdapter: JwtValidationAdapter) {\n\t\tsuper({\n\t\t\tjwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n\t\t\tignoreExpiration: false,\n\t\t\tsecretOrKey: jwtConstants.secret,\n\t\t\t...jwtConstants.jwtOptions,\n\t\t});\n\t}\n\n\tasync validate(payload: JwtPayload): Promise {\n\t\t// check jwt is whitelisted and extend whitelist entry\n\t\tconst { accountId, jti, userId } = payload;\n\t\tawait this.jwtValidationAdapter.isWhitelisted(accountId, jti);\n\t\t// check user exists\n\t\tconst resolvedUser = await this.userFacade.resolveUser(userId);\n\t\tpayload.user = resolvedUser; // todo decide request.user or request.user.user to be used everywhere\n\t\t// TODO: check user/account is active and has one role\n\t\treturn payload;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtValidationAdapter.html":{"url":"injectables/JwtValidationAdapter.html","title":"injectable - JwtValidationAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtValidationAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addToWhitelist\n                            \n                            \n                                    Async\n                                isWhitelisted\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addToWhitelist\n                        \n                    \n                \n            \n            \n                \n                    \n                    addToWhitelist(accountId: string, jti: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accountId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    jti\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isWhitelisted\n                        \n                    \n                \n            \n            \n                \n                    \n                    isWhitelisted(accountId: string, jti: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts:15\n                \n            \n\n\n            \n                \n                    When validating a jwt it must be added to a whitelist, here we check this.\nWhen the jwt is validated, the expiration time will be extended with this call.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    accountId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        users account id\n\n                                    \n                                \n                                \n                                    jti\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        jwt id (here required to make jwt identifiers identical in redis)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport jwtWhitelist = require('../../../../../../src/services/authentication/logic/whitelist');\n\nconst { ensureTokenIsWhitelisted, addTokenToWhitelist, createRedisIdentifierFromJwtData } = jwtWhitelist;\n\n@Injectable()\nexport class JwtValidationAdapter {\n\t/**\n\t * When validating a jwt it must be added to a whitelist, here we check this.\n\t * When the jwt is validated, the expiration time will be extended with this call.\n\t * @param accountId users account id\n\t * @param jti jwt id (here required to make jwt identifiers identical in redis)\n\t */\n\tasync isWhitelisted(accountId: string, jti: string): Promise {\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n\t\tawait ensureTokenIsWhitelisted({ accountId, jti, privateDevice: false });\n\t}\n\n\tasync addToWhitelist(accountId: string, jti: string): Promise {\n\t\tconst redisIdentifier = createRedisIdentifierFromJwtData(accountId, jti);\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n\t\tawait addTokenToWhitelist(redisIdentifier);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LearnroomModule.html":{"url":"modules/LearnroomModule.html","title":"module - LearnroomModule","body":"\n                   \n\n\n\n\n    Modules\n    LearnroomModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LearnroomModule\n\n\n\ncluster_LearnroomModule_providers\n\n\n\n\nDashboardModelMapper\n\nDashboardModelMapper\n\n\n\nLearnroomModule\n\nLearnroomModule\n\nLearnroomModule -->\n\nDashboardModelMapper->LearnroomModule\n\n\n\n\n\nDashboardUc\n\nDashboardUc\n\nLearnroomModule -->\n\nDashboardUc->LearnroomModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/learnroom.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DashboardModelMapper\n                        \n                        \n                            DashboardUc\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DashboardController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { DashboardRepo } from '@src/repositories/learnroom/dashboard.repo';\nimport { DashboardModelMapper } from '@src/repositories/learnroom/dashboard.model.mapper';\n\nimport { DashboardController } from './controller/dashboard.controller';\nimport { DashboardUc } from './uc/dashboard.uc';\n\n@Module({\n\timports: [],\n\tcontrollers: [DashboardController],\n\tproviders: [\n\t\tDashboardUc,\n\t\t{\n\t\t\tprovide: 'DASHBOARD_REPO',\n\t\t\tuseClass: DashboardRepo,\n\t\t},\n\t\tDashboardModelMapper,\n\t],\n})\nexport class LearnroomModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Lesson.html":{"url":"classes/Lesson.html","title":"class - Lesson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Lesson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/lesson.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                            \n                                hidden\n                            \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ILessonProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/lesson.entity.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ILessonProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        course\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Course', {fieldName: 'courseId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/lesson.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hidden\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({name: 'findAllByCourseIds'})@Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/lesson.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/lesson.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property, Index } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\n\nexport interface ILessonProperties {\n\tname: string;\n\thidden?: boolean;\n\tcourse: Course;\n}\n\n@Entity({ tableName: 'lessons' })\nexport class Lesson extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Index({ name: 'findAllByCourseIds' })\n\t@Property()\n\thidden = false;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse: Course;\n\n\tconstructor(props: ILessonProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tif (props.hidden !== undefined) this.hidden = props.hidden;\n\t\tthis.course = props.course;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LessonRepo.html":{"url":"injectables/LessonRepo.html","title":"injectable - LessonRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LessonRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/lesson/lesson.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllByCourseIds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/lesson/lesson.repo.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByCourseIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByCourseIds(courseIds: EntityId[], filters?: literal type)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/lesson/lesson.repo.ts:15\n                \n            \n\n\n            \n                \n                    TODO add pagination and sorting\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filters\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityManager } from '@mikro-orm/core';\n\nimport { EntityId, Lesson } from '@shared/domain';\n\nimport { LessonScope } from './lesson-scope';\n\n@Injectable()\nexport class LessonRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\t/**\n\t * TODO add pagination and sorting\n\t */\n\tasync findAllByCourseIds(courseIds: EntityId[], filters?: { hidden?: boolean }): Promise {\n\t\tconst scope = new LessonScope();\n\n\t\tscope.byCourseIds(courseIds);\n\n\t\tif (filters?.hidden !== undefined) {\n\t\t\tscope.byHidden(filters.hidden);\n\t\t}\n\n\t\tconst lessons = this.em.find(Lesson, scope.query);\n\t\treturn lessons;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LessonScope.html":{"url":"classes/LessonScope.html","title":"class - LessonScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LessonScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/lesson/lesson-scope.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _operator\n                            \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                byCourseIds\n                            \n                            \n                                byHidden\n                            \n                            \n                                addQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _operator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScopeOperator\n\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        byCourseIds\n                        \n                    \n                \n            \n            \n                \nbyCourseIds(courseIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/lesson/lesson-scope.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LessonScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byHidden\n                        \n                    \n                \n            \n            \n                \nbyHidden(isHidden: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/lesson/lesson-scope.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isHidden\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LessonScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityId, Lesson } from '@shared/domain';\nimport { Scope } from '../scope';\n\nexport class LessonScope extends Scope {\n\tbyCourseIds(courseIds: EntityId[]): LessonScope {\n\t\tthis.addQuery({ course: { $in: courseIds } });\n\t\treturn this;\n\t}\n\n\tbyHidden(isHidden: boolean): LessonScope {\n\t\tthis.addQuery({ hidden: { $eq: isHidden } });\n\t\treturn this;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Logger.html":{"url":"injectables/Logger.html","title":"injectable - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ConsoleLogger\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Scope, ConsoleLogger } from '@nestjs/common';\nimport { ILogger } from './logger.interface';\n\n@Injectable({ scope: Scope.TRANSIENT })\n/**\n * Default logger for server application.\n * Must implement ILogger but must not extend ConsoleLogger (this can be changed).\n * Transient injection: Wherever injected, a separate instance will be created, that can be provided with a custom context.\n */\nexport class Logger extends ConsoleLogger implements ILogger {\n\t/**\n\t * This Logger Service can be initialized with a context, that will be added to every log.\n\t * It implements @ILogger which provides the logger methods.\n\t * CAUTION: PREPARE STRINGS AS LOG DATA, DO NOT LOG COMPLEX DATA STRUCTURES\n\t * @param context when initialized in a provider, use setContext with CustomProviderClass.name\n\t * @param isTimestampEnabled\n\t */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_LoggerModule_exports\n\n\n\n\nLogger \n\nLogger \n\n\n\nLoggerModule\n\nLoggerModule\n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            Logger\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Logger\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Logger } from './logger.service';\n\n@Module({\n\tproviders: [Logger],\n\texports: [Logger],\n})\nexport class LoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Mail.html":{"url":"interfaces/Mail.html","title":"interface - Mail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Mail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            bcc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            from\n                                        \n                                \n                                \n                                        \n                                            mail\n                                        \n                                \n                                \n                                        \n                                            recipients\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            replyTo\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bcc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bcc:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cc:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        from:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mail:     PlainTextMailContent | HtmlMailContent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PlainTextMailContent | HtmlMailContent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recipients\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        recipients:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        replyTo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        replyTo:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailAttachment.html":{"url":"interfaces/MailAttachment.html","title":"interface - MailAttachment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailAttachment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            base64Content\n                                        \n                                \n                                \n                                        \n                                            mimeType\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        base64Content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        base64Content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mimeType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mimeType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailContent.html":{"url":"interfaces/MailContent.html","title":"interface - MailContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            attachments\n                                        \n                                \n                                \n                                        \n                                            subject\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attachments\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attachments:     (InlineAttachment | AppendedAttachment)[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     (InlineAttachment | AppendedAttachment)[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: MailModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/mail/mail.module.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MailModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, DynamicModule } from '@nestjs/common';\nimport { RabbitMQModule } from '@golevelup/nestjs-rabbitmq';\nimport { MailService } from './mail.service';\n\ninterface MailModuleOptions {\n\turi: string;\n\texchange: string;\n\troutingKey: string;\n}\n\ntype RabbitMqModuleOptions = Omit;\n\nconst createRabbitMqModule = (options: RabbitMqModuleOptions) => {\n\tconst rabbitMqModule = RabbitMQModule.forRoot(RabbitMQModule, {\n\t\texchanges: [\n\t\t\t{\n\t\t\t\tname: options.exchange,\n\t\t\t\ttype: 'direct',\n\t\t\t},\n\t\t],\n\t\turi: options.uri,\n\t});\n\treturn rabbitMqModule;\n};\n\n@Module({})\nexport class MailModule {\n\tstatic forRoot(options: MailModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: MailModule,\n\t\t\timports: [createRabbitMqModule(options)],\n\t\t\tproviders: [\n\t\t\t\tMailService,\n\t\t\t\t{\n\t\t\t\t\tprovide: 'MAIL_SERVICE_OPTIONS',\n\t\t\t\t\tuseValue: { exchange: options.exchange, routingKey: options.routingKey },\n\t\t\t\t},\n\t\t\t],\n\t\t\texports: [MailService],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailModuleOptions.html":{"url":"interfaces/MailModuleOptions.html","title":"interface - MailModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            exchange\n                                        \n                                \n                                \n                                        \n                                            routingKey\n                                        \n                                \n                                \n                                        \n                                            uri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exchange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exchange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routingKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routingKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Module, DynamicModule } from '@nestjs/common';\nimport { RabbitMQModule } from '@golevelup/nestjs-rabbitmq';\nimport { MailService } from './mail.service';\n\ninterface MailModuleOptions {\n\turi: string;\n\texchange: string;\n\troutingKey: string;\n}\n\ntype RabbitMqModuleOptions = Omit;\n\nconst createRabbitMqModule = (options: RabbitMqModuleOptions) => {\n\tconst rabbitMqModule = RabbitMQModule.forRoot(RabbitMQModule, {\n\t\texchanges: [\n\t\t\t{\n\t\t\t\tname: options.exchange,\n\t\t\t\ttype: 'direct',\n\t\t\t},\n\t\t],\n\t\turi: options.uri,\n\t});\n\treturn rabbitMqModule;\n};\n\n@Module({})\nexport class MailModule {\n\tstatic forRoot(options: MailModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: MailModule,\n\t\t\timports: [createRabbitMqModule(options)],\n\t\t\tproviders: [\n\t\t\t\tMailService,\n\t\t\t\t{\n\t\t\t\t\tprovide: 'MAIL_SERVICE_OPTIONS',\n\t\t\t\t\tuseValue: { exchange: options.exchange, routingKey: options.routingKey },\n\t\t\t\t},\n\t\t\t],\n\t\t\texports: [MailService],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(amqpConnection: AmqpConnection, options: MailServiceOptions)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/infra/mail/mail.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        amqpConnection\n                                                  \n                                                        \n                                                                    AmqpConnection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        MailServiceOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        send\n                        \n                    \n                \n            \n            \n                \n                    \n                    send(data: Mail)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/mail/mail.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Mail\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { AmqpConnection } from '@golevelup/nestjs-rabbitmq';\n\nimport { Mail } from './mail.interface';\n\ninterface MailServiceOptions {\n\texchange: string;\n\troutingKey: string;\n}\n\n@Injectable()\nexport class MailService {\n\tconstructor(\n\t\tprivate readonly amqpConnection: AmqpConnection,\n\t\t@Inject('MAIL_SERVICE_OPTIONS') private readonly options: MailServiceOptions\n\t) {}\n\n\tpublic async send(data: Mail): Promise {\n\t\tawait this.amqpConnection.publish(this.options.exchange, this.options.routingKey, data, { persistent: true });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailServiceOptions.html":{"url":"interfaces/MailServiceOptions.html","title":"interface - MailServiceOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailServiceOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            exchange\n                                        \n                                \n                                \n                                        \n                                            routingKey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exchange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exchange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routingKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routingKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { AmqpConnection } from '@golevelup/nestjs-rabbitmq';\n\nimport { Mail } from './mail.interface';\n\ninterface MailServiceOptions {\n\texchange: string;\n\troutingKey: string;\n}\n\n@Injectable()\nexport class MailService {\n\tconstructor(\n\t\tprivate readonly amqpConnection: AmqpConnection,\n\t\t@Inject('MAIL_SERVICE_OPTIONS') private readonly options: MailServiceOptions\n\t) {}\n\n\tpublic async send(data: Mail): Promise {\n\t\tawait this.amqpConnection.publish(this.options.exchange, this.options.routingKey, data, { persistent: true });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ManagementModule.html":{"url":"modules/ManagementModule.html","title":"module - ManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    ManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ManagementModule\n\n\n\ncluster_ManagementModule_providers\n\n\n\ncluster_ManagementModule_imports\n\n\n\n\nDatabaseManagementModule\n\nDatabaseManagementModule\n\n\n\nManagementModule\n\nManagementModule\n\nManagementModule -->\n\nDatabaseManagementModule->ManagementModule\n\n\n\n\n\nFileSystemModule\n\nFileSystemModule\n\nManagementModule -->\n\nFileSystemModule->ManagementModule\n\n\n\n\n\nBsonConverter\n\nBsonConverter\n\nManagementModule -->\n\nBsonConverter->ManagementModule\n\n\n\n\n\nConsoleWriterService\n\nConsoleWriterService\n\nManagementModule -->\n\nConsoleWriterService->ManagementModule\n\n\n\n\n\nDatabaseManagementService\n\nDatabaseManagementService\n\nManagementModule -->\n\nDatabaseManagementService->ManagementModule\n\n\n\n\n\nDatabaseManagementUc\n\nDatabaseManagementUc\n\nManagementModule -->\n\nDatabaseManagementUc->ManagementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/management/management.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BsonConverter\n                        \n                        \n                            ConsoleWriterService\n                        \n                        \n                            DatabaseManagementService\n                        \n                        \n                            DatabaseManagementUc\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DatabaseManagementController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseManagementModule\n                        \n                        \n                            FileSystemModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, NotFoundException } from '@nestjs/common';\nimport { DatabaseManagementService, DatabaseManagementModule } from '@shared/infra/database';\nimport { MikroOrmModule } from '@mikro-orm/nestjs';\nimport { Dictionary, IPrimaryKey } from '@mikro-orm/core';\nimport { ALL_ENTITIES } from '@shared/domain';\nimport { FileSystemModule } from '@shared/infra/file-system';\n\nimport { ConsoleWriterService } from '@shared/infra/console';\nimport { DB_URL, DB_USERNAME, DB_PASSWORD } from '@src/config';\nimport { DatabaseManagementController } from './controller/database-management.controller';\nimport { DatabaseManagementUc } from './uc/database-management.uc';\nimport { BsonConverter } from './converter/bson.converter';\nimport { DatabaseManagementConsole } from './console/database-management.console';\n\n@Module({\n\timports: [\n\t\tFileSystemModule,\n\t\tDatabaseManagementModule,\n\t\tMikroOrmModule.forRoot({\n\t\t\t// TODO repeats server module definitions\n\t\t\ttype: 'mongo',\n\t\t\tclientUrl: DB_URL,\n\t\t\tpassword: DB_PASSWORD,\n\t\t\tuser: DB_USERNAME,\n\t\t\tentities: ALL_ENTITIES,\n\t\t\tfindOneOrFailHandler: (entityName: string, where: Dictionary | IPrimaryKey) => {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t\treturn new NotFoundException(`The requested ${entityName}: ${where} has not been found.`);\n\t\t\t},\n\t\t}),\n\t],\n\tproviders: [\n\t\tDatabaseManagementUc,\n\t\tDatabaseManagementService,\n\t\tBsonConverter,\n\t\t// console providers\n\t\tDatabaseManagementConsole,\n\t\t// infra services\n\t\tConsoleWriterService,\n\t],\n\tcontrollers: [DatabaseManagementController],\n})\nexport class ManagementModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MongoMemoryDatabaseModule.html":{"url":"modules/MongoMemoryDatabaseModule.html","title":"module - MongoMemoryDatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    MongoMemoryDatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/shared/infra/database/mongo-memory-database/mongo-memory-database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options?: MongoDatabaseModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/mongo-memory-database/mongo-memory-database.module.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MongoDatabaseModuleOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleDestroy()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/mongo-memory-database/mongo-memory-database.module.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MikroORM } from '@mikro-orm/core';\nimport { MikroOrmModule, MikroOrmModuleAsyncOptions } from '@mikro-orm/nestjs';\nimport { DynamicModule, Inject, Module, OnModuleDestroy } from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport { ALL_ENTITIES } from '@shared/domain';\nimport { MongoMemoryServer } from 'mongodb-memory-server-global-4.2';\nimport { MongoDatabaseModuleOptions } from './types';\n\nconst createMikroOrmModule = async (options: MikroOrmModuleAsyncOptions): Promise => {\n\tconst mikroOrmModule = MikroOrmModule.forRootAsync({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: MongoMemoryServer,\n\t\t\t\tuseFactory: async () => {\n\t\t\t\t\tconst mongo = await MongoMemoryServer.create();\n\t\t\t\t\treturn mongo;\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tuseFactory: async (mongo: MongoMemoryServer) => {\n\t\t\tawait mongo.ensureInstance();\n\t\t\tconst clientUrl = mongo.getUri();\n\t\t\treturn {\n\t\t\t\t...options,\n\t\t\t\ttype: 'mongo',\n\t\t\t\tclientUrl,\n\t\t\t};\n\t\t},\n\t\tinject: [MongoMemoryServer],\n\t});\n\n\t// TODO maybe we can find a better way to export the MongoMemoryServer provider\n\t// currently we cannot specify the export otherwise because MikroOrmModuleSyncOptions doesn't provide an export option\n\tif (mikroOrmModule.imports && mikroOrmModule.imports.length > 0) {\n\t\tconst mikroOrmCoreModule = (await mikroOrmModule.imports[0]) as DynamicModule;\n\t\tmikroOrmCoreModule.exports ||= [];\n\t\tmikroOrmCoreModule.exports.push(MongoMemoryServer);\n\t}\n\n\treturn mikroOrmModule;\n};\n\n@Module({})\nexport class MongoMemoryDatabaseModule implements OnModuleDestroy {\n\tconstructor(\n\t\t@Inject(MikroORM) private orm: MikroORM,\n\t\t@Inject(MongoMemoryServer) private mongod: MongoMemoryServer,\n\t\tprivate readonly moduleRef: ModuleRef\n\t) {}\n\n\tstatic forRoot(options?: MongoDatabaseModuleOptions): DynamicModule {\n\t\tconst defaultOptions = {\n\t\t\tentities: ALL_ENTITIES,\n\t\t};\n\t\treturn {\n\t\t\tmodule: MongoMemoryDatabaseModule,\n\t\t\timports: [createMikroOrmModule({ ...defaultOptions, ...options })],\n\t\t\texports: [MikroOrmModule],\n\t\t};\n\t}\n\n\t// close db connection and stop mongo server\n\t// NOTE: we have to call close() on this module to make nest call this callback\n\tasync onModuleDestroy(): Promise {\n\t\tawait this.orm.close();\n\t\tawait this.mongod.stop();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MoveElementParams.html":{"url":"classes/MoveElementParams.html","title":"class - MoveElementParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MoveElementParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                from\n                            \n                            \n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MoveElementPosition\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MoveElementPosition\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { ValidateNested, IsNumber, Min, IsOptional } from 'class-validator';\n\n/**\n * DTO for Updating a news document.\n * A PartialType is a halper which allows to extend an existing class by making all its properties optional.\n */\n\nexport class MoveElementPosition {\n\t@IsNumber()\n\t@Min(0)\n\t@ApiProperty()\n\tx: number;\n\n\t@IsNumber()\n\t@Min(0)\n\t@ApiProperty()\n\ty: number;\n\n\t@IsNumber()\n\t@Min(0)\n\t@IsOptional()\n\t@ApiPropertyOptional({ description: 'used to identify a position within a group.' })\n\tgroupIndex?: number;\n}\n\nexport class MoveElementParams {\n\t@ValidateNested()\n\t@ApiProperty()\n\tfrom: MoveElementPosition;\n\n\t@ValidateNested()\n\t@ApiProperty()\n\tto: MoveElementPosition;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MoveElementPosition.html":{"url":"classes/MoveElementPosition.html","title":"class - MoveElementPosition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MoveElementPosition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for Updating a news document.\nA PartialType is a halper which allows to extend an existing class by making all its properties optional.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                groupIndex\n                            \n                            \n                                x\n                            \n                            \n                                y\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        groupIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Min(0)@IsOptional()@ApiPropertyOptional({description: 'used to identify a position within a group.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        x\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Min(0)@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        y\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Min(0)@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { ValidateNested, IsNumber, Min, IsOptional } from 'class-validator';\n\n/**\n * DTO for Updating a news document.\n * A PartialType is a halper which allows to extend an existing class by making all its properties optional.\n */\n\nexport class MoveElementPosition {\n\t@IsNumber()\n\t@Min(0)\n\t@ApiProperty()\n\tx: number;\n\n\t@IsNumber()\n\t@Min(0)\n\t@ApiProperty()\n\ty: number;\n\n\t@IsNumber()\n\t@Min(0)\n\t@IsOptional()\n\t@ApiPropertyOptional({ description: 'used to identify a position within a group.' })\n\tgroupIndex?: number;\n}\n\nexport class MoveElementParams {\n\t@ValidateNested()\n\t@ApiProperty()\n\tfrom: MoveElementPosition;\n\n\t@ValidateNested()\n\t@ApiProperty()\n\tto: MoveElementPosition;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/News.html":{"url":"classes/News.html","title":"class - News","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  News\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/news.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: INewsProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        INewsProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:35\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'creatorId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:39\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('School', {fieldName: 'schoolId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTarget\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:51\n                        \n                    \n\n            \n                \n                    id reference to a collection populated later with name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:55\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:31\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'updaterId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModel, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/news.entity.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { School } from './school.entity';\nimport type { Team } from './team.entity';\nimport type { User } from './user.entity';\nimport { NewsTarget, NewsTargetModel } from '../types/news.types';\nimport { EntityId } from '../types';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId | School;\n\tcreator: EntityId | User;\n\ttarget: EntityId | NewsTarget;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: User;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTarget;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToOne('User', { fieldName: 'creatorId' })\n\tcreator!: User;\n\n\t@ManyToOne('User', { fieldName: 'updaterId' })\n\tupdater?: User;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, updater: props.updater, target: props.target });\n\t\tthis.externalId = props.externalId;\n\t\tthis.source = props.source;\n\t\tthis.sourceDescription = props.sourceDescription;\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne('School')\n\ttarget: School;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne('Course')\n\ttarget: Course;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne('Team')\n\ttarget: Team;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NewsController.html":{"url":"controllers/NewsController.html","title":"controller - NewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/news.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                news\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(currentUser: ICurrentUser, params: CreateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:21\n                \n            \n\n\n            \n                \n                    Create a news by a user in a given scope (school or team).\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:85\n                \n            \n\n\n            \n                \n                    Delete a news.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, scope: NewsFilterQuery, pagination: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiBody({type: NewsListResponse})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:36\n                \n            \n\n\n            \n                \n                    Responds with all news for a user.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:57\n                \n            \n\n\n            \n                \n                    Retrieve a specific news entry by id.\nA user may only read news of scopes he has the read permission.\nThe news entity has school and user names populated.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(newsId: string, currentUser: ICurrentUser, params: UpdateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:71\n                \n            \n\n\n            \n                \n                    Update properties of a news.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Query, Patch, Delete } from '@nestjs/common';\nimport { ApiTags, ApiBody } from '@nestjs/swagger';\nimport { ICurrentUser } from '@shared/domain';\nimport { ParseObjectIdPipe, PaginationQuery } from '@shared/controller';\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\nimport { NewsUc } from '../uc/news.uc';\n\nimport { CreateNewsParams, NewsFilterQuery, NewsListResponse, NewsResponse, UpdateNewsParams } from './dto';\nimport { NewsMapper } from '../mapper/news.mapper';\n\n@ApiTags('News')\n@Authenticate('jwt')\n@Controller('news')\nexport class NewsController {\n\tconstructor(private readonly newsUc: NewsUc) {}\n\n\t/**\n\t * Create a news by a user in a given scope (school or team).\n\t */\n\t@Post()\n\tasync create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n\t\tconst news = await this.newsUc.create(\n\t\t\tcurrentUser.userId,\n\t\t\tcurrentUser.schoolId,\n\t\t\tNewsMapper.mapCreateNewsToDomain(params)\n\t\t);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t/**\n\t * Responds with all news for a user.\n\t */\n\t@Get()\n\t@ApiBody({ type: NewsListResponse })\n\tasync findAll(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() scope: NewsFilterQuery,\n\t\t@Query() pagination: PaginationQuery\n\t): Promise {\n\t\tconst [newsList, count] = await this.newsUc.findAllForUser(\n\t\t\tcurrentUser.userId,\n\t\t\tNewsMapper.mapNewsScopeToDomain(scope),\n\t\t\t{ pagination }\n\t\t);\n\t\tconst dtoList = newsList.map((news) => NewsMapper.mapToResponse(news));\n\t\tconst response = new NewsListResponse(dtoList, count);\n\t\treturn response;\n\t}\n\n\t/**\n\t * Retrieve a specific news entry by id.\n\t * A user may only read news of scopes he has the read permission.\n\t * The news entity has school and user names populated.\n\t */\n\t@Get(':id')\n\tasync findOne(\n\t\t// A parameter pipe like ParseObjectIdPipe gives us the guarantee of typesafety for @Param\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst news = await this.newsUc.findOneByIdForUser(newsId, currentUser.userId);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t/**\n\t * Update properties of a news.\n\t */\n\t@Patch(':id')\n\tasync update(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Body() params: UpdateNewsParams\n\t): Promise {\n\t\tconst news = await this.newsUc.update(newsId, currentUser.userId, NewsMapper.mapUpdateNewsToDomain(params));\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t/**\n\t * Delete a news.\n\t */\n\t@Delete(':id')\n\tasync delete(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst deletedId = await this.newsUc.delete(newsId, currentUser.userId);\n\t\treturn deletedId;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsFilterQuery.html":{"url":"classes/NewsFilterQuery.html","title":"class - NewsFilterQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsFilterQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news-filter.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                targetId\n                            \n                            \n                                    Optional\n                                targetModel\n                            \n                            \n                                    Optional\n                                unpublished\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        targetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()@ApiPropertyOptional({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the news are related (works only together with targetModel)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@IsIn(TARGET_MODEL_VALUES)@ApiPropertyOptional({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the news are related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        unpublished\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()@StringToBoolean()@ApiPropertyOptional({description: 'Flag that filters if the news should be published or not'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsBoolean, IsIn, IsMongoId, IsOptional, IsString } from 'class-validator';\nimport { StringToBoolean } from '@shared/controller/transformer';\nimport { NewsTargetModel } from '@shared/domain';\n\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\nexport class NewsFilterQuery {\n\t@IsOptional()\n\t@IsString()\n\t@IsIn(TARGET_MODEL_VALUES)\n\t@ApiPropertyOptional({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the news are related',\n\t})\n\ttargetModel?: string;\n\n\t@IsOptional()\n\t@IsMongoId()\n\t@ApiPropertyOptional({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the news are related (works only together with targetModel)',\n\t})\n\ttargetId?: string;\n\n\t@IsOptional()\n\t@IsBoolean()\n\t@StringToBoolean()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Flag that filters if the news should be published or not',\n\t})\n\tunpublished?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsListResponse.html":{"url":"classes/NewsListResponse.html","title":"class - NewsListResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsListResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news.response.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PaginationResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: NewsResponse[], total: number, skip?: number, limit?: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:95\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    NewsResponse[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        skip\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NewsResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:102\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { PaginationResponse } from '@shared/controller';\nimport { NewsTargetModel } from '@shared/domain';\nimport { SchoolInfoResponse } from './school-info.response';\nimport { TargetInfoResponse } from './target-info.response';\nimport { UserInfoResponse } from './user-info.response';\n\nconst NEWS_SOURCES = ['internal', 'rss'] as const;\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\ntype SourceType = typeof NEWS_SOURCES[number];\nexport class NewsResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the News entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n\n\t@ApiPropertyOptional({\n\t\ttype: 'string',\n\t\tenum: NEWS_SOURCES,\n\t\tdescription: 'The type of source of the News entity',\n\t})\n\tsource?: SourceType;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'The source description of the News entity',\n\t})\n\tsourceDescription?: string;\n\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel: string;\n\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The target object with id and name, could be the school, team, or course name',\n\t})\n\ttarget: TargetInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The School ownership',\n\t})\n\tschool: SchoolInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'Reference to the User that created the News entity',\n\t})\n\tcreator: UserInfoResponse;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'Reference to the User that updated the News entity',\n\t})\n\tupdater?: UserInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The creation timestamp',\n\t})\n\tcreatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'The update timestamp',\n\t})\n\tupdatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'List of permissions the current user has for the News entity',\n\t})\n\tpermissions: string[];\n}\n\nexport class NewsListResponse extends PaginationResponse {\n\tconstructor(data: NewsResponse[], total: number, skip?: number, limit?: number) {\n\t\tsuper(total, skip, limit);\n\t\tthis.data = data;\n\t}\n\n\t@ApiProperty({ type: [NewsResponse] })\n\tdata: NewsResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsMapper.html":{"url":"classes/NewsMapper.html","title":"class - NewsMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/news.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapCreateNewsToDomain\n                            \n                            \n                                    Static\n                                mapNewsScopeToDomain\n                            \n                            \n                                    Static\n                                mapToResponse\n                            \n                            \n                                    Static\n                                mapUpdateNewsToDomain\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapCreateNewsToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapCreateNewsToDomain(params: CreateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ICreateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapNewsScopeToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapNewsScopeToDomain(query: NewsFilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         INewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapUpdateNewsToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapUpdateNewsToDomain(params: UpdateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IUpdateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { News, ICreateNews, INewsScope, IUpdateNews, NewsTargetModel } from '@shared/domain';\nimport { CreateNewsParams, NewsFilterQuery, NewsResponse, UpdateNewsParams } from '../controller/dto';\nimport { SchoolInfoMapper } from './school-info.mapper';\nimport { TargetInfoMapper } from './target-info.mapper';\nimport { UserInfoMapper } from './user-info.mapper';\n\nexport class NewsMapper {\n\tstatic mapToResponse(news: News): NewsResponse {\n\t\tconst dto = new NewsResponse();\n\t\tdto.id = news.id;\n\t\tdto.title = news.title;\n\t\tdto.content = news.content;\n\t\tdto.displayAt = news.displayAt;\n\t\tdto.source = news.source;\n\t\tdto.sourceDescription = news.sourceDescription;\n\t\tdto.targetId = news.target.id;\n\t\tdto.targetModel = news.targetModel;\n\t\tdto.target = TargetInfoMapper.mapToResponse(news.target);\n\t\tdto.school = SchoolInfoMapper.mapToResponse(news.school);\n\t\tdto.creator = UserInfoMapper.mapToResponse(news.creator);\n\t\tif (news.updater) {\n\t\t\tdto.updater = UserInfoMapper.mapToResponse(news.updater);\n\t\t}\n\t\tdto.createdAt = news.createdAt;\n\t\tdto.updatedAt = news.updatedAt;\n\t\tdto.permissions = news.permissions;\n\t\treturn dto;\n\t}\n\n\tstatic mapNewsScopeToDomain(query: NewsFilterQuery): INewsScope {\n\t\tconst dto: INewsScope = {};\n\t\tif (query.targetModel) {\n\t\t\tdto.target = {\n\t\t\t\ttargetModel: query.targetModel as NewsTargetModel,\n\t\t\t\ttargetId: query.targetId,\n\t\t\t};\n\t\t}\n\t\tif ('unpublished' in query) {\n\t\t\tdto.unpublished = query.unpublished;\n\t\t}\n\t\treturn dto;\n\t}\n\n\tstatic mapCreateNewsToDomain(params: CreateNewsParams): ICreateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.content,\n\t\t\tdisplayAt: params.displayAt,\n\t\t\ttarget: {\n\t\t\t\ttargetModel: params.targetModel as NewsTargetModel,\n\t\t\t\ttargetId: params.targetId,\n\t\t\t},\n\t\t};\n\t\treturn dto;\n\t}\n\n\tstatic mapUpdateNewsToDomain(params: UpdateNewsParams): IUpdateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.content,\n\t\t\tdisplayAt: params.displayAt,\n\t\t};\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewsModule.html":{"url":"modules/NewsModule.html","title":"module - NewsModule","body":"\n                   \n\n\n\n\n    Modules\n    NewsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_exports\n\n\n\ncluster_NewsModule_providers\n\n\n\ncluster_NewsModule_imports\n\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/news/news.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NewsRepo\n                        \n                        \n                            NewsUc\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NewsController\n                        \n                        \n                            TeamNewsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthorizationModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NewsUc\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LoggerModule } from '@src/core/logger/logger.module';\nimport { AuthorizationModule } from '@src/modules/authorization/authorization.module';\nimport { NewsUc } from './uc/news.uc';\nimport { NewsRepo } from './repo/news.repo';\nimport { NewsController } from './controller/news.controller';\nimport { TeamNewsController } from './controller/team-news.controller';\n\n/* NewsController\n * to enable:\n * - unskip e2e tests\n * - execute migration news_add_target_schools (in migrations/scheduled)\n * - update backup/setup/news.json from db after migration has been executed\n */\n@Module({\n\timports: [AuthorizationModule, LoggerModule],\n\tcontrollers: [NewsController, TeamNewsController],\n\tproviders: [NewsUc, NewsRepo],\n\texports: [NewsUc],\n})\nexport class NewsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsRepo.html":{"url":"injectables/NewsRepo.html","title":"injectable - NewsRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NewsRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news.repo.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseRepo\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                propertiesToPopulate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Private\n                                    Async\n                                findNewsAndCount\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                persist\n                            \n                            \n                                persistAll\n                            \n                            \n                                    Async\n                                persistAllAndFlush\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                    Async\n                                removeAllAndFlush\n                            \n                            \n                                    Async\n                                removeAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(targets: NewsTargetFilter[], unpublished: boolean, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:19\n                \n            \n\n\n            \n                \n                    Find news\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findNewsAndCount\n                        \n                    \n                \n            \n            \n                \n                    \n                    findNewsAndCount(query: FilterQuery, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:39\n                \n            \n\n\n            \n                \n                    resolves a news documents list with some elements (school, target, and updator/creator) populated already\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:32\n                \n            \n\n\n            \n                \n                    resolves a news document with some elements (school, target, and updator/creator) populated already\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                    \n                    flush()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persist\n                        \n                    \n                \n            \n            \n                \npersist(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:9\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAll\n                        \n                    \n                \n            \n            \n                \npersistAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAll\n                        \n                    \n                \n            \n            \n                \nremoveAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        propertiesToPopulate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['school', 'target', 'creator', 'updater']\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/repo/news.repo.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { FilterQuery } from '@mikro-orm/core';\nimport { BaseRepo } from '@shared/repo/base.repo';\nimport { QueryOrderMap } from '@mikro-orm/core/enums';\nimport { Counted, CourseNews, EntityId, IFindOptions, News, SchoolNews, TeamNews } from '@shared/domain';\nimport { NewsScope } from './news-scope';\nimport { NewsTargetFilter } from './news-target-filter';\n\n@Injectable()\nexport class NewsRepo extends BaseRepo {\n\tpropertiesToPopulate = ['school', 'target', 'creator', 'updater'];\n\n\t/**\n\t * Find news\n\t * @param targets\n\t * @param unpublished\n\t * @param options\n\t */\n\tasync findAll(\n\t\ttargets: NewsTargetFilter[],\n\t\tunpublished: boolean,\n\t\toptions?: IFindOptions\n\t): Promise> {\n\t\tconst scope = new NewsScope();\n\t\tscope.byTargets(targets);\n\t\tscope.byUnpublished(unpublished);\n\t\tconst countedNewsList = await this.findNewsAndCount(scope.query, options);\n\t\treturn countedNewsList;\n\t}\n\n\t/** resolves a news document with some elements (school, target, and updator/creator) populated already */\n\tasync findOneById(id: EntityId): Promise {\n\t\tconst newsEntity = await this.em.findOneOrFail(News, id);\n\t\tawait this.em.populate(newsEntity, this.propertiesToPopulate);\n\t\treturn newsEntity;\n\t}\n\n\t/** resolves a news documents list with some elements (school, target, and updator/creator) populated already */\n\tprivate async findNewsAndCount(query: FilterQuery, options?: IFindOptions): Promise> {\n\t\tconst { pagination, order } = options || {};\n\t\tconst [newsEntities, count] = await this.em.findAndCount(News, query, {\n\t\t\t...pagination,\n\t\t\torderBy: order as QueryOrderMap,\n\t\t});\n\t\tawait this.em.populate(newsEntities, this.propertiesToPopulate);\n\t\t// populate target for all inheritances of news which not works when the list contains different types\n\t\tconst discriminatorColumn = 'target';\n\t\tconst schoolNews = newsEntities.filter((news) => news instanceof SchoolNews);\n\t\tawait this.em.populate(schoolNews, discriminatorColumn);\n\t\tconst teamNews = newsEntities.filter((news) => news instanceof TeamNews);\n\t\tawait this.em.populate(teamNews, discriminatorColumn);\n\t\tconst courseNews = newsEntities.filter((news) => news instanceof CourseNews);\n\t\tawait this.em.populate(courseNews, discriminatorColumn);\n\t\treturn [newsEntities, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsResponse.html":{"url":"classes/NewsResponse.html","title":"class - NewsResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                createdAt\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                id\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetId\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                updater\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Content of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The creation timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Reference to the User that created the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The point in time from when the News entity schould be displayed'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the News entity', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'List of permissions the current user has for the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SchoolInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The School ownership'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SourceType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'string', enum: NEWS_SOURCES, description: 'The type of source of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The source description of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TargetInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The target object with id and name, could be the school, team, or course name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Title of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The update timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Reference to the User that updated the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:77\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { PaginationResponse } from '@shared/controller';\nimport { NewsTargetModel } from '@shared/domain';\nimport { SchoolInfoResponse } from './school-info.response';\nimport { TargetInfoResponse } from './target-info.response';\nimport { UserInfoResponse } from './user-info.response';\n\nconst NEWS_SOURCES = ['internal', 'rss'] as const;\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\ntype SourceType = typeof NEWS_SOURCES[number];\nexport class NewsResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the News entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n\n\t@ApiPropertyOptional({\n\t\ttype: 'string',\n\t\tenum: NEWS_SOURCES,\n\t\tdescription: 'The type of source of the News entity',\n\t})\n\tsource?: SourceType;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'The source description of the News entity',\n\t})\n\tsourceDescription?: string;\n\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel: string;\n\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The target object with id and name, could be the school, team, or course name',\n\t})\n\ttarget: TargetInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The School ownership',\n\t})\n\tschool: SchoolInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'Reference to the User that created the News entity',\n\t})\n\tcreator: UserInfoResponse;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'Reference to the User that updated the News entity',\n\t})\n\tupdater?: UserInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The creation timestamp',\n\t})\n\tcreatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'The update timestamp',\n\t})\n\tupdatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'List of permissions the current user has for the News entity',\n\t})\n\tpermissions: string[];\n}\n\nexport class NewsListResponse extends PaginationResponse {\n\tconstructor(data: NewsResponse[], total: number, skip?: number, limit?: number) {\n\t\tsuper(total, skip, limit);\n\t\tthis.data = data;\n\t}\n\n\t@ApiProperty({ type: [NewsResponse] })\n\tdata: NewsResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsScope.html":{"url":"classes/NewsScope.html","title":"class - NewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news-scope.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _operator\n                            \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                byTargets\n                            \n                            \n                                byUnpublished\n                            \n                            \n                                addQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _operator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScopeOperator\n\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        byTargets\n                        \n                    \n                \n            \n            \n                \nbyTargets(targets: NewsTargetFilter[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byUnpublished\n                        \n                    \n                \n            \n            \n                \nbyUnpublished(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EmptyResultQuery, Scope } from '@shared/repo';\nimport { News } from '@shared/domain';\nimport { NewsTargetFilter } from './news-target-filter';\n\nexport class NewsScope extends Scope {\n\tbyTargets(targets: NewsTargetFilter[]): NewsScope {\n\t\tconst queries: FilterQuery[] = targets.map((target) => {\n\t\t\treturn { $and: [{ targetModel: target.targetModel }, { 'target:in': target.targetIds }] };\n\t\t});\n\t\tif (queries.length === 0) {\n\t\t\t// mission impossile query to ensure empty query result\n\t\t\tthis.addQuery(EmptyResultQuery);\n\t\t} else if (queries.length === 1) {\n\t\t\tthis.addQuery(queries[0]);\n\t\t} else {\n\t\t\tthis.addQuery({ $or: queries });\n\t\t}\n\t\treturn this;\n\t}\n\n\tbyUnpublished(unpublished: boolean): NewsScope {\n\t\tconst now = new Date();\n\t\tthis.addQuery({ displayAt: unpublished ? { $gt: now } : { $lte: now } });\n\t\treturn this;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NewsTargetFilter.html":{"url":"interfaces/NewsTargetFilter.html","title":"interface - NewsTargetFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NewsTargetFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news-target-filter.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            targetIds\n                                        \n                                \n                                \n                                        \n                                            targetModel\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        targetIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        targetIds:         EntityId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        targetModel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        targetModel:         NewsTargetModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NewsTargetModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId, NewsTargetModel } from '@shared/domain';\n\nexport interface NewsTargetFilter {\n\ttargetModel: NewsTargetModel;\n\ttargetIds: EntityId[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsUc.html":{"url":"injectables/NewsUc.html","title":"injectable - NewsUc","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NewsUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/uc/news.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAllForUser\n                            \n                            \n                                    Async\n                                findOneByIdForUser\n                            \n                            \n                                    Private\n                                    Async\n                                getNewsPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Static\n                                getRequiredPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getTargetFilters\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(newsRepo: NewsRepo, authorizationService: AuthorizationService)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/uc/news.uc.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newsRepo\n                                                  \n                                                        \n                                                                        NewsRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizationService\n                                                  \n                                                        \n                                                                        AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userId: EntityId, schoolId: EntityId, params: ICreateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                ICreateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForUser(userId: EntityId, scope?: INewsScope, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:65\n                \n            \n\n\n            \n                \n                    Provides news for a user, by default odered by displayAt to show latest news first.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByIdForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByIdForUser(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getNewsPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNewsPermissions(userId: EntityId, news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:193\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getPermittedTargets\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                                Permission[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        getRequiredPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequiredPermissions(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:203\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        news with displayAt set to future date are not published for users with view permission\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getTargetFilters\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTargetFilters(userId: EntityId, targetModels: NewsTargetModel[], permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModels\n                                    \n                                                NewsTargetModel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: EntityId, userId: EntityId, params: IUpdateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                IUpdateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILogger\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/uc/news.uc.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport {\n\tEntityId,\n\tIFindOptions,\n\tNews,\n\tSortOrder,\n\tNewsTargetModel,\n\tICreateNews,\n\tINewsScope,\n\tIUpdateNews,\n} from '@shared/domain';\nimport { Counted } from '@shared/domain/types';\nimport { Logger, ILogger } from '@src/core/logger';\nimport { AuthorizationService } from '@src/modules/authorization/authorization.service';\nimport { NewsRepo } from '../repo/news.repo';\nimport { NewsTargetFilter } from '../repo/news-target-filter';\n\ntype Permission = 'NEWS_VIEW' | 'NEWS_EDIT';\n\n@Injectable()\nexport class NewsUc {\n\tprivate logger: ILogger;\n\n\tconstructor(private newsRepo: NewsRepo, private authorizationService: AuthorizationService) {\n\t\tthis.logger = new Logger(NewsUc.name);\n\t}\n\n\t/**\n\t *\n\t * @param userId\n\t * @param schoolId\n\t * @param params\n\t * @returns\n\t */\n\tasync create(userId: EntityId, schoolId: EntityId, params: ICreateNews): Promise {\n\t\tthis.logger.log(`create news as user ${userId}`);\n\n\t\tconst { targetModel, targetId } = params.target;\n\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, ['NEWS_CREATE']);\n\n\t\tconst { target, displayAt: paramDisplayAt, ...props } = params;\n\t\t// set news as published by default\n\t\tconst displayAt = paramDisplayAt || new Date();\n\t\tconst news = News.createInstance(targetModel, {\n\t\t\t...props,\n\t\t\tdisplayAt,\n\t\t\tschool: schoolId,\n\t\t\tcreator: userId,\n\t\t\ttarget: targetId,\n\t\t});\n\t\tawait this.newsRepo.persistAndFlush(news);\n\n\t\tthis.logger.log(`news ${news.id} created by user ${userId}`);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t * Provides news for a user, by default odered by displayAt to show latest news first.\n\t * @param userId\n\t * @param scope\n\t * @param pagination\n\t * @returns\n\t */\n\tasync findAllForUser(userId: EntityId, scope?: INewsScope, options?: IFindOptions): Promise> {\n\t\tthis.logger.log(`start find all news for user ${userId}`);\n\n\t\tconst unpublished = !!scope?.unpublished; // default is only published news\n\t\tconst permissions: [Permission] = NewsUc.getRequiredPermissions(unpublished);\n\n\t\tconst targets = await this.getPermittedTargets(userId, scope, permissions);\n\n\t\tif (options == null) options = {};\n\t\t// by default show latest news first\n\t\tif (options.order == null) options.order = { displayAt: SortOrder.desc };\n\n\t\tconst [newsList, newsCount] = await this.newsRepo.findAll(targets, unpublished, options);\n\n\t\tawait Promise.all(\n\t\t\tnewsList.map(async (news: News) => {\n\t\t\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\t\t\t})\n\t\t);\n\n\t\tthis.logger.log(`return ${newsList.length} news for user ${userId}`);\n\n\t\treturn [newsList, newsCount];\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync findOneByIdForUser(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start find one news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tconst isPublished = news.displayAt > new Date();\n\t\tconst requiredPermissions = NewsUc.getRequiredPermissions(isPublished);\n\t\tawait this.authorizationService.checkEntityPermissions(\n\t\t\tuserId,\n\t\t\tnews.targetModel,\n\t\t\tnews.target.id,\n\t\t\trequiredPermissions\n\t\t);\n\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @param params\n\t * @returns\n\t */\n\tasync update(id: EntityId, userId: EntityId, params: IUpdateNews): Promise {\n\t\tthis.logger.log(`start update news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\t// eslint-disable-next-line no-restricted-syntax\n\t\tfor (const [key, value] of Object.entries(params)) {\n\t\t\tif (value) {\n\t\t\t\tnews[key] = value;\n\t\t\t}\n\t\t}\n\n\t\tawait this.newsRepo.persistAndFlush(news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync delete(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start remove news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\tawait this.newsRepo.removeAndFlush(news);\n\n\t\treturn id;\n\t}\n\n\tprivate async getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[]) {\n\t\tlet targets: NewsTargetFilter[];\n\n\t\tif (scope?.target == null) {\n\t\t\t// for all target models\n\t\t\ttargets = await this.getTargetFilters(userId, Object.values(NewsTargetModel), permissions);\n\t\t} else {\n\t\t\tconst { targetModel, targetId } = scope.target;\n\t\t\tif (targetModel && targetId) {\n\t\t\t\t// for specific news target\n\t\t\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, permissions);\n\t\t\t\ttargets = [{ targetModel, targetIds: [targetId] }];\n\t\t\t} else {\n\t\t\t\t// for single target model\n\t\t\t\ttargets = await this.getTargetFilters(userId, [targetModel], permissions);\n\t\t\t}\n\t\t}\n\t\treturn targets;\n\t}\n\n\tprivate async getTargetFilters(\n\t\tuserId: EntityId,\n\t\ttargetModels: NewsTargetModel[],\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst targets = await Promise.all(\n\t\t\ttargetModels.map(async (targetModel) => {\n\t\t\t\treturn {\n\t\t\t\t\ttargetModel,\n\t\t\t\t\ttargetIds: await this.authorizationService.getPermittedEntities(userId, targetModel, permissions),\n\t\t\t\t};\n\t\t\t})\n\t\t);\n\t\tconst nonEmptyTargets = targets.filter((target) => target.targetIds.length > 0);\n\n\t\treturn nonEmptyTargets;\n\t}\n\n\tprivate async getNewsPermissions(userId: EntityId, news: News): Promise {\n\t\tconst permissions = await this.authorizationService.getEntityPermissions(userId, news.targetModel, news.target.id);\n\t\treturn permissions.filter((permission) => permission.includes('NEWS'));\n\t}\n\n\t/**\n\t *\n\t * @param unpublished news with displayAt set to future date are not published for users with view permission\n\t * @returns\n\t */\n\tprivate static getRequiredPermissions(unpublished: boolean): [Permission] {\n\t\treturn unpublished ? ['NEWS_EDIT'] : ['NEWS_VIEW'];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Options.html":{"url":"interfaces/Options.html","title":"interface - Options","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Options\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/console/database-management.console.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            collection\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            override\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        collection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        collection:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        override\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        override:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Command, Console } from 'nestjs-console';\nimport { ConsoleWriterService } from '@shared/infra/console/console-writer/console-writer.service';\nimport { DatabaseManagementUc } from '../uc/database-management.uc';\n\ninterface Options {\n\tcollection?: string;\n\toverride?: boolean;\n}\n\n@Console({ command: 'database', description: 'database setup console' })\nexport class DatabaseManagementConsole {\n\tconstructor(private consoleWriter: ConsoleWriterService, private databaseManagementUc: DatabaseManagementUc) {}\n\n\t@Command({\n\t\tcommand: 'seed',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tflags: '-c, --collection ',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'filter for a single ',\n\t\t\t},\n\t\t],\n\t\tdescription: 'reset database collections with seed data from filesystem',\n\t})\n\tasync seedCollections(options: Options): Promise {\n\t\tconst filter = options?.collection ? [options.collection] : undefined;\n\t\tconst collections = await this.databaseManagementUc.seedDatabaseCollectionsFromFileSystem(filter);\n\t\tconst report = JSON.stringify(collections);\n\t\tthis.consoleWriter.info(report);\n\t\treturn collections;\n\t}\n\n\t@Command({\n\t\tcommand: 'export',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tflags: '-c, --collection ',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'filter for a single ',\n\t\t\t},\n\t\t\t{\n\t\t\t\tflags: '-o, --override',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'optional export collections to setup folder and override existing files',\n\t\t\t},\n\t\t],\n\t\tdescription: 'export database collections to filesystem',\n\t})\n\tasync exportCollections(options: Options): Promise {\n\t\tconst filter = options?.collection ? [options.collection] : undefined;\n\t\tconst toSeedFolder = options?.override ? true : undefined;\n\t\tconst collections = await this.databaseManagementUc.exportCollectionsToFileSystem(filter, toSeedFolder);\n\t\tconst report = JSON.stringify(collections);\n\t\tthis.consoleWriter.info(report);\n\t\treturn collections;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationQuery.html":{"url":"classes/PaginationQuery.html","title":"class - PaginationQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(1)@Max(100)@ApiPropertyOptional({description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.query.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(0)@ApiPropertyOptional({description: 'Number of elements (not pages) to be skipped'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.query.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, Max, Min } from 'class-validator';\nimport { ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class PaginationQuery {\n\t@IsInt()\n\t@Min(0)\n\t@ApiPropertyOptional({ description: 'Number of elements (not pages) to be skipped' })\n\tskip?: number = 0;\n\n\t@IsInt()\n\t@Min(1)\n\t@Max(100)\n\t@ApiPropertyOptional({ description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99 })\n\tlimit?: number = 10;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationResponse.html":{"url":"classes/PaginationResponse.html","title":"class - PaginationResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                data\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(total: number, skip?: number, limit?: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        skip\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport abstract class PaginationResponse {\n\tconstructor(total: number, skip?: number, limit?: number) {\n\t\tthis.total = total;\n\t\tthis.skip = skip;\n\t\tthis.limit = limit;\n\t}\n\n\t@ApiProperty()\n\tabstract data: T;\n\n\t@ApiProperty({ type: 'number' })\n\ttotal: number;\n\n\t@ApiProperty({ type: 'number' })\n\tskip?: number;\n\n\t@ApiProperty({ type: 'number' })\n\tlimit?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ParseObjectIdPipe.html":{"url":"injectables/ParseObjectIdPipe.html","title":"injectable - ParseObjectIdPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ParseObjectIdPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, BadRequestException } from '@nestjs/common';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { EntityId } from '@shared/domain';\n\n@Injectable()\nexport class ParseObjectIdPipe implements PipeTransform {\n\ttransform(value: string): string {\n\t\tconst validObjectId = ObjectId.isValid(value);\n\n\t\tif (!validObjectId) {\n\t\t\tthrow new BadRequestException('Invalid ObjectId');\n\t\t}\n\n\t\treturn value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchGroupParams.html":{"url":"classes/PatchGroupParams.html","title":"class - PatchGroupParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchGroupParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/patchGroup.params.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for Patching a the group name of a grid element.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Title of the Group grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/patchGroup.params.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\n/**\n * DTO for Patching a the group name of a grid element.\n */\nexport class PatchGroupParams {\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Title of the Group grid element',\n\t})\n\ttitle: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlainTextMailContent.html":{"url":"interfaces/PlainTextMailContent.html","title":"interface - PlainTextMailContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlainTextMailContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailContent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            htmlContent\n                                        \n                                \n                                \n                                        \n                                            plainTextContent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        htmlContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        htmlContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plainTextContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        plainTextContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResolvedUser.html":{"url":"classes/ResolvedUser.html","title":"class - ResolvedUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResolvedUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IResolvedUser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                permissions\n                            \n                            \n                                roles\n                            \n                            \n                                schoolId\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        schoolId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IResolvedUser, IRole } from '@shared/domain';\n\nexport type Role = IRole;\n\nexport class ResolvedUser implements IResolvedUser {\n\t@ApiProperty()\n\tfirstName: string;\n\n\t@ApiProperty()\n\tlastName: string;\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\troles: Role[];\n\n\t@ApiProperty()\n\tpermissions: string[];\n\n\t@ApiProperty()\n\tschoolId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResolvedUserMapper.html":{"url":"classes/ResolvedUserMapper.html","title":"class - ResolvedUserMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResolvedUserMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/mapper/ResolvedUser.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(user: User, permissions: string[], roles: Role[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/mapper/ResolvedUser.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                                \n                                    roles\n                                    \n                                                Role[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ResolvedUser\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User, Role } from '@shared/domain';\nimport { ResolvedUser } from '../controller/dto';\n\nexport class ResolvedUserMapper {\n\tstatic mapToResponse(user: User, permissions: string[] = [], roles: Role[] = []): ResolvedUser {\n\t\tconst dto = new ResolvedUser();\n\t\tdto.id = user.id;\n\t\tdto.firstName = user.firstName || '';\n\t\tdto.lastName = user.lastName || '';\n\t\tdto.createdAt = user.createdAt;\n\t\tdto.updatedAt = user.updatedAt;\n\t\tdto.schoolId = user.school.toString();\n\t\tdto.roles = roles.map((role) => ({ name: role.name, id: role.id }));\n\n\t\tdto.permissions = permissions;\n\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RocketChatError.html":{"url":"classes/RocketChatError.html","title":"class - RocketChatError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RocketChatError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/rocketchat/rocket-chat.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorType\n                            \n                            \n                                    Private\n                                response\n                            \n                            \n                                    Private\n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(e: any)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/rocketchat/rocket-chat.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        errorType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/rocketchat/rocket-chat.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        response\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GenericData\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/rocketchat/rocket-chat.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/rocketchat/rocket-chat.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpService, Inject, Injectable } from '@nestjs/common';\nimport { catchError } from 'rxjs/operators';\n\nexport interface RocketChatOptions {\n\turi?: string;\n\tadminUser?: string;\n\tadminPassword?: string;\n\tadminId?: string;\n\tadminToken?: string;\n}\n\ntype GenericData = Record;\n\nexport class RocketChatError extends Error {\n\tprivate statusCode: number;\n\n\tprivate response: GenericData;\n\n\t// rocketchat specific error type\n\tprivate errorType: string;\n\n\tconstructor(e: any) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\tsuper(e.response.statusText);\n\n\t\t// Set the prototype explicitly.\n\t\tObject.setPrototypeOf(this, RocketChatError.prototype);\n\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access\n\t\tthis.statusCode = e.response.statusCode;\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment\n\t\tthis.response = e.response.data;\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment\n\t\tthis.errorType = e.response.data.errorType;\n\t}\n}\n\ninterface AdminIdAndToken {\n\tid: string;\n\ttoken: string;\n}\n\n@Injectable()\nexport class RocketChatService {\n\tprivate adminIdAndToken: AdminIdAndToken;\n\n\tconstructor(\n\t\t@Inject('ROCKET_CHAT_OPTIONS') private readonly options: RocketChatOptions,\n\t\tprivate readonly httpService: HttpService\n\t) {}\n\n\tpublic async me(authToken: string, userId: string): Promise {\n\t\treturn this.get('/api/v1/me', authToken, userId);\n\t}\n\n\tpublic async setUserStatus(authToken: string, userId: string, status: string): Promise {\n\t\treturn this.post('/api/v1/users.setStatus', authToken, userId, {\n\t\t\tmessage: '',\n\t\t\tstatus,\n\t\t});\n\t}\n\n\tpublic async createUserToken(userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/users.createToken', {\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async logoutUser(authToken: string, userId: string): Promise {\n\t\treturn this.post('/api/v1/logout', authToken, userId, {});\n\t}\n\n\tpublic async getUserList(queryString: string): Promise {\n\t\treturn this.getAsAdmin(`/api/v1/users.list?${queryString}`);\n\t}\n\n\tpublic async unarchiveGroup(groupName: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.unarchive', {\n\t\t\troomName: groupName,\n\t\t});\n\t}\n\n\tpublic async archiveGroup(groupName: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.archive', {\n\t\t\troomName: groupName,\n\t\t});\n\t}\n\n\tpublic async kickUserFromGroup(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.kick', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async inviteUserToGroup(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.invite', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async addGroupModerator(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.addModerator', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async removeGroupModerator(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.removeModerator', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async getGroupModerators(groupName: string): Promise {\n\t\treturn this.getAsAdmin(`/api/v1/groups.moderators?roomName=${groupName}`);\n\t}\n\n\tpublic async getGroupMembers(groupName: string): Promise {\n\t\treturn this.getAsAdmin(`/api/v1/groups.members?roomName=${groupName}`);\n\t}\n\n\tpublic async createGroup(name: string, members: string[]): Promise {\n\t\t// group.name is only used\n\t\treturn this.postAsAdmin('/api/v1/groups.create', {\n\t\t\tname,\n\t\t\tmembers,\n\t\t});\n\t}\n\n\tpublic async deleteGroup(groupName: string): Promise {\n\t\t// group.name is only used\n\t\treturn this.postAsAdmin('/api/v1/groups.delete', {\n\t\t\troomName: groupName,\n\t\t});\n\t}\n\n\tpublic async createUser(email: string, password: string, username: string, name: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/users.create', {\n\t\t\temail,\n\t\t\tpassword,\n\t\t\tusername,\n\t\t\tname,\n\t\t\tverified: true,\n\t\t});\n\t}\n\n\tpublic async deleteUser(username: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/users.delete', {\n\t\t\tusername,\n\t\t});\n\t}\n\n\tprivate async postAsAdmin(path: string, body: GenericData): Promise {\n\t\tconst adminIdAndToken = await this.getAdminIdAndToken();\n\t\treturn this.post(path, adminIdAndToken.token, adminIdAndToken.id, body);\n\t}\n\n\tprivate async getAsAdmin(path: string): Promise {\n\t\tconst adminIdAndToken = await this.getAdminIdAndToken();\n\t\treturn this.get(path, adminIdAndToken.token, adminIdAndToken.id);\n\t}\n\n\tprivate async get(path: string, authToken: string, userId: string): Promise {\n\t\tconst response = await this.httpService\n\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t.get(`${this.options.uri}${path}`, {\n\t\t\t\theaders: {\n\t\t\t\t\t'X-Auth-Token': authToken,\n\t\t\t\t\t'X-User-ID': userId,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tcatchError((e) => {\n\t\t\t\t\tthrow new RocketChatError(e);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.toPromise();\n\t\treturn response?.data as GenericData;\n\t}\n\n\tprivate async post(path: string, authToken: string, userId: string, body: GenericData): Promise {\n\t\tconst response = await this.httpService\n\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t.post(`${this.options.uri}${path}`, body, {\n\t\t\t\theaders: {\n\t\t\t\t\t'X-Auth-Token': authToken,\n\t\t\t\t\t'X-User-ID': userId,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tcatchError((e) => {\n\t\t\t\t\tthrow new RocketChatError(e);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.toPromise();\n\t\treturn response?.data as GenericData;\n\t}\n\n\tprivate async getAdminIdAndToken(): Promise {\n\t\tthis.validateRocketChatConfig();\n\n\t\tif (this.adminIdAndToken) {\n\t\t\treturn this.adminIdAndToken;\n\t\t}\n\n\t\tif (this.options.adminId && this.options.adminToken) {\n\t\t\tconst newVar = { id: this.options.adminId, token: this.options.adminToken } as AdminIdAndToken;\n\t\t\tthis.adminIdAndToken = newVar;\n\t\t\treturn newVar;\n\t\t}\n\t\tconst response = await this.httpService\n\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t.post(`${this.options.uri}/api/v1/login`, {\n\t\t\t\tuser: this.options.adminUser,\n\t\t\t\tpassword: this.options.adminPassword,\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tcatchError((e) => {\n\t\t\t\t\tthrow new RocketChatError(e);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.toPromise();\n\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\t\tconst responseJson = response?.data;\n\t\tthis.adminIdAndToken = {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\tid: responseJson.data.userId as string,\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\ttoken: responseJson.data.authToken as string,\n\t\t} as AdminIdAndToken;\n\t\treturn this.adminIdAndToken;\n\t}\n\n\tprivate validateRocketChatConfig(): void {\n\t\tif (!this.options.uri) {\n\t\t\tthrow new Error('rocket chat uri not set');\n\t\t}\n\t\tif (!(this.options.adminId && this.options.adminToken) && !(this.options.adminUser && this.options.adminPassword)) {\n\t\t\tthrow new Error('rocket chat adminId and adminToken OR adminUser and adminPassword must be set');\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RocketChatModule.html":{"url":"modules/RocketChatModule.html","title":"module - RocketChatModule","body":"\n                   \n\n\n\n\n    Modules\n    RocketChatModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/rocketchat/rocket-chat.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: RocketChatOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/rocketchat/rocket-chat.module.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                RocketChatOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, DynamicModule, HttpModule } from '@nestjs/common';\nimport { RocketChatOptions, RocketChatService } from './rocket-chat.service';\n\n@Module({})\nexport class RocketChatModule {\n\tstatic forRoot(options: RocketChatOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: RocketChatModule,\n\t\t\timports: [HttpModule],\n\t\t\tproviders: [\n\t\t\t\tRocketChatService,\n\t\t\t\t{\n\t\t\t\t\tprovide: 'ROCKET_CHAT_OPTIONS',\n\t\t\t\t\tuseValue: options,\n\t\t\t\t},\n\t\t\t],\n\t\t\texports: [RocketChatService],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RocketChatOptions.html":{"url":"interfaces/RocketChatOptions.html","title":"interface - RocketChatOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RocketChatOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/rocketchat/rocket-chat.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            adminId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            adminPassword\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            adminToken\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            adminUser\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            uri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        adminId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        adminId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        adminPassword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        adminPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        adminToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        adminToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        adminUser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        adminUser:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpService, Inject, Injectable } from '@nestjs/common';\nimport { catchError } from 'rxjs/operators';\n\nexport interface RocketChatOptions {\n\turi?: string;\n\tadminUser?: string;\n\tadminPassword?: string;\n\tadminId?: string;\n\tadminToken?: string;\n}\n\ntype GenericData = Record;\n\nexport class RocketChatError extends Error {\n\tprivate statusCode: number;\n\n\tprivate response: GenericData;\n\n\t// rocketchat specific error type\n\tprivate errorType: string;\n\n\tconstructor(e: any) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\tsuper(e.response.statusText);\n\n\t\t// Set the prototype explicitly.\n\t\tObject.setPrototypeOf(this, RocketChatError.prototype);\n\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access\n\t\tthis.statusCode = e.response.statusCode;\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment\n\t\tthis.response = e.response.data;\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment\n\t\tthis.errorType = e.response.data.errorType;\n\t}\n}\n\ninterface AdminIdAndToken {\n\tid: string;\n\ttoken: string;\n}\n\n@Injectable()\nexport class RocketChatService {\n\tprivate adminIdAndToken: AdminIdAndToken;\n\n\tconstructor(\n\t\t@Inject('ROCKET_CHAT_OPTIONS') private readonly options: RocketChatOptions,\n\t\tprivate readonly httpService: HttpService\n\t) {}\n\n\tpublic async me(authToken: string, userId: string): Promise {\n\t\treturn this.get('/api/v1/me', authToken, userId);\n\t}\n\n\tpublic async setUserStatus(authToken: string, userId: string, status: string): Promise {\n\t\treturn this.post('/api/v1/users.setStatus', authToken, userId, {\n\t\t\tmessage: '',\n\t\t\tstatus,\n\t\t});\n\t}\n\n\tpublic async createUserToken(userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/users.createToken', {\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async logoutUser(authToken: string, userId: string): Promise {\n\t\treturn this.post('/api/v1/logout', authToken, userId, {});\n\t}\n\n\tpublic async getUserList(queryString: string): Promise {\n\t\treturn this.getAsAdmin(`/api/v1/users.list?${queryString}`);\n\t}\n\n\tpublic async unarchiveGroup(groupName: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.unarchive', {\n\t\t\troomName: groupName,\n\t\t});\n\t}\n\n\tpublic async archiveGroup(groupName: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.archive', {\n\t\t\troomName: groupName,\n\t\t});\n\t}\n\n\tpublic async kickUserFromGroup(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.kick', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async inviteUserToGroup(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.invite', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async addGroupModerator(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.addModerator', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async removeGroupModerator(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.removeModerator', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async getGroupModerators(groupName: string): Promise {\n\t\treturn this.getAsAdmin(`/api/v1/groups.moderators?roomName=${groupName}`);\n\t}\n\n\tpublic async getGroupMembers(groupName: string): Promise {\n\t\treturn this.getAsAdmin(`/api/v1/groups.members?roomName=${groupName}`);\n\t}\n\n\tpublic async createGroup(name: string, members: string[]): Promise {\n\t\t// group.name is only used\n\t\treturn this.postAsAdmin('/api/v1/groups.create', {\n\t\t\tname,\n\t\t\tmembers,\n\t\t});\n\t}\n\n\tpublic async deleteGroup(groupName: string): Promise {\n\t\t// group.name is only used\n\t\treturn this.postAsAdmin('/api/v1/groups.delete', {\n\t\t\troomName: groupName,\n\t\t});\n\t}\n\n\tpublic async createUser(email: string, password: string, username: string, name: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/users.create', {\n\t\t\temail,\n\t\t\tpassword,\n\t\t\tusername,\n\t\t\tname,\n\t\t\tverified: true,\n\t\t});\n\t}\n\n\tpublic async deleteUser(username: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/users.delete', {\n\t\t\tusername,\n\t\t});\n\t}\n\n\tprivate async postAsAdmin(path: string, body: GenericData): Promise {\n\t\tconst adminIdAndToken = await this.getAdminIdAndToken();\n\t\treturn this.post(path, adminIdAndToken.token, adminIdAndToken.id, body);\n\t}\n\n\tprivate async getAsAdmin(path: string): Promise {\n\t\tconst adminIdAndToken = await this.getAdminIdAndToken();\n\t\treturn this.get(path, adminIdAndToken.token, adminIdAndToken.id);\n\t}\n\n\tprivate async get(path: string, authToken: string, userId: string): Promise {\n\t\tconst response = await this.httpService\n\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t.get(`${this.options.uri}${path}`, {\n\t\t\t\theaders: {\n\t\t\t\t\t'X-Auth-Token': authToken,\n\t\t\t\t\t'X-User-ID': userId,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tcatchError((e) => {\n\t\t\t\t\tthrow new RocketChatError(e);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.toPromise();\n\t\treturn response?.data as GenericData;\n\t}\n\n\tprivate async post(path: string, authToken: string, userId: string, body: GenericData): Promise {\n\t\tconst response = await this.httpService\n\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t.post(`${this.options.uri}${path}`, body, {\n\t\t\t\theaders: {\n\t\t\t\t\t'X-Auth-Token': authToken,\n\t\t\t\t\t'X-User-ID': userId,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tcatchError((e) => {\n\t\t\t\t\tthrow new RocketChatError(e);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.toPromise();\n\t\treturn response?.data as GenericData;\n\t}\n\n\tprivate async getAdminIdAndToken(): Promise {\n\t\tthis.validateRocketChatConfig();\n\n\t\tif (this.adminIdAndToken) {\n\t\t\treturn this.adminIdAndToken;\n\t\t}\n\n\t\tif (this.options.adminId && this.options.adminToken) {\n\t\t\tconst newVar = { id: this.options.adminId, token: this.options.adminToken } as AdminIdAndToken;\n\t\t\tthis.adminIdAndToken = newVar;\n\t\t\treturn newVar;\n\t\t}\n\t\tconst response = await this.httpService\n\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t.post(`${this.options.uri}/api/v1/login`, {\n\t\t\t\tuser: this.options.adminUser,\n\t\t\t\tpassword: this.options.adminPassword,\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tcatchError((e) => {\n\t\t\t\t\tthrow new RocketChatError(e);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.toPromise();\n\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\t\tconst responseJson = response?.data;\n\t\tthis.adminIdAndToken = {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\tid: responseJson.data.userId as string,\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\ttoken: responseJson.data.authToken as string,\n\t\t} as AdminIdAndToken;\n\t\treturn this.adminIdAndToken;\n\t}\n\n\tprivate validateRocketChatConfig(): void {\n\t\tif (!this.options.uri) {\n\t\t\tthrow new Error('rocket chat uri not set');\n\t\t}\n\t\tif (!(this.options.adminId && this.options.adminToken) && !(this.options.adminUser && this.options.adminPassword)) {\n\t\t\tthrow new Error('rocket chat adminId and adminToken OR adminUser and adminPassword must be set');\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/role.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                permissions\n                            \n                            \n                                roles\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: IRoleProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/role.entity.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        IRoleProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()@Index({name: 'primaryRoleSearchOperation'})@Unique()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/role.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/role.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('Role')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/role.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, Unique, Index, ManyToMany, Collection } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface IRoleProperties {\n\tpermissions?: string[];\n\troles?: Role[];\n\tname: string;\n}\n\n@Entity({ tableName: 'roles' })\nexport class Role extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'primaryRoleSearchOperation' })\n\t@Unique()\n\tname: string;\n\n\t// @Enum({ items: ['a', 'b', 'c'] }) in array with no permission is valid => validator function\n\t@Property()\n\tpermissions: string[] = [];\n\t// TODO: enum\n\n\t// @ManyToMany('Role', 'roles')\n\t// roles = new Collection(this);\n\n\t// @ManyToMany({ fieldName: 'roles', type: Role })\n\t// roles = new Collection(this);\n\n\t@ManyToMany('Role')\n\troles = new Collection(this);\n\n\tconstructor(props: IRoleProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tif (props.permissions) this.permissions = props.permissions;\n\t\tif (props.roles) this.roles.set(props.roles);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleRepo.html":{"url":"injectables/RoleRepo.html","title":"injectable - RoleRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RoleRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/repo/role.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByName\n                            \n                            \n                                    Async\n                                resolvePermissionsFromSubRolesById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/repo/role.repo.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/role.repo.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/role.repo.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        resolvePermissionsFromSubRolesById\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolvePermissionsFromSubRolesById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/role.repo.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cache\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in apps/server/src/modules/user/repo/role.repo.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId, Role } from '@shared/domain';\n\n@Injectable()\nexport class RoleRepo {\n\tcache: 60000;\n\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findByName(name: string): Promise {\n\t\tconst role = await this.em.findOneOrFail(Role, { name }, { cache: this.cache });\n\t\treturn role;\n\t}\n\n\tasync findById(id: EntityId): Promise {\n\t\tconst role = await this.em.findOneOrFail(Role, { id }, { cache: this.cache });\n\t\treturn role;\n\t}\n\n\tasync resolvePermissionsFromSubRolesById(id: EntityId): Promise {\n\t\tconst role = await this.findById(id);\n\t\tlet { permissions } = role;\n\n\t\tfor (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleUC.html":{"url":"injectables/RoleUC.html","title":"injectable - RoleUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RoleUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/uc/role.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                resolvePermissionsByRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleRepo: RoleRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/uc/role.uc.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleRepo\n                                                  \n                                                        \n                                                                        RoleRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        resolvePermissionsByRoles\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolvePermissionsByRoles(inputRoles: Role[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/uc/role.uc.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    inputRoles\n                                    \n                                                Role[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { IPermissionsAndRoles, Role } from '@shared/domain';\n\nimport { RoleRepo } from '../repo';\n\n@Injectable()\nexport class RoleUC {\n\tconstructor(private readonly roleRepo: RoleRepo) {}\n\n\tasync resolvePermissionsByRoles(inputRoles: Role[]): Promise {\n\t\tconst roles = await Promise.all(\n\t\t\tinputRoles.map((role) => this.roleRepo.resolvePermissionsFromSubRolesById(role.id))\n\t\t);\n\n\t\tlet permissions: string[] = [];\n\t\troles.forEach((role) => {\n\t\t\tpermissions = [...permissions, ...role.permissions];\n\t\t});\n\t\tpermissions = [...new Set(permissions)];\n\n\t\treturn { roles, permissions };\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/School.html":{"url":"classes/School.html","title":"class - School","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  School\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/school.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ISchoolProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/school.entity.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ISchoolProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/school.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from './base.entity';\n\nexport interface ISchoolProperties {\n\tname: string;\n}\n@Entity({ tableName: 'schools' })\nexport class School extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: ISchoolProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoMapper.html":{"url":"classes/SchoolInfoMapper.html","title":"class - SchoolInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/school-info.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(schoolInfo: School)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/school-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    schoolInfo\n                                    \n                                                School\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SchoolInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { School } from '@shared/domain';\nimport { SchoolInfoResponse } from '../controller/dto';\n\nexport class SchoolInfoMapper {\n\tstatic mapToResponse(schoolInfo: School): SchoolInfoResponse {\n\t\tconst dto = new SchoolInfoResponse();\n\t\tdto.id = schoolInfo.id;\n\t\tdto.name = schoolInfo.name;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoResponse.html":{"url":"classes/SchoolInfoResponse.html","title":"class - SchoolInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/school-info.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the School entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the School entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class SchoolInfoResponse {\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the School entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The name of the School entity',\n\t})\n\tname: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolNews.html":{"url":"classes/SchoolNews.html","title":"class - SchoolNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/news.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('School')\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:98\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:35\n\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'creatorId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:61\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:39\n\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:42\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:66\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('School', {fieldName: 'schoolId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:58\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:45\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:48\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:55\n\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:31\n\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'updaterId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:64\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModel, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { School } from './school.entity';\nimport type { Team } from './team.entity';\nimport type { User } from './user.entity';\nimport { NewsTarget, NewsTargetModel } from '../types/news.types';\nimport { EntityId } from '../types';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId | School;\n\tcreator: EntityId | User;\n\ttarget: EntityId | NewsTarget;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: User;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTarget;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToOne('User', { fieldName: 'creatorId' })\n\tcreator!: User;\n\n\t@ManyToOne('User', { fieldName: 'updaterId' })\n\tupdater?: User;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, updater: props.updater, target: props.target });\n\t\tthis.externalId = props.externalId;\n\t\tthis.source = props.source;\n\t\tthis.sourceDescription = props.sourceDescription;\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne('School')\n\ttarget: School;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne('Course')\n\ttarget: Course;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne('Team')\n\ttarget: Team;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Scope.html":{"url":"classes/Scope.html","title":"class - Scope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Scope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/scope.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _operator\n                            \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    query\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(operator: ScopeOperator)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/scope.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        operator\n                                                  \n                                                        \n                                                                        ScopeOperator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _operator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScopeOperator\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/repo/scope.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/repo/scope.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/scope.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        query\n                    \n                \n\n                \n                    \n                        getquery()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/repo/scope.ts:17\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EmptyResultQuery } from './query/empty-result.query';\n\ntype EmptyResultQueryType = typeof EmptyResultQuery;\n\ntype ScopeOperator = '$and' | '$or';\n\nexport class Scope {\n\tprivate _queries: FilterQuery[] = [];\n\n\tprivate _operator: ScopeOperator;\n\n\tconstructor(operator: ScopeOperator = '$and') {\n\t\tthis._operator = operator;\n\t}\n\n\tget query(): FilterQuery {\n\t\tif (this._queries.length === 0) {\n\t\t\treturn EmptyResultQuery as FilterQuery;\n\t\t}\n\t\tconst query = this._queries.length > 1 ? { [this._operator]: this._queries } : this._queries[0];\n\t\treturn query as FilterQuery;\n\t}\n\n\taddQuery(query: FilterQuery | EmptyResultQueryType): void {\n\t\tthis._queries.push(query);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServerConsole.html":{"url":"classes/ServerConsole.html","title":"class - ServerConsole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServerConsole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/console/server.console.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                            \n                                getInOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(consoleWriter: ConsoleWriterService)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/console/server.console.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        consoleWriter\n                                                  \n                                                        \n                                                                        ConsoleWriterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'test', description: 'sample test output'})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/console/server.console.ts:11\n                \n            \n\n\n            \n                \n                    test method for console output\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInOut\n                        \n                    \n                \n            \n            \n                \ngetInOut(whatever: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'out ', description: 'return input args'})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/console/server.console.ts:17\n                \n            \n\n\n            \n                \n                    test method for console input\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    whatever\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Command, Console } from 'nestjs-console';\nimport { ConsoleWriterService } from '@shared/infra/console';\n\n@Console({ command: 'server', description: 'sample server console' })\nexport class ServerConsole {\n\tconstructor(private consoleWriter: ConsoleWriterService) {}\n\n\t/** test method for console output */\n\t@Command({ command: 'test', description: 'sample test output' })\n\tgetHello(): void {\n\t\tthis.consoleWriter.info('Schulcloud Server API');\n\t}\n\n\t/** test method for console input */\n\t@Command({ command: 'out ', description: 'return input args' })\n\tgetInOut(whatever: string): void {\n\t\tthis.consoleWriter.info(`input was: ${whatever}`);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServerConsoleModule.html":{"url":"modules/ServerConsoleModule.html","title":"module - ServerConsoleModule","body":"\n                   \n\n\n\n\n    Modules\n    ServerConsoleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ServerConsoleModule\n\n\n\ncluster_ServerConsoleModule_imports\n\n\n\n\nConsoleWriterModule\n\nConsoleWriterModule\n\n\n\nServerConsoleModule\n\nServerConsoleModule\n\nServerConsoleModule -->\n\nConsoleWriterModule->ServerConsoleModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nServerConsoleModule -->\n\nFilesModule->ServerConsoleModule\n\n\n\n\n\nManagementModule\n\nManagementModule\n\nServerConsoleModule -->\n\nManagementModule->ServerConsoleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/console/console.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ConsoleWriterModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            ManagementModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConsoleModule } from 'nestjs-console';\nimport { ConsoleWriterModule } from '@shared/infra/console/console-writer/console-writer.module';\nimport { ManagementModule } from '../modules/management/management.module';\nimport { FilesModule } from '../modules/files/files.module';\nimport { ServerConsole } from './server.console';\n\n@Module({\n\timports: [ManagementModule, ConsoleModule, ConsoleWriterModule, FilesModule],\n\tproviders: [\n\t\t/** add console services as providers */\n\t\tServerConsole,\n\t],\n})\nexport class ServerConsoleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ServerController.html":{"url":"controllers/ServerController.html","title":"controller - ServerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ServerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/server.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/server.controller.ts:7\n                \n            \n\n\n            \n                \n                    default route to test public access\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\n\n@Controller()\nexport class ServerController {\n\t/** default route to test public access */\n\t@Get()\n\tgetHello(): string {\n\t\treturn 'Schulcloud Server API';\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServerModule.html":{"url":"modules/ServerModule.html","title":"module - ServerModule","body":"\n                   \n\n\n\n\n    Modules\n    ServerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nServerModule -->\n\nFilesModule->ServerModule\n\n\n\n\n\nLearnroomModule\n\nLearnroomModule\n\nServerModule -->\n\nLearnroomModule->ServerModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nServerModule -->\n\nMailModule->ServerModule\n\n\n\n\n\nNewsModule\n\nNewsModule\n\nServerModule -->\n\nNewsModule->ServerModule\n\n\n\n\n\nRocketChatModule\n\nRocketChatModule\n\nServerModule -->\n\nRocketChatModule->ServerModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nServerModule -->\n\nUserModule->ServerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/server.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            ServerController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            LearnroomModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            NewsModule\n                        \n                        \n                            RocketChatModule\n                        \n                        \n                            TaskModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, NotFoundException } from '@nestjs/common';\nimport { MikroOrmModule } from '@mikro-orm/nestjs';\nimport { Dictionary, IPrimaryKey } from '@mikro-orm/core';\nimport { Configuration } from '@hpi-schul-cloud/commons';\nimport { ALL_ENTITIES } from '@shared/domain';\nimport { MailModule } from '@shared/infra/mail';\nimport { AuthModule } from './modules/authentication/auth.module';\nimport { ServerController } from './server.controller';\nimport { DB_URL, DB_USERNAME, DB_PASSWORD } from './config';\n\nimport { CoreModule } from './core/core.module';\nimport { TaskModule } from './modules/task/task.module';\nimport { UserModule } from './modules/user/user.module';\nimport { NewsModule } from './modules/news/news.module';\nimport { FilesModule } from './modules/files/files.module';\n\nimport { LearnroomModule } from './modules/learnroom/learnroom.module';\nimport { RocketChatModule } from './modules/rocketchat/rocket-chat.module';\n\n@Module({\n\timports: [\n\t\tAuthModule,\n\t\tTaskModule,\n\t\tNewsModule,\n\t\tUserModule,\n\t\tLearnroomModule,\n\t\tMailModule.forRoot({\n\t\t\turi: Configuration.get('RABBITMQ_URI') as string,\n\t\t\texchange: Configuration.get('MAIL_SEND_EXCHANGE') as string,\n\t\t\troutingKey: Configuration.get('MAIL_SEND_ROUTING_KEY') as string,\n\t\t}),\n\t\tFilesModule,\n\t\tRocketChatModule.forRoot({\n\t\t\turi: Configuration.get('ROCKET_CHAT_URI') as string,\n\t\t\tadminId: Configuration.get('ROCKET_CHAT_ADMIN_ID') as string,\n\t\t\tadminToken: Configuration.get('ROCKET_CHAT_ADMIN_TOKEN') as string,\n\t\t\tadminUser: Configuration.get('ROCKET_CHAT_ADMIN_USER') as string,\n\t\t\tadminPassword: Configuration.get('ROCKET_CHAT_ADMIN_PASSWORD') as string,\n\t\t}),\n\n\t\tMikroOrmModule.forRoot({\n\t\t\ttype: 'mongo',\n\t\t\t// TODO add mongoose options as mongo options (see database.js)\n\t\t\tclientUrl: DB_URL,\n\t\t\tpassword: DB_PASSWORD,\n\t\t\tuser: DB_USERNAME,\n\t\t\tentities: ALL_ENTITIES,\n\t\t\tfindOneOrFailHandler: (entityName: string, where: Dictionary | IPrimaryKey) => {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t\treturn new NotFoundException(`The requested ${entityName}: ${where} has not been found.`);\n\t\t\t},\n\t\t\t// debug: true, // use it for locally debugging of querys\n\t\t}),\n\t\tCoreModule,\n\t],\n\tcontrollers: [ServerController],\n})\nexport class ServerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StorageProvider.html":{"url":"classes/StorageProvider.html","title":"class - StorageProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StorageProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/storageprovider.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessKeyId\n                            \n                            \n                                endpointUrl\n                            \n                            \n                                    Optional\n                                region\n                            \n                            \n                                secretAccessKey\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: IStorageProviderProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/storageprovider.entity.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        IStorageProviderProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accessKeyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/storageprovider.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endpointUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/storageprovider.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        region\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/storageprovider.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        secretAccessKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({fieldName: 'secretAccessKey', type: EncryptedStringType})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/storageprovider.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { EncryptedStringType } from '@shared/repo/types/EncryptedString.type';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface IStorageProviderProperties {\n\tendpointUrl: string;\n\taccessKeyId: string;\n\tsecretAccessKey: string;\n\tregion?: string;\n}\n\n@Entity({ tableName: 'storageproviders' })\nexport class StorageProvider extends BaseEntityWithTimestamps {\n\t@Property()\n\tendpointUrl!: string;\n\n\t@Property()\n\taccessKeyId!: string;\n\n\t@Property({ fieldName: 'secretAccessKey', type: EncryptedStringType })\n\tsecretAccessKey!: string;\n\n\t@Property()\n\tregion?: string;\n\n\tconstructor(props: IStorageProviderProperties) {\n\t\tsuper();\n\t\tthis.endpointUrl = props.endpointUrl;\n\t\tthis.accessKeyId = props.accessKeyId;\n\t\tthis.secretAccessKey = props.secretAccessKey;\n\t\tthis.region = props.region;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageProviderRepo.html":{"url":"injectables/StorageProviderRepo.html","title":"injectable - StorageProviderRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StorageProviderRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/files/repo/storageprovider.repo.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseRepo\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                persist\n                            \n                            \n                                persistAll\n                            \n                            \n                                    Async\n                                persistAllAndFlush\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                    Async\n                                removeAllAndFlush\n                            \n                            \n                                    Async\n                                removeAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/files/repo/storageprovider.repo.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                    \n                    flush()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persist\n                        \n                    \n                \n            \n            \n                \npersist(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:9\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAll\n                        \n                    \n                \n            \n            \n                \npersistAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAll\n                        \n                    \n                \n            \n            \n                \nremoveAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { BaseRepo } from '@shared/repo/base.repo';\nimport { StorageProvider, EntityId } from '@shared/domain';\n\n@Injectable()\nexport class StorageProviderRepo extends BaseRepo {\n\tasync findOneById(id: EntityId): Promise {\n\t\tconst storageProvider = await this.em.findOneOrFail(StorageProvider, id);\n\t\treturn storageProvider;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Submission.html":{"url":"classes/Submission.html","title":"class - Submission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Submission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/submission.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                comment\n                            \n                            \n                                    Optional\n                                courseGroup\n                            \n                            \n                                grade\n                            \n                            \n                                gradeComment\n                            \n                            \n                                gradeFiles\n                            \n                            \n                                student\n                            \n                            \n                                studentFiles\n                            \n                            \n                                task\n                            \n                            \n                                teamMembers\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getStudentId\n                            \n                            \n                                isGraded\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ISubmissionProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ISubmissionProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        courseGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CourseGroup\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('CourseGroup', {fieldName: 'courseGroupId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        grade\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gradeComment\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gradeFiles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('File', undefined, {fieldName: 'gradeFileIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        student\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'studentId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentFiles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('File', undefined, {fieldName: 'fileIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Task', {fieldName: 'homeworkId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teamMembers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('User', undefined, {fieldName: 'teamMembers'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getStudentId\n                        \n                    \n                \n            \n            \n                \ngetStudentId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/submission.entity.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityId\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isGraded\n                        \n                    \n                \n            \n            \n                \nisGraded()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/submission.entity.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Collection, Property, ManyToMany } from '@mikro-orm/core';\n\nimport { EntityId } from '../types';\n\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { CourseGroup } from './coursegroup.entity';\nimport type { User } from './user.entity';\nimport type { File } from './file.entity';\nimport type { Task } from './task.entity';\n\nexport interface ISubmissionProperties {\n\ttask: Task;\n\tstudent: User;\n\tcourseGroup?: CourseGroup[];\n\tteamMembers?: User[];\n\tcomment: string;\n\tstudentFiles?: File[];\n\tgrade?: number;\n\tgradeComment?: string;\n\tgradeFiles?: File[];\n}\n\n@Entity({ tableName: 'submissions' })\nexport class Submission extends BaseEntityWithTimestamps {\n\t@ManyToOne('Task', { fieldName: 'homeworkId' })\n\ttask: Task;\n\n\t@ManyToOne('User', { fieldName: 'studentId' })\n\tstudent: User;\n\n\t@ManyToOne('CourseGroup', { fieldName: 'courseGroupId' })\n\tcourseGroup?: CourseGroup;\n\n\t@ManyToMany('User', undefined, { fieldName: 'teamMembers' })\n\tteamMembers = new Collection(this);\n\n\t/* ***** student uploads ***** */\n\t@Property()\n\tcomment: string | null;\n\n\t@ManyToMany('File', undefined, { fieldName: 'fileIds' })\n\tstudentFiles = new Collection(this);\n\n\t/* ***** teacher uploads ***** */\n\t@Property()\n\tgrade: number | null;\n\n\t@Property()\n\tgradeComment: string | null;\n\n\t@ManyToMany('File', undefined, { fieldName: 'gradeFileIds' })\n\tgradeFiles = new Collection(this);\n\n\tconstructor(props: ISubmissionProperties) {\n\t\tsuper();\n\t\tthis.student = props.student;\n\t\tthis.comment = props.comment;\n\t\tthis.task = props.task;\n\n\t\tthis.grade = props.grade || null;\n\t\tthis.gradeComment = props.gradeComment || null;\n\n\t\tconst { courseGroup, teamMembers, studentFiles, gradeFiles } = props;\n\t\tObject.assign(this, { courseGroup, teamMembers, studentFiles, gradeFiles });\n\t}\n\n\tisGraded(): boolean {\n\t\tconst isGraded =\n\t\t\t(typeof this.grade === 'number' && this.grade >= 0) ||\n\t\t\t(typeof this.gradeComment === 'string' && this.gradeComment.length > 0) ||\n\t\t\t(this.gradeFiles !== undefined && this.gradeFiles.length > 0);\n\t\treturn isGraded;\n\t}\n\n\tgetStudentId(): EntityId {\n\t\treturn this.student.id;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SubmissionFactory.html":{"url":"classes/SubmissionFactory.html","title":"class - SubmissionFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SubmissionFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/testing/factory/submission.factory.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseFactory\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                propsFactory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                graded\n                            \n                            \n                                afterBuild\n                            \n                            \n                                build\n                            \n                            \n                                buildList\n                            \n                            \n                                    Protected\n                                clone\n                            \n                            \n                                    Static\n                                define\n                            \n                            \n                                params\n                            \n                            \n                                rewindSequence\n                            \n                            \n                                    Protected\n                                sequence\n                            \n                            \n                                transient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        propsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Factory\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFactory\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFactory:13\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        graded\n                        \n                    \n                \n            \n            \n                \ngraded(isGraded)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/submission.factory.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    isGraded\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        afterBuild\n                        \n                    \n                \n            \n            \n                \nafterBuild(afterBuildFn: HookFn)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:72\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding a function to be called after an object is built.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    afterBuildFn\n                                    \n                                            HookFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe function to call. It accepts your object of type T. The value this function returns gets returned from \"build\"\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        build\n                        \n                    \n                \n            \n            \n                \nbuild(params: DeepPartial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:45\n\n                \n            \n\n\n            \n                \n                    Build an entity using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildList\n                        \n                    \n                \n            \n            \n                \nbuildList(number: number, params: DeepPartial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:58\n\n                \n            \n\n\n            \n                \n                    Build a list of entities using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    number\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        a list of entities\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        clone\n                        \n                    \n                \n            \n            \n                \n                    \n                    clone(this: F, propsFactory: Factory)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:110\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        F\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                            F\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    propsFactory\n                                    \n                                            Factory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        define\n                        \n                    \n                \n            \n            \n                \n                    \n                    define(this, EntityClass: literal type, generator: GeneratorFn)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:29\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        U\n                        I\n                        F\n                    \n                \n            \n\n            \n                \n                    Define a factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    EntityClass\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The constructor of the entity to be built.\n\n                                    \n                                \n                                \n                                    generator\n                                    \n                                            GeneratorFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Your factory function - see Factory.define() in thoughtbot/fishery\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        params\n                        \n                    \n                \n            \n            \n                \nparams(params: DeepPartial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:84\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rewindSequence\n                        \n                    \n                \n            \n            \n                \nrewindSequence()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:106\n\n                \n            \n\n\n            \n                \n                    Set sequence back to its default value\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        sequence\n                        \n                    \n                \n            \n            \n                \n                    \n                    sequence()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:122\n\n                \n            \n\n\n            \n                \n                    Get the next sequence value\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        the next sequence value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transient\n                        \n                    \n                \n            \n            \n                \ntransient(transient: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:96\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default transient parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    transient\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ntransient params\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DeepPartial } from 'fishery';\nimport { Submission, ISubmissionProperties } from '@shared/domain';\nimport { BaseFactory } from './base.factory';\nimport { taskFactory } from './task.factory';\nimport { userFactory } from './user.factory';\n\nclass SubmissionFactory extends BaseFactory {\n\tgraded(isGraded = true): this {\n\t\tconst params: DeepPartial = { gradeComment: isGraded ? 'graded text' : undefined };\n\t\treturn this.params(params);\n\t}\n}\n\nexport const submissionFactory = SubmissionFactory.define(Submission, ({ sequence }) => {\n\treturn {\n\t\ttask: taskFactory.build(),\n\t\tstudent: userFactory.build(),\n\t\tcomment: `submission comment #${sequence}`,\n\t};\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubmissionRepo.html":{"url":"injectables/SubmissionRepo.html","title":"injectable - SubmissionRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SubmissionRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/repo/submission.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                byUserIdQuery\n                            \n                            \n                                    Async\n                                findAllByTaskIds\n                            \n                            \n                                    Async\n                                findAllByUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/repo/submission.repo.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        byUserIdQuery\n                        \n                    \n                \n            \n            \n                \n                    \n                    byUserIdQuery(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/submission.repo.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByTaskIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByTaskIds(taskIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/submission.repo.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByUserId(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/submission.repo.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\n\nimport { Counted, EntityId, CourseGroup, Submission } from '@shared/domain';\n\n// TODO: add scope helper\n\n@Injectable()\nexport class SubmissionRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findAllByTaskIds(taskIds: EntityId[]): Promise> {\n\t\tconst [submissions, count] = await this.em.findAndCount(Submission, {\n\t\t\ttask: { $in: taskIds },\n\t\t});\n\n\t\treturn [submissions, count];\n\t}\n\n\tasync findAllByUserId(userId: EntityId): Promise> {\n\t\tconst result = await this.em.findAndCount(Submission, await this.byUserIdQuery(userId));\n\t\treturn result;\n\t}\n\n\tprivate async byUserIdQuery(userId: EntityId): Promise> {\n\t\tconst courseGroupsOfUser = await this.em.find(CourseGroup, { students: userId });\n\t\tconst query = { $or: [{ student: userId }, { teamMembers: userId }, { courseGroup: { $in: courseGroupsOfUser } }] };\n\t\treturn query;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SymetricKeyEncryptionService.html":{"url":"injectables/SymetricKeyEncryptionService.html","title":"injectable - SymetricKeyEncryptionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SymetricKeyEncryptionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/encryption/encryption.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                decrypt\n                            \n                            \n                                    Public\n                                encrypt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(key: string)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/infra/encryption/encryption.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        decrypt\n                        \n                    \n                \n            \n            \n                \n                    \n                    decrypt(data: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/encryption/encryption.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        encrypt\n                        \n                    \n                \n            \n            \n                \n                    \n                    encrypt(data: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/encryption/encryption.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import CryptoJs from 'crypto-js';\n\nimport { Inject, Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class SymetricKeyEncryptionService {\n\tconstructor(@Inject('SYMMETRIC_CIPHER_KEY') private readonly key: string) {}\n\n\tpublic encrypt(data: string): string {\n\t\treturn CryptoJs.AES.encrypt(data, this.key).toString();\n\t}\n\n\tpublic decrypt(data: string): string {\n\t\treturn CryptoJs.AES.decrypt(data, this.key).toString(CryptoJs.enc.Utf8);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TargetInfoMapper.html":{"url":"classes/TargetInfoMapper.html","title":"class - TargetInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TargetInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/target-info.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(target: NewsTarget)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/target-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                NewsTarget\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TargetInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NewsTarget } from '@shared/domain';\nimport { TargetInfoResponse } from '../controller/dto/target-info.response';\n\nexport class TargetInfoMapper {\n\tstatic mapToResponse(target: NewsTarget): TargetInfoResponse {\n\t\tconst dto = new TargetInfoResponse();\n\t\tdto.id = target.id;\n\t\tdto.name = target.name;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TargetInfoResponse.html":{"url":"classes/TargetInfoResponse.html","title":"class - TargetInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TargetInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/target-info.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the Target entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/target-info.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the Target entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/target-info.response.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class TargetInfoResponse {\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the Target entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The name of the Target entity',\n\t})\n\tname: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Task.html":{"url":"classes/Task.html","title":"class - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/task.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                availableDate\n                            \n                            \n                                closed\n                            \n                            \n                                    Optional\n                                course\n                            \n                            \n                                    Optional\n                                dueDate\n                            \n                            \n                                    Optional\n                                lesson\n                            \n                            \n                                name\n                            \n                            \n                                private\n                            \n                            \n                                submissions\n                            \n                            \n                                    Optional\n                                teacher\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createStudentStatusForUser\n                            \n                            \n                                createTeacherStatusForUser\n                            \n                            \n                                getDescriptions\n                            \n                            \n                                getGradedUserIds\n                            \n                            \n                                getMaxSubmissions\n                            \n                            \n                                getNumberOfGradedUsers\n                            \n                            \n                                getNumberOfSubmittedUsers\n                            \n                            \n                                    Private\n                                getSubmissionsItems\n                            \n                            \n                                getSubmittedUserIds\n                            \n                            \n                                isDraft\n                            \n                            \n                                isGradedForUser\n                            \n                            \n                                isSubmittedForUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ITaskProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:74\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ITaskProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        availableDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({name: 'findAllByParentIds_findAllForTeacher'})@ManyToMany('User', undefined, {fieldName: 'archived'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        course\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Course', {fieldName: 'courseId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        dueDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lesson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Lesson\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Lesson', {fieldName: 'lessonId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        private\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submissions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany('Submission', 'task')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        teacher\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'teacherId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createStudentStatusForUser\n                        \n                    \n                \n            \n            \n                \ncreateStudentStatusForUser(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/task.entity.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ITaskStatus\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createTeacherStatusForUser\n                        \n                    \n                \n            \n            \n                \ncreateTeacherStatusForUser(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/task.entity.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ITaskStatus\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDescriptions\n                        \n                    \n                \n            \n            \n                \ngetDescriptions()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/task.entity.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         TaskParentDescriptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGradedUserIds\n                        \n                    \n                \n            \n            \n                \ngetGradedUserIds()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/task.entity.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityId[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMaxSubmissions\n                        \n                    \n                \n            \n            \n                \ngetMaxSubmissions()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/task.entity.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNumberOfGradedUsers\n                        \n                    \n                \n            \n            \n                \ngetNumberOfGradedUsers()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/task.entity.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNumberOfSubmittedUsers\n                        \n                    \n                \n            \n            \n                \ngetNumberOfSubmittedUsers()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/task.entity.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getSubmissionsItems\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSubmissionsItems()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/task.entity.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Submission[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSubmittedUserIds\n                        \n                    \n                \n            \n            \n                \ngetSubmittedUserIds()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/task.entity.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityId[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDraft\n                        \n                    \n                \n            \n            \n                \nisDraft()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/task.entity.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isGradedForUser\n                        \n                    \n                \n            \n            \n                \nisGradedForUser(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/task.entity.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSubmittedForUser\n                        \n                    \n                \n            \n            \n                \nisSubmittedForUser(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/task.entity.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Collection, Entity, ManyToOne, OneToMany, ManyToMany, Property, Index } from '@mikro-orm/core';\n\nimport { EntityId } from '../types';\n\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { Lesson } from './lesson.entity';\nimport type { Submission } from './submission.entity';\nimport { User } from './user.entity';\n\nexport interface ITaskProperties {\n\tname: string;\n\tavailableDate?: Date;\n\tdueDate?: Date;\n\tprivate?: boolean;\n\tteacher?: User;\n\tcourse?: Course;\n\tlesson?: Lesson;\n\tsubmissions?: Submission[];\n\tclosed?: User[];\n}\n\nexport interface ITaskStatus {\n\tsubmitted: number;\n\tmaxSubmissions: number;\n\tgraded: number;\n\tisDraft: boolean;\n\tisSubstitutionTeacher: boolean;\n}\n\nexport class TaskWithStatusVo {\n\ttask!: Task;\n\n\tstatus!: ITaskStatus;\n\n\tconstructor(task: Task, status: ITaskStatus) {\n\t\tthis.task = task;\n\t\tthis.status = status;\n\t}\n}\n\nexport type TaskParentDescriptions = { name: string; description: string; color: string };\n\n@Entity({ tableName: 'homeworks' })\n@Index({ name: 'findAllByParentIds_findAllForStudent', properties: ['private', 'dueDate', 'closed'] })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tavailableDate?: Date;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate = true;\n\n\t@ManyToOne('User', { fieldName: 'teacherId' })\n\tteacher?: User;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse?: Course;\n\n\t@ManyToOne('Lesson', { fieldName: 'lessonId' })\n\tlesson?: Lesson; // In database exist also null, but it can not set.\n\n\t@OneToMany('Submission', 'task')\n\tsubmissions = new Collection(this);\n\n\t// TODO: is mapped to boolean in future\n\t@Index({ name: 'findAllByParentIds_findAllForTeacher' })\n\t@ManyToMany('User', undefined, { fieldName: 'archived' })\n\tclosed = new Collection(this);\n\n\tconstructor(props: ITaskProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.availableDate = props.availableDate;\n\t\tthis.dueDate = props.dueDate;\n\t\tif (props.private !== undefined) this.private = props.private;\n\t\tthis.teacher = props.teacher;\n\t\tthis.course = props.course;\n\t\tthis.lesson = props.lesson;\n\t\tthis.submissions.set(props.submissions || []);\n\t\t// TODO: is replaced with boolean in future\n\t\tthis.closed.set(props.closed || []);\n\t}\n\n\tisDraft(): boolean {\n\t\t// private can be undefined in the database\n\t\treturn !!this.private;\n\t}\n\n\tprivate getSubmissionsItems(): Submission[] {\n\t\t// TODO: load/init check until mikro-orm base entity is extended\n\t\tconst submissions = this.submissions.getItems();\n\t\treturn submissions;\n\t}\n\n\tgetSubmittedUserIds(): EntityId[] {\n\t\tconst submissions = this.getSubmissionsItems();\n\t\tconst submittedUserIds = submissions.map((submission) => submission.getStudentId());\n\n\t\treturn submittedUserIds;\n\t}\n\n\tgetNumberOfSubmittedUsers(): number {\n\t\tconst submittedUserIds = this.getSubmittedUserIds();\n\t\tconst submitted = [...new Set(submittedUserIds)].length;\n\n\t\treturn submitted;\n\t}\n\n\tgetGradedUserIds(): EntityId[] {\n\t\tconst gradedUserIds = this.getSubmissionsItems()\n\t\t\t.filter((submission) => submission.isGraded())\n\t\t\t.map((submission) => submission.getStudentId());\n\n\t\treturn gradedUserIds;\n\t}\n\n\tgetNumberOfGradedUsers(): number {\n\t\tconst gradedUserIds = this.getGradedUserIds();\n\t\tconst graded = [...new Set(gradedUserIds)].length;\n\n\t\treturn graded;\n\t}\n\n\t// attention based on this parent use this.getParent() instant\n\tgetMaxSubmissions(): number {\n\t\t// hack until parents are defined\n\t\tconst numberOfStudents = this.course ? this.course.getNumberOfStudents() : 0;\n\n\t\treturn numberOfStudents;\n\t}\n\n\tcreateTeacherStatusForUser(userId: EntityId): ITaskStatus {\n\t\tconst submitted = this.getNumberOfSubmittedUsers();\n\t\tconst graded = this.getNumberOfGradedUsers();\n\t\tconst maxSubmissions = this.getMaxSubmissions();\n\t\tconst isDraft = this.isDraft();\n\t\t// only point that need the parameter\n\t\t// const isSubstitutionTeacher = this.isSubstitutionTeacher(userId);\n\t\t// work with getParent()\n\t\tlet isSubstitutionTeacher = false;\n\t\tif (this.course) {\n\t\t\tisSubstitutionTeacher = this.course.getSubstitutionTeacherIds().includes(userId);\n\t\t}\n\n\t\tconst status = {\n\t\t\tsubmitted,\n\t\t\tgraded,\n\t\t\tmaxSubmissions,\n\t\t\tisDraft,\n\t\t\tisSubstitutionTeacher,\n\t\t};\n\n\t\treturn status;\n\t}\n\n\tisSubmittedForUser(userId: EntityId): boolean {\n\t\tconst submitted = this.getSubmittedUserIds().some((id) => userId === id);\n\n\t\treturn submitted;\n\t}\n\n\tisGradedForUser(userId: EntityId): boolean {\n\t\tconst graded = this.getGradedUserIds().some((id) => userId === id);\n\n\t\treturn graded;\n\t}\n\n\tcreateStudentStatusForUser(userId: EntityId): ITaskStatus {\n\t\tconst isSubmitted = this.isSubmittedForUser(userId);\n\t\tconst isGraded = this.isGradedForUser(userId);\n\t\tconst maxSubmissions = 1;\n\t\tconst isDraft = this.isDraft();\n\t\tconst isSubstitutionTeacher = false;\n\n\t\tconst status = {\n\t\t\tsubmitted: isSubmitted ? 1 : 0,\n\t\t\tgraded: isGraded ? 1 : 0,\n\t\t\tmaxSubmissions,\n\t\t\tisDraft,\n\t\t\tisSubstitutionTeacher,\n\t\t\t// TODO: visibility of parent is missed ..but isSubstitutionTeacher and this is not really a part from task,\n\t\t\t// for this we must add parent relationship\n\t\t};\n\n\t\treturn status;\n\t}\n\n\t// TODO: based on the parent relationship\n\tgetDescriptions(): TaskParentDescriptions {\n\t\tlet descriptions: TaskParentDescriptions;\n\t\tif (this.course) {\n\t\t\tdescriptions = {\n\t\t\t\tname: this.course.name,\n\t\t\t\tdescription: this.lesson ? this.lesson.name : '',\n\t\t\t\tcolor: this.course.color,\n\t\t\t};\n\t\t} else {\n\t\t\tdescriptions = {\n\t\t\t\tname: '',\n\t\t\t\tdescription: '',\n\t\t\t\tcolor: '#ACACAC',\n\t\t\t};\n\t\t}\n\n\t\treturn descriptions;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskAuthorizationService.html":{"url":"injectables/TaskAuthorizationService.html","title":"injectable - TaskAuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskAuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/uc/task.authorization.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getPermittedCourses\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(courseRepo: CourseRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/uc/task.authorization.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseRepo\n                                                  \n                                                        \n                                                                        CourseRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedCourses\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedCourses(userId: EntityId, permission: TaskParentPermission)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.authorization.service.ts:17\n                \n            \n\n\n            \n                \n                    Important user group operations are only a temporary solution until we have established groups\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permission\n                                    \n                                                TaskParentPermission\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, Course } from '@shared/domain';\nimport { CourseRepo } from '@src/repositories';\n\nexport enum TaskParentPermission {\n\tread,\n\twrite,\n}\n\n@Injectable()\nexport class TaskAuthorizationService {\n\tconstructor(private readonly courseRepo: CourseRepo) {}\n\n\t/**\n\t * Important user group operations are only a temporary solution until we have established groups\n\t */\n\tasync getPermittedCourses(userId: EntityId, permission: TaskParentPermission): Promise {\n\t\t// courseGroups are missing\n\t\t// lessons are missing -> only search for hidden: false,\n\t\tlet permittedCourses: Course[] = [];\n\t\tif (permission === TaskParentPermission.write) {\n\t\t\t[permittedCourses] = await this.courseRepo.findAllForTeacher(userId);\n\t\t} else if (permission === TaskParentPermission.read) {\n\t\t\t[permittedCourses] = await this.courseRepo.findAllForStudent(userId);\n\t\t}\n\n\t\tconst entityIds = permittedCourses.map((o) => o.id);\n\t\treturn entityIds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TaskController.html":{"url":"controllers/TaskController.html","title":"controller - TaskController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TaskController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/task.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tasks\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, paginationQuery: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/task/controller/task.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    paginationQuery\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiTags } from '@nestjs/swagger';\n\nimport { ICurrentUser } from '@shared/domain';\nimport { PaginationQuery } from '@shared/controller/';\nimport { Controller, Get, Query } from '@nestjs/common';\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\n\nimport { TaskUC } from '../uc/task.uc';\nimport { TaskListResponse } from './dto';\nimport { TaskMapper } from '../mapper/task.mapper';\n\n@ApiTags('Task')\n@Authenticate('jwt')\n@Controller('tasks')\nexport class TaskController {\n\tconstructor(private readonly taskUc: TaskUC) {}\n\n\t@Get()\n\tasync findAll(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() paginationQuery: PaginationQuery\n\t): Promise {\n\t\tconst [tasksWithStatus, total] = await this.taskUc.findAll(currentUser, paginationQuery);\n\t\tconst taskresponses = tasksWithStatus.map((taskWithStatus) => {\n\t\t\treturn TaskMapper.mapToResponse(taskWithStatus);\n\t\t});\n\t\tconst { skip, limit } = paginationQuery;\n\t\tconst result = new TaskListResponse(taskresponses, total, skip, limit);\n\t\treturn result;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskFactory.html":{"url":"classes/TaskFactory.html","title":"class - TaskFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/testing/factory/task.factory.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseFactory\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                propsFactory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                draft\n                            \n                            \n                                afterBuild\n                            \n                            \n                                build\n                            \n                            \n                                buildList\n                            \n                            \n                                    Protected\n                                clone\n                            \n                            \n                                    Static\n                                define\n                            \n                            \n                                params\n                            \n                            \n                                rewindSequence\n                            \n                            \n                                    Protected\n                                sequence\n                            \n                            \n                                transient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        propsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Factory\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFactory\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFactory:13\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        draft\n                        \n                    \n                \n            \n            \n                \ndraft(isDraft)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/task.factory.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    isDraft\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        afterBuild\n                        \n                    \n                \n            \n            \n                \nafterBuild(afterBuildFn: HookFn)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:72\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding a function to be called after an object is built.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    afterBuildFn\n                                    \n                                            HookFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe function to call. It accepts your object of type T. The value this function returns gets returned from \"build\"\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        build\n                        \n                    \n                \n            \n            \n                \nbuild(params: DeepPartial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:45\n\n                \n            \n\n\n            \n                \n                    Build an entity using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildList\n                        \n                    \n                \n            \n            \n                \nbuildList(number: number, params: DeepPartial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:58\n\n                \n            \n\n\n            \n                \n                    Build a list of entities using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    number\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        a list of entities\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        clone\n                        \n                    \n                \n            \n            \n                \n                    \n                    clone(this: F, propsFactory: Factory)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:110\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        F\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                            F\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    propsFactory\n                                    \n                                            Factory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        define\n                        \n                    \n                \n            \n            \n                \n                    \n                    define(this, EntityClass: literal type, generator: GeneratorFn)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:29\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        U\n                        I\n                        F\n                    \n                \n            \n\n            \n                \n                    Define a factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    EntityClass\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The constructor of the entity to be built.\n\n                                    \n                                \n                                \n                                    generator\n                                    \n                                            GeneratorFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Your factory function - see Factory.define() in thoughtbot/fishery\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        params\n                        \n                    \n                \n            \n            \n                \nparams(params: DeepPartial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:84\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rewindSequence\n                        \n                    \n                \n            \n            \n                \nrewindSequence()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:106\n\n                \n            \n\n\n            \n                \n                    Set sequence back to its default value\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        sequence\n                        \n                    \n                \n            \n            \n                \n                    \n                    sequence()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:122\n\n                \n            \n\n\n            \n                \n                    Get the next sequence value\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        the next sequence value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transient\n                        \n                    \n                \n            \n            \n                \ntransient(transient: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:96\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default transient parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    transient\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ntransient params\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DeepPartial } from 'fishery';\nimport { Task, ITaskProperties } from '@shared/domain';\nimport { BaseFactory } from './base.factory';\n\nclass TaskFactory extends BaseFactory {\n\tdraft(isDraft = true): this {\n\t\tconst params: DeepPartial = { private: isDraft };\n\t\tif (isDraft === true) params.course = undefined;\n\t\treturn this.params(params);\n\t}\n}\n\nexport const taskFactory = TaskFactory.define(Task, ({ sequence }) => {\n\treturn { name: `task #${sequence}` };\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskListResponse.html":{"url":"classes/TaskListResponse.html","title":"class - TaskListResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskListResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/dto/task.response.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PaginationResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: TaskResponse[], total: number, skip?: number, limit?: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    TaskResponse[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        skip\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TaskResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:55\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { PaginationResponse, DecodeHtmlEntities } from '@shared/controller';\n\n/**\n * DTO for returning a task document via api.\n */\nexport class TaskResponse {\n\t@ApiProperty()\n\t@DecodeHtmlEntities()\n\tname: string;\n\n\t@ApiProperty()\n\tavailableDate?: Date;\n\n\t@ApiProperty()\n\tduedate?: Date;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tcourseName?: string;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tdescription?: string;\n\n\t@ApiPropertyOptional()\n\tdisplayColor?: string;\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\tstatus: {\n\t\tsubmitted?: number;\n\t\tmaxSubmissions?: number;\n\t\tgraded?: number;\n\t\tisDraft: boolean;\n\t\tisSubstitutionTeacher: boolean;\n\t};\n}\n\nexport class TaskListResponse extends PaginationResponse {\n\tconstructor(data: TaskResponse[], total: number, skip?: number, limit?: number) {\n\t\tsuper(total, skip, limit);\n\t\tthis.data = data;\n\t}\n\n\t@ApiProperty({ type: [TaskResponse] })\n\tdata: TaskResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskMapper.html":{"url":"classes/TaskMapper.html","title":"class - TaskMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/mapper/task.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(taskWithStatus: TaskWithStatusVo)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/mapper/task.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskWithStatus\n                                    \n                                                TaskWithStatusVo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TaskWithStatusVo } from '@shared/domain';\nimport { TaskResponse } from '../controller/dto';\n\nexport class TaskMapper {\n\tstatic mapToResponse(taskWithStatus: TaskWithStatusVo): TaskResponse {\n\t\tconst { task, status } = taskWithStatus;\n\t\tconst dto = new TaskResponse();\n\n\t\tdto.id = task.id;\n\t\tdto.name = task.name;\n\t\tdto.availableDate = task.availableDate;\n\t\tdto.duedate = task.dueDate;\n\t\tdto.createdAt = task.createdAt;\n\t\tdto.updatedAt = task.updatedAt;\n\t\tdto.status = {\n\t\t\tsubmitted: status.submitted,\n\t\t\tmaxSubmissions: status.maxSubmissions,\n\t\t\tgraded: status.graded,\n\t\t\tisDraft: status.isDraft,\n\t\t\tisSubstitutionTeacher: status.isSubstitutionTeacher,\n\t\t};\n\n\t\tconst taskDesc = task.getDescriptions();\n\t\tdto.courseName = taskDesc.name;\n\t\tdto.displayColor = taskDesc.color;\n\t\tdto.description = taskDesc.description;\n\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskModule.html":{"url":"modules/TaskModule.html","title":"module - TaskModule","body":"\n                   \n\n\n\n\n    Modules\n    TaskModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nCourseRepo\n\nCourseRepo\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nCourseRepo->TaskModule\n\n\n\n\n\nLessonRepo\n\nLessonRepo\n\nTaskModule -->\n\nLessonRepo->TaskModule\n\n\n\n\n\nTaskAuthorizationService\n\nTaskAuthorizationService\n\nTaskModule -->\n\nTaskAuthorizationService->TaskModule\n\n\n\n\n\nTaskRepo\n\nTaskRepo\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/task/task.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CourseRepo\n                        \n                        \n                            LessonRepo\n                        \n                        \n                            TaskAuthorizationService\n                        \n                        \n                            TaskRepo\n                        \n                        \n                            TaskUC\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TaskController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { CourseRepo } from '@src/repositories';\n\nimport { LessonRepo } from '@shared/repo';\nimport { TaskController } from './controller/task.controller';\nimport { TaskUC } from './uc';\nimport { TaskRepo } from './repo';\nimport { TaskAuthorizationService } from './uc/task.authorization.service';\n\n@Module({\n\timports: [],\n\tcontrollers: [TaskController],\n\tproviders: [TaskUC, TaskRepo, TaskAuthorizationService, LessonRepo, CourseRepo],\n})\nexport class TaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskRepo.html":{"url":"injectables/TaskRepo.html","title":"injectable - TaskRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/repo/task.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllByParentIds\n                            \n                            \n                                    Private\n                                    Async\n                                findTasksAndCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/repo/task.repo.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByParentIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByParentIds(parentIds: literal type, filters?: literal type, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:24\n                \n            \n\n\n            \n                \n                    Find all tasks by their parents which can be any of\n\na teacher who owns the task\na list of courses\na list of lessons\n\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    parentIds\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        parentIds for teacher, courses and lesson\n\n                                    \n                                \n                                \n                                    filters\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        filters\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        pagination, sorting\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findTasksAndCount\n                        \n                    \n                \n            \n            \n                \n                    \n                    findTasksAndCount(query: FilterQuery, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityManager, FilterQuery, QueryOrderMap } from '@mikro-orm/core';\n\nimport { EntityId, IFindOptions, Task } from '@shared/domain';\nimport { Counted } from '@shared/domain/types';\n\nimport { TaskScope } from './task-scope';\n\n@Injectable()\nexport class TaskRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\t/**\n\t * Find all tasks by their parents which can be any of\n\t * - a teacher who owns the task\n\t * - a list of courses\n\t * - a list of lessons\n\t *\n\t * @param parentIds parentIds for teacher, courses and lesson\n\t * @param filters filters\n\t * @param options pagination, sorting\n\t * @returns\n\t */\n\tasync findAllByParentIds(\n\t\tparentIds: {\n\t\t\tteacherId?: EntityId;\n\t\t\tcourseIds?: EntityId[];\n\t\t\tlessonIds?: EntityId[];\n\t\t},\n\t\tfilters?: { draft?: boolean; afterDueDateOrNone?: Date; closed?: EntityId },\n\t\toptions?: IFindOptions\n\t): Promise> {\n\t\tconst scope = new TaskScope();\n\n\t\tconst parentIdScope = new TaskScope('$or');\n\n\t\tif (parentIds.teacherId) {\n\t\t\tparentIdScope.byTeacherId(parentIds.teacherId);\n\t\t}\n\n\t\tif (parentIds.courseIds) {\n\t\t\tparentIdScope.byCourseIds(parentIds.courseIds);\n\t\t}\n\n\t\tif (parentIds.lessonIds) {\n\t\t\tparentIdScope.byLessonIds(parentIds.lessonIds);\n\t\t}\n\n\t\tscope.addQuery(parentIdScope.query);\n\n\t\tif (filters?.closed) {\n\t\t\tscope.byClosed(filters.closed);\n\t\t}\n\n\t\tif (filters?.draft !== undefined) {\n\t\t\tscope.byDraft(filters.draft);\n\t\t}\n\n\t\tif (filters?.afterDueDateOrNone !== undefined) {\n\t\t\tscope.afterDueDateOrNone(filters.afterDueDateOrNone);\n\t\t}\n\n\t\tconst countedTaskList = await this.findTasksAndCount(scope.query, options);\n\t\treturn countedTaskList;\n\t}\n\n\tprivate async findTasksAndCount(query: FilterQuery, options?: IFindOptions): Promise> {\n\t\tconst { pagination, order } = options || {};\n\t\tconst [taskEntities, count] = await this.em.findAndCount(Task, query, {\n\t\t\toffset: pagination?.skip,\n\t\t\tlimit: pagination?.limit,\n\t\t\torderBy: order as QueryOrderMap,\n\t\t});\n\n\t\tawait this.em.populate(taskEntities, ['course', 'lesson', 'submissions']);\n\t\treturn [taskEntities, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskResponse.html":{"url":"classes/TaskResponse.html","title":"class - TaskResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/dto/task.response.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for returning a task document via api.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                availableDate\n                            \n                            \n                                    Optional\n                                courseName\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                description\n                            \n                            \n                                    Optional\n                                displayColor\n                            \n                            \n                                    Optional\n                                duedate\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        availableDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        courseName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@DecodeHtmlEntities()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@DecodeHtmlEntities()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        duedate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@DecodeHtmlEntities()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { PaginationResponse, DecodeHtmlEntities } from '@shared/controller';\n\n/**\n * DTO for returning a task document via api.\n */\nexport class TaskResponse {\n\t@ApiProperty()\n\t@DecodeHtmlEntities()\n\tname: string;\n\n\t@ApiProperty()\n\tavailableDate?: Date;\n\n\t@ApiProperty()\n\tduedate?: Date;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tcourseName?: string;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tdescription?: string;\n\n\t@ApiPropertyOptional()\n\tdisplayColor?: string;\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\tstatus: {\n\t\tsubmitted?: number;\n\t\tmaxSubmissions?: number;\n\t\tgraded?: number;\n\t\tisDraft: boolean;\n\t\tisSubstitutionTeacher: boolean;\n\t};\n}\n\nexport class TaskListResponse extends PaginationResponse {\n\tconstructor(data: TaskResponse[], total: number, skip?: number, limit?: number) {\n\t\tsuper(total, skip, limit);\n\t\tthis.data = data;\n\t}\n\n\t@ApiProperty({ type: [TaskResponse] })\n\tdata: TaskResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskScope.html":{"url":"classes/TaskScope.html","title":"class - TaskScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/repo/task-scope.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _operator\n                            \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterDueDateOrNone\n                            \n                            \n                                byClosed\n                            \n                            \n                                byCourseIds\n                            \n                            \n                                byDraft\n                            \n                            \n                                byLessonIds\n                            \n                            \n                                byTeacherId\n                            \n                            \n                                addQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _operator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScopeOperator\n\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterDueDateOrNone\n                        \n                    \n                \n            \n            \n                \nafterDueDateOrNone(dueDate: Date)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task-scope.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dueDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byClosed\n                        \n                    \n                \n            \n            \n                \nbyClosed(userId?: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task-scope.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byCourseIds\n                        \n                    \n                \n            \n            \n                \nbyCourseIds(courseIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task-scope.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byDraft\n                        \n                    \n                \n            \n            \n                \nbyDraft(isDraft: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task-scope.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDraft\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byLessonIds\n                        \n                    \n                \n            \n            \n                \nbyLessonIds(lessonIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task-scope.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lessonIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byTeacherId\n                        \n                    \n                \n            \n            \n                \nbyTeacherId(teacherId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task-scope.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teacherId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityId, Task } from '@shared/domain';\nimport { Scope } from '@shared/repo';\n\nexport class TaskScope extends Scope {\n\t// TODO: parameter > isClosed: boolean\n\tbyClosed(userId?: EntityId): TaskScope {\n\t\tthis.addQuery({ closed: { $ne: userId } });\n\n\t\treturn this;\n\t}\n\n\tbyTeacherId(teacherId: EntityId): TaskScope {\n\t\tthis.addQuery({\n\t\t\t$and: [{ teacher: teacherId }, { course: null }, { lesson: null }],\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tbyCourseIds(courseIds: EntityId[]): TaskScope {\n\t\tthis.addQuery({\n\t\t\t$and: [{ course: { $in: courseIds } }, { lesson: null }],\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tbyLessonIds(lessonIds: EntityId[]): TaskScope {\n\t\tthis.addQuery({ lesson: { $in: lessonIds } });\n\n\t\treturn this;\n\t}\n\n\tbyDraft(isDraft: boolean): TaskScope {\n\t\t// FIXME - WE DON'T WANT THIS!!! NON-OPTIONAL BOOLEAN PROPERTIES HAVE TO BE DEFINED.\n\t\t// additionally handle undefined and null as false\n\t\tconst query = isDraft ? { private: { $eq: true } } : { private: { $ne: true } };\n\t\tthis.addQuery(query);\n\n\t\treturn this;\n\t}\n\n\tafterDueDateOrNone(dueDate: Date): TaskScope {\n\t\tthis.addQuery({ $or: [{ dueDate: { $gte: dueDate } }, { dueDate: null }] });\n\n\t\treturn this;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskUC.html":{"url":"injectables/TaskUC.html","title":"injectable - TaskUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/uc/task.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Private\n                                    Async\n                                findAllForStudent\n                            \n                            \n                                    Private\n                                    Async\n                                findAllForTeacher\n                            \n                            \n                                    Private\n                                getDefaultMaxDueDate\n                            \n                            \n                                    Private\n                                hasTaskDashboardPermission\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(taskRepo: TaskRepo, lessonRepo: LessonRepo, authorizationService: TaskAuthorizationService)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/uc/task.uc.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskRepo\n                                                  \n                                                        \n                                                                        TaskRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lessonRepo\n                                                  \n                                                        \n                                                                        LessonRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizationService\n                                                  \n                                                        \n                                                                        TaskAuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findAllForStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForStudent(userId: EntityId, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findAllForTeacher\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForTeacher(userId: EntityId, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getDefaultMaxDueDate\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultMaxDueDate()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Date\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        hasTaskDashboardPermission\n                        \n                    \n                \n            \n            \n                \n                    \n                    hasTaskDashboardPermission(currentUser: ICurrentUser, permission: TaskDashBoardPermission)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permission\n                                    \n                                                TaskDashBoardPermission\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { EntityId, IPagination, Counted, ICurrentUser, SortOrder, TaskWithStatusVo } from '@shared/domain';\n\nimport { LessonRepo } from '@shared/repo';\nimport { TaskRepo } from '../repo';\nimport { TaskAuthorizationService, TaskParentPermission } from './task.authorization.service';\n\nexport enum TaskDashBoardPermission {\n\tteacherDashboard = 'TASK_DASHBOARD_TEACHER_VIEW_V3',\n\tstudentDashboard = 'TASK_DASHBOARD_VIEW_V3',\n}\n@Injectable()\nexport class TaskUC {\n\tconstructor(\n\t\tprivate readonly taskRepo: TaskRepo,\n\t\tprivate readonly lessonRepo: LessonRepo,\n\t\tprivate readonly authorizationService: TaskAuthorizationService\n\t) {}\n\n\t// TODO replace curentUser with userId. this requires that permissions are loaded inside the use case by authorization service\n\tasync findAll(currentUser: ICurrentUser, pagination: IPagination): Promise> {\n\t\tlet response: Counted;\n\n\t\tif (this.hasTaskDashboardPermission(currentUser, TaskDashBoardPermission.studentDashboard)) {\n\t\t\tresponse = await this.findAllForStudent(currentUser.userId, pagination);\n\t\t} else if (this.hasTaskDashboardPermission(currentUser, TaskDashBoardPermission.teacherDashboard)) {\n\t\t\tresponse = await this.findAllForTeacher(currentUser.userId, pagination);\n\t\t} else {\n\t\t\tthrow new UnauthorizedException();\n\t\t}\n\n\t\treturn response;\n\t}\n\n\tprivate async findAllForStudent(userId: EntityId, pagination: IPagination): Promise> {\n\t\tconst courseIds = await this.authorizationService.getPermittedCourses(userId, TaskParentPermission.read);\n\t\tconst visibleLessons = await this.lessonRepo.findAllByCourseIds(courseIds, { hidden: false });\n\t\tconst dueDate = this.getDefaultMaxDueDate();\n\n\t\tconst [tasks, total] = await this.taskRepo.findAllByParentIds(\n\t\t\t{\n\t\t\t\tcourseIds,\n\t\t\t\tlessonIds: visibleLessons.map((o) => o.id),\n\t\t\t},\n\t\t\t{ draft: false, afterDueDateOrNone: dueDate, closed: userId },\n\t\t\t{\n\t\t\t\tpagination,\n\t\t\t\torder: { dueDate: SortOrder.asc },\n\t\t\t}\n\t\t);\n\n\t\tconst taskWithStatusVos = tasks.map((task) => {\n\t\t\tconst status = task.createStudentStatusForUser(userId);\n\t\t\treturn new TaskWithStatusVo(task, status);\n\t\t});\n\n\t\treturn [taskWithStatusVos, total];\n\t}\n\n\tprivate async findAllForTeacher(userId: EntityId, pagination: IPagination): Promise> {\n\t\tconst courseIds = await this.authorizationService.getPermittedCourses(userId, TaskParentPermission.write);\n\t\tconst visibleLessons = await this.lessonRepo.findAllByCourseIds(courseIds, { hidden: false });\n\n\t\tconst [tasks, total] = await this.taskRepo.findAllByParentIds(\n\t\t\t{\n\t\t\t\tteacherId: userId,\n\t\t\t\tcourseIds,\n\t\t\t\tlessonIds: visibleLessons.map((o) => o.id),\n\t\t\t},\n\t\t\t{ closed: userId },\n\t\t\t{\n\t\t\t\tpagination,\n\t\t\t\torder: { dueDate: SortOrder.desc },\n\t\t\t}\n\t\t);\n\n\t\tconst taskWithStatusVos = tasks.map((task) => {\n\t\t\tconst status = task.createTeacherStatusForUser(userId);\n\t\t\treturn new TaskWithStatusVo(task, status);\n\t\t});\n\n\t\treturn [taskWithStatusVos, total];\n\t}\n\n\tprivate hasTaskDashboardPermission(currentUser: ICurrentUser, permission: TaskDashBoardPermission): boolean {\n\t\tconst hasPermission = currentUser.user.permissions.includes(permission);\n\t\treturn hasPermission;\n\t}\n\n\t// It is more a util method or domain logic in context of findAllForStudent timeframe\n\tprivate getDefaultMaxDueDate(): Date {\n\t\tconst oneWeekAgo = new Date();\n\t\toneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\t\treturn oneWeekAgo;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskWithStatusVo.html":{"url":"classes/TaskWithStatusVo.html","title":"class - TaskWithStatusVo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskWithStatusVo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/task.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                status\n                            \n                            \n                                task\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(task: Task, status: ITaskStatus)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        task\n                                                  \n                                                        \n                                                                        Task\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        ITaskStatus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ITaskStatus\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Collection, Entity, ManyToOne, OneToMany, ManyToMany, Property, Index } from '@mikro-orm/core';\n\nimport { EntityId } from '../types';\n\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { Lesson } from './lesson.entity';\nimport type { Submission } from './submission.entity';\nimport { User } from './user.entity';\n\nexport interface ITaskProperties {\n\tname: string;\n\tavailableDate?: Date;\n\tdueDate?: Date;\n\tprivate?: boolean;\n\tteacher?: User;\n\tcourse?: Course;\n\tlesson?: Lesson;\n\tsubmissions?: Submission[];\n\tclosed?: User[];\n}\n\nexport interface ITaskStatus {\n\tsubmitted: number;\n\tmaxSubmissions: number;\n\tgraded: number;\n\tisDraft: boolean;\n\tisSubstitutionTeacher: boolean;\n}\n\nexport class TaskWithStatusVo {\n\ttask!: Task;\n\n\tstatus!: ITaskStatus;\n\n\tconstructor(task: Task, status: ITaskStatus) {\n\t\tthis.task = task;\n\t\tthis.status = status;\n\t}\n}\n\nexport type TaskParentDescriptions = { name: string; description: string; color: string };\n\n@Entity({ tableName: 'homeworks' })\n@Index({ name: 'findAllByParentIds_findAllForStudent', properties: ['private', 'dueDate', 'closed'] })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tavailableDate?: Date;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate = true;\n\n\t@ManyToOne('User', { fieldName: 'teacherId' })\n\tteacher?: User;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse?: Course;\n\n\t@ManyToOne('Lesson', { fieldName: 'lessonId' })\n\tlesson?: Lesson; // In database exist also null, but it can not set.\n\n\t@OneToMany('Submission', 'task')\n\tsubmissions = new Collection(this);\n\n\t// TODO: is mapped to boolean in future\n\t@Index({ name: 'findAllByParentIds_findAllForTeacher' })\n\t@ManyToMany('User', undefined, { fieldName: 'archived' })\n\tclosed = new Collection(this);\n\n\tconstructor(props: ITaskProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.availableDate = props.availableDate;\n\t\tthis.dueDate = props.dueDate;\n\t\tif (props.private !== undefined) this.private = props.private;\n\t\tthis.teacher = props.teacher;\n\t\tthis.course = props.course;\n\t\tthis.lesson = props.lesson;\n\t\tthis.submissions.set(props.submissions || []);\n\t\t// TODO: is replaced with boolean in future\n\t\tthis.closed.set(props.closed || []);\n\t}\n\n\tisDraft(): boolean {\n\t\t// private can be undefined in the database\n\t\treturn !!this.private;\n\t}\n\n\tprivate getSubmissionsItems(): Submission[] {\n\t\t// TODO: load/init check until mikro-orm base entity is extended\n\t\tconst submissions = this.submissions.getItems();\n\t\treturn submissions;\n\t}\n\n\tgetSubmittedUserIds(): EntityId[] {\n\t\tconst submissions = this.getSubmissionsItems();\n\t\tconst submittedUserIds = submissions.map((submission) => submission.getStudentId());\n\n\t\treturn submittedUserIds;\n\t}\n\n\tgetNumberOfSubmittedUsers(): number {\n\t\tconst submittedUserIds = this.getSubmittedUserIds();\n\t\tconst submitted = [...new Set(submittedUserIds)].length;\n\n\t\treturn submitted;\n\t}\n\n\tgetGradedUserIds(): EntityId[] {\n\t\tconst gradedUserIds = this.getSubmissionsItems()\n\t\t\t.filter((submission) => submission.isGraded())\n\t\t\t.map((submission) => submission.getStudentId());\n\n\t\treturn gradedUserIds;\n\t}\n\n\tgetNumberOfGradedUsers(): number {\n\t\tconst gradedUserIds = this.getGradedUserIds();\n\t\tconst graded = [...new Set(gradedUserIds)].length;\n\n\t\treturn graded;\n\t}\n\n\t// attention based on this parent use this.getParent() instant\n\tgetMaxSubmissions(): number {\n\t\t// hack until parents are defined\n\t\tconst numberOfStudents = this.course ? this.course.getNumberOfStudents() : 0;\n\n\t\treturn numberOfStudents;\n\t}\n\n\tcreateTeacherStatusForUser(userId: EntityId): ITaskStatus {\n\t\tconst submitted = this.getNumberOfSubmittedUsers();\n\t\tconst graded = this.getNumberOfGradedUsers();\n\t\tconst maxSubmissions = this.getMaxSubmissions();\n\t\tconst isDraft = this.isDraft();\n\t\t// only point that need the parameter\n\t\t// const isSubstitutionTeacher = this.isSubstitutionTeacher(userId);\n\t\t// work with getParent()\n\t\tlet isSubstitutionTeacher = false;\n\t\tif (this.course) {\n\t\t\tisSubstitutionTeacher = this.course.getSubstitutionTeacherIds().includes(userId);\n\t\t}\n\n\t\tconst status = {\n\t\t\tsubmitted,\n\t\t\tgraded,\n\t\t\tmaxSubmissions,\n\t\t\tisDraft,\n\t\t\tisSubstitutionTeacher,\n\t\t};\n\n\t\treturn status;\n\t}\n\n\tisSubmittedForUser(userId: EntityId): boolean {\n\t\tconst submitted = this.getSubmittedUserIds().some((id) => userId === id);\n\n\t\treturn submitted;\n\t}\n\n\tisGradedForUser(userId: EntityId): boolean {\n\t\tconst graded = this.getGradedUserIds().some((id) => userId === id);\n\n\t\treturn graded;\n\t}\n\n\tcreateStudentStatusForUser(userId: EntityId): ITaskStatus {\n\t\tconst isSubmitted = this.isSubmittedForUser(userId);\n\t\tconst isGraded = this.isGradedForUser(userId);\n\t\tconst maxSubmissions = 1;\n\t\tconst isDraft = this.isDraft();\n\t\tconst isSubstitutionTeacher = false;\n\n\t\tconst status = {\n\t\t\tsubmitted: isSubmitted ? 1 : 0,\n\t\t\tgraded: isGraded ? 1 : 0,\n\t\t\tmaxSubmissions,\n\t\t\tisDraft,\n\t\t\tisSubstitutionTeacher,\n\t\t\t// TODO: visibility of parent is missed ..but isSubstitutionTeacher and this is not really a part from task,\n\t\t\t// for this we must add parent relationship\n\t\t};\n\n\t\treturn status;\n\t}\n\n\t// TODO: based on the parent relationship\n\tgetDescriptions(): TaskParentDescriptions {\n\t\tlet descriptions: TaskParentDescriptions;\n\t\tif (this.course) {\n\t\t\tdescriptions = {\n\t\t\t\tname: this.course.name,\n\t\t\t\tdescription: this.lesson ? this.lesson.name : '',\n\t\t\t\tcolor: this.course.color,\n\t\t\t};\n\t\t} else {\n\t\t\tdescriptions = {\n\t\t\t\tname: '',\n\t\t\t\tdescription: '',\n\t\t\t\tcolor: '#ACACAC',\n\t\t\t};\n\t\t}\n\n\t\treturn descriptions;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Team.html":{"url":"classes/Team.html","title":"class - Team","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Team\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/team.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ITeamProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/team.entity.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ITeamProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/team.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from './base.entity';\n\nexport interface ITeamProperties {\n\tname: string;\n}\n@Entity({ tableName: 'teams' })\nexport class Team extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: ITeamProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TeamNews.html":{"url":"classes/TeamNews.html","title":"class - TeamNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TeamNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/news.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Team\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Team')\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:110\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:35\n\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'creatorId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:61\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:39\n\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:42\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:66\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('School', {fieldName: 'schoolId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:58\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:45\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:48\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:55\n\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:31\n\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'updaterId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:64\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModel, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { School } from './school.entity';\nimport type { Team } from './team.entity';\nimport type { User } from './user.entity';\nimport { NewsTarget, NewsTargetModel } from '../types/news.types';\nimport { EntityId } from '../types';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId | School;\n\tcreator: EntityId | User;\n\ttarget: EntityId | NewsTarget;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: User;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTarget;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToOne('User', { fieldName: 'creatorId' })\n\tcreator!: User;\n\n\t@ManyToOne('User', { fieldName: 'updaterId' })\n\tupdater?: User;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, updater: props.updater, target: props.target });\n\t\tthis.externalId = props.externalId;\n\t\tthis.source = props.source;\n\t\tthis.sourceDescription = props.sourceDescription;\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne('School')\n\ttarget: School;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne('Course')\n\ttarget: Course;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne('Team')\n\ttarget: Team;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TeamNewsController.html":{"url":"controllers/TeamNewsController.html","title":"controller - TeamNewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TeamNewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/team-news.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                team\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllForTeam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForTeam\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForTeam(teamId: string, currentUser: ICurrentUser, scope: NewsFilterQuery, pagination: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':teamId/news')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/team-news.controller.ts:22\n                \n            \n\n\n            \n                \n                    Responds with news of a given team for a user.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, Query } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ICurrentUser } from '@shared/domain';\n\nimport { PaginationQuery, ParseObjectIdPipe } from '@shared/controller';\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\n\nimport { NewsMapper } from '../mapper/news.mapper';\nimport { NewsUc } from '../uc';\nimport { NewsFilterQuery, NewsListResponse } from './dto';\n\n@ApiTags('News')\n@Authenticate('jwt')\n@Controller('team')\nexport class TeamNewsController {\n\tconstructor(private readonly newsUc: NewsUc) {}\n\n\t/**\n\t * Responds with news of a given team for a user.\n\t */\n\t@Get(':teamId/news')\n\tasync findAllForTeam(\n\t\t@Param('teamId', ParseObjectIdPipe) teamId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() scope: NewsFilterQuery,\n\t\t@Query() pagination: PaginationQuery\n\t): Promise {\n\t\t// enforce filter by a given team, used in team tab\n\t\tscope.targetId = teamId;\n\t\tscope.targetModel = 'teams';\n\t\tconst [newsList, count] = await this.newsUc.findAllForUser(\n\t\t\tcurrentUser.userId,\n\t\t\tNewsMapper.mapNewsScopeToDomain(scope),\n\t\t\t{ pagination }\n\t\t);\n\t\tconst dtoList = newsList.map((news) => NewsMapper.mapToResponse(news));\n\t\tconst response = new NewsListResponse(dtoList, count);\n\t\treturn response;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestBootstrapConsole.html":{"url":"classes/TestBootstrapConsole.html","title":"class - TestBootstrapConsole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestBootstrapConsole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/console/test/bootstrap.console.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    AbstractBootstrapConsole\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/console/test/bootstrap.console.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Test, TestingModule } from '@nestjs/testing';\nimport { AbstractBootstrapConsole, BootstrapConsole } from 'nestjs-console';\n\nexport class TestBootstrapConsole extends AbstractBootstrapConsole {\n\tcreate(): Promise {\n\t\treturn Test.createTestingModule({\n\t\t\timports: [this.options.module],\n\t\t}).compile();\n\t}\n}\n\nexport const execute = async (bootstrap: BootstrapConsole, args: string[]): Promise => {\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tconst commandResponse = await bootstrap.boot([process.argv0, 'console', ...args]);\n\treturn Promise.resolve();\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeoutInterceptor.html":{"url":"injectables/TimeoutInterceptor.html","title":"injectable - TimeoutInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimeoutInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/timeout.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                This interceptor leaves the request execution after a given timeout in ms.\nThis will not stop the running services behind the controller.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _timeout\n                            \n                            \n                                    Protected\n                                    Static\n                                defaultTimeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    timeout\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _timeout\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Static\n                        defaultTimeout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : REQUEST_TIMEOUT\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        timeout\n                    \n                \n\n                \n                    \n                        gettimeout()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:29\n                                \n                            \n\n                \n                    \n                        settimeout(milliseconds: number)\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:33\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            milliseconds\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler, RequestTimeoutException } from '@nestjs/common';\nimport { Observable, throwError, TimeoutError } from 'rxjs';\nimport { catchError, timeout } from 'rxjs/operators';\nimport { REQUEST_TIMEOUT } from './constants';\n\n/**\n * This interceptor leaves the request execution after a given timeout in ms.\n * This will not stop the running services behind the controller.\n */\n@Injectable()\nexport class TimeoutInterceptor implements NestInterceptor {\n\tprotected static defaultTimeout = REQUEST_TIMEOUT;\n\n\tprivate _timeout?: number;\n\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\treturn next.handle().pipe(\n\t\t\ttimeout(this.timeout),\n\t\t\tcatchError((err) => {\n\t\t\t\tif (err instanceof TimeoutError) {\n\t\t\t\t\treturn throwError(new RequestTimeoutException());\n\t\t\t\t}\n\t\t\t\treturn throwError(err);\n\t\t\t})\n\t\t);\n\t}\n\n\tget timeout(): number {\n\t\treturn this._timeout || TimeoutInterceptor.defaultTimeout;\n\t}\n\n\tset timeout(milliseconds: number) {\n\t\tthis._timeout = milliseconds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateNewsParams.html":{"url":"classes/UpdateNewsParams.html","title":"class - UpdateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/update-news.params.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for Updating a news document.\nA PartialType is a halper which allows to extend an existing class by making all its properties optional.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                displayAt\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiPropertyOptional({description: 'Content of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDate()@ApiPropertyOptional({description: 'The point in time from when the News entity schould be displayed'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiPropertyOptional({description: 'Title of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsDate, IsOptional, IsString } from 'class-validator';\n\n/**\n * DTO for Updating a news document.\n * A PartialType is a halper which allows to extend an existing class by making all its properties optional.\n */\nexport class UpdateNewsParams {\n\t@IsOptional()\n\t@IsString()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@IsOptional()\n\t@IsString()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@IsOptional()\n\t@IsDate()\n\t@ApiPropertyOptional({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/user.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                            \n                                roles\n                            \n                            \n                                school\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: IUserProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        IUserProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()@Index({name: 'externalUserIdentifier'})@Unique()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({name: 'roleIdBasedSearches'})@ManyToMany('Role', undefined, {fieldName: 'roles'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({name: 'searchUserForSchool'})@ManyToOne('School', {fieldName: 'schoolId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Collection, Entity, ManyToMany, ManyToOne, Property, Index, Unique } from '@mikro-orm/core';\nimport type { Role } from './role.entity';\nimport type { School } from './school.entity';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface IUserProperties {\n\temail: string;\n\tfirstName?: string;\n\tlastName?: string;\n\tschool: School;\n\troles: Role[];\n}\n\n@Entity({ tableName: 'users' })\nexport class User extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'externalUserIdentifier' })\n\t@Unique()\n\temail: string;\n\n\t@Property()\n\tfirstName?: string;\n\n\t@Property()\n\tlastName?: string;\n\n\t@Index({ name: 'roleIdBasedSearches' })\n\t@ManyToMany('Role', undefined, { fieldName: 'roles' })\n\troles = new Collection(this);\n\n\t@Index({ name: 'searchUserForSchool' })\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\tconstructor(props: IUserProperties) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.email = props.email;\n\t\tthis.school = props.school;\n\t\tthis.roles.set(props.roles);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/controller/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                me\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        me\n                        \n                    \n                \n            \n            \n                \n                    \n                    me(currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('me')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/user/controller/user.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiTags } from '@nestjs/swagger';\n\nimport { Controller, Get } from '@nestjs/common';\nimport { ICurrentUser } from '@shared/domain';\n\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\nimport { UserUC } from '../uc';\nimport { ResolvedUser } from './dto/ResolvedUser.dto';\n\n@ApiTags('User')\n@Authenticate('jwt')\n@Controller('user')\nexport class UserController {\n\tconstructor(private readonly userUc: UserUC) {}\n\n\t@Get('me')\n\tasync me(@CurrentUser() currentUser: ICurrentUser): Promise {\n\t\treturn Promise.resolve(currentUser.user);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserFacade.html":{"url":"injectables/UserFacade.html","title":"injectable - UserFacade","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/user.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                resolveUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userUC: UserUC)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/user.facade.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userUC\n                                                  \n                                                        \n                                                                        UserUC\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        resolveUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolveUser(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/user.facade.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\n\nimport { UserUC } from './uc/user.uc';\nimport { ResolvedUser } from './controller/dto';\n\n@Injectable()\nexport class UserFacade {\n\tconstructor(private readonly userUC: UserUC) {}\n\n\tasync resolveUser(userId: EntityId): Promise {\n\t\tconst resolvedUser = await this.userUC.getUserWithPermissions(userId);\n\t\treturn resolvedUser;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoMapper.html":{"url":"classes/UserInfoMapper.html","title":"class - UserInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/user-info.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(user: User)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/user-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '@shared/domain';\nimport { UserInfoResponse } from '../controller/dto';\n\nexport class UserInfoMapper {\n\tstatic mapToResponse(user: User): UserInfoResponse {\n\t\tconst dto = new UserInfoResponse();\n\t\tdto.id = user.id;\n\t\tdto.firstName = user.firstName;\n\t\tdto.lastName = user.lastName;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoResponse.html":{"url":"classes/UserInfoResponse.html","title":"class - UserInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/user-info.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'First name of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the User entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Last name of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class UserInfoResponse {\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the User entity',\n\t})\n\tid: string;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'First name of the user',\n\t})\n\tfirstName?: string;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'Last name of the user',\n\t})\n\tlastName?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserFacade \n\nUserFacade \n\n\n\nUserModule\n\nUserModule\n\nUserFacade  -->\n\nUserModule->UserFacade \n\n\n\n\n\nRoleRepo\n\nRoleRepo\n\nUserModule -->\n\nRoleRepo->UserModule\n\n\n\n\n\nRoleUC\n\nRoleUC\n\nUserModule -->\n\nRoleUC->UserModule\n\n\n\n\n\nUserFacade\n\nUserFacade\n\nUserModule -->\n\nUserFacade->UserModule\n\n\n\n\n\nUserRepo\n\nUserRepo\n\nUserModule -->\n\nUserRepo->UserModule\n\n\n\n\n\nUserUC\n\nUserUC\n\nUserModule -->\n\nUserUC->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoleRepo\n                        \n                        \n                            RoleUC\n                        \n                        \n                            UserFacade\n                        \n                        \n                            UserRepo\n                        \n                        \n                            UserUC\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserFacade\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserController } from './controller';\nimport { UserUC, RoleUC } from './uc';\nimport { RoleRepo, UserRepo } from './repo';\nimport { UserFacade } from './user.facade';\n\n@Module({\n\tcontrollers: [UserController],\n\tproviders: [RoleRepo, UserRepo, UserUC, RoleUC, UserFacade],\n\texports: [UserFacade],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRepo.html":{"url":"injectables/UserRepo.html","title":"injectable - UserRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/repo/user.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/repo/user.repo.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/user.repo.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId, User } from '@shared/domain';\n\n@Injectable()\nexport class UserRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findById(id: EntityId): Promise {\n\t\tconst user = await this.em.findOneOrFail(User, { id });\n\t\treturn user;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserUC.html":{"url":"injectables/UserUC.html","title":"injectable - UserUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/uc/user.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUserWithPermissions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepo: UserRepo, roleUC: RoleUC)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/uc/user.uc.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        UserRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleUC\n                                                  \n                                                        \n                                                                        RoleUC\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserWithPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserWithPermissions(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/uc/user.uc.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { ResolvedUserMapper } from '../mapper';\nimport { ResolvedUser } from '../controller/dto/ResolvedUser.dto';\nimport { RoleUC } from './role.uc';\nimport { UserRepo } from '../repo';\n\n@Injectable()\n// TODO: this is a domain service and must move to right place. It combine the repo roles and users\nexport class UserUC {\n\tconstructor(private readonly userRepo: UserRepo, private readonly roleUC: RoleUC) {}\n\n\tasync getUserWithPermissions(userId: EntityId): Promise {\n\t\tconst user = await this.userRepo.findById(userId);\n\t\tconst roles = user.roles.getItems();\n\t\tconst resolved = await this.roleUC.resolvePermissionsByRoles(roles);\n\n\t\tconst resolvedUser = ResolvedUserMapper.mapToResponse(user, resolved.permissions, resolved.roles);\n\t\treturn resolvedUser;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationError.html":{"url":"classes/ValidationError.html","title":"class - ValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/validation.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BusinessError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                details\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDetails\n                            \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, details?: Record)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/validation.error.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                    Record\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:12\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDetails\n                        \n                    \n                \n            \n            \n                \ngetDetails()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Record\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResponse\n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\nimport { BusinessError } from './business.error';\n\nexport class ValidationError extends BusinessError {\n\tconstructor(readonly message: string, details?: Record) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\ttype: 'VALIDATION_ERROR',\n\t\t\t\ttitle: 'Validation Error',\n\t\t\t\tdefaultMessage: message,\n\t\t\t},\n\t\t\tHttpStatus.BAD_REQUEST,\n\t\t\tdetails\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationErrorDetailResponse.html":{"url":"classes/ValidationErrorDetailResponse.html","title":"class - ValidationErrorDetailResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationErrorDetailResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/validation-error-detail.response.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(field: string, errors: string[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/validation-error-detail.response.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ValidationErrorDetailResponse {\n\tconstructor(readonly field: string, readonly errors: string[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ValidationModule.html":{"url":"modules/ValidationModule.html","title":"module - ValidationModule","body":"\n                   \n\n\n\n\n    Modules\n    ValidationModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/validation/validation.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_PIPE } from '@nestjs/core';\nimport { GlobalValidationPipe } from './pipe/global-validation.pipe';\n\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_PIPE,\n\t\t\tuseClass: GlobalValidationPipe,\n\t\t},\n\t],\n})\nexport class ValidationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\nAllowed Types of change: Added, Changed, Deprecated, Removed, Fixed, Security\n[Unreleased]\nAdded\nChanged\n[26.15.0] - 2021-11-02\n\nBC-526 - files deleted via directory deletion will be deleted with the deletion concept\nBC-369 - add more LDAP systems to the init deployment\nBC-174 - Improve test data generation with factories\nBC-40  - rocketchat authentication via user+password\nBC-532 - add index to course, lesson, task entity and fix permission issue\n\nChanged\n\nBC-451 - move database, feathers, mail from modules to @shared/infra\nBC-379 - updated the engine version to node 16 and npm 8\nBC-477 remove generics from test-module getter\nBC-507 - remove orphaned GridElements from database\nBC-469 - defined docker base image\nBC-543 - move status logic to task entity\nBC-402 - change e2e test include to reusable workflows\n\nFixed\n\nBC-451 - fix timezone related test issues\n\n[26.14.0] - 2021-10-26\nAdded\n\nBC-155 - add substitution teacher flag to task\nBC-121 - add console script to delete soft-deleted files\nBC-495 - ungroup elements from groups in the course dashboard\nBC-496 - naming of groups in the course dashboard\n\nChanged\n\nBC-383 - remove usage of npm run seed in server\nBC-527 - cleanup legacy code for filestorage deletion concept\nBC-13 - filter archived tasks and dont return it by task.findAll uc\nBC-501 - return lesson name as task description for more detailed informations\nBC-578 - enable esModuleInterop in typescript configuration\n\n[26.13.2] - 2021-10-22\nChanged\n\nBC-379 - hard-code node 14 and npm 6\n\n[26.13.0] - 2021-10-19\nAdded\n\nBC-394 - send email wishes to additionally needed addresses\nBC-391 - display special characters properly\nBC-339 - creation of groups in the courses dashboard\nBC-339 - add elements to groups in the courses dashboard\n\nFixed\n\nBC-436 - Fix univention LDAP strategy\nBC-21 - Remove generics from DTOs, because generics can not be used to generate OpenApi properly\n\nChanged\n\nBC-487 - update mongodb-memory-server from 6.9.6 to 7.4.4\nBC-490 - setup entities for tests without needing a database\n\n[26.12.0] - 2021-10-12\nAdded\n\nBC-388 - add simple script for end sjw\nBC-319 - add route to change the position of a course dashboard element\nBC-343 - run unstable e2e tests on label run unstable tests\nBC-6 - Show prepared tasks (drafts) for teachers\n\nChanged\n\nBC-25 - sort database seeds ascending by date of creation (_id, createdAt)\nBC-25 - move logic of npm run setup into console application and add management application with same behavior\nBC-237 - Clean up global entity registration\nBC-331 - BC-354 - rename ansible variables for OnePassword\nBC-269 - check in firstLogin that students can only pass with existing birthdate\nBC-154 - remove lesson entity from task repository\nBC-231 - upgraded nestjs@7 to nestjs@8\n\nFixed\nSecurity\n\nBC-386 - added CREATE tests for consentVersionService\nBC-297 - fixed set-value dependency vulnerabilities\nBC-377 - fixed axios dependency vulnerabilities\n\n[26.11.3] - 2021-10-05\nFixed\n\nBC-121 - run add bucket to files migration in parallel\n\n[26.11.2] - 2021-09-29\nFixed\n\nBC-111 wait for mongodb to spin up in deployment\n\nBC-370 - fixed file directory creation\n\n\n[26.11.1] - 2021-09-29\nFixed\n\nBC-365 - fixed task overview pagination\n\n[26.11.0] - 2021-09-22\nChanged\n\nBC-274 Change Course Colors\nBC-213 - rewrite file deletion with deletion marker\nBC-68 - e2e run dependent on build image job\nBC-179 - refactor task and entity and relations\nBC-315 - stabilized resolve user roles workflow by use roles from requested user and not from jwt\n\nAdded\n\nBC-121 add bucket and storage provider to file documents\nBC-164 - refactored the supportJWTservice and added roles information to its jwt data\nBC-279 - introduce console application interface to call providers via console command\nBC-9 add entity and repo for course dashboards\nBC-9 add a route to recieve dummy data for course dashboards\nBC-318 implement persistance for course dashboards\n\nFixed\n\nBC-232 prevent users from changing schoolyears\nBC-233 - when an LDAP system is removed from a school, the ldapschoolidentifier and lastLdapSync are removed as well\nmoved some changelog entries into their correct place\n\nRemoved\n\nBC-262 - remove S3 lifecycle configuration code\nBC-247 - remove timestamp from LDAP search Query for sync\n\n[26.10.3] - 2021-09-09\nFixed\n\nBC-267 - skip whitelist-check for api requests on /wopi\n\n[26.10.2] - 2021-09-03\nAdded\n\nBC-120 - add feature flag for S3 CORS\nBS-112 - insert missing attribute during school creation\n\n[26.10.1] - 2021-09-03\nFixed\n\nBC-187 - secures the system route\n\n[26.10.0] - 2021-09-03\nFixed\n\nremove broken systemid from seed data\nSC-9083 - expose env variables for school administration\nBC-44 - remove JWT_WHITELIST_ACCEPT_ALL feature flag\nBC-44 - integrate jwt whitelist check in nestjs jwt authentication\nBC-42 - cycle detection in role inheritance\nBC-64 - enable e2e test execution for push event on main branch\nBC-41 - adds feature flag for S3 storage lifecycle management (currently not supported by Strato Hidrive)\nBC-37 - BC-54 - reduce resource consumption for deployed server\nBC-81 - remove old Lern-Store\nBC-119 - remove malfunction S3 lifecycle migration\nBC-38 - BC-124 - Add ansible files for Bosscloud (default)\nBC-110 - fileStorage/security should only be called from within the cluster\n\nAdded\n\nBC-5 - Show completed tasks for students\n\nChanged\n\nRefactor nestjs task module and resort imports for course and coursegroup entities and repositories. Add testHelpers.\n\n[26.9.3] - 2021-09-10\nFixed\n\nBC-239 - fix date parsing for students birth date\n\n[26.9.2] - 2021-08-27\nChanged\n\nBC-137 - fix bug with display of Blue Bar\nBC-106 - exit maintenance & change school year for LDAP schools on Boss and NBC\n\n[26.9.1] - 2021-08-18\nChanged\n\nSC-9192 - enable cors for nestjs app routes\nSC-9130 - use whiltelisted filenames at the s3 file storage backend\n\n[26.9.0] - 2021-08-14\nChanged\n\nOPS-2491 - Change the hydra service url\nSC-9231 - add permissions to SuperHero to edit admin role\nSC-9269 - let eslint ensure no tests with .only exist anymore\nSC-9192 - mount feathers and nestjs apps under dedicated version paths and allow general path prefix for the whole server\n\nAdded\n\nadd inital learnroom module with support of course and coursegroups for preparing the next refactoring iteration in tasks module\nSC-9231 - add permissions to SuperHero to edit admin role\n\n[26.8.0] - 2021-08-10\n[26.7.1] - 2021-08-03\n\nSC-9233 - fix Lern-Store on THR to load also WLO content\n\n[26.7.0] - 2021-07-28\nAdded\n\nSC-9213 - Consider group submissions when deciding what open tasks a student has\nSC-9150 - add script to change school year\nSC-9211 - enable maildrop and mailcatcher for e2e tests (see docker-compose)\nSC-9177 - allow superheros to delete admins\n\nChanged\n\nSC-9219 - limited jest workers for not taking all workers within of a single github action\n\nFixed\n\nSC-9212 - fix changing classes via CSV import\nSC-9053 - fix sending registration link via checkbox for student/teacher creation\n\n[26.6.4] - 2021-07-23\nChanged\n\nmove S3 expiration migration to the end\n\n[26.6.3] - 2021-07-21\nFixed\n\nSC-9092 - add missing S3 key decryption in migration\n\n[26.6.2] - 2021-07-21\nChanged\n\nuse edusharing lernstore mode on production\n\n[26.6.1] - 2021-07-21\nChanged\n\nchange default lernstore mode to edusharing\n\n[26.6.0] - 2021-07-20\nAdded\n\nSC-9018; SC-9003 - created schoolsList public endpoint, and jwt secured /schools endpoint\nSC-9093 - make configured default language and timezone available in config service\nSC-9092 - delete S3 files after 7 days from user deletion\nSC-8959 - Add messenger to deletion concept\nSC-9157 - Add RabbitMQ connection to new mail service\nSC-9157 - Improve config handling for RabbitMQ\nSC-9213 - Consider group submissions when deciding what open tasks a student has\nOPS-2574 - Removeing autodeployed branches for developers if branch deleted\nOPS-2579 - Add Ansible task and templates for adding storage\n\nChanged\n\nSC-9190 - publish news target names\nSC-8887 - allow public access to consentVersion service\nSC-8448 - Not storing temporary Merlin links and fixed concurrency bug\nremove unnecessary timeout definitions from tests and avoid promise chains\nSC-6294 Restructure NestJS Sources: Testing, Core Module, Entities, Shared. See details in https://hpi-schul-cloud.github.io/schulcloud-server/\nexecute unit tests via github action instead of using travis\n\nFixed\n\nSC-9197 - Limiting the max workers for jest to 2 workers, if the default mechanism runs it's go up to infinity workers and if one die the test never stop\nSC-9202 - fix sending of registration link mails\n\n[26.5.0] - 2021-06-28\nAdded\n\nSC-9431 - add teacher view to task/open over permission TASK_DASHBOARD_VIEW_V3, solving permissions after authenticate and add v3/user/me route.\n\nChanged\n\nSC-6294 Restructure NestJS Sources: Testing, Core Module, Entities, Shared. See details in https://hpi-schul-cloud.github.io/schulcloud-server/\n\n[26.4.9] - 2021-06-29\nFixed\n\napi route forwarding\n\nRemoved\n\nSC-9159 removed news from feathers except remove team event, which already is replaced by v3/news\n\n[26.4.8] - 2021-06-29\nFixed\n\nroute forwarding\n\n[26.4.7] - 2021-06-22\nAdded\n\nSC-9148 - Add migration for change of school year on BRB\n\nFixed\n\nSC-9170 - let superhero delete other users\n\n[26.4.6] - 2021-06-24\nChanged\n\nOPS-2466 - changes build pipeline to github actions\n\n[26.4.5] - 2021-06-21\nAdded\n\nSC-9156 - Add maintenance mode for LDAP rewrite\n\n[26.4.4] - 2021-06-16\nChange\n\nrename permission TASK_DASHBOARD_VIEW_V3\n\n[26.4.3] - 2021-06-16\nChange\n\nSC-9139 - Add a check if user roles should be updated or not to the repo\n\n[26.4.2] - 2021-06-16\nFixed\n\nnpm run syncIndex work for not existing collections in the db\n\n[26.4.1] - 2021-06-15\nChange\n\nSC-9029 - Change place of the channel creation for RabbitMQ\n\n[26.4.0] - 2021-06-11\n\nSC-9004 - Sync env variables between backend and frontend\n\n[26.3.1] - 2021-06-14\nAdded\n\nSC-9134 - Add missing mongo indexes for LDAP Sync\n\n[26.3.0] - 2021-06-07\nChanged\n\nSC-8898 - parallelize LDAP sync using RabbitMQ\n\n[26.2.2] - 2021-06-04\nFixed\n\nFixed dependencies issue\n\n[26.2.1] - 2021-06-02\nAdded\n\nSC-9103 - add logging for syncIndexes script\n\n[26.2.0] - 2021-06-01\nAdded\n\nOPS-2418 - Change buildpipelines (Server, Client, Nuxt) to execute E2E tests according QF decision\nSC-8250 - add bulk deletion to user service v2\nSC-8341 - add tombstone school to tombstone user\nSC-8408 - added delete events by scope Id route\nSC-7937 - Allow adding multiple materials to lesson\nSC-7868 - Deletion concept for personal file connections\nSC-8873 - Add prioritization for Matrix messenger tasks\nSC-8982 - add inital service ressource messuring test setup\nOPS-1499 - Add feature to CI Pipeline and provide manual deployments of branches and automatic deploy of release to staging\nAdd run script for sync indexes based on existing and registered schemas.\nSC-9085 - add registration pin deletion for parent emails\nSC-9004 - Sync env variables between backend and frontend\nOPS-1499 - Add feature to CI Pipeline and provide manual deployments of branches\nAdd run script for sync indexes based on existing and registered schemas.\n\nChanged\n\nSC-8440 - fixed open api validation for manual consent\nSC-9055 - changed Edu-Sharing permissions for Brandenburg Sportinhalt content\nSC-6950 - validation for officialSchoonNumber now allows 5 or 6 digits\nSC-8599 - added helparea contact dropdown and send value\nSC-7944 - use persistent ids for Lern-Store content items\nOPS-1508 - added limits for cpu and ram to the docker compose files\nSC-8500 - refactoring in error handling\nSC-7021 - automatic deletion documents in the trashbins collection after 7 days.\nSC-5202 - homework tests refactoring\nSC-7868 - filestorage integration tests are skipped on local test environments if minio is not setup\nSC-8779 - messenger: use user-based fixed device ids\n\nFixed\n\nSC-8933 - fix date format on first login\nSC-8728 - fix configuration reset in tests\nSC-8873 - fix addUser prioritization for full school Matrix messenger sync\nSC-8982 - fix test setup for on the fly building test like routes jwt\n\n[26.1.0]\nAdded\n\nSC-8910 - added an isExternal check to the adminUsers service remove method\n\nChanged\n\nSC-8732 - change search filter gate and weight of values in indexes. Will reduce amount of results\nSC-8880 - changed the validation for search queries in NAT, now it allows empty\n\n[26.0.16] - 2021-04-20\nRemoved\n\n\nSC-8748 - revert: bump feathers-mongoose from 6.3.0 to 8.3.1\n\n\n\n[26.0.15] - 2021-04-19\nChanged\n\nSC-8909 - messenger: use user-based fixed device ids\n\n[26.0.14] - 2021-04-16\nChanged\n\nSC-8934 - no more autosync for the migrations for the mongodb\n\n[26.0.13] - 2021-04-15\nFixed\n\nSC-8917 - verify configuration missing school\n\n[26.0.12] - 2021-04-14\nChanged\n\nSC-8929 - increase performance for alert requests\n\n[26.0.11] - 2021-04-13\nChanged\n\nSC-8748 - bump feathers-mongoose from 6.3.0 to 8.3.1\n\n[26.0.10] - 2021-04-09\nFixed\n\nSC-8908 ldap sync: fix lock\n\n[26.0.9] - 2021-04-06\n\nSC-8779 - fix partial LDAP sync\n\n[26.0.8] - 2021-03-31\nFixed\n\nSC-8691 ldap sync: fix potential deadlock while loadind ldap data\n\n[26.0.7] - 2021-03-31\nFixed\n\nSC-8768 ldap sync: in user search include current school\n\n[26.0.6] - 2021-03-30\nFixed\n\nSC-8836 - teachers can add classes from other teachers to their courses\n\n[26.0.5] - 2021-03-29\nFixed\n\nSC-8691 - LDAP sync can be run with multiple school in parallel\n\n[26.0.4] - 2021-03-25\nChanged\n\nSC-8829 - status of logging in rocket chat user is set to offline\n\n[26.0.3] - 2021-03-17\nChanged\n\nmerged hotfixes 25.6.11 and following into 26.0 branch\n\n[26.0.2] - 2021-03-10\nFixed\n\nSC-5202 - fixed an issue with internal pagination in homework-submissions\n\n[26.0.1] - 2021-03-09\nChanged\n\nmerged 25.6.10 into new version\n\n[26.0.0]\nFixed\n\nSC-6679 - fixed table styling in topic text-component\nSC-8534 - fix registration link generation\nSC-8682 - fix students are editable in externally managed schools\nSC-8534 fix registration link generation\nAllow sorting after search\n\n[25.6.11] - 2021-03-17\n[25.6.13] - 2021-03-16\n\nSC-8782 Migration for changing urls\n\n[25.6.12] - 2021-03-15\n\nSC-8782 Fixed lesson context Query\n\n[25.6.11] - 2021-03-15\nFixed\n\nSC-8211 - Fixed course events duplications\n\n[25.6.10] - 2021-03-09\n\nSC-8770 Fixed issue where parent consents were overwritten\n\n[25.6.9] - 2021-02-26\nFixed\n\nSC-8714 Fixed an issue in school creation that could cause the iserv-sync to fail\n\n[25.6.8] - 2021-02-19\nChanged\n\nSC-8477 LDAP-Sync: Speed up class sync by holding all the school's users in map while creating/populating classes\nSC-8477 LDAP-Sync: Speed up user sync by grouping users into chunks and loading the chunks from DB instead of individual users\n\n[25.6.7] - 2021-02-18\nSecurity\n\nSC-8655 - prevent changes to immutable user attributes\n\n[25.6.6] - 2021-02-18\nFixed\n\nSC-8657 - Recreate shared links for homework\n\n[25.6.5] - 2021-02-17\nFixed\n\nSC-8634 - Recreate shared links for homework\n\n[25.6.4] - 2021-02-17\nChanged\n\nReverted Changes for SC-8410\n\n[25.6.3] - 2021-02-15\nSecurity\n\nVOR-3 - Enable and replace old file links.\n\n[25.6.2] - 2021-02-11\nChanged\n\nVOR-2 - Adjusted business rules for adding team members from external school.\n\n[25.6.1] - 2021-02-11\nFixed\n\nVOR-1 - Fix passwordRecovery id validation.\n\n[25.6.0] - 2021-02-09\nFixed\n\nSC-8514 - QR Code generation fails\nSC-8390 - Lern-Store collections feature flag was not excluding collections in search\nSC-8322 prevent wrong assignment from school to storage provider\n\nAdded\n\nSC-8482 - Deletion concept orchestration integration\nSC-8029 - Add deletion concept handling for pseudonyms and registration pins\nSC-6950 - Add access for superhero to change kreisid and officialSchoolNumber\nSC-8206 - Add school tombstone for deleting concept\nSC-7825 - Deletion concept for user data in tasks\n\nChanged\n\nSC-8541 - restrict class modifing requests to the teachers, who are inside these classes\nSC-8380 removed reqlib, replaced by normal require to keep referenced types known\nSC-8213 error handling concept\nSC-4576 - sanitize bbb room and member names\nSC-8300 Added user information to LDAP Sync in case of errors\n\n[25.5.16] - 2021-02-08\nAdded\n\nSC-8512 - Creating a migration for duplicated events\n\n[25.5.15]\nFixed\n\nSC-8571 - New courses does not appear in bettermarks\n\n[25.5.14] - 2021-02-02\nChanged\n\nSC-8420 - Fix old missing indexes that migration for new indexes can executed. 25.5.3\n\n[25.5.13]\nChanged\n\nSC-8462 - Add logging for homework deletion\n\n[25.5.12]\nFixed\n\nSC-8499 - Change order of migrations\n\n[25.5.11]\nFixed\n\nSC-8499 - Prevent duplicated pseudonyms\n\n[25.5.10]\n\nSC-8506 - add origin server name to bbb create and join requests\n\n[25.5.9]\nFixed\n\nSC-8503 - Clicking on task in BRB and THR shows pencil page\n\n[25.5.8]\nChanged\n\nSC-8480 - Return GeneralError if unknown error code is given to error pipeline\n\n[25.5.7]\nAdded\n\nSC-8489 - Added permission check for homework deletion\n\n[25.5.6]\nFixed\n\nSC-8410 - Verify ldap connection reads the first page of users only to avoid timeouts\nSC-8444 - resolve eventual consistency in course shareToken generation\n\n[25.5.5]\nFixed\n\nSC-8303 - fix wrong assignment from school to storage provider\n\n[25.5.4]\nAdded\n\nSC-8358 - bettermarks: show hint for safari users\nSC-8412 - update swagger documentation of pseudonym/roster/ltitools\n\nFixed\n\nSC-5287 - Fixed OAuth2 rostering\nSC-5287 - Repair Bettermark's depseudonymization\nSC-8313 - Bettermarks: depseudonymization iframe needs to use Storage Access API in Safari\nSC-8379 - Secure ltiTools route\nSC-8315 - bettermarks: security check and production configuration\n\n[25.5.3]\nAdded\n\nSC-8420 - Migration for sync new indexes.\n\n[25.5.2]\nFixed\n\nSC-8189 - fix duplicate events by returning updated object at findOneAndUpdate\n\n[25.5.1]\nFixed\n\nSC-8303 - fix wrong assignment from school to storage provider\n\n[25.5.0]\nAdded\n\nSC-7835 - Add deletion concept handling for helpdesk problems\nSC-8229 - Added invalid DN error to ldap-config service error handling\nSC-7825 - Remove user relations from courses\nSC-7827 - Add deletion concept handling for file permissions.\nSC-8030 - Setup orchestrator for deleting concept\nSC-8060 - increase unit test coverage for lernstore counties\nSC-8179 - repaired unit test\nSC-7763 - adds searchable feature flag for lernstore.\nSC-8020 - adds collections filter to edu-sharing service\nSC-8260 - new team indexes and migration to add this\n\nFixed\n\nSC-8230 - fix deletion of teachers via new route\n\nRemoved\n\nSC-8233 - Removed attribute and member as required attributes for the LDAP-config service\n\nFixed\n\nSC-8329 - Cluster returns old verison of Pin object after patch\n\n[25.4.1]\n\nUpdate from 25.3.9 into master\n\n[25.3.9]\n\nSC-8198 continue school sync on user issues\n\n[25.3.8]\nChanged\n\nSC-8198 - handle eventually consistent database in THR sync\n\n[25.3.7] - 2020-12-18\nChanged\n\nSC-8209 - prevent sync from stopping if error occurs for a single student\n\n[25.3.6]\nFixed\n\nSC-8235 - repaired reigstration link for students\n\n[25.3.5]\nChanged\n\nSC-8149 - no longer require a registrationPin for internal calls\n\n[25.3.4]\nChanged\n\nSC-7998 - use default service setup for /version\n\n[25.3.3] (pick from 25.2)\nRemoved\n\nSC-8101 - Sanitization for read operations\n\nFixed\n\nSC-8101 - Make it possible to disable sentry by removing SENTRY_DSN\nOPS-1735 - Fixes transaction handling in file service by using the mongoose transaction helper,\nproperly closing the session, and using the correct readPreference (everything except primary fails)\n\n[25.3.2]\nAdded\n\nSC-7734 - Added a hook that takes care of merlin content to generate valid urls for users\nSC-7483 - Updating terms of use for all users for each instance separately\n\n[25.3.1]\nFixed\nSC-8077 - the migration copy-parents-data-into-children-entities-and-delete-parent-users is broken\n[25.3.0]\nAdded\n\nSC-7841 - remove deleted user from classes\nSC-7836 - Removing registration pin by removing the user\nSC-7838 - move pseudonyms to trashbin\nSC-7142 - Counties/Kreise added to federal states.\nSC-7555 - move user and account to trashbin\nSC-4666 - Added a pool based LDAP system and school sync. LDAP_SYSTEM_SYNCER_POOL_SIZE and LDAP_SCHOOL_SYNCER_POOL_SIZE variables\ndetermine how many system/school syncers will be run in parallel (at most) during the LDAP sync.\nSC-7615 - reduces the errors in lernstore\nSC-5476 - Extend tests for Matrix messenger config and permission service\nSC-6690 - refactors edu-sharing service and sets defaults\nSC-6738 - Extend search input field in new admin tables to search for full name\nSC-7293 - added Lern-Store view permission and a feature flag\nSC-7357 - Add config service\nSC-7083 - Added officialSchoolNumber to school-model\nIntroduce plainSecrets in Configuration\nIntroduce FEATURE_PROMETHEUS_ENABLED to have a flag for enable prometheus api metrics\nSC-7411 - add API Specification and validation for /me service\nSC-7411 - add API Specification and validation for /version service\nSC-7205 - create new data seed for QA\nSC-7614 - creates documentation for edu sharing endpoints\nSC-7370 - Add optional rootPath attribute modifier to iserv-idm strategy\nSC-4667 - persist time of last attempted and last successful LDAP sync to database (based on system)\nSC-4667 - Only request and compare LDAP entities that have changed since the last sync (using operational attribute modifyTimestamp with fallback)\nSC-4667 - Add optional forceFullSync option (as get param or json payload) to force a full LDAP sync\nSC-7499 - add API Specification for public services\nSC-7915 - facade locator\nSC-7571 - solved performance issues - bulk QR-code generation\nSC-6294 - Introduce Typescript in schulcloud-server\nSC-7543 - Adds ldap-config service to create, load, and patch LDAP-configs (replaces /ldap endpoints for new client)\nSC-7028 - Add Course Component API Specification document\nSC-7476 - Prevent hash generation if user has account\nSC-6692 - Added Lern-Store counties support for Niedersachsen (Merlin)\n\nChanged\n\nrequest logging disabled for non development environment\nOPS-1289 - moved and updated commons (to hpi-schul-cloud/commons)\nSC-6596 - Changed route for messenger permissions service\nSC-7331 - introduce axios for external requests, implemented in status api\nSC-7395 - Changed ldap general strategy fetching of users from parallel to serialized\nSC-6080 - move REQUEST_TIMEOUT from globals to Configuration\nDependencies: querystring replaced by qs\nSC-6060 - Updated error handling\nSC-7404 - automatic forwarding for requests without versionnumber if no matching route is found\nSC-7411 - api versioning for /me service\nSC-7411 - api versioning for /version service\nIMP-160 - integration-tests repo renamed to end-to-end-tests\nSC-5900 - Move Synapse synchronization logic into server\nSC-7499 - Fixes documentation for edu sharing endpoints\nSC-7872 - Fix audience of the jwt to new organisation name.\nSC-7543 - deprecates GET /ldap/:id and PATCH /ldap/:id routes\nSC-7868 - Move external request helpers to more present file location\nSC-7474 pull docker container for tests if commit id exists on docker hub\n\nFixed\n\nSC-6294 fix mocha test execution and build, summarize coverage results\nSC-1589 Trim strings to avoid empty team names\nARC-138 fix changelog action\nARC-137 avoid DoS on alerts in error state\nSC-7353 course sharing between teachers\nSC-7530 rename SHOW_VERSION to FEATURE_SHOW_VERSION_ENABLED\nSC-7517 improve oauth test stability\nSC-6586 Repaired migration script\nSC-7454 - Restored invalid birth date fix in adminUsers service\nfixed README badges\nFix mocha tests\nSC-6151 fixed a bug that prevented api docu from being accessible\nSC-6151 fixed paths to openapi documentation\nFixed searching for names including a dash\nSC-7572 - Find /users route after hooks - extremely slow\nSC-7573 - Route/hash-broken promise chain\nSC-7884 - Authentication error when accessing any nuxt page in the client.\nFix typescript compiling error\n\nRemoved\n\nSC-7413 - Cleanup UnhandledRejection code that is handled from winston now\n\n[25.2.6]\nRemoved\n\nSC-8101 - Sanitization for read operations\n\nFixed\n\nSC-8101 - Make it possible to disable sentry by removing SENTRY_DSN\n\n[25.2.5]\nFixed\n\nOPS-1735 - Fixes transaction handling in file service by using the mongoose transaction helper,\nproperly closing the session, and using the correct readPreference (everything except primary fails)\n\n[25.2.4]\nChanged\n\nSC-6727 - Change email addresses for tickets for Niedersachsen - fixed after review\n\n[25.2.3]\nChanged\n\nSC-6727 - Change email addresses for tickets for Niedersachsen\n\n[25.2.2]\nChanged\n\nSC-7773 - moved config values for antivirus file service\n\n[25.2.1]\nFixed\n\nSC-7714 - Fixes script injection issue\n\n[25.2.0]\nAdded\n\nSC-4385 - Added a user exclusion regex to IServ strategy\nSC-7049 - Added unit tests for Merlin Service\nSC-7157 - add feature flag for Merlin feature with fallback\nSC-6567 - add new application errros\nSC-6766 - Added ESLint rules with Promise rules\nSC-6830 - Added hook to parse request to arrays when > 20 users are requested in adminUsers service\nSC-6769 - Introduce API validation module\nSC-6769 - API validation for users/admin routes\nSC-6510 - Added Merlin Url Generator for Lern Store / Edu-sharing\nSC-5476 - Added school settings to enable students to open own chat rooms\nSC-6567 - Add utils to cleanup incomingMessage stacks by logging errors\n\nRemoved\n\nSC-6586- Remove parents from users collection to improve maintainability\n\nChanged\n\nSC-6986 - Changed a hook in the accounts service that restricts get requests to the same school, it expects a valid userID and matching schoolIds for both the requester and requested users\nSC-6567 - clean up error pipline\nSC-6510, fix a minor syntax error when exporting module\nUpdate commons to 1.2.7: print configuration on startup, introduce hierarchical configuration file setup\nSupport asynchronous calls during server startup\nSC-7091 - Migration to enable the Matrix Messenger for all schools that had RocketChat enabled before\n\nFixed\n\nfixed README badges\nSC-6151 - fixed a bug that prevented api docu from being accessible\nFix mocha tests\n\n[25.1.13] - 2020-11-12\nChanged\n\nSC-7395 - Changed ldap general strategy fetching of users from parallel to serialized\n\n[25.1.12] - 2020-11-09\nAdded\n\nSC-7683 - add request logging options\n\n[25.1.11] - 2020-11-06\nSecurity\n\nSC-7695 - prevent csv user override operations on other schools\n\n[25.1.10] - 2020-11-05\nAdded\n\nSC-7683 - Add log metic for memory usage, add async error logging util, catch one unhandledRejection error and remove cronjob task from server.\n\n[25.1.9] - 2020-11-03\nFixed\n\nSC-7638 - fixed pin creation for users with accounts\n\n[25.1.8] - 2020-10-22\nFixed\n\nSC-7333 - fixed creation of homeworks within lessons\n\n[25.1.7] - 2020-10-28\nAdded\n\nSC-7491 - Add missing index on users.email to speed up slow query in registrationLink service\n\n[25.1.6] - 2020-10-23\nChanged\n\nSC-7413 - Remove event listener for unhandled rejections and move this to winston\n\n[25.1.5] - 2020-10-22\nFixed\n\nSC-7452 - fixed time window check for LDAP users\n\n[25.1.4] - 2020-10-20\nChanged\n\nSC-6986 - Changed permission check for PATCH method in the account service from STUDENT_CREATE to STUDENT_EDIT to allow teachers to change students' password\n\n[25.1.3] - 2020-10-20\nFixed\n\nSC-6986 - Changed a hook in the accounts service that restricts get requests to the same school, it expects a valid userID and matching schoolIds for both the requester and requested users\n\n[25.1.2] - 2020-10-15\nFixed\n\nSC-7085 - fixed importHash error when asking parent consent\n\nAdded\nRemoved\n[25.1.1] - 2020-10-12\nSecurity\n\nSC-7165 package update for sanitization and add onload handler\n\n[25.1.0] - 2020-10-12\nAdded\nRemoved\n\nSC-6784 - Removed duplicated birth date formatting code in adminUsers service, which was causing an \"Invalid date\" output\nSC-6743 - Removed usersForConsent related things in adminUsers service because the client does not send that parameter anymore\nSC-6506 - Remove dependecy to feathers-swagger in routes.test.js\n\nChanged\n\nSC-6774 remove no-await-in-loop from eslint exceptions\nRename statistic mails route, secure it over sync api key now\nSC-6809 - Maintain RabbitMQ connection and channels\nSC-5230 - Unblock Account-Page in Nuxt (securing /accounts and /users routes)\n\nSecurity\n\nAdded hotfix merges\n\n[25.0.12] - 2020-10-12\nFixed\n\nSC-6676 allows only following roles for registration: teacher/student…\n\n[25.0.11] - 2020-10-07\nFixed\n\nSC-7180 homework create now validates data properly\n\n[25.0.12] - 2020-10-12\nFixed\n\nSC-6676 allows only following roles for registration: teacher/student…\n\n[25.0.11] - 2020-10-07\nFixed\n\nSC-7180 homework create now validates data properly\n\n[25.0.10] - 2020-10-07\nAdded\n\nconfigured prometheus metrics - bucket sizes\nSC-6766 log unhandledRejection and unhandledException\n\n[25.0.9] - 2020-10-07\nAdded\n\nSC-7115 - Reduce mongoose DB role request by enabling minor caching\n\n[25.0.8] - 2020-10-06\nFixed\n\nSC-6676 - Registration: User with role parent should not be able to log-in\nSC-6960 - instead of deleting and recreating users during the rollback of a failed registration, use replace if necessary\nSC-6960 - properly raise exceptions during the registration process\n\n[25.0.7] - 2020-10-01\nRemoved\n\nOPS-1316 - removed custom keep-alive header creation in express middleware\n\n[25.0.6] - 2020-10-01\nAdded\n\nOPS-1316 - add indexes for slow files and submission queries\n\n[25.0.5] - 2020-10-01\nAdded\n\nSC-6973 - add time window for pin creation\n\n[25.0.4] - 2020-09-30\nAdded\n\nAdded lead time detection\n\n[25.0.3]\nAdded\n\nSC-6942 - add parse method to TSP strategy to declare it can handle the request and to keep authentication params clean\n\nFixed\n\nSC-6942 - don't override payload defined by authentication method\nSC-6942 - don't search for account to populate if no username is given in injectUsername\n\n[25.0.2]\nChanged\n\nsend mail for registration pin after add pin to db\n\n[25.0.1]\nFixed\n\nSC-6696 - Fixed query used to determine course membership when checking permissions for course group lessons\n\n[25.0.0]\nChanged\n\nExtend JWT payload by schoolId and roleIds\n\n[24.5.1] - 2020-09-16\nSecrutiy\n\nSecure admin routes (update, patch, create)\n\n[24.5.0] - 2020-09-14\n\nIgnore database seed data with prettier, eslint, and codacy\nSC-6640 - Fixed email check within registration (case insensitive)\nSC-2710 - Adding time zones, default for school and theme\n\nAdded - 24.5.0\n\nTest changelog has been updated for feature or hotfix branches\nSC-5612 - Adding search feature to the admintables for nuxt-client.\n\n[24.4.6] - 2020-09-11\nChanged\n\nSC-6733: central personal data does not get updated via CSV import\n\n[24.4.5] - 2020-09-10\nFixed in 24.4.5\n\nSC-6637: generate QR codes for consent print sheets if group size exceeds 20\n\n[24.4.4] - 2020-09-08\nFixed in 24.4.4]\n\nSC-6697: updates/sync account username when user is updated\n\n[24.4.3] - 2020-09-09\nFixed in 24.4.3\n\nSC-6533 - Login not possible if admin reset password\n\n[24.4.2] - 2020-08-31\nFixed in 24.4.2\n\nSC-6554: CSV-Importer no longer allows patching users with different roles\n\n[24.4.1] - 2020-08-31\nFixed in 24.4.1\n\nSC-6511 - LDAP edit button missing.\n\nChanged in 24.4.1\n\nSC-5987 Internationalisation: extend user and school model with default language\n\nAdded 24.4.1\n\nSC-6172: added hooks and checks to look for unique and not disposable emails in adminUsers service\n\n[24.4.0] - 2020-8-31\nFixed in 24.4.0\n\nSC-6122 - Edusharing preload thumbnails in parallel. Edusharing authentication stabilisation.\n\n[24.3.3] - 2020-08-28\n\nSC-6469: prevent admin access to lessons admins shouldnt have access to.\n\n[24.3.2] - 2020-08-26\n\nSC-6382: fix handling of consents for users with unknown birthdays. consentStatus: 'ok' will be returned for valid consents without birthday.\n\n[24.3.1] - 2020-08-25\n\nSC-5420: TSC Schuljahreswechsel\n\n[24.3.0] - 2020-08-25\n[24.2.5] - 2020-08-24\n\nSC-6328 add migration to set student_list settings in all non n21 clouds schools to false.\n\n[24.2.4] - 2020-08-20\n[24.2.3] - 2020-08-20\n[24.2.2] - 2020-08-20\nAdded in 24.2.2\n\nSC-5280: the LDAP service will try to reconnect up to three times if the connection was lost or could not be established\nSC-5280: the LDAP service and LDAP syncers now report more errors to the stats object\nSC-5808: added an isExternal check to the create method of AdminUsers service, only users from not external schools can create users\n\nFixed in 24.2.2\n\nSC-5280: the LDAP sync now handles (timeout/firewall) errors much more gracefully\nSC-5280: LDAP bind operations will only be issued if the connection was established successfully\nSC-5280: aggregated LDAP statistics will now show the number of succesful and failed sub-syncs instead of just 1 or 0\n\nChanged in 24.2.2\n\nSC-5280: if disconnected prematurely, the LDAP service will not try to connect again just to unbind from the server\n\n[24.0.2] - 2020-08-05\nFixed in 24.0.2\n\nSC-5835: Starting the new school year automatically - Cluster 4\n\n[24.0.1] - 2020-07-31\nFixed in 24.0.1\n\nSC-5917 Fix activation of LDAP system\n\n[23.6.4] - 2020-07-29\nFixed in 23.6.4\n\nSC-5883: Choose current schoolyear based on the school instead of the date for creating classes.\n\n[23.6.3] - 2020-07-28\nAdded in 23.6.3\n\nSC-5754 Added isExternal attribute to school model. If ldapSchoolIdentifier or source is defined, isExternal will be set to true\notherwise, if none of them are defined it wil be set to false.\nSC-4520 created a new Service called Activation Service; with which jobs can be defined and are\nonly executed when an activation link (activation code) is confirmed (e.g.: change of e-mail address/username)\nAlso added a sub-service for changing email/username in Activation Service\nSC-5280: the LDAP service will try to reconnect up to three times if the connection was lost or could not be established\nSC-5280: the LDAP service and LDAP syncers now report more errors to the stats object\n\nFixed in 23.6.3\n\nSC-5250: Fixes the CSV-Import, if there are whitespaces in the columnnames\nSC-5686: only users with the team permission \"RENAME_TEAM\" can execute the patch method in teams route\nSC-5280: the LDAP sync now handles (timeout/firewall) errors much more gracefully\nSC-5280: LDAP bind operations will only be issued if the connection was established successfully\nSC-5280: aggregated LDAP statistics will now show the number of succesful and failed sub-syncs instead of just 1 or 0\nSC-5416: Enable maintenance Mode for LDAP Schools and change the currentSchoolYear for non-LDAP Schools\n\nChanged in 23.6.3\n\nSC-5542: Added an after hook for AdminUsers find method which formats birthday date to DD.MM.YYYY format.\nSC-4289 Changed aggregations in admin tables, classes are now taken only from current year or max grade level, and are sorted\nby numeric ordering.\nSC-5280: if disconnected prematurely, the LDAP service will not try to connect again just to unbind from the server\n\n[23.6.2] - 2020-07-22\nFixed in 23.6.2\n\nSC-5773: LDAPSchoolSyncer now correctly populates classes synced from an LDAP server, even if only students or only teachers are assigned to the class.\nSC-5250: Fixes the CSV-Import, if there are whitespaces in the columnnames\n\n[23.6.1] - 2020-07-22\nFixed in 23.6.1\n\nSC-5733: LDAPSchoolSyncer now uses the Users model service to avoid ignoring indexes due to automatic collation\n\n[23.6.0] - 2020-07-21\nAdded in 23.6.0\n\nSC-4142: Added indexes on TSP sync related attributes in user and school schema.\nSC-4142: Adds info about unchanged entities to TSP sync statistics\n\n[23.5.4] - 2020-07-08\nAdded in 23.5.4\n\nSC-2714 Added the federal state \"Internationale Schule\"\n\n[23.5.0] - 2020-06-15\nAdded in 23.5.0\n\nSC-4192 add tests that ensure classes on other schools cant be manipulated\n\nFixed in 23.5.0\nChanged in 23.5.0\n\nSC-4957 user.ldapId and user.ldapDn are now indexed to improve performance\n\n[23.4.7] - 2020-07-01\nFixed in 23.4.7\n\nSC-4965 Converted \"consent\" subdocument in \"users\" to a nested document to fix changing consents in administration and removing a bug in registration that resulted in deleted users.\n\n[23.4.5] - 2020-06-17\nFixed in 23.4.5\n\nSC-5007 re-introduces ldap system root path to API result to fix issue with duplicating schools\n\n[23.4.3-nbc] - 2020-06-15\nFixed in 23.4.3-nbc\n\nSC-5054 Revert hook restrictions that prevented registration with custom deata privacy documents enabled\n\n[23.4.0-nbc] - 2020-06-11\nAdded in 23.4.0-nbc\n\nSC-4577 extend consentversions with school specific privacy policy, which can be added by the school admin\n\n[23.2.4] - 2020-06-05\nFixed in 23.2.4\n\nSC-4876 soften sanitization to allow editor actions to be persisted correctly\n\n[23.2.1] - 2020-06-04\nSecurity - 23.2.1\n\nSC-4720 improve importhashes for registrationlinks\n\n[23.2.0] - 2020-06-03\nSecurity - 23.2.0\n\nSC-4506 Secure Find User Route. Access user list by students is allowed only if they are eligible to create teams.\nSC-4506 Secure Get User Route. Read user details may only users with STUDENT_LIST or TEACHER_LIST permissions\n\n[23.1.4] - 2020-05-29\nFixed in 23.1.4\n\nSC-4749 avoid xss in image onerror event attribute for submissions\n\n[23.0.0] - 2020-05-19\nChanged in 23.0.0\n\nSC-4075 Teams creation by students logic was changed. New environment enumeration variable STUDENT_TEAM_CREATION\nwith possible values disabled, enabled, opt-in, opt-out was introduced. The feature value is set by instance deployment.\nIn case of disabled, enabled it is valid for all schools of the instance and cannot be changed by the admin.\nIn case of opt-in and opt-out the feature should be enabled/disabled by the school admin.\n\n[22.10.3] - 2020-05-13\nFixed in 22.10.3\n\nUnbind errors no longer stop the LDAP sync if more systems follow\n\n[22.10.2] - 2020-05-12\nFixed in 22.10.2\n\nfixed pagination for students/teacher table\n\n[22.10.0] - 2020-05-11\nAdded in 22.10.0\n\nSC-3719 Files now have a creator attribute that references the ID of the user that created the file.\nFor old files, it is set to the first user permission inside the permissions array (legacy creator check).\nSC-3719 The files collection now has two additional indexes: {creator} and {permissions.refId, permissions.refPermModel}.\nadd MongoDB Collation Support to control sorting behaviour in regards to capitalization.\nSC-3607 CSVSyncer now allows the optional birthday field (formats: dd/mm/yyyy, dd.mm.yyyy, dd-mm-yyyy) in CSV data\nSC-3948 support users query in adminusers routes\nSC-4018 Add additional nexboard permissions\nSC-4008 Migrated generateRegistrationLink Hook from SC-Client into Server\nSC-3686 Added new Registration Link Service for sending mails\nSC-4094 Teachers can now provide feedback in the form of uploaded files\n\nFixed in 22.10.0\n\nSC-3892 Update Filter of submission in order to work with older submissions\nSC-3395 if fetching the release fails, a error will be thrown\nbackup.js now outputs valid json exports\nSC-4105 fixed a problem with new users tests not working with recent hotfix.\nChecks of user consent calculated correct now\n\nChanged in 22.10.0\n\nUser delete now accepts bulk delete requests\nSC-3958: the \"general\" LDAP strategy now returns an empty array if classes are not configured properly\nIncrease performance - error logging in sentry\nMergify: add and modified some configs\n\nRemoved in 22.10.0\n\nSC-3958: the LDAP strategy interface no longer supports synchronizing team members to the never-used original N21-IDM\nSC-3958: the environment variables NBC_IMPORTURL, NBC_IMPORTUSER, and NBC_IMPORTPASSWORD are no longer used and have been removed\nRemoved the obsolete commentSchema from the homework service. It was not in use.\n\n[22.9.20]\nAdded in 22.9.20\n\nSC-4042: Added support for a central IServ-Connector\n\nChanged in 22.9.20\n\nLDAP syncs on servers with multiple schools now only sync one school at a time to avoid issues when paging search requests\nLDAP syncs use less memory (because they do a lot less in parallel)\nLDAPSchoolSyncer now returns user and class statistics\n\nFixed in 22.9.20\n\nFixed LDAP-Service disconnect method\nLDAPSystemSyncers now properly close their connections after syncing\nAuthentication via LDAP now tries to close the connection after login\nFixed a warning message appearing when patching users via internal request\n\n[22.9.18]\nFixed in 22.9.18\n\nSC-4215: Do not allow unprivileged users to find users with non-school roles (expert, parent, etc.)\n\n[22.9.17]\nFixed in 22.9.17\n\nSC-4121: File uploads no longer fail if the security scan is misconfigured or errors during enqueuing\n\n[22.9.10]\nAdded in 22.9.10\n\nenable API key for /mails route\n\nFixed in 22.9.10\n\nfixed an issue that prevented api-key authenticated calls to function with query.\n\n[22.9.9]\nAdded in 22.9.9\n\nSync can now be authenticated with an api-key.\n\n[22.9.8]\nFixed in 22.9.8\n\nFixed an error where ldap users without proper uuid where not filtered correctly.\n\n[22.9.7]\nSecurity in 22.9.7\n\nthe /ldap route can now only be triggered for the users own school.\n\n[22.9.6]\nAdded in 22.9.6\n\nusers without SCHOOL_EDIT permission, but with SCHOOL_STUDENT_TEAM_MANAGE permission can now toggle the school feature disableStudentTeamCreation.\n\nFixed in 22.9.6\n\nAdmins in Thuringia can now prevent students from creating teams\n\n[22.9.5]\nSecurity in 22.9.5\n\nincreased security for the publicTeachers route.\n\n[22.9.4]\nFixed in 22.9.4\n\nfixes an issue with LDAP account updates if more than one account exists for the user (migration from local login to LDAP)\n\n[22.9.3]\nFixed in 22.9.3\n\nfixes regression in LDAP sync, that caused incomplete user updates\n\n[22.9.2]\nSecurity in 22.9.2\n\nincreased security for user PUT operation\n\n[22.9.1]\nFixed in 22.9.1\n\nSC-3994: remove unnecessary bucket creation call that caused school administration and LDAP Sync to throw errors\n\nChanged in 22.9.1\n\nuse collation for /homeworks, /users, /publicTeachers, /users/admin/teachers, /users/admin/students, /classes, and /courses.\n\n[22.9.0]\n\nSecurity updates\n\n[22.8.0]\nAdded in 22.8.0\n\nThis changelog has been added\n\nRemoved in 22.8.0\n\nClipboard sockets\nThis changelog has been added\nBackend route to confirm analog consents in bulk\nChanged Seed Data + Migration Script: Added feature flag for new Editor to klara.fall@schul-cloud.org\nSC-2922: Enable use of multiple S3 instances as file storage provider\nA new collection is added to administrate multiple S3 instances\nA migration will automatically use the AWS environment variables to add those as default provider for all existing schools\nFor new schools the less used provider is assigned as storage provider\nEnvironment Variables:\nFEATURE_MULTIPLE_S3_PROVIDERS_ENABLED=true will activate the feature\nS3_KEY, used for symmetric encryption, already required for the migration because of the secret access key encryption\n\n\n\n\n\nChanged in 22.8.0\n\nSC-3767: moved env variables to globals.js, NODE_ENV required to equal 'test' for test execution and right database selection\nmigrated backup.sh script to node, so it can run platform independant and works on windows.\n\nFixed in 22.8.0\n\nSC-3821: Fix Co-Teachers and Substitution teachers not being able to Grade Homeworks\n\n22.7.1\nFixed in 22.7.1\n\nAdmin and teacher user could change other users without changing them self\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @feathersjs/authentication : ^4.5.11\n        \n            @feathersjs/authentication-local : ^4.5.11\n        \n            @feathersjs/configuration : ^4.5.11\n        \n            @feathersjs/errors : ^4.5.11\n        \n            @feathersjs/express : ^4.5.11\n        \n            @feathersjs/feathers : ^4.5.11\n        \n            @feathersjs/socketio : ^4.5.11\n        \n            @golevelup/nestjs-rabbitmq : ^1.17.0\n        \n            @hpi-schul-cloud/commons : ^1.3.3\n        \n            @mikro-orm/core : ^4.5.5\n        \n            @mikro-orm/mongodb : ^4.5.5\n        \n            @mikro-orm/nestjs : ^4.3.0\n        \n            @nestjs/common : ^8.0.9\n        \n            @nestjs/core : ^8.0.9\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/microservices : ^8.0.9\n        \n            @nestjs/passport : ^8.0.1\n        \n            @nestjs/platform-express : ^8.0.9\n        \n            @nestjs/swagger : ^5.1.0\n        \n            @sentry/node : ^6.2.0\n        \n            ajv : ^8.5.0\n        \n            amqp-connection-manager : ^3.2.2\n        \n            amqplib : ^0.8.0\n        \n            arg : ^5.0.0\n        \n            args : ^5.0.1\n        \n            async : ^2.6.0\n        \n            aws-sdk : ^2.970.0\n        \n            axios : ^0.22.0\n        \n            bbb-promise : ^1.2.0\n        \n            bcryptjs : latest\n        \n            body-parser : ^1.15.2\n        \n            bson : ^4.5.1\n        \n            chalk : ^4.0.0\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            client-oauth2 : ^4.2.5\n        \n            commander : ^8.1.0\n        \n            compression : ^1.6.2\n        \n            concurrently : ^6.0.0\n        \n            cors : ^2.8.1\n        \n            cross-env : ^7.0.0\n        \n            crypto-js : ^4.0.0\n        \n            disposable-email-domains : ^1.0.56\n        \n            es6-promisify : ^7.0.0\n        \n            eslint-plugin-react : ^7.24.0\n        \n            eslint-plugin-react-hooks : ^4.2.0\n        \n            express : ^4.14.0\n        \n            express-openapi-validator : 4.7.1\n        \n            feathers-hooks-common : ^5.0.3\n        \n            feathers-mongoose : ^6.3.0\n        \n            feathers-swagger : ^1.1.0\n        \n            file-type : ^16.2.0\n        \n            freeport : ^1.0.5\n        \n            html-entities : ^2.3.2\n        \n            jose : ^1.28.1\n        \n            jsonwebtoken : 8.5.1\n        \n            ldapjs : git://github.com/hpi-schul-cloud/node-ldapjs.git\n        \n            lodash : ^4.17.19\n        \n            migrate-mongoose : ^4.0.0\n        \n            mixwith : ^0.1.1\n        \n            moment : ^2.19.2\n        \n            mongodb-uri : ^0.9.7\n        \n            mongoose : ^5.13.9\n        \n            mongoose-delete : ^0.5.4\n        \n            mongoose-diff-history : git://github.com/schul-cloud/mongoose-diff-history.git\n        \n            mongoose-history : ^0.8.0\n        \n            mongoose-id-validator : ^0.6.0\n        \n            mongoose-lean-virtuals : ^0.8.1\n        \n            mongoose-shortid-nodeps : git://github.com/leeroybrun/mongoose-shortid-nodeps.git\n        \n            moodle-client : ^0.5.2\n        \n            nanoid : ^3.1.20\n        \n            nestjs-console : ^7.0.0\n        \n            oauth-1.0a : ^2.2.6\n        \n            papaparse : ^5.1.1\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            prom-client : ^12.0.0\n        \n            prometheus-api-metrics : ^3.1.0\n        \n            qs : ^6.9.4\n        \n            read-chunk : ^3.0.0\n        \n            redis : ^3.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            request-promise-core : ^1.1.4\n        \n            request-promise-native : ^1.0.3\n        \n            rimraf : ^3.0.2\n        \n            rss-parser : ^3.6.2\n        \n            rxjs : ^7.3.1\n        \n            sanitize-html : ^2.1.0\n        \n            serve-favicon : ^2.3.2\n        \n            service : ^0.1.4\n        \n            socketio-file-upload : ^0.7.0\n        \n            source-map-support : ^0.5.19\n        \n            strip-bom : ^4.0.0\n        \n            swagger-ui-express : ^4.1.6\n        \n            tiny-async-pool : ^1.2.0\n        \n            universal-analytics : ^0.4.17\n        \n            urlsafe-base64 : ^1.0.0\n        \n            uuid : ^8.3.0\n        \n            wait-on : ^6.0.0\n        \n            winston : ^3.2.0\n        \n            xml2js-es6-promise : ^1.1.1\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NewsTargetModel   (apps/.../news.types.ts)\n                        \n                        \n                            SortOrder   (apps/.../find-options.ts)\n                        \n                        \n                            TaskDashBoardPermission   (apps/.../task.uc.ts)\n                        \n                        \n                            TaskParentPermission   (apps/.../task.authorization.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/shared/domain/types/news.types.ts\n    \n        \n            \n                \n                    \n                        \n                        NewsTargetModel\n                    \n                \n                        \n                            \n                                 School\n                            \n                        \n                        \n                            \n                                Value : schools\n                            \n                        \n                        \n                            \n                                 Course\n                            \n                        \n                        \n                            \n                                Value : courses\n                            \n                        \n                        \n                            \n                                 Team\n                            \n                        \n                        \n                            \n                                Value : teams\n                            \n                        \n            \n        \n\n    apps/server/src/shared/domain/interface/find-options.ts\n    \n        \n            \n                \n                    \n                        \n                        SortOrder\n                    \n                \n                        \n                            \n                                 asc\n                            \n                        \n                        \n                            \n                                Value : asc\n                            \n                        \n                        \n                            \n                                 desc\n                            \n                        \n                        \n                            \n                                Value : desc\n                            \n                        \n            \n        \n\n    apps/server/src/modules/task/uc/task.uc.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskDashBoardPermission\n                    \n                \n                        \n                            \n                                 teacherDashboard\n                            \n                        \n                        \n                            \n                                Value : TASK_DASHBOARD_TEACHER_VIEW_V3\n                            \n                        \n                        \n                            \n                                 studentDashboard\n                            \n                        \n                        \n                            \n                                Value : TASK_DASHBOARD_VIEW_V3\n                            \n                        \n            \n        \n\n    apps/server/src/modules/task/uc/task.authorization.service.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskParentPermission\n                    \n                \n                        \n                            \n                                 read\n                            \n                        \n                        \n                            \n                                 write\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../management.ts)\n                        \n                        \n                            createErrorResponseForBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForUnknownError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createStorageProviderClient   (apps/.../filestorage.adapter.ts)\n                        \n                        \n                            DecodeHtmlEntities   (apps/.../decode-html-entities.transformer.ts)\n                        \n                        \n                            StringToBoolean   (apps/.../string-to-boolean.transformer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/server/src/management.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createErrorResponseForBusinessError\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForBusinessError(error: BusinessError)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                BusinessError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponseForFeathersError\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForFeathersError(error: FeathersError)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                FeathersError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponseForUnknownError\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForUnknownError(error?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    apps/server/src/shared/infra/filestorage/filestorage.adapter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createStorageProviderClient\n                        \n                    \n                \n            \n            \n                \ncreateStorageProviderClient(storageProvider: StorageProvider)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storageProvider\n                                    \n                                                StorageProvider\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     S3Client\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    apps/server/src/shared/controller/transformer/decode-html-entities.transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DecodeHtmlEntities\n                        \n                    \n                \n            \n            \n                \nDecodeHtmlEntities()\n                \n            \n\n\n\n\n            \n                \n                    Decorator to transform a string value so that all contained html entities are decoded.\nThe purpose of this decorator is to revert html entity encodings that come from generic\ninput sanitization in the legacy server. We don't need this encoding in the output of our API\nbecause in common template systems (e.g handlebars and vue.js) strings are generally\nescaped for the output. That leads to wrong text output because html entities are rendered \"as is\"\nwith all characters encoded again.\nExamples:\n\nwhen text = \"X & Y\" and template is {{ text }} it is rendered as \"X &amp; Y\" => wrong\nwhen text = \"X & Y\"     and template is {{ text }} it is rendered as \"X & Y\"      => good\n\n(both for vue.js and handlebars)\nUse this decorator in your response DTO wherever redundant html encoding from the legacy server has to be reverted.\nIMPORTANT: Should be removed later when sanitization works properly\n\n\n                    \n                    \n                    \n                        Returns :     PropertyDecorator\n\n                    \n                    \n                        the string with decoded html entities\n\n                    \n                \n            \n        \n    \n    apps/server/src/shared/controller/transformer/string-to-boolean.transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        StringToBoolean\n                        \n                    \n                \n            \n            \n                \nStringToBoolean()\n                \n            \n\n\n\n\n            \n                \n                    Decorator to transform a boolish string value to a boolean.\nAccepts: '1', 'true', '0', 'false' with type string only.\n\n\n                    \n                    \n                    \n                        Returns :     PropertyDecorator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHPI Schul-Cloud Server\nDevelop: \nMaster: \nDevelop: \nMaster: \nCodacy: \n\nNestJS application\n\nFind the NestJS applications documentation of this repository at GitHub pages. It contains information about\n\n\nsetup & preconditions\nstarting the application\ntesting\ntools setup (VSCode, Git)\narchitecture\n\nBased on NestJS\nFeathers application\nThis is legacy part of the application!\nBased on Node.js and Feathers\nApplication seperation\nIn order to seperate NestJS and Feathers each application runs in its own express instance. These express instances are then mounted on seperate paths under a common root express instance.\nRoot-Express-App \n├─ api/v1/       --> Feathers-App\n├─ api/v3/       --> NestJS-AppThis ensures that each application can run its own middleware stack for authentication, error handling, logging etc.\nThe mount paths don't have any impact on the routes inside of the applications, e.g. the path /api/v3/news will translate to the inner path /news. That means that in terms of route matching each child application doesn't have to take any measures regarding the path prefix. It simply works as it was mounted to /.\nHowever note that when URLs are generated inside a child application the path prefix has to be prepended. Only then the generated URLs match the appropriate child application, e.g. the path /news has to be provided as the external path /api/v3/news.\nIt is possible (not very likely) that the server api is called with URLs that use the old schema without a path prefix. As a safety net for that we additionally mount the Feathers application as before under the paths:\n\n/ - for internal calls\n/api - for external calls\n\nWhen these paths are accessed an error with context [DEPRECATED-PATH] is logged.\nSetup\nFor more detailed setup instructions, take a look at setup.\nThe whole application setup with all dependencies can be found in System Architecture. It contains information about how different application components are connected to each other.\nDebugger Configuration in Visual Studio Code\nFor more details how to set up Visual Studio Code, read this document.\nHow to name your branch and create a pull request (PR)\n\nTake the Ticket Number from JIRA (ticketsystem.hpi-schul-cloud.org), e.g. SC-999\nName the feature branch beginning with Ticket Number, all words separated by dash \"-\", e.g. feature/SC-999-fantasy-problem\nCreate a PR on branch develop containing the Ticket Number in PR title\nKeep the WIP label as long as this PR is in development, complete PR checklist (is automatically added), keep or increase code test coverage, and pass all tests before you remove the WIP label. Reviewers will be added automatically. For more information check our Definition of Done here.\n\nCommitting\nDefault branch: develop\n\nGo into project folder\nCheckout to develop branch (or clone for the first time)\nRun git pull\nCreate a branch for your new feature named feature/SC-Ticket-ID-Description\nRun the tests (see above)\nCommit with a meaningful commit message(!) even at 4 a.m. and not stuff like \"dfsdfsf\"\nStart a pull request (see above) to branch develop to merge your changes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                GNU AFFERO GENERAL PUBLIC LICENSE\n                   Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. http://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n                        Preamble  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n                   TERMS AND CONDITIONS\nDefinitions.\n\n  \"This License\" refers to version 3 of the GNU Affero General Public License.\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n  The Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\na) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\na) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\na) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nRemote Network Interaction; Use with the GNU General Public License.\n\n  Notwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\nRevised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\n  If the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n                 END OF TERMS AND CONDITIONS\n\n        How to Apply These Terms to Your New Programs  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\nCopyright (C)   \n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see .Also add information on how to contact you by electronic and paper mail.\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\nhttp://www.gnu.org/licenses/.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthorizationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConsoleWriterModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EncryptionModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ErrorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeathersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FileSystemModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InterceptorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LearnroomModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MongoMemoryDatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RocketChatModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServerConsoleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaskModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ValidationModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\ncluster_ConsoleWriterModule\n\n\n\ncluster_ConsoleWriterModule_exports\n\n\n\ncluster_ConsoleWriterModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_DatabaseManagementModule\n\n\n\ncluster_DatabaseManagementModule_imports\n\n\n\ncluster_DatabaseManagementModule_exports\n\n\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_exports\n\n\n\ncluster_FeathersModule_providers\n\n\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_FileSystemModule\n\n\n\ncluster_FileSystemModule_exports\n\n\n\ncluster_FileSystemModule_providers\n\n\n\ncluster_LearnroomModule\n\n\n\ncluster_LearnroomModule_providers\n\n\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_ManagementModule\n\n\n\ncluster_ManagementModule_providers\n\n\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_exports\n\n\n\ncluster_NewsModule_providers\n\n\n\ncluster_ServerConsoleModule\n\n\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_imports\n\n\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nUserModule->ServerModule\n\n\n\n\n\nUserFacade \n\nUserFacade \n\nUserFacade  -->\n\nUserModule->UserFacade \n\n\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nJwtValidationAdapter\n\nJwtValidationAdapter\n\nAuthModule -->\n\nJwtValidationAdapter->AuthModule\n\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\nConsoleWriterService \n\nConsoleWriterService \n\n\n\nConsoleWriterModule\n\nConsoleWriterModule\n\nConsoleWriterService  -->\n\nConsoleWriterModule->ConsoleWriterService \n\n\n\n\n\nServerConsoleModule\n\nServerConsoleModule\n\nServerConsoleModule -->\n\nConsoleWriterModule->ServerConsoleModule\n\n\n\n\n\nConsoleWriterService\n\nConsoleWriterService\n\nConsoleWriterModule -->\n\nConsoleWriterService->ConsoleWriterModule\n\n\n\n\n\nManagementModule\n\nManagementModule\n\nManagementModule -->\n\nConsoleWriterService->ManagementModule\n\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nLoggerModule->FilesModule\n\n\n\n\n\nLogger \n\nLogger \n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\n\n\nDatabaseManagementService\n\nDatabaseManagementService\n\n\n\nDatabaseManagementModule\n\nDatabaseManagementModule\n\nDatabaseManagementModule -->\n\nDatabaseManagementService->DatabaseManagementModule\n\n\n\nManagementModule -->\n\nDatabaseManagementService->ManagementModule\n\n\n\n\n\nDatabaseManagementService \n\nDatabaseManagementService \n\nDatabaseManagementService  -->\n\nDatabaseManagementModule->DatabaseManagementService \n\n\n\nManagementModule -->\n\nDatabaseManagementModule->ManagementModule\n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\nServerConsoleModule -->\n\nFilesModule->ServerConsoleModule\n\n\n\nServerModule -->\n\nFilesModule->ServerModule\n\n\n\n\n\nDeleteFilesUc\n\nDeleteFilesUc\n\nFilesModule -->\n\nDeleteFilesUc->FilesModule\n\n\n\n\n\nFileStorageAdapter\n\nFileStorageAdapter\n\nFilesModule -->\n\nFileStorageAdapter->FilesModule\n\n\n\n\n\nFilesRepo\n\nFilesRepo\n\nFilesModule -->\n\nFilesRepo->FilesModule\n\n\n\n\n\nStorageProviderRepo\n\nStorageProviderRepo\n\nFilesModule -->\n\nStorageProviderRepo->FilesModule\n\n\n\n\n\nFileSystemAdapter \n\nFileSystemAdapter \n\n\n\nFileSystemModule\n\nFileSystemModule\n\nFileSystemAdapter  -->\n\nFileSystemModule->FileSystemAdapter \n\n\n\nManagementModule -->\n\nFileSystemModule->ManagementModule\n\n\n\n\n\nFileSystemAdapter\n\nFileSystemAdapter\n\nFileSystemModule -->\n\nFileSystemAdapter->FileSystemModule\n\n\n\n\n\nDashboardModelMapper\n\nDashboardModelMapper\n\n\n\nLearnroomModule\n\nLearnroomModule\n\nLearnroomModule -->\n\nDashboardModelMapper->LearnroomModule\n\n\n\n\n\nDashboardUc\n\nDashboardUc\n\nLearnroomModule -->\n\nDashboardUc->LearnroomModule\n\n\n\nServerModule -->\n\nLearnroomModule->ServerModule\n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\nServerConsoleModule -->\n\nManagementModule->ServerConsoleModule\n\n\n\n\n\nBsonConverter\n\nBsonConverter\n\nManagementModule -->\n\nBsonConverter->ManagementModule\n\n\n\n\n\nDatabaseManagementUc\n\nDatabaseManagementUc\n\nManagementModule -->\n\nDatabaseManagementUc->ManagementModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\nServerModule -->\n\nNewsModule->ServerModule\n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nServerModule -->\n\nMailModule->ServerModule\n\n\n\n\n\nRocketChatModule\n\nRocketChatModule\n\nServerModule -->\n\nRocketChatModule->ServerModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\n\n\nCourseRepo\n\nCourseRepo\n\nTaskModule -->\n\nCourseRepo->TaskModule\n\n\n\n\n\nLessonRepo\n\nLessonRepo\n\nTaskModule -->\n\nLessonRepo->TaskModule\n\n\n\n\n\nTaskAuthorizationService\n\nTaskAuthorizationService\n\nTaskModule -->\n\nTaskAuthorizationService->TaskModule\n\n\n\n\n\nTaskRepo\n\nTaskRepo\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\nRoleRepo\n\nRoleRepo\n\nUserModule -->\n\nRoleRepo->UserModule\n\n\n\n\n\nRoleUC\n\nRoleUC\n\nUserModule -->\n\nRoleUC->UserModule\n\n\n\n\n\nUserFacade\n\nUserFacade\n\nUserModule -->\n\nUserFacade->UserModule\n\n\n\n\n\nUserRepo\n\nUserRepo\n\nUserModule -->\n\nUserRepo->UserModule\n\n\n\n\n\nUserUC\n\nUserUC\n\nUserModule -->\n\nUserUC->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        23 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    40 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    74 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    46 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTechnical TODO around Nest Introduction\nSUGGESTED\n\nfilter logs by request with reflect-metadata (see mikroorm em setup)\ndisable Document from window\nfind a name for base entity id type\nfind a name for base entity class\ndecide if we want to use our entity id type in all layers (also in dtos etc.)\nuse index.ts files to bundle exports - we could use path names for imports then, e.g. @shared/domain\ncheck how we can implement mandatory/optional fields in dtos\nshould we use Expose() as default in dtos?\nin the controller we have to prohibit serialization of properties that have no @EXPOSE\nfind the best way ORM entity discovery\ndecide where to put domain interfaces (directory)\nhow can we log validation errors during development?\nsanitizer\nremove non-node async library\nfix async cleanup & remove timeout in tests\ntest object creator for nest entities\nenable log only for failed tests: https://stackoverflow.com/a/61909588\nremove sentry from code\nremove mongoose history (keep one)\nremove custom npm packages (ldap, ...)\ne2e default tests to extend: auth required, fails without/succeeds with\n\nACCEPTED\n\ndocumentation\n\nentity constructor\nem to be used in repositories only (!!!)\n\n\nload/perf test\n\ndisable legacy ts support (app, tests)\n\nfix .env/config for windows\n\n\nMERGE\n\napi path prefix cleanup: remove middleware and multiple path mounts, sync with nest\nuser module stucture\nsingle domain: shared entity (main.ts), shared repository \nrequest.user.user in jwt strategy\nremove outdated sorting.ts \nremove default launch/settings json files, apply them\nfix https://github.com/hpi-schul-cloud/schulcloud-server/pull/2729#pullrequestreview-699615164\n\nSELECTED\n\ntest shared / core module \n\nasync test fixes (remove this.timeout and red promise chains)\n\ndb configuration\n\nkeep mongoose options as mongo options\npovider for mikroorm options and db url\ntest db provider\nentity discovery\ncheck indexes in mikroorm: when are they updated?\nteardown (test, server module, main.ts)\nreplikaset for test module\nentity discovery\n\n\nnews\n\nuc cleanup: 2auth, visibilities\ndocument best practices/layers/orm\n\n\ncontext: user-/request-context (see mikroorm/asynclocalstorage)\n\n\nDONE\n\ncheck build & start for production with ops\nfix jest, linter, ...\ninject APP_FILTER (exception handler) and APP_INTERCEPTOR (logger), see core module\ncustom error handling (log/response), see global-error.filter.ts\nwatch docs should hot reload on md file change\n404 error handling in feathers has to be replaced (tests too). better: have nest before feathers... but seems not to be working\nremove mongoose\npublish documentation, see https://hpi-schul-cloud.github.io/schulcloud-server/overview.html\nfix all tests (nest/legacy)\nremove legacy scripts from package json (except tests) goal: have separated tests (legacy/nest) but only execute the nest app\nusing legacy database connection string\nv3 with/-out slash: diffenrent routes should respond with different result (/v3 is a resssource, /v3/ === /v3/index)\nvscode/lauch files: we put only default files into the repo\nnaming of dtos and dto-files: api vs domain, we leave out \"dto\" suffix for simplicity (we know that they are dtos) and instead append a specific suffix:\ne.g.\napi: , , \ndomain: , \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConnectionOptions   (apps/.../types.ts)\n                        \n                        \n                            Counted   (apps/.../counted.ts)\n                        \n                        \n                            DashboardProps   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            EmptyResultQueryType   (apps/.../scope.ts)\n                        \n                        \n                            EntityId   (apps/.../entity-id.ts)\n                        \n                        \n                            FeathersServiceParams   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            FeathersServiceResponse   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            GenericData   (apps/.../rocket-chat.service.ts)\n                        \n                        \n                            GridElementContent   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            GridElementReferenceMetadata   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            GridElementWithPosition   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            GridPosition   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            GridPositionWithGroupIndex   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            IPermissionsAndRoles   (apps/.../user.ts)\n                        \n                        \n                            IUpdateNews   (apps/.../news.types.ts)\n                        \n                        \n                            MongoDatabaseModuleOptions   (apps/.../types.ts)\n                        \n                        \n                            NewsTarget   (apps/.../news.types.ts)\n                        \n                        \n                            Permission   (apps/.../news.uc.ts)\n                        \n                        \n                            RabbitMqModuleOptions   (apps/.../mail.module.ts)\n                        \n                        \n                            Role   (apps/.../ResolvedUser.dto.ts)\n                        \n                        \n                            ScopeOperator   (apps/.../scope.ts)\n                        \n                        \n                            SortOrderMap   (apps/.../find-options.ts)\n                        \n                        \n                            SourceType   (apps/.../news.response.ts)\n                        \n                        \n                            Strategies   (apps/.../auth.decorator.ts)\n                        \n                        \n                            TaskParentDescriptions   (apps/.../task.entity.ts)\n                        \n                        \n                            ValueOf   (apps/.../value-of.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/shared/infra/database/mongo-memory-database/types.ts\n    \n    \n        \n            \n                \n                    \n                    ConnectionOptions\n                \n            \n            \n                \n                    connection options not to be used in module options for the in memory db module as it is overriding the connection\n\n                \n            \n            \n                \n                        \"type\" | \"driver\" | \"clientUrl\" | \"dbName\" | \"user\" | \"password\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MongoDatabaseModuleOptions\n                \n            \n            \n                \n                            Omit\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/counted.ts\n    \n    \n        \n            \n                \n                    \n                    Counted\n                \n            \n            \n                \n                    Counted numbers inform about total counts beside the amount of items in T.\n\n                \n            \n            \n                \n                        [T, number]\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/entity/dashboard.entity.ts\n    \n    \n        \n            \n                \n                    \n                    DashboardProps\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GridElementContent\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GridElementReferenceMetadata\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GridElementWithPosition\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GridPosition\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GridPositionWithGroupIndex\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/shared/repo/scope.ts\n    \n    \n        \n            \n                \n                    \n                    EmptyResultQueryType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ScopeOperator\n                \n            \n            \n                \n                        \"$and\" | \"$or\"\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/entity-id.ts\n    \n    \n        \n            \n                \n                    \n                    EntityId\n                \n            \n            \n                \n                    Entity id type\n\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    apps/server/src/shared/infra/feathers/feathers-service.provider.ts\n    \n    \n        \n            \n                \n                    \n                    FeathersServiceParams\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FeathersServiceResponse\n                \n            \n            \n                \n                        Record | any[]\n\n                \n            \n        \n    \n    apps/server/src/modules/rocketchat/rocket-chat.service.ts\n    \n    \n        \n            \n                \n                    \n                    GenericData\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/interface/user.ts\n    \n    \n        \n            \n                \n                    \n                    IPermissionsAndRoles\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/news.types.ts\n    \n    \n        \n            \n                \n                    \n                    IUpdateNews\n                \n            \n            \n                \n                    news interface for updating news\n\n                \n            \n            \n                \n                            Partial\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NewsTarget\n                \n            \n            \n                \n                        School | Team | Course\n\n                \n            \n        \n    \n    apps/server/src/modules/news/uc/news.uc.ts\n    \n    \n        \n            \n                \n                    \n                    Permission\n                \n            \n            \n                \n                        \"NEWS_VIEW\" | \"NEWS_EDIT\"\n\n                \n            \n        \n    \n    apps/server/src/shared/infra/mail/mail.module.ts\n    \n    \n        \n            \n                \n                    \n                    RabbitMqModuleOptions\n                \n            \n            \n                \n                        Omit\n\n                \n            \n        \n    \n    apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts\n    \n    \n        \n            \n                \n                    \n                    Role\n                \n            \n            \n                \n                            IRole\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/interface/find-options.ts\n    \n    \n        \n            \n                \n                    \n                    SortOrderMap\n                \n            \n            \n                \n                            Partial>\n\n                \n            \n        \n    \n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n    \n        \n            \n                \n                    \n                    SourceType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n    \n        \n            \n                \n                    \n                    Strategies\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/server/src/shared/domain/entity/task.entity.ts\n    \n    \n        \n            \n                \n                    \n                    TaskParentDescriptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/value-of.ts\n    \n    \n        \n            \n                \n                    \n                    ValueOf\n                \n            \n            \n                \n                    The type of the values in T (counterpart to keyof)\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ALL_ENTITIES   (apps/.../all-entities.ts)\n                        \n                        \n                            Authenticate   (apps/.../auth.decorator.ts)\n                        \n                        \n                            bootstrap   (apps/.../console.ts)\n                        \n                        \n                            cleanUpCollections   (apps/.../clean-up-collections.ts)\n                        \n                        \n                            config   (jest.config.ts)\n                        \n                        \n                            config   (apps/.../swagger.ts)\n                        \n                        \n                            courseFactory   (apps/.../course.factory.ts)\n                        \n                        \n                            courseGroupFactory   (apps/.../coursegroup.factory.ts)\n                        \n                        \n                            courseNewsFactory   (apps/.../news.factory.ts)\n                        \n                        \n                            createCurrentTestUser   (apps/.../create-current-test-user.ts)\n                        \n                        \n                            createErrorResponse   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForHttpException   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createMikroOrmModule   (apps/.../mongo-memory-database.module.ts)\n                        \n                        \n                            createRabbitMqModule   (apps/.../mail.module.ts)\n                        \n                        \n                            createTestModule   (apps/.../create-test.module.ts)\n                        \n                        \n                            CurrentUser   (apps/.../auth.decorator.ts)\n                        \n                        \n                            DEFAULT   (apps/.../course.entity.ts)\n                        \n                        \n                            defaultColumns   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            defaultRows   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            delay   (apps/.../create-test.module.ts)\n                        \n                        \n                            directoryFactory   (apps/.../file.factory.ts)\n                        \n                        \n                            EmptyResultQuery   (apps/.../empty-result.query.ts)\n                        \n                        \n                            enableOpenApiDocs   (apps/.../swagger.ts)\n                        \n                        \n                            execute   (apps/.../bootstrap.console.ts)\n                        \n                        \n                            fileFactory   (apps/.../file.factory.ts)\n                        \n                        \n                            generateHardcodedTestDashboard   (apps/.../dashboard.repo.ts)\n                        \n                        \n                            hardcodedTestDashboardId   (apps/.../dashboard.repo.ts)\n                        \n                        \n                            isBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isTechnicalError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            jwtConstants   (apps/.../constants.ts)\n                        \n                        \n                            lessonFactory   (apps/.../lesson.factory.ts)\n                        \n                        \n                            NEWS_SOURCES   (apps/.../news.response.ts)\n                        \n                        \n                            NOT_FOUND_ERROR_TYPE   (apps/.../server-error-types.ts)\n                        \n                        \n                            REQUEST_TIMEOUT   (apps/.../constants.ts)\n                        \n                        \n                            roleFactory   (apps/.../role.factory.ts)\n                        \n                        \n                            schoolFactory   (apps/.../school.factory.ts)\n                        \n                        \n                            schoolNewsFactory   (apps/.../news.factory.ts)\n                        \n                        \n                            serverErrorTypes   (apps/.../server-error-types.ts)\n                        \n                        \n                            setupEntities   (apps/.../setup-entities.ts)\n                        \n                        \n                            storageProviderFactory   (apps/.../storageprovider.factory.ts)\n                        \n                        \n                            STRATEGIES   (apps/.../auth.decorator.ts)\n                        \n                        \n                            submissionFactory   (apps/.../submission.factory.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../create-news.params.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../news-filter.query.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../news.response.ts)\n                        \n                        \n                            taskFactory   (apps/.../task.factory.ts)\n                        \n                        \n                            teamFactory   (apps/.../team.factory.ts)\n                        \n                        \n                            teamNewsFactory   (apps/.../news.factory.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                            usedGlobals   (apps/.../database.config.ts)\n                        \n                        \n                               (apps/.../database.config.ts)\n                        \n                        \n                               (apps/.../server-error-types.ts)\n                        \n                        \n                               (apps/.../constants.ts)\n                        \n                        \n                            writeErrorLog   (apps/.../global-error.filter.ts)\n                        \n                        \n                            writeValidationErrors   (apps/.../global-error.filter.ts)\n                        \n                        \n                               (apps/.../jwt-validation.adapter.ts)\n                        \n                        \n                               (apps/.../constants.ts)\n                        \n                        \n                               (apps/.../file-system.adapter.ts)\n                        \n                        \n                            userFactory   (apps/.../user.factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/shared/domain/entity/all-entities.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ALL_ENTITIES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n\tCourse,\n\tCourseGroup,\n\tDashboardModelEntity,\n\tDashboardGridElementModel,\n\tDefaultGridReferenceModel,\n\tBaseFile,\n\tFile,\n\tDirectory,\n\tStorageProvider,\n\tLesson,\n\tRole,\n\tSchool,\n\tSubmission,\n\tTask,\n\tTeam,\n\tUser,\n\tCourseNews,\n\tNews,\n\tSchoolNews,\n\tTeamNews,\n]\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Authenticate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...strategies: Strategies) => {\n\tif (strategies.includes('jwt')) {\n\t\tconst decorators = [\n\t\t\t// apply jwt authentication\n\t\t\tUseGuards(JwtAuthGuard),\n\t\t\t// add jwt authentication to openapi spec\n\t\t\tApiBearerAuth(),\n\t\t];\n\t\treturn applyDecorators(...decorators);\n\t}\n\tthrow new ForbiddenException('jwt strategy required');\n}\n                    \n                \n\n            \n                \n                    Authentication Decorator taking care of require authentication header to be present, setting up the user context and extending openAPI spec.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((data: unknown, ctx: ExecutionContext) => {\n\tconst { user }: Request = ctx.switchToHttp().getRequest();\n\tif (!user)\n\t\tthrow new UnauthorizedException(\n\t\t\t'CurrentUser missing in request context. This route requires jwt authentication guard enabled.'\n\t\t);\n\treturn user as ICurrentUser;\n})\n                    \n                \n\n            \n                \n                    Returns the current authenticated user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STRATEGIES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ['jwt'] as const\n                    \n                \n\n\n        \n    \n\n    apps/server/src/console/console.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BootstrapConsole({\n\tmodule: ServerConsoleModule,\n\tuseDecorators: true,\n})\n                    \n                \n\n            \n                \n                    The console is starting the application wrapped into commander.\nThis allows adding console commands to execute provider methods.\n\n                \n            \n\n        \n    \n\n    apps/server/src/shared/testing/clean-up-collections.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cleanUpCollections\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (em: EntityManager): Promise => {\n\tconst allCollections = await em.getConnection('write').listCollections();\n\tawait Promise.all(\n\t\tallCollections.map(async (collectionName) => {\n\t\t\tawait em.getConnection().deleteMany(collectionName, {});\n\t\t})\n\t);\n}\n                    \n                \n\n\n        \n    \n\n    jest.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Config.InitialOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n\tmoduleFileExtensions: ['js', 'json', 'ts'],\n\trootDir: '.',\n\t/* we have tests in src/...*.spec.ts and test/...*.e2e-spec.ts either we test all files via `npm run nest:test` or override the regex in npm scripts to separate the execution via `npm run nest:test:spec` or `npm run nest:test:e2e` */\n\ttestRegex: '\\\\.(e2e-)?spec\\\\.ts$',\n\t// ignore legacy mocha tests\n\ttestPathIgnorePatterns: ['^src', '^test'],\n\ttransform: {\n\t\t'^.+\\\\.(t|j)s$': 'ts-jest',\n\t},\n\tcollectCoverageFrom: ['apps/**/*.(t|j)s'],\n\tcoverageDirectory: './coverage',\n\tcoveragePathIgnorePatterns: ['.module.ts$', 'index.ts$', 'spec.ts$'],\n\tcoverageThreshold: {\n\t\tglobal: {\n\t\t\tbranches: 80,\n\t\t\tfunctions: 80,\n\t\t\tlines: 80,\n\t\t\tstatements: -10,\n\t\t},\n\t\t// add custom paths: './apps/server/path...': { branches: X, functions: ... }\n\t},\n\ttestEnvironment: 'node',\n\t// detectOpenHandles: true,\n\t// detectLeaks: true,\n\troots: ['/apps/'],\n\tmoduleNameMapper: {\n\t\t// add ts-config path's here as regex\n\t\t'^@shared/(.*)$': '/apps/server/src/shared/$1',\n\t\t'^@src/(.*)$': '/apps/server/src/$1',\n\t},\n\tmaxWorkers: 2, // limited for not taking all workers within of a single github action\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('ts-jest/utils')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('./tsconfig.json')\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/controller/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DocumentBuilder()\n\t.setTitle('HPI Schul-Cloud Server API')\n\t.setDescription('This is v3 of HPI Schul-Cloud Server. Checkout /docs for v1.')\n\t.setVersion('3.0')\n\t/** set authentication for all routes enabled by default */\n\t.addBearerAuth({ type: 'http', scheme: 'bearer', bearerFormat: 'JWT' })\n\t.build()\n                    \n                \n\n            \n                \n                    \nOpenAPI docs setup\n\nThey will be generated by Controller routes\nand DTOs/Entities passed. Their properties\nmust use @ApiProperty\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enableOpenApiDocs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (app: INestApplication, path: string): void => {\n\tconst document = SwaggerModule.createDocument(app, config);\n\tSwaggerModule.setup(path, app, document);\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/course.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        courseFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(Course, ({ sequence }) => {\n\treturn {\n\t\tname: `course #${sequence}`,\n\t\tdescription: `course #${sequence} description`,\n\t\tcolor: '#FFFFFF',\n\t\tschool: schoolFactory.build(),\n\t};\n})\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/coursegroup.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        courseGroupFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(CourseGroup, () => {\n\treturn {\n\t\tcourse: courseFactory.build(),\n\t};\n})\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/news.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        courseNewsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(CourseNews, ({ sequence }) => {\n\treturn {\n\t\ttitle: `news ${sequence}`,\n\t\tcontent: `content of news ${sequence}`,\n\t\tdisplayAt: new Date(),\n\t\tschool: schoolFactory.build(),\n\t\tcreator: userFactory.build(),\n\t\ttarget: courseFactory.build(),\n\t};\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        schoolNewsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(SchoolNews, ({ sequence }) => {\n\treturn {\n\t\ttitle: `news ${sequence}`,\n\t\tcontent: `content of news ${sequence}`,\n\t\tdisplayAt: new Date(),\n\t\tschool: schoolFactory.build(),\n\t\tcreator: userFactory.build(),\n\t\ttarget: schoolFactory.build(),\n\t};\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teamNewsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(TeamNews, ({ sequence }) => {\n\treturn {\n\t\ttitle: `news ${sequence}`,\n\t\tcontent: `content of news ${sequence}`,\n\t\tdisplayAt: new Date(),\n\t\tschool: schoolFactory.build(),\n\t\tcreator: userFactory.build(),\n\t\ttarget: teamFactory.build(),\n\t};\n})\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/create-current-test-user.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createCurrentTestUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n\tinitPermissions?: string[]\n): {\n\tcurrentUser: ICurrentUser;\n\tuser: User;\n\troles: Role[];\n} => {\n\tconst accountId = new ObjectId().toHexString();\n\tconst school = schoolFactory.build();\n\tschool._id = new ObjectId();\n\n\tconst permissions = initPermissions || ['A', 'B'];\n\tconst roles = [new Role({ name: 'name', permissions })] as Role[];\n\tconst roleIds = roles.map((role) => role.id);\n\n\tconst user = userFactory.build({ roles, school });\n\t// const user = new User({ email: `Date.now()@email.de`, roles, school });\n\tuser._id = new ObjectId();\n\tconst resolvedUser = ResolvedUserMapper.mapToResponse(user, permissions, roles);\n\n\tconst currentUser = {\n\t\tuserId: user.id,\n\t\troles: roleIds,\n\t\tschoolId: school.id,\n\t\taccountId,\n\t\tuser: resolvedUser,\n\t} as ICurrentUser;\n\treturn { currentUser, user, roles };\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createErrorResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: unknown, logger: ILogger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create response from unknown error\n\t\treturn createErrorResponseForUnknownError(error);\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponseForHttpException\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n}\n                    \n                \n\n            \n                \n                    Creates ErrorResponse from NestJS build in technical exceptions\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBusinessError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFeathersError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTechnicalError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n}\n                    \n                \n\n            \n                \n                    Compare helper to detect an error is a build in NestJS http exception.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeErrorLog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: unknown, logger: ILogger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tif (error instanceof ApiValidationError) {\n\t\t\t\twriteValidationErrors(error, logger);\n\t\t\t} else {\n\t\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t\t}\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValidationErrors\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: ApiValidationError, logger: ILogger) => {\n\tconst errorMsg = error.validationErrors.map(\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t(e) => `Wrong property ${e.property} got ${e.value} : ${JSON.stringify(e.constraints)}`\n\t);\n\tlogger.error(errorMsg, error.stack, 'API Validation Error');\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/infra/database/mongo-memory-database/mongo-memory-database.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createMikroOrmModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (options: MikroOrmModuleAsyncOptions): Promise => {\n\tconst mikroOrmModule = MikroOrmModule.forRootAsync({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: MongoMemoryServer,\n\t\t\t\tuseFactory: async () => {\n\t\t\t\t\tconst mongo = await MongoMemoryServer.create();\n\t\t\t\t\treturn mongo;\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tuseFactory: async (mongo: MongoMemoryServer) => {\n\t\t\tawait mongo.ensureInstance();\n\t\t\tconst clientUrl = mongo.getUri();\n\t\t\treturn {\n\t\t\t\t...options,\n\t\t\t\ttype: 'mongo',\n\t\t\t\tclientUrl,\n\t\t\t};\n\t\t},\n\t\tinject: [MongoMemoryServer],\n\t});\n\n\t// TODO maybe we can find a better way to export the MongoMemoryServer provider\n\t// currently we cannot specify the export otherwise because MikroOrmModuleSyncOptions doesn't provide an export option\n\tif (mikroOrmModule.imports && mikroOrmModule.imports.length > 0) {\n\t\tconst mikroOrmCoreModule = (await mikroOrmModule.imports[0]) as DynamicModule;\n\t\tmikroOrmCoreModule.exports ||= [];\n\t\tmikroOrmCoreModule.exports.push(MongoMemoryServer);\n\t}\n\n\treturn mikroOrmModule;\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/infra/mail/mail.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createRabbitMqModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (options: RabbitMqModuleOptions) => {\n\tconst rabbitMqModule = RabbitMQModule.forRoot(RabbitMQModule, {\n\t\texchanges: [\n\t\t\t{\n\t\t\t\tname: options.exchange,\n\t\t\t\ttype: 'direct',\n\t\t\t},\n\t\t],\n\t\turi: options.uri,\n\t});\n\treturn rabbitMqModule;\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/common/interceptor/test/create-test.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createTestModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (interceptor: NestInterceptor): Promise => {\n\treturn Test.createTestingModule({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\t\tuseValue: interceptor,\n\t\t\t},\n\t\t],\n\t\tcontrollers: [DelayController],\n\t}).compile();\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (ms) => new Promise((resolve) => setTimeout(resolve, ms))\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/domain/entity/course.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tcolor: '#ACACAC',\n\tname: 'Kurse',\n\tdescription: '',\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/domain/entity/dashboard.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 6\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultRows\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 6\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/file.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        directoryFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(Directory, ({ sequence }) => {\n\treturn {\n\t\tstorageFileName: `directory-${sequence}`,\n\t\tbucket: 'test-bucket',\n\t\tstorageProvider: storageProviderFactory.build(),\n\t\tcreator: userFactory.build(),\n\t};\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(File, ({ sequence }) => {\n\treturn {\n\t\tstorageFileName: `file-${sequence}`,\n\t\tbucket: 'test-bucket',\n\t\tstorageProvider: storageProviderFactory.build(),\n\t\tcreator: userFactory.build(),\n\t};\n})\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/repo/query/empty-result.query.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EmptyResultQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { $and: [{ _id: false }] }\n                    \n                \n\n            \n                \n                    When this query is added ($and) to an existing query,\nit should ensure an empty result\n\n                \n            \n\n        \n    \n\n    apps/server/src/console/test/bootstrap.console.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (bootstrap: BootstrapConsole, args: string[]): Promise => {\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tconst commandResponse = await bootstrap.boot([process.argv0, 'console', ...args]);\n\treturn Promise.resolve();\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/repositories/learnroom/dashboard.repo.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        generateHardcodedTestDashboard\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n\tconst gridArray: GridElementWithPosition[] = [];\n\n\tgridArray.push({\n\t\tpos: { x: 1, y: 3 },\n\t\tgridElement: GridElement.FromPersistedReference(\n\t\t\tnew ObjectId().toString(),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'Math')\n\t\t),\n\t});\n\tgridArray.push({\n\t\tpos: { x: 1, y: 4 },\n\t\tgridElement: GridElement.FromPersistedGroup(new ObjectId().toString(), 'Science', [\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'Physics'),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'Biology'),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'Chemistry'),\n\t\t]),\n\t});\n\tgridArray.push({\n\t\tpos: { x: 2, y: 1 },\n\t\tgridElement: GridElement.FromPersistedReference(\n\t\t\tnew ObjectId().toString(),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'English')\n\t\t),\n\t});\n\tgridArray.push({\n\t\tpos: { x: 3, y: 1 },\n\t\tgridElement: GridElement.FromPersistedReference(\n\t\t\tnew ObjectId().toString(),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'German')\n\t\t),\n\t});\n\tgridArray.push({\n\t\tpos: { x: 4, y: 1 },\n\t\tgridElement: GridElement.FromPersistedReference(\n\t\t\tnew ObjectId().toString(),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'Greek')\n\t\t),\n\t});\n\n\tconst dashboard = new DashboardEntity(hardcodedTestDashboardId, { grid: gridArray });\n\treturn dashboard;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hardcodedTestDashboardId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '0000d213816abba584714c0a'\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/authentication/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         JwtConstants\n\n                    \n                \n                \n                    \n                        Default value : {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : externalAuthConfig\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/lesson.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        lessonFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(Lesson, ({ sequence }) => {\n\treturn {\n\t\tname: `lesson #${sequence}`,\n\t\tcourse: courseFactory.build(),\n\t};\n})\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NEWS_SOURCES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ['internal', 'rss'] as const\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TARGET_MODEL_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(NewsTargetModel)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/core/error/server-error-types.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NOT_FOUND_ERROR_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IErrorType\n\n                    \n                \n                \n                    \n                        Default value : {\n\ttype: 'NOT_FOUND_ERROR',\n\ttitle: 'Not Found',\n\tdefaultMessage: 'The requested ressource has not been found.',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverErrorTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : legacyErrorTypes\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : serverErrorTypes\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/common/interceptor/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REQUEST_TIMEOUT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Configuration.get('REQUEST_TIMEOUT') as number\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : config\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/role.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        roleFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(Role, ({ sequence }) => {\n\treturn {\n\t\tname: `role #${sequence}`,\n\t};\n})\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/school.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        schoolFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(School, ({ sequence }) => {\n\treturn { name: `school #${sequence}` };\n})\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/setup-entities.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setupEntities\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (): Promise => {\n\tconst orm = await MikroORM.init({ type: 'mongo', dbName: 'dummy', entities: ALL_ENTITIES });\n\treturn orm;\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/storageprovider.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        storageProviderFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(\n\tStorageProvider,\n\t() => {\n\t\treturn {\n\t\t\tendpointUrl: 'http://localhost',\n\t\t\taccessKeyId: 'accessKeyId',\n\t\t\tsecretAccessKey: 'secret',\n\t\t};\n\t}\n)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/submission.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        submissionFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SubmissionFactory.define(Submission, ({ sequence }) => {\n\treturn {\n\t\ttask: taskFactory.build(),\n\t\tstudent: userFactory.build(),\n\t\tcomment: `submission comment #${sequence}`,\n\t};\n})\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/news/controller/dto/create-news.params.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TARGET_MODEL_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(NewsTargetModel)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/news/controller/dto/news-filter.query.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TARGET_MODEL_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(NewsTargetModel)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/task.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        taskFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : TaskFactory.define(Task, ({ sequence }) => {\n\treturn { name: `task #${sequence}` };\n})\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/team.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        teamFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(Team, ({ sequence }) => {\n\treturn {\n\t\tname: `team #${sequence}`,\n\t};\n})\n                    \n                \n\n\n        \n    \n\n    apps/server/src/config/database.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        usedGlobals\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GlobalConstants\n\n                    \n                \n                \n                    \n                        Default value : globals\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : usedGlobals\n                    \n                \n\n            \n                \n                    Database URL\n\n                \n            \n\n        \n    \n\n    apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : jwtWhitelist\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/infra/file-system/file-system.adapter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : fsp\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/user.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(User, ({ sequence }) => {\n\treturn {\n\t\tfirstName: 'John',\n\t\tlastName: `Doe ${sequence}`,\n\t\temail: `user-${sequence}@example.com`,\n\t\troles: [],\n\t\tschool: schoolFactory.build(),\n\t};\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application.html":{"url":"additional-documentation/nestjs-application.html","title":"additional-page - NestJS Application","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHPI Schul-Cloud NestJS server\nThis application extends the existing server-application based on feathers and express by introducing dependency injection supporting unit testing and modularization, the possibility to develop against interfaces, and start implementation of modules using TypeScript.\nYou find the whole documentation published as GitHub Page\nRequirements\n\nNode.js (see .nvmrc for version)\nMongoDB (4.x)\nRabbitMQ (configure using RABBITMQ_URL, see default.schema.json)\n\npreconditions\n\nHave a MongoDB started, run mongod \nHave some seed data in datase, use npm run setup to reset the db and apply seed data\nHave RabbitMQ started, run docker run -d -p 5672:5672 -p 15672:15672 --name rabbitmq rabbitmq:3.8.9-management. This starts RabbitMQ on port 5672 and a web admin console at localhost:15672 (use guest:guest to login).\n\nHow to start the application\nBeside existing scripts, for the nestJS application the following scripts have been added. Try not changing the scripts as they should match what NestJS defines by default. Execute npm run ...\n\nnest:prebuild remove existing data from previous build\nnest:build compile the applications typescript ressources from apps/server to dist folder, keeps legacy js-code where it is\nnest:build:all currently executes nest:build, could additionaly build static assets\nnest:start starts the nest application on localhost:3030\nnest:start:dev run application without build from sources in dev-mode with hot-reload\nnest:start:debug run application in dev-mode with hot-reload and debug port opened on port :9229\nnest:start:prod start applicaiton in production mode, requires nest:build to be executed beforehand\n\nHow to build and serve the documentation\n\nnest:docs:build builds code documentation and module relations into /documentation folder\nnest:docs:serve builds code documentation and module relations into /documentation folder and serves it on port :8080 with hot reload on changes\n\nHow to start the server console\nThe console offers management capabilities of the application.\n\nnest:console after nest:build in production or\nnest:console:dev for development\n\nTo run a specific command run npm run nest:console:dev -- command . The --is required for npm to send params to the console. Use --helpto get an overview about existing commands.\nHow to test the nest-application with jest\n NestJS must not use _.test.[ts|js] as filename but instead either *.spec.ts for unit-tests beside tested files or *.e2e-spec.ts in test folder for end-to-end tests. This ensures legacy/feathers/mocha tests can be separated from jest test suites.\nThe application must pass the following statement which executes separate checks:\n\nnest:test executes all jest (NestJS) tests with coverage and eslint\n\nTo test a subset, use\n\nnest:test:all execute unit and e2e tests \n\nnest:test:e2e execute e2e tests only\n\nnest:test:spec execute unit tests (without e2e) only\n\nnest:test:cov executes all jest tests with coverage check\n\nnest:test:watch executes changed tests again on save\n\nnest:test:debug executes tests with debugging\n\nnest:lint run eslint to report linter issues and apply formatting\n\nnest:lint:fix run eslint to report and auto-fix fixable linter issues and apply formatting\n\n\nQuality gates\nWith coverage on tests and static code analysis we ensure some quality gates which are all handled by running nest:test:\n\nESLint with prettier ensures formatting and static code analysis to pass, see .eslintrc.js for details.\nTests ensure functional requirements via unit & e2e tests.\nCoverage on tests ensures a coverage of 80% on NestJS code, see jest.config.ts for details.\n\nGates are part of pull request checks.\nOpenAPI documentation\nThe NestJS applicaiton serves a documentation at :3030/v3/docs. The JSON-representation can be found at /v3/docs-json to be used for generating a client application.\nLegacy/feathers Swagger UI documentation when running the server locally, it is served at :3030/docs/.\nLegacy (feathers) testing with mocha\n\nnpm run test\nTo run a single test, use npm run mocha-single -- .\n\nHow to get full documentation\nThe documentation is provided by compodoc, run npm run nest:docs:serve, check generated compodoc features, custom information can be found in additional information section. Your console will tell you, where it is served.\nThe updated documentation is published as GitHub Page\nContent\nFor further reading, browse apps/server/doc.\nNestJS CLI\nTo use the NestJS CLI, install the nest cli globally.\n$ npm i -g @nestjs/cliThen you may use features like nest g service foo within of /apps/server/src.\nDebugging\nThere are launch configurations available for VSCode in .vscode/launch.default.json\nTech Stack\nFeel free to find related documentation:\n\nhttps://nestjs.com/\nhttps://jestjs.io/\nhttps://mikro-orm.io/\nhttps://min.io/\nhttps://www.rabbitmq.com/\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/software-architecture.html":{"url":"additional-documentation/nestjs-application/software-architecture.html","title":"additional-page - Software Architecture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSoftware Architecture\nGoals\nOur architecture aims to achieve the following goals:\n\ndecouple the business logic from any protocol, framework or technology specific code\nmakes business code easier to understand and test\nmakes code easier to maintain and change\n\n\nDefine standard solutions for cross-cutting-concerns and implement them once, for example:\nerror handling\nlogging\ntransaction handling\nAPI documentation and validation\n\n\n\nPrinciples\nOur architecture is based on the following principles:\n\nComponent Oriented DesignWe follow a strictly component oriented design to address the following sub-principles:\nSeparation of Concerns\nReusability and avoiding redundant code\nInformation Hiding via component API and its exchangeable implementation treated as secret.\nDesign by Contract for self-contained, descriptive, and stable component APIs.\nLayering as well as separation of business logic from technical code for better maintenance.\nData Sovereignty (and high cohesion with low coupling) says that a component is responsible for its data and changes to this data shall only happen via the component. Otherwise maintenance problems will arise to ensure that data remains consistent. Therefore interfaces of a component that may be used by other components are designed call-by-value and not call-by-reference.\n\n\nHomogeneitySolve similar problems in similar ways and establish a uniform code-style.\n\nOverview\nThe following figure shows the general architecture approach for the HPI-Schul-Cloud. It contains two different architecture categories (business architecture and technical architecture), which are described in more detail bellow.\n\nBusiness Architecture\nThe business architecture divides the application into business components. A business component has a well-defined responsibility that it encapsulates. All aspects related to that responsibility have to be implemented within that business component. Further the business architecture defines the dependencies between the business components. These dependencies need to be free of cycles. A business component exports his functionality via well-defined interfaces as a self-contained API. A business component may use another business component via its API and compliant with the dependencies defined by the business architecture.\nThe business components in the architecture should be the output of the business architecture created and managed by the product owner and it must stay aligned with the implementation to provide actual value. If their components are hard to implement (e.g. because technically, there is a very high cohesion between two components), the business component model should be changed. The business architecture has a very high impact on the solution and should therefore (especially in a agile environment) be the result of a mix team (business and development).\nThe application might contain components, which are not part of the business architecture, but have a technical background (e.g. a complex adapter component used to connect to an external system).\nTechnical Architecture\nThe technical architecture **divides the application into technical ****layers** based on the multilayered architecture. A layer is a unit of code with the same category such as service or presentation logic. A layer is therefore often supported by a technical framework. Each business component can therefore be split into *component parts* for each layer.\nComponents\nFollowing separation-of-concerns we divide an application into components using our folder-conventions and the architecture-mapping (see Architecture Mapping to Code). Components must use the UseCase-Facade of other components to communicate with them. Never access any other code from a different component directly.\nFor the HPI Schul-Cloud, we have two major types of components\nBusiness Components\nThese usually manage one or more entities and provide the related business logic to other components and external systems.\nAdapter Components\nAdapter components encapsulate interactions with external systems:\n\nrequests to an external system like a chat system, microservices etc.\nrequests from external systems, but only if:\nthe external system needs a specific API (e.g. a public standard for user/class management)\nthere are other (non-)functional requirements, which make it reasonable to encapsulate the interface into its own component, for example:\na reporting API, which aggregates data of multiple components\nAPIs, which have different security requirements\n\n\nOtherwise, the standard API provided by business components should be used\n\n\n\nHow to use Components\nCommunication between components\nIf component B needs anything from component A, it must always access it using the UseCase Facade of A. The general rules are:\n\nOnly the logic exposed in the UseCase facade can be invoked by other components. All other logic must not be called directly. This provides a clean and defined interface, which can be tested and validated.\n\naccessing the datalayer directly would heavily impact maintainability and encapsulation\naccessing the service layer makes no sense because it contains protocol specific aspects and overhead, which is not relevant within the application\n\n\nIn some cases, it is reasonable for the service layer of component B to call the UseCase facade of component A directly\n\nfor example if component B has no business logic (like a simple adapter component)\nIn any other situation, you should only put it into the business logic\n\n\n\n\n\n\nProvide dedicated APIs for external systems\nIf external applications can't use the default REST API of the system (e.g. because they expect application specific endpoints), those endpoints are provided as a separate component. For example, if an external MyLearningApp Application want's to connect to the HPI Schul-Cloud, create a new component called \"MyLearningAppAdapter\", which maps the external requests from the app to the internal datamodel and calls the use-case facade. Additional Hints:\n\nDo not access the Service Layer, the Data-Access Layer or the actual data in the database of the target component from this adapter component. Only access the UseCase-Facade. By doing this, we ensure that there are no side-effects introduced and the logic layer has full control over the business logic/rules.\nThe adapter component can contain it's own logic layer, if there is actual logic related to providing the interface (e.g more complex mapping and validation rules).\nThe adapter component can also contain a data-access layer, which for example caches data for the responses, contains mapping rules or buffers data from requests for processing.\nDo not use any relations, constraints or other dependencies onto the target component(s) on database level and do not query the data directly. Always use the UseCase Facade\n\n\nAn adapter component can contain multiple endpoints (e.g. for users, courses and classes) and the adapter is allowed to access multiple business components (e.g. to retrieve data from users, courses and classes).\n\n The figure above shows the generic setup. As stated above, the adapter component can access additional components\nAccessing an external API / System\nUsually, access to an external system should be encapsulated in it's own component. This adapter component is responsible for the mapping between the internal and external datamodel and all the protocol and system specific logic. The guidelines are:\n\nIn many cases, external system specific logic is encapsulated in it's own adapter component\nThe component should have an abstract name, e.g. instead of \"RocketChatAdapter\", it should be \"ChatAdapter\". That way, we reduce the amount of changes in the code, if we replace the system.\n\n\nThere are cases, in which the client to an external system could be part of a business component. Thats allowed, if the following conditons are true:\nIt will not be reused/called directly by other components. All calls must go through this business components usecase facade and obviously, the logic must fit into the components responsibility.\nit's very simple or tightly related to an entity managed by the business component, e.g.\nif course content is not stored in a database but in a third party LMS. In that case, the external system is the actual \"repository\" of the data and the client for it belongs in the dataaccess layer\na component managing addresses could contain a client which calls an external application to validate addresses.\n\n\n\n\nan adapter component provides a business interface (use case oriented)\nadapter components can provide their own REST API / service layer, but don't have to\nprovided APIs should also be business oriented and not system specific\n\n\nthe actual client and protocol logic (rest client, etc.) is located in the dataaccess layer\nAn adapter component can contain multiple clients for different services (e.g. rocketchat and matrixchat)\nIf a framework encapsulates the protocol specific logic enough, the framework can be used as \"dataaccess layer\"\n\n\nThe dataaccess layer can also contain entites and db repositories. This might be the case if the adapter component caches or buffers data or needs to manage mapping master data/rules\nthe logic layer is usually rather empty and contains only mapping and data-enrichment logic\nIt can also contain logic to determine the correct dataaccess-layer-client (e.g. if bundesland=x, use rocketchat, otherwise use matrix chat)\n\n\n\nScenarios:\nWith Adapter Component\n\nWith Business Component\n\nAccess Legacy Code\nIf you need to access legacy code (not yet migrated to the new architecture), you can do it from the logic layer (preferred) or the service layer (if there is no logic layer or it is only needed for service-layer-mapping)\n\nExtract Component into external system (Microservice)\nThe component approach not only increases the maintainability and test-ability by a large amount, it also allows to extract components into separate applications without large refactorings. The components are already decoupled and the required functionality in the UseCase Facade can be pulled up into the REST-API.\n\nLayers\nUI Layer\nThe UI layer is implemented as single-page-application using the https://nuxtjs.org/ framework, which wraps the https://vuejs.org/ framework. It should contain only logic related to:\n\npresentation\nsimple form validation\nlocalization\n\nThe client architecture uses an atomic design approach. For details, please check the client-architecture documentation.\nService Layer\nThe service layer is responsible for exposing functionality made available by the logical layer to **external consumers **over a network via technical protocols. By doing this, it decouples the logic layer completely from any protocols or frameworks used to provide logic to the outside world. The service layer can actually contain multiple services for all kinds of protocols (e.g. REST, Sockets, Kafka Messages and so on), which all map protocol specific requests to the protocol-independent logic layer.\nThe service layer in the project uses the feathers/express framework to expose RESTful/socket APIs to the legacy client and NUXT client as well as any other authorized consumer.\nThe layer ensures that the API specification contract is fulfilled, but also handles a large set of cross-cutting-concerns. Its most important tasks are:\n\nEnsure authentication, authorization ((Student-,Teacher-,Admin-)Role/Permissions only)\nRequest/Response validation against the API specification\nMapping form the internal data model to the external view (e.g. remove security critical information, technical keys etc.)\nProvide old versions of an API and map to the new business logic (this is not always possible in the service layer)\nGlobal error handling i.e. translates Application Exception into protocol specific errors\nCapture trace-information (e.g. request-id, user) and provide them to the application for logging\ncollect monitoring information (e.g. number of requests, response times, error rates etc)\nRequest/response/error logging\n\nCross-cutting-concerns are actually shared across all components (hence the name), but many of them are hooked (aspect oriented programming) around the services in the service-layer und some need a service-specific configuration. For example, a hook, which does role based authorization, is implemented only once and wraps all services. But it needs to know which roles must be checked for specific services and service operations.\nLogic Layer\nThe logic layer is the heart of the application and contains the main business logic. According to our business architecture we divide an application into components, which contains use-cases. Each component provides a usecase facade, which can be used to trigger the business logic for a use case from either:\n\nthe service layer\nfrom another component.\n\nThe logic layer is responsible for the implementation of the business logic according to the specified functional demands and requirements. It therefore creates the actual value of the application. The following additional aspects are also in its responsibility:\n\nValidation based on business rules. For example:\nParents must provide their consent for students bellow 16 years of age\n\n\nAuthorization and data access rights (scope or user specific permission), for example:\nA teacher are not allowed to see courses or students from other schools\n\n\nChoreography: In general, only the logic layer is allowed to call other components or trigger a call to an external system. Exceptions are possible (e.g. if a component has no business logic and therefore no logic layer)\n\nThe service layer must be free from protocol or database specific code and does not make assumptions about which protocol or client called it or where the data is stored. For example:\n\nthe die business layer must not access any HTTP-request parameters or headers directly. It has a defined interface which contains the data independently from the caller.\nit does not throw HTTP specific errors like 404 NotFound. Instead it throws an application specific error, which is mapped to 404 by the general REST API ErrorHandler\nIt does not create SQL or mongoDB queries. Instead it calls a defined interface and the dataaccess layer transform the input parameters into a DB specific query.\n\nUsing this approach, the business layer, which contains the actual logic, is much easier to test, understand and change. For example, it is possible to write xUnit Tests with no dependencies to DBs or protocols.\nDataaccess Layer\nThe data-access layer is responsible for all outgoing connections to access and process data. This is mainly about accessing data from a persistent data-store but also about invoking external services. It provides a more or less business oriented interface - e.g. findUser(userId)- and translates it into an database or database-framework specific query. No matter which database, database framework or protocol-client you use, the interface of the dataaccess layer should be neutral. That means that your interface must also provide parameters for pagination etc.\nThis approach brings a couple of benefits:\n\nSeparation of Concerns: encapsulates DB queries/requests to external services and allows for testing it separately\nIntroduces an abstraction over DB/protocol Connector/framework\nSeparates DB-specific Query Language and Application Specific Search Criteria\nIncreases security level - the DB is not exposed via Rest API, minimizes chance for Non-SQL/SQL-Injections\n\nBatch Layer\nThe batch layer is basically a service layer, which contains code related to batch processing (bulk-oriented, non-interactive, typically long running execution of tasks). For simplicity the term batch or batch job is used for such tasks in the project.\nThe batch layer is responsible for batch processes, whereas the business logic is implemented in the logic layer. Compared to the service layer you may understand the batch layer just as a different way of accessing the business logic. Batches should invoke use cases in the logic layer for doing their work. Only \"batch specific\" technical aspects should be implemented in the batch layer. Example: For a batch, which imports user data from a CSV file, this means that all code for actually reading and parsing the CSV input file is implemented in the batch layer. The batch calls the use case \"create user\" in the logic layer for actually creating the users for each line read from the CSV input file.\nIn practice it is not always appropriate to create use cases in the logic layer for every bit of work a batch should do. Instead, the data access layer can be used directly. An example for that is a typical batch for data retention which deletes out-of-time data. Often deleting out-dated data is done by invoking a single SQL statement. It is appropriate to implement that SQL in a Repository method (provided by the dataaccess layer interface) and call this method directly from the batch. But be careful that this pattern is a simplification which could lead to business logic cluttered in different layers which reduces maintainability of the application. It is a typical design decision you have to take when designing your specific batches.\nCross Cutting Concerns\n\nError Handling\nAn important part of the layered architecture is the handling of errors. In our architecture, errors should either be:\n\nhandled directly (e.g. retry a failed REST-API-Call after a timeout error occurred)\nBubble up un-catched to the generic error handler in the cross cutting concerns layer (which , which knows how to map this error to an external error and return it to the caller.\nIn case of batch jobs, the batch layer catches the error and knows how to handle it (e.g. restart a job, skip a part of the job, stop the job completely etc).\n\n\n\nPlease check the error handling guidelines for details.\nTransaction Handling\nTransactions can span multiple layers and components. A concept is necessary to execute/rollback those transactions.\nTODO: add a link to the concept and describe how it interacts with layers.\nRequest Context\nMultiple crosscutting concerns make it necessary to introduce a \"request context\". This is a set of request specific variables accessible everywhere within the application during a request. For example:\n\neach request will contain a request-specific trace id, which must be added to log messages and audit log entries\neach request is triggered by a user or a batch job. We need to store this trigger in the audit logs\nif we introduce transactions across multiple components (e.g. users and classes), we need a way to share transaction information between components and store the transaction until a commit\n\nBecause this context is required in all layers (especially in the data access layer for audit logging) and in cross cutting hooks, we need a framework/feature, which makes this available for direct access without adding this object to every method signature as input variable. Luckily, the necessary functionality is now part of nodejs: AsyncLocalStorage.\nThe general approach for rest requests:\n\nA request is received\nA hook initializes the request context\nA hook extracts trace information (e.g. traceid and spanid) from the request and adds it to the request context\nA hook authenticates and authorizes the user and stores basic user information (e.g. user id, maybe general permissions roles) in the request context\nIf the user is not authenticated, a \"guest user\" is set in the content with only guest permissions\nFor batch jobs, a technial user must be set in the request context. For the business logic, the technology, channel and user must be hidden behind the request context.\n\n\nThe normal code is executed and can access the request context\nIf the business logic needs data from the request context, it can access it\ncross cutting logic like audit logging can extract the information. E.g. before the data access layer writes a entity change to the database, it retrieves the trace id and the user id from the request context and adds these information to the entity\nIf we make a call to another service (e.g. calendar), we retrieve the trace id from the request context and add it to the outgoing request\nOur logging abstraction retrieves the trace id from the request context and adds it to the log message before writing it to the logfile (actually the console).\n\n\nAfter the response is sent to the client, the request context is \"destroyed\"\n\nCharacteristics of the context:\n\nIt is request specific and destroyed after the request is processed\nData in it are only accessable by the processing o f a specific request, not any other request of the same user or another user!\nIt should only contain very basic information necessary for cross cutting concerns like logging and audit logging. Do not use it to transport all kinds of business data around\n\nImportant: In order to make the code (and especially the business logic) agnostic to the source of a request, the request context should be considered a \"invocation context\". That means that also batch jobs (time based triggerd requests) and anonymous rest request should work the exact same way. That means that:\n\nwe must setup the request context for batch jobs\nwe need technical users for anonymous requests and batch jobs\nsuper users (super heroes) must use the same mechanisms as normal users (no special permission checks etc)\n\nThat way, we can use the same logic for all invocations and the source of an invocation is isolated within the service layer.\nLogging and Tracing\nFor details see the corresponding logging and tracing guidelines.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{"url":"additional-documentation/nestjs-application/architecture-mapping-to-code.html","title":"additional-page - Architecture Mapping to Code","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nArchitecture mapping to Code\nConventions\nFile structure\nThe server app located in /apps/server is structured like. Beside each ts-file, a test file _.spec.ts has to be added for unit tests (hidden for simplification). Use index.ts files that combine a folders content and export all files from within of the folder using export _ from './file' where this makes sense. When there are naming conflicts, use more specific names and correct concepts. Think about not to create sub-folders, when only one concept exist.\nsrc/ // sourcecode & unit tests\n    - config/  // for global definitions\n    - modules/ // for your NestJS modules\n        - [module] // where [module] could be like user, homework, school\n            - entity/\n                - .entity.ts // (where  might be a user, news, ... owned by the module) exports entity class & document type\n                - .entity.ts // where related-info is a partial of another entity used in the entity above\n                - index.ts // exports all entities\n            - controller/ // where controllers define the api\n                - dto/ // dto's define api in/out types as a class with annotations\n                    - [param|query].ts // (like create-user-param.ts or pagination.query)\n                    - [response].ts // (like create-user-response.ts)\n                    - index.ts // exports all dto's\n                - .controller.ts // defines rest api, references main service file\n                - .controller.ts // think about a new module when require multiple controllers :)\n            - repo/ // repositories take care to load/persist/... entities\n                - schema/ // contains schema imports from legacy app or new definitions (might be replaced by OR mapper)\n                    - .schema.ts // exports (legacy-) mongoose schemas\n                - .repo.ts // where entity might be user, news, school\n            - service/ // for technical dependencies (libraries, infrastructure layer concerns)\n                - .service.ts // the modules main service file, might be exported for other modules\n                - .service.ts // use services not for features\n            - mapper/\n                - .mapper.ts // mapper for a domain entity, should contain mapDomainToResponse and mapFooToDomain\n            - uc/ // preferred for features\n                - .uc.ts // one file per single use case (use a long name)\n            - .module.ts // DI instructions to build the module\n    - shared/ // reused stuff without module ownership\n        - core/ // shared concepts (decorators, pipes, guards, errors, ...) folders might be added\n        - domain // (abstract) domain base entities which will be extended in the modules\n        - util/ // helpers, tools, utils can be located here (but find a better name)\ntest/ // e2e tests against controllers should use same folder names like controllers\nFor concepts (see https://docs.nestjs.com/first-steps) of NestJS put implementations in shared/core. You might use shared/utils for own solutions, assume TextUtils but when it contains text validators, move it better to shared/validators/text.validator.ts before merge. The core concepts of NestJS can be extended with ours (like repo).\nFile naming conventions\nIn TypeScript files: for Classes we use PascalCase (names start with uppercase letter), variables use lowercase for the first letter camelCase.\nWhen assigning names, they may end with a concept name:\n\nA Concept might be a known term which is widely used. Samples from NestJS: Controller, Provider, Module, Middleware, Exception, Pipe, Guard, Interceptor.\n\nBeside we have own concepts like comparator, validator (generic ones should not be part of a modules (and located in shared folder btw) or repo, use-case which might be owned by a module.\n\n\nIn file names, we use lowercase and minus in the beginning and end with ..ts\nSamples\n\n\n\nFile name\nClass name\nConcept\nLocation\n\n\n\n\nlogin-user.uc.ts\nLoginUserUc\nuse case\nmodule/uc\n\n\ntext.validator.ts\nTextValidator\nvalidator\nshared/validators\n\n\nuser.repo.ts\nUserRepo\nrepository\nmodule/repo\n\n\nparse-object-id.pipe.ts\nParseObjectIdPipe\npipe\nshared/pipes\n\n\n\nComponents\nComponents are defined as NestJS Modules. \nCommunication between components\nTo access other modules services, it can be injected anywhere. The usage is allowed only, when the module which owns that service has exported it in the modules definition.\n// modules/feathers/feathers-service.provider.ts\n// modules/feathers/feathers.module.ts\n@Module({\n    providers: [FeathersServiceProvider],\n    exports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\nThe feathers module is used to handle how the application is using legacy services, when access them, inject the FeathersServiceProvider but in your module definition, import the FeathersModule.\n// your module, here modules/authorization/authorization.module.ts\n@Module({\n    imports: [FeathersModule], // here import the services module\n    // providers: [AuthorizationService, FeathersAuthProvider],\n    // exports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n// inside of your service, here feathers-auth.provider.ts\n@Injectable()\nexport class FeathersAuthProvider {\n\n    // inject the service in constructor\n    constructor(private feathersServiceProvider: FeathersServiceProvider) {}\n    \n    // ...\n\n    async getUserTargetPermissions(\n        // ...\n    ): Promise {\n        const service = this.feathersServiceProvider.getService(`path`);\n        const result = await service.get(...)\n        // ...\n        return result;\n    }\nAccess legacy Code\nUse the feathers module introduced above to get access to legacy services.\nIt is important to introduce strong typing like it happened above in the FeathersAuthProvider. While the FeathersServiceProvider from the feathers module, has only an abstract implementation for all services, add a concrete service inside your module for a specific feathers-service, like above in FeathersAuthProvider.\nLayered Architecture\nThe different layers use separately defined objects that must be mapped when crossing layers.\n\nNever export entities through the service layer without DTO-mapping which is defined in the controller\nConcepts owned by a layer must not be shared with other layers\n\n\nFurther reading: https://khalilstemmler.com/articles/software-design-architecture/organizing-app-logic/\nService Layer\nA modules service layer is defined within of controllers.\nThe main responsibilities of a controller is to define the REST API interface as openAPI specification and map DTO's to match the logic layers interfaces.\n    @Post()\n    async create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n        const news = await this.newsUc.create(\n            currentUser.userId,\n            currentUser.schoolId,\n            NewsMapper.mapCreateNewsToDomain(params)\n        );\n        const dto = NewsMapper.mapToResponse(news);\n        return dto;\n    }JWT-Authentication\nFor authentication, use guards like JwtAuthGuard. It can be applied to a whole controller or a single controller method only. Then, ICurrentUser can be injected using the @CurrentUser() decorator.\nValidation\nGlobal settings of the core-module ensure request/response validation against the api definition. Simple input types might additionally use a custom pipe while for complex types injected as query/body are validated by default when parsed as DTO class.\nFile naming\nComplex input DTOs are defined like [create-news].param.ts (class-name: CreateNewsParam) or [pagination].query.ts (class-name: PaginationQuery)\nWhen DTO's are shared between multiple modules, locate them in the layer-related shared folder.\n\nSecurity: When exporting data, internal entities must be mapped to a response DTO class named like [news].response.dto. The mapping ensures which data of internal entities are exported.\n\nopenAPI specification\nDefining the request/response DTOs in a controller will define the openAPI specification automatically. Additional validation rules and openAPI definitions can be added using decorators. For simplification, openAPI decorators should define a type and if a property is required, while additional decorators can be used from class-validator to validate content.\nMapping\nIt is forbidden, to directly pass a DTO to a use-case or return an Entity (or other use-case result) via REST. In-between a mapper must transform the given data, to protect the logic layer from outside implications.\nThe use of a mapper gives us the guarantee, that\n\nno additional data beside the known properties is published.\nA plain object might contain more properties than defined in TS-interfaces.\nSample: All school properties are published while only name & id are intended to be published.\n\n\nthe API definition is complete\n\nLogic (Domain-) Layer\nThe domain layer assumes a kind of higher-level policy that everything else relies on (Source).\n\nThis means, a controller or a repository must fit this layer.\nSpecific goals of a repository, like query optimization must not be a transparent part of the repository only.\n\nData access Layer\nThe data access layer consists of repositories. A repository takes care to persist domain entities defined in the business layer. As we use decorators in entities to define how they are persisted, they are used in this layer too. The repository does not need to map entities like in the presentation layer as it maps data from/to an external system into the domain and to be used from/in the business layer.\n\nIt's not the task of the business layer to fit a repository. A respository should give the logic layer the ability to persist/make available what is defined in the logic layer. The domain model must be independent from a repository (See Clean Architecture).\n\nSpecific concepts from within of this layer must be hidden for the business layer like database queries, protocol specifics, mapping to data layer. Others like putting multiple persistence rules into transactions is part of the domain layer (while how a transaction is implemented, then is part of the data access layer).\nLogic should not be part of a repository, use logic layer instead.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/domain-driven-design.html":{"url":"additional-documentation/nestjs-application/domain-driven-design.html","title":"additional-page - Domain driven design","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDomain driven design\nWhile DDD is not enforced, we still try to follow its goals:\n\nDiscover the domain model by interacting with domain experts and agreeing upon a common set of terms to refer to processes, actors and any other phenomenon that occurs in the domain.\nTake those newly discovered terms and embed them in the code, creating a rich domain model that reflects the actual living, breathing business and it's rules.\nProtect that domain model from all the other technical intricacies involved in creating a web application.\n\nClean Architecture\n \"The Clean Architecture from the golden Uncle Bob archives\"\nFor the 3-layer architecture this means we have to protect the business layer and domain models from the outside world and infrastructure to keep it clean, fast, testable, ready for changes.\nConcepts\nEntities\nNestJS does not cover how to persist entities, the heart of our application. We need a solution that not only transfers data like mongoose, instead we want to define business rules on objects with strong typing added.\nInstead of Interface, Model and Schema which describe the view on data, now we define Entities, that get a DRY possibility to be created, loaded, and persisted using en entity manager. The definition of how an entity relates with others or how it is persisted can be added using decorators.\nSee https://github.com/mikro-orm/mikro-orm#-core-features for further details.\nDomain Services\nDomain Services are most often executed by application layer Application Services / Use Cases. Because Domain Services are a part of the Domain Layer and adhere to the dependency rule, Domain Services aren't allowed to depend on infrastructure layer concerns like Repositories to get access to the domain entities that they interact with. Application Services fetch the necessary entities, then pass them to domain services to run allow them to interact.\nSample: Within of a use case we not depend on a user context from outside while for logging, error handling or in a repository it might be used. Like we see in the clean architecture schema.\nUse Cases\nBeside Concepts NestJS introduces, own services like repositories or use-cases might be created.\nUse cases either return entities (data) to the user through a query (CRUD) or apply a command (do ... ok/err).\nFurther reading: https://khalilstemmler.com/articles/oop-design-principles/command-query-separation/\nThey focus on providing business use cases and should only contain higher logical function calls, that are well-tested and hide their implementation inside of a use-case.\n    /**\n     * Let an existing user create a new user (on same school).\n     * @throws: USER_ALREADY_EXISTS, API_VALIDATION_ERROR\n     * @throws: FORBIDDEN, BAD_REQUEST, INTERNAL_SERVER_ERROR, ...\n     */\n    async registerNewUser(creatorId: EntityId, schoolId: EntityId, props: INewUserProps): Promise {\n        this.logger.log(`create new user called by ${creatorId}`);\n\n        // check creator has permission in school to create user\n        await this.authorizationService.checkEntityPermissions(creatorId, School, schoolId, ['USER_CREATE']);\n\n        // check user not exists\n        await this.userService.checkUserNotExistByEmail(props.email)\n\n        const user = new User(props);\n        await this.userRepo.save(user);\n\n        if(enableUserActivation){\n            // call other service which creates pin and sends email\n        }\n\n        if(sendWelcomeEmailToUser){\n            await this.userEmailService.sendWelcomeMessage(user);\n        }\n\n        this.logger.log(`user ${user.id} created by user ${creatorId}`);\n\n        return user;\n    }\n\n\n    // ... userService\n\n    checkUserNotExistByEmail(email: string){\n        // todo email is not empty\n        const existingUser = await this.userRepo.findByEmail(props.email);\n        if(existingUser.length > 0) {\n            throw new UserAlreadyExistError();\n        }\n    }How to structure a use case? When creating a use case, care of\n\nthe general business goal\npreconditions\nactors, in-put & out-put data\npost conditions to be well-known\nthe normal case (step by step)\nall (handled) exception-cases (to be handled in a client application)\n\nClean Code principles\nA use case should consist only of business-rules and decisions (functional requirements), while the final implementation is part of functions that are called from the use case. There, we no more see any details about the functional requirements.\nDomain events\nEvents have to be handled very carefully or in best case not to be used. Like hooks around services might lead into separating the business logic into independend untestable workflows, the events task and data must be defined clearly and should only be used for independent tasks.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{"url":"additional-documentation/nestjs-application/cross-cutting-concerns.html","title":"additional-page - Cross-cutting concerns","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCross cutting concerns\nThe cross cutting topics are implemented within of the core-module. \nLogging\nFor logging use the logger ServerLogger, provided by the logger module. It is hooked up in the application on startup, replacing the default logger and can be transient injected into any provider by additionally define set a context into the logger.\n// add Logger module to your feature module imports or unit tests\nimport { LoggerModule } from '../core/logger/logger.module';\n// ...\nimports: [LoggerModule],\n// within of a provider (use-case, service, ...)\n\n// import the server logger service\nimport { ServerLogger } from '../core/logger/logger.service';\n\n@Injectable()\nexport class YourUc {\n    constructor(\n        // initialize a ServerLogger\n        private logger: ServerLogger\n    ) {\n        // set the context by this class name (here: 'YourUc')\n        this.logger.setContext(YourUc.name);\n    }\n\n    async sampleUcMethod(params) {\n        this.logger.log(`start do something...`);\n        // ...\n        this.logger.log(`finished successfully to do something...`);\n    }This produces a logging output like\n[Nest] NUMBER - TIME   [YourUc] start do something...\n[Nest] NUMBER - TIME   [YourUc] finished successfully to do something...Later we can filter the log for a single [context].\nA logger does implement the LoggerService interface:\ninterface LoggerService {\n    log(message: any, context?: string): any;\n    error(message: any, trace?: string, context?: string): any;\n    warn(message: any, context?: string): any;\n    debug?(message: any, context?: string): any;\n    verbose?(message: any, context?: string): any;\n}Only a string should be provided as a single parameter by default. Ensure not putting complex objects into a log. Think about persisting more complex results for later analysis into a database.\nOptionally in the second parameter, the context can be overridden only.\nException Handling\n\nWe separate our business exceptions from technical exceptions. While for technical exceptions, we use the predefined HTTPExceptions from NestJS, business exceptions inherit from abstract BusinessException.\nBy default, implementations of BusinessException must define\n    code: 500\n    type: \"CUSTOM_ERROR_TYPE\",\n    title: \"Custom Error Type\",\n    message: \"Human readable details\",\n    // additional: optionalDataThere is a GlobalErrorFilter provided to handle exceptions, which cares about the response format of exceptions and logging. It overrides the default NestJS APP_FILTER in the core/error-module.\nIn client applications, for technical errors, evaluate the http-error-code, then for business exceptions, the type can be used as identifier and additional data can be evaluated.\nFor business errors we use 409/conflict as default to clearly have all business errors with one error code identified.\n\nSample: For API validation errors, 409/Bad Request will be extended with validationError: ValidationError[{ field: string, error: string }] and a custom type API_VALIDATION_ERROR.\n\nPipes can be used as input validation. To get errors reported in the correct format, they can define a custom exception factory when they should produce api validation error or other exceptions, handled by clients.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/testing.html":{"url":"additional-documentation/nestjs-application/testing.html","title":"additional-page - Testing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTesting\nAutomated testing is the essential part of the software development process.\nIt improves the code quality and ensure that the code operates correctly especially after refactoring.\nThe Different Tests\n\n\nOur goal is to test each application layer mostly independent of others.\n\nRepo tests operate on data access layer.\nThey prove that the database queries are executed correctly.\nUse case tests operate on logic layer.\nThey verify the correct implementation of the business requirements.\nMapper tests operate between logic and service layer.\nThey verify the correct mapping between domain objects and objects delivered to the clients via REST API.\nEnd-to-end tests operate on all layers of the application.\nThe testing endpoint is the service layer. These tests verify the availability of the expected endpoints and checks\nthe expected status codes and the structure of the received objects.\n\nGeneral Test Conventions\nLean Tests\nThe tests should be as simple to read and understand as possible. They should be effortless to write and change, in order to not slow down development. Wherever possible:\n\navoid complex logic\ncover only one case per test\nonly use clearly named and widely used helper functions\nstick to blackbox testing: think about the unit from the outside, not its inner workings.\nits okay to duplicate code for each test\n\nNaming Convention\nWhen a test fails, the name of the test is the first hint to the developer (or any other person) to what went wrong where. (along with the \"describe\" blocks the test is in).\nThus, your describe structure and testcase names should be designed to enable a person unfamiliar with the code to identify the problem as fast as possible. It should tell him:\n\nwhat component is being tested\nunder what condition\nthe expected outcome\n\nTo facilitate this, your tests should be wrapped in at least two describe levels.\n// Name of the unit under test\ndescribe(\"Course Service\", (() => {\n    // a \"when...\" sentence\n    describe(\"When a student tries to create a course\", (() => {\n        // a \"should...\" sentence\n        it(\"should fail\", async () => {\n            ...\n        });\n    });\n});Isolation\nEach test should be able to run alone, as well as together with any other tests. To ensure this, it is important that the test does not depend on any preexisting data.\n\nEach test should generate the data it needs, and ensure that its data is deleted afterwards. (this is usually done via mocha's \"afterEach\" function.\nWhen you create objects with fields that have to be globally unique, like the account username, you must ensure the name you choose is unique. This can be done by including a timestamp.\nNever use seeddata.\n\nTest Structure\nYour test should be structured in three seperate areas, each distinguished by at least an empty line:\n\nArrange - set up your testdata\nAct - call the function you want to test\nAssert - check the result\n\nthis is known as the AAA-pattern.\nTesting Samples\nHandling of function return values\nWhen assigning a value to an expect, separate the function call from the expectation to simplify debugging. This later helps when you not know about the return value type or if it's an promise or not. This is good style not only for tests.\n    // doSomethingCrazy : retValue\n    it('bad sample', () => {\n        expect(doSomethingCrazy(x,y,z)).to...\n    })\n    it('good sample', () => {\n        const result = doSomethingCrazy(x,y,z)\n        expect(result).to... // here we can simply debug\n    })\nPromises and Timouts in tests\nWhen using asynchronous functions and/opr promises, results must be awaited within of an async test function instead of using promise chains. While for expexting error conditions it might be helpful to use catch for extracting a value from an expected error, in every case avoid writing long promise chains.\n\nInstead of using done callback, use async test functions.\nUse await instead of (long) promise chains\nnever manually set a timeout\n\n    // doSomethingCrazy : Promise\n    it('bad async sample', async function (done) => {\n        this.timeout(10000);\n        return doSomethingCrazy(x,y,z).then(result=>{\n            expect(result).to...\n            done() // expected done\n        }).catch(()=>{\n            logger.info(`Could not ... ${error}`);\n            done() // unexpected done, test will always succeed which is wrong\n        })\n    })\n    it('good async sample', async () => {\n        // no timeout set\n        const result = await doSomethingCrazy(x,y,z)\n        expect(result).to...\n    })\nTimeouts must not be used, when async handling is correctly defined!\n\nExpecting errors in tests\nWhen expecting an error, you might take values from an error, test for the error type thrown and must care of promises.\n    // doSomethingCrazy : Promise\n    it('bad async sample expecting an error', () => {\n        expect(doSomethingCrazy(x,y,z)).to...\n    })\n    it('good async sample expecting an error value', async () => {\n        const code = await doSomethingCrazy(x,y,z).catch(err => err.code)\n        expect(code).to...\n    })\n    it('good sample expecting an error type from a sync function', () => {\n        expect(() => doSomethingCrazySync(wrong, param)).toThrow(BadRequestException);\n    })\n    it('good sample expecting an error type from an async function', async () => {\n        await expect(doSomethingCrazySync(wrong, param)).rejects.toThrow(BadRequestException);\n    })Testing Utilities\nNestJS:\n\nprovides default tooling (such as test runner that builds an isolated module/application loader)\nprovides integration with Jest and Supertest out of the box\nmakes the Nest dependency injection system available in the testing environment for mocking components\n\nThe @nestjs/testing.Test class provides an execution context that mocks the full Nest runtime, but gives\nhooks that can help to manage class instances, including mocking and overriding.\nThe method Test.createTestingModule() takes module metadata as argument it returns TestingModule instance.\nThe TestingModule instance provides method compile() which bootstraps a module with its dependencies.\nEvery provider can be overwritten with custom provider implementation for testing purposes.\n  beforeAll(async () => {\n      const moduleRef = await Test.createTestingModule({\n          controllers: [SampleController],\n          providers: [SampleService],\n        }).compile();\n\n      sampleService = moduleRef.get(SampleService);\n      sampleController = moduleRef.get(CatsController);\n    });Unit Tests vs Integration Tests\nIn Unit Tests we access directly only the layer which is currently testing.\nOther layers should be mocked or are replaced with default testing implementation.\nEspecially the database access and database calls should be mocked.\nIn contrast to unit tests the integration tests use access to the database and execute\nreal queries using repositories.\nRepo Tests\nFor the data access layer, integration tests can be used to check the repositories base functionality against a database.\nFor Queries care DRY principle, they should be tested very carefully.\n\nUse a in-memory database for testing to allow parallel test execution and have isolated execution of tests.\n\n\nA test must define the before and after state of the data set clearly and cleanup the database after execution to the before state.\n\n\nInstead of using predefined data sets, all preconditions should be defined in code through fixtures.\n\nOur repository layer uses mikro-orm/EntityManager to execute the queries.\nBy testing repositories we want to verify the correct behaviour of the repository functions.\nIt includes verifying expected database state after executed repository function.\nTherefore, the *.repo.integration.spec.js should be used.\nThe basic structure of the repo integration test:\nPreconditions (beforeAll):\n\nCreate Nest JS testing module:\n1.1 with MongoMemoryDatabaseModule defining entities which are used in tests. This will wrap MikroOrmModule.forRoot() with running a MongoDB in memory.\n1.2 provide the repo which should be tested\nGet repo, orm and entityManager from testing module\n\n    import { MongoMemoryDatabaseModule } from '@src/modules/database';\n\n    let repo: NewsRepo;\n    let em: EntityManager;\n    let testModule: TestingModule;\n\n    beforeAll(async () => {\n        testModule: TestingModule = await Test.createTestingModule({    (1)\n             imports: [\n                     MongoMemoryDatabaseModule.forRoot({                 (1.1)\n                    entities: [News, CourseNews, ...],\n                }),\n              ],\n             providers: [NewsRepo],                                     (1.2)\n      }).compile();\n      repo = testModule.get(NewsRepo);                                  (2)\n      orm = testModule.get(MikroORM);\n      em = testModule.get(EntityManager);\n    })Post conditions (afterAll), Teardown\nAfter all tests are executed close the app and orm to release the resources by closing the test module.\n    afterAll(async () => {\n        await testModule.close();\n    });\nWhen Jest reports open handles that not have been closed, ensure all Promises are awaited and all application parts started are correctly closed.\n\nMapping Tests\nMapping tests are Unit Tests which verify the correct mapping between entities and Dto objects.\nThese tests should not have any external dependencies to other layers like database or use cases.\nUse Case Tests\nUse case tests are Unit Tests which verify the business logic of the application.\nThe database calls are mocked and spyied. So we can check how and with which parameters the repo functions are called.\n\nUse unit-tests to ensure a use-cases logic matches the given requirements (from a [user-]story).\n\n\nA unit test should cover preconditions, allowed input, the result, and expected exceptions defined by the story, and roughly what happens on malformed input (the execution should stop).\n\nPreconditions\n\nCreate Nest JS testing module\nUse Repo as provider reimplement the repo functions with some default implementations\nProvide other dependencies like AuthorizationService and provide default implementation for the function, which are called.\nGet repo and uc from testing module\n\n      const module: TestingModule = await Test.createTestingModule({ (1)\n            imports: [LoggerModule],\n            providers: [\n                NewsUc,\n                {\n                    provide: NewsRepo,                                  (2)\n                    useValue: {\n                        save() {\n                            ...\n                        },\n                        findAll() {\n                            ...\n                        },\n                    },\n                },\n                {\n                    provide: AuthorizationService,                      (3)\n                    useValue: {\n                        getPermittedEntities(userId, targetModel, permissions) {\n                            ...\n                        },\n                    },\n                },\n            ],\n        }).compile();\n\n        service = module.get(NewsUc);                                    (4)\n        repo = module.get(NewsRepo);Test\n\nSpy repo function which is called inside the tested use case\nCall the tested function\nVerify that the repo spy is called with the expected functions\n\n        it('should search for news by empty scope ', async () => {\n            const findAllSpy = jest.spyOn(repo, 'findAll');             (1)\n            await service.findAllForUser(userId, scope, pagination);    (2)\n            const expectedParams = [targets, false, pagination];\n            expect(findAllSpy).toHaveBeenCalledWith(...expectedParams); (3)\n        });Testing expected error\n\nExecute the function with the expected exception in expect context than define how and with which exception\nthe function should be rejected\n\n\nDon't forget to add 'await' before expect, otherwise the test will be executed successfully regardless assertions\nand throw an error in log after the test execution.\n\n        it('should throw not found exception if news was not found', async () => {\n            const anotherNewsId = new ObjectId().toHexString();\n            await expect(service.findOneByIdForUser(anotherNewsId, userId)).rejects.toThrow(NotFoundException);  (1)\n        });E2E Tests\nUnlike unit testing, which focuses on individual modules, end-to-end testing covers the interaction between classes and\nmodules at a more aggregate level. Automated end-to-end tests help us to ensure that the overall behavior of the system is correct.\nController Tests\nTo test the setup behind a controller, use e2e-tests to ensure, use cases and repositories below\nare correctly mounted and available at a specific path.\n\nA controller unit test should ensure it responds with the correct data-format and a referenced use-case is called correctly.\n\n\nAuthentication and response codes can be unit tested.\n\n\nDo not test logic (from the business layer or repository) in e2e-tests, this must be done where the logic is defined within of a unit test. A e2e test should only ensure everything is correctly initialized.\n\n\nDo not put logic (beside statements, transactions, mapping) inside a controller, use the logic layer instead.\n\n\nMappers must be unit tested.\n\nPreconditions\n\nCreate Nest testing module\nImport ServerModule as the whole\nOverride authentication using JwAuthGuard\n3.1 Override authorized user with the mocked user data\nOverride other services for example for authorization\nCreate and initialize the whole Nest Application using createNestApplication()\nGet Orm and Entity Manager from module\n\n\n    beforeAll(async () => {\n        const module: TestingModule = await Test.createTestingModule({  (1)\n            imports: [ServerModule],                                    (2)\n        })\n            .overrideGuard(JwtAuthGuard)                                (3)\n            .useValue({\n                canActivate(context: ExecutionContext) {\n                    const req: Request = context.switchToHttp().getRequest();\n                    req.user = {                                        (3.1)\n                            userId: '0000d224816abba584714c9c',\n                            roles: [],\n                            schoolId: '5f2987e020834114b8efd6f8',\n                            accountId: '0000d225816abba584714c9d',\n                    };\n                    return true;\n                },\n            })\n            .overrideProvider(AuthorizationService)                     (4)\n            .useValue({\n                checkEntityPermissions() {},\n                getEntityPermissions() {\n                    return ['NEWS_VIEW', 'NEWS_EDIT'];\n                },\n            })\n            .compile();\n\n        app = module.createNestApplication();                           (5)\n        await app.init();\n        orm = module.get(MikroORM);                                     (6)\n        em = module.get(EntityManager);\n    });Clean up\nAfter Each test delete the created data in test to have a clean database for the next test.\n    afterEach(async () => {\n        await em.nativeDelete(News, {});\n    });Post Conditions\nAfter all tests are executed close the app and orm to release the resources\n    afterAll(async () => {\n        await app.close();\n        await orm.close();\n    });Test\nAn example e2e test uses app http server to call the tested url.\nThe request() function from the supertest library simulates HTTP request.\nThe response can be verified by checking the response code or by applying some verification to the result object.\n    describe('GET /news', () => {\n      it('should get empty response if there is no news', async () => {\n        const response = await request(app.getHttpServer()).get(`/news`).expect(200);\n        const {data, total} = response.body as NewsListResponse;\n        expect(total).toBe(0);\n        expect(data.length).toBe(0);\n      });\n    });\nDon't forget to test HTTP error codes as well\n\nReferences\nThis guide is inspired by https://github.com/goldbergyoni/javascript-testing-best-practices/\n        it('should throw not found error, if news doesnt exists', async () => {\n            const newsId = new ObjectId().toHexString();\n            await request(app.getHttpServer()).delete(`/news/${newsId}`).expect(404);\n        });\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/decisions.html":{"url":"additional-documentation/nestjs-application/decisions.html","title":"additional-page - Decisions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDecisions\nArchitecture decisions\nSOLID\nSolution: NestJS\nTypeScript\nSolution: Use in schulcloud-server, extend strong typing over the api via openAPI and use it in nuxt-client.\nMikro-ORM\nTypescript Support\n\nstrong typed entities\nprovide meta data through:\nclasses\ndecorators (on classes, properties)MongoDB Support\n\n\n\nfull Support for MongoDB\n(as opposed to e.g. TypeORM, Prisma)\n\nUnit of Work\n\nimplicit transactions\nmanaged entities / references\ncollect changes\nem.flush()\n\nIdentity Map\n\nalways get the same instance of one entity\ngood for:\noptimizations\ncaching\ncomparison by identity\n\n\nrequest scope in web applications\n\nDatabase agnostic\n\ncan be used with different databases (SQL/NoSQL)\n\nRelation mapping\n\n1:n, 1:1, m:n\nforeign collection relations\nembedded relations (MongoDB)\n\nPreloading\n\nnested structures can be preloaded via populate\n\nMisc\n\nuse serialized mongo-id\n\nIssues\n\nno join queries in MongoDB\nno populate in queries over relations\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/vscode.html":{"url":"additional-documentation/nestjs-application/vscode.html","title":"additional-page - VSCode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVSCode\nLaunch scripts\nIn the file ./vscode/launch.default.json you find following actions:\n\nAttach to NestJS will allow to attach VSCode debugger to an already running application\nDeubg NestJS via NPM will start the application and attach the debugger\n\nSettings\nIn the file ./vscode/settings.default.json find suggested settings.\nRecommended extensions\nSee ./vscode/extensions.json for recommendations.\nJest\nJest is used to care of unit- and end2end tests on all *.spec.ts files.\n Allows to just see failing tests in Problems tab.\n and get small icons like ✔️ or a cross beside it-definitions inside of test files.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/git.html":{"url":"additional-documentation/nestjs-application/git.html","title":"additional-page - Git","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGit\nWindows\nWe strongly recommend to let git translate line endings. Please set git config --global --add core.autocrlf input when working with windows.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
