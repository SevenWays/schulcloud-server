var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AdminIdAndToken.html",[0,0.534,1,4.047]],["body/interfaces/AdminIdAndToken.html",[0,0.491,1,6.53,2,0.867,3,0.049,4,0.04,5,0.03,6,2.248,7,2.367,8,0.127,9,0.518,10,1.759,11,6.944,12,1.005,13,0.214,14,0.005,15,0.116,16,4.895,17,1.711,18,0.894,19,0.53,20,2.367,21,2.248,22,0.084,23,3.535,24,3.022,25,3.379,26,3.379,27,3.379,28,3.379,29,6.026,30,1.921,31,0.112,32,2.367,33,0.63,34,2.212,35,2.61,36,2.518,37,0.806,38,3.591,39,2.148,40,1.492,41,2.518,42,2.518,43,4.009,44,4.084,45,3.674,46,3.867,47,4.084,48,4.823,49,7.01,50,6.026,51,4.895,52,2.367,53,2.518,54,2.544,55,2.518,56,2.367,57,2.518,58,2.518,59,2.518,60,3.327,61,2.518,62,2.518,63,4.895,64,2.518,65,2.518,66,2.518,67,2.518,68,2.367,69,0.602,70,2.518,71,1.51,72,1.331,73,5.922,74,2.777,75,2.518,76,3.454,77,2.677,78,1.405,79,2.518,80,6.704,81,2.518,82,2.255,83,2.518,84,1.711,85,2.518,86,2.518,87,2.518,88,2.518,89,2.518,90,2.518,91,2.518,92,2.518,93,6.704,94,6.704,95,2.518,96,2.518,97,2.518,98,2.518,99,2.518,100,2.518,101,2.518,102,2.518,103,2.518,104,2.518,105,2.518,106,2.518,107,2.518,108,2.518,109,2.518,110,3.96,111,3.96,112,2.346,113,2.518,114,0.475,115,2.518,116,2.518,117,2.518,118,3.865,119,4.603,120,2.518,121,1.807,122,2.367,123,0.96,124,2.518,125,2.518,126,2.518,127,4.235,128,1.364,129,2.131,130,3.96,131,2.518,132,3.96,133,3.96,134,2.518,135,2.518,136,2.518,137,4.895,138,3.865,139,3.619,140,3.865,141,2.518,142,3.724,143,3.591,144,3.724,145,1.283,146,4.176,147,4.895,148,3.084,149,1.332,150,4.895,151,4.895,152,4.895,153,2.518,154,2.518,155,2.518,156,2.518,157,6.035,158,4.895,159,4.895,160,4.895,161,2.518,162,3.96,163,3.96,164,2.518,165,2.518,166,2.518,167,2.518,168,1.286,169,2.518,170,3.96,171,3.724,172,0.002,173,0.002]],["title/classes/ApiValidationError.html",[31,0.122,174,3.672]],["body/classes/ApiValidationError.html",[3,0.099,4,0.082,5,0.061,8,0.26,9,0.865,12,0.834,13,0.328,14,0.004,15,0.193,19,1.081,22,0.088,30,5.042,31,0.146,33,1.654,34,2.867,37,1.642,69,1.227,71,3.272,84,4.492,114,0.498,172,0.003,173,0.003,174,5.637,175,1.409,176,7.936,177,6.164,178,7.03,179,3.762,180,5.577,181,2.979,182,1.475,183,7.308,184,7.308,185,6.164,186,6.889,187,0.804,188,6.164,189,0.865,190,0.513,191,7.891,192,5.14,193,5.542,194,5.542,195,5.542,196,5.542,197,5.542,198,5.542,199,1.458,200,5.542,201,3.917,202,4.826,203,5.542,204,5.132,205,1.983,206,5.132,207,3.998,208,4.612,209,4.582,210,4.826,211,2.867,212,5.542]],["title/classes/ApiValidationErrorResponse.html",[31,0.122,213,4.304]],["body/classes/ApiValidationErrorResponse.html",[3,0.103,4,0.086,5,0.063,8,0.27,9,0.886,13,0.286,14,0.005,15,0.218,22,0.091,31,0.151,33,1.695,34,2.977,38,4.38,69,1.275,78,1.141,84,4.602,114,0.517,128,1.514,149,1.494,172,0.003,173,0.003,174,7.043,175,1.463,179,3.854,181,2.76,187,0.646,189,0.898,190,0.533,191,8.033,201,5.677,207,4.096,208,5.854,210,5.013,213,6.77,214,8.935,215,6.402,216,1.626,217,5.546,218,5.345,219,5.463,220,8.13,221,6.402,222,7.439,223,6.402,224,5.013,225,5.756,226,6.402,227,6.402,228,6.402,229,6.402,230,8.13,231,8.13,232,6.402,233,8.13,234,6.402]],["title/interfaces/AppendedAttachment.html",[0,0.534,235,3.398]],["body/interfaces/AppendedAttachment.html",[0,1.056,2,1.969,3,0.11,4,0.092,5,0.067,8,0.289,9,0.926,12,1.013,14,0.004,22,0.098,33,2.065,114,0.554,172,0.004,173,0.004,235,6.064,236,4.683,237,6.336,238,6.756,239,4.683,240,4.683,241,5.584,242,4.683,243,4.683,244,4.683,245,6.064,246,4.513,247,4.683,248,5.584,249,5.794,250,5.794,251,5.584,252,4.808,253,4.513,254,4.683,255,4.683,256,4.683]],["title/modules/AuthModule.html",[257,1.377,258,3.526]],["body/modules/AuthModule.html",[3,0.108,4,0.09,5,0.066,14,0.005,15,0.251,19,1.175,22,0.095,31,0.158,172,0.003,173,0.003,257,2.229,258,7.199,259,2.589,260,3.684,261,6.023,262,6.023,263,6.023,264,6.593,265,7.854,266,7.456,267,5.677,268,4.127,269,3.116,270,2.85,271,6.699,272,3.5,273,3.684,274,8.366,275,5.245,276,6.699,277,6.023,278,5.578,279,3.526,280,6.699,281,4.98,282,5.578,283,6.699,284,6.023,285,6.699]],["title/modules/AuthorizationModule.html",[257,1.377,286,3.526]],["body/modules/AuthorizationModule.html",[3,0.112,4,0.093,5,0.068,14,0.004,15,0.236,19,1.222,22,0.099,31,0.165,172,0.004,173,0.004,257,2.284,259,2.692,260,3.775,268,4.229,269,3.24,270,2.964,272,3.586,273,3.775,286,7.205,287,6.263,288,6.263,289,6.263,290,6.263,291,7.194,292,6.974,293,7.194,294,6.966,295,4.229,296,6.263,297,6.966,298,3.943,299,6.263]],["title/injectables/AuthorizationService.html",[18,0.972,292,3.398]],["body/injectables/AuthorizationService.html",[3,0.074,4,0.062,5,0.046,8,0.195,12,0.858,13,0.264,14,0.005,15,0.185,18,1.231,19,0.814,22,0.066,31,0.11,40,4.455,69,0.923,74,2.696,76,3.354,77,2.435,78,0.919,114,0.666,128,1.398,129,2.558,145,2.132,148,1.973,149,0.852,172,0.003,173,0.003,182,1.217,187,0.655,189,1.157,190,0.687,199,1.598,292,4.305,293,6.414,298,2.625,299,4.17,300,1.596,301,4.639,302,6.826,303,5.889,304,7.592,305,4.639,306,4.639,307,4.639,308,3.338,309,5.183,310,5.028,311,6.082,312,4.706,313,4.639,314,4.161,315,6.549,316,1.53,317,4.869,318,6.549,319,4.639,320,4.155,321,4.17,322,4.639,323,2.585,324,5.128,325,5.889,326,4.305,327,5.128,328,1.137,329,1.879,330,4.543,331,4.652,332,4.639,333,4.639,334,3.862,335,4.639,336,4.639,337,4.639,338,6.549,339,4.639,340,4.639,341,4.639,342,6.549,343,4.639,344,4.639]],["title/entities/BaseEntity.html",[316,0.876,345,3.284]],["body/entities/BaseEntity.html",[3,0.105,4,0.087,5,0.064,8,0.275,9,0.983,10,1.996,12,0.857,13,0.264,14,0.005,15,0.201,22,0.117,31,0.213,149,1.656,172,0.003,173,0.003,179,3.095,187,0.654,316,1.604,323,2.046,345,5.728,346,5.869,347,6.725,348,5.358,349,2.085,350,8.511,351,6.528,352,8.511,353,6.528,354,2.862,355,1.995,356,1.849,357,2.926,358,5.111,359,5.435,360,2.955,361,5.435,362,5.435,363,5.869,364,4.453,365,3.794,366,5.869,367,3.36,368,5.111,369,4.148,370,2.377,371,3.695,372,2.687,373,5.869,374,5.869,375,5.869,376,4.637,377,3.794,378,5.111,379,5.435,380,3.436,381,2.825,382,5.869,383,3.36]],["title/entities/BaseEntityWithTimestamps.html",[316,0.876,360,1.856]],["body/entities/BaseEntityWithTimestamps.html",[3,0.1,4,0.083,5,0.061,8,0.261,9,0.959,10,1.958,12,0.836,13,0.255,14,0.005,15,0.194,22,0.114,31,0.208,149,1.765,172,0.003,173,0.003,179,2.938,187,0.738,316,1.574,323,1.942,345,5.061,346,5.573,347,6.597,348,5.257,349,2.222,350,8.35,352,8.35,354,2.949,355,1.93,356,1.756,357,2.779,358,4.853,359,5.161,360,3.159,361,5.161,362,5.161,363,5.573,364,4.228,365,3.602,366,5.573,367,3.191,368,4.853,369,3.938,370,2.257,371,3.508,372,2.551,373,5.573,374,5.573,375,5.573,376,4.403,377,3.602,378,4.853,379,5.161,380,4.632,381,3.011,382,5.573,383,4.53,384,6.198,385,2.401,386,2.529,387,6.198,388,6.198,389,6.198,390,6.198]],["title/classes/BaseFactory.html",[31,0.122,391,3.672]],["body/classes/BaseFactory.html",[0,0.489,3,0.048,4,0.04,5,0.03,8,0.127,9,0.724,10,1.619,12,0.557,13,0.308,14,0.005,15,0.115,22,0.043,31,0.071,37,2.141,43,2.674,44,2.725,45,3.362,46,2.58,47,2.725,48,2.551,54,2.049,69,1.166,71,2.11,78,1.168,114,0.691,128,1.582,139,4.727,149,1.67,168,2.015,172,0.002,173,0.002,175,0.687,182,0.88,187,0.722,189,1.348,190,0.713,199,1.734,211,2.203,216,1.688,316,1.652,320,3.642,323,2.083,329,1.218,330,3.983,347,2.136,348,1.702,367,3.721,385,2.315,386,2.551,391,3.364,392,3.007,393,7.386,394,2.551,395,4.94,396,4.736,397,5.442,398,7.015,399,3.52,400,5.676,401,3.52,402,3.52,403,3.364,404,2.197,405,4.805,406,4.94,407,6.228,408,5.98,409,3.007,410,3.58,411,4.736,412,6.188,413,2.235,414,4.355,415,3.007,416,4.201,417,4.593,418,4.091,419,4.45,420,2.438,421,5.374,422,2.235,423,1.797,424,2.136,425,5.485,426,2.235,427,2.235,428,3.52,429,6.854,430,3.007,431,3.788,432,2.827,433,3.52,434,3.007,435,3.52,436,3.007,437,3.113,438,2.235,439,6.098,440,3.007,441,2.235,442,4.94,443,4.94,444,3.007,445,5.972,446,3.52,447,3.52,448,3.007,449,4.721,450,3.007,451,3.52,452,3.007,453,3.52,454,3.501,455,3.007,456,2.355,457,1.977,458,4.258,459,3.708,460,3.805,461,3.007,462,3.007,463,3.007,464,3.007,465,3.007,466,3.007,467,4.736,468,3.007,469,3.007,470,1.258,471,5.858,472,3.007,473,7.678,474,5.858,475,3.007,476,3.007,477,3.007,478,3.007,479,4.258,480,3.007,481,3.007,482,3.007,483,3.007,484,3.007]],["title/entities/BaseFile.html",[316,0.876,485,3.526]],["body/entities/BaseFile.html",[0,0.609,3,0.095,4,0.079,5,0.076,8,0.248,9,0.841,12,0.866,13,0.303,14,0.005,15,0.222,22,0.13,31,0.203,33,1.792,123,2.449,145,1.989,172,0.003,173,0.003,187,0.683,190,0.759,205,1.898,316,1.545,323,1.849,349,1.988,354,3.219,355,1.43,356,1.671,360,2.769,381,2.693,485,6.217,486,4.62,487,4.239,488,6.776,489,7.137,490,5.901,491,5.901,492,2.583,493,5.901,494,2.39,495,2.213,496,5.497,497,4.62,498,2.554,499,5.735,500,5.48,501,5.48,502,3.322,503,4.33,504,3.633,505,4.06,506,4.902,507,3.879,508,2.937,509,4.62,510,2.246,511,4.62,512,1.924,513,4.62,514,4.62,515,4.62,516,4.62,517,4.62,518,4.62,519,4.62,520,4.62,521,4.62,522,3.633,523,3.34]],["title/injectables/BaseRepo.html",[18,0.972,524,3.526]],["body/injectables/BaseRepo.html",[3,0.078,4,0.065,5,0.048,8,0.205,13,0.312,14,0.005,15,0.19,18,1.273,19,0.853,22,0.069,31,0.115,69,0.968,71,1.544,74,2.869,77,2.661,78,1.286,114,0.786,128,1.147,129,2.603,168,3.583,172,0.003,173,0.003,182,1.258,187,0.784,189,1.366,190,0.811,199,1.79,300,1.674,316,1.553,323,2.639,328,1.192,345,3.09,355,1.178,357,2.18,425,6.188,524,4.618,525,4.863,526,6.594,527,4.302,528,5.301,529,5.301,530,4.809,531,3.563,532,5.301,533,5.301,534,5.301,535,2.906,536,4.432,537,4.863,538,3.34,539,4.863,540,4.809,541,4.863,542,5.301,543,4.863,544,5.301,545,4.863,546,4.809,547,4.863,548,5.301,549,4.863,550,5.301,551,4.863,552,5.301,553,4.863,554,5.301,555,4.863,556,3.808,557,4.863,558,4.863,559,7.012,560,6.77,561,6.77,562,6.77,563,7.788,564,7.788,565,4.863,566,6.77]],["title/interfaces/Board.html",[0,0.534,567,3.398]],["body/interfaces/Board.html",[0,0.495,2,1.374,3,0.077,4,0.064,5,0.047,8,0.202,9,0.73,12,0.935,13,0.3,14,0.005,15,0.188,18,1.26,19,0.841,22,0.11,31,0.158,35,2.686,69,0.954,71,2.453,74,1.341,76,2.372,77,1.293,78,1.362,82,3.967,123,2.657,128,1.7,129,2.272,145,1.991,149,1.231,172,0.003,173,0.003,181,2.989,267,4.374,279,2.523,308,2.519,328,1.175,370,2.814,492,3.136,508,2.551,567,6.157,568,3.991,569,4.533,570,4.86,571,6.007,572,6.968,573,2.897,574,3.621,575,5.595,576,4.618,577,5.08,578,5.247,579,6.025,580,3.991,581,4.309,582,3.004,583,3.404,584,4.309,585,3.753,586,4.309,587,6.051,588,4.309,589,6.025,590,4.309,591,5.152,592,4.309,593,4.309,594,8.204,595,4.309,596,4.309,597,4.309,598,5.247,599,5.247,600,4.91,601,6.025,602,4.309,603,4.309,604,4.309,605,4.309,606,4.309,607,4.309,608,4.309,609,6.434,610,4.309,611,3.991,612,3.991,613,4.309,614,3.991,615,5.58,616,3.991]],["title/classes/BoardElementResponse.html",[31,0.122,617,3.842]],["body/classes/BoardElementResponse.html",[3,0.085,4,0.07,5,0.052,8,0.222,9,0.779,10,1.836,12,0.952,13,0.321,14,0.005,15,0.198,22,0.116,31,0.192,40,4.005,69,1.734,82,3.849,114,0.703,172,0.003,173,0.003,175,1.203,181,2.956,187,0.645,189,0.738,190,0.438,216,2.44,349,1.653,354,1.671,370,1.917,380,4.273,381,2.729,383,4.179,567,6.425,569,4.483,570,4.48,571,5.537,574,3.769,582,4.306,591,3.241,617,7.141,618,4.383,619,2.905,620,5.264,621,6.474,622,4.155,623,4.483,624,5.264,625,5.953,626,5.264,627,4.194,628,4.834,629,1.837,630,6.186,631,2.597,632,5.079,633,4.383,634,4.122,635,2.448,636,2.496,637,3.591,638,3.591,639,3.345,640,3.059,641,3.059,642,3.739,643,3.913,644,3.241,645,3.345,646,3.913,647,5.079,648,4.383,649,2.403,650,3.46,651,4.383,652,3.913,653,4.122,654,2.597,655,2.71,656,2.71,657,2.771,658,3.739,659,3.46]],["title/injectables/BoardMapper.html",[18,0.972,660,3.842]],["body/injectables/BoardMapper.html",[3,0.098,4,0.082,5,0.06,8,0.257,10,1.288,13,0.253,14,0.005,15,0.233,18,1.483,19,1.071,22,0.087,31,0.144,78,1.107,82,3.74,114,0.637,128,1.711,149,1.605,172,0.003,173,0.003,181,2.073,182,1.466,187,0.485,189,0.857,190,0.508,199,1.122,300,2.102,328,1.497,380,3.215,383,3.144,567,6.438,569,3.144,570,4.354,571,4.166,573,2.505,574,3.414,582,2.738,617,6.865,621,5.864,647,6.561,660,5.864,661,6.107,662,4.857,663,7.889,664,6.107,665,5.491,666,5.085,667,5.085,668,6.107,669,6.107,670,6.107,671,6.107,672,6.107,673,6.107,674,7.889,675,6.107,676,7.889,677,6.107,678,6.107,679,6.107,680,6.107,681,6.107,682,6.107,683,6.107,684,6.107,685,6.107,686,6.107,687,6.107,688,6.107,689,6.107,690,6.107,691,6.107,692,6.107,693,6.177,694,6.107,695,6.107,696,6.107]],["title/classes/BoardResponse.html",[31,0.122,647,3.672]],["body/classes/BoardResponse.html",[3,0.08,4,0.067,5,0.049,8,0.211,9,0.753,10,1.887,12,0.96,13,0.321,14,0.005,15,0.193,22,0.113,31,0.187,40,3.903,69,1.698,82,3.751,114,0.688,172,0.003,173,0.004,175,1.145,181,3.218,187,0.711,189,0.703,190,0.417,216,2.454,349,1.973,354,2.194,370,1.824,380,4.164,381,2.673,383,4.072,567,6.524,569,4.762,570,4.938,571,6.104,574,2.991,582,3.823,591,4.255,617,6.652,618,4.171,619,2.765,621,5.881,622,4.598,623,3.557,625,4.171,627,4.16,628,4.762,629,1.748,630,6.059,631,2.472,632,4.909,633,4.171,634,3.923,635,2.33,636,2.375,637,3.417,638,3.417,639,3.183,640,2.912,641,2.912,642,3.559,643,3.724,644,3.084,645,3.183,646,3.724,647,6.357,648,4.171,649,2.287,650,3.293,651,4.171,652,5.137,653,5.411,654,3.41,655,3.557,656,3.557,657,3.638,658,4.909,659,4.543,697,5.01,698,5.01,699,3.293,700,1.773,701,5.01,702,5.01,703,5.01]],["title/classes/BoardTaskResponse.html",[31,0.122,621,3.842]],["body/classes/BoardTaskResponse.html",[3,0.075,4,0.062,5,0.046,8,0.196,9,0.717,10,1.907,12,0.963,13,0.329,14,0.005,15,0.186,22,0.109,31,0.18,40,3.244,69,1.646,82,4.133,114,0.73,172,0.003,173,0.003,175,1.066,181,2.807,187,0.786,189,0.654,190,0.823,216,2.451,349,2.262,354,1.481,370,1.699,380,4.589,381,2.974,383,4.487,567,5.946,569,4.656,570,4.203,571,5.194,574,2.846,582,3.707,591,2.872,617,6.147,618,3.884,619,2.574,621,6.724,623,3.385,625,3.884,627,4.218,628,4.967,629,1.628,630,5.874,631,2.301,632,5.409,633,3.884,634,3.652,635,2.169,636,2.211,637,3.182,638,3.182,639,2.964,640,4.426,641,4.426,642,5.409,643,3.467,644,2.872,645,2.964,646,3.467,647,4.671,648,3.884,649,2.129,650,3.066,651,3.884,652,3.467,653,3.652,654,2.301,655,2.401,656,2.401,657,2.455,658,3.314,659,3.066,704,4.665,705,4.665,706,5.912,707,4.665,708,4.665,709,4.665,710,4.665,711,4.665,712,4.665,713,4.194,714,4.665,715,4.665,716,4.665]],["title/classes/BoardTaskStatusMapper.html",[31,0.122,667,4.304]],["body/classes/BoardTaskStatusMapper.html",[3,0.118,4,0.098,5,0.072,8,0.31,13,0.236,14,0.004,15,0.216,22,0.105,31,0.174,78,1.031,82,3.485,114,0.593,128,1.246,149,1.351,172,0.004,173,0.004,175,1.681,182,1.646,187,0.584,189,1.031,190,0.612,199,1.351,328,1.803,404,3.565,632,6.753,634,5.757,662,5.453,665,6.61,667,7.375,717,8.858,718,7.352,719,7.964,720,6.487,721,7.352,722,3.768,723,7.352]],["title/classes/BoardTaskStatusResponse.html",[31,0.122,632,3.672]],["body/classes/BoardTaskStatusResponse.html",[3,0.102,4,0.085,5,0.063,8,0.269,9,0.884,13,0.317,14,0.005,15,0.155,22,0.091,31,0.151,37,2.639,69,1.615,114,0.515,172,0.003,173,0.003,175,1.458,187,0.787,189,0.895,190,0.531,349,2.241,492,3.143,619,3.519,627,4.293,629,2.226,632,6.884,724,10.064,725,6.377,726,6.61,727,6.61,728,6.37,729,6.884,730,6.884,731,6.377,732,6.377,733,6.377,734,6.377,735,6.377,736,6.377,737,5.734,738,5.734,739,5.734,740,4.53,741,5.734]],["title/injectables/BsonConverter.html",[18,0.972,742,3.672]],["body/injectables/BsonConverter.html",[3,0.097,4,0.081,5,0.059,8,0.254,13,0.251,14,0.005,15,0.191,18,1.471,19,1.058,22,0.086,31,0.142,78,1.097,114,0.631,128,1.326,172,0.003,173,0.003,182,1.454,187,0.622,189,1.097,190,0.651,199,1.689,216,1.987,300,2.075,330,3.639,742,5.558,743,6.029,744,6.514,745,6.514,746,7.824,747,6.029,748,7.824,749,7.633,750,6.529,751,7.154,752,10.071,753,7.096,754,8.264,755,7.653,756,6.2,757,9.191,758,7.824,759,6.029,760,7.824,761,6.126,762,6.657,763,6.029,764,6.126,765,6.029]],["title/classes/BusinessError.html",[31,0.122,178,3.526]],["body/classes/BusinessError.html",[3,0.086,4,0.072,5,0.053,8,0.226,9,0.79,12,0.898,13,0.33,14,0.005,15,0.2,19,0.943,22,0.077,30,6.137,31,0.194,33,1.511,37,1.932,69,1.444,71,3.3,78,1.017,84,4.971,114,0.434,149,0.987,172,0.003,173,0.003,175,1.229,178,4.946,179,4.718,180,6.137,181,3.208,182,1.348,183,7.313,184,7.313,187,0.78,189,0.754,190,0.447,199,1.332,201,5.214,202,6.877,205,1.729,208,3.124,209,6.099,216,1.365,219,5.105,432,2.287,505,4.319,619,2.966,643,3.996,649,3.31,766,5.375,767,4.946,768,4.607,769,5.39,770,4.334,771,4.946,772,5.151,773,3.732,774,7.313,775,6.877,776,7.251,777,5.375,778,5.375,779,5.375,780,5.375,781,5.375,782,5.375,783,5.375,784,5.375,785,5.375,786,3.818,787,5.375,788,4.833,789,7.251,790,7.251,791,7.251,792,5.375]],["title/modules/ConsoleWriterModule.html",[257,1.377,793,3.842]],["body/modules/ConsoleWriterModule.html",[3,0.119,4,0.099,5,0.073,14,0.004,15,0.216,19,1.296,22,0.105,31,0.174,172,0.004,173,0.004,257,2.367,259,2.854,260,3.911,268,4.382,269,3.435,270,3.142,272,3.716,295,4.382,793,7.719,794,6.64,795,6.64,796,6.64,797,7.024,798,6.64,799,5.49,800,7.385,801,4.18,802,6.149]],["title/injectables/ConsoleWriterService.html",[18,0.972,797,3.398]],["body/injectables/ConsoleWriterService.html",[3,0.148,4,0.092,5,0.068,8,0.291,9,0.929,12,0.879,13,0.273,14,0.004,15,0.225,18,1.603,19,1.212,22,0.098,31,0.163,35,2.652,114,0.558,168,3.628,172,0.004,173,0.004,182,1.585,187,0.678,189,0.969,190,0.575,199,1.269,300,2.378,385,2.083,386,2.193,431,3.408,797,5.606,798,8.317,799,6.876,801,4.826,803,6.908,804,9.659,805,8.527,806,6.908,807,4.712,808,8.527,809,9.25,810,6.908,811,3.34,812,9.25,813,6.908,814,3.722,815,6.908,816,6.908]],["title/modules/CoreModule.html",[257,1.377,817,3.526]],["body/modules/CoreModule.html",[3,0.103,4,0.086,5,0.063,14,0.004,15,0.237,19,1.13,22,0.092,31,0.152,34,4.167,172,0.003,173,0.003,208,3.742,216,1.636,257,2.51,259,2.488,260,3.594,268,4.026,269,2.995,270,2.739,273,3.594,773,4.2,817,7.161,818,5.789,819,5.789,820,7.382,821,7.382,822,6.113,823,7.382,824,6.439,825,5.797,826,8.16,827,5.566,828,6.39,829,6.39,830,8.16,831,5.185,832,6.39,833,5.797,834,8.16,835,5.024,836,6.066,837,7.337,838,8.16,839,6.39,840,3.644,841,4.392]],["title/entities/Course.html",[316,0.876,573,1.641]],["body/entities/Course.html",[0,0.445,3,0.069,4,0.058,5,0.042,8,0.356,9,0.869,12,0.913,13,0.298,14,0.005,15,0.215,22,0.089,31,0.102,33,0.898,37,1.148,69,0.858,78,0.871,114,0.75,128,1.053,145,1.741,149,1.618,172,0.003,173,0.003,187,0.752,190,0.664,205,1.386,216,2.148,316,1.053,323,1.35,349,2.19,354,3.052,355,1.044,356,1.22,360,2.23,370,2.262,381,2.761,385,2.855,386,2.797,417,2.737,492,1.442,494,1.744,495,1.615,498,1.864,502,1.665,508,1.64,510,3.538,512,1.404,538,2.125,573,1.972,636,2.042,657,4.78,700,3.118,831,2.737,842,3.586,843,3.486,844,6.245,845,5.559,846,6.898,847,6.898,848,5.44,849,5.585,850,4.307,851,5.585,852,4.307,853,5.585,854,4.307,855,3.947,856,3.129,857,4.307,858,4.307,859,4.438,860,5.423,861,4.864,862,4.307,863,5.585,864,4.307,865,5.585,866,4.307,867,3.373,868,4.307,869,4.307,870,2.17,871,4.084,872,3.202,873,2.831,874,3.373,875,2.438,876,2.503,877,4.864,878,3.947,879,4.413,880,3.873,881,3.373,882,3.873,883,2.938,884,3.873,885,3.873,886,3.586,887,3.202,888,3.202,889,3.06,890,3.873,891,2.938,892,3.586,893,3.373,894,3.202,895,1.744,896,2.438,897,2.377,898,3.873,899,3.428,900,5.585,901,3.873,902,2.737,903,2.737,904,3.373,905,3.373,906,3.873,907,3.873,908,3.873,909,3.873,910,5.585,911,3.873,912,5.585,913,5.705,914,5.585,915,3.373,916,3.873,917,3.873,918,4.084]],["title/controllers/CourseController.html",[919,2.163,920,4.304]],["body/controllers/CourseController.html",[3,0.101,4,0.084,5,0.062,8,0.266,13,0.202,14,0.005,15,0.248,19,1.108,22,0.09,31,0.149,71,2.005,74,2.484,77,2.174,78,0.886,114,0.51,128,1.585,129,1.857,149,1.16,172,0.003,173,0.003,182,1.498,187,0.502,189,0.886,190,0.526,199,1.16,328,1.549,329,2.558,349,1.461,629,2.204,631,3.116,722,2.687,896,4.563,919,2.643,920,6.712,921,2.831,922,6.316,923,3.775,924,7.983,925,5.679,926,5.038,927,6.524,928,6.316,929,5.758,930,3.749,931,4.152,932,4.013,933,4.152,934,6.6,935,5.679,936,4.946,937,5.259,938,6.316,939,6.316,940,4.152,941,6.316,942,4.449,943,6.316,944,6.316,945,6.316,946,6.316,947,4.343,948,4.061,949,4.343,950,6.316]],["title/classes/CourseFactory.html",[31,0.122,951,4.047]],["body/classes/CourseFactory.html",[3,0.065,4,0.054,5,0.04,8,0.171,9,0.647,10,1.483,12,0.564,13,0.317,14,0.005,15,0.189,22,0.058,31,0.096,33,1.238,37,2.064,45,2.485,54,1.753,69,0.806,71,1.886,78,0.987,114,0.753,128,1.461,149,1.091,168,1.723,172,0.002,173,0.002,175,0.926,182,1.104,187,0.78,189,1.363,190,0.761,192,4.946,199,1.679,211,1.883,216,2.096,316,1.398,320,2.992,323,1.861,328,0.993,367,3.621,385,2.121,386,2.46,391,7.033,393,6.973,395,3.01,397,5.479,398,5.759,399,4.415,400,5.626,401,4.415,402,4.415,403,4.219,404,2.227,405,4.946,406,5.229,407,6.624,408,5.627,410,3.2,412,4.415,413,3.01,414,4.415,416,4.088,417,4.469,418,4.385,419,4.33,420,3.057,421,4.415,422,3.01,423,2.42,424,2.877,425,4.795,426,3.01,427,3.01,428,3.01,429,7.143,431,3.47,432,3.296,433,3.01,435,3.01,437,2.662,438,3.01,439,5.881,441,3.01,442,4.415,443,4.415,445,3.01,446,3.01,447,3.01,449,4.219,451,3.01,453,3.01,454,3.55,456,3.171,573,2.233,657,2.132,843,3.341,848,5.285,877,3.171,918,5.093,951,5.508,952,3.641,953,7.748,954,3.171,955,4.05,956,4.05,957,3.171,958,3.171,959,3.171,960,3.171,961,3.171,962,3.171,963,3.171,964,3.171,965,3.171,966,3.171,967,3.641,968,4.05,969,3.171,970,6.324,971,3.641,972,4.946,973,3.641,974,4.651,975,4.946,976,3.641,977,3.641,978,3.641,979,3.641,980,3.641]],["title/entities/CourseGroup.html",[316,0.876,981,3.398]],["body/entities/CourseGroup.html",[0,0.666,3,0.104,4,0.086,5,0.063,8,0.272,9,0.89,13,0.287,14,0.005,15,0.237,22,0.116,31,0.152,33,1.345,78,0.905,145,1.783,149,1.501,172,0.003,173,0.003,187,0.649,205,2.075,316,1.385,323,2.022,348,4.624,349,1.889,355,1.98,356,1.827,357,2.892,360,2.933,385,1.945,386,2.048,494,2.613,495,2.419,498,2.792,502,2.493,510,3.588,512,2.103,573,3.242,700,2.892,845,6.196,859,4.116,860,5.03,861,6.397,870,3.25,895,2.613,904,5.052,905,5.052,981,5.371,982,5.801,983,4.624,984,4.883,985,6.452,986,6.452,987,3.321,988,6.803,989,5.372,990,4.241,991,4.241,992,5.801,993,5.801]],["title/injectables/CourseGroupRepo.html",[18,0.972,994,4.647]],["body/injectables/CourseGroupRepo.html",[3,0.11,4,0.092,5,0.068,8,0.29,13,0.273,14,0.005,15,0.225,18,1.599,19,1.207,22,0.098,31,0.163,69,1.37,71,2.184,74,2.583,77,2.294,78,0.965,114,0.687,128,1.166,129,2.023,172,0.004,173,0.004,182,1.581,187,0.676,189,1.193,190,0.708,199,1.264,300,2.368,308,3.144,328,1.687,329,2.786,355,1.667,357,3.084,535,4.112,536,5.077,538,4.196,573,2.184,981,4.522,989,7.082,994,7.647,995,6.88,996,8.506,997,6.88,998,8.506,999,6.88,1000,5.802,1001,4.112,1002,4.814,1003,6.88]],["title/classes/CourseMapper.html",[31,0.122,937,4.304]],["body/classes/CourseMapper.html",[3,0.116,4,0.097,5,0.071,8,0.304,13,0.232,14,0.004,15,0.214,22,0.103,31,0.171,78,1.013,114,0.583,128,1.485,149,1.327,172,0.004,173,0.004,175,1.651,182,1.629,187,0.574,189,1.013,190,0.601,199,1.327,328,1.771,404,3.538,573,3.19,722,3.729,937,7.297,1004,7.224,1005,8.764,1006,8.764,1007,7.224,1008,7.681,1009,4.928,1010,7.224,1011,7.224,1012,7.224,1013,7.224,1014,7.224,1015,7.224,1016,7.224,1017,7.224]],["title/classes/CourseMetadataListResponse.html",[31,0.122,936,4.047]],["body/classes/CourseMetadataListResponse.html",[3,0.085,4,0.071,5,0.052,8,0.224,9,0.784,10,1.843,12,0.915,13,0.302,14,0.005,15,0.199,22,0.103,31,0.17,33,1.5,37,2.766,69,1.433,114,0.429,172,0.003,173,0.003,175,1.215,181,3.101,187,0.726,189,0.746,190,0.76,192,4.5,216,2.392,308,2.346,328,1.303,349,2.022,381,2.951,432,3.061,569,4.199,573,2.59,627,4.032,629,1.855,631,2.622,635,2.472,649,2.426,650,3.494,654,2.622,655,2.736,656,2.736,657,2.797,699,5.747,700,1.881,844,6.388,848,5.565,913,4.161,915,4.161,936,5.634,942,5.042,947,5.073,948,4.744,1008,7.541,1018,4.778,1019,5.929,1020,3.822,1021,4.73,1022,5.315,1023,5.315,1024,4.161,1025,4.161,1026,4.161,1027,5.184,1028,3.951,1029,4.948,1030,5.225,1031,3.951,1032,3.377,1033,3.494,1034,4.425,1035,3.775,1036,3.494,1037,3.494]],["title/classes/CourseMetadataResponse.html",[31,0.122,1008,4.047]],["body/classes/CourseMetadataResponse.html",[3,0.08,4,0.067,5,0.049,8,0.211,9,0.752,10,2.036,12,0.987,13,0.31,14,0.005,15,0.193,22,0.098,31,0.163,33,1.043,37,2.107,69,1.374,114,0.404,172,0.003,173,0.003,175,1.143,181,3.402,187,0.753,189,0.702,190,0.744,216,2.349,308,2.779,328,1.226,349,2.139,381,3.209,432,2.937,569,4.878,573,2.936,622,5.374,627,3.975,629,1.746,631,2.468,635,2.326,649,2.283,650,3.288,654,3.406,655,3.554,656,3.554,657,3.634,844,7.421,848,6.464,913,3.917,915,3.917,936,3.917,942,2.761,947,3.719,948,3.478,1008,7.003,1018,4.497,1019,4.25,1020,2.888,1021,3.288,1027,6.022,1028,3.718,1029,5.466,1030,5.772,1031,5.132,1032,4.387,1033,4.538,1034,5.748,1035,4.904,1036,3.288,1037,3.288,1038,3.917,1039,5.002,1040,5.002,1041,5.002,1042,5.002,1043,5.002,1044,5.002,1045,5.002]],["title/entities/CourseNews.html",[316,0.876,1046,3.284]],["body/entities/CourseNews.html",[0,0.466,3,0.072,4,0.1,5,0.044,8,0.19,9,0.7,10,0.951,12,0.91,13,0.276,14,0.005,15,0.229,22,0.123,31,0.193,33,1.698,43,3.414,44,3.478,45,3.129,46,3.293,47,3.478,48,4.028,78,0.633,114,0.518,123,1.433,145,1.879,149,1.374,172,0.003,173,0.003,181,2.538,187,0.359,205,1.452,308,2.656,309,4.104,310,3.849,312,2.023,316,1.459,323,1.414,331,3.205,349,1.044,354,2.923,355,1.093,356,1.278,360,2.306,367,3.849,372,3.078,381,2.013,404,1.692,460,2.375,487,3.478,494,1.827,495,1.692,498,1.953,502,2.482,504,2.778,505,3.381,506,4.751,510,2.846,512,1.471,523,2.554,573,2.374,582,3.352,644,2.778,649,2.06,843,3.453,855,4.081,856,2.273,875,2.554,876,2.623,903,2.867,983,3.635,987,2.323,1046,4.081,1047,3.354,1048,4.63,1049,4.512,1050,2.879,1051,3.235,1052,3.354,1053,4.751,1054,3.354,1055,5.312,1056,3.46,1057,4.774,1058,3.839,1059,4.081,1060,4.222,1061,4.916,1062,4.467,1063,3.078,1064,3.354,1065,4.081,1066,3.354,1067,3.354,1068,2.49,1069,3.078,1070,3.205,1071,2.182,1072,3.078,1073,2.867,1074,3.205,1075,3.46,1076,2.867,1077,3.354,1078,2.966,1079,3.354,1080,3.078,1081,3.354,1082,2.778,1083,3.354,1084,3.354,1085,3.354,1086,3.354,1087,3.078,1088,3.354,1089,3.078,1090,3.354,1091,3.354,1092,4.774,1093,4.469,1094,3.354,1095,4.774,1096,3.354,1097,3.354,1098,2.966,1099,2.966,1100,3.354]],["title/injectables/CourseRepo.html",[18,0.972,576,3.089]],["body/injectables/CourseRepo.html",[3,0.072,4,0.06,5,0.044,8,0.188,10,0.94,13,0.286,14,0.005,15,0.209,18,1.197,19,0.782,22,0.064,31,0.15,33,0.929,69,0.887,71,1.415,72,3.568,74,2.671,76,3.561,77,2.404,78,1.287,114,0.654,128,1.726,129,2.184,149,1.489,172,0.003,173,0.003,182,1.183,187,0.644,189,1.137,190,0.674,199,1.365,300,1.534,308,3.32,328,1.093,329,1.805,355,1.543,356,1.263,357,1.998,381,1.397,410,3.43,432,3.16,492,1.493,508,1.697,535,2.664,536,4.265,538,3.141,573,2.358,576,3.805,587,6.344,600,4.719,728,5.326,845,2.93,846,4.985,847,4.985,848,4.343,893,4.985,894,5.521,896,4.586,948,2.246,984,3.805,1001,2.664,1002,4.586,1101,4.008,1102,5.725,1103,4.458,1104,4.008,1105,5.326,1106,4.458,1107,5.725,1108,4.458,1109,5.725,1110,4.458,1111,4.985,1112,4.145,1113,7.811,1114,4.008,1115,5.725,1116,6.023,1117,4.008,1118,4.008,1119,4.046,1120,5.725,1121,2.664,1122,5.725,1123,3.712,1124,4.008,1125,3.712,1126,5.725,1127,4.008,1128,4.008,1129,2.46,1130,3.604,1131,5.725,1132,3.712,1133,3.712,1134,3.712,1135,3.167,1136,5.725,1137,5.816,1138,3.167,1139,4.008,1140,4.008,1141,4.008,1142,4.008]],["title/classes/CourseScope.html",[31,0.122,1113,4.304]],["body/classes/CourseScope.html",[3,0.069,4,0.058,5,0.042,8,0.182,9,0.678,10,0.909,13,0.282,14,0.005,15,0.206,18,1.169,19,0.757,22,0.061,31,0.147,33,1.296,35,2.288,71,1.369,72,2.738,74,2.04,76,3.483,77,1.967,78,1.274,114,0.644,128,1.718,129,2.144,149,1.466,168,1.835,172,0.003,173,0.003,175,0.986,182,1.156,187,0.722,189,1.119,190,0.664,192,3.753,199,1.554,308,3.262,328,1.057,329,1.747,355,1.507,356,1.221,357,1.933,381,1.352,385,1.3,386,1.369,492,1.444,508,1.642,536,3.273,538,2.128,573,2.315,576,2.578,587,6.249,600,2.74,728,5.246,845,2.835,846,4.869,847,4.869,848,4.241,894,3.206,896,4.517,930,2.006,948,2.173,984,3.716,1001,2.578,1002,4.517,1101,3.878,1105,4.087,1107,3.878,1109,3.878,1111,4.869,1112,4.472,1113,8.267,1114,5.591,1115,5.591,1116,5.932,1117,5.591,1118,7.175,1119,3.951,1120,5.591,1121,2.578,1122,5.591,1123,3.591,1124,5.591,1125,3.591,1126,5.591,1127,3.878,1128,3.878,1129,2.38,1130,3.519,1131,5.591,1132,3.591,1133,3.591,1134,3.591,1135,3.064,1136,5.591,1137,5.709,1138,3.064,1139,3.878,1140,3.878,1141,3.878,1142,3.878,1143,4.622,1144,4.622,1145,6.218,1146,6.218,1147,6.218,1148,4.622,1149,3.064,1150,3.377,1151,4.793,1152,3.377,1153,4.313,1154,4.313,1155,4.313,1156,4.313,1157,3.206,1158,4.417,1159,3.377]],["title/injectables/CourseUc.html",[18,0.972,934,3.842]],["body/injectables/CourseUc.html",[3,0.109,4,0.091,5,0.067,8,0.286,13,0.271,14,0.005,15,0.234,18,1.587,19,1.192,22,0.097,31,0.161,69,1.353,71,2.157,72,4.229,76,2.405,77,2.276,78,0.953,114,0.681,172,0.004,173,0.004,182,1.569,187,0.671,189,1.184,190,0.703,199,1.248,279,3.577,300,2.339,308,3.131,328,1.666,329,2.752,383,3.498,432,2.891,573,2.157,576,6.016,631,3.352,927,6.102,934,6.274,1001,4.061,1129,3.75,1130,3.846,1160,6.795,1161,8.441,1162,5.658,1163,6.795,1164,8.441,1165,6.795,1166,4.467,1167,6.795,1168,5.321]],["title/classes/CreateNewsParams.html",[31,0.122,1169,3.842]],["body/classes/CreateNewsParams.html",[3,0.089,4,0.074,5,0.054,8,0.233,9,0.806,10,1.56,12,0.939,13,0.297,14,0.004,15,0.203,22,0.079,31,0.175,40,3.649,128,0.938,172,0.003,173,0.003,175,1.266,181,3.145,187,0.736,190,0.616,216,2.512,309,4.196,310,4.287,311,5.128,316,1.714,328,1.357,349,2.142,381,2.318,582,4.152,627,3.813,628,3.807,629,1.932,654,2.731,655,3.807,656,3.807,722,3.147,1048,4.298,1050,2.482,1056,4.487,1062,4.574,1119,4.7,1169,5.498,1170,8.569,1171,4.61,1172,6.158,1173,4.553,1174,6.158,1175,4.978,1176,5.536,1177,4.862,1178,4.7,1179,5.791,1180,5.498,1181,6.158,1182,5.045,1183,5.536,1184,5.536,1185,5.648,1186,5.536,1187,5.536,1188,6.191,1189,5.791,1190,4.7,1191,5.536,1192,5.536,1193,6.65,1194,5.254,1195,6.318,1196,2.789,1197,3.933]],["title/controllers/DashboardController.html",[919,2.163,1198,4.304]],["body/controllers/DashboardController.html",[3,0.083,4,0.069,5,0.051,8,0.217,12,0.887,13,0.257,14,0.005,15,0.237,19,0.905,22,0.074,31,0.122,37,2.487,71,1.638,74,2.76,77,2.517,78,1.127,114,0.648,127,5.104,128,1.582,129,2.362,143,4.652,172,0.003,173,0.003,182,1.31,187,0.638,189,1.127,190,0.669,199,1.476,328,1.265,329,2.089,330,2.399,349,1.858,405,4.804,629,1.8,631,2.545,645,3.277,722,4.065,919,2.158,921,2.312,923,3.083,924,6.339,925,4.637,926,5.377,929,6.203,930,2.399,931,3.391,932,3.277,933,3.391,940,3.391,1198,5.87,1199,5.158,1200,4.545,1201,7.223,1202,8.033,1203,5.158,1204,5.158,1205,6.761,1206,7.05,1207,5.158,1208,8.392,1209,5.158,1210,5.161,1211,7.19,1212,7.05,1213,5.158,1214,4.294,1215,5.281,1216,5.971,1217,4.637,1218,4.294,1219,5.158,1220,5.158,1221,5.158,1222,5.158,1223,5.158,1224,8.033,1225,5.52,1226,5.158,1227,5.158,1228,5.158,1229,5.241,1230,5.158,1231,5.158,1232,5.158,1233,4.637]],["title/classes/DashboardEntity.html",[31,0.122,1234,3.284]],["body/classes/DashboardEntity.html",[0,0.248,3,0.039,4,0.032,5,0.024,8,0.271,9,0.431,10,1.673,12,0.862,13,0.304,14,0.005,15,0.123,19,0.421,22,0.109,31,0.093,35,2.868,37,2.491,69,0.478,76,2.065,78,1.383,114,0.69,128,1.663,143,3.143,148,2.142,149,1.407,168,3.761,172,0.002,173,0.002,175,0.549,181,2.488,182,0.734,187,0.754,189,1.199,190,0.711,199,1.667,308,2.882,386,1.255,404,2.188,460,2.65,470,2.441,492,1.953,512,0.783,569,2.034,570,2.181,635,2.999,649,2.663,652,1.785,700,2.065,871,6.53,872,1.785,873,2.598,897,1.326,949,3.143,1027,2.511,1029,3.925,1030,5.003,1038,3.094,1071,2.434,1078,2.598,1082,1.479,1201,3.553,1210,3.486,1234,2.511,1235,1.785,1236,4.192,1237,3.952,1238,4.857,1239,3.952,1240,3.952,1241,4.857,1242,4.568,1243,5.774,1244,3.952,1245,4.857,1246,3.952,1247,3.952,1248,3.952,1249,3.952,1250,3.952,1251,3.952,1252,4.568,1253,2.402,1254,2.402,1255,3.434,1256,2.402,1257,2.402,1258,2.402,1259,3.29,1260,2.402,1261,2.402,1262,3.29,1263,2.402,1264,3.553,1265,3.29,1266,6.469,1267,2.402,1268,5.028,1269,6.922,1270,2.402,1271,2.402,1272,4.406,1273,2.402,1274,3.29,1275,6.469,1276,2.402,1277,2.402,1278,3.29,1279,2.402,1280,4.568,1281,3.29,1282,2.402,1283,3.29,1284,2.402,1285,3.29,1286,2.402,1287,3.29,1288,2.402,1289,3.29,1290,2.402,1291,2.402,1292,3.29,1293,2.402,1294,1.579,1295,1.881,1296,1.785,1297,3.094,1298,1.638,1299,3.29,1300,2,1301,3.094,1302,3.29,1303,3.29,1304,2,1305,3.29,1306,2,1307,3.29,1308,2,1309,4.097,1310,2.807,1311,6.072,1312,2,1313,1.638,1314,3.29,1315,2,1316,3.29,1317,2,1318,2.712,1319,4.4,1320,2.695,1321,3.29,1322,2,1323,2,1324,2,1325,2,1326,2,1327,3.29,1328,2,1329,3.29,1330,1.881,1331,3.29,1332,2,1333,1.706,1334,3.29,1335,2,1336,2,1337,2,1338,2,1339,1.785,1340,2,1341,3.29,1342,5.369,1343,2,1344,1.579,1345,2,1346,2,1347,2,1348,2,1349,2,1350,2,1351,2,1352,3.094,1353,1.881,1354,2,1355,2,1356,3.29,1357,3.29,1358,1.881,1359,4.192,1360,2,1361,3.29,1362,2,1363,2,1364,2,1365,2,1366,2,1367,2,1368,2,1369,2,1370,2,1371,2,1372,2,1373,2,1374,2,1375,2,1376,2,1377,2,1378,2,1379,2,1380,2,1381,2,1382,2,1383,2,1384,2,1385,2,1386,2,1387,3.29,1388,2,1389,2,1390,2,1391,3.29,1392,2.598,1393,3.29,1394,2,1395,2,1396,2,1397,2,1398,2,1399,2,1400,2,1401,4.192,1402,2,1403,2]],["title/entities/DashboardGridElementModel.html",[316,0.876,1404,3.526]],["body/entities/DashboardGridElementModel.html",[0,0.73,3,0.083,4,0.069,5,0.051,8,0.218,9,0.77,10,1.908,12,0.86,13,0.277,14,0.005,15,0.221,22,0.123,31,0.167,33,1.473,37,2.49,69,1.03,76,2.501,123,2.555,145,1.887,149,1.478,172,0.003,173,0.003,181,3.172,187,0.719,190,0.588,205,2.273,316,1.363,323,1.621,348,2.928,349,2.093,354,3.036,355,1.712,356,1.465,357,2.319,360,2.888,385,1.56,386,1.643,494,2.095,498,2.239,502,2.731,510,3.063,512,1.687,573,2.243,635,3.286,649,2.362,700,2.501,859,4.053,870,2.606,895,2.861,987,2.663,1075,2.787,1200,5.033,1319,4.876,1320,3.529,1404,5.488,1405,4.051,1406,6.945,1407,6.945,1408,5.897,1409,5.532,1410,5.488,1411,5.174,1412,5.532,1413,5.532,1414,5.174,1415,5.174,1416,5.174,1417,5.174,1418,3.401,1419,3.675,1420,4.051,1421,5.252,1422,4.489,1423,4.051,1424,5.532,1425,4.051,1426,4.051,1427,4.051,1428,4.051,1429,4.051,1430,3.846,1431,5.252,1432,4.489,1433,4.051,1434,3.529,1435,4.051,1436,4.051,1437,4.051,1438,4.051,1439,4.051]],["title/interfaces/DashboardGridElementModelProperties.html",[0,0.534,1421,3.842]],["body/interfaces/DashboardGridElementModelProperties.html",[0,0.74,2,1.514,3,0.085,4,0.071,5,0.052,8,0.222,9,0.781,10,2.062,12,0.929,13,0.301,14,0.005,15,0.222,22,0.124,31,0.169,33,1.493,37,2.607,69,1.051,76,2.536,123,2.275,145,1.903,149,1.316,172,0.003,173,0.003,181,3.264,190,0.726,205,2.305,316,1.378,348,2.989,354,2.769,355,1.736,356,1.496,357,2.367,360,2.919,494,2.139,498,2.285,502,2.769,510,2.727,512,1.721,573,2.769,635,3.332,649,2.411,700,1.869,859,3.609,870,2.66,895,2.902,987,2.718,1075,2.845,1200,5.149,1319,5.064,1320,3.602,1404,4.887,1405,4.135,1406,7.147,1407,7.147,1408,5.546,1409,4.135,1410,4.887,1412,4.135,1413,4.135,1418,3.471,1419,3.751,1420,4.135,1421,6.045,1422,5.541,1423,4.135,1424,5.61,1425,4.135,1426,4.135,1427,4.135,1428,4.135,1429,4.135,1430,3.926,1431,5.326,1432,4.552,1433,4.135,1434,3.602,1435,4.135,1436,4.135,1437,4.135,1438,4.135,1439,4.135]],["title/classes/DashboardGridElementResponse.html",[31,0.122,1440,3.842]],["body/classes/DashboardGridElementResponse.html",[3,0.07,4,0.058,5,0.043,8,0.184,9,0.683,10,2.152,12,0.959,13,0.313,14,0.005,15,0.106,22,0.105,31,0.173,37,2.138,69,1.597,114,0.352,143,3.378,172,0.003,173,0.003,175,0.998,181,3.403,187,0.755,189,0.612,190,0.791,216,2.564,316,0.74,320,3.698,349,2.157,569,4.801,570,2.408,619,2.408,622,5.298,627,4.154,629,1.523,635,3.414,645,3.984,649,2.863,650,4.122,654,4.365,655,4.555,656,4.555,657,3.863,699,2.869,700,1.544,1027,5.927,1028,4.661,1029,5.746,1030,6.128,1031,5.456,1065,2.773,1200,3.301,1210,3.748,1268,4.94,1309,5.098,1310,6.037,1432,4.664,1440,6.777,1441,3.634,1442,7.077,1443,6.655,1444,6.655,1445,4.364,1446,4.364,1447,6.318,1448,5.221,1449,4.364,1450,4.364,1451,4.364,1452,4.364,1453,4.364,1454,4.364,1455,4.364,1456,3.634,1457,3.634,1458,3.634,1459,3.634,1460,3.634]],["title/classes/DashboardGridSubElementResponse.html",[31,0.122,1447,3.842]],["body/classes/DashboardGridSubElementResponse.html",[3,0.077,4,0.064,5,0.047,8,0.202,9,0.73,10,2.169,12,0.967,13,0.3,14,0.005,15,0.117,22,0.11,31,0.182,37,1.784,69,1.665,114,0.386,143,2.578,172,0.003,173,0.003,175,1.094,181,3.453,187,0.699,189,0.671,190,0.398,216,2.584,316,0.811,320,3.372,349,1.934,569,4.917,570,2.641,619,2.641,622,4.86,627,4.211,629,1.67,635,3.591,645,4.254,649,3.056,650,4.401,654,4.342,655,4.53,656,4.53,657,4.064,1027,6.07,1028,4.977,1029,5.758,1030,6.115,1031,5.74,1065,3.041,1200,3.524,1210,2.86,1268,4.121,1309,4.254,1310,5.485,1432,4.906,1440,6.217,1441,3.985,1442,6.429,1443,6.046,1444,6.046,1447,6.96,1448,3.985,1456,3.985,1457,3.985,1458,3.985,1459,3.985,1460,3.985,1461,4.786,1462,4.786,1463,4.786,1464,4.786,1465,4.786]],["title/classes/DashboardMapper.html",[31,0.122,1218,4.304]],["body/classes/DashboardMapper.html",[3,0.095,4,0.079,5,0.058,8,0.248,10,1.242,13,0.275,14,0.005,15,0.188,22,0.084,31,0.139,35,2.781,78,1.205,114,0.693,128,1.544,149,1.578,172,0.003,173,0.003,175,1.346,181,2,182,1.432,187,0.682,189,1.205,190,0.715,199,1.578,328,1.444,404,3.801,569,3.032,645,5.788,662,4.744,722,3.875,873,5.988,1009,4.018,1020,2.464,1027,3.743,1200,4.056,1218,6.416,1234,5.788,1242,4.612,1268,3.626,1272,5.788,1432,3.743,1440,6.771,1443,4.612,1444,4.612,1447,6.384,1466,5.89,1467,7.705,1468,7.705,1469,7.705,1470,5.89,1471,7.705,1472,5.89,1473,4.379,1474,7.705,1475,5.89,1476,5.89,1477,5.89,1478,5.89,1479,5.89,1480,5.89,1481,5.89,1482,5.89,1483,5.89,1484,5.89,1485,5.89,1486,5.89,1487,7.705,1488,5.296,1489,5.89,1490,7.705,1491,5.89,1492,5.89,1493,5.89,1494,5.89,1495,5.89]],["title/entities/DashboardModelEntity.html",[316,0.876,1422,3.284]],["body/entities/DashboardModelEntity.html",[0,0.753,3,0.087,4,0.072,5,0.053,8,0.228,9,0.795,10,1.939,12,0.837,13,0.234,14,0.005,15,0.224,22,0.126,31,0.172,33,1.52,37,2.348,69,1.079,76,2.916,123,2.616,145,2.067,149,1.514,172,0.003,173,0.003,181,2.992,187,0.579,205,2.345,316,1.396,323,1.698,348,3.067,349,1.686,354,2.798,355,1.767,356,1.535,357,2.429,360,2.958,385,1.634,386,1.72,494,2.195,498,2.345,502,3.184,510,3.136,512,1.766,573,2.315,635,3.391,649,2.474,700,1.918,859,4.151,870,2.73,895,2.953,987,2.789,1075,3.927,1200,4.985,1319,4.438,1320,3.696,1404,4.973,1405,4.243,1406,6.551,1407,6.551,1408,6.011,1409,4.243,1410,5.62,1412,4.243,1413,4.243,1418,3.562,1419,3.849,1420,4.243,1421,5.42,1422,5.235,1423,4.243,1424,5.709,1425,4.243,1426,4.243,1427,4.243,1428,4.243,1429,4.243,1430,4.028,1431,5.42,1432,5.6,1433,4.243,1434,3.696,1435,4.243,1436,4.243,1437,4.243,1438,5.709,1439,4.243,1496,5.419,1497,5.419]],["title/injectables/DashboardModelMapper.html",[18,0.972,1498,3.672]],["body/injectables/DashboardModelMapper.html",[3,0.055,4,0.046,5,0.033,8,0.144,10,1.101,12,0.324,13,0.3,14,0.005,15,0.155,18,0.981,19,0.598,22,0.049,31,0.081,35,2.686,69,0.679,71,1.082,74,2.874,76,1.206,77,2.668,78,1.345,114,0.745,128,1.703,129,2.818,143,1.836,145,1.385,148,1.45,149,1.306,172,0.002,173,0.002,182,0.97,187,0.734,189,1.295,190,0.769,199,1.668,300,1.173,316,0.885,328,0.836,355,0.826,356,0.965,535,2.037,536,3.742,538,2.575,556,2.669,573,2.825,700,1.206,871,4.673,874,2.669,949,2.812,1029,2.954,1071,2.524,1200,4.931,1210,2.037,1234,5.345,1272,6.026,1280,2.669,1311,5.443,1319,4.128,1330,2.669,1404,5.919,1406,2.534,1407,2.534,1419,2.422,1422,6.091,1430,2.534,1432,2.166,1473,2.534,1498,3.708,1499,3.409,1500,6.344,1501,6.344,1502,5.22,1503,5.22,1504,5.22,1505,5.22,1506,6.344,1507,5.22,1508,5.22,1509,6.344,1510,3.409,1511,3.409,1512,3.409,1513,9.484,1514,3.409,1515,3.409,1516,5.22,1517,3.409,1518,5.22,1519,3.409,1520,6.73,1521,5.22,1522,3.409,1523,5.22,1524,3.409,1525,3.409,1526,3.409,1527,5.22,1528,3.409,1529,5.22,1530,3.409,1531,3.409,1532,3.409,1533,7.663,1534,3.065,1535,5.22,1536,3.409,1537,3.409,1538,3.409,1539,3.409,1540,3.409,1541,3.409,1542,3.409,1543,3.409,1544,3.409,1545,3.409,1546,3.409,1547,3.708,1548,3.409,1549,2.534,1550,3.409,1551,3.409,1552,3.409,1553,3.409,1554,3.409,1555,3.409,1556,3.409,1557,5.044,1558,3.409,1559,5.22,1560,3.409,1561,5.22,1562,3.409,1563,3.409,1564,3.409,1565,5.22,1566,3.409,1567,5.22,1568,3.409,1569,5.22,1570,3.409,1571,3.409,1572,3.409,1573,5.22,1574,5.22,1575,3.409,1576,3.409,1577,3.409,1578,3.409,1579,3.409,1580,3.409,1581,3.409,1582,3.409,1583,3.409,1584,3.409,1585,2.838,1586,5.22,1587,3.065,1588,3.409]],["title/injectables/DashboardRepo.html",[18,0.972,1589,3.842]],["body/injectables/DashboardRepo.html",[0,0.523,3,0.081,4,0.068,5,0.05,8,0.213,10,1.468,13,0.288,14,0.005,15,0.209,18,1.309,19,0.888,22,0.099,31,0.164,69,1.008,71,2.21,74,2.833,76,3.032,77,2.709,78,1.302,114,0.725,128,1.665,129,2.795,145,1.105,149,0.93,172,0.003,173,0.003,182,1.294,187,0.714,189,1.26,190,0.748,199,1.574,211,2.355,300,1.743,308,3.242,316,1.18,328,1.241,348,2.866,355,1.227,357,2.27,370,1.844,397,3.217,505,2.665,524,3.454,527,4.423,530,4.945,535,3.026,536,4.51,538,3.435,540,4.945,546,5.652,556,3.964,897,2.794,1029,2.866,1200,4.885,1234,6.154,1272,4.423,1422,3.217,1498,6.086,1520,5.797,1585,4.216,1589,5.175,1590,4.216,1591,6.259,1592,5.797,1593,5.652,1594,5.063,1595,7.153,1596,5.063,1597,6.624,1598,5.063,1599,5.063,1600,5.063,1601,4.552,1602,4.216,1603,5.797,1604,4.216,1605,4.216,1606,5.451,1607,4.552,1608,6.259,1609,4.552,1610,6.259,1611,4.552,1612,7.153,1613,4.552,1614,6.259,1615,4.552,1616,4.552]],["title/classes/DashboardResponse.html",[31,0.122,645,3.284]],["body/classes/DashboardResponse.html",[3,0.08,4,0.066,5,0.049,8,0.209,9,0.748,10,2.179,12,0.951,13,0.286,14,0.005,15,0.121,22,0.112,31,0.186,37,1.828,69,1.691,114,0.4,143,2.671,172,0.003,173,0.003,175,1.133,181,3.362,187,0.625,189,0.695,190,0.413,216,2.612,316,1.163,320,3.964,349,1.587,569,4.747,570,3.786,619,2.736,622,2.881,627,4.232,629,1.73,635,3.659,645,5.664,649,3.132,650,4.51,654,4.398,655,4.589,656,4.589,657,3.611,699,3.259,700,1.755,1027,5.859,1028,5.1,1029,5.605,1030,5.979,1031,5.1,1065,4.359,1200,4.469,1210,2.963,1268,4.224,1309,4.359,1310,5.589,1432,5.664,1440,6.627,1441,4.128,1442,6.551,1443,6.161,1444,6.161,1447,6.312,1448,4.128,1456,4.128,1457,4.128,1458,4.128,1459,4.128,1460,4.128,1617,4.957,1618,4.957,1619,4.957]],["title/injectables/DashboardUc.html",[18,0.972,1216,3.842]],["body/injectables/DashboardUc.html",[3,0.079,4,0.066,5,0.049,8,0.208,12,0.746,13,0.285,14,0.005,15,0.217,17,2.797,18,1.287,19,0.867,22,0.07,31,0.117,35,2.554,69,1.363,71,2.174,74,2.735,76,3.618,77,2.485,78,1.102,114,0.744,123,1.569,128,1.509,129,2.777,148,2.103,149,0.908,168,2.103,172,0.003,173,0.003,182,1.272,187,0.708,189,1.249,190,0.741,199,1.558,211,2.299,279,2.602,300,1.701,308,3.406,328,1.212,405,4.043,576,5.646,896,2.797,1125,4.115,1130,2.797,1166,3.249,1200,5.068,1208,7.625,1216,5.09,1234,5.388,1266,6.304,1268,4.836,1275,7.022,1294,4.501,1311,3.511,1358,3.87,1589,5.09,1592,5.701,1597,5.701,1606,6.64,1620,4.943,1621,7.856,1622,7.856,1623,6.847,1624,4.943,1625,4.943,1626,4.943,1627,4.943,1628,4.943,1629,4.943,1630,4.943,1631,6.847,1632,4.943,1633,4.444,1634,4.444,1635,3.674,1636,4.943,1637,4.943,1638,4.943,1639,4.444,1640,4.943,1641,7.856,1642,6.847,1643,6.847,1644,4.943,1645,4.943,1646,4.943,1647,4.943,1648,3.87,1649,3.14]],["title/classes/DatabaseManagementConsole.html",[31,0.122,1650,4.047]],["body/classes/DatabaseManagementConsole.html",[0,0.519,3,0.081,4,0.067,5,0.049,8,0.212,12,0.477,13,0.254,14,0.005,15,0.193,22,0.132,31,0.119,35,1.441,69,1,72,4.485,74,2.591,77,2.303,78,0.971,114,0.64,123,1.595,128,1.608,129,2.036,172,0.003,173,0.003,175,1.149,182,1.287,187,0.63,189,1.112,190,0.711,199,1.272,216,2.456,269,3.221,329,2.035,349,1.602,492,1.683,502,3.062,503,2.531,508,3.016,700,3.17,797,5.614,799,3.735,801,4.834,802,4.184,811,2.429,1020,2.898,1557,2.92,1650,5.423,1651,7.679,1652,4.518,1653,6.227,1654,6.925,1655,4.518,1656,6.238,1657,5.025,1658,5.766,1659,6.227,1660,5.766,1661,4.477,1662,6.97,1663,6.349,1664,5.025,1665,6.227,1666,6.349,1667,5.025,1668,6.578,1669,4.184,1670,3.934,1671,3.934,1672,5.405,1673,4.025,1674,7.125,1675,4.919,1676,4.736,1677,5.104,1678,4.025,1679,6.227,1680,6.227,1681,4.518,1682,5.766,1683,6.227,1684,6.227,1685,4.184,1686,3.193,1687,5.423,1688,4.518,1689,4.518]],["title/controllers/DatabaseManagementController.html",[919,2.163,1690,4.304]],["body/controllers/DatabaseManagementController.html",[3,0.099,4,0.083,5,0.061,8,0.261,12,0.934,13,0.255,14,0.005,15,0.194,19,1.085,22,0.088,31,0.146,74,2.921,77,2.731,78,1.302,114,0.642,172,0.003,173,0.003,182,1.478,187,0.738,189,1.116,190,0.662,199,1.705,329,2.506,330,2.877,349,2.146,919,2.589,921,2.773,923,3.698,1653,8.345,1656,5.78,1670,4.844,1671,4.844,1690,6.624,1691,9.601,1692,6.187,1693,6.187,1694,7.955,1695,7.152,1696,9.281,1697,6.187,1698,7.955,1699,6.187,1700,6.899,1701,7.955,1702,6.187,1703,5.563,1704,7.955,1705,6.187,1706,7.955,1707,6.187,1708,4.599,1709,6.187,1710,6.187,1711,6.187,1712,6.187,1713,6.187,1714,6.187,1715,6.187]],["title/modules/DatabaseManagementModule.html",[257,1.377,1716,3.842]],["body/modules/DatabaseManagementModule.html",[3,0.119,4,0.099,5,0.073,14,0.004,15,0.217,19,1.299,22,0.106,31,0.175,172,0.004,173,0.004,257,2.37,259,2.86,260,3.916,268,4.387,269,3.442,270,3.149,273,3.916,295,4.387,1661,3.578,1716,7.722,1717,6.655,1718,6.655,1719,6.655,1720,7.29,1721,6.655,1722,7.402,1723,7.402]],["title/injectables/DatabaseManagementService.html",[18,0.972,1720,3.526]],["body/injectables/DatabaseManagementService.html",[3,0.071,4,0.059,5,0.043,8,0.186,12,0.99,13,0.3,14,0.005,15,0.18,18,1.189,19,0.775,22,0.063,31,0.104,35,2.313,69,0.879,74,2.905,77,2.709,78,1.313,114,0.769,123,2.346,128,1.658,129,2.69,172,0.003,173,0.003,182,1.175,187,0.768,189,1.313,190,0.779,199,1.719,300,1.52,329,1.789,355,1.07,357,1.98,457,2.903,470,3.092,502,3.616,535,2.639,536,4.247,538,3.12,749,4.701,762,5.04,764,5.786,949,3.407,1662,4.493,1695,5.686,1700,6.801,1703,5.686,1720,4.314,1721,8.797,1724,4.416,1725,6.325,1726,5.266,1727,6.325,1728,6.325,1729,6.325,1730,8.068,1731,6.325,1732,4.701,1733,5.824,1734,4.416,1735,6.325,1736,4.416,1737,6.325,1738,4.416,1739,6.325,1740,4.416,1741,6.325,1742,4.416,1743,6.325,1744,4.416,1745,4.416,1746,6.325,1747,4.416,1748,4.416,1749,4.416,1750,4.416,1751,4.416,1752,4.416,1753,7.389,1754,4.416,1755,6.325,1756,4.416,1757,4.416,1758,4.416,1759,4.416,1760,6.325,1761,4.416,1762,4.416,1763,4.416,1764,4.416,1765,6.325,1766,4.416,1767,4.416,1768,4.416,1769,4.416,1770,4.416,1771,4.416]],["title/injectables/DatabaseManagementUc.html",[18,0.972,1656,3.398]],["body/injectables/DatabaseManagementUc.html",[0,0.254,3,0.039,4,0.103,5,0.081,8,0.103,9,0.439,12,0.927,13,0.248,14,0.005,15,0.18,18,0.757,19,0.431,22,0.093,31,0.058,34,1.143,35,2.752,37,1.073,69,0.802,74,2.522,77,2.084,78,1.154,114,0.695,123,0.78,128,1.662,129,2.682,148,1.045,149,0.94,172,0.002,173,0.002,182,0.748,187,0.684,189,1.038,190,0.729,199,1.634,216,1.023,273,1.773,295,1.986,300,0.846,320,2.979,330,3.035,371,1.391,381,1.603,385,0.741,386,0.78,394,4.162,432,2.777,470,1.028,492,2.347,502,3.629,503,4.247,527,1.561,600,2.558,700,0.87,742,5.258,744,2.046,745,2.046,749,5.502,751,4.201,753,1.676,755,3.352,756,1.513,761,5.796,762,2.746,764,4.005,767,2.746,807,4.781,829,4.631,878,2.558,1020,3.346,1033,1.615,1071,1.946,1119,1.561,1121,1.468,1135,1.745,1185,3.758,1318,1.324,1547,2.86,1557,4.648,1656,2.647,1661,4.234,1662,6.55,1663,5.211,1666,5.502,1672,2.746,1673,2.973,1677,3.901,1686,5.082,1687,5.489,1700,5.743,1720,5.049,1726,3.352,1732,2.993,1772,7.58,1773,2.209,1774,4.598,1775,4.026,1776,5.317,1777,4.026,1778,4.026,1779,4.026,1780,4.598,1781,4.026,1782,5.317,1783,2.457,1784,4.98,1785,4.026,1786,3.62,1787,2.457,1788,3.264,1789,5.317,1790,4.924,1791,5.19,1792,5.434,1793,2.457,1794,3.62,1795,3.62,1796,2.457,1797,2.993,1798,3.62,1799,2.457,1800,5.317,1801,3.352,1802,5.211,1803,6.655,1804,3.62,1805,2.457,1806,5.868,1807,2.457,1808,5.868,1809,2.457,1810,3.62,1811,3.352,1812,5.317,1813,3.62,1814,2.457,1815,3.62,1816,3.62,1817,3.888,1818,3.352,1819,2.457,1820,2.457,1821,3.352,1822,1.924,1823,2.046,1824,1.265,1825,1.826,1826,2.046,1827,5.434,1828,5.434,1829,3.352,1830,2.209,1831,2.209,1832,3.62,1833,3.62,1834,3.62,1835,2.209,1836,2.209,1837,2.209,1838,2.209,1839,5.317,1840,2.209,1841,2.209,1842,2.209,1843,2.046,1844,2.209,1845,2.209,1846,2.209,1847,2.046,1848,2.209,1849,5.317,1850,4.259,1851,2.479,1852,2.209,1853,2.209,1854,1.561,1855,1.615,1856,2.209,1857,3.62,1858,3.62,1859,2.209,1860,2.209,1861,2.209,1862,1.468,1863,3.62,1864,2.209,1865,2.209,1866,2.209,1867,3.152,1868,3.62,1869,2.209,1870,3.62,1871,3.62,1872,2.209,1873,2.209,1874,2.34,1875,2.209,1876,2.209,1877,2.046,1878,2.209,1879,1.745,1880,2.046,1881,1.676,1882,1.468,1883,2.209,1884,2.046,1885,2.209,1886,2.209,1887,2.209,1888,2.209,1889,2.209,1890,2.746,1891,2.209,1892,2.209,1893,2.209,1894,2.209,1895,2.209,1896,3.62,1897,2.209,1898,2.209,1899,2.209,1900,2.209,1901,1.391,1902,2.209,1903,2.209,1904,2.209,1905,2.209,1906,2.993,1907,2.209,1908,3.152,1909,2.209,1910,2.209,1911,2.209,1912,2.209]],["title/controllers/DelayController.html",[919,2.163,1913,4.304]],["body/controllers/DelayController.html",[3,0.107,4,0.089,5,0.066,8,0.282,14,0.005,15,0.222,19,1.173,22,0.095,31,0.158,37,1.781,60,4.729,73,5.144,74,2.55,77,2.458,78,1.172,128,1.416,129,1.966,149,1.228,172,0.003,173,0.003,182,1.553,187,0.531,199,1.228,207,3.368,272,2.797,349,1.546,385,2.519,836,6.211,841,5.699,919,3.496,921,3.746,1913,7.589,1914,7.512,1915,6.011,1916,7.95,1917,6.686,1918,6.211,1919,5.03,1920,6.542,1921,5.567,1922,6.011,1923,4.395,1924,6.011,1925,6.957,1926,6.011,1927,6.011,1928,6.686,1929,5.567,1930,3.368,1931,6.011,1932,5.235,1933,3.441,1934,4.395,1935,4.97]],["title/classes/DeleteFilesConsole.html",[31,0.122,1936,4.304]],["body/classes/DeleteFilesConsole.html",[3,0.098,4,0.081,5,0.077,8,0.256,9,0.857,13,0.279,14,0.004,15,0.212,22,0.087,31,0.144,35,2.499,37,2.322,69,1.209,74,2.438,77,2.12,114,0.634,128,1.029,129,1.786,149,1.444,172,0.003,173,0.003,175,1.388,182,1.461,187,0.693,189,1.103,190,0.654,199,1.116,216,2.214,329,2.46,349,1.405,381,1.903,503,4.643,531,4.587,801,5.216,811,2.936,840,5.535,887,6.851,1660,5.057,1668,6.547,1936,6.545,1937,9.217,1938,6.074,1939,7.067,1940,6.074,1941,7.269,1942,7.861,1943,7.861,1944,8.792,1945,7.836,1946,9.217,1947,7.836,1948,8.715,1949,6.074,1950,8.715,1951,3.993,1952,4.143,1953,5.461,1954,6.074,1955,6.074,1956,5.461,1957,6.074,1958,6.074,1959,6.074,1960,3.739]],["title/injectables/DeleteFilesUc.html",[18,0.972,1941,3.842]],["body/injectables/DeleteFilesUc.html",[3,0.095,4,0.079,5,0.076,8,0.25,12,0.564,13,0.248,14,0.005,15,0.21,18,1.455,19,1.041,22,0.085,31,0.14,35,1.701,43,3.534,44,3.6,45,3.239,46,3.409,69,1.181,74,2.411,77,2.088,114,0.625,128,1.548,129,2.533,145,1.69,172,0.003,173,0.003,182,1.439,187,0.615,189,1.086,190,0.644,199,1.09,270,2.524,279,3.123,300,2.042,329,2.403,330,2.759,381,2.7,470,2.482,503,4.773,840,5.602,1939,6.96,1941,5.755,1956,8.212,1961,8.617,1962,5.932,1963,5.932,1964,7.223,1965,5.932,1966,7.741,1967,5.932,1968,7.741,1969,7.605,1970,6.96,1971,5.932,1972,5.932,1973,7.741,1974,5.932,1975,7.741,1976,5.932,1977,7.741,1978,7.748,1979,7.741,1980,5.334,1981,5.334,1982,4.214,1983,5.932,1984,5.932,1985,4.41,1986,4.94,1987,5.932,1988,5.932,1989,7.741,1990,4.94,1991,5.932,1992,4.214]],["title/entities/Directory.html",[316,0.876,507,3.398]],["body/entities/Directory.html",[0,0.652,3,0.101,4,0.084,5,0.079,12,0.889,13,0.258,14,0.005,15,0.228,22,0.133,31,0.21,33,1.851,123,2.559,145,1.938,172,0.003,173,0.003,205,2.032,316,1.585,323,1.979,354,3.137,355,1.531,356,1.789,360,2.894,381,2.526,485,6.056,486,4.946,487,3.749,488,5.992,489,6.312,492,2.115,494,2.558,495,2.369,496,5.616,497,4.946,498,2.734,499,5.992,500,5.726,501,5.726,502,3.431,503,4.473,504,3.889,505,4.243,506,5.122,507,5.299,508,3.069,509,4.946,510,2.404,511,4.946,512,2.059,513,4.946,514,4.946,515,4.946,516,4.946,517,4.946,518,4.946,519,4.946,520,4.946,521,4.946,522,3.889,523,3.575]],["title/injectables/DurationLoggingInterceptor.html",[18,0.972,1993,4.647]],["body/injectables/DurationLoggingInterceptor.html",[3,0.105,4,0.087,5,0.064,8,0.274,9,0.896,13,0.209,14,0.005,15,0.23,18,1.545,19,1.143,21,4.843,22,0.093,31,0.154,35,2.583,45,3.769,71,2.86,78,0.914,114,0.526,128,1.104,149,1.51,172,0.003,173,0.003,182,1.528,187,0.653,189,0.914,190,0.542,199,1.197,216,1.655,300,2.242,385,1.964,386,2.068,423,4.913,833,5.84,840,5.354,841,5.607,897,3.595,1119,4.14,1920,6.437,1951,4.283,1993,7.391,1994,9.007,1995,6.515,1996,8.221,1997,6.437,1998,7.391,1999,7.391,2000,7.407,2001,8.505,2002,6.515,2003,3.786,2004,8.098,2005,8.221,2006,6.515,2007,5.425,2008,6.515,2009,6.515,2010,8.221,2011,6.515,2012,6.515,2013,6.515]],["title/classes/EncryptedStringType.html",[31,0.122,2014,4.047]],["body/classes/EncryptedStringType.html",[3,0.085,4,0.071,5,0.052,8,0.223,9,0.783,12,1,13,0.318,14,0.005,15,0.198,22,0.076,31,0.125,33,1.497,35,2.336,69,1.055,78,1.32,114,0.657,128,1.217,149,1.319,172,0.003,173,0.003,175,1.211,182,1.334,187,0.694,189,1.143,190,0.678,199,1.319,205,1.704,216,1.346,355,1.284,356,1.5,370,1.929,386,2.987,432,2.254,470,3.004,700,3.33,814,2.854,1661,3.471,1890,4.898,2014,5.622,2015,5.298,2016,6.456,2017,6.456,2018,7.323,2019,6.491,2020,8.145,2021,7.18,2022,7.18,2023,7.18,2024,7.18,2025,7.18,2026,6.055,2027,7.18,2028,10.267,2029,5.298,2030,7.18,2031,5.298,2032,3.763,2033,3.483,2034,3.366,2035,4.148,2036,5.298,2037,5.298,2038,7.18,2039,5.298,2040,5.298,2041,7.18,2042,6.377,2043,5.556,2044,6.782,2045,7.18,2046,7.18,2047,5.298,2048,6.456,2049,7.18,2050,5.298]],["title/modules/EncryptionModule.html",[257,1.377,2051,4.047]],["body/modules/EncryptionModule.html",[0,0.74,3,0.115,4,0.096,5,0.07,12,0.681,13,0.23,14,0.005,15,0.212,19,1.257,22,0.124,31,0.169,72,3.154,78,1.005,114,0.578,172,0.004,173,0.004,182,1.331,187,0.569,189,1.005,190,0.596,199,1.316,257,2.504,259,2.768,272,2.996,295,3.533,404,3.269,1933,3.686,1934,4.708,2026,6.986,2051,7.359,2052,6.439,2053,5.324,2054,5.731,2055,8.143,2056,7.162,2057,5.972,2058,6.439,2059,6.439,2060,6.439,2061,6.439]],["title/interfaces/EncryptionModuleOptions.html",[0,0.534,2055,4.304]],["body/interfaces/EncryptionModuleOptions.html",[0,0.751,2,2.085,3,0.117,4,0.097,5,0.071,8,0.306,9,0.959,12,0.899,13,0.233,14,0.005,15,0.214,19,1.276,22,0.125,31,0.172,78,1.02,172,0.004,173,0.004,257,2.521,272,3.042,295,3.588,404,2.727,1933,3.743,1934,4.78,2026,7.033,2051,6.889,2052,6.538,2054,4.78,2055,7.878,2057,5.591,2058,6.538,2059,8.839,2060,6.538,2061,6.538]],["title/modules/ErrorModule.html",[257,1.377,820,3.842]],["body/modules/ErrorModule.html",[3,0.118,4,0.098,5,0.072,14,0.005,15,0.232,19,1.293,22,0.105,31,0.174,172,0.004,173,0.004,216,1.872,257,2.363,259,2.848,272,3.083,326,5.83,385,2.674,811,4.288,820,6.593,835,5.46,839,7.732,1677,5.301,1923,4.844,1933,3.793,2062,7.369,2063,7.974,2064,5.636,2065,6.945,2066,7.369,2067,7.369,2068,5.77]],["title/classes/ErrorResponse.html",[31,0.122,201,3.284]],["body/classes/ErrorResponse.html",[3,0.108,4,0.09,5,0.066,12,0.986,13,0.315,14,0.005,15,0.164,19,1.178,22,0.096,31,0.159,34,4.247,37,2.433,38,4.513,69,1.668,71,3.036,84,5.168,114,0.542,172,0.003,173,0.003,175,1.534,179,4.533,181,3.1,187,0.533,189,0.942,190,0.559,201,5.323,202,5.256,216,2.128,217,6.228,218,5.507,219,4.868,788,6.035,878,5.323,1788,3.705,2069,6.713,2070,6.713,2071,6.713,2072,6.713,2073,6.035,2074,6.713,2075,4.768,2076,6.035,2077,4.579,2078,3.533,2079,4.133,2080,4.99]],["title/injectables/FeathersAuthProvider.html",[18,0.972,293,3.672]],["body/injectables/FeathersAuthProvider.html",[0,0.472,3,0.073,4,0.061,5,0.045,8,0.192,12,0.822,13,0.288,14,0.005,15,0.2,18,1.218,19,0.801,22,0.065,31,0.108,35,2.159,50,3.577,69,0.909,74,2.843,76,3.27,77,2.626,78,1.26,114,0.725,128,1.65,129,2.543,145,2.061,148,1.944,149,0.839,172,0.003,173,0.003,182,1.204,187,0.714,189,1.26,190,0.748,199,1.589,293,4.602,296,4.107,300,1.572,308,3.417,309,4.526,310,4.756,311,5.043,312,3.877,317,4.816,328,1.12,329,1.85,345,4.117,347,3.245,348,4.261,355,1.107,357,2.048,508,1.739,814,4.056,843,1.713,856,4.357,930,2.125,1294,4.259,1918,4.816,1919,2.521,2081,9.24,2082,4.107,2083,6.479,2084,6.769,2085,6.479,2086,6.479,2087,6.769,2088,4.568,2089,6.128,2090,4.568,2091,6.479,2092,4.568,2093,4.107,2094,4.568,2095,6.479,2096,4.568,2097,6.479,2098,4.568,2099,4.568,2100,4.568,2101,6.479,2102,6.479,2103,6.479,2104,4.568,2105,4.568,2106,4.568,2107,6.479,2108,6.479,2109,6.479,2110,4.568,2111,3.396,2112,4.568,2113,4.568,2114,4.568,2115,5.395,2116,4.107,2117,4.568,2118,4.568,2119,2.521]],["title/interfaces/FeathersError.html",[0,0.534,2120,3.842]],["body/interfaces/FeathersError.html",[0,0.78,2,2.166,3,0.121,4,0.101,5,0.074,8,0.318,9,0.981,12,0.981,13,0.334,14,0.004,22,0.108,33,1.876,34,4.187,37,2.562,172,0.004,173,0.004,179,4.72,2120,6.691,2121,7.553,2122,7.553,2123,8.952]],["title/modules/FeathersModule.html",[257,1.377,291,3.672]],["body/modules/FeathersModule.html",[3,0.11,4,0.092,5,0.067,14,0.004,15,0.207,19,1.202,22,0.098,31,0.162,60,4.802,172,0.004,173,0.004,216,1.74,257,2.566,259,3.562,260,3.736,268,4.186,269,3.186,270,2.915,272,3.55,291,7.263,295,4.186,298,5.216,394,4.57,431,4.186,814,4.57,2089,7.22,2124,6.16,2125,6.16,2126,6.16,2127,6.851,2128,5.787,2129,4.931,2130,4.931,2131,4.802,2132,6.027,2133,6.306,2134,6.027,2135,6.027,2136,7.064,2137,6.851]],["title/interfaces/FeathersService.html",[0,0.534,2138,4.304]],["body/interfaces/FeathersService.html",[0,0.548,2,1.522,3,0.085,4,0.071,5,0.052,8,0.223,10,1.516,12,0.83,13,0.28,14,0.005,15,0.213,17,3.003,18,1.351,19,0.931,22,0.125,30,4.567,31,0.125,35,1.522,43,3.281,44,3.343,45,3.007,46,3.165,47,3.343,48,3.872,60,5.168,77,2.356,78,0.744,114,0.58,128,1.218,148,2.258,149,0.975,172,0.003,173,0.003,182,1.336,187,0.648,189,1.008,190,0.598,199,1.321,211,2.468,218,3.488,257,1.414,259,2.051,298,4.614,330,3.791,377,3.084,394,2.858,405,4.845,431,2.618,432,3.058,459,5.628,773,3.7,814,5.275,1112,3.343,1851,3.267,1923,3.488,2089,3.619,2119,2.928,2128,3.619,2129,5.307,2130,3.084,2131,5.168,2132,3.769,2133,3.944,2134,3.769,2135,3.769,2136,4.418,2138,7.275,2139,6.787,2140,4.155,2141,4.945,2142,7.856,2143,5.96,2144,6.463,2145,8.015,2146,5.306,2147,6.463,2148,5.306,2149,4.418,2150,3.619,2151,4.418,2152,5.985,2153,4.418,2154,3.619,2155,4.771,2156,4.771,2157,4.771,2158,6.463,2159,4.771,2160,4.418,2161,4.903,2162,4.418,2163,3.619,2164,4.771,2165,4.771,2166,4.771,2167,4.418,2168,3.769,2169,4.771]],["title/injectables/FeathersServiceProvider.html",[18,0.972,2089,3.526]],["body/injectables/FeathersServiceProvider.html",[0,0.549,3,0.085,4,0.071,5,0.052,8,0.224,10,1.121,12,0.831,13,0.28,14,0.005,15,0.213,17,3.008,18,1.353,19,0.932,22,0.125,30,4.572,31,0.126,35,1.524,43,3.285,44,3.347,45,3.011,46,3.169,47,3.347,48,3.876,60,4.948,69,1.058,77,1.941,78,0.746,114,0.581,128,1.219,148,2.261,149,0.976,172,0.003,173,0.003,182,1.337,187,0.648,189,1.009,190,0.599,199,0.976,211,2.472,216,1.35,218,3.494,257,1.416,259,2.781,298,4.948,300,1.829,330,3.794,377,3.089,394,3.876,405,4.199,431,3.55,459,5.634,773,3.704,814,5.277,1112,3.347,1817,3.494,1851,3.272,1923,3.494,2089,4.908,2119,2.933,2128,4.908,2129,5.081,2130,4.182,2131,5.62,2132,5.112,2133,5.349,2134,5.112,2135,5.112,2136,5.991,2138,7.28,2139,6.793,2140,4.161,2141,3.008,2142,6.47,2143,4.908,2144,4.778,2145,6.793,2147,4.778,2149,4.425,2150,3.625,2151,4.425,2152,5.991,2153,4.425,2154,4.908,2155,4.778,2156,4.778,2157,6.47,2158,6.47,2159,4.778,2160,4.425,2161,4.908,2162,4.425,2163,3.625,2164,4.778,2165,4.778,2166,4.778,2167,4.425,2168,3.775,2169,4.778,2170,7.196,2171,5.315,2172,5.315,2173,5.315]],["title/entities/File.html",[5,0.051,316,0.876]],["body/entities/File.html",[0,0.612,3,0.095,4,0.079,5,0.085,8,0.249,9,0.843,12,0.923,13,0.304,14,0.005,15,0.222,22,0.13,31,0.203,33,1.795,123,2.455,145,1.879,172,0.003,173,0.003,187,0.684,205,1.905,316,1.547,323,1.856,349,1.991,354,3.185,355,1.435,356,1.677,360,2.776,381,2.423,485,5.873,486,4.637,487,3.596,488,5.748,489,6.054,492,1.983,494,2.398,495,2.221,496,5.831,497,4.637,498,2.563,499,5.748,500,6.484,501,6.484,502,3.327,503,4.337,504,3.646,505,4.07,506,4.913,507,3.893,508,2.943,509,6.054,510,2.943,511,6.054,512,1.93,513,4.637,514,4.637,515,4.637,516,4.637,517,4.637,518,4.637,519,4.637,520,4.637,521,4.637,522,3.646,523,3.352,2174,5.922,2175,5.922,2176,5.922]],["title/injectables/FileStorageAdapter.html",[18,0.972,2177,3.842]],["body/injectables/FileStorageAdapter.html",[3,0.106,4,0.089,5,0.1,8,0.279,13,0.213,14,0.005,15,0.221,18,1.563,19,1.164,22,0.095,31,0.157,74,2.541,77,2.242,78,0.93,114,0.535,123,2.64,128,1.539,129,1.95,149,1.527,172,0.003,173,0.003,182,1.545,187,0.527,189,0.93,190,0.552,199,1.218,300,2.283,328,1.626,418,3.754,496,5.278,500,5.906,501,6.451,2177,6.18,2178,5.963,2179,7.475,2180,7.475,2181,6.632,2182,8.165,2183,8.314,2184,5.963,2185,6.632,2186,6.632,2187,7.475,2188,5.963,2189,6.632,2190,6.632,2191,5.522,2192,6.632,2193,6.632,2194,6.632,2195,5.193,2196,6.632,2197,5.193,2198,6.632,2199,6.632,2200,6.632,2201,5.193,2202,6.632]],["title/injectables/FileSystemAdapter.html",[18,0.972,1784,3.672]],["body/injectables/FileSystemAdapter.html",[3,0.057,4,0.047,5,0.094,8,0.149,9,0.586,12,0.99,13,0.282,14,0.005,15,0.19,18,1.012,19,0.622,22,0.051,31,0.084,35,1.864,69,1.294,74,2.785,77,2.549,78,1.152,114,0.689,128,1.391,129,2.293,172,0.002,173,0.002,182,1,187,0.729,189,1.197,190,0.71,199,1.686,216,1.843,300,1.221,330,3.967,372,1.46,503,2.711,507,3.537,582,3.253,658,3.822,750,3.822,786,3.822,807,6.36,878,5.584,1121,4.337,1181,4.48,1557,5.107,1663,4,1672,3.67,1686,6.006,1732,4,1784,3.822,1802,2.637,1817,6.458,1828,6.042,1829,7.317,1843,6.836,1854,5.584,1882,2.12,2043,3.67,2203,7.764,2204,7.764,2205,3.189,2206,7.382,2207,5.381,2208,5.381,2209,5.381,2210,6.501,2211,6.501,2212,5.381,2213,6.501,2214,6.501,2215,5.381,2216,5.381,2217,3.547,2218,5.394,2219,5.381,2220,3.547,2221,3.822,2222,7.256,2223,7.8,2224,5.381,2225,5.381,2226,4.838,2227,3.822,2228,7.256,2229,8.787,2230,5.381,2231,3.547,2232,6.501,2233,3.547,2234,5.381,2235,6.501,2236,3.547,2237,3.537,2238,6.501,2239,6.501,2240,6.524,2241,4.838,2242,5.381,2243,3.547,2244,5.381,2245,4.838,2246,4.213,2247,6.501,2248,3.547,2249,4,2250,3.537,2251,3.822,2252,5.381,2253,3.547,2254,3.547,2255,3.189,2256,4.838,2257,3.547,2258,3.547,2259,4.838,2260,3.547,2261,3.547,2262,3.547,2263,6.501,2264,3.547,2265,3.547,2266,3.547,2267,3.547,2268,3.547,2269,5.381,2270,3.547,2271,3.547,2272,2.778,2273,2.954,2274,3.547,2275,3.547,2276,2.954,2277,3.547]],["title/modules/FileSystemModule.html",[257,1.377,2278,3.842]],["body/modules/FileSystemModule.html",[3,0.119,4,0.099,5,0.087,14,0.004,15,0.216,19,1.296,22,0.105,31,0.174,172,0.004,173,0.004,257,2.367,259,2.854,260,3.911,268,4.382,269,3.435,270,3.142,272,3.716,295,4.382,1784,7.59,2203,6.149,2204,6.149,2278,7.719,2279,6.64,2280,6.64,2281,6.64,2282,7.385,2283,7.385]],["title/modules/FilesModule.html",[257,1.377,2284,3.398]],["body/modules/FilesModule.html",[3,0.108,4,0.09,5,0.066,14,0.005,15,0.245,19,1.18,22,0.096,31,0.159,172,0.003,173,0.003,257,2.235,259,2.599,260,3.693,268,4.138,269,3.128,270,2.862,272,3.509,273,3.693,279,3.54,822,6.181,1936,6.984,1941,7.463,1951,4.422,1952,4.588,1964,7.463,2177,7.463,2284,6.994,2285,6.048,2286,6.726,2287,6.048,2288,7.861,2289,6.726,2290,6.048,2291,6.726,2292,6.726]],["title/injectables/FilesRepo.html",[18,0.972,1964,3.842]],["body/injectables/FilesRepo.html",[3,0.073,4,0.061,5,0.091,8,0.192,9,0.704,13,0.319,14,0.005,15,0.21,18,1.214,19,0.798,22,0.065,31,0.107,33,1.347,69,0.906,71,1.444,74,2.857,77,2.588,78,0.638,114,0.794,128,1.273,129,2.404,168,2.748,172,0.003,173,0.003,182,1.201,187,0.796,189,1.381,190,0.819,192,4.938,199,1.808,300,1.566,316,1.386,323,2.563,328,1.115,329,1.843,355,1.102,357,2.039,381,2.354,385,1.372,386,1.444,397,2.891,425,5.991,485,5.578,488,3.382,496,3.755,503,3.254,524,6.779,526,5.882,527,4.105,528,5.058,529,5.058,530,4.589,531,3.4,532,5.058,533,5.058,534,5.058,536,4.304,538,3.706,540,3.232,542,3.562,544,3.562,546,3.232,548,3.562,550,3.562,552,3.562,554,3.562,1964,4.802,2177,6.67,2179,5.808,2180,5.808,2290,4.09,2293,4.549,2294,6.754,2295,6.46,2296,4.549,2297,4.549,2298,4.549,2299,6.46,2300,4.549,2301,6.46,2302,3.788,2303,3.788,2304,3.788,2305,3.788,2306,3.788,2307,3.788,2308,3.788,2309,3.788,2310,3.788,2311,4.549,2312,4.09,2313,4.549,2314,6.46,2315,3.788,2316,4.549,2317,4.549,2318,4.549,2319,4.802,2320,4.549,2321,4.09,2322,4.549,2323,4.549]],["title/interfaces/GlobalConstants.html",[0,0.534,2324,4.304]],["body/interfaces/GlobalConstants.html",[0,0.746,2,2.072,3,0.116,4,0.097,5,0.071,8,0.304,9,0.955,12,0.998,13,0.302,14,0.004,15,0.176,22,0.103,128,1.485,172,0.004,173,0.004,190,0.817,1661,3.493,2324,7.855,2325,6.495,2326,7.868,2327,7.868,2328,7.868,2329,7.88,2330,7.224,2331,7.88,2332,5.37]],["title/classes/GlobalErrorFilter.html",[31,0.122,2065,4.047]],["body/classes/GlobalErrorFilter.html",[0,0.368,3,0.057,4,0.048,5,0.035,8,0.15,9,0.588,13,0.263,14,0.005,15,0.214,19,0.624,22,0.051,31,0.127,34,4.912,35,1.868,38,5.096,43,2.462,44,2.509,45,2.257,46,2.375,47,1.655,71,2.068,78,1.368,84,3.053,114,0.526,128,1.734,138,2.339,139,2.191,140,2.339,149,1.51,168,2.771,172,0.002,173,0.002,174,5.163,175,0.814,178,4.958,179,3.446,181,2.211,182,1.211,187,0.518,189,0.757,190,0.449,199,1.335,201,5.929,207,1.793,208,3.135,213,2.963,217,2.427,219,3.135,224,2.787,225,3.2,298,3.687,330,2.509,354,1.13,372,1.465,385,1.626,386,1.13,400,3.321,404,2.443,418,3.687,425,4.777,431,1.756,508,1.355,700,1.26,762,5.328,768,3.427,774,6.052,811,2.608,840,4.979,897,2.977,1534,3.2,1549,2.645,1635,2.645,1822,2.787,1867,2.787,1874,3.786,1951,2.339,1982,2.528,1985,5.806,2064,4.963,2065,4.223,2120,5.403,2123,3.2,2130,2.068,2150,2.427,2218,2.645,2319,6.348,2333,6.052,2334,2.787,2335,6.514,2336,5.856,2337,5.839,2338,5.394,2339,3.559,2340,5.394,2341,6.514,2342,7.268,2343,3.559,2344,6.514,2345,3.559,2346,3.2,2347,3.559,2348,3.559,2349,3.2,2350,3.2,2351,3.2,2352,3.2,2353,2.787,2354,3.2,2355,4.443,2356,2.427,2357,3.2,2358,3.2,2359,4.85,2360,3.2,2361,2.963,2362,3.2,2363,3.2,2364,3.2,2365,3.2,2366,3.2,2367,4.491,2368,3.559,2369,3.559,2370,3.2,2371,3.559,2372,3.559,2373,3.559,2374,4.491,2375,3.559,2376,3.559,2377,5.394,2378,3.559,2379,3.559,2380,4.85,2381,2.787,2382,2.963,2383,2.427,2384,2.427,2385,4.85,2386,2.963,2387,4.85,2388,3.2,2389,4.491,2390,4.223,2391,3.2,2392,3.2,2393,3.2,2394,3.2,2395,3.2,2396,3.2,2397,3.2,2398,3.2,2399,3.2,2400,7.023,2401,3.2,2402,7.023,2403,3.2,2404,3.2,2405,3.2,2406,3.559,2407,3.559,2408,3.559,2409,5.394,2410,3.559,2411,3.559]],["title/classes/GlobalValidationPipe.html",[31,0.122,2412,4.304]],["body/classes/GlobalValidationPipe.html",[3,0.101,4,0.084,5,0.062,9,0.686,13,0.284,14,0.005,15,0.196,19,1.104,22,0.09,31,0.209,33,1.676,69,1.765,78,0.883,123,2.965,146,5.712,149,1.156,172,0.003,173,0.003,174,4.47,175,1.438,186,5.978,187,0.5,205,2.024,208,5.428,216,1.598,219,3.657,224,4.927,349,1.86,372,3.31,385,2.425,405,3.239,416,4.674,508,2.395,531,3.312,627,2.59,722,3.771,767,5.485,835,4.951,930,2.927,1020,2.633,1196,4.051,1673,4.674,1676,3.761,1678,3.657,2078,3.312,2161,4.292,2168,4.47,2412,6.696,2413,8.042,2414,6.292,2415,6.297,2416,7.23,2417,6.696,2418,8.863,2419,6.292,2420,5.712,2421,5.239,2422,6.292,2423,4.47,2424,6.292,2425,6.292,2426,6.292,2427,6.292,2428,5.239,2429,4.47,2430,4.47,2431,6.292,2432,4.678,2433,6.292,2434,5.658,2435,5.658,2436,4.927,2437,6.292,2438,6.292,2439,6.292]],["title/classes/GridElement.html",[31,0.122,1311,3.672]],["body/classes/GridElement.html",[0,0.254,3,0.04,4,0.033,5,0.024,8,0.275,9,0.439,10,1.736,12,0.9,13,0.301,14,0.005,15,0.125,19,0.432,22,0.11,31,0.095,35,2.586,37,2.432,69,0.49,76,1.427,78,1.388,114,0.646,128,1.669,143,3.189,148,2.178,149,1.42,168,3.785,172,0.002,173,0.002,175,0.562,181,2.922,182,0.749,187,0.74,189,1.123,190,0.729,199,1.61,308,3.007,385,0.742,386,1.626,404,3.228,410,2.171,460,2.122,470,2.477,492,2.349,512,1.314,569,2.075,570,2.225,635,3.038,649,2.702,700,2.621,871,6.634,872,1.829,873,2.65,897,2.225,949,3.189,1027,2.561,1029,3.35,1030,4.921,1038,1.927,1071,3.581,1078,2.65,1082,1.515,1210,3.538,1234,1.564,1235,1.829,1236,2.049,1238,2.049,1241,2.049,1242,1.927,1243,5.841,1245,2.049,1252,3.156,1255,2.749,1259,2.049,1262,2.049,1265,2.049,1266,5.215,1268,4.021,1269,6.447,1272,3.761,1274,2.049,1275,4.855,1278,2.049,1280,4.009,1281,2.049,1283,2.049,1285,2.049,1287,2.049,1289,2.049,1292,2.049,1294,1.618,1295,1.927,1296,1.829,1297,3.156,1298,1.678,1299,5.438,1300,4.929,1301,4.009,1302,5.438,1303,4.263,1304,3.356,1305,5.438,1306,3.356,1307,4.263,1308,2.049,1309,4.706,1310,2.863,1311,6.553,1312,4.263,1313,1.678,1314,3.356,1315,2.049,1316,3.356,1317,2.049,1318,2.758,1319,4.793,1320,2.749,1321,3.356,1322,2.049,1323,3.356,1324,3.356,1325,3.356,1326,3.356,1327,3.356,1328,2.049,1329,3.356,1330,1.927,1331,3.356,1332,2.049,1333,1.748,1334,3.356,1335,2.049,1336,2.049,1337,2.049,1338,3.356,1339,1.829,1340,2.049,1341,3.356,1342,5.438,1343,2.049,1344,1.618,1345,2.049,1346,2.049,1347,2.049,1348,2.049,1349,2.049,1350,2.049,1351,2.049,1352,3.156,1353,1.927,1354,2.049,1355,2.049,1356,3.356,1357,3.356,1358,1.927,1359,4.263,1360,2.049,1361,3.356,1362,2.049,1363,2.049,1364,2.049,1365,2.049,1366,2.049,1367,2.049,1368,2.049,1369,2.049,1370,2.049,1371,2.049,1372,2.049,1373,2.049,1374,2.049,1375,2.049,1376,2.049,1377,2.049,1378,2.049,1379,2.049,1380,2.049,1381,2.049,1382,2.049,1383,2.049,1384,2.049,1385,2.049,1386,2.049,1387,3.356,1388,2.049,1389,2.049,1390,2.049,1391,3.356,1392,2.65,1393,3.356,1394,2.049,1395,2.049,1396,2.049,1397,2.049,1398,2.049,1399,2.049,1400,2.049,1401,4.263,1402,2.049,1403,2.049,2440,3.624,2441,4.031,2442,4.031,2443,4.031,2444,4.031,2445,3.624,2446,3.624,2447,3.624,2448,2.461,2449,2.461,2450,2.461,2451,2.461,2452,2.461,2453,2.461,2454,2.212,2455,2.461,2456,2.461,2457,2.461,2458,2.461,2459,2.461,2460,2.461,2461,2.461,2462,2.461,2463,2.461,2464,2.461,2465,2.461,2466,2.461]],["title/interfaces/HtmlMailContent.html",[0,0.534,251,3.398]],["body/interfaces/HtmlMailContent.html",[0,1.05,2,1.917,3,0.107,4,0.089,5,0.066,8,0.282,9,0.911,12,1.021,13,0.268,14,0.004,22,0.095,33,2.049,114,0.54,172,0.003,173,0.003,190,0.696,235,5.493,236,4.56,237,5.992,238,5.699,239,4.56,240,4.56,241,5.493,242,4.56,243,4.56,244,4.56,245,6.277,246,4.395,247,4.56,248,5.493,249,6.704,250,6.704,251,5.992,252,4.729,253,4.395,254,4.56,255,4.56,256,4.56]],["title/interfaces/ICollectionFilePath.html",[0,0.534,1827,4.304]],["body/interfaces/ICollectionFilePath.html",[0,0.32,2,0.889,3,0.05,4,0.109,5,0.076,8,0.131,9,0.529,12,0.902,13,0.155,14,0.005,15,0.198,18,0.912,19,0.544,22,0.096,31,0.073,34,1.442,35,2.536,37,1.292,69,0.617,74,2.052,77,1.823,78,1.241,114,0.545,123,0.984,128,1.716,129,2.818,148,1.319,149,1.098,172,0.002,173,0.002,187,0.246,190,0.497,199,1.429,273,1.365,295,1.529,320,2.443,330,3.411,371,1.755,381,1.52,394,3.951,470,1.297,492,1.624,502,3.632,503,3.918,527,1.97,600,1.97,700,1.097,742,4.244,744,2.581,745,2.581,749,6.041,751,4.244,753,2.114,755,4.038,756,1.908,761,5.743,762,2.114,764,4.678,767,2.114,807,5.305,829,3.797,878,3.082,1020,3.254,1033,2.038,1071,1.499,1119,1.97,1121,1.853,1135,2.202,1185,3.082,1318,1.67,1547,3.445,1557,4.263,1656,2.038,1661,4.067,1662,6.506,1663,5.023,1666,5.023,1672,2.114,1673,2.819,1677,3.571,1686,4.294,1687,4.678,1700,6.7,1720,4.075,1726,4.038,1772,2.787,1773,2.787,1774,2.787,1776,2.787,1780,2.787,1782,2.787,1784,4.244,1786,2.787,1788,2.677,1789,5.371,1790,4.038,1791,4.788,1792,4.974,1794,2.787,1795,2.787,1797,2.304,1798,2.787,1800,4.361,1801,2.581,1802,4.441,1803,6.992,1804,2.787,1806,5.371,1808,5.371,1810,2.787,1811,2.581,1812,4.361,1813,2.787,1815,2.787,1816,2.787,1817,3.188,1818,2.581,1821,2.581,1822,2.427,1823,2.581,1824,1.596,1825,2.304,1826,2.581,1827,6.475,1828,7.004,1829,4.038,1830,2.787,1831,2.787,1832,4.361,1833,4.361,1834,4.361,1835,2.787,1836,2.787,1837,2.787,1838,2.787,1839,6.076,1840,2.787,1841,2.787,1842,2.787,1843,2.581,1844,2.787,1845,2.787,1846,2.787,1847,2.581,1848,2.787,1849,6.076,1850,4.974,1851,2.986,1852,2.787,1853,2.787,1854,1.97,1855,2.038,1856,2.787,1857,4.361,1858,4.361,1859,2.787,1860,2.787,1861,2.787,1862,1.853,1863,4.361,1864,2.787,1865,2.787,1866,2.787,1867,3.797,1868,4.361,1869,2.787,1870,4.361,1871,4.361,1872,2.787,1873,2.787,1874,2.819,1875,2.787,1876,2.787,1877,2.581,1878,2.787,1879,2.202,1880,2.581,1881,2.114,1882,1.853,1883,2.787,1884,2.581,1885,2.787,1886,2.787,1887,2.787,1888,2.787,1889,2.787,1890,3.308,1891,2.787,1892,2.787,1893,2.787,1894,2.787,1895,2.787,1896,4.361,1897,2.787,1898,2.787,1899,2.787,1900,2.787,1901,1.755,1902,2.787,1903,2.787,1904,2.787,1905,2.787,1906,3.605,1907,2.787,1908,3.797,1909,2.787,1910,2.787,1911,2.787,1912,2.787]],["title/interfaces/ICourseGroupProperties.html",[0,0.534,988,4.304]],["body/interfaces/ICourseGroupProperties.html",[0,0.681,2,1.89,3,0.106,4,0.088,5,0.065,8,0.278,9,0.903,13,0.305,14,0.005,15,0.238,22,0.118,31,0.156,33,1.374,78,0.925,145,2.074,149,1.211,172,0.003,173,0.003,190,0.689,205,2.121,316,1.404,348,4.688,355,2.007,356,1.867,357,2.955,360,2.973,494,2.67,495,2.472,498,2.853,502,2.548,510,3.153,512,2.149,573,3.308,700,2.333,845,6.434,859,3.321,860,4.059,861,5.162,870,3.321,895,2.67,904,5.162,905,5.162,981,4.334,982,5.927,983,3.731,984,3.94,987,3.393,988,7.541,989,5.489,990,4.334,991,4.334,992,5.927,993,5.927]],["title/interfaces/ICourseProperties.html",[0,0.534,877,4.047]],["body/interfaces/ICourseProperties.html",[0,0.472,2,1.312,3,0.073,4,0.061,5,0.045,8,0.364,9,0.893,12,0.953,13,0.316,14,0.005,15,0.219,22,0.092,31,0.108,33,0.954,37,1.219,69,0.911,78,0.91,114,0.775,128,1.099,145,2.126,149,1.384,172,0.003,173,0.003,190,0.851,205,1.472,216,2.283,316,1.099,354,2.854,355,1.108,356,1.296,360,2.328,370,2.362,381,2.96,385,2.272,417,2.907,492,1.532,494,1.853,495,1.716,498,1.98,502,1.768,508,1.741,510,3.12,512,1.491,538,2.257,573,1.452,636,2.169,657,4.971,700,2.667,831,2.907,842,3.809,843,3.653,844,6.776,845,5.909,846,7.237,847,7.237,848,5.903,849,4.113,851,4.113,853,4.113,855,2.907,856,2.304,859,3.795,860,4.638,861,3.582,863,4.113,865,4.113,870,2.304,871,4.263,872,3.401,873,3.007,874,3.582,875,2.589,876,2.659,877,5.899,878,4.121,879,4.607,880,4.113,881,3.582,882,4.113,883,3.12,884,4.113,885,4.113,886,3.809,887,3.401,888,3.401,889,3.25,890,4.113,891,3.12,892,3.809,893,3.582,894,3.401,895,1.853,896,2.589,897,2.525,898,4.113,899,3.579,900,5.831,901,4.113,902,2.907,903,2.907,904,3.582,905,3.582,906,4.113,907,4.113,908,4.113,909,4.113,910,5.831,911,4.113,912,5.831,913,5.899,914,5.831,915,3.582,916,4.113,917,4.113,918,4.263]],["title/interfaces/ICreateNews.html",[0,0.534,2467,3.842]],["body/interfaces/ICreateNews.html",[0,1.012,2,1.754,3,0.098,4,0.082,5,0.06,8,0.258,9,0.861,10,1.29,12,0.931,13,0.332,14,0.005,15,0.225,22,0.136,172,0.003,173,0.003,181,3.137,190,0.728,216,1.554,308,2.851,309,3.979,310,4.502,311,5.384,316,1.037,381,2.741,410,4.255,454,3.657,492,2.049,573,2.777,582,4.143,843,3.28,896,3.463,1048,4.626,1050,2.743,1051,4.406,1053,3.888,1056,4.979,1062,4.39,2467,5.871,2468,4.791,2469,7.101,2470,5.501,2471,5.501,2472,5.501,2473,4.346,2474,4.346,2475,4.346,2476,4.548,2477,5.501,2478,4.548,2479,4.173]],["title/interfaces/ICurrentUser.html",[0,0.534,926,2.785]],["body/interfaces/ICurrentUser.html",[0,0.911,2,1.787,3,0.1,4,0.083,5,0.061,8,0.262,9,0.871,10,2.076,12,1.027,13,0.321,14,0.005,15,0.152,22,0.133,76,3.294,114,0.503,145,2.031,172,0.003,173,0.003,312,3.583,324,6.259,380,3.281,381,2.505,383,3.208,856,5.044,926,4.306,2480,4.881,2481,6.118,2482,4.668,2483,5.452,2484,6.062,2485,4.592,2486,6.918,2487,5.942,2488,4.881,2489,5.678,2490,3.281,2491,3.281,2492,4.881]],["title/interfaces/IDashboardModelProperties.html",[0,0.534,1431,3.842]],["body/interfaces/IDashboardModelProperties.html",[0,0.759,2,1.572,3,0.088,4,0.073,5,0.054,8,0.231,9,0.801,10,2.08,12,0.903,13,0.266,14,0.005,15,0.225,22,0.126,31,0.174,33,1.531,37,2.359,69,1.091,76,2.6,123,2.333,145,2.181,149,1.35,172,0.003,173,0.003,181,3.006,190,0.612,205,2.364,316,1.404,348,3.102,354,2.811,355,1.78,356,1.552,357,2.457,360,2.975,494,2.22,498,2.372,502,2.839,510,2.797,512,1.787,573,2.333,635,3.417,649,2.502,700,1.94,859,3.701,870,2.761,895,2.976,987,2.822,1075,2.953,1200,4.859,1319,4.464,1320,3.739,1404,6.039,1405,4.292,1406,6.581,1407,6.581,1408,5.653,1409,4.292,1410,5.011,1412,4.292,1413,4.292,1418,3.603,1419,3.894,1420,4.292,1421,5.462,1422,4.668,1423,4.292,1424,5.753,1425,4.292,1426,4.292,1427,4.292,1428,4.292,1429,4.292,1430,4.075,1431,6.16,1432,5.866,1433,4.292,1434,3.739,1435,4.292,1436,4.292,1437,4.292,1438,4.292,1439,4.292]],["title/interfaces/IDashboardRepo.html",[0,0.534,1606,4.047]],["body/interfaces/IDashboardRepo.html",[0,0.557,2,1.546,3,0.087,4,0.072,5,0.053,8,0.227,10,1.532,13,0.263,14,0.005,15,0.214,18,1.366,19,0.946,22,0.104,31,0.172,71,2.307,74,2.46,76,3.113,77,2.715,78,1.327,114,0.663,128,1.688,129,2.842,145,1.177,149,0.991,172,0.003,173,0.003,182,1.35,187,0.653,189,1.153,190,0.684,199,1.51,211,2.508,308,3.281,316,0.914,328,1.322,348,3.052,355,1.307,357,2.417,370,1.964,397,3.426,505,2.838,524,3.678,530,5.162,536,3.825,538,2.66,540,3.831,546,5.838,556,4.222,897,2.976,1029,3.052,1200,4.978,1234,6.01,1272,4.617,1422,3.426,1498,5.162,1520,6.05,1585,4.49,1589,4.009,1590,4.49,1591,6.533,1592,6.05,1593,3.831,1595,7.39,1597,6.843,1601,4.848,1602,4.49,1603,6.05,1604,4.49,1605,4.49,1606,6.435,1607,4.848,1608,6.533,1609,4.848,1610,6.533,1611,4.848,1612,7.39,1613,4.848,1614,6.533,1615,4.848,1616,4.848,2493,5.392,2494,5.392,2495,5.392]],["title/interfaces/IErrorType.html",[0,0.534,775,4.047]],["body/interfaces/IErrorType.html",[0,0.782,2,2.171,3,0.122,4,0.101,5,0.074,8,0.319,9,0.982,12,1.006,13,0.334,14,0.004,22,0.108,71,3.056,172,0.004,173,0.004,181,3.382,209,7.407,775,7.058,2496,7.57,2497,7.57]],["title/interfaces/IFileProperties.html",[0,0.534,499,3.842]],["body/interfaces/IFileProperties.html",[0,0.604,2,1.677,3,0.094,4,0.078,5,0.075,8,0.246,9,0.836,12,0.951,13,0.316,14,0.005,15,0.221,22,0.129,31,0.202,33,1.784,123,2.435,145,2.059,172,0.003,173,0.003,190,0.756,205,1.882,316,1.539,354,3.073,355,1.417,356,1.656,360,2.753,381,2.847,485,5.837,486,4.58,487,4.387,488,7.011,489,6.005,492,1.959,494,2.369,495,2.193,496,5.936,497,4.58,498,2.531,499,6.362,500,6.7,501,6.7,502,3.307,503,4.311,504,3.601,505,4.037,506,4.873,507,3.845,508,2.92,509,4.58,510,2.226,511,4.58,512,1.907,513,4.58,514,4.58,515,4.58,516,4.58,517,4.58,518,4.58,519,4.58,520,4.58,521,4.58,522,3.601,523,3.31]],["title/interfaces/IFindOptions.html",[0,0.534,1105,3.398]],["body/interfaces/IFindOptions.html",[0,0.91,2,2.09,3,0.117,4,0.097,5,0.072,8,0.307,9,0.96,13,0.304,14,0.004,22,0.14,37,2.348,172,0.004,173,0.004,190,0.819,454,4.356,947,3.926,948,3.671,1050,3.267,1105,5.792,1129,5.43,1130,5.568,1166,4.791,1906,6.549,2498,5.706,2499,5.706,2500,8.192,2501,7.703,2502,7.336]],["title/interfaces/IGridElement.html",[0,0.534,1269,4.047]],["body/interfaces/IGridElement.html",[0,0.286,2,0.794,3,0.044,4,0.037,5,0.027,8,0.292,9,0.483,10,1.562,12,0.881,13,0.28,14,0.005,15,0.135,19,0.486,22,0.115,31,0.105,35,2.551,37,2.496,76,1.57,78,1.41,114,0.512,128,1.697,143,3.417,148,2.36,149,1.485,168,3.897,172,0.002,173,0.002,181,2.641,182,0.824,187,0.618,189,0.89,190,0.528,199,1.429,308,2.848,386,1.408,404,2.379,418,3.591,460,1.457,470,2.654,492,2.48,512,0.903,569,2.283,570,2.448,635,3.228,649,2.896,700,2.245,871,6.532,872,2.058,873,2.915,897,1.528,949,3.417,1027,2.818,1029,3.591,1030,5.112,1038,2.168,1071,3.067,1078,2.915,1082,1.705,1210,3.791,1234,1.759,1235,2.058,1236,2.305,1238,2.305,1241,2.305,1242,2.168,1243,6.167,1245,2.305,1252,3.473,1255,3.025,1259,2.305,1262,2.305,1265,2.305,1266,5.506,1268,4.273,1269,6.697,1272,4.031,1274,2.305,1275,5.16,1278,2.305,1280,4.344,1281,2.305,1283,2.305,1285,2.305,1287,2.305,1289,2.305,1292,2.305,1294,1.82,1295,2.168,1296,2.058,1297,3.473,1298,1.889,1299,5.78,1300,5.282,1301,3.473,1302,5.78,1303,4.619,1304,3.693,1305,5.78,1306,3.693,1307,4.619,1308,2.305,1309,4.411,1310,3.15,1311,6.32,1312,2.305,1313,1.889,1314,3.693,1315,2.305,1316,3.693,1317,2.305,1318,2.989,1319,4.607,1320,3.025,1321,3.693,1322,2.305,1323,2.305,1324,2.305,1325,2.305,1326,2.305,1327,3.693,1328,2.305,1329,3.693,1330,2.168,1331,3.693,1332,2.305,1333,1.967,1334,3.693,1335,2.305,1336,2.305,1337,2.305,1338,3.693,1339,2.058,1340,2.305,1341,3.693,1342,5.78,1343,2.305,1344,1.82,1345,2.305,1346,2.305,1347,2.305,1348,2.305,1349,2.305,1350,2.305,1351,2.305,1352,3.473,1353,2.168,1354,2.305,1355,2.305,1356,3.693,1357,3.693,1358,2.168,1359,4.619,1360,2.305,1361,3.693,1362,2.305,1363,2.305,1364,2.305,1365,2.305,1366,2.305,1367,2.305,1368,2.305,1369,2.305,1370,2.305,1371,2.305,1372,2.305,1373,2.305,1374,2.305,1375,2.305,1376,2.305,1377,2.305,1378,2.305,1379,2.305,1380,2.305,1381,2.305,1382,2.305,1383,2.305,1384,2.305,1385,2.305,1386,2.305,1387,3.693,1388,2.305,1389,2.305,1390,2.305,1391,3.693,1392,2.915,1393,3.693,1394,2.305,1395,2.305,1396,2.305,1397,2.305,1398,2.305,1399,2.305,1400,2.305,1401,4.619,1402,2.305,1403,2.305,2440,3.987,2445,3.987,2446,3.987,2447,3.987,2454,2.489,2503,2.769,2504,2.769,2505,2.769,2506,2.769,2507,2.769,2508,2.769,2509,2.769]],["title/interfaces/IImportUserProperties.html",[0,0.534,2510,4.047]],["body/interfaces/IImportUserProperties.html",[0,0.434,2,1.204,3,0.067,4,0.056,5,0.041,8,0.177,9,0.783,12,1.001,13,0.317,14,0.005,15,0.204,22,0.119,31,0.17,33,1.271,54,1.817,76,1.486,78,0.589,121,5.385,123,2.861,145,1.567,172,0.003,173,0.003,190,0.768,205,1.962,316,1.217,354,2.987,355,1.017,356,1.189,360,2.578,370,2.221,420,2.161,470,2.551,492,2.405,494,2.908,495,1.574,498,1.817,508,1.598,510,2.734,512,1.988,843,3.584,876,2.44,895,1.7,902,2.668,1050,3.752,1071,2.03,1319,2.262,1408,4.898,1410,4.159,1434,2.864,1788,4.619,1824,4.92,2482,1.99,2490,4.406,2491,4.406,2510,5.623,2511,3.287,2512,3.287,2513,6.222,2514,6.554,2515,6.97,2516,6.97,2517,6.222,2518,6.698,2519,6.554,2520,5.077,2521,4.775,2522,3.496,2523,2.44,2524,3.287,2525,3.287,2526,5.077,2527,3.496,2528,3.496,2529,3.496,2530,5.979,2531,5.077,2532,3.496,2533,4.775,2534,4.159,2535,2.982,2536,4.421,2537,3.451,2538,3.754,2539,3.496,2540,3.287,2541,3.287,2542,4.775,2543,4.332,2544,5.077,2545,3.287,2546,3.496,2547,3.496,2548,3.496,2549,3.496,2550,3.496,2551,3.496,2552,3.496,2553,2.668,2554,2.76,2555,2.668,2556,2.76,2557,3.121,2558,3.121,2559,3.496,2560,3.496,2561,3.496,2562,3.496,2563,3.496,2564,3.496,2565,4.533,2566,3.121,2567,5.077,2568,3.496]],["title/interfaces/ILearnroom.html",[0,0.534,871,3.398]],["body/interfaces/ILearnroom.html",[0,0.81,2,2.248,3,0.126,4,0.105,5,0.077,8,0.33,9,1.003,13,0.251,14,0.004,15,0.191,22,0.112,172,0.004,173,0.004,418,5.208,871,6.049,873,6.049,1296,5.827,2569,7.839,2570,10.077]],["title/interfaces/ILessonProperties.html",[0,0.534,2571,4.047]],["body/interfaces/ILessonProperties.html",[0,0.682,2,1.894,3,0.106,4,0.088,5,0.065,8,0.382,9,0.904,12,0.903,13,0.305,14,0.005,15,0.221,22,0.118,31,0.156,33,1.377,114,0.807,172,0.003,173,0.003,190,0.69,205,2.125,316,1.405,354,2.878,355,1.601,356,1.871,360,2.977,492,3.035,494,2.675,495,2.477,508,2.514,510,2.514,512,2.153,573,3.309,623,3.4,636,3.132,659,4.342,700,2.338,895,2.675,899,3.646,983,3.739,984,3.948,987,3.4,990,4.342,991,4.342,2571,7.098,2572,5.939,2573,6.68,2574,5.5,2575,7.456,2576,5.939]],["title/interfaces/ILogger.html",[0,0.534,2337,3.672]],["body/interfaces/ILogger.html",[0,0.655,2,1.818,3,0.102,4,0.085,5,0.062,8,0.267,12,1.016,13,0.31,14,0.004,22,0.09,34,3.758,84,5.475,114,0.781,172,0.003,173,0.003,182,1.502,187,0.769,189,1.357,190,0.855,199,1.777,432,4.208,2003,6.162,2337,5.74,2577,6.341,2578,6.007,2579,5.74,2580,8.081,2581,8.081,2582,6.341,2583,6.341,2584,7.265,2585,7.406,2586,6.341,2587,7.265,2588,6.341,2589,6.341,2590,6.341,2591,7.265,2592,6.341,2593,5.701,2594,5.701]],["title/interfaces/INewsProperties.html",[0,0.534,1055,3.672]],["body/interfaces/INewsProperties.html",[0,0.418,2,1.161,3,0.065,4,0.115,5,0.04,8,0.171,9,0.647,10,0.854,12,0.959,13,0.317,14,0.005,15,0.223,22,0.118,31,0.183,33,1.615,43,3.211,44,3.271,45,2.943,46,3.097,47,3.271,48,3.789,78,0.568,114,0.479,123,1.286,145,2.035,149,1.292,172,0.002,173,0.002,181,2.927,190,0.761,205,1.303,308,3.09,309,3.903,310,3.621,312,1.815,316,1.398,331,2.877,354,2.829,355,0.981,356,1.147,360,2.132,367,3.621,372,2.895,381,2.428,404,1.519,460,2.132,487,4.01,494,1.64,495,1.519,498,1.753,502,2.295,504,2.493,505,3.126,506,4.469,510,2.677,512,1.32,523,2.292,573,1.886,582,3.865,644,2.493,649,1.849,843,3.645,855,3.774,856,2.04,875,2.292,876,2.354,903,2.573,983,2.292,987,2.084,1046,2.573,1047,3.01,1048,4.583,1050,2.663,1051,2.992,1052,3.01,1053,5.242,1054,3.01,1055,5.504,1056,4.444,1057,6.133,1058,4.63,1059,4.923,1060,5.423,1061,5.668,1062,4.392,1063,2.762,1064,3.01,1065,3.774,1066,3.01,1067,3.01,1068,2.235,1069,2.762,1070,2.877,1071,1.958,1072,2.762,1073,2.573,1074,2.877,1075,3.2,1076,2.573,1077,3.01,1078,2.662,1079,3.01,1080,2.762,1081,3.01,1082,2.493,1083,3.01,1084,3.01,1085,3.01,1086,3.01,1087,2.762,1088,3.01,1089,2.762,1090,3.01,1091,3.01,1092,4.415,1093,4.204,1094,3.01,1095,4.415,1096,3.01,1097,3.01,1098,2.662,1099,2.662,1100,3.01]],["title/interfaces/INewsScope.html",[0,0.534,2478,3.842]],["body/interfaces/INewsScope.html",[0,1.017,2,1.791,3,0.1,4,0.083,5,0.061,8,0.263,9,0.872,10,1.317,12,0.76,13,0.328,14,0.005,15,0.227,22,0.137,172,0.003,173,0.003,181,2.12,190,0.82,216,1.586,308,2.879,309,4.031,310,4.546,311,5.734,316,1.058,381,1.957,410,4.311,454,3.732,492,2.957,573,2.804,582,2.799,843,3.312,896,3.535,1048,4.655,1050,2.799,1051,4.449,1053,3.968,1056,3.364,1062,4.338,2467,4.642,2468,4.89,2469,5.615,2470,5.615,2471,5.615,2472,5.615,2473,4.436,2474,4.436,2475,4.436,2476,4.642,2477,7.195,2478,5.949,2479,6.353]],["title/interfaces/IPagination.html",[0,0.534,2501,4.047]],["body/interfaces/IPagination.html",[0,0.91,2,2.09,3,0.117,4,0.097,5,0.072,8,0.307,9,0.96,13,0.304,14,0.004,22,0.14,37,2.728,172,0.004,173,0.004,190,0.819,454,4.356,947,5.3,948,4.956,1050,3.267,1105,4.791,1129,4.022,1130,4.125,1166,4.791,1906,6.549,2498,5.706,2499,5.706,2500,7.336,2501,7.415,2502,7.336]],["title/interfaces/IResolvedUser.html",[0,0.534,2486,3.842]],["body/interfaces/IResolvedUser.html",[0,0.905,2,1.761,3,0.099,4,0.082,5,0.06,8,0.259,9,0.863,10,2.104,12,1.025,13,0.33,14,0.005,15,0.15,22,0.132,76,2.173,114,0.496,145,1.34,172,0.003,173,0.003,312,4.294,324,4.808,380,4.871,381,3.074,383,4.764,856,4.941,926,3.308,2480,4.808,2481,4.037,2482,4.65,2483,4.189,2484,5.394,2485,4.322,2486,6.513,2487,4.565,2488,4.808,2489,6.574,2490,4.871,2491,4.871,2492,4.808]],["title/interfaces/IRole.html",[0,0.534,2489,3.672]],["body/interfaces/IRole.html",[0,0.94,2,1.909,3,0.107,4,0.089,5,0.065,8,0.28,9,0.908,10,2.143,12,1.022,13,0.306,14,0.005,15,0.162,22,0.136,76,2.357,114,0.77,145,1.453,172,0.003,173,0.003,312,3.736,324,5.214,380,3.505,381,2.612,383,3.427,856,4.583,926,3.587,2480,5.214,2481,4.377,2482,4.313,2483,4.542,2484,5.601,2485,4.488,2486,6.196,2487,4.95,2488,5.214,2489,6.463,2490,3.505,2491,3.505,2492,5.214]],["title/interfaces/IRoleProperties.html",[0,0.534,2595,4.304]],["body/interfaces/IRoleProperties.html",[0,0.64,2,1.777,3,0.1,4,0.083,5,0.061,8,0.371,9,0.868,12,0.962,13,0.298,14,0.005,15,0.194,22,0.114,31,0.146,33,1.292,114,0.794,149,1.617,172,0.003,173,0.003,190,0.773,205,1.994,312,4.306,316,1.491,354,2.794,355,1.502,356,1.756,360,2.859,370,2.257,418,3.508,495,2.324,502,2.395,510,2.359,512,2.021,636,2.938,658,4.403,859,4.433,870,4.433,895,2.51,899,3.421,1050,3.57,1068,3.421,1196,3.122,1313,4.228,1675,4.403,2075,5.658,2430,4.403,2482,4.89,2485,4.851,2595,7.327,2596,5.573,2597,5.573,2598,4.075,2599,4.853,2600,7.161,2601,4.853,2602,5.573,2603,4.853]],["title/interfaces/ISchoolProperties.html",[0,0.534,2604,4.304]],["body/interfaces/ISchoolProperties.html",[0,0.761,2,2.113,3,0.118,4,0.098,5,0.072,8,0.31,9,0.967,12,0.938,13,0.236,14,0.004,15,0.216,22,0.126,31,0.174,33,1.536,114,0.816,172,0.004,173,0.004,205,2.37,316,1.503,345,5.636,354,2.816,355,1.786,356,2.087,495,2.763,512,2.402,636,3.493,843,2.763,895,2.984,899,4.067,2473,5.234,2604,7.923,2605,6.625]],["title/interfaces/IStorageProviderProperties.html",[0,0.534,2606,4.304]],["body/interfaces/IStorageProviderProperties.html",[0,0.675,2,1.875,3,0.105,4,0.087,5,0.064,8,0.275,9,0.898,12,1.014,13,0.313,14,0.005,15,0.22,22,0.117,31,0.155,33,1.363,172,0.003,173,0.003,190,0.686,205,2.104,316,1.397,354,3.1,355,1.585,356,1.852,360,2.959,495,2.453,496,3.801,510,2.49,512,2.132,895,2.649,2014,6.453,2191,8.131,2195,7.646,2197,7.806,2606,7.513,2607,5.881,2608,8.131,2609,5.881,2610,5.881,2611,5.881,2612,5.881,2613,5.881,2614,5.881,2615,5.881,2616,5.881,2617,5.881,2618,5.881]],["title/interfaces/ISubmissionProperties.html",[0,0.534,2619,4.047]],["body/interfaces/ISubmissionProperties.html",[0,0.48,2,1.334,3,0.075,4,0.062,5,0.093,8,0.196,9,0.715,12,0.916,13,0.322,14,0.005,15,0.226,22,0.094,31,0.11,33,0.97,37,2.321,78,0.921,128,1.112,145,2.07,149,1.397,172,0.003,173,0.003,190,0.831,205,1.496,308,2.139,316,1.112,354,2.622,355,1.127,356,1.317,360,2.356,460,2.448,470,3.181,492,1.558,494,1.884,495,1.744,498,2.013,502,1.798,510,3.44,512,1.516,574,4.23,700,2.923,859,3.83,860,2.864,870,2.343,875,2.633,895,1.884,981,6.559,1075,2.506,1082,2.864,1392,4.314,2119,4.806,2537,5.115,2538,2.864,2619,5.954,2620,4.182,2621,6.819,2622,7.83,2623,7.251,2624,8.35,2625,8.35,2626,7.897,2627,4.182,2628,4.182,2629,4.182,2630,3.058,2631,2.864,2632,4.182,2633,4.182,2634,4.182,2635,4.182,2636,4.182,2637,5.9,2638,5.9,2639,4.182,2640,4.182,2641,4.182,2642,4.182,2643,4.182,2644,4.182,2645,3.304,2646,4.182,2647,6.836,2648,4.182,2649,5.9,2650,4.182,2651,5.401,2652,4.182,2653,4.182,2654,4.182,2655,4.182,2656,4.182]],["title/interfaces/ITaskProperties.html",[0,0.534,2657,3.672]],["body/interfaces/ITaskProperties.html",[0,0.511,2,0.911,3,0.051,4,0.042,5,0.031,8,0.288,9,0.661,10,0.67,12,0.779,13,0.303,14,0.005,15,0.2,22,0.106,31,0.117,33,0.662,35,2.432,37,2.094,54,1.375,78,1.31,82,3.888,114,0.719,123,1.009,128,1.721,145,2.038,148,1.352,149,1.363,172,0.002,173,0.002,187,0.252,190,0.802,205,1.022,216,1.542,308,1.978,316,0.838,354,2.356,355,0.77,356,0.9,360,1.775,370,2.21,372,1.308,377,1.846,381,2.658,394,2.663,470,2.539,487,3.451,492,2.982,494,1.287,495,1.191,498,1.375,502,1.228,508,1.882,510,2.607,512,1.036,522,1.956,523,1.798,573,2.828,574,3.549,575,2.019,623,4.584,636,1.506,639,2.019,640,4.312,641,4.566,657,3.194,700,2.148,720,4.877,726,5.359,727,5.359,728,5.575,729,5.271,730,5.581,740,3.512,859,2.49,860,1.956,870,1.6,879,2.257,889,2.257,891,2.167,895,1.287,899,1.753,918,4.877,983,1.798,984,1.899,987,1.635,990,4.502,991,2.089,1002,3.876,1035,2.257,1075,1.711,1177,2.089,1318,3.269,1418,2.089,1661,2.39,1960,5.049,2119,1.753,2251,2.257,2598,2.089,2630,5.392,2631,4.568,2645,2.257,2651,3.512,2657,4.311,2658,2.362,2659,2.488,2660,2.488,2661,2.488,2662,2.488,2663,4.511,2664,2.488,2665,2.488,2666,2.362,2667,2.488,2668,2.488,2669,2.488,2670,2.488,2671,2.488,2672,2.488,2673,2.488,2674,2.488,2675,2.488,2676,3.871,2677,3.871,2678,3.871,2679,2.488,2680,2.488,2681,2.488,2682,2.488,2683,2.488,2684,2.488,2685,2.488,2686,2.488,2687,2.488,2688,2.257,2689,2.488,2690,2.488,2691,3.871,2692,2.488,2693,3.871,2694,3.871,2695,2.488,2696,2.488,2697,2.488,2698,2.488,2699,2.488,2700,3.871,2701,2.488,2702,2.488,2703,2.488,2704,2.488,2705,3.871,2706,2.488,2707,2.488,2708,2.488,2709,2.488,2710,2.488,2711,5.091,2712,2.488,2713,2.488,2714,2.488,2715,2.257,2716,2.257,2717,3.871,2718,2.488,2719,2.488,2720,2.488,2721,2.488,2722,2.488,2723,3.871,2724,1.899,2725,2.257,2726,2.488,2727,2.488,2728,2.488,2729,2.488,2730,2.488,2731,3.871,2732,3.141,2733,2.488,2734,2.488,2735,2.488,2736,3.871,2737,2.488,2738,2.488,2739,2.488,2740,2.488,2741,1.899,2742,1.711,2743,3.675,2744,2.488,2745,5.362,2746,2.488,2747,2.488,2748,2.488]],["title/interfaces/ITaskStatus.html",[0,0.534,720,3.398]],["body/interfaces/ITaskStatus.html",[0,0.525,2,0.944,3,0.053,4,0.044,5,0.032,8,0.294,9,0.677,10,0.695,12,0.717,13,0.293,14,0.005,15,0.202,22,0.108,31,0.12,33,0.687,35,2.163,37,2.476,54,1.425,78,1.32,82,3.94,114,0.671,123,1.046,128,1.729,145,1.922,148,1.401,149,1.386,172,0.002,173,0.002,187,0.262,205,1.06,216,1.577,308,2.024,316,0.862,354,2.395,355,0.798,356,0.933,360,1.825,370,2.261,372,1.356,377,1.914,381,2.188,394,2.739,470,2.598,487,2.365,492,3.187,494,1.334,495,1.235,498,1.425,502,1.273,508,1.935,510,2.657,512,1.074,522,2.028,523,1.864,573,2.395,574,3.596,575,2.093,623,3.883,636,1.561,639,2.093,640,2.955,641,3.609,657,3.268,700,2.197,720,5.241,726,6.007,727,6.007,728,6.019,729,6.097,730,6.256,740,3.611,859,2.561,860,2.028,870,1.659,879,2.34,889,2.34,891,2.247,895,1.334,899,1.818,918,5.642,983,1.864,984,1.969,987,1.695,990,4.589,991,2.165,1002,3.951,1035,2.34,1075,1.774,1177,2.165,1318,3.345,1418,2.165,1661,2.458,1960,4.298,2119,1.818,2251,2.34,2598,2.165,2630,4.589,2631,3.822,2645,2.34,2651,3.611,2657,3.611,2658,2.448,2659,2.579,2660,2.579,2661,2.579,2662,2.579,2663,4.615,2664,2.579,2665,2.579,2666,2.448,2667,2.579,2668,2.579,2669,2.579,2670,2.579,2671,2.579,2672,2.579,2673,2.579,2674,2.579,2675,2.579,2676,3.981,2677,3.981,2678,3.981,2679,2.579,2680,2.579,2681,2.579,2682,2.579,2683,2.579,2684,2.579,2685,2.579,2686,2.579,2687,2.579,2688,2.34,2689,2.579,2690,2.579,2691,3.981,2692,2.579,2693,3.981,2694,3.981,2695,2.579,2696,2.579,2697,2.579,2698,2.579,2699,2.579,2700,3.981,2701,2.579,2702,2.579,2703,2.579,2704,2.579,2705,3.981,2706,2.579,2707,2.579,2708,2.579,2709,2.579,2710,2.579,2711,5.19,2712,2.579,2713,2.579,2714,2.579,2715,2.34,2716,2.34,2717,3.981,2718,2.579,2719,2.579,2720,2.579,2721,2.579,2722,2.579,2723,3.981,2724,1.969,2725,2.34,2726,2.579,2727,2.579,2728,2.579,2729,2.579,2730,2.579,2731,3.981,2732,3.23,2733,2.579,2734,2.579,2735,2.579,2736,3.981,2737,2.579,2738,2.579,2739,2.579,2740,2.579,2741,1.969,2742,1.774,2743,3.779,2744,2.579,2745,5.466,2746,2.579,2747,2.579,2748,2.579]],["title/interfaces/ITeamProperties.html",[0,0.534,2749,4.304]],["body/interfaces/ITeamProperties.html",[0,0.761,2,2.113,3,0.118,4,0.098,5,0.072,8,0.31,9,0.967,12,0.938,13,0.236,14,0.004,15,0.216,22,0.126,31,0.174,33,1.536,114,0.816,172,0.004,173,0.004,205,2.37,316,1.503,345,5.636,354,2.816,355,1.786,356,2.087,495,2.763,512,2.402,636,3.493,895,2.984,899,4.067,1051,3.712,2474,5.234,2749,7.923,2750,6.625]],["title/interfaces/IUserProperties.html",[0,0.534,2751,4.304]],["body/interfaces/IUserProperties.html",[0,0.619,2,1.72,3,0.096,4,0.08,5,0.059,8,0.4,9,0.85,12,0.988,13,0.318,14,0.005,15,0.223,22,0.111,31,0.142,33,1.25,114,0.699,121,5.682,145,1.309,149,1.102,172,0.003,173,0.003,190,0.763,205,1.929,316,1.321,354,2.912,355,1.453,356,1.698,360,2.799,494,2.429,495,2.249,502,2.318,510,2.968,512,1.955,700,2.122,843,3.847,855,3.81,856,3.021,859,3.021,870,3.021,876,3.485,895,2.429,902,3.81,903,3.81,2075,5.538,2482,4.62,2484,3.692,2485,4.525,2490,5.004,2491,5.004,2553,3.81,2554,3.942,2555,3.81,2556,3.942,2557,4.458,2558,4.458,2599,4.695,2603,4.695,2751,7.213,2752,5.392,2753,5.392,2754,5.392,2755,5.392,2756,5.392]],["title/entities/ImportUser.html",[316,0.876,2543,3.672]],["body/entities/ImportUser.html",[0,0.398,3,0.062,4,0.051,5,0.056,8,0.162,9,0.744,12,0.978,13,0.308,14,0.005,15,0.197,22,0.115,31,0.161,33,1.193,54,1.667,76,1.363,78,0.54,121,5.061,123,3.055,145,1.491,172,0.002,173,0.002,187,0.755,190,0.477,205,1.842,316,1.158,323,1.207,349,2.198,354,3.162,355,0.933,356,1.091,360,2.452,370,2.488,385,2.06,386,2.169,420,2.947,470,2.395,492,1.29,494,2.767,495,1.445,498,1.667,508,2.179,510,2.6,512,1.866,531,2.028,843,3.288,876,2.239,895,1.56,902,2.448,1050,3.622,1071,1.862,1121,2.302,1319,2.075,1408,5.512,1410,5.158,1434,2.628,1788,4.173,1824,4.513,2482,2.714,2490,3.98,2491,3.98,2510,4.482,2511,7.533,2512,3.016,2513,5.621,2514,5.921,2515,6.297,2516,6.297,2517,5.621,2518,6.518,2519,5.921,2520,4.766,2521,4.482,2522,3.207,2523,2.239,2524,3.016,2525,3.016,2526,4.766,2527,3.207,2528,3.207,2529,3.207,2530,5.688,2531,4.766,2532,3.207,2533,4.482,2534,3.905,2535,2.736,2536,4.205,2537,3.24,2538,3.524,2539,3.207,2540,3.016,2541,3.016,2542,4.482,2543,4.853,2544,6.297,2545,3.016,2546,3.207,2547,3.207,2548,3.207,2549,3.207,2550,3.207,2551,3.207,2552,3.207,2553,2.448,2554,2.532,2555,2.448,2556,2.532,2557,2.864,2558,2.864,2559,3.207,2560,3.207,2561,3.207,2562,3.207,2563,3.207,2564,3.207,2565,4.255,2566,2.864,2567,4.766,2568,3.207,2757,3.852,2758,3.852,2759,3.852,2760,3.852,2761,3.852,2762,3.852,2763,3.852,2764,3.852,2765,3.852,2766,3.463,2767,3.852,2768,5.724,2769,3.852,2770,3.852,2771,3.207,2772,3.016,2773,2.448]],["title/controllers/ImportUserController.html",[919,2.163,2774,4.304]],["body/controllers/ImportUserController.html",[3,0.086,4,0.071,5,0.071,8,0.225,12,0.896,13,0.262,14,0.005,15,0.242,19,0.935,22,0.076,31,0.126,77,2.542,114,0.66,127,4.582,145,1.164,148,3.477,149,1.501,172,0.003,173,0.003,182,1.34,187,0.649,189,1.146,190,0.68,199,1.501,328,1.307,330,2.48,349,1.89,370,3.188,405,4.206,531,2.806,629,1.861,631,2.63,919,2.231,921,2.39,923,3.187,926,5.411,927,5.563,929,6.286,930,3.801,931,3.505,932,3.388,933,3.505,940,3.505,1112,3.801,1121,3.187,1129,4.51,1214,4.439,1215,5.372,1225,5.646,1881,3.637,2149,7.289,2771,4.439,2772,4.175,2773,3.388,2774,6.004,2775,5.755,2776,8.754,2777,5.332,2778,5.332,2779,5.805,2780,8.172,2781,8.172,2782,4.439,2783,7.289,2784,5.332,2785,5.332,2786,7.211,2787,5.332,2788,7.289,2789,5.332,2790,7.289,2791,7.211,2792,5.332,2793,7.211,2794,5.332,2795,4.175,2796,5.332,2797,5.332,2798,5.332,2799,3.963,2800,5.332,2801,4.439,2802,4.794,2803,5.332]],["title/classes/ImportUserFilterQuery.html",[31,0.122,2783,4.304]],["body/classes/ImportUserFilterQuery.html",[3,0.098,4,0.081,5,0.06,8,0.256,9,0.857,12,0.929,13,0.306,14,0.004,15,0.192,22,0.112,31,0.186,145,2.134,172,0.003,173,0.003,175,1.388,187,0.759,190,0.856,349,2.208,492,2.632,628,5.033,629,2.12,1050,3.524,1194,6.946,1195,6.287,1196,3.06,1788,4.81,2490,4.587,2491,4.587,2514,6.824,2534,5.362,2535,4.314,2536,3.739,2775,6.428,2783,6.545,2804,7.657,2805,4.756,2806,6.824,2807,8.715,2808,6.074,2809,6.074,2810,6.074,2811,6.074,2812,6.074,2813,8.287,2814,6.074,2815,6.074,2816,6.074,2817,7.067,2818,6.074,2819,9.217,2820,7.067,2821,6.074]],["title/classes/ImportUserListResponse.html",[31,0.122,2795,4.047]],["body/classes/ImportUserListResponse.html",[3,0.08,4,0.067,5,0.049,8,0.211,9,0.752,10,1.055,12,0.85,13,0.296,14,0.005,15,0.225,22,0.098,31,0.187,33,1.439,37,2.744,69,0.996,114,0.557,145,2.068,172,0.003,173,0.003,175,1.578,187,0.711,189,0.702,190,0.744,192,4.387,216,2.407,320,2.52,349,1.971,432,2.937,512,1.631,627,3.975,628,3.554,629,1.746,631,2.468,654,2.468,655,2.575,656,2.575,699,5.603,700,1.77,843,1.876,942,4.936,947,4.982,948,4.658,1019,5.834,1020,3.742,1021,4.538,1024,3.917,1025,3.917,1026,3.917,1036,3.288,1037,3.288,1050,2.242,1071,2.418,1195,5.814,1196,2.52,1788,2.761,1791,3.079,1824,4.387,2119,2.761,2221,4.904,2482,2.371,2483,3.412,2485,2.468,2490,3.634,2491,3.634,2513,3.718,2517,3.718,2523,5.198,2536,3.079,2537,2.831,2538,3.079,2553,3.178,2554,3.288,2555,3.178,2556,3.288,2565,5.132,2566,3.718,2775,4.538,2788,4.165,2795,5.406,2799,5.132,2801,4.165,2804,5.406,2806,3.917,2822,4.497,2823,8.041,2824,5.002,2825,5.002,2826,5.132,2827,6.582,2828,4.497,2829,4.497,2830,4.497,2831,4.165,2832,4.165,2833,4.497,2834,4.497,2835,4.497,2836,4.497,2837,3.718,2838,4.497,2839,4.497,2840,3.553]],["title/modules/ImportUserModule.html",[257,1.377,2841,3.526]],["body/modules/ImportUserModule.html",[3,0.109,4,0.09,5,0.066,14,0.005,15,0.234,19,1.187,22,0.096,31,0.16,145,1.477,172,0.004,173,0.004,257,2.442,259,2.615,260,3.708,268,4.154,269,3.147,270,2.879,272,2.831,273,3.708,286,6.859,295,3.339,323,2.121,822,6.19,921,3.774,1319,3.646,1557,3.933,1824,3.483,1933,3.483,1951,4.449,2420,4.807,2484,4.166,2523,3.933,2543,4.807,2774,7.631,2775,4.449,2841,7.03,2842,6.085,2843,6.767,2844,5.635,2845,6.767,2846,6.085,2847,6.767,2848,6.767,2849,6.767,2850,6.085,2851,5.635,2852,6.085,2853,4.807,2854,5.635]],["title/classes/ImportUserResponse.html",[31,0.122,2823,4.304]],["body/classes/ImportUserResponse.html",[3,0.074,4,0.062,5,0.046,8,0.195,9,0.713,10,1.38,12,0.928,13,0.309,14,0.005,15,0.226,22,0.093,31,0.179,33,0.966,37,2.021,69,0.922,114,0.612,145,2.194,172,0.003,173,0.003,175,1.734,187,0.753,189,0.65,190,0.631,216,2.407,320,3.296,349,2.145,460,2.438,512,2.133,622,3.803,627,3.899,628,3.368,629,1.616,631,2.285,654,2.285,655,3.368,656,3.368,843,1.737,942,2.556,947,3.525,948,3.296,1019,4.028,1020,2.738,1021,3.045,1036,3.045,1037,3.045,1050,2.933,1071,3.163,1174,6.316,1195,5.623,1196,2.333,1788,4.187,1791,4.028,1824,4.775,2119,2.556,2221,5.856,2482,3.102,2483,4.463,2485,2.285,2490,4.577,2491,4.577,2513,5.639,2517,5.639,2523,5.676,2536,4.028,2537,3.703,2538,4.028,2553,2.943,2554,3.045,2555,2.943,2556,3.045,2565,4.864,2566,3.443,2775,6.333,2788,6.316,2795,3.627,2799,5.639,2801,3.857,2804,7.544,2806,5.94,2822,4.165,2823,7.889,2826,4.864,2827,7.24,2828,4.165,2829,4.165,2830,4.165,2831,3.857,2832,3.857,2833,4.165,2834,4.165,2835,4.165,2836,4.165,2837,4.864,2838,5.883,2839,5.883,2840,4.648,2855,4.632,2856,4.632,2857,4.632,2858,4.632,2859,4.632,2860,4.632,2861,4.632,2862,3.857,2863,4.632,2864,4.632]],["title/interfaces/InlineAttachment.html",[0,0.534,241,3.398]],["body/interfaces/InlineAttachment.html",[0,1.053,2,1.941,3,0.109,4,0.09,5,0.066,8,0.285,9,0.918,12,1.017,13,0.217,14,0.004,22,0.096,33,2.056,114,0.546,172,0.004,173,0.004,235,5.535,236,4.616,237,6.304,238,6.728,239,4.616,240,4.616,241,6.025,242,4.616,243,6.541,244,4.616,245,6.025,246,4.449,247,4.616,248,5.535,249,5.743,250,5.743,251,5.535,252,4.765,253,4.449,254,4.616,255,4.616,256,4.616]],["title/modules/InterceptorModule.html",[257,1.377,821,3.842]],["body/modules/InterceptorModule.html",[3,0.11,4,0.092,5,0.068,14,0.005,15,0.225,19,1.207,22,0.098,31,0.163,54,3.681,172,0.004,173,0.004,216,1.748,224,5.387,257,2.266,259,2.659,272,2.878,369,5.404,370,2.505,431,4.759,531,3.621,821,6.323,835,5.236,836,6.863,841,5.802,1020,3.559,1673,4.943,1855,5.591,1923,4.522,1933,4.378,2068,6.66,2865,6.88,2866,7.082,2867,6.323,2868,5.404,2869,9.645,2870,6.323,2871,7.647,2872,8.031,2873,4.371]],["title/injectables/JwtAuthGuard.html",[18,0.972,2874,4.304]],["body/injectables/JwtAuthGuard.html",[3,0.128,4,0.106,5,0.078,14,0.004,15,0.226,18,1.744,19,1.395,22,0.113,31,0.188,33,1.657,172,0.004,173,0.004,275,6.226,300,2.737,2874,7.726,2875,7.951,2876,7.951,2877,7.951,2878,7.951]],["title/interfaces/JwtConstants.html",[0,0.534,281,3.842]],["body/interfaces/JwtConstants.html",[0,0.703,2,1.952,3,0.109,4,0.091,5,0.067,8,0.287,9,0.921,12,0.988,13,0.308,14,0.004,15,0.166,22,0.12,76,2.41,123,2.162,128,1.432,172,0.004,173,0.004,281,7.144,298,3.854,370,2.48,410,4.553,1557,3.957,2481,5.556,2879,6.122,2880,8.884,2881,8.228,2882,7.599,2883,6.809,2884,6.809,2885,6.122,2886,7.037,2887,5.669,2888,5.331,2889,4.837,2890,6.809,2891,6.122,2892,6.122,2893,6.122,2894,6.809,2895,6.122,2896,5.331,2897,5.331,2898,6.809,2899,6.122,2900,6.809,2901,6.122,2902,6.122,2903,6.809,2904,6.809,2905,6.122,2906,6.122]],["title/interfaces/JwtPayload.html",[0,0.534,2907,4.304]],["body/interfaces/JwtPayload.html",[0,0.692,2,1.921,3,0.108,4,0.09,5,0.066,8,0.282,9,0.912,12,1.003,13,0.321,14,0.005,15,0.163,22,0.095,33,1.744,37,2.673,172,0.003,173,0.003,328,1.642,370,3.48,926,4.914,2891,8.591,2892,8.591,2893,8.591,2895,8.591,2896,7.482,2897,7.482,2901,7.522,2902,7.522,2907,6.966,2908,6.699,2909,6.699,2910,7.522]],["title/injectables/JwtStrategy.html",[18,0.972,265,4.047]],["body/injectables/JwtStrategy.html",[3,0.096,4,0.08,5,0.059,8,0.253,13,0.25,14,0.005,15,0.242,18,1.467,19,1.054,22,0.086,31,0.142,33,1.252,35,1.723,69,1.196,71,2.478,74,2.425,76,2.126,77,2.105,78,0.843,114,0.63,128,1.018,129,2.295,145,1.311,148,2.556,149,1.104,172,0.003,173,0.003,182,1.451,187,0.62,189,1.095,190,0.65,199,1.104,205,1.933,265,6.111,266,7.379,267,5.518,275,4.704,279,3.162,281,4.466,282,5.002,284,5.401,300,2.068,327,4.704,329,2.433,370,2.188,371,4.907,416,3.492,508,2.287,585,4.704,1121,3.591,1862,3.591,1982,4.268,1985,4.466,1986,5.002,2428,5.002,2481,3.949,2485,2.964,2867,5.802,2897,6.111,2907,7.642,2911,6.008,2912,6.008,2913,6.008,2914,7.805,2915,6.008,2916,9.178,2917,6.008,2918,5.002,2919,5.401,2920,6.159,2921,6.008,2922,6.008,2923,6.008,2924,6.008,2925,6.008,2926,6.008,2927,6.008,2928,6.008,2929,6.008,2930,6.008,2931,5.401,2932,6.008,2933,6.008,2934,6.008,2935,6.008]],["title/injectables/JwtValidationAdapter.html",[18,0.972,266,3.842]],["body/injectables/JwtValidationAdapter.html",[3,0.092,4,0.077,5,0.056,8,0.241,10,1.9,12,0.981,13,0.242,14,0.004,15,0.184,18,1.422,19,1.005,22,0.082,31,0.135,43,3.453,44,3.518,45,3.165,46,3.331,47,3.518,48,4.075,49,5.923,74,2.692,77,2.43,114,0.611,128,1.282,129,2.224,172,0.003,173,0.003,182,1.406,187,0.601,189,1.061,190,0.63,199,1.39,216,1.455,266,5.623,300,1.971,330,3.518,369,5.725,371,4.282,423,5.385,508,2.18,750,5.374,1178,4.807,1676,4.521,1901,4.282,2428,6.299,2481,5.923,2483,5.16,2484,4.657,2524,5.923,2897,7.892,2910,6.802,2920,7.076,2936,7.616,2937,5.15,2938,7.565,2939,7.565,2940,7.565,2941,5.728,2942,7.565,2943,5.728,2944,7.565,2945,6.299,2946,5.623,2947,7.565,2948,6.802,2949,6.802,2950,5.728,2951,7.565,2952,5.728,2953,5.728,2954,5.728,2955,5.728,2956,5.728,2957,5.728]],["title/modules/LearnroomModule.html",[257,1.377,2958,3.526]],["body/modules/LearnroomModule.html",[3,0.097,4,0.081,5,0.059,14,0.005,15,0.248,19,1.062,22,0.086,31,0.143,172,0.003,173,0.003,257,2.09,259,2.339,260,3.453,267,5.529,268,3.869,269,2.814,270,2.575,272,3.281,273,2.665,279,3.185,576,5.839,577,6.422,583,6.94,660,7.262,666,5.039,920,7.244,921,3.515,934,7.262,935,5.441,1198,7.244,1216,7.262,1217,5.441,1498,6.94,1589,5.829,1933,3.115,2068,4.738,2958,7.291,2959,5.441,2960,5.441,2961,6.051,2962,7.244,2963,6.051,2964,6.051,2965,6.051,2966,5.441,2967,6.051]],["title/entities/Lesson.html",[316,0.876,623,2.661]],["body/entities/Lesson.html",[0,0.668,3,0.104,4,0.086,5,0.064,8,0.378,9,0.892,12,0.853,13,0.288,14,0.005,15,0.219,22,0.117,31,0.153,33,1.347,114,0.785,172,0.003,173,0.003,187,0.713,205,2.079,316,1.386,323,2.026,349,2.076,354,2.995,355,1.566,356,1.831,360,2.937,385,1.949,386,2.052,492,2.165,494,2.618,495,2.424,508,3.114,510,3.114,512,2.107,573,3.243,623,4.211,636,3.064,659,4.249,700,2.288,867,5.061,895,2.618,899,3.567,983,4.63,984,4.889,987,3.327,990,4.249,991,4.249,2571,6.405,2572,5.812,2573,6.434,2574,5.382,2575,7.355,2576,5.812,2968,6.464,2969,6.464,2970,6.464,2971,6.464]],["title/classes/LessonFactory.html",[31,0.122,2972,4.304]],["body/classes/LessonFactory.html",[3,0.071,4,0.059,5,0.043,8,0.186,9,0.69,10,1.559,12,0.602,13,0.322,14,0.004,15,0.18,22,0.063,31,0.104,33,1.32,37,2.151,45,2.649,54,1.914,69,0.88,71,2.01,78,0.62,114,0.769,128,0.749,168,1.881,172,0.003,173,0.003,175,1.011,182,1.177,187,0.778,189,1.387,190,0.779,192,5.037,199,1.72,211,2.057,216,1.878,316,1.448,320,3.189,323,1.984,328,1.084,367,3.806,385,2.23,386,2.563,391,7.138,393,7.084,395,3.287,397,5.647,398,6.001,399,4.706,400,5.763,401,4.706,402,4.706,403,4.497,404,2.374,405,4.905,406,5.497,407,6.649,408,5.827,410,3.41,412,4.706,413,3.287,414,4.706,416,4.298,417,4.698,418,4.569,419,4.552,420,3.259,421,4.706,422,3.287,423,2.643,424,3.141,425,4.965,426,3.287,427,3.287,428,3.287,429,6.958,431,3.648,432,3.435,433,3.287,435,3.287,437,2.907,438,3.287,439,6.062,441,3.287,442,4.706,443,4.706,445,3.287,446,3.287,447,3.287,449,4.497,451,3.287,453,3.287,454,3.784,573,2.906,623,3.259,951,3.462,954,3.462,957,3.462,958,3.462,959,3.462,960,3.462,961,3.462,962,3.462,963,3.462,964,3.462,965,3.462,966,3.462,969,3.462,2571,3.462,2972,6.157,2973,3.976,2974,4.422,2975,3.976,2976,5.692,2977,3.976]],["title/injectables/LessonRepo.html",[18,0.972,2978,3.842]],["body/injectables/LessonRepo.html",[3,0.104,4,0.087,5,0.064,8,0.274,13,0.303,14,0.005,15,0.23,18,1.544,19,1.141,22,0.093,31,0.154,69,1.295,71,2.064,74,2.518,77,2.215,78,0.912,114,0.663,128,1.391,129,2.414,149,1.195,172,0.003,173,0.003,182,1.526,187,0.652,189,1.152,190,0.683,199,1.195,300,2.238,308,3.082,328,1.594,329,2.633,355,1.576,357,2.915,410,4.423,432,2.766,492,2.177,535,3.886,536,4.976,538,4.051,573,2.064,600,5.718,623,4.226,659,5.398,700,2.301,1000,4.435,1001,3.886,1002,4.647,1112,3.819,1137,5.091,2573,4.435,2574,6.837,2978,6.104,2979,6.502,2980,6.502,2981,8.211,2982,6.502,2983,6.837,2984,6.502,2985,6.502,2986,6.502,2987,6.502,2988,6.502]],["title/classes/LessonScope.html",[31,0.122,2983,4.304]],["body/classes/LessonScope.html",[3,0.1,4,0.083,5,0.061,8,0.262,9,0.871,13,0.308,14,0.005,15,0.195,22,0.089,31,0.147,33,1.666,35,2.669,78,1.121,114,0.712,168,2.652,172,0.003,173,0.003,175,1.425,182,1.485,187,0.765,189,1.238,190,0.734,192,4.542,199,1.621,308,3.034,328,1.528,385,1.879,386,1.979,492,2.955,573,1.979,623,3.208,930,2.899,1000,5.452,1112,4.657,1116,5.942,1143,5.942,1144,5.942,1148,5.942,1149,4.428,1150,4.881,1151,5.8,1152,4.881,1157,4.634,1158,5.678,1159,4.881,2573,4.252,2983,8.199,2989,8.824,2990,5.19,2991,7.187,2992,7.993,2993,7.187,2994,6.233,2995,7.993,2996,6.233,2997,7.993,2998,5.604]],["title/injectables/Logger.html",[18,0.972,840,2.926]],["body/injectables/Logger.html",[3,0.11,4,0.091,5,0.067,14,0.005,15,0.206,18,1.591,19,1.197,22,0.097,31,0.161,33,1.764,172,0.004,173,0.004,182,1.268,300,2.348,326,4.485,330,3.936,372,2.808,385,2.057,408,4.654,416,3.966,773,3.512,814,3.676,840,5.596,897,4.67,1020,3.541,1112,3.936,1901,3.862,1930,3.437,2003,5.346,2044,5.681,2079,4.2,2132,4.847,2161,4.654,2250,4.485,2272,5.342,2337,6.832,2579,6.534,2999,6.823,3000,9.617,3001,6.823,3002,6.823,3003,5.072,3004,5.681,3005,5.681,3006,4.654,3007,7.608,3008,5.072,3009,6.823,3010,6.823,3011,5.072,3012,6.135,3013,4.654,3014,6.823,3015,6.823,3016,6.823]],["title/modules/LoggerModule.html",[257,1.377,822,3.182]],["body/modules/LoggerModule.html",[3,0.119,4,0.099,5,0.073,14,0.004,15,0.217,19,1.304,22,0.106,31,0.176,172,0.004,173,0.004,257,2.376,259,2.873,260,3.927,268,4.399,269,3.458,270,3.163,272,3.731,295,4.399,822,6.401,840,6.053,3017,6.685,3018,6.685,3019,6.685,3020,7.435,3021,7.435]],["title/interfaces/Mail.html",[0,0.534,252,2.926]],["body/interfaces/Mail.html",[0,1.035,2,1.798,3,0.101,4,0.084,5,0.062,8,0.264,9,0.874,12,1.025,13,0.316,14,0.005,22,0.089,33,1.944,114,0.506,172,0.003,173,0.003,190,0.845,235,5.274,236,4.276,237,5.816,238,5.472,239,4.276,240,4.276,241,5.274,242,4.276,243,4.276,244,4.276,245,5.816,246,4.121,247,4.276,248,6.131,249,5.472,250,5.472,251,6.131,252,5.581,253,6.131,254,6.362,255,6.362,256,6.362]],["title/interfaces/MailAttachment.html",[0,0.534,237,3.398]],["body/interfaces/MailAttachment.html",[0,1.049,2,1.906,3,0.107,4,0.089,5,0.065,8,0.28,9,0.907,12,1.024,13,0.291,14,0.005,22,0.095,33,1.986,114,0.769,172,0.003,173,0.003,235,5.472,236,4.533,237,6.263,238,5.678,239,6.499,240,6.499,241,5.472,242,4.533,243,4.533,244,4.533,245,5.975,246,4.368,247,4.533,248,5.472,249,5.678,250,5.678,251,5.472,252,4.711,253,4.368,254,4.533,255,4.533,256,4.533]],["title/interfaces/MailContent.html",[0,0.534,245,3.398]],["body/interfaces/MailContent.html",[0,1.049,2,1.909,3,0.107,4,0.089,5,0.065,8,0.28,9,0.908,12,1.016,13,0.267,14,0.005,22,0.095,33,1.987,114,0.537,172,0.003,173,0.003,190,0.694,235,6.268,236,4.542,237,5.981,238,5.685,239,4.542,240,4.542,241,6.268,242,4.542,243,4.542,244,4.542,245,6.268,246,6.268,247,6.503,248,5.479,249,5.685,250,5.685,251,5.479,252,4.717,253,4.377,254,4.542,255,4.542,256,4.542]],["title/modules/MailModule.html",[257,1.377,3022,3.672]],["body/modules/MailModule.html",[0,0.672,3,0.104,4,0.087,5,0.064,12,0.855,13,0.288,14,0.005,15,0.219,19,1.141,22,0.093,24,5.217,31,0.154,72,3.616,78,1.152,114,0.663,128,1.391,172,0.003,173,0.003,182,1.208,187,0.517,189,0.912,190,0.541,199,1.195,257,2.398,259,2.513,272,2.72,273,2.863,295,3.208,404,3.079,1933,3.347,1934,4.274,2053,4.833,2054,5.398,2057,5.718,3022,6.393,3023,5.091,3024,7.871,3025,6.502,3026,7.493,3027,4.833,3028,4.274,3029,6.69,3030,5.846,3031,5.601,3032,5.601,3033,6.429,3034,5.414,3035,5.414,3036,5.414,3037,5.414,3038,6.837,3039,5.091,3040,5.414,3041,5.846,3042,5.846,3043,5.846]],["title/interfaces/MailModuleOptions.html",[0,0.534,3024,4.304]],["body/interfaces/MailModuleOptions.html",[0,0.662,2,1.839,3,0.103,4,0.086,5,0.063,8,0.27,9,0.887,12,0.978,13,0.311,14,0.005,15,0.218,19,1.125,22,0.091,24,6.168,31,0.152,72,2.825,78,1.142,114,0.518,128,1.379,172,0.003,173,0.003,257,2.383,272,2.684,273,2.825,295,3.164,404,2.405,1933,3.302,1934,4.216,2054,4.216,2057,5.172,3022,5.783,3023,5.022,3024,7.446,3026,7.446,3027,4.768,3028,4.216,3029,6.647,3030,5.767,3031,6.622,3032,6.622,3033,6.374,3034,5.341,3035,5.341,3036,5.341,3037,5.341,3038,6.778,3039,5.022,3040,5.341,3041,5.767,3042,5.767,3043,5.767]],["title/injectables/MailService.html",[18,0.972,3029,3.842]],["body/injectables/MailService.html",[0,0.69,3,0.107,4,0.089,5,0.066,8,0.282,12,0.794,13,0.268,14,0.005,15,0.222,17,3.784,18,1.571,19,1.173,22,0.095,31,0.158,35,2.396,69,1.664,71,2.653,72,4.014,73,5.611,74,2.55,77,2.254,114,0.674,123,2.123,129,1.966,172,0.003,173,0.003,182,1.553,187,0.664,189,1.172,190,0.696,199,1.228,252,5.404,300,2.301,1020,3.496,3027,4.97,3028,4.395,3029,6.211,3031,4.56,3032,4.56,3044,6.011,3045,7.512,3046,6.686,3047,9.014,3048,7.95,3049,6.686,3050,7.512,3051,6.686,3052,6.011,3053,6.011,3054,6.011,3055,6.011,3056,5.567]],["title/interfaces/MailServiceOptions.html",[0,0.534,3048,4.304]],["body/interfaces/MailServiceOptions.html",[0,0.723,2,2.006,3,0.112,4,0.093,5,0.069,8,0.295,9,0.937,12,0.963,13,0.275,14,0.005,15,0.227,17,3.96,18,1.616,19,1.227,22,0.1,31,0.165,35,2.464,69,1.393,71,2.728,72,3.081,73,4.307,74,1.957,77,1.887,123,2.221,129,2.057,172,0.004,173,0.004,252,4.864,1020,2.927,3027,5.2,3028,4.599,3029,5.2,3031,6.617,3032,6.617,3044,6.29,3047,8.363,3048,7.745,3050,6.29,3052,6.29,3053,6.29,3054,6.29,3055,6.29,3056,5.825]],["title/modules/ManagementModule.html",[257,1.377,3057,3.842]],["body/modules/ManagementModule.html",[3,0.089,4,0.074,5,0.055,12,0.529,13,0.178,14,0.005,15,0.25,19,0.976,22,0.079,31,0.131,43,2.54,44,2.588,45,2.328,46,2.45,47,2.588,78,0.781,118,3.658,138,3.658,139,3.426,140,3.658,145,1.214,149,1.022,172,0.003,173,0.003,257,2.225,259,2.15,260,3.268,268,3.661,269,2.588,270,2.367,272,3.494,273,3.268,323,1.744,328,1.364,355,1.798,356,1.576,370,2.026,742,6.78,756,3.426,797,6.274,801,3.149,921,3.327,1294,3.658,1649,3.536,1650,5.811,1656,6.274,1670,4.357,1671,4.357,1690,6.952,1716,7.095,1720,6.51,1823,4.633,1824,2.864,1825,4.136,1826,4.633,1930,2.803,2130,3.234,2278,7.095,2326,5.811,2327,5.811,2328,5.811,3057,7.792,3058,5.003,3059,5.564,3060,5.003,3061,5.564,3062,4.136,3063,4.136,3064,5.811,3065,5.811,3066,5.517,3067,5.003,3068,5.564,3069,5.564,3070,5.564,3071,5.564,3072,5.564,3073,4.357,3074,5.564,3075,4.357,3076,3.953,3077,4.357,3078,5.811,3079,4.357,3080,4.357,3081,5.564]],["title/modules/MongoMemoryDatabaseModule.html",[257,1.377,3082,3.526]],["body/modules/MongoMemoryDatabaseModule.html",[3,0.082,4,0.068,5,0.05,13,0.224,14,0.005,15,0.232,17,3.961,19,0.895,22,0.123,31,0.121,35,2.291,69,1.016,71,1.62,72,3.785,74,2.52,77,2.154,78,1.206,114,0.412,128,1.577,129,2.648,172,0.003,173,0.003,182,0.948,187,0.556,189,0.716,190,0.425,199,1.286,257,2.29,259,1.972,272,2.135,273,2.247,295,2.517,323,1.599,328,1.251,355,1.696,356,1.445,358,3.995,370,1.858,404,2.624,423,4.183,432,2.171,457,3.354,470,2.135,756,5.545,835,3.141,875,2.888,897,2.816,1733,3.48,1923,3.354,1930,3.525,1933,3.602,2053,3.793,2054,4.601,2057,5.462,2141,2.888,2383,3.48,2946,3.793,3013,3.48,3062,6.39,3063,3.793,3066,5.202,3076,4.971,3082,5.449,3083,6.651,3084,6.768,3085,7.182,3086,4.587,3087,6.73,3088,5.102,3089,9.007,3090,5.102,3091,6.292,3092,6.292,3093,7.182,3094,8.365,3095,5.102,3096,6.292,3097,4.587,3098,6.292,3099,4.587,3100,4.587,3101,4.587,3102,4.248,3103,3.624,3104,3.793,3105,3.995,3106,4.248,3107,3.793,3108,4.587,3109,4.248,3110,4.248,3111,4.587,3112,4.587,3113,4.587,3114,4.587,3115,4.587,3116,4.587,3117,5.102,3118,3.624,3119,5.102,3120,4.587,3121,6.998,3122,6.292,3123,3.48,3124,3.995,3125,4.587,3126,5.102,3127,5.102]],["title/classes/MoveElementParams.html",[31,0.122,1205,4.047]],["body/classes/MoveElementParams.html",[3,0.111,4,0.092,5,0.068,8,0.291,9,0.929,13,0.273,14,0.004,15,0.208,22,0.122,31,0.219,37,2.465,112,3.408,143,3.722,172,0.004,173,0.004,175,1.579,187,0.678,216,1.755,349,1.972,627,4.084,628,4.389,629,2.411,722,2.939,770,4.129,1030,4.129,1194,6.058,1196,3.48,1200,3.636,1205,6.677,1210,4.129,1268,5.25,1309,4.39,1339,5.135,2475,4.907,3128,6.211,3129,8.262,3130,8.527,3131,6.908,3132,6.908,3133,8.317,3134,8.685,3135,5.752,3136,7.702,3137,5.752]],["title/classes/MoveElementPosition.html",[31,0.122,3129,4.304]],["body/classes/MoveElementPosition.html",[3,0.105,4,0.087,5,0.064,8,0.275,9,0.898,13,0.289,14,0.004,15,0.201,22,0.117,31,0.213,37,2.657,112,4.066,143,4.861,172,0.003,173,0.003,175,1.495,187,0.717,190,0.686,216,2.094,349,2.087,627,4.019,628,4.242,629,2.283,722,3.506,770,4.926,1030,4.926,1194,5.854,1196,3.295,1200,4.338,1205,5.121,1210,5.393,1268,5.832,1309,5.237,1339,6.708,2475,5.854,3128,5.881,3129,7.888,3133,8.113,3134,8.517,3135,5.446,3136,7.513,3137,6.862,3138,6.541,3139,6.541,3140,8.241,3141,6.541,3142,6.541]],["title/entities/News.html",[316,0.876,1062,2.276]],["body/entities/News.html",[0,0.387,3,0.06,4,0.107,5,0.037,8,0.158,9,0.612,10,1.184,12,0.928,13,0.318,14,0.005,15,0.218,22,0.114,31,0.176,33,1.556,43,3.07,44,3.128,45,2.814,46,2.961,47,3.128,48,3.623,78,0.526,114,0.602,123,1.191,145,1.897,149,1.236,172,0.002,173,0.002,181,2.847,187,0.76,190,0.744,205,1.207,308,2.433,309,4.225,310,3.842,312,3.015,316,1.354,323,1.176,331,2.665,349,2.152,354,3.071,355,0.909,356,1.063,360,2.015,367,3.462,372,2.768,381,2.107,385,1.131,386,1.191,404,1.407,460,1.975,487,3.717,494,1.52,495,1.407,498,1.624,502,2.885,504,2.31,505,2.954,506,4.273,510,3.192,512,1.223,523,2.124,573,1.782,582,3.759,644,2.31,649,1.713,843,3.49,855,4.273,856,2.828,875,2.124,876,2.181,903,2.384,983,2.124,987,1.931,1046,2.384,1047,2.789,1048,4.499,1050,3.015,1051,2.828,1052,2.789,1053,4.743,1054,2.789,1055,4.777,1056,4.021,1057,5.549,1058,4.019,1059,4.273,1060,4.907,1061,5.253,1062,4.465,1063,3.829,1064,4.172,1065,4.743,1066,4.172,1067,4.172,1068,3.098,1069,3.829,1070,3.987,1071,2.714,1072,3.829,1073,3.567,1074,3.987,1075,4.021,1076,3.567,1077,4.172,1078,2.466,1079,2.789,1080,2.559,1081,2.789,1082,2.31,1083,2.789,1084,2.789,1085,2.789,1086,2.789,1087,2.559,1088,2.789,1089,2.559,1090,2.789,1091,2.789,1092,4.172,1093,4.019,1094,2.789,1095,4.172,1096,2.789,1097,2.789,1098,2.466,1099,2.466,1100,2.789,3143,3.752,3144,3.752,3145,3.752,3146,3.752,3147,3.752,3148,3.752,3149,3.752,3150,3.752,3151,3.752,3152,3.752,3153,3.752,3154,3.752]],["title/controllers/NewsController.html",[919,2.163,3155,4.304]],["body/controllers/NewsController.html",[3,0.064,4,0.053,5,0.039,8,0.167,9,0.638,10,1.235,12,0.882,13,0.262,14,0.005,15,0.221,19,0.697,22,0.057,31,0.094,38,3.155,40,2.889,71,1.261,74,2.781,77,2.545,78,1.148,114,0.661,127,4.419,128,1.599,129,2.406,145,1.984,146,2.822,149,0.73,172,0.002,173,0.002,182,1.088,187,0.65,189,1.148,190,0.681,199,1.504,316,0.992,328,0.974,329,1.609,330,2.723,349,1.893,405,4.408,629,1.386,631,1.96,722,3.768,843,2.879,919,1.662,921,1.781,923,2.374,926,5.392,927,4.877,929,6.232,930,3.235,931,2.611,932,2.524,933,2.611,940,2.611,1002,3.314,1051,2.95,1062,4.458,1068,3.232,1072,3.994,1102,6.253,1112,3.807,1129,4.236,1169,5.706,1214,3.307,1215,5.38,1225,5.446,1229,6.084,1708,5.17,1791,3.605,1854,3.721,1874,4.461,1881,5.841,2128,2.709,2237,5.046,2725,2.822,2779,4.941,2782,3.307,2931,5.265,3155,4.876,3156,3.972,3157,6.084,3158,3.972,3159,3.972,3160,3.972,3161,5.856,3162,3.972,3163,7.699,3164,5.706,3165,3.972,3166,4.876,3167,3.972,3168,5.856,3169,3.972,3170,5.265,3171,5.856,3172,3.972,3173,6.01,3174,5.856,3175,3.972,3176,4.744,3177,3.571,3178,2.822,3179,2.953,3180,3.11,3181,3.571,3182,3.571,3183,3.972,3184,3.571,3185,3.571,3186,3.571,3187,3.571,3188,6.391,3189,3.307,3190,3.571,3191,3.571,3192,3.571,3193,3.571,3194,3.571,3195,3.307,3196,3.972,3197,3.972,3198,3.972,3199,3.972,3200,5.856,3201,3.972]],["title/classes/NewsFilterQuery.html",[31,0.122,3164,3.842]],["body/classes/NewsFilterQuery.html",[3,0.098,4,0.081,5,0.06,8,0.256,9,0.858,10,1.659,12,0.876,13,0.28,14,0.004,15,0.225,22,0.087,31,0.186,40,3.883,128,1.031,172,0.003,173,0.003,175,1.391,187,0.693,190,0.814,216,2.426,309,4.812,310,4.49,311,5.37,328,1.492,349,2.017,492,2.635,600,5.001,628,4.747,629,2.123,654,3.002,655,4.051,656,4.051,1048,4.459,1050,2.728,1062,4.308,1182,5.368,1185,5.86,1188,6.484,1189,6.162,1190,5.001,1194,6.552,1195,5.368,1196,3.065,1197,4.322,2479,5.95,2805,4.764,2817,7.076,2826,5.85,3164,5.85,3202,8.292,3203,6.085,3204,5.85,3205,7.076,3206,6.085,3207,6.085,3208,6.085,3209,6.085,3210,7.87,3211,6.085,3212,6.085,3213,7.076,3214,6.085,3215,6.085]],["title/classes/NewsListResponse.html",[31,0.122,3178,3.672]],["body/classes/NewsListResponse.html",[3,0.068,4,0.117,5,0.041,8,0.177,9,0.666,10,1.844,12,0.878,13,0.302,14,0.005,15,0.213,22,0.087,31,0.144,33,1.275,37,2.675,40,2.079,69,1.217,114,0.581,128,1.22,145,1.723,172,0.003,173,0.003,175,0.963,181,2.68,187,0.666,189,0.591,190,0.698,192,4.064,216,2.566,309,3.625,310,3.147,311,4.43,312,3.539,316,1.642,320,2.123,328,1.033,349,1.826,380,3.788,381,2.255,383,3.704,420,2.169,432,2.602,487,3.347,522,2.594,573,1.338,582,3.539,627,4.103,628,4.064,629,1.471,631,2.079,635,1.96,637,2.875,638,2.875,644,2.594,649,1.924,654,3.017,655,3.147,656,3.147,699,5.19,700,1.492,843,3.279,902,2.678,942,4.626,947,4.71,948,4.405,1019,5.553,1020,3.507,1021,4.02,1024,3.3,1025,3.3,1026,3.3,1036,2.77,1037,2.77,1048,4.361,1050,2.741,1051,2.123,1056,3.877,1058,2.519,1059,2.678,1060,4.731,1061,4.731,1062,4.267,1071,2.956,1080,2.875,1087,2.875,1089,2.875,1177,2.77,1178,2.678,1179,3.3,1180,3.133,1185,3.885,1188,4.545,1189,3.3,1190,2.678,1197,2.994,1392,2.77,1797,3.133,2250,2.77,2421,3.509,2601,3.3,3157,3.133,3178,4.344,3179,6.869,3216,3.3,3217,4.214,3218,4.214,3219,4.545,3220,5.992,3221,4.545,3222,5.35,3223,5.091,3224,5.091,3225,3.789,3226,3.789,3227,3.789,3228,3.789,3229,3.789,3230,3.509,3231,3.3,3232,5.091]],["title/classes/NewsMapper.html",[31,0.122,3180,4.047]],["body/classes/NewsMapper.html",[3,0.082,4,0.094,5,0.05,8,0.215,10,1.077,13,0.276,14,0.005,15,0.22,22,0.073,31,0.121,78,1.207,114,0.694,128,1.615,145,1.115,149,0.939,172,0.003,173,0.003,175,1.168,181,2.714,182,1.302,187,0.684,189,1.207,190,0.716,199,1.58,309,4.027,310,4.115,311,4.922,312,2.291,328,1.253,380,2.69,383,2.63,404,3.803,405,3.606,487,3.258,582,3.584,662,4.313,722,4.13,843,2.998,930,3.258,1009,3.486,1048,4.158,1056,4.307,1060,3.359,1062,3.968,1169,6.394,1233,6.299,2467,5.943,2476,5.943,2478,6.394,2479,3.486,3164,6.394,3173,6.735,3179,6.394,3180,5.485,3233,5.11,3234,7.006,3235,7.006,3236,7.006,3237,7.006,3238,5.11,3239,7.006,3240,5.11,3241,7.006,3242,5.11,3243,7.006,3244,5.11,3245,4.255,3246,7.994,3247,4.255,3248,4.255,3249,5.11,3250,5.11,3251,5.11,3252,4.594,3253,5.11,3254,5.11,3255,4.594,3256,5.11,3257,5.11,3258,4.594,3259,4.594,3260,5.11,3261,5.11,3262,4.594,3263,5.11,3264,5.11,3265,5.11,3266,7.006,3267,5.11,3268,5.11,3269,5.11,3270,5.11,3271,7.006,3272,7.006,3273,5.11,3274,5.11]],["title/modules/NewsModule.html",[257,1.377,3275,3.526]],["body/modules/NewsModule.html",[3,0.101,4,0.084,5,0.062,14,0.005,15,0.245,19,1.108,22,0.09,31,0.149,172,0.003,173,0.003,257,2.148,259,2.441,260,3.55,268,3.977,269,2.938,270,2.687,272,3.373,273,3.55,279,3.325,286,6.74,295,3.977,365,3.671,822,6.083,921,3.614,1733,4.308,1951,4.152,2420,4.487,2846,5.679,2850,7.248,3155,7.788,3157,4.695,3176,7.143,3177,5.679,3275,7.176,3276,5.679,3277,6.316,3278,5.679,3279,5.679,3280,7.019,3281,6.316,3282,7.393,3283,6.316,3284,6.316,3285,6.316,3286,6.316,3287,4.487,3288,4.308,3289,6.316,3290,6.316,3291,6.316,3292,4.695]],["title/injectables/NewsRepo.html",[18,0.972,3280,3.672]],["body/injectables/NewsRepo.html",[3,0.059,4,0.049,5,0.036,8,0.155,9,0.604,10,1.168,13,0.306,14,0.005,15,0.211,18,1.041,19,0.647,22,0.053,31,0.087,33,1.154,35,1.908,72,4.005,74,2.816,77,2.537,78,0.933,114,0.759,128,1.541,129,2.614,149,0.677,168,2.356,172,0.002,173,0.002,182,1.029,187,0.766,189,1.32,190,0.783,192,4.681,199,1.751,300,1.268,308,2.412,316,1.254,320,3.351,323,2.318,328,0.904,330,3.094,355,1.342,356,1.044,385,1.111,386,1.17,425,5.819,432,2.356,487,2.576,492,2.228,504,4.554,524,6.501,526,5.209,527,3.519,528,4.336,529,4.336,530,3.934,531,2.915,532,4.336,533,4.336,534,4.336,540,2.618,542,2.886,544,2.886,546,2.618,548,2.886,550,2.886,552,2.886,554,2.886,570,4.083,749,4.117,786,5.255,843,3.124,875,2.086,930,2.576,1001,2.203,1002,3.134,1046,4.227,1048,4.397,1061,3.641,1062,4.244,1072,5.046,1098,4.374,1099,4.374,1105,5.681,1111,4.336,1112,2.576,1129,3.056,1130,3.134,1135,2.618,1151,4.863,1173,3.409,1677,2.203,2111,4.946,2141,3.134,2294,5.982,2302,3.068,2303,3.068,2304,3.068,2305,3.068,2306,3.068,2307,3.068,2308,3.068,2309,3.068,2310,3.068,2319,4.946,2321,4.979,2479,5.046,2779,4.726,3204,2.739,3280,3.934,3293,3.685,3294,5.538,3295,4.979,3296,3.685,3297,5.499,3298,3.685,3299,5.538,3300,3.685,3301,7.398,3302,7.398,3303,4.979,3304,3.685,3305,3.685,3306,3.685,3307,3.685,3308,4.611,3309,3.685,3310,3.685,3311,5.538,3312,3.685,3313,5.538,3314,3.685,3315,3.685,3316,5.538,3317,3.685,3318,3.685,3319,3.068,3320,3.685,3321,2.739,3322,2.269,3323,6.653,3324,3.685,3325,3.685,3326,3.685]],["title/classes/NewsResponse.html",[31,0.122,3179,3.842]],["body/classes/NewsResponse.html",[3,0.056,4,0.122,5,0.034,8,0.147,9,0.58,10,1.959,12,0.931,13,0.323,14,0.005,15,0.199,22,0.076,31,0.126,33,0.729,37,1.718,40,2.627,69,1.06,114,0.626,128,1.092,145,1.853,172,0.002,173,0.002,175,0.8,181,2.882,187,0.779,189,0.491,190,0.707,216,2.551,309,3.905,310,3.318,311,4.773,312,3.806,316,1.717,320,2.682,328,0.858,349,2.248,380,4.08,381,2.559,383,3.99,420,2.741,487,3.606,522,2.154,573,1.691,582,3.806,619,1.931,622,5.313,627,3.966,628,3.709,629,1.221,631,1.726,635,1.627,637,2.386,638,2.386,644,2.154,649,1.597,654,3.18,655,3.709,656,3.709,843,3.428,902,2.223,942,1.931,947,2.868,948,2.682,1019,3.278,1020,2.228,1021,2.3,1036,2.3,1037,2.3,1048,4.556,1050,2.89,1051,2.682,1056,4.176,1058,2.091,1059,2.223,1060,5.096,1061,5.096,1062,4.462,1071,3.483,1080,2.386,1087,2.386,1089,2.386,1177,3.5,1178,3.383,1179,4.169,1180,3.958,1185,4.578,1188,4.792,1189,4.169,1190,3.383,1197,2.485,1392,2.3,1797,3.958,2250,3.5,2421,4.434,2601,2.739,2862,4.434,3157,3.958,3178,2.485,3179,6.504,3216,2.739,3219,4.792,3220,5.367,3221,4.792,3222,5.763,3223,5.367,3224,5.367,3225,3.146,3226,3.146,3227,3.146,3228,3.146,3229,3.146,3230,4.434,3231,4.169,3232,5.999,3327,3.499,3328,3.499,3329,3.499,3330,3.499,3331,3.499,3332,3.499,3333,3.499,3334,3.499,3335,3.499,3336,3.499,3337,3.499,3338,3.499,3339,2.739,3340,3.499,3341,3.499,3342,3.499,3343,3.499,3344,3.499,3345,3.499]],["title/classes/NewsScope.html",[31,0.122,3308,4.304]],["body/classes/NewsScope.html",[3,0.089,4,0.074,5,0.054,8,0.233,9,0.806,13,0.297,14,0.005,15,0.226,22,0.079,31,0.131,33,1.542,35,2.549,78,1.168,114,0.672,128,1.253,149,1.017,168,2.355,172,0.003,173,0.003,175,1.266,182,1.375,187,0.736,189,1.168,190,0.693,192,4.287,199,1.53,309,2.789,314,3.518,328,1.357,355,1.342,356,1.568,381,1.735,385,1.669,386,1.758,470,2.316,492,2.789,930,4.134,949,2.982,1048,2.677,1056,2.982,1062,3.257,1112,4.526,1116,5.498,1119,5.292,1143,5.498,1144,5.498,1148,5.498,1149,3.933,1150,4.335,1151,6.089,1152,4.335,1157,4.116,1158,5.254,1159,4.335,1318,2.982,1677,3.309,2043,3.776,2111,4.116,2116,4.978,2315,4.61,2479,5.045,2990,4.61,3297,6.608,3308,7.936,3346,7.488,3347,7.396,3348,7.396,3349,7.396,3350,5.536,3351,7.396,3352,5.536,3353,4.61,3354,5.498,3355,5.536,3356,5.536,3357,5.536,3358,7.396,3359,5.536,3360,5.536,3361,5.536,3362,5.536,3363,5.536]],["title/interfaces/NewsTargetFilter.html",[0,0.534,3297,3.842]],["body/interfaces/NewsTargetFilter.html",[0,0.791,2,2.196,3,0.123,4,0.102,5,0.075,8,0.322,9,0.989,13,0.291,14,0.004,15,0.187,22,0.109,172,0.004,173,0.004,308,3.26,309,5.038,310,5.148,328,1.878,1048,3.702,2115,8.328,3297,6.746,3346,6.885,3364,7.658]],["title/injectables/NewsUc.html",[18,0.972,3176,3.526]],["body/injectables/NewsUc.html",[3,0.043,4,0.035,5,0.026,8,0.112,9,0.467,10,1.779,12,0.512,13,0.282,14,0.005,15,0.177,18,0.805,19,0.465,22,0.038,31,0.063,35,2.661,40,1.308,43,1.21,44,1.233,45,1.109,46,1.168,54,2.332,69,0.528,72,3.198,74,2.749,76,3.51,77,2.445,78,1.184,114,0.681,128,1.602,129,2.841,145,1.585,149,0.99,172,0.002,173,0.002,182,0.796,187,0.686,189,1.184,190,0.702,199,1.665,216,0.674,279,1.396,292,5.024,300,0.913,308,3.342,309,4.25,310,3.185,311,4.705,312,4.006,328,0.65,329,1.074,330,4.216,381,1.939,385,2.048,386,1.711,404,2.021,405,4.229,432,1.822,460,2.254,470,1.109,487,1.233,492,1.805,531,1.396,700,1.907,762,1.809,840,3.502,843,0.994,856,3.421,1001,1.585,1048,3.283,1056,4.285,1062,4.483,1068,4.39,1069,2.922,1105,4.067,1112,3.7,1129,1.463,1166,1.743,1168,2.076,1182,4.22,1190,1.685,1197,1.883,1296,1.971,1547,3.043,1678,1.541,1862,1.585,1874,2.489,1881,2.922,1951,1.743,1953,2.384,1980,2.384,1981,2.384,2084,3.851,2093,3.851,2111,5.682,2115,3.566,2119,2.974,2141,2.424,2201,2.076,2250,1.743,2337,3.828,2467,4.599,2476,4.599,2478,5.682,2479,4.632,2484,2.637,3008,3.184,3157,4.006,3176,2.922,3189,3.566,3252,2.384,3255,2.384,3258,5.563,3259,5.563,3262,3.851,3280,5.16,3297,3.184,3365,2.384,3366,4.283,3367,4.283,3368,4.283,3369,4.283,3370,5.389,3371,2.651,3372,4.283,3373,4.283,3374,2.651,3375,4.283,3376,2.651,3377,4.283,3378,2.651,3379,4.283,3380,5.389,3381,4.845,3382,3.828,3383,4.283,3384,2.651,3385,4.283,3386,2.651,3387,2.651,3388,4.283,3389,2.651,3390,3.354,3391,2.651,3392,5.389,3393,2.651,3394,4.283,3395,2.651,3396,2.651,3397,3.566,3398,5.152,3399,2.651,3400,2.384,3401,2.651,3402,6.187,3403,2.651,3404,4.283,3405,2.651,3406,4.283,3407,2.651,3408,5.563,3409,2.651,3410,2.651,3411,2.651,3412,4.283,3413,4.283,3414,2.651,3415,2.651,3416,4.283,3417,2.651,3418,2.651,3419,5.389,3420,2.651,3421,4.283,3422,2.651,3423,2.651,3424,2.651,3425,2.651,3426,2.651,3427,2.651,3428,2.384,3429,4.283,3430,2.651,3431,2.651,3432,2.651,3433,4.283,3434,2.651,3435,2.651,3436,2.651,3437,2.651,3438,2.651]],["title/interfaces/Options.html",[0,0.534,72,2.276]],["body/interfaces/Options.html",[0,0.572,2,1.588,3,0.089,4,0.074,5,0.054,8,0.233,9,0.806,12,0.791,13,0.237,14,0.005,15,0.203,22,0.127,31,0.131,35,1.588,72,4.197,74,2.069,77,1.995,78,1.038,123,1.758,128,1.649,129,2.174,172,0.003,173,0.003,190,0.771,216,2.421,269,2.575,329,2.242,492,2.789,502,3.683,503,2.789,508,3.17,700,2.948,797,4.862,799,4.116,801,5.031,802,4.61,811,2.677,1020,2.316,1557,3.218,1650,4.335,1651,4.978,1652,4.978,1656,5.475,1658,4.61,1659,4.978,1661,4.298,1662,6.913,1663,5.498,1665,4.978,1666,5.498,1668,6.77,1669,4.61,1670,4.335,1671,4.335,1672,6.501,1673,4.299,1674,7.488,1675,5.254,1676,4.978,1677,5.313,1678,4.299,1679,6.65,1680,6.65,1681,4.978,1682,6.158,1683,6.65,1684,6.65,1685,4.61,1686,3.518,1687,5.791,1688,4.978,1689,4.978]],["title/classes/PaginationQuery.html",[31,0.122,927,3.284]],["body/classes/PaginationQuery.html",[3,0.108,4,0.09,5,0.066,8,0.282,9,0.912,13,0.268,14,0.004,15,0.204,22,0.095,31,0.198,37,2.673,172,0.003,173,0.003,175,1.531,187,0.665,190,0.795,216,2.125,349,1.935,385,2.523,386,2.656,470,3.5,570,4.617,628,4.696,629,2.338,927,5.316,947,4.914,948,4.954,1181,6.966,1196,3.375,1318,4.507,2434,7.522,3135,5.578,3136,5.578,3439,6.699,3440,7.956,3441,6.699,3442,4.862,3443,8.366,3444,8.366,3445,8.366,3446,6.699,3447,6.699,3448,7.522,3449,6.699,3450,9.123,3451,6.699,3452,6.699,3453,6.699]],["title/classes/PaginationResponse.html",[31,0.122,1019,3.182]],["body/classes/PaginationResponse.html",[3,0.102,4,0.085,5,0.062,8,0.267,9,0.881,13,0.326,14,0.004,15,0.154,22,0.09,31,0.15,37,2.865,69,1.262,114,0.512,172,0.003,173,0.003,175,1.449,187,0.769,189,0.889,190,0.805,349,2.166,425,4.697,432,3.438,505,4.93,627,4.071,629,2.213,699,5.847,942,5.339,947,5.415,948,5.063,1019,4.975,1020,3.721,3454,6.341,3455,8.081,3456,6.341,3457,6.341,3458,6.341,3459,6.341,3460,6.341,3461,6.341,3462,6.341,3463,6.341]],["title/injectables/ParseObjectIdPipe.html",[18,0.972,1215,3.398]],["body/injectables/ParseObjectIdPipe.html",[3,0.114,4,0.095,5,0.07,8,0.3,12,0.951,13,0.228,14,0.004,15,0.228,18,1.632,19,1.248,22,0.101,31,0.168,78,0.998,114,0.574,128,1.206,148,3.027,149,1.307,172,0.004,173,0.004,182,1.614,187,0.565,189,0.998,190,0.592,199,1.307,300,2.449,308,2.32,328,1.745,348,4.915,355,1.724,357,3.19,386,2.757,420,4.47,897,3.927,1215,5.708,1295,5.572,2423,6.169,3464,8.684,3465,6.398,3466,8.684,3467,7.116,3468,8.684,3469,8.684,3470,7.116,3471,7.116]],["title/classes/PatchGroupParams.html",[31,0.122,1211,4.304]],["body/classes/PatchGroupParams.html",[3,0.116,4,0.097,5,0.071,8,0.305,9,0.956,12,0.834,13,0.232,14,0.004,15,0.214,22,0.103,31,0.207,114,0.708,172,0.004,173,0.004,175,1.655,181,3.413,187,0.575,216,2.229,349,1.674,627,3.612,629,2.527,722,3.734,1029,5.556,1030,5.867,1174,6.028,1195,5.986,1196,3.647,1211,7.307,1309,6.237,3472,7.24,3473,8.776,3474,7.24]],["title/injectables/PermissionService.html",[18,0.972,3475,3.526]],["body/injectables/PermissionService.html",[3,0.096,4,0.08,5,0.059,8,0.251,12,0.902,13,0.249,14,0.005,15,0.21,18,1.46,19,1.046,22,0.085,31,0.141,35,2.477,78,1.09,114,0.627,128,1.316,145,2.237,148,2.538,149,1.427,172,0.003,173,0.003,182,1.444,187,0.617,189,1.09,190,0.647,199,1.587,300,2.053,312,4.442,330,2.774,470,3.25,1093,4.643,1662,5.519,2143,5.299,2154,5.299,2245,6.985,2382,6.468,2482,4.339,2485,4.801,2488,4.67,2598,3.921,2688,6.137,2946,5.775,3319,6.468,3475,5.299,3476,5.964,3477,7.769,3478,7.769,3479,7.769,3480,5.964,3481,7.769,3482,6.985,3483,7.769,3484,6.468,3485,6.985,3486,7.769,3487,5.964,3488,5.964,3489,5.964,3490,5.964,3491,5.964,3492,7.769,3493,5.964,3494,7.769,3495,5.964,3496,5.964]],["title/interfaces/PlainTextMailContent.html",[0,0.534,248,3.398]],["body/interfaces/PlainTextMailContent.html",[0,1.05,2,1.917,3,0.107,4,0.089,5,0.066,8,0.282,9,0.911,12,1.021,13,0.268,14,0.004,22,0.095,33,2.049,114,0.54,172,0.003,173,0.003,190,0.696,235,5.493,236,4.56,237,5.992,238,5.699,239,4.56,240,4.56,241,5.493,242,4.56,243,4.56,244,4.56,245,6.277,246,4.395,247,4.56,248,5.992,249,6.704,250,6.704,251,5.493,252,4.729,253,4.395,254,4.56,255,4.56,256,4.56]],["title/classes/ResolvedUser.html",[31,0.122,3497,4.047]],["body/classes/ResolvedUser.html",[3,0.1,4,0.083,5,0.061,8,0.263,9,0.872,10,1.862,12,0.981,13,0.328,14,0.005,15,0.195,22,0.114,31,0.148,172,0.003,173,0.003,175,1.428,187,0.806,312,3.959,328,1.531,349,2.346,380,4.648,381,2.919,383,4.546,627,4.382,629,2.179,856,4.449,897,4.417,2482,4.187,2485,4.357,2486,6.565,2489,5.685,2490,4.648,2491,4.648,3497,6.266,3498,5.615,3499,6.245,3500,6.245,3501,6.245,3502,6.245,3503,6.245,3504,6.245,3505,6.245,3506,6.245]],["title/classes/ResolvedUserMapper.html",[31,0.122,3507,4.304]],["body/classes/ResolvedUserMapper.html",[3,0.106,4,0.088,5,0.065,8,0.277,10,1.387,12,0.86,13,0.211,14,0.005,15,0.202,22,0.094,31,0.155,78,0.923,114,0.668,128,1.115,145,2.135,149,1.209,172,0.003,173,0.003,175,1.504,182,1.537,187,0.523,189,0.923,190,0.548,199,1.209,312,4.256,328,1.613,385,1.984,386,2.089,404,3.393,662,5.093,722,3.519,1009,4.488,1488,5.916,2482,4.289,2485,4.684,2732,4.181,3497,7.433,3507,6.888,3508,6.58,3509,7.438,3510,6.58,3511,6.58,3512,5.916,3513,6.58,3514,5.916,3515,6.58,3516,6.58,3517,6.58,3518,6.58,3519,6.58,3520,6.58,3521,6.58,3522,6.58,3523,6.58,3524,6.58,3525,6.58]],["title/classes/RocketChatError.html",[31,0.122,32,4.047]],["body/classes/RocketChatError.html",[0,0.481,1,6.241,3,0.047,4,0.039,5,0.029,6,5.32,7,2.307,8,0.124,9,0.508,10,1.509,11,5.959,12,1,13,0.244,14,0.005,15,0.114,16,4.813,17,1.667,18,0.876,19,0.517,20,2.307,21,2.19,22,0.082,23,3.463,24,2.96,25,3.31,26,3.31,27,3.31,28,3.31,29,6.241,30,1.872,31,0.11,32,3.648,33,0.971,34,2.688,35,2.766,36,4.813,37,1.242,38,4.1,39,2.093,40,1.453,41,4.813,42,3.879,43,3.978,44,4.053,45,3.646,46,3.837,47,4.053,48,4.789,49,6.961,50,5.959,51,4.813,52,2.307,53,2.453,54,2.501,55,2.453,56,2.307,57,2.453,58,2.453,59,2.453,60,3.271,61,2.453,62,2.453,63,4.813,64,2.453,65,2.453,66,2.453,67,2.453,68,2.307,69,0.928,70,2.453,71,1.479,72,1.297,73,5.893,74,2.766,75,2.453,76,3.439,77,2.667,78,1.4,79,2.453,80,6.637,81,2.453,82,2.209,83,2.453,84,1.667,85,2.453,86,2.453,87,2.453,88,2.453,89,2.453,90,2.453,91,2.453,92,2.453,93,6.637,94,6.637,95,2.453,96,2.453,97,2.453,98,2.453,99,2.453,100,2.453,101,2.453,102,2.453,103,2.453,104,2.453,105,2.453,106,2.453,107,2.453,108,2.453,109,2.453,110,3.879,111,3.879,112,2.299,113,2.453,114,0.53,115,2.453,116,2.453,117,2.453,118,3.8,119,4.526,120,2.453,121,1.761,122,2.307,123,0.935,124,2.453,125,2.453,126,2.453,127,4.175,128,1.351,129,2.104,130,3.879,131,2.453,132,3.879,133,3.879,134,2.453,135,2.453,136,2.453,137,4.813,138,3.8,139,3.558,140,3.8,141,2.453,142,3.648,143,3.539,144,3.648,145,1.262,146,4.106,147,4.813,148,3.045,149,1.315,150,4.813,151,4.813,152,4.813,153,2.453,154,2.453,155,2.453,156,2.453,157,5.959,158,4.813,159,4.813,160,4.813,161,2.453,162,3.879,163,3.879,164,2.453,165,2.453,166,2.453,167,2.453,168,1.253,169,2.453,170,3.879,171,3.648,172,0.002,173,0.002,175,0.673,187,0.522,189,0.413,190,0.245,1549,2.19,3526,4.659,3527,2.946,3528,2.946]],["title/modules/RocketChatModule.html",[257,1.377,3529,3.842]],["body/modules/RocketChatModule.html",[3,0.115,4,0.096,5,0.07,6,6.48,13,0.23,14,0.005,15,0.212,19,1.257,22,0.102,23,7.27,31,0.169,68,7.359,72,3.839,78,1.005,114,0.578,172,0.004,173,0.004,182,1.331,187,0.569,189,1.005,190,0.596,199,1.316,257,2.504,259,2.768,272,2.996,273,3.154,295,3.533,404,3.269,1933,3.686,1934,4.708,2053,5.324,2054,5.731,2057,5.972,3529,6.986,3530,7.162,3531,7.162,3532,8.718,3533,7.162,3534,7.162,3535,7.162]],["title/interfaces/RocketChatOptions.html",[0,0.534,23,3.842]],["body/interfaces/RocketChatOptions.html",[0,0.481,1,6.237,2,0.843,3,0.047,4,0.039,5,0.029,6,2.186,7,2.302,8,0.124,9,0.507,10,1.508,11,5.954,12,1.009,13,0.255,14,0.005,15,0.113,16,4.807,17,1.664,18,0.875,19,0.516,20,2.302,21,2.186,22,0.082,23,4.292,24,4.544,25,5.08,26,5.08,27,5.08,28,5.08,29,5.954,30,1.868,31,0.11,32,2.302,33,0.613,34,2.164,35,2.592,36,2.448,37,0.784,38,3.536,39,2.089,40,1.451,41,2.448,42,2.448,43,3.976,44,4.051,45,3.644,46,3.835,47,4.051,48,4.787,49,6.958,50,5.954,51,4.807,52,2.302,53,2.448,54,2.498,55,2.448,56,2.302,57,2.448,58,2.448,59,2.448,60,3.268,61,2.448,62,2.448,63,4.807,64,2.448,65,2.448,66,2.448,67,2.448,68,2.302,69,0.585,70,2.448,71,1.477,72,1.295,73,5.891,74,2.765,75,2.448,76,3.438,77,2.666,78,1.4,79,2.448,80,6.632,81,2.448,82,2.206,83,2.448,84,1.664,85,2.448,86,2.448,87,2.448,88,2.448,89,2.448,90,2.448,91,2.448,92,2.448,93,6.632,94,6.632,95,2.448,96,2.448,97,2.448,98,2.448,99,2.448,100,2.448,101,2.448,102,2.448,103,2.448,104,2.448,105,2.448,106,2.448,107,2.448,108,2.448,109,2.448,110,3.874,111,3.874,112,2.295,113,2.448,114,0.466,115,2.448,116,2.448,117,2.448,118,3.795,119,4.52,120,2.448,121,1.757,122,2.302,123,0.934,124,2.448,125,2.448,126,2.448,127,4.17,128,1.35,129,2.102,130,3.874,131,2.448,132,3.874,133,3.874,134,2.448,135,2.448,136,2.448,137,4.807,138,3.795,139,3.554,140,3.795,141,2.448,142,3.643,143,3.536,144,3.643,145,1.26,146,4.101,147,4.807,148,3.042,149,1.314,150,4.807,151,4.807,152,4.807,153,2.448,154,2.448,155,2.448,156,2.448,157,5.954,158,4.807,159,4.807,160,4.807,161,2.448,162,3.874,163,3.874,164,2.448,165,2.448,166,2.448,167,2.448,168,1.251,169,2.448,170,3.874,171,3.643,172,0.002,173,0.002,190,0.725]],["title/entities/Role.html",[316,0.876,2485,2.55]],["body/entities/Role.html",[0,0.625,3,0.097,4,0.081,5,0.059,8,0.366,9,0.855,12,0.928,13,0.279,14,0.005,15,0.191,22,0.112,31,0.143,33,1.261,114,0.77,149,1.691,172,0.003,173,0.003,187,0.691,205,1.947,312,4.126,316,1.474,323,1.896,349,2.012,354,2.922,355,1.466,356,1.714,360,2.815,370,2.204,385,2.365,386,2.49,418,3.425,495,2.269,502,2.339,510,2.304,512,1.973,636,2.869,658,4.299,859,4.636,870,4.383,895,2.451,899,3.34,1050,3.515,1068,3.34,1196,3.048,1313,4.128,1675,4.299,2075,5.571,2430,4.299,2482,4.829,2485,4.82,2595,6.53,2596,5.441,2597,5.441,2598,3.978,2599,4.738,2600,7.051,2601,4.738,2602,5.441,2603,4.738,3536,5.441,3537,6.051,3538,6.051,3539,6.051,3540,6.051,3541,6.051]],["title/injectables/RoleRepo.html",[18,0.972,3542,4.647]],["body/injectables/RoleRepo.html",[3,0.1,4,0.083,5,0.061,8,0.261,9,0.869,10,1.681,12,0.837,13,0.298,14,0.005,15,0.215,18,1.499,19,1.09,22,0.089,31,0.147,37,1.655,69,1.236,71,1.972,74,2.752,77,2.507,78,1.119,114,0.776,128,1.351,129,2.344,172,0.003,173,0.003,182,1.482,187,0.739,189,1.236,190,0.733,199,1.465,300,2.137,308,3.03,328,1.523,329,2.515,355,1.505,357,2.784,385,1.872,386,1.972,535,3.711,536,4.892,538,3.934,2485,4.742,3542,7.169,3543,6.21,3544,9.612,3545,7.169,3546,7.974,3547,7.974,3548,7.169,3549,6.21,3550,7.974,3551,6.21,3552,7.974,3553,7.974,3554,7.974]],["title/controllers/RoomsController.html",[919,2.163,2962,4.304]],["body/controllers/RoomsController.html",[3,0.104,4,0.086,5,0.063,8,0.272,12,0.852,13,0.207,14,0.005,15,0.249,19,1.132,22,0.092,31,0.152,35,1.85,71,2.594,74,2.508,77,2.204,78,0.905,114,0.521,128,1.385,129,1.897,172,0.003,173,0.003,182,1.518,187,0.513,189,0.905,190,0.537,199,1.185,328,1.582,329,2.613,330,3.001,349,1.492,567,4.241,571,5.573,583,6.37,629,2.251,631,3.183,647,4.583,660,6.074,666,5.372,693,6.397,919,2.699,921,2.892,923,3.856,926,5.078,929,5.987,931,4.241,932,4.099,933,4.241,940,4.241,1215,5.371,1225,5.052,1229,4.796,1264,5.801,1593,4.583,2962,6.803,2966,5.801,3555,6.452,3556,8.967,3557,6.452,3558,8.17,3559,6.452,3560,6.452,3561,6.452,3562,6.452,3563,6.452,3564,6.452]],["title/injectables/RoomsUc.html",[18,0.972,583,3.672]],["body/injectables/RoomsUc.html",[0,0.431,3,0.067,4,0.056,5,0.041,8,0.176,12,0.747,13,0.306,14,0.005,15,0.174,18,1.141,19,0.732,22,0.102,31,0.143,35,2.874,69,1.208,71,2.272,74,2.002,76,2.781,77,1.637,78,1.318,82,3.725,114,0.703,123,2.495,128,1.657,129,2.104,145,2.154,149,1.115,172,0.003,173,0.003,181,2.061,182,1.128,187,0.692,189,1.222,190,0.725,199,1.534,267,5.09,279,2.196,300,1.436,308,2.932,328,1.023,370,2.606,410,2.247,492,3.274,508,2.311,567,5.912,568,3.474,569,3.124,570,3.35,571,4.881,572,5.054,573,3.104,574,3.771,575,5.855,576,5.207,577,5.912,578,4.753,579,5.458,580,3.474,581,3.751,582,2.721,583,4.312,584,5.458,585,3.267,586,3.751,587,7.041,588,3.751,589,7.065,590,3.751,591,5.673,592,3.751,593,3.751,594,7.834,595,3.751,596,3.751,597,5.458,598,4.753,599,4.753,600,4.546,601,5.458,602,3.751,603,5.458,604,3.751,605,3.751,606,3.751,607,3.751,608,3.751,609,5.958,610,5.458,611,3.474,612,3.474,613,5.458,614,3.474,615,5.054,616,3.474,652,3.101,1162,3.474,3565,6.07,3566,6.07,3567,6.07,3568,4.172,3569,4.172,3570,4.172,3571,4.172,3572,4.172,3573,4.172]],["title/entities/School.html",[316,0.876,843,1.938]],["body/entities/School.html",[0,0.756,3,0.118,4,0.098,5,0.072,8,0.308,9,0.963,12,0.902,13,0.235,14,0.004,15,0.215,22,0.126,31,0.173,33,1.526,114,0.795,172,0.004,173,0.004,187,0.582,205,2.355,316,1.497,323,2.294,345,5.613,349,1.693,354,3.012,355,1.774,356,2.073,495,2.745,512,2.386,636,3.47,843,3.313,895,2.965,899,4.04,2473,5.2,2604,7.355,2605,6.581,3574,7.32]],["title/classes/SchoolInfoMapper.html",[31,0.122,3245,4.304]],["body/classes/SchoolInfoMapper.html",[3,0.117,4,0.097,5,0.072,8,0.307,10,1.537,13,0.234,14,0.004,15,0.215,22,0.104,31,0.172,78,1.022,114,0.711,128,1.235,149,1.339,172,0.004,173,0.004,175,1.666,182,1.637,187,0.579,189,1.022,190,0.607,199,1.339,328,1.787,404,3.551,662,5.424,722,3.748,843,3.689,1009,4.971,3219,7.313,3245,7.336,3575,8.81,3576,6.068,3577,8.81,3578,6.068,3579,7.288,3580,7.288,3581,7.288]],["title/classes/SchoolInfoResponse.html",[31,0.122,3219,3.842]],["body/classes/SchoolInfoResponse.html",[3,0.109,4,0.091,5,0.067,8,0.286,9,0.92,10,2.152,12,0.912,13,0.294,14,0.004,15,0.166,22,0.097,31,0.161,69,1.68,114,0.832,172,0.004,173,0.004,175,1.553,187,0.73,189,0.953,190,0.566,216,2.332,316,1.627,349,1.952,619,3.75,622,3.949,627,3.779,629,2.371,635,3.16,636,3.221,654,3.352,655,4.345,656,4.345,843,3.601,3219,7.341,3339,5.321,3582,9.603,3583,5.658,3584,5.658,3585,6.109,3586,6.109]],["title/entities/SchoolNews.html",[316,0.876,1098,3.398]],["body/entities/SchoolNews.html",[0,0.466,3,0.072,4,0.1,5,0.044,8,0.19,9,0.7,10,0.951,12,0.91,13,0.276,14,0.005,15,0.229,22,0.123,31,0.193,33,1.698,43,3.414,44,3.478,45,3.129,46,3.293,47,3.478,48,4.028,78,0.633,114,0.518,123,1.433,145,1.879,149,1.374,172,0.003,173,0.003,181,2.538,187,0.359,205,1.452,308,2.656,309,4.104,310,3.849,312,2.023,316,1.459,323,1.414,331,3.205,349,1.044,354,2.923,355,1.093,356,1.278,360,2.306,367,3.849,372,3.078,381,2.013,404,1.692,460,2.375,487,3.478,494,1.827,495,1.692,498,1.953,502,2.482,504,2.778,505,3.381,506,4.751,510,2.846,512,1.471,523,2.554,573,2.039,582,3.352,644,2.778,649,2.06,843,3.529,855,4.751,856,2.273,875,2.554,876,2.623,903,2.867,983,2.554,987,2.323,1046,2.867,1047,3.354,1048,4.63,1050,2.879,1051,3.235,1052,3.354,1053,4.751,1054,3.354,1055,5.312,1056,3.46,1057,4.774,1058,3.839,1059,4.081,1060,4.222,1061,4.916,1062,4.467,1063,3.078,1064,3.354,1065,4.081,1066,3.354,1067,3.354,1068,2.49,1069,3.078,1070,3.205,1071,2.182,1072,3.078,1073,2.867,1074,3.205,1075,3.46,1076,2.867,1077,3.354,1078,2.966,1079,3.354,1080,3.078,1081,3.354,1082,2.778,1083,3.354,1084,3.354,1085,3.354,1086,3.354,1087,3.078,1088,3.354,1089,3.078,1090,3.354,1091,3.354,1092,4.774,1093,4.469,1094,3.354,1095,4.774,1096,3.354,1097,3.354,1098,4.222,1099,2.966,1100,3.354,3587,4.512]],["title/classes/Scope.html",[31,0.122,1112,2.404]],["body/classes/Scope.html",[3,0.098,4,0.082,5,0.06,8,0.257,9,0.86,13,0.314,14,0.005,15,0.192,22,0.087,31,0.144,35,2.808,69,1.216,78,1.107,114,0.637,128,1.035,168,3.356,172,0.003,173,0.003,175,1.396,182,1.466,187,0.76,189,1.107,190,0.657,199,1.122,355,1.48,356,1.73,385,1.841,386,1.939,470,2.555,930,4.555,1112,3.669,1143,6.496,1144,6.496,1148,5.864,1149,6.957,1151,6.708,1157,5.864,1158,6.561,1318,3.29,1392,4.015,1732,5.864,3353,7.276,3588,5.491,3589,7.889,3590,7.889,3591,7.093,3592,6.107,3593,6.107,3594,6.107,3595,6.107,3596,6.107,3597,6.107,3598,7.889,3599,7.889,3600,6.107,3601,6.107,3602,6.107]],["title/classes/ServerConsole.html",[31,0.122,3603,4.304]],["body/classes/ServerConsole.html",[3,0.1,4,0.083,5,0.061,8,0.261,12,0.836,13,0.255,14,0.005,15,0.194,22,0.088,31,0.146,69,1.234,78,1.117,114,0.643,168,3.951,172,0.003,173,0.003,175,1.417,182,1.48,187,0.699,189,1.117,190,0.663,199,1.463,207,3.122,216,2.44,270,3.388,329,2.51,349,1.842,797,6.105,801,5.733,811,2.997,1655,5.573,1658,6.631,1660,6.631,1668,6.984,1916,7.733,1919,5.59,1930,4.433,2143,6.335,2163,6.003,2868,5.901,3067,5.573,3603,6.631,3604,6.198,3605,7.964,3606,6.198,3607,6.904,3608,6.198,3609,7.964,3610,6.236,3611,6.198,3612,7.161,3613,6.198,3614,6.198]],["title/modules/ServerConsoleModule.html",[257,1.377,3615,3.842]],["body/modules/ServerConsoleModule.html",[3,0.11,4,0.091,5,0.067,14,0.005,15,0.246,19,1.2,22,0.097,31,0.162,172,0.004,173,0.004,257,2.258,259,2.642,260,3.731,268,4.18,269,3.18,270,2.909,272,3.545,273,3.731,793,7.494,799,5.082,801,4.796,811,3.306,1669,5.693,2130,3.974,2284,6.627,2742,3.683,3057,7.494,3603,7.055,3615,7.789,3616,6.147,3617,6.837,3618,6.837,3619,8.473,3620,6.837,3621,6.837,3622,6.837,3623,6.837]],["title/controllers/ServerController.html",[919,2.163,3624,4.047]],["body/controllers/ServerController.html",[3,0.12,4,0.1,5,0.074,8,0.315,12,0.851,14,0.004,15,0.182,19,1.313,22,0.107,31,0.177,60,5.067,73,5.512,78,1.05,172,0.004,173,0.004,182,1.664,187,0.595,199,1.375,207,3.771,349,1.731,385,2.7,919,3.746,921,3.355,1916,8.265,1918,6.655,1919,4.941,1929,6.232,1930,3.771,3624,7.01,3625,7.485,3626,7.485]],["title/modules/ServerModule.html",[257,1.377,3627,3.672]],["body/modules/ServerModule.html",[3,0.069,4,0.057,5,0.042,12,0.899,13,0.138,14,0.005,15,0.25,19,0.755,22,0.088,24,3.943,25,3.056,26,3.056,27,3.056,28,3.056,31,0.147,39,3.056,43,1.964,44,2.001,45,1.8,46,1.894,47,2.001,72,3.206,78,0.871,112,3.592,118,2.828,123,1.366,128,1.052,138,2.828,139,2.648,140,2.828,145,0.939,149,0.79,172,0.003,173,0.003,211,2.001,216,1.093,252,2.435,257,2.419,258,6.006,259,3.08,260,2.733,264,5.788,268,3.062,269,2.001,270,1.83,273,3.51,278,3.582,323,1.348,328,1.055,355,1.504,356,1.218,370,2.652,372,2.554,404,1.613,756,3.821,817,6.006,921,3.573,1294,2.828,1649,2.733,1661,2.08,1825,3.198,1882,3.709,1930,3.668,2032,3.056,2033,2.828,2034,2.733,2035,3.368,2054,2.828,2057,3.943,2079,2.648,2284,5.788,2326,4.86,2327,4.86,2328,4.86,2523,2.5,2578,3.198,2742,3.343,2841,6.006,2844,3.582,2873,2.733,2958,6.006,3022,3.056,3028,2.828,3031,2.934,3032,2.934,3062,3.198,3063,3.198,3064,4.86,3065,4.86,3066,4.614,3073,3.368,3076,3.056,3077,3.368,3078,4.86,3079,3.368,3080,3.368,3082,2.934,3084,4.409,3087,4.86,3123,2.934,3275,6.006,3322,2.648,3529,3.198,3624,6.618,3627,7.379,3628,3.868,3629,3.868,3630,6.006,3631,3.582,3632,4.86,3633,3.868,3634,3.868,3635,3.868,3636,3.868,3637,3.868,3638,3.868,3639,3.868,3640,3.868,3641,3.868,3642,3.868,3643,3.868,3644,3.198,3645,3.868,3646,3.868,3647,6.637,3648,3.582,3649,3.582,3650,3.582,3651,3.582,3652,3.582,3653,3.582,3654,3.582,3655,3.582,3656,3.582,3657,3.582,3658,6.637,3659,3.056,3660,3.868,3661,3.582,3662,3.368,3663,3.868,3664,2.934,3665,3.868,3666,3.868,3667,3.868,3668,5.168,3669,4.614]],["title/modules/ServerTestModule.html",[257,1.377,3669,3.842]],["body/modules/ServerTestModule.html",[3,0.065,4,0.054,5,0.04,12,0.885,13,0.19,14,0.005,15,0.248,19,0.708,22,0.084,24,3.764,25,2.866,26,2.866,27,2.866,28,2.866,31,0.14,39,4.208,43,1.842,44,1.877,45,1.688,46,1.777,47,1.877,72,3.406,78,0.831,112,3.463,114,0.326,118,2.652,123,1.281,128,1.004,138,2.652,139,2.484,140,2.652,145,0.881,149,0.741,172,0.002,173,0.002,182,0.75,187,0.321,189,0.566,190,0.336,199,0.741,211,1.877,216,1.025,252,3.353,257,2.371,258,5.874,259,3.439,260,2.609,264,5.661,268,2.922,269,1.877,270,1.717,273,3.406,278,3.36,323,1.264,328,0.989,355,1.435,356,1.143,370,3,372,2.889,404,2.221,432,1.717,756,3.647,817,5.874,921,3.467,1294,2.652,1649,2.564,1661,2.864,1825,2.999,1882,4.622,1930,3.536,2032,2.866,2033,2.652,2034,2.564,2035,3.159,2053,2.999,2054,3.894,2057,4.46,2079,3.647,2284,5.661,2326,4.638,2327,4.638,2328,4.638,2523,3.443,2578,2.999,2742,3.781,2841,5.874,2844,3.36,2873,3.764,2958,5.874,3022,2.866,3028,3.894,3031,2.752,3032,2.752,3062,2.999,3063,2.999,3064,4.638,3065,4.638,3066,4.403,3073,3.159,3076,2.866,3077,3.159,3078,4.638,3079,3.159,3080,3.159,3082,5.619,3084,4.986,3087,6.056,3123,4.041,3275,5.874,3322,3.647,3529,2.999,3624,6.45,3627,5.852,3630,5.874,3631,3.36,3632,3.159,3633,3.628,3634,3.628,3635,3.628,3636,3.628,3637,3.628,3638,3.628,3639,3.628,3640,3.628,3641,3.628,3642,3.628,3643,3.628,3644,2.999,3645,3.628,3646,3.628,3647,6.44,3648,3.36,3649,3.36,3650,3.36,3651,3.36,3652,3.36,3653,3.36,3654,3.36,3655,3.36,3656,3.36,3657,3.36,3658,6.44,3659,2.866,3660,3.628,3661,3.36,3662,3.159,3663,3.628,3664,4.041,3665,5.326,3666,5.326,3667,5.326,3668,4.932,3669,7.691,3670,3.628,3671,3.628,3672,4.035]],["title/entities/StorageProvider.html",[316,0.876,496,3.004]],["body/entities/StorageProvider.html",[0,0.656,3,0.102,4,0.085,5,0.062,8,0.267,9,0.882,12,0.996,13,0.317,14,0.005,15,0.217,22,0.115,31,0.15,33,1.324,172,0.003,173,0.003,187,0.745,190,0.673,205,2.044,316,1.371,323,1.991,349,2.168,354,3.232,355,1.539,356,1.799,360,2.904,495,2.382,496,4.702,510,2.418,512,2.071,895,2.573,2014,6.971,2191,7.804,2195,7.339,2197,7.748,2606,6.737,2607,5.712,2608,7.804,2609,5.712,2610,5.712,2611,5.712,2612,5.712,2613,5.712,2614,5.712,2615,5.712,2616,5.712,2617,5.712,2618,5.712,3673,6.353,3674,6.353,3675,6.353,3676,5.712,3677,6.353]],["title/injectables/StorageProviderRepo.html",[18,0.972,2288,4.047]],["body/injectables/StorageProviderRepo.html",[3,0.085,4,0.071,5,0.052,8,0.224,10,1.517,13,0.318,14,0.004,15,0.199,18,1.353,19,0.932,22,0.076,31,0.126,33,1.5,74,2.874,77,2.597,78,0.746,114,0.801,128,0.901,129,1.562,168,3.061,172,0.003,173,0.003,182,1.337,187,0.798,189,1.393,190,0.826,192,5.111,199,1.844,300,1.829,308,2.85,316,1.482,323,2.74,328,1.303,425,6.102,496,4.741,524,6.961,526,6.388,527,4.572,528,5.634,529,5.634,530,5.112,531,3.787,532,5.634,533,5.634,534,5.634,540,3.775,542,4.161,544,4.161,546,3.775,548,4.161,550,4.161,552,4.161,554,4.161,2288,5.634,2302,4.425,2303,4.425,2304,4.425,2305,4.425,2306,4.425,2307,4.425,2308,4.425,2309,4.425,2310,4.425,2312,4.778,3295,6.47,3303,6.47,3678,5.315,3679,5.315,3680,5.315]],["title/entities/Submission.html",[316,0.876,2631,3.182]],["body/entities/Submission.html",[0,0.452,3,0.07,4,0.059,5,0.079,8,0.184,9,0.685,12,0.867,13,0.309,14,0.005,15,0.222,22,0.09,31,0.104,33,0.913,37,2.142,78,0.882,128,1.066,145,1.858,149,1.628,172,0.003,173,0.003,187,0.756,190,0.523,205,1.409,308,2.05,316,1.066,323,1.373,349,2.199,354,2.898,355,1.062,356,1.241,360,2.258,385,2.218,386,2.336,460,2.306,470,3.078,492,1.467,494,1.774,495,1.643,498,1.896,502,1.693,510,3.757,512,1.428,574,4.041,700,3.23,859,4.463,860,3.872,870,2.207,875,2.48,895,1.774,981,6.343,1075,3.388,1082,2.697,1392,4.134,2119,5.153,2537,4.818,2538,2.697,2619,4.924,2620,3.939,2621,6.294,2622,7.227,2623,6.693,2624,7.966,2625,7.966,2626,7.775,2627,3.939,2628,3.939,2629,3.939,2630,2.88,2631,3.872,2632,5.654,2633,5.654,2634,5.654,2635,5.654,2636,5.654,2637,5.654,2638,7.227,2639,5.654,2640,5.654,2641,3.939,2642,3.939,2643,3.939,2644,3.939,2645,3.112,2646,3.939,2647,6.614,2648,3.939,2649,5.654,2650,3.939,2651,5.226,2652,3.939,2653,3.939,2654,3.939,2655,3.939,2656,3.939,3681,4.381,3682,4.381,3683,4.381,3684,4.381,3685,4.381,3686,4.381,3687,4.381,3688,4.381,3689,4.381]],["title/classes/SubmissionFactory.html",[31,0.122,3690,4.304]],["body/classes/SubmissionFactory.html",[3,0.069,4,0.058,5,0.042,8,0.182,9,0.678,10,1.539,12,0.591,13,0.321,14,0.004,15,0.206,22,0.062,31,0.102,33,1.297,37,2.128,45,2.604,54,1.869,69,0.86,71,1.976,78,0.873,114,0.751,128,1.055,168,1.837,172,0.003,173,0.003,175,0.987,182,1.157,187,0.782,189,1.381,190,0.774,192,5.013,199,1.709,211,2.008,216,1.854,316,1.434,320,3.135,323,1.95,328,1.059,367,3.756,385,2.2,386,2.535,391,7.11,393,7.055,395,3.21,397,5.602,398,5.936,399,4.626,400,5.726,401,4.626,402,4.626,403,4.421,404,2.334,405,4.877,406,5.424,407,6.608,408,5.774,410,3.353,412,4.626,413,3.21,414,4.626,416,4.241,417,4.636,418,4.52,419,4.492,420,3.204,421,4.626,422,3.21,423,2.581,424,3.068,425,4.919,426,3.21,427,3.21,428,3.21,429,7.15,431,3.6,432,3.397,433,3.21,435,3.21,437,2.839,438,3.21,439,6.014,441,3.21,442,4.626,443,4.626,445,3.21,446,3.21,447,3.21,449,4.421,451,3.21,453,3.21,454,3.72,456,3.381,574,1.869,726,5.774,807,2.946,954,3.381,957,3.381,958,3.381,959,3.381,960,3.381,961,3.381,962,3.381,963,3.381,964,3.381,965,3.381,966,3.381,969,3.381,975,3.596,2537,2.444,2619,3.381,2621,4.873,2623,3.596,2631,3.832,3690,6.076,3691,3.883,3692,4.318,3693,3.381,3694,4.318,3695,3.883,3696,4.318,3697,3.883,3698,3.883,3699,3.883]],["title/injectables/SubmissionRepo.html",[18,0.972,3700,4.647]],["body/injectables/SubmissionRepo.html",[3,0.091,4,0.076,5,0.056,8,0.239,13,0.288,14,0.005,15,0.219,18,1.414,19,0.996,22,0.081,31,0.134,35,2.419,69,1.131,71,1.803,74,2.815,76,3.306,77,2.589,78,1.183,114,0.725,128,1.522,129,2.64,172,0.003,173,0.003,182,1.398,187,0.714,189,1.26,190,0.747,199,1.55,300,1.954,308,3.312,328,1.392,329,2.3,355,1.823,356,1.608,357,2.546,370,2.068,535,3.394,536,4.726,538,3.711,574,2.457,845,3.733,894,5.592,930,3.498,949,4.052,981,4.945,1001,3.394,1002,4.257,1104,6.763,1112,2.641,1151,3.733,2353,4.446,2537,3.214,2626,4.728,2630,4.945,2631,3.496,2742,3.059,3700,6.763,3701,5.679,3702,7.522,3703,7.522,3704,5.679,3705,7.522,3706,5.679,3707,7.522,3708,5.679,3709,7.522,3710,5.679,3711,7.522,3712,5.679,3713,7.522,3714,5.679]],["title/injectables/SymetricKeyEncryptionService.html",[18,0.972,2026,3.842]],["body/injectables/SymetricKeyEncryptionService.html",[3,0.109,4,0.09,5,0.066,8,0.285,12,1.008,13,0.294,14,0.004,15,0.205,17,3.83,18,1.583,19,1.187,22,0.096,31,0.16,35,1.941,69,1.347,71,2.149,73,6.19,78,1.181,114,0.74,172,0.004,173,0.004,182,1.565,187,0.728,189,1.286,190,0.763,199,1.547,300,2.329,883,4.616,1020,3.523,2018,7.57,2026,6.258,2048,7.57,2201,6.592,3715,6.767,3716,6.767,3717,6.767,3718,8.419,3719,6.767,3720,8.419,3721,6.767,3722,6.767,3723,6.085,3724,6.767,3725,6.767,3726,6.767,3727,6.767,3728,6.767]],["title/entities/System.html",[316,0.876,1824,2.661]],["body/entities/System.html",[3,0.106,4,0.088,5,0.081,8,0.277,9,0.902,12,0.949,13,0.32,14,0.005,15,0.202,22,0.094,31,0.155,33,1.371,172,0.003,173,0.003,187,0.719,190,0.79,205,2.117,211,3.06,316,1.402,323,2.062,349,2.092,354,3.218,355,1.594,356,1.863,360,2.97,370,2.396,495,2.467,512,2.145,531,3.463,643,4.891,895,2.665,1050,2.949,1121,3.932,1824,4.657,2019,4.891,2119,4.565,2129,3.824,2221,4.674,2332,6.726,2430,4.674,2771,5.478,2772,5.152,2773,4.181,3729,6.58,3730,9.048,3731,6.58,3732,6.58,3733,6.58,3734,6.58,3735,8.272,3736,6.58,3737,8.272,3738,6.58]],["title/classes/TargetInfoMapper.html",[31,0.122,3247,4.304]],["body/classes/TargetInfoMapper.html",[3,0.117,4,0.097,5,0.071,8,0.306,10,1.533,13,0.233,14,0.004,15,0.214,22,0.104,31,0.172,78,1.02,114,0.71,128,1.232,149,1.336,172,0.004,173,0.004,175,1.662,182,1.635,187,0.578,189,1.02,190,0.605,199,1.336,328,1.783,404,3.548,662,5.417,722,3.743,1048,3.516,1053,6.247,3220,6.055,3221,7.308,3247,7.326,3576,6.055,3578,6.055,3739,8.799,3740,8.799,3741,7.272,3742,7.272,3743,7.272]],["title/classes/TargetInfoResponse.html",[31,0.122,3221,3.842]],["body/classes/TargetInfoResponse.html",[3,0.109,4,0.091,5,0.067,8,0.286,9,0.92,10,2.152,12,0.912,13,0.294,14,0.004,15,0.166,22,0.097,31,0.161,69,1.68,114,0.832,172,0.004,173,0.004,175,1.553,187,0.73,189,0.953,190,0.566,216,2.332,316,1.627,349,1.952,619,3.75,622,3.949,627,3.779,629,2.371,635,3.16,636,3.221,654,3.352,655,4.345,656,4.345,1048,4.643,3221,7.341,3339,5.321,3583,5.658,3584,5.658,3585,6.109,3586,6.109,3744,9.603]],["title/entities/Task.html",[316,0.876,574,2.237]],["body/entities/Task.html",[0,0.497,3,0.049,4,0.041,5,0.03,8,0.283,9,0.647,10,0.647,12,0.736,13,0.288,14,0.005,15,0.197,22,0.104,31,0.114,33,0.64,35,2.322,37,2.063,54,1.328,78,1.299,82,3.838,114,0.696,123,1.528,128,1.714,145,1.925,148,1.305,149,1.487,172,0.002,173,0.002,187,0.701,190,0.734,205,0.987,216,1.508,308,1.935,316,0.815,323,0.962,349,1.993,354,2.737,355,0.744,356,0.869,360,1.727,370,2.161,372,1.263,377,1.783,381,2.427,385,1.79,386,1.884,394,2.592,470,2.483,487,3.125,492,2.807,494,1.243,495,1.151,498,1.328,502,1.186,508,1.831,510,3.191,512,1,522,1.889,523,1.737,573,2.661,574,3.73,575,1.95,623,4.315,636,1.455,639,1.95,640,3.905,641,4.242,657,3.124,700,2.378,720,4.798,726,5.282,727,5.282,728,5.51,729,5.185,730,5.501,740,3.418,859,3.385,860,1.889,867,2.403,870,1.546,879,2.18,889,2.18,891,2.093,895,1.243,899,1.693,918,4.798,983,2.723,984,2.875,987,1.579,990,4.417,991,2.017,1002,3.803,1035,3.418,1075,2.592,1177,2.017,1318,3.197,1418,2.017,1661,2.326,1960,4.767,2119,1.693,2251,2.18,2598,2.017,2630,5.09,2631,3.654,2645,2.18,2651,3.418,2657,3.418,2658,2.281,2659,2.403,2660,2.403,2661,2.403,2662,2.403,2663,4.412,2664,2.403,2665,2.403,2666,3.576,2667,3.767,2668,3.767,2669,3.767,2670,2.403,2671,2.403,2672,2.403,2673,2.403,2674,2.403,2675,2.403,2676,3.767,2677,3.767,2678,3.767,2679,2.403,2680,2.403,2681,2.403,2682,2.403,2683,2.403,2684,2.403,2685,2.403,2686,2.403,2687,2.403,2688,2.18,2689,2.403,2690,2.403,2691,3.767,2692,2.403,2693,3.767,2694,3.767,2695,2.403,2696,2.403,2697,2.403,2698,2.403,2699,2.403,2700,3.767,2701,2.403,2702,2.403,2703,2.403,2704,2.403,2705,3.767,2706,2.403,2707,2.403,2708,2.403,2709,2.403,2710,2.403,2711,4.995,2712,2.403,2713,2.403,2714,2.403,2715,2.18,2716,2.18,2717,3.767,2718,2.403,2719,2.403,2720,2.403,2721,2.403,2722,2.403,2723,3.767,2724,1.834,2725,2.18,2726,2.403,2727,2.403,2728,2.403,2729,2.403,2730,2.403,2731,3.767,2732,3.057,2733,2.403,2734,2.403,2735,2.403,2736,3.767,2737,2.403,2738,2.403,2739,2.403,2740,2.403,2741,1.834,2742,1.653,2743,3.576,2744,2.403,2745,5.262,2746,2.403,2747,2.403,2748,2.403,3745,3.068,3746,3.068,3747,3.068,3748,3.068,3749,3.068,3750,3.068,3751,3.068,3752,3.068,3753,3.068,3754,3.068]],["title/injectables/TaskAuthorizationService.html",[18,0.972,3755,3.842]],["body/injectables/TaskAuthorizationService.html",[3,0.063,4,0.052,5,0.038,8,0.164,13,0.282,14,0.005,15,0.168,18,1.086,19,0.685,22,0.098,31,0.092,35,2.648,69,1.151,71,2.185,74,2.38,76,1.381,77,2.052,78,1.235,114,0.711,128,1.635,129,2.024,145,2.28,172,0.002,173,0.002,182,1.074,187,0.7,189,1.235,190,0.733,199,1.563,279,2.054,300,1.343,312,1.749,316,0.661,328,0.957,492,3.146,508,2.62,573,3.188,574,3.811,576,5.085,611,4.812,612,4.812,623,2.008,646,2.901,896,4.307,930,1.815,1000,3.942,1050,2.591,1068,4.99,1162,3.249,1547,2.772,1675,2.772,1677,2.332,1901,2.208,2237,4.525,2249,5.117,2429,2.772,2573,3.942,2867,2.901,2978,6.545,3475,6.006,3755,4.296,3756,3.508,3757,5.779,3758,5.779,3759,5.779,3760,5.779,3761,6.883,3762,5.779,3763,3.902,3764,5.779,3765,8.125,3766,7.331,3767,3.902,3768,5.779,3769,3.902,3770,5.779,3771,3.902,3772,5.779,3773,3.902,3774,3.902,3775,7.331,3776,3.902,3777,5.779,3778,3.902,3779,3.508,3780,3.508,3781,3.508,3782,3.508,3783,3.902,3784,5.779,3785,3.055,3786,3.902,3787,3.902,3788,7.61,3789,5.196,3790,3.902,3791,5.196,3792,3.902,3793,3.902,3794,5.196,3795,5.779,3796,3.902,3797,3.902,3798,3.902,3799,3.902,3800,5.196,3801,3.902,3802,3.902,3803,3.902,3804,3.902,3805,3.902,3806,5.779,3807,5.779,3808,3.902,3809,3.902,3810,5.779,3811,9.042,3812,3.902,3813,5.779,3814,3.902,3815,7.61,3816,7.61,3817,3.902,3818,3.508,3819,3.902,3820,3.902,3821,3.902,3822,3.902]],["title/controllers/TaskController.html",[919,2.163,3823,4.304]],["body/controllers/TaskController.html",[3,0.089,4,0.074,5,0.054,8,0.233,13,0.237,14,0.005,15,0.241,19,0.971,22,0.079,31,0.131,71,1.758,74,2.666,77,2.398,78,1.247,114,0.597,128,1.675,129,2.174,149,1.359,172,0.003,173,0.003,182,1.375,187,0.588,189,1.038,190,0.616,199,1.359,328,1.357,329,2.242,349,1.71,591,3.408,629,1.932,631,2.731,722,2.355,919,2.316,921,2.482,923,3.309,926,5.242,927,6.679,929,5.991,930,3.874,931,3.639,932,3.518,933,3.639,940,3.639,942,4.906,947,4.789,948,4.478,949,4.789,2779,5.916,2782,4.61,3823,6.158,3824,5.536,3825,7.488,3826,5.536,3827,5.536,3828,7.396,3829,5.536,3830,6.191,3831,5.536,3832,4.335,3833,4.61,3834,5.536,3835,5.536,3836,5.536,3837,7.396,3838,5.536,3839,7.396,3840,5.536,3841,5.536,3842,7.396,3843,5.536,3844,5.536,3845,5.536]],["title/classes/TaskFactory.html",[31,0.122,3693,4.047]],["body/classes/TaskFactory.html",[3,0.066,4,0.055,5,0.04,8,0.173,9,0.656,10,1.498,12,0.572,13,0.323,14,0.004,15,0.19,22,0.059,31,0.097,33,1.254,35,2.24,37,2.082,45,2.517,54,1.783,69,1.198,71,1.91,78,0.997,114,0.768,123,1.91,128,1.324,145,1.893,149,0.757,168,1.753,172,0.003,173,0.003,175,0.942,182,1.118,187,0.783,189,1.381,190,0.78,192,4.964,199,1.687,211,1.916,216,1.805,316,1.408,320,3.03,323,1.885,328,1.01,367,3.657,385,2.355,386,2.48,391,7.054,393,6.995,395,3.063,397,5.512,398,5.807,399,4.471,400,5.653,401,4.471,402,4.471,403,4.273,404,2.256,405,4.899,406,5.281,407,6.523,408,5.667,410,3.24,412,4.471,413,3.063,414,4.471,416,4.129,417,4.514,418,4.421,419,4.374,420,3.096,421,4.471,422,3.063,423,2.462,424,2.927,425,4.828,426,3.063,427,3.063,428,3.063,429,7.169,431,3.505,432,3.323,433,3.063,435,3.063,437,2.708,438,3.063,439,5.917,441,3.063,442,4.471,443,4.471,445,3.063,446,3.063,447,3.063,449,4.273,451,3.063,453,3.063,454,3.595,456,3.226,508,2.29,574,2.603,598,6.116,640,2.395,954,3.226,957,3.226,958,3.226,959,3.226,960,3.226,961,3.226,962,3.226,963,3.226,964,3.226,965,3.226,966,3.226,969,3.226,974,3.226,975,5.008,1919,2.274,1960,4.374,2657,2.927,2724,2.462,3693,5.563,3846,3.704,3847,4.12,3848,6.015,3849,4.12,3850,4.12,3851,5.408,3852,3.704,3853,3.704,3854,2.927]],["title/classes/TaskListResponse.html",[31,0.122,3832,4.047]],["body/classes/TaskListResponse.html",[3,0.087,4,0.072,5,0.053,8,0.228,9,0.795,10,1.737,12,0.9,13,0.304,14,0.005,15,0.201,22,0.104,31,0.172,33,1.52,37,2.773,69,1.451,82,3.906,114,0.711,172,0.003,173,0.003,175,1.239,187,0.731,189,0.76,190,0.766,192,4.536,207,2.73,216,1.377,349,2.038,380,4.337,381,2.762,383,4.241,432,3.102,569,2.789,574,3.155,627,4.05,628,4.734,629,1.891,630,6.26,631,2.673,635,2.52,636,2.569,637,3.696,638,3.696,639,3.443,640,3.149,641,3.149,642,5.853,699,5.793,700,1.918,722,2.305,942,5.075,947,5.102,948,4.771,1019,5.958,1020,3.848,1021,4.793,1024,4.243,1025,4.243,1026,4.243,1036,3.562,1037,3.562,1173,3.336,3832,5.709,3855,4.872,3856,7.704,3857,5.419,3858,5.419,3859,5.42,3860,4.512,3861,4.872,3862,3.443,3863,4.872]],["title/classes/TaskMapper.html",[31,0.122,3833,4.304]],["body/classes/TaskMapper.html",[3,0.108,4,0.09,5,0.066,8,0.283,10,1.415,13,0.215,14,0.005,15,0.222,22,0.096,31,0.159,78,0.942,82,3.971,114,0.676,128,1.62,149,1.233,172,0.003,173,0.003,175,1.534,182,1.557,187,0.533,189,0.942,190,0.559,199,1.233,328,1.646,380,3.533,383,3.455,404,3.424,574,3.625,575,6.076,642,4.768,662,5.157,722,3.564,1009,4.579,3833,6.975,3856,7.487,3864,6.713,3865,8.377,3866,6.713,3867,8.377,3868,5.589,3869,6.713,3870,6.713,3871,6.713,3872,8.377,3873,6.713,3874,6.713,3875,6.713,3876,6.713,3877,6.713,3878,6.713,3879,6.713,3880,6.713,3881,6.713,3882,6.713,3883,6.713,3884,6.713,3885,6.713,3886,6.713]],["title/modules/TaskModule.html",[257,1.377,3630,3.526]],["body/modules/TaskModule.html",[3,0.104,4,0.087,5,0.064,14,0.005,15,0.242,19,1.136,22,0.092,31,0.153,172,0.003,173,0.003,257,2.183,259,2.503,260,3.607,267,5.629,268,4.041,269,3.012,270,2.756,272,3.427,273,2.852,279,3.409,328,1.588,576,5.944,577,6.537,921,3.672,1952,4.418,2978,7.393,3475,6.783,3630,7.305,3755,7.393,3823,7.479,3830,7.393,3887,5.823,3888,5.823,3889,6.477,3890,6.477,3891,6.477]],["title/injectables/TaskRepo.html",[18,0.972,577,3.398]],["body/injectables/TaskRepo.html",[3,0.056,4,0.047,5,0.034,8,0.147,13,0.305,14,0.005,15,0.189,18,0.999,19,0.612,22,0.05,31,0.082,35,1.845,69,0.694,71,1.107,72,4.344,74,2.634,76,1.234,77,2.358,78,1.009,114,0.625,123,2.284,128,1.692,129,2.398,149,1.73,172,0.002,173,0.002,182,0.987,187,0.615,189,1.086,190,0.644,199,1.422,216,0.886,300,1.2,308,3.193,320,3.624,328,0.855,329,1.413,330,2.992,355,1.287,356,0.988,357,1.563,381,1.665,386,1.107,410,4.709,432,3.47,492,2.154,535,2.084,536,3.786,538,2.621,573,2.043,574,3.113,577,3.492,591,4.428,598,2.731,599,2.731,600,5.69,623,3.985,641,2.027,659,3.492,700,2.546,896,4.071,930,2.471,948,2.676,984,3.845,1000,2.379,1001,2.084,1002,4.071,1076,4.571,1105,6.265,1111,4.159,1112,3.345,1129,3.97,1130,4.071,1132,4.423,1133,4.423,1134,4.423,1135,3.773,1137,2.731,1151,4.729,1166,2.293,1168,2.731,1960,2.147,2141,3.641,2538,4.428,2630,3.492,2711,2.593,2716,3.773,3892,3.488,3893,6.434,3894,6.434,3895,6.434,3896,5.312,3897,3.488,3898,3.488,3899,3.488,3900,4.776,3901,8.48,3902,5.312,3903,3.488,3904,3.488,3905,3.488,3906,3.488,3907,5.312,3908,3.488,3909,7.278,3910,3.136,3911,3.136,3912,3.136,3913,3.136,3914,7.742,3915,3.488,3916,3.488,3917,3.488,3918,3.488,3919,3.488,3920,3.488,3921,3.488,3922,3.488,3923,3.488,3924,3.488,3925,3.488,3926,3.488,3927,3.488,3928,3.136,3929,2.478,3930,3.488,3931,3.488,3932,3.488,3933,3.488,3934,3.488,3935,3.488,3936,3.488,3937,3.488,3938,3.488,3939,3.488,3940,3.488,3941,3.488,3942,3.488,3943,3.488,3944,3.488,3945,3.488,3946,3.488,3947,5.312,3948,3.488,3949,2.904,3950,2.904,3951,2.904,3952,3.488,3953,6.434,3954,3.488,3955,3.488,3956,3.488,3957,3.488,3958,3.488,3959,3.488,3960,3.488,3961,3.488,3962,3.488,3963,3.488,3964,5.312,3965,3.488,3966,3.488,3967,3.488,3968,3.488,3969,3.488,3970,3.488,3971,7.193,3972,5.312,3973,3.488,3974,5.312,3975,3.488,3976,3.488,3977,3.488,3978,5.312,3979,3.488]],["title/classes/TaskResponse.html",[31,0.122,3856,4.047]],["body/classes/TaskResponse.html",[3,0.081,4,0.067,5,0.049,8,0.212,9,0.756,10,1.89,12,0.961,13,0.324,14,0.005,15,0.193,22,0.099,31,0.164,33,1.049,37,2.113,69,1.38,82,4.249,114,0.748,172,0.003,173,0.003,175,1.15,187,0.797,189,0.706,190,0.817,207,3.492,216,2.171,349,2.297,380,4.718,381,3.031,383,4.614,385,1.517,386,1.598,569,4.082,574,3.432,619,2.777,627,4.163,628,4.978,629,1.756,630,6.071,631,2.483,635,2.341,636,2.386,637,3.433,638,3.433,639,3.198,640,4.609,641,4.609,642,6.367,706,4.525,713,6.233,722,2.949,942,2.777,947,3.735,948,3.492,1019,4.268,1020,2.901,1021,3.308,1036,3.308,1037,3.308,1173,4.268,3832,3.94,3855,4.525,3856,7.572,3859,5.895,3860,4.19,3861,6.233,3862,4.405,3863,4.525,3980,5.033,3981,5.033,3982,5.033,3983,5.033,3984,5.033,3985,5.033,3986,5.033,3987,5.033,3988,5.033,3989,5.033,3990,5.033]],["title/classes/TaskScope.html",[31,0.122,3909,4.304]],["body/classes/TaskScope.html",[3,0.057,4,0.047,5,0.035,8,0.148,9,0.584,13,0.312,14,0.005,15,0.158,22,0.05,31,0.083,33,1.116,35,2.707,76,2.292,78,1.34,114,0.771,123,2.056,128,1.226,149,0.648,168,1.5,172,0.002,173,0.002,175,0.806,182,0.995,187,0.78,189,1.34,190,0.795,192,3.333,199,1.773,308,3.342,328,0.864,355,0.854,356,0.998,381,2.815,385,1.063,386,2.6,487,3.617,492,3.008,508,1.342,573,1.7,574,1.525,599,5.663,623,3.333,640,4.52,641,4.203,727,4.417,930,3.959,974,2.76,1000,3.653,1076,5.572,1112,3.959,1116,6.809,1123,2.935,1143,3.981,1144,3.981,1148,3.981,1149,2.504,1150,2.76,1151,5.765,1152,2.76,1157,2.62,1158,3.804,1159,2.76,1960,3.297,2119,3.991,2315,5.392,2666,3.981,2990,2.935,2991,4.815,2993,4.815,2998,3.169,3909,8.508,3949,4.459,3950,4.459,3951,6.022,3991,9.649,3992,5.355,3993,5.355,3994,5.355,3995,5.355,3996,5.355,3997,5.355,3998,5.355,3999,5.355,4000,5.355,4001,5.355,4002,5.355,4003,3.525,4004,5.355,4005,3.525,4006,3.525,4007,5.355,4008,3.525,4009,5.355,4010,3.525,4011,5.355,4012,3.525,4013,5.355,4014,3.525,4015,5.355,4016,3.525,4017,5.355,4018,3.525,4019,5.355,4020,3.525,4021,5.355,4022,3.525,4023,5.355,4024,3.525,4025,3.525,4026,6.476,4027,3.525,4028,5.355,4029,3.525,4030,3.525,4031,3.525]],["title/classes/TaskStatusMapper.html",[31,0.122,3868,4.304]],["body/classes/TaskStatusMapper.html",[3,0.118,4,0.098,5,0.072,8,0.31,13,0.236,14,0.004,15,0.216,22,0.105,31,0.174,78,1.031,82,3.485,114,0.593,128,1.246,149,1.351,172,0.004,173,0.004,175,1.681,182,1.646,187,0.584,189,1.031,190,0.612,199,1.351,328,1.803,404,3.565,662,5.453,719,7.964,720,6.487,722,3.768,3859,7.067,3860,6.122,3868,7.375,4032,8.858,4033,7.352,4034,7.352,4035,7.352,4036,7.352]],["title/classes/TaskStatusResponse.html",[31,0.122,3859,3.842]],["body/classes/TaskStatusResponse.html",[3,0.099,4,0.082,5,0.061,8,0.26,9,0.865,13,0.32,14,0.005,15,0.15,22,0.088,31,0.146,37,2.616,69,1.58,114,0.498,172,0.003,173,0.003,175,1.409,187,0.794,189,0.865,190,0.513,349,2.27,492,3.288,619,3.402,627,4.316,629,2.151,726,6.541,727,6.541,728,6.304,729,6.812,730,6.812,737,5.542,738,5.542,739,5.542,740,4.379,741,5.542,918,6.304,3859,7.129,4037,10.117,4038,6.164,4039,6.164,4040,6.164,4041,6.164,4042,6.164,4043,6.164,4044,6.164,4045,6.164,4046,6.164]],["title/injectables/TaskUC.html",[18,0.972,3830,3.842]],["body/injectables/TaskUC.html",[3,0.056,4,0.047,5,0.034,8,0.147,13,0.249,14,0.005,15,0.176,18,1.002,19,0.614,22,0.05,31,0.083,35,2.703,38,3.883,69,1.061,71,2.048,74,2.637,76,2.745,77,2.361,78,1.228,82,4.149,114,0.626,123,1.692,128,1.741,129,2.804,145,2.082,148,2.267,149,1.608,172,0.002,173,0.002,182,0.99,187,0.649,189,1.088,190,0.646,199,1.425,267,4.807,279,1.844,292,4.24,300,1.205,308,2.769,327,5.051,328,0.859,371,1.982,381,2.431,386,1.692,432,1.49,508,2.029,574,1.516,575,2.225,577,5.37,585,4.173,591,3.971,609,5.371,614,4.437,615,5.371,616,4.437,641,4.19,659,4.24,720,3.503,893,4.173,896,4.08,942,4.509,1000,3.635,1001,3.185,1076,4.099,1129,5.448,1130,3.016,1166,2.302,1168,2.742,1639,3.149,1850,4.437,1960,3.281,2246,4.173,2482,2.526,2501,7.468,2732,4.581,2779,3.786,3755,5.359,3766,2.916,3775,2.916,3789,4.791,3791,5.8,3794,6.481,3800,6.481,3825,4.791,3830,3.961,3910,4.791,3911,4.791,3912,4.791,3913,4.791,3949,4.437,3950,2.916,3951,4.437,4047,3.502,4048,5.329,4049,7.209,4050,3.502,4051,3.502,4052,5.329,4053,3.502,4054,5.329,4055,3.502,4056,5.329,4057,3.502,4058,5.329,4059,3.502,4060,3.502,4061,3.502,4062,6.45,4063,5.329,4064,5.329,4065,6.45,4066,6.45,4067,5.329,4068,5.329,4069,5.329,4070,7.209,4071,3.502,4072,8.169,4073,3.502,4074,2.916,4075,3.149,4076,3.502,4077,3.502,4078,7.209,4079,5.329,4080,3.502,4081,7.209,4082,5.329,4083,5.329,4084,5.329,4085,5.329,4086,3.502,4087,3.149]],["title/classes/TaskWithStatusVo.html",[31,0.122,575,3.284]],["body/classes/TaskWithStatusVo.html",[0,0.53,3,0.054,4,0.045,5,0.033,8,0.296,9,0.682,10,0.703,12,0.721,13,0.276,14,0.005,15,0.203,22,0.108,31,0.121,33,0.695,35,2.175,37,2.135,54,1.443,69,0.664,78,1.324,82,4.353,114,0.695,123,1.058,128,1.731,145,1.929,148,1.418,149,1.394,172,0.002,173,0.002,175,0.762,187,0.558,189,0.468,190,0.277,205,1.072,216,1.589,308,2.039,316,0.87,354,2.408,355,0.808,356,0.944,360,1.842,370,2.278,372,1.372,377,1.937,381,2.202,394,2.764,470,2.617,487,2.386,492,2.885,494,1.35,495,1.25,498,1.443,502,1.288,508,1.953,510,2.674,512,1.087,522,2.052,523,1.887,573,2.408,574,4.084,575,3.26,623,3.905,636,1.58,639,2.118,640,2.982,641,3.636,657,3.293,700,2.214,720,5.664,726,5.465,727,5.465,728,5.664,729,5.389,730,5.691,740,3.645,859,2.585,860,2.052,870,1.679,879,2.368,889,2.368,891,2.274,895,1.35,899,1.84,918,4.987,983,1.887,984,1.992,987,1.716,990,4.618,991,2.191,1002,3.976,1035,2.368,1075,1.796,1177,2.191,1318,3.37,1418,2.191,1661,2.481,1960,4.325,2119,1.84,2251,2.368,2598,2.191,2630,4.618,2631,3.851,2645,2.368,2651,3.645,2657,3.645,2658,2.478,2659,2.61,2660,2.61,2661,2.61,2662,4.018,2663,4.65,2664,2.61,2665,2.61,2666,2.478,2667,2.61,2668,2.61,2669,2.61,2670,2.61,2671,2.61,2672,2.61,2673,2.61,2674,2.61,2675,2.61,2676,4.018,2677,4.018,2678,4.018,2679,2.61,2680,2.61,2681,2.61,2682,2.61,2683,2.61,2684,2.61,2685,2.61,2686,2.61,2687,2.61,2688,2.368,2689,2.61,2690,2.61,2691,4.018,2692,2.61,2693,4.018,2694,4.018,2695,2.61,2696,2.61,2697,2.61,2698,2.61,2699,2.61,2700,4.018,2701,2.61,2702,2.61,2703,2.61,2704,2.61,2705,4.018,2706,2.61,2707,2.61,2708,2.61,2709,2.61,2710,2.61,2711,5.223,2712,2.61,2713,2.61,2714,2.61,2715,2.368,2716,2.368,2717,4.018,2718,2.61,2719,2.61,2720,2.61,2721,2.61,2722,2.61,2723,4.018,2724,1.992,2725,2.368,2726,2.61,2727,2.61,2728,2.61,2729,2.61,2730,2.61,2731,4.018,2732,3.26,2733,2.61,2734,2.61,2735,2.61,2736,4.018,2737,2.61,2738,2.61,2739,2.61,2740,2.61,2741,1.992,2742,1.796,2743,3.814,2744,2.61,2745,5.501,2746,2.61,2747,2.61,2748,2.61,4088,5.131,4089,3.334]],["title/entities/Team.html",[316,0.876,1051,2.604]],["body/entities/Team.html",[0,0.756,3,0.118,4,0.098,5,0.072,8,0.308,9,0.963,12,0.902,13,0.235,14,0.004,15,0.215,22,0.126,31,0.173,33,1.526,114,0.795,172,0.004,173,0.004,187,0.582,205,2.355,316,1.497,323,2.294,345,5.613,349,1.693,354,3.012,355,1.774,356,2.073,495,2.745,512,2.386,636,3.47,895,2.965,899,4.04,1051,4.45,2474,5.2,2749,7.355,2750,6.581,4090,7.32]],["title/entities/TeamNews.html",[316,0.876,1099,3.398]],["body/entities/TeamNews.html",[0,0.466,3,0.072,4,0.1,5,0.044,8,0.19,9,0.7,10,0.951,12,0.91,13,0.276,14,0.005,15,0.229,22,0.123,31,0.193,33,1.698,43,3.414,44,3.478,45,3.129,46,3.293,47,3.478,48,4.028,78,0.633,114,0.518,123,1.433,145,1.879,149,1.374,172,0.003,173,0.003,181,2.538,187,0.359,205,1.452,308,2.656,309,4.104,310,3.849,312,2.023,316,1.459,323,1.414,331,3.205,349,1.044,354,2.923,355,1.093,356,1.278,360,2.306,367,3.849,372,3.078,381,2.013,404,1.692,460,2.375,487,3.478,494,1.827,495,1.692,498,1.953,502,2.482,504,2.778,505,3.381,506,4.751,510,2.846,512,1.471,523,2.554,573,2.039,582,3.352,644,2.778,649,2.06,843,3.453,855,4.081,856,2.273,875,2.554,876,2.623,903,2.867,983,2.554,987,2.323,1046,2.867,1047,3.354,1048,4.63,1050,2.879,1051,3.767,1052,3.354,1053,4.751,1054,3.354,1055,5.312,1056,3.46,1057,4.774,1058,3.839,1059,4.081,1060,4.222,1061,4.916,1062,4.467,1063,3.078,1064,3.354,1065,4.081,1066,3.354,1067,3.354,1068,2.49,1069,3.078,1070,3.205,1071,2.182,1072,3.078,1073,2.867,1074,3.205,1075,3.46,1076,2.867,1077,3.354,1078,2.966,1079,3.354,1080,3.078,1081,3.354,1082,2.778,1083,3.354,1084,3.354,1085,3.354,1086,3.354,1087,3.078,1088,3.354,1089,3.078,1090,3.354,1091,3.354,1092,4.774,1093,4.469,1094,3.354,1095,4.774,1096,3.354,1097,3.354,1098,2.966,1099,4.222,1100,4.774,4091,4.512]],["title/controllers/TeamNewsController.html",[919,2.163,3282,4.304]],["body/controllers/TeamNewsController.html",[3,0.093,4,0.078,5,0.057,8,0.245,12,0.811,13,0.186,14,0.005,15,0.244,19,1.021,22,0.083,31,0.137,38,4.117,71,1.847,74,2.388,77,2.061,78,0.816,112,2.87,114,0.47,128,1.447,129,1.71,145,1.668,149,1.069,172,0.003,173,0.003,182,1.42,187,0.462,189,0.816,190,0.484,199,1.069,328,1.426,329,2.356,330,2.706,349,1.345,629,2.03,631,2.87,722,2.475,919,2.434,921,2.608,923,3.477,926,4.884,927,5.76,929,5.797,930,3.97,931,3.825,932,3.697,933,3.825,940,3.825,1002,4.326,1051,4.743,1062,3.366,1112,3.97,1129,5.003,1215,5.024,1229,4.325,1677,3.477,1854,5.424,1908,4.555,1952,3.968,2474,4.133,3164,6.739,3166,6.364,3176,5.822,3178,4.133,3180,4.555,3181,5.231,3182,5.231,3188,4.844,3189,4.844,3190,5.231,3191,5.231,3192,5.231,3193,5.231,3194,5.231,3282,6.364,4092,7.643,4093,5.818,4094,8.536,4095,5.818,4096,7.643,4097,5.818,4098,8.536,4099,5.818,4100,5.818,4101,5.231,4102,5.818,4103,5.818]],["title/classes/TestBootstrapConsole.html",[31,0.122,4104,4.647]],["body/classes/TestBootstrapConsole.html",[3,0.113,4,0.094,5,0.069,8,0.296,12,0.668,14,0.004,15,0.21,22,0.123,31,0.166,33,1.796,43,3.207,44,3.267,45,2.939,46,3.094,47,3.267,48,3.785,74,1.965,77,2.513,78,1.209,128,1.46,129,2.065,172,0.004,173,0.004,175,1.606,182,1.601,187,0.558,199,1.291,273,3.094,801,4.877,811,3.397,1874,5.647,1919,3.877,1921,5.85,1922,6.316,1932,5.501,1935,5.222,2276,5.85,3288,4.792,3610,6.746,4104,7.747,4105,6.316,4106,9.319,4107,7.025,4108,7.747,4109,7.025,4110,5.85,4111,6.316,4112,6.316,4113,6.316,4114,6.316]],["title/injectables/TimeoutInterceptor.html",[18,0.972,2872,4.304]],["body/injectables/TimeoutInterceptor.html",[3,0.09,4,0.075,5,0.055,8,0.237,9,0.815,13,0.269,14,0.005,15,0.218,18,1.406,19,0.988,20,4.409,21,4.185,22,0.08,31,0.133,35,2.408,37,2.552,43,2.57,44,2.619,45,3.744,46,2.479,47,2.619,48,3.033,54,2.437,78,1.255,114,0.604,168,2.395,172,0.003,173,0.003,182,1.39,187,0.74,189,1.049,190,0.745,199,1.374,216,1.43,282,4.688,300,1.938,385,1.698,386,1.788,397,5.337,404,3.15,459,4.409,841,5.102,897,3.107,919,3.129,1732,5.56,1854,4.753,1920,5.857,1925,6.228,1986,4.688,1998,6.725,1999,6.725,2000,7.007,2001,8.046,2003,3.272,2004,7.552,2007,4.688,2130,4.347,2131,4.233,2319,4.185,2870,7.119,2872,6.228,3124,5.857,4115,5.63,4116,7.48,4117,5.857,4118,5.313,4119,6.228,4120,8.399,4121,8.399,4122,5.63,4123,5.63,4124,7.552,4125,5.63,4126,5.63,4127,5.63,4128,5.63,4129,5.63,4130,7.48,4131,7.48,4132,5.63,4133,7.48,4134,5.63,4135,5.63,4136,5.63,4137,5.63,4138,5.63,4139,7.48,4140,5.63,4141,5.63]],["title/classes/UpdateMatchParams.html",[31,0.122,2790,4.304]],["body/classes/UpdateMatchParams.html",[3,0.118,4,0.098,5,0.072,8,0.31,9,0.967,12,0.843,13,0.236,14,0.004,15,0.241,22,0.105,31,0.21,76,3.368,145,2.077,172,0.004,173,0.004,175,1.684,187,0.586,216,1.872,349,1.704,622,4.283,627,3.65,629,2.572,1071,4.288,1196,3.712,2775,5.83,2790,7.385,2826,6.593,2840,6.3,4142,8.869,4143,7.369,4144,7.974,4145,7.369,4146,7.369]],["title/classes/UpdateNewsParams.html",[31,0.122,3173,4.047]],["body/classes/UpdateNewsParams.html",[3,0.1,4,0.084,5,0.061,8,0.263,9,1.016,12,0.886,13,0.283,14,0.004,15,0.195,22,0.089,31,0.22,172,0.003,173,0.003,175,1.43,181,3.271,187,0.702,190,0.667,216,2.368,316,1.67,349,2.044,381,2.511,416,4.657,582,4.319,628,4.797,629,2.184,722,3.409,1056,4.762,1062,4.469,1171,5.21,1173,4.933,1175,5.626,1177,5.267,1178,5.091,1179,6.274,1180,5.956,1193,7.204,1194,6.621,1195,6.029,1196,3.152,1557,4.657,2475,5.692,3173,6.274,4147,9.32,4148,8.013,4149,8.013,4150,6.274,4151,7.204,4152,8.013,4153,6.257,4154,6.257,4155,6.257]],["title/entities/User.html",[145,1.128,316,0.876]],["body/entities/User.html",[0,0.593,3,0.092,4,0.077,5,0.056,8,0.395,9,0.825,12,0.958,13,0.309,14,0.005,15,0.22,22,0.108,31,0.136,33,1.196,114,0.684,121,5.389,145,1.653,149,1.391,172,0.003,173,0.003,187,0.745,190,0.751,205,1.846,316,1.283,323,1.798,349,2.168,354,3.057,355,1.39,356,1.625,360,2.719,385,1.73,386,1.822,494,2.324,495,2.152,502,2.217,510,3.432,512,1.87,700,2.68,843,3.737,855,3.646,856,3.815,859,3.815,867,5.93,870,2.89,876,3.335,895,2.324,902,3.646,903,3.646,2075,5.38,2482,4.564,2484,3.532,2485,3.736,2490,4.746,2491,4.746,2553,3.646,2554,3.772,2555,3.646,2556,3.772,2557,4.265,2558,4.265,2599,4.492,2603,4.492,2751,6.306,2752,5.159,2753,5.159,2754,5.159,2755,5.159,2756,5.159,3536,5.159,4156,5.737,4157,5.737,4158,5.737,4159,5.737,4160,5.737,4161,5.737,4162,5.737,4163,5.737]],["title/controllers/UserController.html",[919,2.163,4164,4.304]],["body/controllers/UserController.html",[3,0.105,4,0.087,5,0.064,8,0.275,13,0.209,14,0.005,15,0.246,19,1.145,22,0.093,31,0.154,35,1.872,71,2.613,74,2.522,77,2.22,78,0.916,114,0.527,123,2.072,128,1.528,129,1.919,145,1.968,172,0.003,173,0.003,182,1.53,187,0.519,189,0.916,190,0.543,199,1.199,267,5.103,279,3.436,312,3.69,328,1.6,329,2.644,349,1.51,368,5.111,629,2.278,919,2.731,921,2.926,923,3.901,926,5.1,929,5.55,931,4.291,932,4.148,933,4.291,940,4.291,1182,4.453,1593,4.637,2482,3.095,2802,5.869,3475,6.149,3497,7.059,3507,5.435,3818,5.869,4164,6.854,4165,6.528,4166,6.528,4167,8.231,4168,6.528,4169,6.528,4170,6.528,4171,6.528,4172,6.528,4173,6.528,4174,6.528]],["title/classes/UserInfoMapper.html",[31,0.122,3248,4.304]],["body/classes/UserInfoMapper.html",[3,0.116,4,0.097,5,0.071,8,0.306,10,1.53,13,0.233,14,0.004,15,0.214,22,0.103,31,0.171,78,1.018,114,0.586,128,1.23,145,2.196,149,1.333,172,0.004,173,0.004,175,1.659,182,1.633,187,0.577,189,1.018,190,0.604,199,1.333,328,1.779,404,3.545,662,5.41,722,3.738,1009,4.949,2490,3.819,2491,3.819,2732,4.61,3222,7.303,3248,7.316,3509,7.901,3512,6.524,3514,6.524,3576,6.041,3578,6.041,4175,8.787]],["title/classes/UserInfoResponse.html",[31,0.122,3222,3.842]],["body/classes/UserInfoResponse.html",[3,0.103,4,0.085,5,0.063,8,0.269,9,0.885,10,2.123,12,0.942,13,0.301,14,0.004,15,0.156,22,0.091,31,0.151,69,1.617,114,0.783,145,2.163,172,0.003,173,0.003,175,1.461,187,0.746,189,0.896,190,0.807,216,2.386,316,1.376,349,2.064,619,3.526,627,3.342,628,4.595,629,2.23,635,2.972,654,3.152,655,4.18,656,4.18,2490,5.104,2491,5.104,2553,4.06,2555,4.06,2862,6.761,3222,7.208,3339,5.003,3382,5.768,3583,5.32,3584,5.32,4176,9.697,4177,6.389,4178,6.389,4179,8.12,4180,6.389]],["title/classes/UserMatch.html",[31,0.122,2518,3.842]],["body/classes/UserMatch.html",[0,0.46,3,0.072,4,0.06,5,0.044,8,0.188,9,0.809,12,0.973,13,0.275,14,0.005,15,0.209,22,0.122,31,0.176,33,1.548,54,1.929,69,0.887,76,2.253,78,0.625,114,0.36,121,4.842,123,2.913,145,1.945,172,0.003,173,0.003,175,1.019,187,0.59,189,0.625,190,0.371,205,2.048,316,1.259,349,1.472,354,3.031,355,1.08,356,1.263,360,2.909,370,2.319,420,2.295,460,2.346,470,2.664,492,1.493,494,3.008,495,1.672,498,1.929,508,1.697,510,2.827,512,2.421,843,3.214,876,2.591,895,1.805,902,2.832,1050,3.841,1071,2.155,1319,2.401,1408,5.066,1410,4.343,1434,3.041,1788,3.514,1824,4.411,2482,2.113,2490,3.351,2491,3.351,2510,4.985,2511,6.344,2512,3.49,2513,4.733,2514,4.985,2515,5.302,2516,5.302,2517,4.733,2518,6.973,2519,5.816,2520,5.302,2521,4.985,2522,3.712,2523,2.591,2524,3.49,2525,3.49,2526,5.302,2527,3.712,2528,3.712,2529,3.712,2530,6.184,2531,5.302,2532,3.712,2533,5.816,2534,4.343,2535,3.167,2536,4.573,2537,3.604,2538,3.92,2539,3.712,2540,3.49,2541,3.49,2542,6.71,2543,4.523,2544,5.302,2545,3.49,2546,3.712,2547,3.712,2548,3.712,2549,3.712,2550,3.712,2551,3.712,2552,3.712,2553,2.832,2554,2.93,2555,2.832,2556,2.93,2557,3.314,2558,3.314,2559,3.712,2560,3.712,2561,3.712,2562,3.712,2563,3.712,2564,3.712,2565,4.733,2566,3.314,2567,5.302,2568,3.712,2766,4.008,3676,4.008,4181,4.458,4182,4.458,4183,4.458]],["title/classes/UserMatchResponse.html",[31,0.122,2799,3.842]],["body/classes/UserMatchResponse.html",[3,0.089,4,0.074,5,0.055,8,0.234,9,0.808,10,1.563,12,0.94,13,0.317,14,0.005,15,0.203,22,0.079,31,0.175,54,3.208,69,1.106,76,2.953,114,0.673,145,2.209,172,0.003,173,0.003,175,1.27,187,0.758,189,0.779,190,0.462,216,2.356,349,2.145,460,2.924,512,2.416,622,5.173,627,3.926,629,1.939,1050,3.323,1196,2.798,1352,4.35,1353,4.35,1678,4.308,1788,5.118,1791,4.564,2490,4.881,2491,4.881,2534,5.056,2535,5.266,2536,4.564,2540,4.35,2541,4.35,2542,6.532,2553,3.53,2554,3.652,2555,3.53,2556,3.652,2775,6.402,2799,6.894,2806,6.532,2826,5.51,2831,4.625,2832,4.625,2837,5.51,2840,7.029,4184,9.739,4185,5.555,4186,5.555,4187,5.555,4188,5.555,4189,5.555,4190,8.338,4191,7.413,4192,5.555,4193,5.555,4194,5.555,4195,5.555]],["title/modules/UserModule.html",[257,1.377,264,3.398]],["body/modules/UserModule.html",[3,0.116,4,0.097,5,0.071,14,0.004,15,0.239,19,1.273,22,0.103,31,0.171,172,0.004,173,0.004,257,2.341,259,2.804,260,3.87,264,6.863,267,5.788,268,4.335,269,3.375,270,3.087,272,3.676,279,3.819,328,1.779,919,3.036,921,3.939,3475,6.975,4164,7.87,4196,7.256,4197,7.256,4198,7.256]],["title/injectables/UserRepo.html",[18,0.972,267,2.926]],["body/injectables/UserRepo.html",[3,0.102,4,0.085,5,0.063,8,0.269,10,1.71,13,0.286,14,0.005,15,0.217,18,1.525,19,1.119,22,0.091,31,0.151,35,2.557,69,1.27,71,2.025,74,2.771,77,2.531,78,0.895,114,0.72,128,1.081,129,2.622,145,1.947,172,0.003,173,0.003,182,1.507,187,0.709,189,1.251,190,0.742,199,1.49,267,4.59,300,2.195,308,3.06,328,1.564,329,2.583,355,1.545,357,2.859,385,1.923,386,2.025,470,2.668,508,3.087,535,3.811,536,4.94,538,4.001,1587,5.734,2482,3.845,2485,4.631,3545,7.292,3548,7.292,4199,6.377,4200,9.905,4201,6.377,4202,6.377,4203,8.11,4204,6.377,4205,6.377,4206,6.377]],["title/classes/ValidationError.html",[31,0.122,186,3.842]],["body/classes/ValidationError.html",[3,0.1,4,0.083,5,0.061,8,0.261,9,0.868,12,0.934,13,0.328,14,0.004,15,0.194,19,1.087,22,0.088,30,6.104,31,0.146,33,1.66,34,2.883,37,1.652,69,1.234,71,3.275,84,5.437,114,0.5,172,0.003,173,0.003,175,1.417,178,7.036,179,3.776,180,6.247,181,2.987,182,1.48,183,7.327,184,7.327,186,5.92,187,0.805,189,0.87,190,0.516,192,5.147,193,5.573,194,5.573,195,5.573,196,5.573,197,5.573,198,5.573,199,1.463,200,5.573,201,3.938,202,4.853,203,5.573,204,5.161,205,1.994,208,3.602,209,4.608,212,5.573,432,2.637,4207,6.198,4208,6.198,4209,6.198,4210,6.198]],["title/classes/ValidationErrorDetailResponse.html",[31,0.122,222,4.304]],["body/classes/ValidationErrorDetailResponse.html",[3,0.124,4,0.103,5,0.076,12,0.985,13,0.247,14,0.004,22,0.11,31,0.182,34,4.233,69,1.532,71,2.443,114,0.621,172,0.004,173,0.004,175,1.759,187,0.611,189,1.079,190,0.64,204,6.406,219,5.633,222,7.577,4211,9.1,4212,7.693,4213,7.693,4214,7.693,4215,8.182]],["title/modules/ValidationModule.html",[257,1.377,823,3.842]],["body/modules/ValidationModule.html",[3,0.124,4,0.103,5,0.076,14,0.005,15,0.236,19,1.353,22,0.11,31,0.182,172,0.004,173,0.004,257,2.428,259,2.98,272,3.226,823,6.774,837,8.193,1923,5.069,1933,3.969,2068,6.038,2412,7.588,4216,7.711,4217,7.711,4218,7.711]],["title/dependencies.html",[260,2.738,4219,3.878]],["body/dependencies.html",[4,0.057,5,0.06,10,0.892,13,0.136,14,0.005,19,0.742,24,2.688,31,0.145,43,2.799,74,1.715,77,2.133,121,2.528,127,2.688,172,0.003,173,0.003,207,2.131,260,1.863,275,3.312,277,3.804,298,4.082,323,1.326,355,1.748,356,1.198,357,1.896,457,2.781,629,1.476,761,3.312,771,4.919,801,2.394,811,2.045,814,2.279,825,3.005,827,2.886,883,2.886,1059,2.688,1063,4.182,1196,3.633,1255,2.886,1473,3.145,1634,3.804,1822,3.312,1881,2.886,1923,2.781,2007,3.522,2033,2.781,2034,3.896,2035,3.312,2131,3.471,2150,5.395,2151,3.522,2184,3.804,2237,2.781,2259,3.804,2840,4.356,2889,3.005,2919,6.485,2920,3.005,2948,3.804,3027,3.145,3028,2.781,3063,3.145,3123,2.886,3381,3.804,3610,3.312,3659,6.697,3723,3.804,4220,6.132,4221,9.031,4222,4.23,4223,4.23,4224,4.23,4225,4.23,4226,4.23,4227,6.132,4228,4.23,4229,7.909,4230,4.23,4231,4.23,4232,4.23,4233,4.23,4234,4.23,4235,4.23,4236,4.23,4237,4.23,4238,4.23,4239,4.23,4240,3.522,4241,6.132,4242,4.23,4243,6.132,4244,4.23,4245,6.132,4246,4.23,4247,4.23,4248,4.23,4249,4.23,4250,4.23,4251,4.23,4252,6.132,4253,4.23,4254,6.132,4255,4.23,4256,4.23,4257,4.23,4258,4.23,4259,4.23,4260,4.23,4261,4.23,4262,4.23,4263,3.804,4264,4.23,4265,4.23,4266,4.23,4267,4.23,4268,6.132,4269,4.23,4270,4.23,4271,4.23,4272,7.212,4273,7.909,4274,4.23,4275,4.23,4276,4.23,4277,6.132,4278,4.23,4279,6.132,4280,6.132,4281,4.23,4282,4.801,4283,4.23,4284,4.23,4285,3.145,4286,4.23,4287,3.145,4288,4.23,4289,4.23,4290,5.513,4291,4.23,4292,4.23,4293,4.23,4294,4.23,4295,6.132,4296,4.23,4297,4.23,4298,4.23,4299,4.23,4300,4.23,4301,4.23,4302,4.23,4303,4.23,4304,4.23,4305,4.23,4306,4.23,4307,4.23,4308,4.23,4309,4.23,4310,4.23,4311,4.23,4312,4.23,4313,6.132,4314,5.513,4315,4.23,4316,4.23,4317,4.23,4318,4.23,4319,3.804,4320,4.23,4321,4.23,4322,6.132,4323,4.23,4324,4.23,4325,4.23,4326,4.23,4327,4.23,4328,4.23,4329,4.23,4330,4.23,4331,4.23,4332,4.23,4333,4.23,4334,4.23,4335,4.23,4336,6.132,4337,4.23,4338,4.23,4339,4.23,4340,4.23,4341,4.23,4342,4.23,4343,4.23,4344,4.23,4345,6.132,4346,3.804,4347,4.23,4348,4.23,4349,4.23,4350,4.23,4351,4.23,4352,4.23,4353,4.23,4354,4.23,4355,4.23,4356,3.804,4357,4.23,4358,4.23,4359,4.23,4360,4.23,4361,4.23,4362,4.23,4363,4.23,4364,4.23,4365,3.522,4366,4.23,4367,4.23,4368,4.23,4369,4.23,4370,4.23,4371,4.23,4372,4.23,4373,4.23,4374,4.23,4375,4.23,4376,4.23,4377,4.23,4378,4.23,4379,4.23,4380,4.23]],["title/miscellaneous/enumerations.html",[4381,2.836,4382,5.591]],["body/miscellaneous/enumerations.html",[8,0.261,14,0.004,145,1.736,172,0.003,173,0.003,310,4.095,386,3.406,573,2.792,843,2.32,874,6.229,896,3.502,1051,3.117,1166,5.229,1906,5.913,2237,4.067,2249,4.599,2468,4.844,2473,4.395,2474,4.395,2498,4.844,2499,6.229,2502,6.624,2511,4.844,2512,6.884,2519,6.229,2533,6.229,2534,6.703,2535,6.246,2536,6.153,2537,5.253,2538,5.714,2775,5.78,2804,4.844,2805,6.229,2813,7.152,2820,7.152,2827,6.624,3756,5.563,3766,6.624,3775,6.624,3779,5.563,3780,5.563,3781,5.563,3782,5.563,4190,7.152,4381,4.067,4382,5.563,4383,5.563,4384,8.792,4385,6.187,4386,7.955,4387,5.563,4388,6.187,4389,7.955,4390,5.563,4391,7.955,4392,5.563,4393,6.187,4394,6.187]],["title/miscellaneous/functions.html",[4381,2.836,4395,4.623]],["body/miscellaneous/functions.html",[8,0.232,12,0.843,13,0.284,14,0.004,34,3.864,38,2.968,114,0.716,123,1.749,139,5.115,143,4.779,172,0.003,173,0.003,178,5.028,189,1.244,190,0.738,199,1.699,201,4.684,207,2.775,316,0.934,323,2.604,364,3.758,372,2.267,376,3.913,386,2.34,424,3.913,432,2.344,470,2.305,492,1.845,496,4.829,508,2.097,630,5.902,722,2.344,807,6.308,1063,6.629,1073,3.5,1210,5.302,1318,2.968,1635,5.48,1930,3.713,1969,4.587,2044,4.587,2120,5.48,2129,4.284,2154,3.758,2178,4.953,2182,4.953,2187,4.953,2206,6.628,2221,3.913,2226,4.953,2241,4.953,2333,4.587,2334,6.946,2367,4.587,2370,4.953,2374,4.587,2389,6.138,2423,5.236,2724,3.292,2868,3.5,3005,4.587,3204,4.095,3213,7.47,3607,6.176,4110,7.924,4287,4.095,4381,3.621,4395,4.095,4396,5.509,4397,5.509,4398,7.372,4399,7.47,4400,7.372,4401,7.372,4402,5.509,4403,5.509,4404,7.372,4405,5.509,4406,7.372,4407,5.509,4408,5.509,4409,5.509,4410,7.387,4411,4.953,4412,7.372,4413,4.953,4414,5.509,4415,5.509,4416,4.953,4417,4.587,4418,7.372,4419,7.372,4420,7.372,4421,4.953,4422,5.509,4423,4.953,4424,7.47,4425,4.953,4426,5.509,4427,5.509,4428,4.587,4429,4.953,4430,4.953,4431,5.509,4432,5.509,4433,7.372,4434,5.509,4435,5.509]],["title/index.html",[8,0.182,4436,3.592,4437,3.206]],["body/index.html",[10,0.97,14,0.004,34,3.028,37,2.014,54,1.991,84,2.603,114,0.526,149,0.845,172,0.003,173,0.003,179,3.583,180,2.923,181,1.561,207,3.28,211,3.028,216,1.168,218,3.024,260,2.026,298,4.909,326,3.024,358,3.602,364,5.605,365,3.784,368,5.098,369,2.923,371,2.603,372,1.893,376,3.268,385,1.387,394,3.507,403,3.268,419,2.832,531,2.421,772,4.625,773,5.168,811,4.193,831,2.923,833,3.268,888,3.419,923,4.517,1032,2.923,1058,2.749,1062,2.867,1070,3.268,1093,3.891,1130,2.603,1173,2.832,1178,2.923,1298,3.138,1649,2.923,1673,5.233,1686,2.923,1788,2.539,1802,6.109,1817,6.217,1824,2.368,1874,4.392,1879,3.268,1890,4.441,1901,3.685,1918,3.419,1919,2.539,1930,3.28,2003,2.673,2032,3.268,2033,3.024,2034,4.137,2080,5.618,2129,2.673,2131,3.685,2141,2.603,2150,5.605,2152,3.83,2161,4.441,2237,3.024,2384,4.441,2390,3.602,2429,3.268,2523,3.784,2741,2.749,2853,3.268,2873,2.923,2885,4.136,3109,3.83,3204,3.419,3321,4.84,3322,2.832,3382,3.268,3448,4.136,3929,3.268,4287,3.419,4438,3.602,4439,7.498,4440,5.854,4441,4.6,4442,4.84,4443,3.602,4444,3.268,4445,3.83,4446,3.602,4447,4.136,4448,3.83,4449,3.602,4450,5.421,4451,4.441,4452,4.136,4453,4.6,4454,5.854,4455,6.109,4456,4.136,4457,3.83,4458,5.854,4459,5.421,4460,4.6,4461,4.6,4462,4.6,4463,3.602,4464,5.368,4465,3.83,4466,3.83,4467,6.511,4468,4.136,4469,3.83,4470,6.511,4471,4.136,4472,4.136,4473,3.419,4474,3.83,4475,7.557,4476,5.368,4477,4.136,4478,4.6,4479,4.136,4480,6.795,4481,5.098,4482,4.6,4483,3.83,4484,3.602,4485,4.136,4486,4.6,4487,4.6,4488,3.83,4489,5.098,4490,4.6,4491,5.155,4492,4.6,4493,4.136,4494,3.419,4495,3.602,4496,4.6,4497,4.136,4498,6.511,4499,6.511,4500,3.419,4501,9.258,4502,6.795,4503,8.672,4504,8.218,4505,4.6,4506,4.6,4507,4.6,4508,4.6,4509,6.511,4510,5.421,4511,4.136,4512,4.6,4513,3.83,4514,4.6,4515,6.511,4516,4.6,4517,4.136,4518,4.136,4519,6.511,4520,6.511,4521,3.419,4522,3.419,4523,3.83,4524,4.6,4525,5.421,4526,4.6,4527,3.602,4528,4.6,4529,3.602,4530,4.6,4531,4.136,4532,4.136,4533,4.136,4534,3.83,4535,5.098,4536,5.854,4537,4.6,4538,4.136,4539,4.6,4540,4.136,4541,4.6,4542,3.83,4543,3.419]],["title/license.html",[4436,3.592,4437,3.206,4544,3.878]],["body/license.html",[0,0.468,2,0.726,4,0.124,5,0.018,14,0.001,15,0.024,31,0.023,35,0.285,37,0.487,40,1.548,45,0.416,46,0.438,56,1.43,60,2.771,72,0.438,73,5.117,78,0.139,82,0.471,112,2.97,118,0.654,127,0.632,145,1.447,149,0.899,168,0.423,172,0.001,173,0.001,179,4.163,180,0.632,182,0.185,187,0.079,211,1.459,218,1.2,246,0.654,252,0.563,253,2.712,270,0.423,312,2.472,314,1.993,316,0.309,320,0.92,325,2.276,326,4.103,354,0.316,359,3.774,372,3.085,377,5.851,381,0.312,394,2.222,416,0.578,419,1.931,420,3.859,431,1.548,437,0.654,439,0.678,458,1.642,479,7.112,503,1.58,531,0.961,580,0.828,582,0.446,646,1.882,750,0.706,768,0.632,770,1.091,773,0.512,786,0.706,814,0.984,827,0.678,832,0.779,843,0.373,878,0.632,881,1.982,886,0.828,948,0.92,949,0.984,972,0.828,1020,1.059,1032,0.632,1033,0.654,1065,0.632,1068,3.043,1069,0.678,1073,2.328,1112,0.462,1130,1.033,1173,1.558,1178,1.993,1180,0.739,1182,2.14,1190,0.632,1298,1.727,1313,2.814,1318,1.974,1333,2.603,1344,0.654,1549,1.357,1648,5.674,1649,0.632,1675,2.603,1676,1.875,1678,1.061,1791,1.124,1821,0.828,1824,1.886,1851,3.558,1854,1.608,1855,3.958,1862,2.465,1884,0.828,1890,1.727,1901,1.433,1930,2.911,1933,2.123,1945,0.894,1947,1.642,1970,2.276,1992,2.229,2003,0.578,2042,3.833,2077,2.14,2078,3.391,2080,3.639,2128,1.727,2141,1.033,2150,1.245,2168,0.706,2201,0.779,2227,0.706,2246,3.833,2356,1.245,2420,0.706,2430,2.229,2432,1.357,2484,3.558,2715,0.706,2724,1.875,2741,3.295,2742,1.69,2743,0.739,2773,1.16,2840,1.297,2851,1.52,2886,0.828,2889,1.798,2946,4.475,3003,0.739,3006,0.678,3008,0.739,3075,0.779,3103,0.706,3104,3.369,3106,0.828,3107,3.066,3110,2.108,3123,2.14,3195,0.828,3204,4.475,3288,0.678,3321,1.357,3322,2.539,3382,0.706,3390,0.779,3440,2.108,3485,2.276,3591,0.894,3607,1.357,3612,0.894,3664,2.14,3854,1.798,3929,3.478,4074,1.52,4075,3.294,4087,2.276,4101,1.642,4118,2.229,4144,0.894,4151,4.694,4287,0.739,4413,2.821,4416,0.894,4421,0.894,4423,0.894,4424,0.894,4429,0.894,4439,0.828,4448,0.828,4455,4.099,4456,0.894,4459,7.528,4464,3.22,4473,5.387,4474,6.978,4476,0.706,4477,2.276,4483,3.774,4484,0.779,4491,2.814,4494,1.882,4510,0.828,4518,0.894,4521,1.882,4525,2.612,4527,1.43,4535,1.982,4538,1.642,4544,9.119,4545,6.961,4546,6.802,4547,6.041,4548,7.754,4549,3.774,4550,0.994,4551,0.994,4552,2.531,4553,8.24,4554,5.663,4555,6.12,4556,3.664,4557,0.994,4558,0.994,4559,1.826,4560,3.664,4561,2.531,4562,2.531,4563,6.02,4564,0.894,4565,1.882,4566,0.994,4567,0.994,4568,1.642,4569,3.664,4570,3.774,4571,1.826,4572,1.826,4573,5.793,4574,4.896,4575,0.994,4576,0.994,4577,4.125,4578,1.642,4579,2.457,4580,0.894,4581,0.894,4582,5.196,4583,9.002,4584,2.276,4585,0.994,4586,0.994,4587,3.137,4588,5.221,4589,0.994,4590,5.221,4591,1.43,4592,0.994,4593,3.664,4594,0.739,4595,0.994,4596,3.137,4597,0.828,4598,5.961,4599,0.828,4600,0.894,4601,0.894,4602,5.514,4603,5.779,4604,3.664,4605,6.02,4606,0.994,4607,1.826,4608,0.994,4609,0.994,4610,2.276,4611,0.994,4612,0.994,4613,0.994,4614,1.642,4615,0.994,4616,0.994,4617,3.137,4618,0.994,4619,0.894,4620,2.531,4621,6.961,4622,0.994,4623,0.994,4624,0.994,4625,2.108,4626,2.531,4627,1.642,4628,0.994,4629,0.994,4630,2.276,4631,0.779,4632,1.826,4633,1.826,4634,2.531,4635,0.994,4636,5.196,4637,3.664,4638,3.664,4639,4.125,4640,2.108,4641,2.531,4642,1.826,4643,0.994,4644,0.994,4645,0.994,4646,2.531,4647,0.994,4648,0.994,4649,1.826,4650,0.994,4651,1.826,4652,0.994,4653,0.994,4654,3.137,4655,0.894,4656,1.826,4657,8.961,4658,2.531,4659,5.221,4660,2.821,4661,1.43,4662,0.994,4663,1.826,4664,2.531,4665,5.221,4666,5.514,4667,2.821,4668,0.994,4669,3.137,4670,1.826,4671,3.137,4672,2.821,4673,0.994,4674,2.531,4675,0.779,4676,7.999,4677,1.642,4678,0.994,4679,4.896,4680,0.994,4681,2.276,4682,2.93,4683,0.994,4684,6.63,4685,2.276,4686,1.826,4687,5.779,4688,4.125,4689,0.994,4690,1.826,4691,4.533,4692,0.994,4693,6.241,4694,1.826,4695,0.994,4696,0.828,4697,0.994,4698,2.531,4699,0.994,4700,0.994,4701,0.994,4702,0.828,4703,5.196,4704,2.531,4705,2.821,4706,0.994,4707,0.994,4708,0.994,4709,1.642,4710,5.514,4711,0.894,4712,1.642,4713,0.828,4714,0.828,4715,2.276,4716,2.531,4717,2.531,4718,0.828,4719,0.994,4720,3.294,4721,3.05,4722,0.894,4723,2.276,4724,0.994,4725,0.894,4726,0.994,4727,0.994,4728,1.642,4729,0.994,4730,7.268,4731,2.276,4732,0.739,4733,3.709,4734,4.812,4735,1.826,4736,1.826,4737,3.05,4738,0.994,4739,0.739,4740,0.994,4741,0.994,4742,1.826,4743,3.05,4744,0.994,4745,1.52,4746,0.994,4747,0.779,4748,3.05,4749,0.994,4750,0.828,4751,4.533,4752,2.612,4753,0.994,4754,3.294,4755,0.994,4756,0.994,4757,0.994,4758,0.994,4759,0.994,4760,0.994,4761,2.531,4762,0.994,4763,0.994,4764,1.642,4765,1.826,4766,1.826,4767,0.994,4768,6.241,4769,1.642,4770,0.994,4771,0.994,4772,0.894,4773,0.994,4774,0.994,4775,2.531,4776,0.894,4777,0.994,4778,5.961,4779,0.779,4780,0.994,4781,0.994,4782,0.994,4783,3.664,4784,3.709,4785,0.994,4786,0.994,4787,2.531,4788,0.994,4789,0.994,4790,3.137,4791,0.994,4792,1.642,4793,0.994,4794,0.994,4795,0.994,4796,0.994,4797,0.994,4798,0.994,4799,1.826,4800,0.994,4801,0.994,4802,0.994,4803,1.826,4804,0.994,4805,0.994,4806,0.994,4807,0.994,4808,0.994,4809,1.826,4810,1.826,4811,1.357,4812,4.694,4813,0.994,4814,4.125,4815,0.994,4816,0.994,4817,1.642,4818,2.531,4819,3.137,4820,3.137,4821,3.137,4822,0.994,4823,3.294,4824,3.294,4825,0.994,4826,2.531,4827,0.994,4828,1.826,4829,0.994,4830,1.642,4831,3.664,4832,1.826,4833,3.137,4834,3.137,4835,0.994,4836,2.531,4837,3.294,4838,0.994,4839,0.994,4840,2.108,4841,3.774,4842,2.531,4843,1.826,4844,0.739,4845,0.994,4846,0.894,4847,0.994,4848,0.994,4849,0.994,4850,2.276,4851,0.994,4852,0.994,4853,1.642,4854,0.994,4855,0.994,4856,1.826,4857,0.994,4858,2.531,4859,0.894,4860,0.994,4861,0.894,4862,2.108,4863,1.826,4864,4.125,4865,6.74,4866,2.531,4867,1.826,4868,1.826,4869,1.826,4870,1.826,4871,3.137,4872,1.642,4873,0.894,4874,0.994,4875,0.994,4876,0.994,4877,3.709,4878,1.826,4879,0.994,4880,0.994,4881,0.994,4882,0.994,4883,1.826,4884,0.994,4885,1.826,4886,0.994,4887,0.994,4888,3.639,4889,0.994,4890,5.196,4891,0.894,4892,0.994,4893,0.994,4894,0.994,4895,1.826,4896,0.994,4897,2.723,4898,3.137,4899,1.826,4900,0.894,4901,0.994,4902,1.642,4903,0.994,4904,0.994,4905,0.994,4906,1.826,4907,0.994,4908,0.994,4909,0.828,4910,2.821,4911,0.994,4912,1.826,4913,1.826,4914,0.994,4915,0.994,4916,2.276,4917,0.994,4918,0.994,4919,0.994,4920,0.994,4921,3.137,4922,0.994,4923,0.994,4924,0.994,4925,0.894,4926,0.894,4927,2.108,4928,0.994,4929,0.894,4930,0.994,4931,0.994,4932,0.994,4933,3.664,4934,0.994,4935,0.994,4936,0.894,4937,3.137,4938,0.994,4939,0.828,4940,0.994,4941,0.994,4942,0.994,4943,0.994,4944,0.994,4945,0.894,4946,3.774,4947,2.531,4948,0.994,4949,3.137,4950,0.994,4951,0.994,4952,2.531,4953,0.994,4954,0.828,4955,2.531,4956,0.994,4957,1.826,4958,0.994,4959,0.994,4960,0.994,4961,0.994,4962,0.994,4963,0.994,4964,0.779,4965,0.894,4966,0.994,4967,1.642,4968,0.994,4969,0.739,4970,1.826,4971,0.894,4972,0.994,4973,3.137,4974,0.994,4975,0.994,4976,1.826,4977,2.531,4978,2.531,4979,0.828,4980,1.826,4981,0.994,4982,2.531,4983,4.533,4984,0.994,4985,1.826,4986,1.642,4987,0.994,4988,1.826,4989,0.994,4990,0.994,4991,0.994,4992,1.826,4993,0.994,4994,3.137,4995,2.531,4996,0.994,4997,3.664,4998,0.994,4999,0.994,5000,0.994,5001,0.994,5002,0.994,5003,1.826,5004,1.826,5005,1.642,5006,2.531,5007,0.894,5008,1.826,5009,0.994,5010,2.531,5011,0.994,5012,1.52,5013,0.994,5014,1.826,5015,0.994,5016,0.994,5017,1.826,5018,7.716,5019,2.531,5020,0.994,5021,3.664,5022,5.514,5023,2.531,5024,0.994,5025,0.994,5026,0.994,5027,3.137,5028,0.828,5029,0.994,5030,0.994,5031,0.994,5032,0.994,5033,0.994,5034,0.994,5035,0.994,5036,0.994,5037,0.994,5038,3.137,5039,1.826,5040,0.994,5041,0.994,5042,2.531,5043,0.994,5044,1.826,5045,2.531,5046,0.894,5047,1.826,5048,0.994,5049,0.994,5050,0.994,5051,0.994,5052,1.826,5053,2.531,5054,0.894,5055,0.994,5056,0.994,5057,1.826,5058,0.994,5059,0.894,5060,0.994,5061,0.994,5062,0.994,5063,2.531,5064,1.826,5065,0.894,5066,0.994,5067,0.994,5068,3.137,5069,0.994,5070,2.531,5071,0.994,5072,0.994,5073,1.826,5074,0.994,5075,0.994,5076,0.994,5077,2.531,5078,1.826,5079,1.826,5080,0.994,5081,1.826,5082,4.533,5083,1.642,5084,2.531,5085,3.137,5086,0.894,5087,0.994,5088,1.826,5089,0.994,5090,2.531,5091,0.994,5092,1.642,5093,0.994,5094,0.994,5095,0.994,5096,0.994,5097,0.994,5098,2.531,5099,1.826,5100,0.994,5101,0.894,5102,0.994,5103,0.994,5104,1.826,5105,1.826,5106,0.994,5107,1.642,5108,0.994,5109,0.994,5110,0.828,5111,0.994,5112,2.531,5113,0.994,5114,0.994,5115,0.994,5116,0.994,5117,1.826,5118,2.531,5119,0.994,5120,0.994,5121,0.994,5122,0.994,5123,1.826,5124,0.994,5125,0.994,5126,0.994,5127,0.994,5128,0.994,5129,0.994,5130,0.994,5131,0.994,5132,0.779,5133,0.994,5134,0.994,5135,0.994,5136,0.994,5137,0.994,5138,3.137,5139,0.994,5140,0.994,5141,1.826,5142,0.994,5143,0.994,5144,0.994,5145,0.994,5146,0.994,5147,0.994,5148,0.994,5149,0.828,5150,0.994,5151,0.994,5152,0.994,5153,0.894,5154,1.826,5155,0.994,5156,0.994,5157,0.994,5158,0.994,5159,0.894,5160,1.826,5161,0.994,5162,0.828,5163,0.994,5164,0.894,5165,0.894,5166,0.828,5167,0.706,5168,0.994,5169,1.826,5170,1.826,5171,0.994,5172,1.642,5173,0.994,5174,0.894,5175,0.994,5176,0.994,5177,2.531,5178,1.52,5179,0.994,5180,1.642,5181,1.826,5182,1.826,5183,0.994,5184,0.828,5185,0.994,5186,0.894,5187,0.994,5188,0.894,5189,1.52,5190,0.994,5191,0.994,5192,0.994,5193,1.826,5194,0.994,5195,0.994,5196,2.531,5197,0.994,5198,0.994,5199,0.994,5200,0.994,5201,0.994,5202,0.994,5203,0.994,5204,0.994,5205,0.994,5206,0.894,5207,0.994,5208,0.828,5209,0.994,5210,0.994,5211,0.894,5212,0.994,5213,0.994,5214,0.994,5215,0.994,5216,0.994,5217,0.994,5218,0.994,5219,0.994,5220,0.994,5221,0.779,5222,0.894,5223,1.826,5224,1.642,5225,0.994,5226,0.994,5227,0.828,5228,0.994,5229,0.994,5230,0.994,5231,0.994,5232,0.994,5233,0.994,5234,0.994,5235,0.894,5236,0.779,5237,0.994,5238,0.828,5239,0.994,5240,0.994,5241,0.994,5242,0.994,5243,0.994,5244,0.994]],["title/modules.html",[259,2.729]],["body/modules.html",[14,0.003,172,0.003,173,0.003,258,4.418,259,2.503,264,4.258,286,4.418,291,4.601,793,4.815,817,4.418,820,4.815,821,4.815,822,3.987,823,4.815,1716,4.815,1851,6.218,2051,5.071,2278,4.815,2284,4.258,2841,4.418,2889,7.608,2958,4.418,3022,4.601,3057,4.815,3082,4.418,3275,4.418,3529,4.815,3615,4.815,3627,4.601,3630,4.418,3669,4.815,5245,10.71,5246,10.71,5247,9.734,5248,10.099]],["title/overview.html",[5249,5.529]],["body/overview.html",[2,1.084,14,0.005,172,0.002,173,0.002,175,0.865,258,6.537,259,1.462,260,2.487,261,3.4,262,3.4,263,3.4,264,6.02,265,5.291,266,5.023,267,4.761,268,2.786,269,1.759,270,1.609,286,6.455,287,3.4,288,3.4,289,3.4,290,3.4,291,5.975,292,5.73,293,4.8,300,1.302,323,1.185,576,4.479,577,4.926,583,4.8,660,5.023,742,4.8,793,6.252,794,3.4,795,3.4,796,3.4,797,5.89,817,6.537,818,3.4,819,3.4,820,5.023,821,5.023,822,5.638,823,5.023,840,4.933,921,1.695,934,5.023,1216,5.023,1498,4.8,1656,4.442,1716,6.252,1717,3.4,1718,3.4,1719,3.4,1720,6.111,1784,6.191,1941,5.023,1964,5.023,2089,5.945,2124,3.4,2125,3.4,2126,3.4,2177,5.023,2278,6.252,2279,3.4,2280,3.4,2281,3.4,2284,6.481,2285,3.4,2287,3.4,2288,5.291,2841,6.111,2842,3.4,2958,6.924,2959,3.4,2960,3.4,2978,5.023,3017,3.4,3018,3.4,3019,3.4,3057,7.329,3058,3.4,3060,3.4,3082,4.609,3176,5.945,3275,6.608,3276,3.4,3278,3.4,3279,3.4,3280,4.8,3475,5.111,3615,6.66,3616,3.4,3627,7.14,3628,3.4,3629,3.4,3630,6.856,3669,7.545,3670,3.4,3671,3.4,3755,5.023,3830,5.023,3887,3.4,3888,3.4,4792,3.4,5249,2.961,5250,3.782,5251,3.782,5252,3.782,5253,3.782,5254,3.782]],["title/todo.html",[370,1.571,4436,3.592,4437,3.206]],["body/todo.html",[2,1.26,5,0.043,9,0.479,10,1.328,12,0.417,13,0.202,14,0.004,17,2.486,31,0.104,34,2.93,40,2.167,44,2.93,69,0.875,72,3.244,74,2.061,77,1.185,112,2.167,114,0.509,144,3.44,145,1.375,172,0.003,173,0.003,179,2.082,207,3.711,208,2.553,210,3.44,211,3.963,219,2.553,257,2.271,270,2.681,273,1.934,295,2.167,298,3.566,316,1.583,323,1.377,328,1.077,361,6.134,364,4.298,365,5.431,370,1.6,371,4.17,372,3.313,385,2.427,400,2.704,416,2.553,420,2.261,431,2.167,487,2.043,503,4.292,507,2.888,531,5.144,538,3.108,722,2.681,751,4.476,756,2.704,767,4.298,825,4.476,831,4.003,835,2.704,836,3.265,839,3.44,840,2.486,887,5.476,919,1.838,923,2.625,949,2.366,1032,2.791,1062,1.934,1093,2.625,1173,3.879,1473,3.265,1661,2.124,1673,2.553,1676,2.625,1677,2.625,1678,2.553,1733,5.025,1791,2.704,1817,4.843,1855,2.888,1862,2.625,1882,2.625,1890,4.298,1919,5.041,1930,2.213,1952,2.996,2003,3.662,2016,3.95,2032,3.12,2034,4.003,2042,3.44,2064,2.791,2079,3.879,2129,4.282,2131,3.566,2141,4.17,2162,5.246,2273,3.658,2332,3.265,2334,3.44,2355,2.996,2383,5.812,2384,4.298,2415,6.672,2420,3.12,2436,3.44,2579,4.476,2852,3.95,2854,3.658,2870,3.265,2887,3.658,2889,3.12,2918,3.658,2920,3.12,3003,3.265,3013,2.996,3091,6.624,3103,3.12,3104,3.265,3118,3.12,3123,2.996,3231,3.44,3287,3.12,3288,2.996,3322,2.704,3632,3.44,3659,5.233,4219,3.95,4314,3.95,4346,3.95,4443,4.933,4444,3.12,4465,3.658,4466,3.658,4469,3.658,4513,3.658,4522,3.265,4529,3.44,4542,3.658,4579,3.44,4591,3.44,4594,3.265,4667,3.95,4714,3.658,4725,3.95,4732,3.265,4739,5.476,4772,3.95,4817,3.95,4909,3.658,5028,3.658,5174,5.665,5221,4.933,5255,3.658,5256,4.393,5257,3.95,5258,3.95,5259,3.44,5260,3.658,5261,4.393,5262,4.393,5263,3.95,5264,5.665,5265,4.684,5266,5.983,5267,3.95,5268,4.393,5269,7.661,5270,4.393,5271,4.393,5272,3.44,5273,4.393,5274,4.393,5275,4.393,5276,3.265,5277,4.393,5278,3.658,5279,4.393,5280,3.95,5281,4.393,5282,4.393,5283,4.393,5284,4.393,5285,4.393,5286,4.393,5287,4.393,5288,4.393,5289,4.393,5290,4.393,5291,4.393,5292,4.393,5293,4.393,5294,4.393,5295,3.95,5296,4.393,5297,4.393,5298,3.95,5299,4.393,5300,4.393,5301,4.393,5302,4.393,5303,4.393,5304,4.393,5305,3.265,5306,3.95,5307,3.95,5308,4.393,5309,4.393,5310,3.95,5311,3.95,5312,3.95,5313,4.393,5314,3.95,5315,3.658,5316,4.393,5317,4.393,5318,4.393,5319,4.393,5320,4.393,5321,3.658,5322,4.393,5323,6.624,5324,4.393,5325,4.393,5326,4.393,5327,4.393,5328,4.393,5329,4.393,5330,3.658,5331,3.658,5332,4.393,5333,6.301,5334,3.95,5335,4.393]],["title/miscellaneous/typealiases.html",[4381,2.836,5336,6.219]],["body/miscellaneous/typealiases.html",[0,0.58,6,4.171,7,5.843,8,0.236,10,1.183,12,0.533,13,0.332,14,0.004,29,5.843,30,5.328,37,1.495,72,3.286,112,2.768,118,3.689,145,1.225,172,0.003,173,0.003,257,1.989,308,2.433,316,0.951,410,5.408,425,4.873,454,4.46,568,4.672,572,6.214,573,1.782,843,2.104,873,4.906,942,3.097,1001,5.011,1034,4.672,1051,2.827,1053,4.742,1062,3.286,1068,4.119,1149,5.301,1158,5.301,1235,4.171,1252,5.843,1266,5.548,1272,4.742,1275,5.548,1301,5.843,1733,3.827,2019,4.171,2139,4.672,2140,6.565,2145,6.214,2153,6.214,2468,4.394,2475,3.986,2476,5.548,2480,4.394,2485,3.682,2489,3.986,2492,5.843,2498,4.394,2499,5.843,2500,6.214,2598,3.689,2658,4.171,2663,5.548,3023,4.394,3033,5.843,3034,6.214,3076,3.986,3083,4.672,3084,5.301,3087,5.843,3123,5.09,3216,4.394,3224,6.214,3365,5.045,3397,4.672,3398,4.672,3498,5.045,3588,5.045,4381,3.689,4383,5.045,4387,6.71,4390,5.045,4392,5.045,4900,5.045,5337,5.611,5338,5.611,5339,7.463,5340,7.463,5341,5.611,5342,8.366,5343,7.463,5344,5.611,5345,7.463,5346,7.463,5347,5.611,5348,5.611,5349,5.611,5350,5.045,5351,5.611,5352,5.045,5353,6.71,5354,5.045,5355,5.611,5356,7.463,5357,5.611,5358,7.463,5359,5.611,5360,5.045,5361,5.611,5362,5.045,5363,5.611,5364,5.611,5365,3.986,5366,5.045,5367,5.611,5368,5.045,5369,5.611,5370,5.611,5371,5.611]],["title/miscellaneous/variables.html",[4381,2.836,5372,4.869]],["body/miscellaneous/variables.html",[5,0.026,8,0.065,9,0.167,12,0.695,13,0.268,14,0.005,15,0.037,17,0.868,22,0.051,24,2.292,25,1.089,26,1.089,27,1.089,28,1.089,34,4.447,35,1.034,37,0.961,38,2.339,43,1.647,44,1.678,45,1.509,46,1.589,47,1.678,48,0.826,54,0.664,69,0.305,72,1.589,74,1.525,76,1.277,77,1.334,78,1.331,114,0.504,121,0.917,123,1.378,128,1.469,129,1.837,138,1.772,139,1.66,140,1.772,143,0.826,145,1.597,148,1.147,149,1.381,168,1.147,172,0.001,173,0.001,174,1.915,178,1.839,179,1.278,181,1.85,182,0.285,199,0.282,201,2.292,207,1.358,208,0.891,209,1.14,216,0.916,217,1.839,219,1.567,257,0.409,258,1.046,264,1.008,270,0.652,272,1.128,281,2.682,298,2.042,308,0.5,314,0.974,323,0.845,327,1.201,347,1.089,349,0.355,354,0.487,365,1.567,369,0.974,370,0.982,372,0.631,377,0.891,381,1.13,385,3.079,386,3.216,400,2.221,405,1.388,407,6.545,410,0.826,417,0.974,420,1.857,431,0.757,449,1.089,470,0.642,485,1.046,487,2.3,496,2.523,500,1.915,501,3.084,503,0.773,507,1.772,508,1.653,536,0.807,538,0.757,573,2.174,574,1.561,578,1.201,582,2.443,623,1.388,627,0.631,640,0.891,657,1.419,700,0.543,751,1.089,756,3.044,762,3.373,768,1.713,770,0.917,773,0.789,774,3.004,775,1.201,801,2.042,811,1.303,817,1.046,835,0.944,836,1.14,840,2.457,841,1.839,842,1.277,843,2.745,856,0.773,883,1.046,891,1.046,892,1.277,919,0.642,921,0.687,926,1.943,929,2.221,930,1.254,932,1.713,949,0.826,951,2.111,952,1.379,967,2.424,970,2.424,971,1.379,972,2.245,973,1.379,974,1.201,976,1.379,977,1.379,978,1.379,979,4.9,980,1.379,981,1.008,1029,0.868,1046,0.974,1048,1.744,1051,1.358,1056,1.943,1058,0.917,1059,0.974,1062,2.589,1098,1.008,1099,1.008,1170,1.379,1171,2.245,1173,1.66,1188,4.051,1197,2.563,1200,1.419,1235,1.14,1272,0.974,1297,2.111,1298,1.046,1333,1.089,1404,1.046,1422,0.974,1547,1.089,1549,1.14,1557,0.891,1590,1.277,1602,2.245,1603,2.245,1604,1.277,1605,1.277,1635,1.14,1649,2.292,1661,0.741,1672,1.046,1673,0.891,1676,0.917,1678,0.891,1700,1.14,1797,2.682,1802,1.14,1817,1.772,1824,0.789,1855,1.008,1867,1.201,1874,2.097,1901,0.868,1913,1.277,1914,1.379,1915,3.243,1918,1.14,1919,2.729,1920,1.201,1924,2.424,1925,2.245,1926,1.379,1927,1.379,1930,1.817,1931,2.424,1932,1.201,1933,1.857,1934,1.008,1935,1.14,1982,1.915,1985,1.14,2000,1.201,2003,1.567,2033,1.008,2034,1.713,2043,1.046,2057,0.974,2064,2.758,2079,0.944,2120,2.004,2129,0.891,2130,0.891,2131,1.526,2141,0.868,2160,1.277,2167,1.277,2168,1.089,2195,2.111,2197,1.201,2203,1.277,2204,1.277,2205,2.424,2218,1.14,2256,1.379,2273,1.277,2276,1.277,2284,1.008,2319,4.051,2324,1.277,2325,1.379,2329,1.379,2331,3.243,2332,1.14,2333,1.277,2334,4.892,2336,2.424,2337,2.563,2349,2.424,2350,1.379,2351,2.424,2352,1.379,2353,1.201,2354,2.424,2355,2.461,2356,1.046,2357,2.424,2358,1.379,2359,2.424,2360,1.379,2361,1.277,2362,1.379,2363,1.379,2364,1.379,2365,1.379,2366,1.379,2367,1.277,2374,1.277,2380,2.424,2381,1.201,2382,1.277,2383,1.046,2384,2.461,2385,2.424,2386,1.277,2387,2.424,2388,1.379,2389,2.245,2390,2.111,2391,1.379,2392,1.379,2393,2.424,2394,1.379,2395,1.379,2396,1.379,2397,1.379,2398,1.379,2399,1.379,2400,4.446,2401,2.424,2402,4.446,2403,1.379,2404,1.379,2405,1.379,2417,2.245,2423,1.089,2481,1.008,2482,1.278,2485,1.33,2487,1.14,2490,0.807,2491,0.807,2518,1.14,2537,0.868,2543,1.089,2608,1.277,2621,2.111,2631,1.66,2724,0.917,2732,0.974,2742,2.339,2772,1.201,2805,2.111,2841,1.046,2853,3.871,2879,1.379,2880,1.379,2881,2.245,2882,1.379,2899,1.379,2905,1.379,2906,1.379,2918,1.277,2920,3.513,2936,1.379,2937,2.424,2949,1.379,2958,1.046,2972,2.245,2973,1.379,2975,1.379,2976,2.424,2977,3.243,3006,1.046,3013,1.839,3023,1.201,3026,2.245,3031,1.046,3032,1.046,3033,1.201,3035,2.245,3036,1.277,3037,1.277,3038,1.277,3039,1.201,3040,1.277,3062,2.004,3064,1.201,3065,1.201,3066,2.682,3076,1.915,3077,1.201,3078,2.111,3079,1.201,3080,2.111,3083,1.277,3084,2.563,3085,1.379,3086,2.424,3092,1.379,3094,3.903,3096,2.424,3097,1.379,3098,2.424,3099,1.379,3100,1.379,3101,1.379,3102,1.277,3103,1.089,3104,1.14,3105,1.201,3106,1.277,3107,1.14,3108,1.379,3109,1.277,3110,1.277,3111,1.379,3112,1.379,3113,1.379,3114,1.379,3115,1.379,3116,1.379,3118,1.915,3202,1.379,3216,1.201,3223,2.245,3275,1.046,3287,1.089,3288,2.461,3353,2.245,3440,1.277,3610,2.111,3615,1.14,3630,1.046,3631,1.277,3644,4.37,3647,2.245,3648,1.277,3649,1.277,3650,1.277,3651,1.277,3652,1.277,3653,1.277,3654,1.277,3655,1.277,3656,1.277,3657,1.277,3658,2.245,3690,2.245,3691,1.379,3693,2.111,3695,2.424,3697,1.379,3698,1.379,3699,4.9,3846,1.379,3851,3.243,3852,1.379,3853,1.379,3854,1.089,3862,1.713,4105,1.379,4108,2.424,4110,3.004,4111,1.379,4112,1.379,4113,1.379,4114,1.379,4117,1.201,4124,2.424,4150,1.201,4263,1.379,4285,2.682,4381,1.008,4395,2.004,4399,5.285,4410,1.277,4438,2.111,4445,1.277,4447,1.379,4464,2.563,4469,2.245,4480,1.379,4481,1.201,4500,1.14,4527,1.201,4533,1.379,4696,1.277,4732,1.14,4739,1.14,4743,1.277,5162,1.277,5180,1.379,5260,1.277,5272,3.399,5278,3.004,5305,1.14,5310,2.424,5323,1.379,5342,1.379,5350,1.379,5352,2.424,5353,3.903,5354,3.243,5362,1.379,5368,1.379,5372,1.201,5373,1.534,5374,4.341,5375,1.534,5376,2.696,5377,1.534,5378,2.696,5379,3.903,5380,2.696,5381,2.696,5382,2.696,5383,1.534,5384,2.696,5385,3.607,5386,1.534,5387,3.607,5388,1.534,5389,2.696,5390,2.696,5391,2.696,5392,1.534,5393,2.696,5394,2.696,5395,1.534,5396,2.696,5397,1.534,5398,4.341,5399,1.534,5400,2.696,5401,1.534,5402,2.696,5403,2.696,5404,3.607,5405,4.341,5406,2.696,5407,1.534,5408,1.534,5409,2.696,5410,3.607,5411,2.696,5412,1.534,5413,2.696,5414,1.534,5415,1.534,5416,1.534,5417,2.696,5418,2.696,5419,1.534,5420,2.696,5421,2.696,5422,1.534,5423,1.534,5424,1.534,5425,1.534,5426,1.534,5427,1.534,5428,2.696,5429,1.534,5430,1.534,5431,1.534,5432,2.696,5433,1.14,5434,1.379,5435,1.534,5436,1.534,5437,1.534,5438,1.379,5439,1.534,5440,1.534,5441,1.379,5442,1.534,5443,1.534,5444,1.534,5445,1.534,5446,1.534,5447,1.534,5448,1.534,5449,1.534,5450,1.534,5451,1.534,5452,2.245,5453,1.379,5454,2.696,5455,1.379,5456,1.379,5457,1.534,5458,1.534,5459,1.379,5460,1.534,5461,2.424,5462,1.534,5463,1.534,5464,1.534,5465,1.534,5466,1.534,5467,1.379,5468,1.534,5469,2.696,5470,3.243,5471,1.534,5472,1.379,5473,1.534,5474,1.534,5475,1.534,5476,1.534,5477,1.534,5478,1.534,5479,1.534,5480,1.534,5481,1.534,5482,1.534,5483,1.534,5484,1.534,5485,1.534,5486,1.534,5487,1.534,5488,1.534,5489,1.534,5490,1.534,5491,1.14,5492,1.534,5493,1.534,5494,1.534,5495,1.534,5496,1.534,5497,1.534,5498,1.534,5499,1.534,5500,1.534,5501,1.534,5502,1.534,5503,1.534,5504,1.534,5505,1.534,5506,1.534,5507,1.534,5508,1.534,5509,1.534,5510,1.534,5511,1.534,5512,1.534,5513,1.534,5514,2.696,5515,1.534,5516,1.534,5517,1.534,5518,1.534,5519,1.534,5520,1.534,5521,1.379,5522,1.534,5523,1.534,5524,1.534,5525,1.534,5526,1.534,5527,1.534,5528,1.534,5529,1.534,5530,1.534,5531,1.534,5532,1.534,5533,1.534,5534,1.534,5535,1.534,5536,1.534,5537,1.534,5538,1.534,5539,1.534,5540,1.534,5541,1.534,5542,1.534,5543,1.534,5544,1.534]],["title/additional-documentation/nestjs-application.html",[773,1.905,811,1.789,2078,1.948,3442,2.151]],["body/additional-documentation/nestjs-application.html",[2,1.081,14,0.004,33,0.786,40,1.859,43,3.415,47,2.619,112,1.859,114,0.304,172,0.002,173,0.002,179,3.982,180,3.579,211,3.479,257,1.501,259,1.457,269,1.753,298,3.188,314,3.579,326,2.478,365,5.68,371,3.188,372,3.684,385,1.136,394,2.03,400,4.606,404,2.529,405,1.94,431,2.779,457,3.702,503,1.899,531,1.984,582,1.69,751,4.001,769,2.802,770,2.253,771,2.571,773,4.868,801,4.532,811,4.424,814,2.03,828,2.951,881,2.951,883,2.571,1020,2.821,1032,4.754,1033,3.702,1138,2.677,1182,3.842,1185,2.395,1557,4.348,1649,3.579,1666,4.187,1668,4.001,1673,2.191,1676,2.253,1678,3.273,1682,4.689,1686,4.754,1733,2.571,1788,2.08,1847,3.138,1851,2.32,1855,4.433,1882,2.253,1901,2.133,1919,4.636,1930,3.769,1935,2.802,1982,2.677,1992,4.001,2033,2.478,2034,2.395,2078,1.984,2079,2.32,2080,4.187,2129,3.273,2131,2.133,2141,3.188,2150,2.571,2168,2.677,2227,2.677,2272,2.951,2383,5.103,2390,2.951,2429,4.001,2534,2.571,2536,2.32,2578,2.802,2741,2.253,2773,2.395,2837,2.802,2866,3.138,2873,3.579,3004,3.138,3006,2.571,3028,4.918,3045,3.389,3105,2.951,3120,3.389,3231,2.951,3287,5.688,3288,5.103,3292,2.802,3442,3.273,3632,4.41,3661,3.138,3662,4.41,3862,2.395,3929,4.001,4118,4.001,4285,2.802,4290,3.389,4356,3.389,4365,3.138,4425,3.389,4437,4.187,4438,2.951,4439,3.138,4442,2.802,4443,7.581,4445,4.689,4446,2.951,4449,2.951,4452,3.389,4463,5.28,4464,7.096,4481,2.951,4494,2.802,4502,3.389,4513,3.138,4522,2.802,4527,6.269,4543,2.802,4548,3.389,4554,3.138,4564,3.389,4696,3.138,4722,5.064,4731,3.389,4732,5.013,4778,3.389,4811,2.802,4888,2.802,4897,4.187,4936,6.063,4969,2.802,5012,3.138,5059,3.389,5065,3.389,5184,4.689,5208,3.138,5236,2.951,5247,3.389,5249,2.951,5269,3.389,5272,7.008,5305,5.561,5306,5.064,5311,6.063,5312,6.063,5365,4.001,5379,3.389,5452,4.689,5453,5.064,5455,3.389,5456,3.389,5459,5.064,5470,3.389,5545,3.769,5546,3.138,5547,3.769,5548,5.461,5549,3.769,5550,3.769,5551,3.769,5552,3.769,5553,3.769,5554,3.769,5555,3.769,5556,3.769,5557,5.632,5558,3.769,5559,3.769,5560,3.769,5561,5.064,5562,5.632,5563,7.481,5564,3.769,5565,3.769,5566,3.769,5567,3.138,5568,3.769,5569,7.481,5570,3.769,5571,3.389,5572,3.769,5573,3.769,5574,3.769,5575,8.4,5576,3.769,5577,3.769,5578,3.769,5579,3.769,5580,3.769,5581,5.632,5582,3.769,5583,3.769,5584,3.769,5585,3.769,5586,5.632,5587,3.769,5588,3.769,5589,5.064,5590,4.689,5591,5.632,5592,3.769,5593,3.769,5594,3.769,5595,3.769,5596,5.632,5597,3.769,5598,3.769,5599,3.769,5600,3.769,5601,4.689,5602,3.769,5603,3.769,5604,3.769,5605,3.769,5606,3.389,5607,3.769,5608,3.769,5609,5.064,5610,6.743,5611,3.769,5612,3.769,5613,6.743,5614,5.064,5615,3.769,5616,3.769,5617,3.769,5618,3.769,5619,3.769,5620,3.769,5621,3.769,5622,5.632,5623,3.769,5624,5.632,5625,4.689,5626,3.389,5627,3.769,5628,6.743,5629,5.632,5630,3.769,5631,3.769,5632,3.769,5633,3.389,5634,3.769,5635,3.389,5636,3.769,5637,3.769,5638,3.769,5639,3.769,5640,3.769,5641,3.769,5642,3.769,5643,3.769]],["title/additional-documentation/nestjs-application/software-architecture.html",[2078,1.948,3442,2.151,4451,2.524,4555,2.898]],["body/additional-documentation/nestjs-application/software-architecture.html",[0,0.673,2,0.703,4,0.033,5,0.033,10,1.167,14,0.002,34,3.151,37,0.367,38,1.321,39,1.742,40,4.318,46,0.607,54,1.739,60,4.714,73,0.848,78,0.193,84,0.78,112,2.914,114,0.198,123,0.437,142,1.079,145,1.651,148,0.586,149,0.609,171,1.92,172,0.001,173,0.001,175,0.757,179,3.727,180,2.105,187,0.406,189,0.465,205,0.789,207,3.96,208,2.678,210,1.079,211,1.541,217,1.672,219,2.336,260,2.029,270,1.043,273,0.607,295,0.68,312,1.099,314,2.105,316,0.561,317,1.024,323,0.432,326,2.642,334,1.147,364,5.865,365,0.801,367,0.709,370,0.502,371,1.388,372,3.339,376,0.979,377,1.926,385,0.415,386,1.052,394,2.482,417,0.875,419,2.04,420,0.709,423,3.53,431,1.983,439,0.94,457,0.906,505,0.725,531,0.725,573,0.437,582,1.099,591,2.04,653,1.079,654,0.68,693,1.079,768,6.228,769,1.024,770,2.402,771,4.917,773,4.114,786,0.979,801,0.78,814,4.486,827,4.029,828,1.92,831,3.517,832,1.079,833,4.631,835,0.848,845,1.612,875,0.78,896,1.875,930,1.869,947,0.742,949,0.742,1020,3.836,1048,1.185,1051,0.694,1058,1.98,1068,1.353,1071,0.666,1093,1.465,1112,0.641,1119,0.875,1129,0.76,1130,0.78,1138,0.979,1172,1.147,1178,1.558,1185,3.245,1190,1.558,1255,2.26,1313,2.26,1344,0.906,1633,1.239,1648,1.92,1661,3.013,1673,1.425,1676,1.465,1678,1.425,1685,1.147,1686,0.875,1733,3.143,1801,2.759,1824,3.894,1851,1.509,1862,0.823,1874,2.336,1879,2.855,1882,2.402,1901,0.78,1919,1.828,1933,3.208,1944,4.143,1992,3.932,1997,5.104,2003,4.645,2032,0.979,2033,2.178,2034,2.105,2042,2.594,2043,0.94,2064,0.875,2077,3.776,2078,1.744,2080,4.846,2129,1.926,2130,3.217,2131,5.131,2133,1.823,2143,2.26,2154,2.26,2218,1.024,2221,2.855,2227,0.979,2237,0.906,2249,1.024,2250,0.906,2272,1.079,2355,4.621,2356,0.94,2361,1.147,2381,1.079,2384,0.94,2423,0.979,2436,4.625,2473,0.979,2482,1.162,2484,3.408,2485,0.68,2487,1.024,2523,4.998,2525,1.079,2536,0.848,2537,0.78,2538,1.509,2573,0.94,2579,2.354,2585,4.252,2715,0.979,2716,0.979,2724,3.308,2741,2.754,2742,1.321,2773,2.105,2851,1.147,2853,0.979,2867,1.024,2868,2.554,2870,1.024,2871,5.603,2873,0.875,2881,1.147,2886,1.147,2888,3.999,2896,1.079,2945,1.147,2946,3.425,3003,2.463,3006,1.672,3008,2.988,3011,1.823,3039,1.079,3056,1.147,3102,1.147,3103,0.979,3104,3.425,3107,2.463,3124,1.079,3170,2.205,3292,1.024,3321,4.633,3322,3.144,3354,1.024,3390,1.079,3442,0.801,3484,2.042,3607,1.024,3664,3.143,3854,3.628,3862,3.245,3929,1.742,4074,1.147,4117,1.079,4118,0.979,4119,1.147,4150,1.92,4282,1.079,4365,2.042,4411,2.205,4417,2.042,4430,1.239,4438,2.594,4440,1.239,4442,1.823,4443,1.92,4444,1.742,4451,5.97,4455,3.796,4463,1.079,4466,4.609,4468,2.205,4473,2.988,4476,0.979,4483,2.042,4484,2.594,4485,1.239,4489,3.608,4491,2.741,4495,7.253,4500,1.823,4521,1.024,4522,1.024,4529,1.079,4531,1.239,4532,2.205,4535,1.92,4536,1.239,4543,1.823,4547,3.999,4554,2.042,4555,1.079,4565,2.988,4568,2.205,4570,1.147,4573,1.239,4578,1.239,4579,2.594,4582,1.239,4584,1.239,4594,1.024,4598,1.239,4599,2.759,4610,1.239,4614,2.205,4625,4.252,4627,1.239,4630,2.205,4631,1.92,4640,1.147,4655,1.239,4660,1.239,4661,5.104,4675,3.147,4682,0.979,4685,1.239,4702,1.147,4703,2.205,4705,2.979,4709,1.239,4711,1.239,4712,1.239,4718,2.042,4720,1.239,4721,8.102,4730,1.239,4733,1.239,4734,2.042,4737,6.002,4739,1.024,4745,1.147,4747,3.608,4748,1.147,4750,2.042,4752,1.147,4754,1.239,4779,3.147,4784,1.239,4811,1.024,4812,1.239,4830,1.239,4840,1.147,4841,1.147,4844,1.024,4862,1.147,4865,1.239,4873,1.239,4877,2.205,4888,1.024,4890,1.239,4891,1.239,4897,2.463,4910,1.239,4925,2.205,4926,4.143,4927,2.042,4939,2.759,4946,3.346,4954,1.147,4964,3.147,4965,3.614,4967,1.239,4969,1.024,4971,1.239,4979,1.147,4986,1.239,5005,1.239,5007,1.239,5012,1.147,5054,4.592,5083,1.239,5092,1.239,5101,1.239,5110,4.609,5132,5.483,5149,1.147,5164,1.239,5165,1.239,5166,2.042,5167,4.631,5178,1.147,5189,3.346,5211,2.205,5222,1.239,5238,1.147,5249,1.079,5255,2.042,5258,1.239,5259,3.999,5264,1.239,5265,1.024,5267,1.239,5276,1.024,5307,1.239,5314,2.205,5334,1.239,5366,2.205,5372,1.079,5491,1.024,5548,0.94,5561,1.239,5567,1.147,5590,1.147,5601,1.147,5644,1.378,5645,1.378,5646,7.599,5647,6.091,5648,6.232,5649,2.452,5650,3.313,5651,2.979,5652,4.918,5653,2.452,5654,2.979,5655,5.535,5656,1.378,5657,1.378,5658,3.147,5659,3.614,5660,1.378,5661,1.378,5662,1.378,5663,1.378,5664,2.452,5665,2.452,5666,1.378,5667,4.608,5668,1.378,5669,2.452,5670,1.378,5671,3.313,5672,2.452,5673,1.378,5674,1.378,5675,1.378,5676,1.378,5677,1.378,5678,1.378,5679,1.378,5680,1.239,5681,2.452,5682,2.452,5683,5.107,5684,1.378,5685,1.378,5686,2.452,5687,2.452,5688,4.019,5689,3.313,5690,4.019,5691,1.378,5692,3.614,5693,3.614,5694,1.378,5695,2.205,5696,1.378,5697,1.378,5698,1.378,5699,1.378,5700,1.378,5701,1.147,5702,2.759,5703,1.378,5704,1.239,5705,1.378,5706,1.378,5707,7.861,5708,2.452,5709,1.378,5710,7.864,5711,1.378,5712,2.205,5713,1.378,5714,1.378,5715,2.452,5716,1.147,5717,4.633,5718,6.232,5719,6.519,5720,1.378,5721,2.979,5722,2.205,5723,2.452,5724,1.378,5725,1.378,5726,4.143,5727,1.378,5728,1.378,5729,1.378,5730,2.979,5731,3.346,5732,2.452,5733,1.378,5734,1.079,5735,4.608,5736,1.378,5737,1.378,5738,3.313,5739,1.378,5740,1.239,5741,1.378,5742,2.759,5743,1.378,5744,1.378,5745,1.378,5746,1.239,5747,2.979,5748,1.378,5749,1.378,5750,1.378,5751,1.239,5752,2.452,5753,1.378,5754,3.313,5755,1.378,5756,1.378,5757,1.239,5758,2.979,5759,1.378,5760,3.147,5761,2.452,5762,1.378,5763,2.452,5764,3.313,5765,1.378,5766,1.378,5767,1.378,5768,2.042,5769,2.452,5770,3.313,5771,1.378,5772,1.378,5773,1.378,5774,1.378,5775,1.378,5776,1.378,5777,1.378,5778,1.378,5779,1.239,5780,1.378,5781,2.452,5782,1.378,5783,6.232,5784,1.378,5785,2.452,5786,1.239,5787,1.147,5788,1.378,5789,1.378,5790,1.378,5791,1.378,5792,1.378,5793,1.378,5794,1.378,5795,1.378,5796,1.378,5797,1.378,5798,3.313,5799,1.378,5800,2.452,5801,3.313,5802,1.378,5803,1.378,5804,1.378,5805,1.378,5806,2.452,5807,1.378,5808,1.378,5809,1.378,5810,1.378,5811,1.239,5812,1.378,5813,1.378,5814,2.452,5815,1.378,5816,1.239,5817,1.378,5818,1.378,5819,2.452,5820,1.378,5821,1.378,5822,1.239,5823,2.205,5824,1.378,5825,1.378,5826,1.239,5827,1.378,5828,1.378,5829,2.452,5830,1.378,5831,1.378,5832,1.378,5833,1.378,5834,1.378,5835,1.378,5836,1.239,5837,1.378,5838,1.378,5839,4.019,5840,1.378,5841,1.378,5842,1.239,5843,1.239,5844,3.313,5845,1.378,5846,1.378,5847,1.378,5848,1.378,5849,1.378,5850,1.378,5851,2.452,5852,1.378,5853,3.313,5854,1.378,5855,1.378,5856,1.378,5857,2.452,5858,1.378,5859,1.239,5860,1.378,5861,3.313,5862,2.452,5863,1.378,5864,1.378,5865,1.378,5866,1.378,5867,1.378,5868,1.378,5869,1.378,5870,1.378,5871,1.239,5872,2.452,5873,1.378,5874,1.378,5875,1.378,5876,1.239,5877,1.378,5878,1.378,5879,1.378,5880,1.378,5881,1.378,5882,8.515,5883,1.378,5884,1.378,5885,1.378,5886,1.239,5887,1.378,5888,1.378,5889,2.452,5890,1.378,5891,3.313,5892,1.378,5893,1.378,5894,1.378,5895,1.378,5896,1.378,5897,1.378,5898,1.378,5899,1.239,5900,1.239,5901,1.378,5902,1.378,5903,1.378,5904,1.378,5905,1.239,5906,1.378,5907,1.378,5908,1.378,5909,1.378,5910,2.452,5911,4.608,5912,1.378,5913,1.147,5914,1.378,5915,2.594,5916,1.378,5917,2.205,5918,1.378,5919,1.147,5920,1.378,5921,1.378,5922,1.378,5923,4.608,5924,1.378,5925,1.378,5926,1.378,5927,1.378,5928,1.378,5929,1.378,5930,1.378,5931,1.378,5932,1.378,5933,1.378,5934,1.378,5935,1.378,5936,1.378,5937,1.378,5938,2.452,5939,1.378,5940,1.378,5941,1.378,5942,2.452,5943,1.378,5944,1.378,5945,1.378,5946,2.452,5947,1.378,5948,1.378,5949,1.378,5950,1.378,5951,1.239,5952,2.452,5953,1.378,5954,2.452,5955,1.378,5956,1.378,5957,1.378,5958,1.239,5959,2.452]],["title/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[179,1.536,2078,1.706,3442,1.883,4451,2.21,5717,2.409]],["body/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[0,0.26,2,1.177,3,0.04,4,0.034,5,0.083,9,0.566,10,0.53,13,0.132,14,0.004,15,0.1,17,2.322,18,0.473,22,0.101,31,0.201,38,1.355,40,2.959,47,1.17,60,4.231,69,0.501,74,1.148,77,1.107,78,0.729,112,3.497,114,0.629,127,1.598,128,1.016,129,1.206,145,1.442,146,3.692,149,0.754,172,0.002,173,0.002,175,0.575,179,1.945,187,0.62,207,3.57,208,3.021,211,1.908,218,3.942,219,1.462,257,2.514,259,3.281,260,1.107,267,1.423,272,1.717,273,1.807,286,1.715,291,3.692,292,2.697,293,4.26,295,3.497,298,3.739,314,1.598,316,1.267,317,1.869,323,2.527,329,1.018,349,1.528,354,0.798,365,3.021,367,3.648,369,3.81,372,3.941,378,1.969,379,2.094,385,0.758,400,1.548,405,1.294,420,2.112,431,2.959,454,1.503,503,2.618,505,2.16,527,1.598,559,2.094,574,1.088,578,1.969,582,1.839,693,3.213,722,3.181,750,2.915,753,1.715,754,2.261,767,1.715,768,3.81,770,3.106,772,2.915,773,1.294,807,1.715,811,3.194,814,4.666,825,3.692,835,2.526,841,1.715,843,1.949,875,2.942,888,3.05,919,3.262,921,2.962,926,2.21,927,1.598,929,2.526,930,1.17,949,2.8,1020,3.374,1032,1.598,1033,2.697,1058,2.452,1062,2.289,1093,1.503,1169,1.869,1173,1.548,1182,3.545,1185,2.607,1190,1.598,1196,2.618,1215,1.653,1229,1.869,1255,2.799,1319,1.355,1344,1.653,1593,4.693,1661,1.216,1676,1.503,1678,2.385,1686,3.81,1708,1.869,1788,1.388,1790,2.094,1791,4.067,1792,4.328,1818,2.094,1824,1.294,1851,1.548,1854,1.598,1862,2.452,1874,3.485,1882,1.503,1901,2.942,1919,2.264,1930,1.267,1952,1.715,1997,4.07,2017,2.261,2064,1.598,2077,4.507,2078,2.736,2079,1.548,2082,2.261,2087,2.261,2089,4.834,2128,1.715,2129,3.84,2130,4.119,2132,3.692,2133,1.869,2134,1.786,2135,1.786,2140,1.969,2141,1.423,2143,1.715,2154,1.715,2163,1.715,2251,1.786,2346,2.261,2355,1.715,2384,3.545,2415,3.213,2423,1.786,2429,1.786,2432,1.869,2436,4.07,2523,1.462,2545,3.213,2573,2.799,2724,1.503,2741,3.949,2742,1.355,2773,1.598,2837,1.869,2853,2.915,2867,1.869,2868,2.607,2874,2.094,2888,1.969,2896,1.969,2920,1.786,2945,2.094,3011,3.05,3013,1.715,3075,4.07,3103,2.915,3184,2.261,3185,2.261,3186,2.261,3187,2.261,3188,2.094,3195,2.094,3230,2.094,3287,1.786,3321,3.05,3322,1.548,3354,1.869,3382,1.786,3465,2.261,3644,1.869,3659,1.786,3664,1.715,3862,1.598,3900,2.261,3929,2.915,4285,4.911,4410,2.094,4417,2.094,4444,5.729,4448,2.094,4451,3.545,4455,1.869,4463,1.969,4465,2.094,4473,1.869,4476,1.786,4488,2.094,4491,2.799,4493,2.261,4494,1.869,4495,4.07,4511,2.261,4521,1.869,4523,2.094,4525,2.094,4534,2.094,4535,4.696,4540,2.261,4542,2.094,4565,1.869,4581,2.261,4597,2.094,4600,2.261,4631,1.969,4661,1.969,4677,2.261,4682,1.786,4702,2.094,4713,2.094,4715,2.261,4739,5.268,4743,2.094,4745,2.094,4747,4.07,4752,2.094,4779,1.969,4811,3.05,4823,2.261,4840,2.094,4844,1.869,4888,1.869,4946,2.094,4954,2.094,4964,3.213,4969,1.869,5086,4.673,5132,3.213,5159,2.261,5167,1.786,5188,2.261,5238,2.094,5259,4.696,5260,4.328,5265,1.869,5266,5.995,5276,3.05,5278,4.328,5315,2.094,5330,4.328,5331,4.328,5365,3.692,5372,1.969,5433,3.05,5438,2.261,5461,2.261,5467,2.261,5491,1.869,5548,2.799,5567,2.094,5571,2.261,5625,3.416,5646,6.104,5647,2.261,5658,1.969,5693,2.261,5710,7.669,5712,2.261,5716,3.416,5717,4.911,5730,2.261,5734,1.969,5740,2.261,5742,2.094,5751,2.261,5757,2.261,5760,1.969,5768,2.094,5779,3.689,5786,4.673,5823,4.673,5826,3.689,5843,4.673,5899,3.689,5905,2.261,5913,2.094,5915,1.969,5917,5.392,5960,2.094,5961,2.261,5962,2.515,5963,5.197,5964,2.515,5965,6.721,5966,3.416,5967,2.515,5968,2.515,5969,4.103,5970,5.997,5971,2.515,5972,2.515,5973,2.515,5974,2.515,5975,2.515,5976,2.515,5977,2.515,5978,4.103,5979,2.515,5980,2.515,5981,2.515,5982,2.515,5983,2.261,5984,4.103,5985,2.515,5986,2.515,5987,2.515,5988,2.515,5989,2.261,5990,2.515,5991,2.515,5992,2.261,5993,4.103,5994,2.515,5995,2.515,5996,2.515,5997,2.515,5998,2.094,5999,2.515,6000,2.515,6001,2.515,6002,2.515,6003,2.515,6004,2.515,6005,2.515,6006,2.515,6007,4.103,6008,2.515,6009,2.261,6010,3.416,6011,3.689,6012,2.515,6013,2.515,6014,2.515,6015,2.515,6016,2.515,6017,2.515,6018,2.515,6019,2.515,6020,2.515,6021,2.515,6022,2.515,6023,2.515,6024,2.515,6025,2.515,6026,2.515,6027,2.515,6028,2.515,6029,2.515,6030,2.515,6031,2.515,6032,2.515,6033,2.515,6034,2.515,6035,2.515,6036,2.515,6037,2.515,6038,2.094,6039,2.515,6040,2.515,6041,2.515,6042,2.515,6043,2.515,6044,2.515,6045,2.515,6046,2.515,6047,2.261,6048,2.515,6049,2.515,6050,2.261,6051,2.515,6052,2.261,6053,2.515,6054,2.515,6055,2.515,6056,2.261,6057,2.515,6058,2.515,6059,2.515,6060,2.515,6061,2.515,6062,2.261,6063,2.261]],["title/additional-documentation/nestjs-application/domain-driven-design.html",[2078,1.706,3442,1.883,5266,2.409,5658,2.537,6064,2.914]],["body/additional-documentation/nestjs-application/domain-driven-design.html",[0,0.417,12,0.384,14,0.004,34,1.879,54,1.748,60,2.286,74,1.13,77,1.09,78,0.832,112,3.465,121,3.544,128,1.005,129,2.423,145,2.068,148,1.719,149,1.422,172,0.002,173,0.002,179,2.811,180,3.767,187,0.321,206,3.364,211,3.267,218,2.656,270,1.719,308,1.933,316,1.005,323,2.7,334,4.937,349,0.934,367,3.052,370,1.471,371,3.356,372,3.953,418,2.286,419,3.65,423,2.414,431,2.925,460,2.126,470,1.69,487,1.879,527,2.567,559,4.937,574,1.748,591,2.487,753,2.756,768,5.657,769,5.221,770,2.414,771,2.756,772,2.87,773,4.434,811,2.867,814,2.176,825,2.87,828,4.642,831,2.567,832,3.163,833,2.87,843,2.634,856,2.987,888,4.407,930,2.758,1020,3.448,1068,2.229,1076,3.767,1119,2.567,1121,2.414,1138,2.87,1172,5.848,1190,4.917,1344,3.898,1557,2.348,1668,2.87,1708,3.003,1855,2.656,1874,3.446,1879,2.87,1882,3.544,1890,2.756,1901,3.356,1982,2.87,2003,2.348,2043,2.756,2064,2.567,2077,6.229,2130,5.416,2134,2.87,2135,2.87,2163,2.756,2218,3.003,2250,4.617,2355,2.756,2429,2.87,2432,3.003,2688,2.87,2724,2.414,2732,2.567,2741,3.544,2773,3.767,3118,2.87,3292,3.003,3390,3.163,3400,3.632,3428,3.632,3659,2.87,3664,2.756,3785,3.163,3854,6.12,4240,3.364,4282,3.163,4287,3.003,4395,3.003,4444,2.87,4446,3.163,4451,5.278,4464,2.87,4473,3.003,4474,4.937,4476,2.87,4489,3.163,4491,2.756,4543,3.003,4547,3.163,4549,3.364,4565,3.003,4591,3.163,4597,4.937,4631,3.163,4636,3.364,4640,3.364,4675,4.642,4682,2.87,4718,3.364,4734,3.364,4844,3.003,4888,4.407,4897,4.407,4945,3.632,4964,5.5,4969,3.003,5110,3.364,5132,3.163,5153,3.632,5167,2.87,5189,3.364,5208,3.364,5221,3.163,5235,5.331,5236,3.163,5255,3.364,5265,4.407,5266,7.411,5276,4.407,5321,3.364,5365,2.87,5433,3.003,5546,3.364,5625,3.364,5646,3.163,5654,3.632,5658,4.642,5659,3.632,5701,3.364,5710,6.453,5734,6.453,5760,3.163,5811,3.632,5816,3.632,5842,3.632,5871,3.632,5886,3.632,5900,3.632,5919,3.364,5960,3.364,5965,5.331,5983,5.331,6010,3.364,6047,3.632,6050,3.632,6064,3.632,6065,4.04,6066,4.04,6067,4.04,6068,4.04,6069,4.04,6070,4.04,6071,4.04,6072,4.04,6073,5.929,6074,4.04,6075,4.04,6076,4.04,6077,4.04,6078,4.04,6079,4.04,6080,4.04,6081,4.04,6082,4.04,6083,4.04,6084,4.04,6085,4.04,6086,4.04,6087,4.04,6088,3.632,6089,4.04,6090,4.04,6091,3.632,6092,4.04,6093,3.632,6094,4.04,6095,4.04,6096,4.04,6097,4.04,6098,4.04,6099,4.04,6100,4.04,6101,5.331,6102,4.04,6103,4.04,6104,4.04,6105,4.04,6106,4.04,6107,3.632,6108,4.04,6109,4.04,6110,4.04,6111,4.04,6112,4.04,6113,4.04,6114,4.04,6115,4.04,6116,4.04,6117,4.04,6118,4.04,6119,4.04,6120,4.04,6121,4.04,6122,4.04,6123,4.04,6124,4.04,6125,4.04,6126,4.04,6127,4.04,6128,4.04,6129,4.04,6130,4.04,6131,5.929,6132,4.04,6133,3.364,6134,4.04,6135,7.024,6136,3.632,6137,4.04,6138,4.04,6139,4.04,6140,4.04,6141,3.364]],["title/additional-documentation/nestjs-application/cross-cutting-concerns.html",[827,2.21,2078,1.706,3442,1.883,5167,2.302,5652,2.698]],["body/additional-documentation/nestjs-application/cross-cutting-concerns.html",[0,0.703,12,0.927,13,0.271,14,0.004,15,0.19,18,0.921,22,0.07,31,0.161,34,4.128,35,1.405,37,1.813,38,2.639,54,2.945,69,0.975,74,1.37,84,2.773,112,3.357,114,0.395,172,0.003,173,0.003,179,3.707,180,3.113,181,1.663,186,5.058,206,4.079,207,3.428,208,4.544,217,3.341,219,5.159,257,2.365,273,2.997,314,3.113,326,5.14,362,4.079,365,2.847,367,4.024,369,3.113,372,3.477,385,2.677,393,3.48,408,3.341,505,2.578,750,3.48,753,3.341,768,5.64,769,3.642,770,4.067,771,3.341,773,2.522,811,3.29,814,3.666,822,4.189,825,3.48,827,4.641,831,3.113,833,6.001,839,3.836,840,5.438,878,4.324,1020,2.05,1032,3.113,1073,3.113,1178,4.324,1661,2.368,1677,2.928,1678,3.955,1811,4.079,1862,2.928,1930,2.468,1951,4.473,1960,3.016,1990,5.666,2003,5.671,2063,4.404,2064,4.324,2065,3.836,2073,4.404,2077,3.341,2078,3.582,2079,4.813,2131,2.773,2132,3.48,2163,3.341,2355,5.333,2356,6.554,2383,4.641,2386,4.079,2579,4.834,2584,4.404,2585,4.079,2587,4.404,2591,4.404,2593,4.404,2594,4.404,2725,4.834,2742,2.639,2868,3.113,2888,3.836,3003,3.642,3006,3.341,3011,5.058,3013,4.641,3408,4.404,3607,3.642,4215,4.404,4442,3.642,4488,4.079,4491,3.341,4500,3.642,4510,4.079,4728,4.404,4861,4.404,5167,3.48,5491,3.642,5548,3.341,5614,4.404,5652,5.666,5787,4.079,5836,4.404,5913,4.079,5966,4.079,5992,4.404,5998,4.079,6062,4.404,6141,4.079,6142,4.899,6143,8.448,6144,4.899,6145,4.899,6146,8.448,6147,4.404,6148,4.899,6149,4.899,6150,7.819,6151,4.899,6152,4.899,6153,4.899,6154,6.805,6155,4.899,6156,4.899,6157,4.899,6158,4.404,6159,4.899,6160,6.805,6161,4.899,6162,4.899,6163,4.899,6164,4.899,6165,4.899,6166,4.899,6167,4.899,6168,4.899,6169,4.899,6170,4.899,6171,4.899]],["title/additional-documentation/nestjs-application/testing.html",[2078,2.27,2873,2.741,3442,2.507]],["body/additional-documentation/nestjs-application/testing.html",[13,0.158,14,0.005,15,0.077,31,0.075,34,3.807,38,2.985,40,0.908,45,0.77,46,0.811,52,1.441,54,2.13,60,3.136,74,2.402,76,0.652,77,1.631,78,0.777,82,0.873,112,2.734,114,0.335,119,1.441,122,1.441,123,0.584,128,1.359,129,2.557,145,0.906,148,1.766,149,0.58,172,0.002,173,0.001,175,0.421,179,3.067,187,0.391,189,0.258,199,0.338,207,0.927,217,2.831,219,1.07,257,2.034,259,1.221,260,1.828,270,0.783,272,1.737,273,1.828,292,2.077,302,1.655,303,1.655,309,0.927,312,0.825,314,4.702,316,0.312,317,2.349,321,1.655,323,1.301,355,0.446,365,5.696,367,1.626,369,1.17,371,2.349,372,3.621,376,2.244,378,1.441,385,1.484,386,1.563,418,4.716,419,3.411,420,0.948,423,2.942,431,3.192,437,1.21,457,1.21,508,0.701,536,1.663,538,2.048,573,0.584,654,0.908,722,0.783,753,3.779,767,1.256,768,2.637,770,1.888,772,2.244,773,2.852,811,0.89,814,2.652,822,1.133,829,1.441,831,2.008,856,0.927,878,1.17,883,2.155,887,1.368,919,2.06,921,0.825,942,1.016,949,2.985,1020,3.194,1033,3.975,1046,1.17,1062,2.663,1073,1.17,1074,1.308,1093,2.481,1112,1.469,1121,1.1,1129,1.744,1130,1.042,1138,4.85,1298,2.155,1318,2.985,1319,0.992,1333,3.497,1344,1.21,1419,1.308,1473,1.368,1593,1.308,1635,2.349,1648,1.441,1649,2.637,1661,3.69,1672,2.831,1673,1.07,1708,2.349,1791,1.133,1817,1.21,1824,1.626,1851,1.945,1854,1.17,1862,1.1,1874,3.515,1877,1.533,1879,1.308,1880,1.533,1881,1.256,1882,3.312,1919,5.408,1921,5.035,1930,0.927,1932,4.339,1933,2.852,1934,3.236,1935,4.119,1952,1.256,1978,1.655,1985,2.349,1990,1.533,1997,1.441,2000,1.441,2003,1.836,2019,2.349,2043,2.831,2064,2.637,2075,2.244,2076,2.841,2077,4.413,2079,1.133,2111,1.368,2128,1.256,2130,1.07,2131,2.349,2143,2.155,2154,1.256,2161,2.155,2163,4.657,2188,1.655,2227,1.308,2237,1.21,2246,2.474,2249,1.368,2250,1.21,2255,4.426,2332,1.368,2353,1.441,2356,1.256,2381,1.441,2383,4.125,2384,3.358,2416,1.655,2420,1.308,2432,1.368,2435,1.655,2481,1.21,2482,0.873,2483,1.256,2523,1.07,2537,1.042,2578,1.368,2579,1.308,2741,1.1,2742,0.992,2773,3.128,2779,2.244,2853,2.244,2854,1.533,2866,1.533,2868,2.008,2870,2.349,2873,5.705,2887,1.533,3004,1.533,3005,1.533,3006,1.256,3007,1.655,3008,3.659,3011,1.368,3013,2.831,3073,1.441,3082,2.155,3084,2.244,3093,1.655,3105,1.441,3107,1.368,3118,4.296,3122,2.841,3124,1.441,3125,1.655,3137,1.533,3163,1.655,3166,1.533,3176,1.256,3178,1.308,3205,1.655,3232,1.533,3280,2.948,3287,3.936,3288,2.831,3292,4.119,3322,1.133,3354,3.659,3382,1.308,3397,1.533,3398,1.533,3627,2.244,3662,1.441,3668,1.533,3785,1.441,3854,2.948,3862,2.008,3928,2.841,4117,4.735,4118,1.308,4119,1.533,4240,1.533,4282,1.441,4319,1.655,4395,4.809,4428,1.533,4437,1.368,4444,3.497,4446,4.339,4454,1.655,4455,4.495,4457,1.533,4458,1.655,4459,2.631,4464,1.308,4472,1.655,4476,1.308,4479,1.655,4484,3.25,4489,2.474,4491,1.256,4494,2.349,4495,1.441,4500,2.349,4517,1.655,4521,2.349,4522,2.349,4529,5.586,4534,1.533,4547,1.441,4549,3.456,4555,1.441,4565,1.368,4570,1.533,4579,1.441,4580,1.655,4591,2.474,4594,1.368,4599,1.533,4601,1.655,4619,1.655,4625,1.533,4636,3.456,4661,1.441,4672,1.655,4675,2.474,4681,1.655,4682,1.308,4713,1.533,4721,1.533,4723,1.655,4737,2.631,4747,3.854,4748,1.533,4750,1.533,4769,1.655,4776,1.655,4779,1.441,4811,1.368,4824,1.655,4837,1.655,4841,1.533,4844,1.368,4850,1.655,4853,1.655,4859,1.655,4872,1.655,4897,2.349,4902,1.655,4909,1.533,4916,1.655,4927,2.631,4929,6.654,4939,1.533,4979,1.533,5028,1.533,5107,1.655,5172,1.655,5178,1.533,5184,1.533,5186,1.655,5206,4.426,5221,1.441,5227,3.456,5259,3.25,5263,1.655,5265,1.368,5266,1.368,5276,3.659,5295,3.732,5298,1.655,5305,2.349,5315,1.533,5321,1.533,5330,6.815,5331,1.533,5360,1.655,5365,1.308,5433,2.349,5441,1.655,5472,1.655,5491,4.495,5521,2.841,5546,1.533,5548,5.583,5589,1.655,5601,1.533,5606,1.655,5626,1.655,5646,5.586,5651,1.655,5680,1.655,5692,1.655,5702,2.631,5704,1.655,5710,5.794,5716,1.533,5717,4.119,5721,1.655,5722,1.655,5726,1.655,5731,1.533,5734,2.474,5742,1.533,5746,4.426,5747,1.655,5760,1.441,5768,1.533,5787,1.533,5859,1.655,5876,1.655,5915,1.441,5919,3.456,5958,2.841,5960,4.099,5961,1.655,5966,1.533,5989,1.655,5998,1.533,6009,1.655,6010,1.533,6011,1.655,6052,1.655,6056,1.655,6088,1.655,6091,2.841,6093,1.655,6101,1.655,6136,1.655,6141,2.631,6147,1.655,6158,1.655,6172,3.159,6173,1.841,6174,1.841,6175,5.817,6176,1.841,6177,1.841,6178,6.47,6179,1.841,6180,1.841,6181,4.151,6182,1.841,6183,1.841,6184,2.841,6185,1.841,6186,1.841,6187,1.841,6188,1.841,6189,1.841,6190,1.841,6191,1.655,6192,3.159,6193,1.841,6194,1.841,6195,1.841,6196,1.841,6197,1.841,6198,1.841,6199,1.841,6200,1.841,6201,1.841,6202,1.841,6203,1.841,6204,1.841,6205,1.841,6206,1.841,6207,1.841,6208,1.841,6209,1.841,6210,1.841,6211,1.841,6212,1.841,6213,1.841,6214,1.841,6215,1.841,6216,1.841,6217,1.841,6218,1.841,6219,1.841,6220,4.151,6221,1.841,6222,4.151,6223,3.159,6224,5.541,6225,3.159,6226,4.151,6227,1.841,6228,1.841,6229,1.841,6230,3.159,6231,1.841,6232,1.841,6233,1.841,6234,1.841,6235,1.841,6236,1.841,6237,1.841,6238,1.841,6239,1.841,6240,6.047,6241,1.841,6242,1.841,6243,1.841,6244,1.841,6245,1.841,6246,1.841,6247,1.841,6248,1.841,6249,1.841,6250,1.841,6251,1.841,6252,1.841,6253,1.841,6254,5.541,6255,3.159,6256,1.841,6257,3.159,6258,1.841,6259,1.841,6260,1.841,6261,3.159,6262,1.841,6263,1.841,6264,4.151,6265,3.159,6266,3.159,6267,1.841,6268,1.841,6269,4.923,6270,1.841,6271,1.841,6272,1.841,6273,1.841,6274,1.841,6275,1.841,6276,1.841,6277,1.841,6278,1.841,6279,3.159,6280,3.159,6281,1.841,6282,3.159,6283,1.841,6284,1.841,6285,1.841,6286,1.841,6287,3.159,6288,3.159,6289,1.841,6290,3.159,6291,1.841,6292,1.841,6293,1.841,6294,1.841,6295,1.841,6296,3.159,6297,1.841,6298,1.841,6299,1.841,6300,1.841,6301,1.841,6302,1.841,6303,3.159,6304,4.923,6305,1.841,6306,1.841,6307,1.841,6308,1.841,6309,1.841,6310,1.841,6311,3.159,6312,1.841,6313,1.841,6314,1.841,6315,1.841,6316,1.841,6317,1.841,6318,1.841,6319,1.841,6320,1.841,6321,1.655,6322,1.841,6323,3.159,6324,1.841,6325,1.841,6326,1.841,6327,1.841,6328,1.841,6329,1.841,6330,1.841,6331,1.841,6332,1.841,6333,1.841,6334,1.841,6335,1.841,6336,1.841,6337,1.841,6338,1.841,6339,1.841,6340,1.841,6341,1.841,6342,1.841,6343,1.841,6344,1.841,6345,1.841,6346,1.841,6347,1.841,6348,1.841,6349,1.841,6350,1.841,6351,1.841,6352,1.841,6353,1.841,6354,1.841,6355,1.841,6356,1.841]],["title/additional-documentation/nestjs-application/decisions.html",[2078,2.27,3442,2.507,6133,3.592]],["body/additional-documentation/nestjs-application/decisions.html",[9,0.975,10,1.577,14,0.004,31,0.133,47,3.479,112,2.778,172,0.003,173,0.003,175,1.92,179,2.669,187,0.594,207,2.836,272,2.356,316,1.423,323,2.804,347,4,349,1.73,354,2.375,355,1.364,364,3.84,372,4.022,377,3.272,385,1.698,394,3.033,416,3.272,437,3.701,457,5.521,502,2.176,756,3.466,771,3.84,773,3.85,811,2.722,921,2.524,1020,3.129,1112,2.619,1196,2.836,1255,3.84,1319,3.033,1661,2.722,1676,3.365,1788,3.107,1862,3.365,1901,5.065,1929,4.688,1930,2.836,1933,2.898,1969,4.688,1992,4,2019,4.185,2129,3.272,2131,4.233,2134,5.313,2135,4,2161,3.84,2227,4,2240,5.062,2356,3.84,2415,5.857,2417,4.688,2430,4,2521,4.409,2868,3.578,2873,3.578,2889,5.966,3012,5.062,3118,4,3319,6.228,3322,4.605,3354,5.56,3482,5.062,3664,3.84,3862,5.337,4285,4.185,4428,4.688,4442,4.185,4451,3.84,4457,6.228,4481,5.857,4523,4.688,4543,4.185,4594,4.185,4682,4,4764,5.062,4862,4.688,5149,4.688,5162,4.688,5227,4.688,5236,4.409,5434,5.062,5548,3.84,5590,6.993,5609,5.062,5695,5.062,5701,6.228,5702,4.688,5717,4.185,5731,4.688,5758,6.725,5822,5.062,5915,4.409,5951,5.062,6038,6.228,6063,5.062,6107,5.062,6133,6.228,6175,5.062,6184,5.062,6191,5.062,6321,5.062,6357,5.63,6358,8.399,6359,7.48,6360,5.63,6361,5.63,6362,9.315,6363,5.63,6364,5.63,6365,5.63,6366,5.63,6367,5.63,6368,5.63,6369,5.63,6370,5.63,6371,5.63,6372,5.63,6373,7.48,6374,5.63,6375,5.63,6376,5.63,6377,5.63,6378,5.63,6379,5.63,6380,5.63,6381,5.63,6382,5.63,6383,5.63,6384,5.63,6385,5.63,6386,5.63,6387,5.63,6388,5.63]],["title/additional-documentation/nestjs-application/vscode.html",[2078,2.27,3442,2.507,4449,3.377]],["body/additional-documentation/nestjs-application/vscode.html",[5,0.087,14,0.004,112,3.611,172,0.004,173,0.004,211,4.109,365,5.134,503,4.45,772,5.2,773,4.547,786,5.2,811,4.271,827,4.993,1032,4.651,1908,5.731,1919,4.04,1992,5.2,2141,5,3075,5.731,3785,5.731,3862,4.651,4118,5.2,4150,5.731,4449,6.917,4497,7.943,4732,5.441,4846,6.581,5046,6.581,5166,6.095,5224,8.531,5257,6.581,5272,5.731,5305,6.567,5365,5.2,5433,5.441,5452,6.095,5548,4.993,5633,6.581,5635,6.581,6038,7.355,6389,7.32,6390,7.32,6391,7.32,6392,7.32,6393,7.32,6394,7.32,6395,7.32,6396,7.32,6397,7.32]],["title/additional-documentation/nestjs-application/git.html",[2078,2.27,3442,2.507,4450,3.592]],["body/additional-documentation/nestjs-application/git.html",[14,0.004,46,3.553,54,3.491,172,0.004,173,0.004,835,4.967,2742,4.346,2868,5.126,3484,6.717,3644,5.997,4450,8.23,4471,7.253,4714,6.717,5280,8.413,6398,8.067,6399,8.067,6400,8.067,6401,8.067]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"entities/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"modules/ImportUserModule.html":{},"classes/ImportUserResponse.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"injectables/PermissionService.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"entities/System.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["0",{"_index":470,"title":{},"body":{"classes/BaseFactory.html":{},"classes/DashboardEntity.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DeleteFilesUc.html":{},"classes/EncryptedStringType.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/ImportUser.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"injectables/PermissionService.html":{},"classes/Scope.html":{},"entities/Submission.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/UserMatch.html":{},"injectables/UserRepo.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["0.1.1",{"_index":4307,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":4347,"title":{},"body":{"dependencies.html":{}}}],["0.1.4",{"_index":4358,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":4260,"title":{},"body":{"dependencies.html":{}}}],["0.24.0",{"_index":4250,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":4259,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":4335,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":4371,"title":{},"body":{"dependencies.html":{}}}],["0.5.19",{"_index":4362,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":4327,"title":{},"body":{"dependencies.html":{}}}],["0.5.4",{"_index":4312,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":4318,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":4361,"title":{},"body":{"dependencies.html":{}}}],["0.8.0",{"_index":4243,"title":{},"body":{"dependencies.html":{}}}],["0.8.1",{"_index":4321,"title":{},"body":{"dependencies.html":{}}}],["0.9.7",{"_index":4310,"title":{},"body":{"dependencies.html":{}}}],["0000d224816abba584714c9c",{"_index":6330,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["0000d225816abba584714c9d",{"_index":6332,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["1",{"_index":1318,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DatabaseManagementUc.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IGridElement.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/Scope.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["1.0.0",{"_index":4336,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":4350,"title":{},"body":{"dependencies.html":{}}}],["1.0.5",{"_index":4294,"title":{},"body":{"dependencies.html":{}}}],["1.0.56",{"_index":4276,"title":{},"body":{"dependencies.html":{}}}],["1.0a",{"_index":4331,"title":{},"body":{"dependencies.html":{}}}],["1.1",{"_index":6279,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["1.1.0",{"_index":4291,"title":{},"body":{"dependencies.html":{}}}],["1.1.1",{"_index":4380,"title":{},"body":{"dependencies.html":{}}}],["1.1.4",{"_index":4348,"title":{},"body":{"dependencies.html":{}}}],["1.15.2",{"_index":4255,"title":{},"body":{"dependencies.html":{}}}],["1.18.1",{"_index":4225,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":6280,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["1.2.0",{"_index":4252,"title":{},"body":{"dependencies.html":{}}}],["1.28.1",{"_index":4297,"title":{},"body":{"dependencies.html":{}}}],["1.3.3",{"_index":4226,"title":{},"body":{"dependencies.html":{}}}],["1.6.2",{"_index":4266,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":3440,"title":{},"body":{"classes/PaginationQuery.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["1000",{"_index":973,"title":{},"body":{"classes/CourseFactory.html":{},"miscellaneous/variables.html":{}}}],["11",{"_index":4792,"title":{},"body":{"license.html":{},"overview.html":{}}}],["13",{"_index":5239,"title":{},"body":{"license.html":{}}}],["13.1.0",{"_index":4338,"title":{},"body":{"dependencies.html":{}}}],["14.14",{"_index":2274,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["15",{"_index":4985,"title":{},"body":{"license.html":{}}}],["15672:15672",{"_index":5559,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["16",{"_index":4986,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["16.2.0",{"_index":4292,"title":{},"body":{"dependencies.html":{}}}],["19",{"_index":4550,"title":{},"body":{"license.html":{}}}],["1996",{"_index":4798,"title":{},"body":{"license.html":{}}}],["1:1",{"_index":6381,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["1:n",{"_index":6380,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["2",{"_index":1333,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["2.1.0",{"_index":4355,"title":{},"body":{"dependencies.html":{}}}],["2.1041.0",{"_index":4248,"title":{},"body":{"dependencies.html":{}}}],["2.19.2",{"_index":4309,"title":{},"body":{"dependencies.html":{}}}],["2.2.6",{"_index":4332,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":4295,"title":{},"body":{"dependencies.html":{}}}],["2.8.1",{"_index":4270,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":4796,"title":{},"body":{"license.html":{}}}],["2007",{"_index":4552,"title":{},"body":{"license.html":{}}}],["23",{"_index":5251,"title":{},"body":{"overview.html":{}}}],["24",{"_index":971,"title":{},"body":{"classes/CourseFactory.html":{},"miscellaneous/variables.html":{}}}],["25",{"_index":5250,"title":{},"body":{"overview.html":{}}}],["28",{"_index":5134,"title":{},"body":{"license.html":{}}}],["2auth",{"_index":5300,"title":{},"body":{"todo.html":{}}}],["3",{"_index":4549,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["3.0.0",{"_index":4345,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":4351,"title":{},"body":{"dependencies.html":{}}}],["3.1",{"_index":6323,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["3.1.0",{"_index":4341,"title":{},"body":{"dependencies.html":{}}}],["3.1.20",{"_index":4329,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":4378,"title":{},"body":{"dependencies.html":{}}}],["3.2.2",{"_index":4241,"title":{},"body":{"dependencies.html":{}}}],["3.6.2",{"_index":4352,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":5034,"title":{},"body":{"license.html":{}}}],["3030/docs",{"_index":5623,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["3030/v3/docs",{"_index":5617,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["4",{"_index":1298,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["4.0.0",{"_index":4273,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":4366,"title":{},"body":{"dependencies.html":{}}}],["4.13.2",{"_index":4286,"title":{},"body":{"dependencies.html":{}}}],["4.14.0",{"_index":4284,"title":{},"body":{"dependencies.html":{}}}],["4.17.19",{"_index":4304,"title":{},"body":{"dependencies.html":{}}}],["4.2",{"_index":3095,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["4.2.0",{"_index":4283,"title":{},"body":{"dependencies.html":{}}}],["4.2.5",{"_index":4262,"title":{},"body":{"dependencies.html":{}}}],["4.3.1",{"_index":4228,"title":{},"body":{"dependencies.html":{}}}],["4.5.11",{"_index":4221,"title":{},"body":{"dependencies.html":{}}}],["4.5.5",{"_index":4227,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":4256,"title":{},"body":{"dependencies.html":{}}}],["4.x",{"_index":5551,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["404",{"_index":5314,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["409/bad",{"_index":6170,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["409/conflict",{"_index":2386,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["41",{"_index":5252,"title":{},"body":{"overview.html":{}}}],["5",{"_index":4859,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["5.0.0",{"_index":4245,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":4246,"title":{},"body":{"dependencies.html":{}}}],["5.0.3",{"_index":4288,"title":{},"body":{"dependencies.html":{}}}],["5.1.0",{"_index":4234,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":4334,"title":{},"body":{"dependencies.html":{}}}],["5.13.9",{"_index":4311,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":5254,"title":{},"body":{"overview.html":{}}}],["500",{"_index":6161,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["5672",{"_index":5564,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["5672:5672",{"_index":5558,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["5f2987e020834114b8efd6f8",{"_index":6331,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["6",{"_index":6337,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["6.0.0",{"_index":4268,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":4236,"title":{},"body":{"dependencies.html":{}}}],["6.3.0",{"_index":4289,"title":{},"body":{"dependencies.html":{}}}],["6.9.4",{"_index":4343,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":972,"title":{},"body":{"classes/CourseFactory.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["60000",{"_index":3552,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["699615164",{"_index":5290,"title":{},"body":{"todo.html":{}}}],["6b",{"_index":4884,"title":{},"body":{"license.html":{}}}],["6d",{"_index":4904,"title":{},"body":{"license.html":{}}}],["7",{"_index":4087,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{}}}],["7.0.0",{"_index":4272,"title":{},"body":{"dependencies.html":{}}}],["7.24.0",{"_index":4281,"title":{},"body":{"dependencies.html":{}}}],["7.3.1",{"_index":4353,"title":{},"body":{"dependencies.html":{}}}],["71",{"_index":5253,"title":{},"body":{"overview.html":{}}}],["8",{"_index":2239,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["8.0.0",{"_index":4230,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":4232,"title":{},"body":{"dependencies.html":{}}}],["8.1.0",{"_index":4264,"title":{},"body":{"dependencies.html":{}}}],["8.2.3",{"_index":4229,"title":{},"body":{"dependencies.html":{}}}],["8.3.0",{"_index":4375,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":4299,"title":{},"body":{"dependencies.html":{}}}],["8.8.2",{"_index":4238,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":5470,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["8080",{"_index":5592,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["86400000",{"_index":3852,"title":{},"body":{"classes/TaskFactory.html":{},"miscellaneous/variables.html":{}}}],["9229",{"_index":5584,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["99",{"_index":3445,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["999",{"_index":4509,"title":{},"body":{"index.html":{}}}],["9]{24",{"_index":656,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["_",{"_index":2346,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_${now.getdate()}_${now.gethours()}_${now.getminutes()}_${now.getseconds",{"_index":1837,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["_.snakecase(exceptionname).touppercase",{"_index":2364,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.snakecase(type).touppercase",{"_index":2376,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.spec.ts",{"_index":5962,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_.startcase(exceptionname",{"_index":2365,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.startcase(title",{"_index":2378,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.test.[ts|js",{"_index":5598,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["_email",{"_index":2528,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["_id",{"_index":347,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"injectables/FeathersAuthProvider.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["_id.$oid",{"_index":1904,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["_operator",{"_index":1143,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["_queries",{"_index":1144,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["_timeout",{"_index":4120,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["a.getmetadata().title",{"_index":1315,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["a.m",{"_index":4539,"title":{},"body":{"index.html":{}}}],["aaa",{"_index":6216,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["ability",{"_index":4954,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["above",{"_index":4535,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["absence",{"_index":4822,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":1821,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"license.html":{}}}],["abstract",{"_index":505,"title":{},"body":{"entities/BaseFile.html":{},"classes/BusinessError.html":{},"entities/CourseNews.html":{},"injectables/DashboardRepo.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"classes/PaginationResponse.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["abstractbootstrapconsole",{"_index":4106,"title":{},"body":{"classes/TestBootstrapConsole.html":{}}}],["abstraction",{"_index":5872,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["acacac",{"_index":891,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/variables.html":{}}}],["accept",{"_index":5039,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":5038,"title":{},"body":{"license.html":{}}}],["accepted",{"_index":5275,"title":{},"body":{"todo.html":{}}}],["accepts",{"_index":424,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"miscellaneous/functions.html":{}}}],["access",{"_index":60,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"controllers/DelayController.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"controllers/ServerController.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["access,@typescript",{"_index":51,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["accessable",{"_index":5949,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessed",{"_index":1070,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"index.html":{}}}],["accessible",{"_index":4627,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessing",{"_index":5735,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accesskeyid",{"_index":2195,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{},"miscellaneous/variables.html":{}}}],["accessors",{"_index":1732,"title":{},"body":{"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"classes/Scope.html":{},"injectables/TimeoutInterceptor.html":{}}}],["accompanied",{"_index":4866,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":5219,"title":{},"body":{"license.html":{}}}],["accomplish",{"_index":4629,"title":{},"body":{"license.html":{}}}],["accord",{"_index":4821,"title":{},"body":{"license.html":{}}}],["according",{"_index":5211,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["account",{"_index":2483,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"injectables/JwtValidationAdapter.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accountid",{"_index":2481,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["achieve",{"_index":5222,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["acknowledges",{"_index":4759,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":5088,"title":{},"body":{"license.html":{}}}],["act",{"_index":6215,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["action",{"_index":2167,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":5046,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["active",{"_index":2935,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["activecourses",{"_index":898,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["activecourses'})@property",{"_index":868,"title":{},"body":{"entities/Course.html":{}}}],["activities",{"_index":4674,"title":{},"body":{"license.html":{}}}],["activity",{"_index":5128,"title":{},"body":{"license.html":{}}}],["actors",{"_index":6073,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actual",{"_index":5110,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actually",{"_index":4926,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adapt",{"_index":4652,"title":{},"body":{"license.html":{}}}],["adapter",{"_index":5707,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["add",{"_index":2742,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"injectables/SubmissionRepo.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["addbearerauth",{"_index":5497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["added",{"_index":1901,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/Logger.html":{},"injectables/TaskAuthorizationService.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["addgroupmoderator(groupname",{"_index":101,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["adding",{"_index":417,"title":{},"body":{"classes/BaseFactory.html":{},"entities/Course.html":{},"classes/CourseFactory.html":{},"interfaces/ICourseProperties.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["additional",{"_index":2078,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/ErrorResponse.html":{},"classes/GlobalValidationPipe.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionally",{"_index":4488,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionaly",{"_index":5576,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["addquery",{"_index":1148,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["addquery(query",{"_index":1157,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["addreferences",{"_index":2440,"title":{},"body":{"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["addreferences(anotherreference",{"_index":1306,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["address",{"_index":5165,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["addressed",{"_index":4648,"title":{},"body":{"license.html":{}}}],["addresses",{"_index":5785,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["addroom",{"_index":1237,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["addroom(room",{"_index":1259,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["adds",{"_index":1801,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["addserver('/api/v3",{"_index":5490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["addstatustotasks",{"_index":3565,"title":{},"body":{"injectables/RoomsUc.html":{}}}],["addstatustotasks(isteacher",{"_index":613,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["addtokentowhitelist",{"_index":2952,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["addtokentowhitelist(redisidentifier",{"_index":2957,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["addtowhitelist",{"_index":2938,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["addtowhitelist(accountid",{"_index":2940,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["adhere",{"_index":6098,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["admin",{"_index":2536,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adminid",{"_index":27,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["adminidandtoken",{"_index":1,"title":{"interfaces/AdminIdAndToken.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["adminidandtoken.id",{"_index":133,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["adminidandtoken.token",{"_index":132,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["adminpassword",{"_index":26,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["admintoken",{"_index":28,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["adminuser",{"_index":25,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["adopted",{"_index":4795,"title":{},"body":{"license.html":{}}}],["adversely",{"_index":4961,"title":{},"body":{"license.html":{}}}],["advised",{"_index":5207,"title":{},"body":{"license.html":{}}}],["affects",{"_index":4962,"title":{},"body":{"license.html":{}}}],["affero",{"_index":4546,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":5069,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":4756,"title":{},"body":{"license.html":{}}}],["afterall",{"_index":6286,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterall(async",{"_index":6290,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterbuild",{"_index":399,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["afterbuild(afterbuildfn",{"_index":413,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["afterbuildfn",{"_index":422,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["afterduedateornone",{"_index":3950,"title":{},"body":{"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{}}}],["afterduedateornone(duedate",{"_index":4002,"title":{},"body":{"classes/TaskScope.html":{}}}],["aftereach",{"_index":6210,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["aftereach(async",{"_index":6339,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterwards",{"_index":6208,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["again",{"_index":4425,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/nestjs-application.html":{}}}],["against",{"_index":4811,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["age",{"_index":5847,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aggregate",{"_index":4850,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["aggregates",{"_index":5729,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["agile",{"_index":5703,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["agnostic",{"_index":5951,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["ago",{"_index":1948,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["agpl",{"_index":5243,"title":{},"body":{"license.html":{}}}],["agree",{"_index":5147,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":5195,"title":{},"body":{"license.html":{}}}],["agreeing",{"_index":6070,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["agreement",{"_index":5098,"title":{},"body":{"license.html":{}}}],["aims",{"_index":5644,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ajv",{"_index":4237,"title":{},"body":{"dependencies.html":{}}}],["ald",{"_index":5492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["algorithm",{"_index":2903,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["alias",{"_index":3730,"title":{},"body":{"entities/System.html":{}}}],["aliases",{"_index":5337,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aligned",{"_index":5698,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["all('seed",{"_index":1706,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["all_entities",{"_index":3066,"title":{},"body":{"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["allcollections",{"_index":5443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allcollections.map(async",{"_index":5445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allcollectionswithfilepaths",{"_index":1849,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["allcollectionswithfilepaths.filter",{"_index":1859,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["allcollectionswithfilepaths.map((file",{"_index":1865,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["alleging",{"_index":5076,"title":{},"body":{"license.html":{}}}],["allforcreator",{"_index":3940,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["allforcreator.addquery(allforfinishedcoursesandlessonsforcreator.query",{"_index":3943,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["allforcreator.addquery(closeddraftsforcreator.query",{"_index":3942,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["allforcreator.addquery(closedwithoutparentforcreator.query",{"_index":3941,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["allforfinishedcoursesandlessons",{"_index":3925,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["allforfinishedcoursesandlessons.addquery(parentsfinished.query",{"_index":3926,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["allforfinishedcoursesandlessons.bydraft(false",{"_index":3927,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["allforfinishedcoursesandlessonsforcreator",{"_index":3937,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["allforfinishedcoursesandlessonsforcreator.addquery(parentsfinished.query",{"_index":3938,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["allforfinishedcoursesandlessonsforcreator.bycreatorid(parentids.creatorid",{"_index":3939,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["allow",{"_index":3785,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["allowed",{"_index":4565,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["allows",{"_index":4150,"title":{},"body":{"classes/UpdateNewsParams.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["allrooms",{"_index":1238,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["alone",{"_index":6206,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["along",{"_index":4824,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["already",{"_index":786,"title":{},"body":{"classes/BusinessError.html":{},"injectables/FileSystemAdapter.html":{},"injectables/NewsRepo.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["alternate",{"_index":4611,"title":{},"body":{"license.html":{}}}],["alternative",{"_index":4880,"title":{},"body":{"license.html":{}}}],["always",{"_index":5731,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["amount",{"_index":5366,"title":{},"body":{"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["amp",{"_index":4427,"title":{},"body":{"miscellaneous/functions.html":{}}}],["amqp",{"_index":4239,"title":{},"body":{"dependencies.html":{}}}],["amqpconnection",{"_index":3047,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["amqplib",{"_index":4242,"title":{},"body":{"dependencies.html":{}}}],["analysis",{"_index":5614,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["analytics",{"_index":4370,"title":{},"body":{"dependencies.html":{}}}],["ancillary",{"_index":5040,"title":{},"body":{"license.html":{}}}],["and/opr",{"_index":6229,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["and/or",{"_index":4604,"title":{},"body":{"license.html":{}}}],["ang",{"_index":6363,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["annotations",{"_index":5972,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anonymous",{"_index":5954,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["another",{"_index":5693,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anothernewsid",{"_index":6313,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["anotherreference",{"_index":2454,"title":{},"body":{"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["anti",{"_index":4782,"title":{},"body":{"license.html":{}}}],["anyone",{"_index":4834,"title":{},"body":{"license.html":{}}}],["anything",{"_index":4660,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["anywhere",{"_index":6025,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["api",{"_index":207,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/DelayController.html":{},"classes/GlobalErrorFilter.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["api/v1",{"_index":4460,"title":{},"body":{"index.html":{}}}],["api/v3",{"_index":4461,"title":{},"body":{"index.html":{}}}],["api/v3/news",{"_index":4470,"title":{},"body":{"index.html":{}}}],["api_validation_error",{"_index":206,"title":{},"body":{"classes/ApiValidationError.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["apibearerauth",{"_index":5429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":627,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusResponse.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/GlobalValidationPipe.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationResponse.html":{},"classes/PatchGroupParams.html":{},"classes/ResolvedUser.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskStatusResponse.html":{},"classes/UpdateMatchParams.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatchResponse.html":{},"miscellaneous/variables.html":{}}}],["apiproperty()@decodehtmlentities",{"_index":713,"title":{},"body":{"classes/BoardTaskResponse.html":{},"classes/TaskResponse.html":{}}}],["apiproperty({description",{"_index":622,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/ImportUserResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UpdateMatchParams.html":{},"classes/UserMatchResponse.html":{}}}],["apiproperty({enum",{"_index":3341,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apiproperty({pattern",{"_index":3339,"title":{},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["apiproperty({type",{"_index":699,"title":{},"body":{"classes/BoardResponse.html":{},"classes/CourseMetadataListResponse.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/ImportUserListResponse.html":{},"classes/NewsListResponse.html":{},"classes/PaginationResponse.html":{},"classes/TaskListResponse.html":{}}}],["apipropertyoptional",{"_index":628,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/CreateNewsParams.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoResponse.html":{}}}],["apipropertyoptional()@decodehtmlentities",{"_index":706,"title":{},"body":{"classes/BoardTaskResponse.html":{},"classes/TaskResponse.html":{}}}],["apipropertyoptional()@isoptional()@isboolean",{"_index":2809,"title":{},"body":{"classes/ImportUserFilterQuery.html":{}}}],["apipropertyoptional()@isoptional()@isstring()@isnotempty",{"_index":2807,"title":{},"body":{"classes/ImportUserFilterQuery.html":{}}}],["apipropertyoptional({description",{"_index":2862,"title":{},"body":{"classes/ImportUserResponse.html":{},"classes/NewsResponse.html":{},"classes/UserInfoResponse.html":{}}}],["apipropertyoptional({enum",{"_index":2814,"title":{},"body":{"classes/ImportUserFilterQuery.html":{}}}],["apipropertyoptional({type",{"_index":3335,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apis",{"_index":5667,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["apitags",{"_index":931,"title":{},"body":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{},"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"controllers/RoomsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}}}],["apitags('courses",{"_index":939,"title":{},"body":{"controllers/CourseController.html":{}}}],["apitags('dashboard",{"_index":1220,"title":{},"body":{"controllers/DashboardController.html":{}}}],["apitags('news",{"_index":3182,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["apitags('rooms",{"_index":3561,"title":{},"body":{"controllers/RoomsController.html":{}}}],["apitags('task",{"_index":3835,"title":{},"body":{"controllers/TaskController.html":{}}}],["apitags('user",{"_index":2802,"title":{},"body":{"controllers/ImportUserController.html":{},"controllers/UserController.html":{}}}],["apivalidationerror",{"_index":174,"title":{"classes/ApiValidationError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["apivalidationerror(errors",{"_index":2439,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["apivalidationerror.validationerrors.map((validationerror",{"_index":229,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["apivalidationerrorresponse",{"_index":213,"title":{"classes/ApiValidationErrorResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{}}}],["apivalidationerrorresponse(error",{"_index":2368,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["app",{"_index":2384,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["app.close",{"_index":6341,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["app.init",{"_index":6335,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["app_filter",{"_index":839,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["app_guard",{"_index":838,"title":{},"body":{"modules/CoreModule.html":{}}}],["app_interceptor",{"_index":836,"title":{},"body":{"modules/CoreModule.html":{},"controllers/DelayController.html":{},"modules/InterceptorModule.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["app_pipe",{"_index":837,"title":{},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{}}}],["append",{"_index":5335,"title":{},"body":{"todo.html":{}}}],["appendedattachment",{"_index":235,"title":{"interfaces/AppendedAttachment.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["applicable",{"_index":4665,"title":{},"body":{"license.html":{}}}],["applicaiton",{"_index":5586,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["application",{"_index":773,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"classes/BusinessError.html":{},"modules/CoreModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["applications",{"_index":4442,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["applied",{"_index":1790,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["applies",{"_index":5171,"title":{},"body":{"license.html":{}}}],["apply",{"_index":1855,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/InterceptorModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["applydecorators(...decorators",{"_index":5430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applying",{"_index":6344,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["approach",{"_index":5683,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriate",{"_index":4483,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriately",{"_index":4816,"title":{},"body":{"license.html":{}}}],["approximates",{"_index":5215,"title":{},"body":{"license.html":{}}}],["apps",{"_index":5478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/**/*.(t|j)s",{"_index":5464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../all",{"_index":5373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../auth.decorator.ts",{"_index":5354,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../bootstrap.console.ts",{"_index":5395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../cleanup",{"_index":5377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../console.ts",{"_index":5375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../constants.ts",{"_index":5398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../counted.ts",{"_index":5341,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../course.entity.ts",{"_index":5388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../course.factory.ts",{"_index":5381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../coursegroup.factory.ts",{"_index":5383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../create",{"_index":5387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../dashboard.entity.ts",{"_index":5342,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../dashboard.repo.ts",{"_index":5397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../database.config.ts",{"_index":5421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../decode",{"_index":4403,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../empty",{"_index":5392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../entity",{"_index":5344,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../feathers",{"_index":5346,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../file",{"_index":5423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../file.factory.ts",{"_index":5391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../filestorage.adapter.ts",{"_index":4402,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../find",{"_index":4390,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../global",{"_index":4399,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../import",{"_index":4384,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../jwt",{"_index":5422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../learnroom.types.ts",{"_index":4383,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../lesson.factory.ts",{"_index":5399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../mail.module.ts",{"_index":5350,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":4396,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../management.ts",{"_index":4397,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../map",{"_index":5401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../match",{"_index":4385,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../mongo",{"_index":5386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../news",{"_index":5416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../news.factory.ts",{"_index":5385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../news.response.ts",{"_index":5352,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../news.types.ts",{"_index":4387,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../news.uc.ts",{"_index":5349,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../resolveduser.dto.ts",{"_index":5351,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../rocket",{"_index":5347,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../role",{"_index":4388,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../role.factory.ts",{"_index":5407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../rooms.uc.ts",{"_index":5338,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../school.factory.ts",{"_index":5408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../scope.ts",{"_index":5343,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../server",{"_index":5404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../server.module.ts",{"_index":5389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../setup",{"_index":5412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../storageprovider.factory.ts",{"_index":5414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../string",{"_index":4405,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../submission.factory.ts",{"_index":5415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../swagger.ts",{"_index":5380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../task.authorization.service.ts",{"_index":4391,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../task.entity.ts",{"_index":5355,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../task.factory.ts",{"_index":5417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../team.factory.ts",{"_index":5419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../types.ts",{"_index":5340,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../user.factory.ts",{"_index":5424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../user.ts",{"_index":5348,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../value",{"_index":5357,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server",{"_index":5571,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["apps/server/doc",{"_index":5627,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/path",{"_index":5473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src",{"_index":5632,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/src/$1",{"_index":5482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/config/database.config.ts",{"_index":2325,"title":{},"body":{"interfaces/GlobalConstants.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/console/console.module.ts",{"_index":3618,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["apps/server/src/console/console.ts",{"_index":5439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/console/server.console.ts",{"_index":3604,"title":{},"body":{"classes/ServerConsole.html":{}}}],["apps/server/src/console/server.console.ts:11",{"_index":3608,"title":{},"body":{"classes/ServerConsole.html":{}}}],["apps/server/src/console/server.console.ts:17",{"_index":3611,"title":{},"body":{"classes/ServerConsole.html":{}}}],["apps/server/src/console/server.console.ts:6",{"_index":3606,"title":{},"body":{"classes/ServerConsole.html":{}}}],["apps/server/src/console/test/bootstrap.console.ts",{"_index":4105,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/console/test/bootstrap.console.ts:5",{"_index":4107,"title":{},"body":{"classes/TestBootstrapConsole.html":{}}}],["apps/server/src/core/core.module.ts",{"_index":824,"title":{},"body":{"modules/CoreModule.html":{}}}],["apps/server/src/core/error/dto/api",{"_index":214,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["apps/server/src/core/error/dto/error.response.ts",{"_index":2069,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["apps/server/src/core/error/dto/error.response.ts:6",{"_index":2071,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["apps/server/src/core/error/dto/validation",{"_index":4211,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["apps/server/src/core/error/error.module.ts",{"_index":2062,"title":{},"body":{"modules/ErrorModule.html":{}}}],["apps/server/src/core/error/filter/global",{"_index":2333,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/error/interface/error",{"_index":2496,"title":{},"body":{"interfaces/IErrorType.html":{}}}],["apps/server/src/core/error/interface/feathers",{"_index":2121,"title":{},"body":{"interfaces/FeathersError.html":{}}}],["apps/server/src/core/error/server",{"_index":5522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/core/interceptor/interceptor.module.ts",{"_index":2865,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["apps/server/src/core/logger/logger.interface.ts",{"_index":2577,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:2",{"_index":2588,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:3",{"_index":2586,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:4",{"_index":2592,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:5",{"_index":2583,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:6",{"_index":2590,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.module.ts",{"_index":3020,"title":{},"body":{"modules/LoggerModule.html":{}}}],["apps/server/src/core/logger/logger.service.ts",{"_index":2999,"title":{},"body":{"injectables/Logger.html":{}}}],["apps/server/src/core/validation/pipe/global",{"_index":2413,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["apps/server/src/core/validation/validation.module.ts",{"_index":4216,"title":{},"body":{"modules/ValidationModule.html":{}}}],["apps/server/src/main.ts",{"_index":4407,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/server/src/management.ts",{"_index":4408,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/server/src/modules/authentication/auth.module.ts",{"_index":271,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/server/src/modules/authentication/constants.ts",{"_index":2879,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/decorator/auth.decorator.ts",{"_index":5368,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/guard/jwt",{"_index":2875,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["apps/server/src/modules/authentication/interface/jwt",{"_index":2908,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt",{"_index":2936,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts",{"_index":2911,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:10",{"_index":2913,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:20",{"_index":2915,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authorization/authorization.module.ts",{"_index":294,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts",{"_index":301,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:16",{"_index":319,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:32",{"_index":313,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:52",{"_index":322,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:6",{"_index":306,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/feathers",{"_index":2081,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["apps/server/src/modules/files/files.module.ts",{"_index":2289,"title":{},"body":{"modules/FilesModule.html":{}}}],["apps/server/src/modules/files/job/delete",{"_index":1937,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["apps/server/src/modules/files/uc/delete",{"_index":1961,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["apps/server/src/modules/learnroom/controller/course.controller.ts",{"_index":922,"title":{},"body":{"controllers/CourseController.html":{}}}],["apps/server/src/modules/learnroom/controller/course.controller.ts:17",{"_index":928,"title":{},"body":{"controllers/CourseController.html":{}}}],["apps/server/src/modules/learnroom/controller/dashboard.controller.ts",{"_index":1199,"title":{},"body":{"controllers/DashboardController.html":{}}}],["apps/server/src/modules/learnroom/controller/dashboard.controller.ts:17",{"_index":1203,"title":{},"body":{"controllers/DashboardController.html":{}}}],["apps/server/src/modules/learnroom/controller/dashboard.controller.ts:24",{"_index":1207,"title":{},"body":{"controllers/DashboardController.html":{}}}],["apps/server/src/modules/learnroom/controller/dashboard.controller.ts:40",{"_index":1213,"title":{},"body":{"controllers/DashboardController.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/coursemetadata.response.ts",{"_index":1018,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/coursemetadata.response.ts:26",{"_index":1041,"title":{},"body":{"classes/CourseMetadataResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/coursemetadata.response.ts:31",{"_index":1044,"title":{},"body":{"classes/CourseMetadataResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/coursemetadata.response.ts:36",{"_index":1042,"title":{},"body":{"classes/CourseMetadataResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/coursemetadata.response.ts:41",{"_index":1040,"title":{},"body":{"classes/CourseMetadataResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/coursemetadata.response.ts:46",{"_index":1043,"title":{},"body":{"classes/CourseMetadataResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/coursemetadata.response.ts:5",{"_index":1039,"title":{},"body":{"classes/CourseMetadataResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/coursemetadata.response.ts:51",{"_index":1045,"title":{},"body":{"classes/CourseMetadataResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/coursemetadata.response.ts:54",{"_index":1022,"title":{},"body":{"classes/CourseMetadataListResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts",{"_index":1441,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:108",{"_index":1619,"title":{},"body":{"classes/DashboardResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:114",{"_index":1618,"title":{},"body":{"classes/DashboardResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:15",{"_index":1463,"title":{},"body":{"classes/DashboardGridSubElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:20",{"_index":1465,"title":{},"body":{"classes/DashboardGridSubElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:25",{"_index":1464,"title":{},"body":{"classes/DashboardGridSubElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:3",{"_index":1461,"title":{},"body":{"classes/DashboardGridSubElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:30",{"_index":1462,"title":{},"body":{"classes/DashboardGridSubElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:33",{"_index":1445,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:58",{"_index":1451,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:63",{"_index":1453,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:68",{"_index":1452,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:73",{"_index":1446,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:78",{"_index":1454,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:83",{"_index":1455,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:89",{"_index":1450,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:95",{"_index":1449,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:98",{"_index":1617,"title":{},"body":{"classes/DashboardResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/moveposition.params.ts",{"_index":3128,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/moveposition.params.ts:12",{"_index":3141,"title":{},"body":{"classes/MoveElementPosition.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/moveposition.params.ts:17",{"_index":3142,"title":{},"body":{"classes/MoveElementPosition.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/moveposition.params.ts:23",{"_index":3139,"title":{},"body":{"classes/MoveElementPosition.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/moveposition.params.ts:29",{"_index":3131,"title":{},"body":{"classes/MoveElementParams.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/moveposition.params.ts:33",{"_index":3132,"title":{},"body":{"classes/MoveElementParams.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/patchgroup.params.ts",{"_index":3472,"title":{},"body":{"classes/PatchGroupParams.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/patchgroup.params.ts:12",{"_index":3474,"title":{},"body":{"classes/PatchGroupParams.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse",{"_index":724,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts",{"_index":618,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:15",{"_index":712,"title":{},"body":{"classes/BoardTaskResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:19",{"_index":714,"title":{},"body":{"classes/BoardTaskResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:22",{"_index":705,"title":{},"body":{"classes/BoardTaskResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:25",{"_index":711,"title":{},"body":{"classes/BoardTaskResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:29",{"_index":707,"title":{},"body":{"classes/BoardTaskResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:33",{"_index":709,"title":{},"body":{"classes/BoardTaskResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:36",{"_index":710,"title":{},"body":{"classes/BoardTaskResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:39",{"_index":708,"title":{},"body":{"classes/BoardTaskResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:42",{"_index":716,"title":{},"body":{"classes/BoardTaskResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:45",{"_index":715,"title":{},"body":{"classes/BoardTaskResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:48",{"_index":620,"title":{},"body":{"classes/BoardElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:5",{"_index":704,"title":{},"body":{"classes/BoardTaskResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:57",{"_index":626,"title":{},"body":{"classes/BoardElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:62",{"_index":624,"title":{},"body":{"classes/BoardElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:66",{"_index":697,"title":{},"body":{"classes/BoardResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:78",{"_index":702,"title":{},"body":{"classes/BoardResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:83",{"_index":703,"title":{},"body":{"classes/BoardResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:88",{"_index":698,"title":{},"body":{"classes/BoardResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:94",{"_index":701,"title":{},"body":{"classes/BoardResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/rooms.controller.ts",{"_index":3555,"title":{},"body":{"controllers/RoomsController.html":{}}}],["apps/server/src/modules/learnroom/controller/rooms.controller.ts:17",{"_index":3559,"title":{},"body":{"controllers/RoomsController.html":{}}}],["apps/server/src/modules/learnroom/learnroom.module.ts",{"_index":2961,"title":{},"body":{"modules/LearnroomModule.html":{}}}],["apps/server/src/modules/learnroom/mapper/board",{"_index":717,"title":{},"body":{"classes/BoardTaskStatusMapper.html":{}}}],["apps/server/src/modules/learnroom/mapper/board.mapper.ts",{"_index":661,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["apps/server/src/modules/learnroom/mapper/board.mapper.ts:9",{"_index":664,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["apps/server/src/modules/learnroom/mapper/course.mapper.ts",{"_index":1004,"title":{},"body":{"classes/CourseMapper.html":{}}}],["apps/server/src/modules/learnroom/mapper/course.mapper.ts:5",{"_index":1007,"title":{},"body":{"classes/CourseMapper.html":{}}}],["apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts",{"_index":1466,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts:15",{"_index":1470,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts:35",{"_index":1472,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts:5",{"_index":1475,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["apps/server/src/modules/learnroom/uc/course.uc.ts",{"_index":1160,"title":{},"body":{"injectables/CourseUc.html":{}}}],["apps/server/src/modules/learnroom/uc/course.uc.ts:10",{"_index":1165,"title":{},"body":{"injectables/CourseUc.html":{}}}],["apps/server/src/modules/learnroom/uc/course.uc.ts:7",{"_index":1163,"title":{},"body":{"injectables/CourseUc.html":{}}}],["apps/server/src/modules/learnroom/uc/dashboard.uc.ts",{"_index":1620,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/learnroom/uc/dashboard.uc.ts:13",{"_index":1626,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/learnroom/uc/dashboard.uc.ts:25",{"_index":1628,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/learnroom/uc/dashboard.uc.ts:40",{"_index":1630,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/learnroom/uc/dashboard.uc.ts:56",{"_index":1632,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/learnroom/uc/dashboard.uc.ts:7",{"_index":1625,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/learnroom/uc/rooms.uc.ts",{"_index":568,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/learnroom/uc/rooms.uc.ts:20",{"_index":3568,"title":{},"body":{"injectables/RoomsUc.html":{}}}],["apps/server/src/modules/learnroom/uc/rooms.uc.ts:27",{"_index":3571,"title":{},"body":{"injectables/RoomsUc.html":{}}}],["apps/server/src/modules/learnroom/uc/rooms.uc.ts:40",{"_index":3573,"title":{},"body":{"injectables/RoomsUc.html":{}}}],["apps/server/src/modules/learnroom/uc/rooms.uc.ts:52",{"_index":3570,"title":{},"body":{"injectables/RoomsUc.html":{}}}],["apps/server/src/modules/learnroom/uc/rooms.uc.ts:63",{"_index":3572,"title":{},"body":{"injectables/RoomsUc.html":{}}}],["apps/server/src/modules/learnroom/uc/rooms.uc.ts:70",{"_index":3569,"title":{},"body":{"injectables/RoomsUc.html":{}}}],["apps/server/src/modules/management/console/database",{"_index":1651,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["apps/server/src/modules/management/controller/database",{"_index":1691,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["apps/server/src/modules/management/converter/bson.converter.ts",{"_index":743,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["apps/server/src/modules/management/converter/bson.converter.ts:11",{"_index":759,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["apps/server/src/modules/management/converter/bson.converter.ts:21",{"_index":747,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["apps/server/src/modules/management/management.module.ts",{"_index":3061,"title":{},"body":{"modules/ManagementModule.html":{}}}],["apps/server/src/modules/management/uc/database",{"_index":1772,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["apps/server/src/modules/news/controller/dto/create",{"_index":1170,"title":{},"body":{"classes/CreateNewsParams.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news",{"_index":3202,"title":{},"body":{"classes/NewsFilterQuery.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts",{"_index":3216,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:101",{"_index":3334,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:106",{"_index":3330,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:111",{"_index":3345,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:116",{"_index":3329,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:12",{"_index":3327,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:121",{"_index":3344,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:126",{"_index":3333,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:129",{"_index":3217,"title":{},"body":{"classes/NewsListResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:51",{"_index":3332,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:56",{"_index":3343,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:61",{"_index":3328,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:66",{"_index":3331,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:73",{"_index":3336,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:78",{"_index":3337,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:85",{"_index":3342,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:91",{"_index":3340,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:96",{"_index":3338,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/school",{"_index":3582,"title":{},"body":{"classes/SchoolInfoResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/target",{"_index":3744,"title":{},"body":{"classes/TargetInfoResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/update",{"_index":4147,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["apps/server/src/modules/news/controller/dto/user",{"_index":4176,"title":{},"body":{"classes/UserInfoResponse.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts",{"_index":3156,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:21",{"_index":3159,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:35",{"_index":3165,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:56",{"_index":3169,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:70",{"_index":3175,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:84",{"_index":3162,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/team",{"_index":4092,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts",{"_index":3233,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:37",{"_index":3240,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:51",{"_index":3238,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:64",{"_index":3244,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:8",{"_index":3242,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/school",{"_index":3575,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["apps/server/src/modules/news/mapper/target",{"_index":3739,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["apps/server/src/modules/news/mapper/user",{"_index":4175,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["apps/server/src/modules/news/news.module.ts",{"_index":3281,"title":{},"body":{"modules/NewsModule.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts",{"_index":3365,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:119",{"_index":3395,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:143",{"_index":3376,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:154",{"_index":3387,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:174",{"_index":3393,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:192",{"_index":3386,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:202",{"_index":3389,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:21",{"_index":3372,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:34",{"_index":3374,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:64",{"_index":3378,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:95",{"_index":3384,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/rocketchat/rocket",{"_index":6,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/task/controller/dto/task",{"_index":4037,"title":{},"body":{"classes/TaskStatusResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts",{"_index":3855,"title":{},"body":{"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:19",{"_index":3987,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:23",{"_index":3988,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:26",{"_index":3981,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:29",{"_index":3986,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:33",{"_index":3982,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:37",{"_index":3984,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:40",{"_index":3985,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:43",{"_index":3983,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:46",{"_index":3990,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:49",{"_index":3989,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:52",{"_index":3857,"title":{},"body":{"classes/TaskListResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:8",{"_index":3980,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts",{"_index":3824,"title":{},"body":{"controllers/TaskController.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts:19",{"_index":3826,"title":{},"body":{"controllers/TaskController.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts:33",{"_index":3829,"title":{},"body":{"controllers/TaskController.html":{}}}],["apps/server/src/modules/task/mapper/task",{"_index":4032,"title":{},"body":{"classes/TaskStatusMapper.html":{}}}],["apps/server/src/modules/task/mapper/task.mapper.ts",{"_index":3864,"title":{},"body":{"classes/TaskMapper.html":{}}}],["apps/server/src/modules/task/mapper/task.mapper.ts:6",{"_index":3866,"title":{},"body":{"classes/TaskMapper.html":{}}}],["apps/server/src/modules/task/task.module.ts",{"_index":3889,"title":{},"body":{"modules/TaskModule.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts",{"_index":3756,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"miscellaneous/enumerations.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts:16",{"_index":3763,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts:25",{"_index":3767,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts:37",{"_index":3769,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts:56",{"_index":3773,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts:62",{"_index":3771,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts:69",{"_index":3778,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts:84",{"_index":3776,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts",{"_index":4047,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:111",{"_index":4059,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:139",{"_index":4060,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:16",{"_index":4055,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:63",{"_index":4053,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:82",{"_index":4057,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:9",{"_index":4051,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/user",{"_index":2775,"title":{},"body":{"controllers/ImportUserController.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"modules/ImportUserModule.html":{},"classes/ImportUserResponse.html":{},"classes/UpdateMatchParams.html":{},"classes/UserMatchResponse.html":{},"miscellaneous/enumerations.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts",{"_index":3498,"title":{},"body":{"classes/ResolvedUser.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:11",{"_index":3502,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:14",{"_index":3501,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:17",{"_index":3499,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:20",{"_index":3506,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:23",{"_index":3504,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:26",{"_index":3503,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:29",{"_index":3505,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:8",{"_index":3500,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/user.controller.ts",{"_index":4165,"title":{},"body":{"controllers/UserController.html":{}}}],["apps/server/src/modules/user/controller/user.controller.ts:18",{"_index":4168,"title":{},"body":{"controllers/UserController.html":{}}}],["apps/server/src/modules/user/mapper/resolveduser.mapper.ts",{"_index":3508,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["apps/server/src/modules/user/mapper/resolveduser.mapper.ts:5",{"_index":3510,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["apps/server/src/modules/user/user.module.ts",{"_index":4198,"title":{},"body":{"modules/UserModule.html":{}}}],["apps/server/src/server.controller.ts",{"_index":3625,"title":{},"body":{"controllers/ServerController.html":{}}}],["apps/server/src/server.controller.ts:7",{"_index":3626,"title":{},"body":{"controllers/ServerController.html":{}}}],["apps/server/src/server.module.ts",{"_index":3631,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/server.module.ts:86",{"_index":3672,"title":{},"body":{"modules/ServerTestModule.html":{}}}],["apps/server/src/shared/$1",{"_index":5481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/error/api",{"_index":176,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts",{"_index":766,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:10",{"_index":777,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:12",{"_index":780,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:14",{"_index":779,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:16",{"_index":778,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:19",{"_index":776,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:34",{"_index":781,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:38",{"_index":782,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/validation.error.ts",{"_index":4207,"title":{},"body":{"classes/ValidationError.html":{}}}],["apps/server/src/shared/common/error/validation.error.ts:4",{"_index":4209,"title":{},"body":{"classes/ValidationError.html":{}}}],["apps/server/src/shared/common/interceptor/constants.ts",{"_index":5526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/interceptor/duration",{"_index":1994,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/test/create",{"_index":1914,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts",{"_index":4115,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:12",{"_index":4125,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:14",{"_index":4123,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:17",{"_index":4122,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:29",{"_index":4127,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:33",{"_index":4129,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts",{"_index":3439,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:14",{"_index":3446,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:8",{"_index":3449,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts",{"_index":3454,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:11",{"_index":3457,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:14",{"_index":3460,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:17",{"_index":3459,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:20",{"_index":3458,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:3",{"_index":3456,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/pipe/parse",{"_index":3464,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["apps/server/src/shared/controller/swagger.ts",{"_index":5488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/controller/transformer/decode",{"_index":4409,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/server/src/shared/controller/transformer/string",{"_index":4434,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/server/src/shared/domain/entity/all",{"_index":5425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts",{"_index":346,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:10",{"_index":353,"title":{},"body":{"entities/BaseEntity.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:19",{"_index":384,"title":{},"body":{"entities/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:22",{"_index":388,"title":{},"body":{"entities/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:25",{"_index":387,"title":{},"body":{"entities/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:28",{"_index":390,"title":{},"body":{"entities/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:7",{"_index":351,"title":{},"body":{"entities/BaseEntity.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts",{"_index":842,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:36",{"_index":854,"title":{},"body":{"entities/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:39",{"_index":852,"title":{},"body":{"entities/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:42",{"_index":857,"title":{},"body":{"entities/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:45",{"_index":862,"title":{},"body":{"entities/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:48",{"_index":866,"title":{},"body":{"entities/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:51",{"_index":864,"title":{},"body":{"entities/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:55",{"_index":850,"title":{},"body":{"entities/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:58",{"_index":858,"title":{},"body":{"entities/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:62",{"_index":869,"title":{},"body":{"entities/Course.html":{}}}],["apps/server/src/shared/domain/entity/coursegroup.entity.ts",{"_index":982,"title":{},"body":{"entities/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{}}}],["apps/server/src/shared/domain/entity/coursegroup.entity.ts:15",{"_index":986,"title":{},"body":{"entities/CourseGroup.html":{}}}],["apps/server/src/shared/domain/entity/coursegroup.entity.ts:18",{"_index":985,"title":{},"body":{"entities/CourseGroup.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts",{"_index":1235,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:107",{"_index":2453,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:116",{"_index":2459,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:137",{"_index":2463,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:14",{"_index":2506,"title":{},"body":{"interfaces/IGridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:141",{"_index":2466,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:16",{"_index":2508,"title":{},"body":{"interfaces/IGridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:160",{"_index":1257,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:162",{"_index":1254,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:164",{"_index":1256,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:166",{"_index":1258,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:168",{"_index":1279,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:175",{"_index":1286,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:179",{"_index":1253,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:18",{"_index":2507,"title":{},"body":{"interfaces/IGridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:192",{"_index":1273,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:196",{"_index":1277,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:20",{"_index":2504,"title":{},"body":{"interfaces/IGridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:200",{"_index":1271,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:212",{"_index":1267,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:22",{"_index":2503,"title":{},"body":{"interfaces/IGridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:220",{"_index":1284,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:230",{"_index":1293,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:239",{"_index":1290,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:24",{"_index":2509,"title":{},"body":{"interfaces/IGridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:254",{"_index":1263,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:265",{"_index":1261,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:275",{"_index":1260,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:281",{"_index":1270,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:289",{"_index":1276,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:301",{"_index":1288,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:310",{"_index":1282,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:37",{"_index":2449,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:39",{"_index":2452,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:41",{"_index":2451,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:51",{"_index":2448,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:59",{"_index":2457,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:63",{"_index":2456,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:67",{"_index":2458,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:71",{"_index":2455,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:75",{"_index":2450,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:77",{"_index":2462,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:8",{"_index":2505,"title":{},"body":{"interfaces/IGridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:81",{"_index":2460,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:85",{"_index":2461,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:89",{"_index":2465,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:99",{"_index":2464,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.model.entity.ts",{"_index":1405,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.model.entity.ts:41",{"_index":1415,"title":{},"body":{"entities/DashboardGridElementModel.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.model.entity.ts:44",{"_index":1416,"title":{},"body":{"entities/DashboardGridElementModel.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.model.entity.ts:47",{"_index":1417,"title":{},"body":{"entities/DashboardGridElementModel.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.model.entity.ts:50",{"_index":1414,"title":{},"body":{"entities/DashboardGridElementModel.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.model.entity.ts:53",{"_index":1411,"title":{},"body":{"entities/DashboardGridElementModel.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.model.entity.ts:73",{"_index":1496,"title":{},"body":{"entities/DashboardModelEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.model.entity.ts:77",{"_index":1497,"title":{},"body":{"entities/DashboardModelEntity.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts",{"_index":486,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts:17",{"_index":491,"title":{},"body":{"entities/BaseFile.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts:20",{"_index":493,"title":{},"body":{"entities/BaseFile.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts:23",{"_index":490,"title":{},"body":{"entities/BaseFile.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts:32",{"_index":2175,"title":{},"body":{"entities/File.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts:35",{"_index":2174,"title":{},"body":{"entities/File.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts:38",{"_index":2176,"title":{},"body":{"entities/File.html":{}}}],["apps/server/src/shared/domain/entity/import",{"_index":2511,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{},"miscellaneous/enumerations.html":{}}}],["apps/server/src/shared/domain/entity/lesson.entity.ts",{"_index":2572,"title":{},"body":{"interfaces/ILessonProperties.html":{},"entities/Lesson.html":{}}}],["apps/server/src/shared/domain/entity/lesson.entity.ts:14",{"_index":2971,"title":{},"body":{"entities/Lesson.html":{}}}],["apps/server/src/shared/domain/entity/lesson.entity.ts:18",{"_index":2970,"title":{},"body":{"entities/Lesson.html":{}}}],["apps/server/src/shared/domain/entity/lesson.entity.ts:21",{"_index":2968,"title":{},"body":{"entities/Lesson.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts",{"_index":1047,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:104",{"_index":1049,"title":{},"body":{"entities/CourseNews.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:110",{"_index":4091,"title":{},"body":{"entities/TeamNews.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:31",{"_index":3153,"title":{},"body":{"entities/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:35",{"_index":3143,"title":{},"body":{"entities/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:39",{"_index":3145,"title":{},"body":{"entities/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:42",{"_index":3146,"title":{},"body":{"entities/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:45",{"_index":3149,"title":{},"body":{"entities/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:48",{"_index":3150,"title":{},"body":{"entities/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:51",{"_index":3151,"title":{},"body":{"entities/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:55",{"_index":3152,"title":{},"body":{"entities/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:58",{"_index":3148,"title":{},"body":{"entities/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:61",{"_index":3144,"title":{},"body":{"entities/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:64",{"_index":3154,"title":{},"body":{"entities/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:66",{"_index":3147,"title":{},"body":{"entities/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:98",{"_index":3587,"title":{},"body":{"entities/SchoolNews.html":{}}}],["apps/server/src/shared/domain/entity/role.entity.ts",{"_index":2596,"title":{},"body":{"interfaces/IRoleProperties.html":{},"entities/Role.html":{}}}],["apps/server/src/shared/domain/entity/role.entity.ts:15",{"_index":3538,"title":{},"body":{"entities/Role.html":{}}}],["apps/server/src/shared/domain/entity/role.entity.ts:19",{"_index":3539,"title":{},"body":{"entities/Role.html":{}}}],["apps/server/src/shared/domain/entity/role.entity.ts:29",{"_index":3541,"title":{},"body":{"entities/Role.html":{}}}],["apps/server/src/shared/domain/entity/school.entity.ts",{"_index":2605,"title":{},"body":{"interfaces/ISchoolProperties.html":{},"entities/School.html":{}}}],["apps/server/src/shared/domain/entity/school.entity.ts:10",{"_index":3574,"title":{},"body":{"entities/School.html":{}}}],["apps/server/src/shared/domain/entity/storageprovider.entity.ts",{"_index":2607,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{}}}],["apps/server/src/shared/domain/entity/storageprovider.entity.ts:15",{"_index":3674,"title":{},"body":{"entities/StorageProvider.html":{}}}],["apps/server/src/shared/domain/entity/storageprovider.entity.ts:18",{"_index":3673,"title":{},"body":{"entities/StorageProvider.html":{}}}],["apps/server/src/shared/domain/entity/storageprovider.entity.ts:21",{"_index":3677,"title":{},"body":{"entities/StorageProvider.html":{}}}],["apps/server/src/shared/domain/entity/storageprovider.entity.ts:24",{"_index":3675,"title":{},"body":{"entities/StorageProvider.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts",{"_index":2620,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:26",{"_index":3688,"title":{},"body":{"entities/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:29",{"_index":3686,"title":{},"body":{"entities/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:32",{"_index":3682,"title":{},"body":{"entities/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:35",{"_index":3689,"title":{},"body":{"entities/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:39",{"_index":3681,"title":{},"body":{"entities/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:42",{"_index":3687,"title":{},"body":{"entities/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:46",{"_index":3683,"title":{},"body":{"entities/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:49",{"_index":3684,"title":{},"body":{"entities/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:52",{"_index":3685,"title":{},"body":{"entities/Submission.html":{}}}],["apps/server/src/shared/domain/entity/system.entity.ts",{"_index":3729,"title":{},"body":{"entities/System.html":{}}}],["apps/server/src/shared/domain/entity/system.entity.ts:15",{"_index":3732,"title":{},"body":{"entities/System.html":{}}}],["apps/server/src/shared/domain/entity/system.entity.ts:18",{"_index":3733,"title":{},"body":{"entities/System.html":{}}}],["apps/server/src/shared/domain/entity/system.entity.ts:21",{"_index":3731,"title":{},"body":{"entities/System.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts",{"_index":2658,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:32",{"_index":4089,"title":{},"body":{"classes/TaskWithStatusVo.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:34",{"_index":4088,"title":{},"body":{"classes/TaskWithStatusVo.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:48",{"_index":3752,"title":{},"body":{"entities/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:51",{"_index":3745,"title":{},"body":{"entities/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:54",{"_index":3748,"title":{},"body":{"entities/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:57",{"_index":3753,"title":{},"body":{"entities/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:60",{"_index":3747,"title":{},"body":{"entities/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:63",{"_index":3746,"title":{},"body":{"entities/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:66",{"_index":3751,"title":{},"body":{"entities/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:69",{"_index":3754,"title":{},"body":{"entities/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:74",{"_index":3750,"title":{},"body":{"entities/Task.html":{}}}],["apps/server/src/shared/domain/entity/team.entity.ts",{"_index":2750,"title":{},"body":{"interfaces/ITeamProperties.html":{},"entities/Team.html":{}}}],["apps/server/src/shared/domain/entity/team.entity.ts:10",{"_index":4090,"title":{},"body":{"entities/Team.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts",{"_index":2752,"title":{},"body":{"interfaces/IUserProperties.html":{},"entities/User.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts:19",{"_index":4157,"title":{},"body":{"entities/User.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts:22",{"_index":4158,"title":{},"body":{"entities/User.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts:25",{"_index":4159,"title":{},"body":{"entities/User.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts:29",{"_index":4161,"title":{},"body":{"entities/User.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts:33",{"_index":4163,"title":{},"body":{"entities/User.html":{}}}],["apps/server/src/shared/domain/interface/find",{"_index":2498,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/interface/learnroom.ts",{"_index":2569,"title":{},"body":{"interfaces/ILearnroom.html":{}}}],["apps/server/src/shared/domain/interface/user.ts",{"_index":2480,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/service/permission.service.ts",{"_index":3476,"title":{},"body":{"injectables/PermissionService.html":{}}}],["apps/server/src/shared/domain/service/permission.service.ts:14",{"_index":3480,"title":{},"body":{"injectables/PermissionService.html":{}}}],["apps/server/src/shared/domain/service/permission.service.ts:23",{"_index":3487,"title":{},"body":{"injectables/PermissionService.html":{}}}],["apps/server/src/shared/domain/types/counted.ts",{"_index":5363,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/entity",{"_index":5367,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/learnroom.types.ts",{"_index":4392,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/news.types.ts",{"_index":2468,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/value",{"_index":5369,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/infra/console/console",{"_index":798,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{}}}],["apps/server/src/shared/infra/database/management/database",{"_index":1721,"title":{},"body":{"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{}}}],["apps/server/src/shared/infra/database/mongo",{"_index":3083,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/infra/encryption/encryption.module.ts",{"_index":2052,"title":{},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{}}}],["apps/server/src/shared/infra/encryption/encryption.module.ts:10",{"_index":2056,"title":{},"body":{"modules/EncryptionModule.html":{}}}],["apps/server/src/shared/infra/encryption/encryption.service.ts",{"_index":3715,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["apps/server/src/shared/infra/encryption/encryption.service.ts:13",{"_index":3719,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["apps/server/src/shared/infra/encryption/encryption.service.ts:6",{"_index":3717,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["apps/server/src/shared/infra/encryption/encryption.service.ts:9",{"_index":3721,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["apps/server/src/shared/infra/feathers/feathers",{"_index":2139,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/infra/feathers/feathers.module.ts",{"_index":2127,"title":{},"body":{"modules/FeathersModule.html":{}}}],["apps/server/src/shared/infra/file",{"_index":2203,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/infra/filestorage/filestorage.adapter.ts",{"_index":2178,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"miscellaneous/functions.html":{}}}],["apps/server/src/shared/infra/filestorage/filestorage.adapter.ts:21",{"_index":2181,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["apps/server/src/shared/infra/mail/mail.interface.ts",{"_index":236,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["apps/server/src/shared/infra/mail/mail.module.ts",{"_index":3023,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/infra/mail/mail.module.ts:28",{"_index":3025,"title":{},"body":{"modules/MailModule.html":{}}}],["apps/server/src/shared/infra/mail/mail.service.ts",{"_index":3044,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["apps/server/src/shared/infra/mail/mail.service.ts:12",{"_index":3049,"title":{},"body":{"injectables/MailService.html":{}}}],["apps/server/src/shared/infra/mail/mail.service.ts:18",{"_index":3051,"title":{},"body":{"injectables/MailService.html":{}}}],["apps/server/src/shared/repo/base.repo.ts",{"_index":525,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:14",{"_index":547,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:19",{"_index":543,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:27",{"_index":545,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:36",{"_index":549,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:40",{"_index":555,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:44",{"_index":551,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:48",{"_index":553,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:53",{"_index":539,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:6",{"_index":537,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:9",{"_index":541,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/course/course.repo.ts",{"_index":1101,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["apps/server/src/shared/repo/course/course.repo.ts:21",{"_index":1156,"title":{},"body":{"classes/CourseScope.html":{}}}],["apps/server/src/shared/repo/course/course.repo.ts:32",{"_index":1153,"title":{},"body":{"classes/CourseScope.html":{}}}],["apps/server/src/shared/repo/course/course.repo.ts:42",{"_index":1155,"title":{},"body":{"classes/CourseScope.html":{}}}],["apps/server/src/shared/repo/course/course.repo.ts:49",{"_index":1103,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/shared/repo/course/course.repo.ts:52",{"_index":1106,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/shared/repo/course/course.repo.ts:77",{"_index":1108,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/shared/repo/course/course.repo.ts:86",{"_index":1110,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/shared/repo/course/course.repo.ts:9",{"_index":1154,"title":{},"body":{"classes/CourseScope.html":{}}}],["apps/server/src/shared/repo/coursegroup/coursegroup.repo.ts",{"_index":995,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["apps/server/src/shared/repo/coursegroup/coursegroup.repo.ts:10",{"_index":999,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["apps/server/src/shared/repo/coursegroup/coursegroup.repo.ts:7",{"_index":997,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts",{"_index":1499,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:116",{"_index":1522,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:132",{"_index":1517,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:16",{"_index":1510,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:19",{"_index":1528,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:24",{"_index":1524,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:34",{"_index":1519,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:46",{"_index":1530,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:55",{"_index":1526,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:68",{"_index":1515,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:79",{"_index":1532,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:99",{"_index":1512,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.repo.ts",{"_index":1590,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.repo.ts:14",{"_index":2494,"title":{},"body":{"interfaces/IDashboardRepo.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.repo.ts:15",{"_index":2493,"title":{},"body":{"interfaces/IDashboardRepo.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.repo.ts:16",{"_index":2495,"title":{},"body":{"interfaces/IDashboardRepo.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.repo.ts:20",{"_index":1594,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.repo.ts:24",{"_index":1599,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.repo.ts:30",{"_index":1600,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.repo.ts:36",{"_index":1596,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.repo.ts:42",{"_index":1598,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/shared/repo/files/files.repo.ts",{"_index":2293,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["apps/server/src/shared/repo/files/files.repo.ts:13",{"_index":2311,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["apps/server/src/shared/repo/files/files.repo.ts:15",{"_index":2300,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["apps/server/src/shared/repo/files/files.repo.ts:23",{"_index":2298,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["apps/server/src/shared/repo/files/files.repo.ts:8",{"_index":2297,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["apps/server/src/shared/repo/lesson/lesson",{"_index":2989,"title":{},"body":{"classes/LessonScope.html":{}}}],["apps/server/src/shared/repo/lesson/lesson.repo.ts",{"_index":2979,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["apps/server/src/shared/repo/lesson/lesson.repo.ts:12",{"_index":2982,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["apps/server/src/shared/repo/lesson/lesson.repo.ts:9",{"_index":2980,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["apps/server/src/shared/repo/news/news",{"_index":3346,"title":{},"body":{"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{}}}],["apps/server/src/shared/repo/news/news.repo.ts",{"_index":3293,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/shared/repo/news/news.repo.ts:11",{"_index":3305,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/shared/repo/news/news.repo.ts:19",{"_index":3298,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/shared/repo/news/news.repo.ts:32",{"_index":3304,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/shared/repo/news/news.repo.ts:39",{"_index":3300,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/shared/repo/query/empty",{"_index":5516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/repo/role/role.repo.ts",{"_index":3543,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/shared/repo/role/role.repo.ts:11",{"_index":3551,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/shared/repo/role/role.repo.ts:16",{"_index":3549,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/shared/repo/role/role.repo.ts:7",{"_index":3547,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/shared/repo/scope.ts",{"_index":3588,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/repo/scope.ts:11",{"_index":3590,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/scope.ts:17",{"_index":3595,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/scope.ts:25",{"_index":3593,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/scope.ts:9",{"_index":3592,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/storageprovider/storageprovider.repo.ts",{"_index":3678,"title":{},"body":{"injectables/StorageProviderRepo.html":{}}}],["apps/server/src/shared/repo/storageprovider/storageprovider.repo.ts:7",{"_index":3679,"title":{},"body":{"injectables/StorageProviderRepo.html":{}}}],["apps/server/src/shared/repo/submission/submission.repo.ts",{"_index":3701,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/shared/repo/submission/submission.repo.ts:10",{"_index":3704,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/shared/repo/submission/submission.repo.ts:13",{"_index":3708,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/shared/repo/submission/submission.repo.ts:21",{"_index":3710,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/shared/repo/submission/submission.repo.ts:26",{"_index":3706,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/shared/repo/task/task",{"_index":3991,"title":{},"body":{"classes/TaskScope.html":{}}}],["apps/server/src/shared/repo/task/task.repo.ts",{"_index":3892,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/shared/repo/task/task.repo.ts:10",{"_index":3897,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/shared/repo/task/task.repo.ts:13",{"_index":3904,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/shared/repo/task/task.repo.ts:149",{"_index":3906,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/shared/repo/task/task.repo.ts:175",{"_index":3908,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/shared/repo/task/task.repo.ts:91",{"_index":3899,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/shared/repo/types/encryptedstring.type.ts",{"_index":2015,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["apps/server/src/shared/repo/types/encryptedstring.type.ts:10",{"_index":2024,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["apps/server/src/shared/repo/types/encryptedstring.type.ts:21",{"_index":2029,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["apps/server/src/shared/repo/types/encryptedstring.type.ts:36",{"_index":2031,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["apps/server/src/shared/repo/user/user.repo.ts",{"_index":4199,"title":{},"body":{"injectables/UserRepo.html":{}}}],["apps/server/src/shared/repo/user/user.repo.ts:20",{"_index":4204,"title":{},"body":{"injectables/UserRepo.html":{}}}],["apps/server/src/shared/repo/user/user.repo.ts:6",{"_index":4201,"title":{},"body":{"injectables/UserRepo.html":{}}}],["apps/server/src/shared/repo/user/user.repo.ts:9",{"_index":4202,"title":{},"body":{"injectables/UserRepo.html":{}}}],["apps/server/src/shared/testing/cleanup",{"_index":5442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts",{"_index":392,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:109",{"_index":455,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:119",{"_index":450,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:123",{"_index":440,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:135",{"_index":452,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:14",{"_index":411,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:30",{"_index":444,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:45",{"_index":430,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:58",{"_index":436,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:71",{"_index":434,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:85",{"_index":415,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:97",{"_index":448,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/course.factory.ts",{"_index":952,"title":{},"body":{"classes/CourseFactory.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/course.factory.ts:11",{"_index":955,"title":{},"body":{"classes/CourseFactory.html":{}}}],["apps/server/src/shared/testing/factory/course.factory.ts:18",{"_index":956,"title":{},"body":{"classes/CourseFactory.html":{}}}],["apps/server/src/shared/testing/factory/coursegroup.factory.ts",{"_index":5505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/file.factory.ts",{"_index":5512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/lesson.factory.ts",{"_index":2973,"title":{},"body":{"classes/LessonFactory.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/news.factory.ts",{"_index":5507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/role.factory.ts",{"_index":5528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/school.factory.ts",{"_index":5530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/storageprovider.factory.ts",{"_index":5535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/submission.factory.ts",{"_index":3691,"title":{},"body":{"classes/SubmissionFactory.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/submission.factory.ts:8",{"_index":3692,"title":{},"body":{"classes/SubmissionFactory.html":{}}}],["apps/server/src/shared/testing/factory/task.factory.ts",{"_index":3846,"title":{},"body":{"classes/TaskFactory.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/task.factory.ts:11",{"_index":3847,"title":{},"body":{"classes/TaskFactory.html":{}}}],["apps/server/src/shared/testing/factory/task.factory.ts:16",{"_index":3849,"title":{},"body":{"classes/TaskFactory.html":{}}}],["apps/server/src/shared/testing/factory/team.factory.ts",{"_index":5538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/user.factory.ts",{"_index":5540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/map",{"_index":5517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/setup",{"_index":5532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appthis",{"_index":4462,"title":{},"body":{"index.html":{}}}],["architecture",{"_index":4451,"title":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["architecture/organizing",{"_index":6036,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["archive",{"_index":5237,"title":{},"body":{"license.html":{}}}],["archived",{"_index":1035,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["archivegroup(groupname",{"_index":95,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["archives",{"_index":6087,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["areas",{"_index":6212,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["aren't",{"_index":6100,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arg",{"_index":4244,"title":{},"body":{"dependencies.html":{}}}],["args",{"_index":3610,"title":{},"body":{"classes/ServerConsole.html":{},"classes/TestBootstrapConsole.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["argument",{"_index":52,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["argumentshost",{"_index":2342,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["arise",{"_index":5676,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["arising",{"_index":5199,"title":{},"body":{"license.html":{}}}],["around",{"_index":5255,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arrange",{"_index":5107,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["arrangement",{"_index":5118,"title":{},"body":{"license.html":{}}}],["array",{"_index":658,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/IRoleProperties.html":{},"entities/Role.html":{}}}],["array.from(modelentity.gridelements).foreach((el",{"_index":1581,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["array.from(modelentity.gridelements).map(async",{"_index":1548,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["array.isarray(collectionnamefilter",{"_index":1856,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["array.isarray(constraint",{"_index":232,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["array.isarray(permission",{"_index":3819,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["array.isarray(props.classnames",{"_index":2562,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["array.isarray(props.rolenames",{"_index":2559,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["array.isarray(user.permissions",{"_index":2104,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["article",{"_index":4791,"title":{},"body":{"license.html":{}}}],["asc",{"_index":1906,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/enumerations.html":{}}}],["aspect",{"_index":5837,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aspects",{"_index":5690,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["assert",{"_index":4601,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["assertions",{"_index":6312,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["assets",{"_index":5059,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["assignemnt",{"_index":2839,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{}}}],["assigning",{"_index":6009,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["assignment",{"_index":63,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["assignment,@typescript",{"_index":59,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["associated",{"_index":4738,"title":{},"body":{"license.html":{}}}],["assume",{"_index":5188,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumes",{"_index":6049,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumption",{"_index":5218,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":5005,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["async",{"_index":74,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"controllers/CourseController.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"injectables/StorageProviderRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"controllers/UserController.html":{},"injectables/UserRepo.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["asynchronous",{"_index":6228,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["asynclocalstorage",{"_index":5931,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["atomic",{"_index":5809,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["attach",{"_index":5224,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["attachment",{"_index":244,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["attachments",{"_index":247,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["attempt",{"_index":5016,"title":{},"body":{"license.html":{}}}],["attends",{"_index":2838,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{}}}],["attention",{"_index":2710,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["attributions",{"_index":4989,"title":{},"body":{"license.html":{}}}],["aud",{"_index":2893,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["audience",{"_index":2901,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["audit",{"_index":5923,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["auth",{"_index":144,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"todo.html":{}}}],["auth.guard.ts",{"_index":2876,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.provider",{"_index":299,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{}}}],["auth.provider.ts",{"_index":2082,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["auth.provider.ts:13",{"_index":2090,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:16",{"_index":2098,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:26",{"_index":2100,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:38",{"_index":2094,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:55",{"_index":2092,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:60",{"_index":2096,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["authconfig",{"_index":2884,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["authconfig.jwtoptions",{"_index":2906,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authconfig.secret",{"_index":2905,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authenticate",{"_index":932,"title":{},"body":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{},"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"controllers/RoomsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["authenticate('jwt",{"_index":940,"title":{},"body":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{},"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"controllers/RoomsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}}}],["authenticated",{"_index":2487,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authenticates",{"_index":5936,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authentication",{"_index":2853,"title":{},"body":{"modules/ImportUserModule.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authguard",{"_index":2877,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":2878,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":258,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["author",{"_index":4988,"title":{},"body":{"license.html":{}}}],["authorization",{"_index":4939,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorization.service",{"_index":297,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["authorizationmodule",{"_index":286,"title":{"modules/AuthorizationModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/ImportUserModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["authorizationservice",{"_index":292,"title":{"injectables/AuthorizationService.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/NewsUc.html":{},"injectables/TaskUC.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorized",{"_index":4979,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorizes",{"_index":5083,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authorizing",{"_index":5122,"title":{},"body":{"license.html":{}}}],["authors",{"_index":4995,"title":{},"body":{"license.html":{}}}],["authtoken",{"_index":80,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["auto",{"_index":2534,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserFilterQuery.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application.html":{}}}],["automated",{"_index":6172,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["automatic",{"_index":5050,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":4525,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["availability",{"_index":6180,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["available",{"_index":1851,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICollectionFilePath.html":{},"license.html":{},"modules.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["availabledate",{"_index":640,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/variables.html":{}}}],["availableon",{"_index":3951,"title":{},"body":{"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{}}}],["avoid",{"_index":6184,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["avoiding",{"_index":5661,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["await",{"_index":129,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"controllers/CourseController.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"injectables/StorageProviderRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"controllers/UserController.html":{},"injectables/UserRepo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["awaited",{"_index":6230,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["away",{"_index":4576,"title":{},"body":{"license.html":{}}}],["aws",{"_index":2184,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"dependencies.html":{}}}],["axios",{"_index":4249,"title":{},"body":{"dependencies.html":{}}}],["b",{"_index":1313,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IRoleProperties.html":{},"entities/Role.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["b.getmetadata().title",{"_index":1317,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["back",{"_index":451,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["background",{"_index":5706,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["backuop",{"_index":1887,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["backup",{"_index":1806,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["backup/setup/news.json",{"_index":3291,"title":{},"body":{"modules/NewsModule.html":{}}}],["bad_request",{"_index":6110,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["badrequestexception",{"_index":1295,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"injectables/ParseObjectIdPipe.html":{}}}],["badrequestexception('dashboard",{"_index":1343,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["badrequestexception('invalid",{"_index":3471,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["badrequestexception('this",{"_index":1328,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["base",{"_index":767,"title":{},"body":{"classes/BusinessError.html":{},"injectables/DatabaseManagementUc.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICollectionFilePath.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["base.entity",{"_index":495,"title":{},"body":{"entities/BaseFile.html":{},"entities/Course.html":{},"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"entities/Lesson.html":{},"entities/News.html":{},"entities/Role.html":{},"entities/School.html":{},"entities/SchoolNews.html":{},"entities/StorageProvider.html":{},"entities/Submission.html":{},"entities/System.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"entities/User.html":{},"classes/UserMatch.html":{}}}],["base.factory",{"_index":969,"title":{},"body":{"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["base.repo",{"_index":2312,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["base64",{"_index":4373,"title":{},"body":{"dependencies.html":{}}}],["base64content",{"_index":239,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["based",{"_index":394,"title":{},"body":{"classes/BaseFactory.html":{},"injectables/DatabaseManagementUc.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["basedir",{"_index":1782,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["baseentity",{"_index":345,"title":{"entities/BaseEntity.html":{}},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/ITeamProperties.html":{},"entities/School.html":{},"entities/Team.html":{}}}],["baseentitywithtimestamps",{"_index":360,"title":{"entities/BaseEntityWithTimestamps.html":{}},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"entities/BaseFile.html":{},"entities/Course.html":{},"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"entities/Lesson.html":{},"entities/News.html":{},"entities/Role.html":{},"entities/SchoolNews.html":{},"entities/StorageProvider.html":{},"entities/Submission.html":{},"entities/System.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{},"entities/User.html":{},"classes/UserMatch.html":{}}}],["basefactory",{"_index":391,"title":{"classes/BaseFactory.html":{}},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefactory.define",{"_index":5536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(coursegroup",{"_index":5506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(coursenews",{"_index":5508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(directory",{"_index":5513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(file",{"_index":5515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(role",{"_index":5529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(school",{"_index":5531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(schoolnews",{"_index":5509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(team",{"_index":5539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(teamnews",{"_index":5510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(user",{"_index":5541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory:109",{"_index":966,"title":{},"body":{"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefactory:119",{"_index":964,"title":{},"body":{"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefactory:123",{"_index":961,"title":{},"body":{"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefactory:135",{"_index":965,"title":{},"body":{"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefactory:14",{"_index":954,"title":{},"body":{"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefactory:30",{"_index":962,"title":{},"body":{"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefactory:45",{"_index":958,"title":{},"body":{"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefactory:58",{"_index":960,"title":{},"body":{"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefactory:71",{"_index":959,"title":{},"body":{"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefactory:85",{"_index":957,"title":{},"body":{"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefactory:97",{"_index":963,"title":{},"body":{"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefile",{"_index":485,"title":{"entities/BaseFile.html":{}},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"injectables/FilesRepo.html":{},"interfaces/IFileProperties.html":{},"miscellaneous/variables.html":{}}}],["basepath",{"_index":1774,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["baserepo",{"_index":524,"title":{"injectables/BaseRepo.html":{}},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/FilesRepo.html":{},"interfaces/IDashboardRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:14",{"_index":2306,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:19",{"_index":2304,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:27",{"_index":2305,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:36",{"_index":2307,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:40",{"_index":2310,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:44",{"_index":2308,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:48",{"_index":2309,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:53",{"_index":2302,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:9",{"_index":2303,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["basic",{"_index":4750,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["basically",{"_index":5883,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batch",{"_index":5882,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batches",{"_index":5889,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bbb",{"_index":4251,"title":{},"body":{"dependencies.html":{}}}],["bcc",{"_index":255,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["bcryptjs",{"_index":4253,"title":{},"body":{"dependencies.html":{}}}],["bearer",{"_index":5499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bearerformat",{"_index":5500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["become",{"_index":580,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{},"license.html":{}}}],["becomes",{"_index":4624,"title":{},"body":{"license.html":{}}}],["before",{"_index":1093,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"injectables/PermissionService.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["beforeall",{"_index":6278,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["beforeall(async",{"_index":6264,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["beforehand",{"_index":5587,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["beginning",{"_index":4511,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["behalf",{"_index":4770,"title":{},"body":{"license.html":{}}}],["behavior",{"_index":6320,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["behaviour",{"_index":829,"title":{},"body":{"modules/CoreModule.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["behind",{"_index":4119,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["being",{"_index":4902,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["believe",{"_index":5116,"title":{},"body":{"license.html":{}}}],["bellow",{"_index":5686,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["belongs",{"_index":653,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["below",{"_index":4776,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["benefit",{"_index":4607,"title":{},"body":{"license.html":{}}}],["benefits",{"_index":5869,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["beside",{"_index":5365,"title":{},"body":{"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["best",{"_index":5221,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["better",{"_index":3103,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["between",{"_index":4747,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["beyond",{"_index":4852,"title":{},"body":{"license.html":{}}}],["bit",{"_index":5893,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["blackbox",{"_index":6186,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["blocks",{"_index":6194,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["board",{"_index":567,"title":{"interfaces/Board.html":{}},"body":{"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{}}}],["board.displaycolor",{"_index":696,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["board.elements.map((element",{"_index":669,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["board.roomid",{"_index":694,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["board.title",{"_index":695,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardelement",{"_index":572,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{},"miscellaneous/typealiases.html":{}}}],["boardelementresponse",{"_index":617,"title":{"classes/BoardElementResponse.html":{}},"body":{"classes/BoardElementResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{}}}],["boardmapper",{"_index":660,"title":{"injectables/BoardMapper.html":{}},"body":{"injectables/BoardMapper.html":{},"modules/LearnroomModule.html":{},"controllers/RoomsController.html":{},"overview.html":{}}}],["boardresponse",{"_index":647,"title":{"classes/BoardResponse.html":{}},"body":{"classes/BoardElementResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"controllers/RoomsController.html":{}}}],["boardtask",{"_index":670,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardtask.availabledate",{"_index":686,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardtask.course",{"_index":682,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardtask.createdat",{"_index":679,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardtask.duedate",{"_index":688,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardtask.getdescriptions",{"_index":673,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardtask.id",{"_index":677,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardtask.name",{"_index":678,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardtask.updatedat",{"_index":680,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardtaskdesc",{"_index":672,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardtaskdesc.color",{"_index":690,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardtaskdesc.description",{"_index":692,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardtaskresponse",{"_index":621,"title":{"classes/BoardTaskResponse.html":{}},"body":{"classes/BoardElementResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{}}}],["boardtaskstatus",{"_index":674,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardtaskstatusmapper",{"_index":667,"title":{"classes/BoardTaskStatusMapper.html":{}},"body":{"injectables/BoardMapper.html":{},"classes/BoardTaskStatusMapper.html":{}}}],["boardtaskstatusmapper.maptoresponse(status",{"_index":675,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardtaskstatusresponse",{"_index":632,"title":{"classes/BoardTaskStatusResponse.html":{}},"body":{"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{}}}],["boardtaskstatusresponse(status",{"_index":723,"title":{},"body":{"classes/BoardTaskStatusMapper.html":{}}}],["bob",{"_index":6086,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["body",{"_index":127,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"controllers/DashboardController.html":{},"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bom",{"_index":4364,"title":{},"body":{"dependencies.html":{}}}],["boolean",{"_index":492,"title":{},"body":{"entities/BaseFile.html":{},"interfaces/Board.html":{},"classes/BoardTaskStatusResponse.html":{},"entities/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"entities/Directory.html":{},"entities/File.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IFileProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/ImportUser.html":{},"classes/ImportUserFilterQuery.html":{},"entities/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/RoomsUc.html":{},"entities/Submission.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskStatusResponse.html":{},"classes/TaskWithStatusVo.html":{},"classes/UserMatch.html":{},"miscellaneous/functions.html":{}}}],["boolean.transformer.ts",{"_index":4406,"title":{},"body":{"miscellaneous/functions.html":{}}}],["boolish",{"_index":4435,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":4110,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["bootstrap.boot([process.argv0",{"_index":4114,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["bootstrapconsole",{"_index":4108,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["bootstraps",{"_index":6262,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["both",{"_index":4429,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["box",{"_index":6256,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["branch",{"_index":4501,"title":{},"body":{"index.html":{}}}],["branches",{"_index":5469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["breathing",{"_index":6081,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["brings",{"_index":5867,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["browse",{"_index":5247,"title":{},"body":{"modules.html":{},"additional-documentation/nestjs-application.html":{}}}],["browser",{"_index":5245,"title":{},"body":{"modules.html":{}}}],["bson",{"_index":761,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"dependencies.html":{}}}],["bson.ejson.deserialize(bsondocuments",{"_index":765,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["bson.ejson.serialize(documents",{"_index":763,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["bson/ejson",{"_index":757,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["bsonconverter",{"_index":742,"title":{"injectables/BsonConverter.html":{}},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{},"overview.html":{}}}],["bsondocuments",{"_index":755,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["btw",{"_index":379,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bubble",{"_index":5907,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bucket",{"_index":501,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"interfaces/IFileProperties.html":{},"miscellaneous/variables.html":{}}}],["bufferencoding",{"_index":2252,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["buffers",{"_index":5763,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["build",{"_index":400,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/GlobalErrorFilter.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["build(params",{"_index":428,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["buildboard",{"_index":3566,"title":{},"body":{"injectables/RoomsUc.html":{}}}],["buildboard(room",{"_index":603,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["buildlist",{"_index":401,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["buildlist(number",{"_index":433,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["builds",{"_index":5589,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["buildwithid",{"_index":402,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["buildwithid(params",{"_index":435,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["built",{"_index":421,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["bulk",{"_index":5884,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bundesland=x",{"_index":5794,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bundle",{"_index":5261,"title":{},"body":{"todo.html":{}}}],["business",{"_index":768,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["business.error",{"_index":203,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror",{"_index":178,"title":{"classes/BusinessError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"classes/ValidationError.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["businesserror:10",{"_index":193,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:12",{"_index":197,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:14",{"_index":196,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:16",{"_index":195,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:19",{"_index":194,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:34",{"_index":198,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:38",{"_index":200,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businessexception",{"_index":6160,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["byavailable",{"_index":3992,"title":{},"body":{"classes/TaskScope.html":{}}}],["byavailable(availabledate",{"_index":4004,"title":{},"body":{"classes/TaskScope.html":{}}}],["bycourseids",{"_index":2991,"title":{},"body":{"classes/LessonScope.html":{},"classes/TaskScope.html":{}}}],["bycourseids(courseids",{"_index":2993,"title":{},"body":{"classes/LessonScope.html":{},"classes/TaskScope.html":{}}}],["bycreatorid",{"_index":3993,"title":{},"body":{"classes/TaskScope.html":{}}}],["bycreatorid(creatorid",{"_index":4007,"title":{},"body":{"classes/TaskScope.html":{}}}],["bydraft",{"_index":3994,"title":{},"body":{"classes/TaskScope.html":{}}}],["bydraft(isdraft",{"_index":4009,"title":{},"body":{"classes/TaskScope.html":{}}}],["byfinished",{"_index":3995,"title":{},"body":{"classes/TaskScope.html":{}}}],["byfinished(userid",{"_index":4011,"title":{},"body":{"classes/TaskScope.html":{}}}],["byhidden",{"_index":2992,"title":{},"body":{"classes/LessonScope.html":{}}}],["byhidden(ishidden",{"_index":2995,"title":{},"body":{"classes/LessonScope.html":{}}}],["bylessonids",{"_index":3996,"title":{},"body":{"classes/TaskScope.html":{}}}],["bylessonids(lessonids",{"_index":4013,"title":{},"body":{"classes/TaskScope.html":{}}}],["byonlycreatorid",{"_index":3997,"title":{},"body":{"classes/TaskScope.html":{}}}],["byonlycreatorid(teacherid",{"_index":4015,"title":{},"body":{"classes/TaskScope.html":{}}}],["bypassdocumentvalidation",{"_index":1758,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["bytargets",{"_index":3347,"title":{},"body":{"classes/NewsScope.html":{}}}],["bytargets(targets",{"_index":3349,"title":{},"body":{"classes/NewsScope.html":{}}}],["byunpublished",{"_index":3348,"title":{},"body":{"classes/NewsScope.html":{}}}],["byunpublished(unpublished",{"_index":3351,"title":{},"body":{"classes/NewsScope.html":{}}}],["byuseridquery",{"_index":3702,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["byuseridquery(userid",{"_index":3705,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["c",{"_index":1675,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/Options.html":{},"entities/Role.html":{},"injectables/TaskAuthorizationService.html":{},"license.html":{}}}],["c.id",{"_index":3800,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{}}}],["c.isfinished",{"_index":4079,"title":{},"body":{"injectables/TaskUC.html":{}}}],["c.isfinished()).map((c",{"_index":4067,"title":{},"body":{"injectables/TaskUC.html":{}}}],["cache",{"_index":3544,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["caches",{"_index":5761,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["caching",{"_index":6375,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["calendar",{"_index":5943,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["call",{"_index":423,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LessonFactory.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["callback",{"_index":3125,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["called",{"_index":419,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["caller",{"_index":5851,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["callhandler",{"_index":2001,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["calling",{"_index":2382,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"injectables/PermissionService.html":{},"miscellaneous/variables.html":{}}}],["calls",{"_index":4489,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["camelcase",{"_index":6008,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["can't",{"_index":5745,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["canactivate(context",{"_index":6326,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["capabilities",{"_index":5594,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["capture",{"_index":5830,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["care",{"_index":5433,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["careful",{"_index":5898,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["carefully",{"_index":6136,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cares",{"_index":6165,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["carry",{"_index":4828,"title":{},"body":{"license.html":{}}}],["case",{"_index":2077,"title":{},"body":{"classes/ErrorResponse.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cases",{"_index":3854,"title":{},"body":{"classes/TaskFactory.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["catch",{"_index":1985,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"classes/GlobalErrorFilter.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["catch(error",{"_index":2340,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["catched",{"_index":5909,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["catcherror",{"_index":20,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/TimeoutInterceptor.html":{}}}],["catcherror((e",{"_index":147,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["catcherror((err",{"_index":4136,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catches",{"_index":5912,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["categories",{"_index":5684,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["category",{"_index":5711,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cause",{"_index":4856,"title":{},"body":{"license.html":{}}}],["caution",{"_index":3009,"title":{},"body":{"injectables/Logger.html":{}}}],["cc",{"_index":254,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["cease",{"_index":5020,"title":{},"body":{"license.html":{}}}],["ceating",{"_index":2469,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["certain",{"_index":4976,"title":{},"body":{"license.html":{}}}],["cessation",{"_index":5030,"title":{},"body":{"license.html":{}}}],["chains",{"_index":5295,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["chalk",{"_index":4257,"title":{},"body":{"dependencies.html":{}}}],["chance",{"_index":5879,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["change",{"_index":4579,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["changed",{"_index":2272,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"injectables/Logger.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["changes",{"_index":4543,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["changing",{"_index":4564,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["channel",{"_index":5940,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["characteristics",{"_index":5947,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["characterized",{"_index":4951,"title":{},"body":{"license.html":{}}}],["characters",{"_index":2226,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"miscellaneous/functions.html":{}}}],["charge",{"_index":4588,"title":{},"body":{"license.html":{}}}],["chat",{"_index":171,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chat.module.ts",{"_index":3530,"title":{},"body":{"modules/RocketChatModule.html":{}}}],["chat.module.ts:6",{"_index":3531,"title":{},"body":{"modules/RocketChatModule.html":{}}}],["chat.service",{"_index":3534,"title":{},"body":{"modules/RocketChatModule.html":{}}}],["chat.service.ts",{"_index":7,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"miscellaneous/typealiases.html":{}}}],["chat.service.ts:16",{"_index":3528,"title":{},"body":{"classes/RocketChatError.html":{}}}],["chat.service.ts:18",{"_index":3527,"title":{},"body":{"classes/RocketChatError.html":{}}}],["chat.service.ts:21",{"_index":3526,"title":{},"body":{"classes/RocketChatError.html":{}}}],["chatadapter",{"_index":5772,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["check",{"_index":371,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/TaskUC.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checked",{"_index":5840,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["checkentitypermissions",{"_index":302,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkentitypermissions(userid",{"_index":307,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["checking",{"_index":2416,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checklist",{"_index":4524,"title":{},"body":{"index.html":{}}}],["checkout",{"_index":4533,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["checks",{"_index":5601,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkshorttitle",{"_index":1331,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["checkusernotexistbyemail(email",{"_index":6126,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["child",{"_index":4475,"title":{},"body":{"index.html":{}}}],["choose",{"_index":5172,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["choosing",{"_index":5176,"title":{},"body":{"license.html":{}}}],["choreography",{"_index":5848,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chunk",{"_index":4344,"title":{},"body":{"dependencies.html":{}}}],["circumstances",{"_index":4774,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":4783,"title":{},"body":{"license.html":{}}}],["civil",{"_index":5217,"title":{},"body":{"license.html":{}}}],["claim",{"_index":5073,"title":{},"body":{"license.html":{}}}],["claims",{"_index":5085,"title":{},"body":{"license.html":{}}}],["class",{"_index":31,"title":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseFactory.html":{},"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"classes/BusinessError.html":{},"classes/CourseFactory.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{},"classes/DatabaseManagementConsole.html":{},"classes/DeleteFilesConsole.html":{},"classes/EncryptedStringType.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/LessonFactory.html":{},"classes/LessonScope.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/PatchGroupParams.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/SubmissionFactory.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"classes/TaskWithStatusVo.html":{},"classes/TestBootstrapConsole.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"entities/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"modules/ImportUserModule.html":{},"classes/ImportUserResponse.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"injectables/PermissionService.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"entities/System.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["classes",{"_index":175,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseFactory.html":{},"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"classes/BusinessError.html":{},"classes/CourseFactory.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{},"classes/DatabaseManagementConsole.html":{},"classes/DeleteFilesConsole.html":{},"classes/EncryptedStringType.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/LessonFactory.html":{},"classes/LessonScope.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/PatchGroupParams.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/SubmissionFactory.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"classes/TaskWithStatusVo.html":{},"classes/TestBootstrapConsole.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["classname",{"_index":2123,"title":{},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{}}}],["classnames",{"_index":2513,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/UserMatch.html":{}}}],["classserializerinterceptor",{"_index":2869,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["clean",{"_index":5734,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cleanup",{"_index":887,"title":{},"body":{"entities/Course.html":{},"classes/DeleteFilesConsole.html":{},"interfaces/ICourseProperties.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cleanupcollections",{"_index":5376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cleanupthreshold",{"_index":2301,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["clear",{"_index":1884,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"license.html":{}}}],["clearcollection",{"_index":1725,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["clearcollection(collectionname",{"_index":1735,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["clearly",{"_index":6141,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cli",{"_index":5628,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["client",{"_index":771,"title":{},"body":{"classes/BusinessError.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["clients",{"_index":5787,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["clienturl",{"_index":3076,"title":{},"body":{"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["clone",{"_index":403,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"index.html":{}}}],["clone(this",{"_index":438,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["clone>(this",{"_index":478,"title":{},"body":{"classes/BaseFactory.html":{}}}],["close",{"_index":3122,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["closed",{"_index":3928,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["closeddraftsforcreator",{"_index":3933,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["closeddraftsforcreator.addquery(parentsopen.query",{"_index":3934,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["closeddraftsforcreator.bycreatorid(parentids.creatorid",{"_index":3936,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["closeddraftsforcreator.byfinished(parentids.creatorid",{"_index":3935,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["closedforopencoursesandlessons",{"_index":3921,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["closedforopencoursesandlessons.addquery(parentsopen.query",{"_index":3922,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["closedforopencoursesandlessons.bydraft(false",{"_index":3923,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["closedforopencoursesandlessons.byfinished(parentids.creatorid",{"_index":3924,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["closedwithoutparentforcreator",{"_index":3930,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["closedwithoutparentforcreator.byfinished(parentids.creatorid",{"_index":3931,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["closedwithoutparentforcreator.byonlycreatorid(parentids.creatorid",{"_index":3932,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["closely",{"_index":5214,"title":{},"body":{"license.html":{}}}],["closing",{"_index":6289,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["cloud",{"_index":4438,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cloud.github.io/schulcloud",{"_index":5318,"title":{},"body":{"todo.html":{}}}],["cloud.org",{"_index":4507,"title":{},"body":{"index.html":{}}}],["cloud/commons",{"_index":2035,"title":{},"body":{"classes/EncryptedStringType.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"dependencies.html":{}}}],["cloud/mongoose",{"_index":4316,"title":{},"body":{"dependencies.html":{}}}],["cloud/node",{"_index":4302,"title":{},"body":{"dependencies.html":{}}}],["cloud/schulcloud",{"_index":5288,"title":{},"body":{"todo.html":{}}}],["cluster_authmodule",{"_index":261,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":262,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":263,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule",{"_index":287,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_exports",{"_index":289,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_imports",{"_index":290,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_providers",{"_index":288,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_consolewritermodule",{"_index":794,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"overview.html":{}}}],["cluster_consolewritermodule_exports",{"_index":796,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"overview.html":{}}}],["cluster_consolewritermodule_providers",{"_index":795,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":818,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":819,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_databasemanagementmodule",{"_index":1717,"title":{},"body":{"modules/DatabaseManagementModule.html":{},"overview.html":{}}}],["cluster_databasemanagementmodule_exports",{"_index":1718,"title":{},"body":{"modules/DatabaseManagementModule.html":{},"overview.html":{}}}],["cluster_databasemanagementmodule_imports",{"_index":1719,"title":{},"body":{"modules/DatabaseManagementModule.html":{},"overview.html":{}}}],["cluster_feathersmodule",{"_index":2124,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_exports",{"_index":2125,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_providers",{"_index":2126,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_filesmodule",{"_index":2285,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_imports",{"_index":2286,"title":{},"body":{"modules/FilesModule.html":{}}}],["cluster_filesmodule_providers",{"_index":2287,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesystemmodule",{"_index":2279,"title":{},"body":{"modules/FileSystemModule.html":{},"overview.html":{}}}],["cluster_filesystemmodule_exports",{"_index":2281,"title":{},"body":{"modules/FileSystemModule.html":{},"overview.html":{}}}],["cluster_filesystemmodule_providers",{"_index":2280,"title":{},"body":{"modules/FileSystemModule.html":{},"overview.html":{}}}],["cluster_importusermodule",{"_index":2842,"title":{},"body":{"modules/ImportUserModule.html":{},"overview.html":{}}}],["cluster_importusermodule_imports",{"_index":2843,"title":{},"body":{"modules/ImportUserModule.html":{}}}],["cluster_learnroommodule",{"_index":2959,"title":{},"body":{"modules/LearnroomModule.html":{},"overview.html":{}}}],["cluster_learnroommodule_providers",{"_index":2960,"title":{},"body":{"modules/LearnroomModule.html":{},"overview.html":{}}}],["cluster_loggermodule",{"_index":3017,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_exports",{"_index":3019,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_providers",{"_index":3018,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_managementmodule",{"_index":3058,"title":{},"body":{"modules/ManagementModule.html":{},"overview.html":{}}}],["cluster_managementmodule_imports",{"_index":3059,"title":{},"body":{"modules/ManagementModule.html":{}}}],["cluster_managementmodule_providers",{"_index":3060,"title":{},"body":{"modules/ManagementModule.html":{},"overview.html":{}}}],["cluster_newsmodule",{"_index":3276,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_exports",{"_index":3278,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_imports",{"_index":3277,"title":{},"body":{"modules/NewsModule.html":{}}}],["cluster_newsmodule_providers",{"_index":3279,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_serverconsolemodule",{"_index":3616,"title":{},"body":{"modules/ServerConsoleModule.html":{},"overview.html":{}}}],["cluster_serverconsolemodule_imports",{"_index":3617,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["cluster_servermodule",{"_index":3628,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_servermodule_imports",{"_index":3629,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_servertestmodule",{"_index":3670,"title":{},"body":{"modules/ServerTestModule.html":{},"overview.html":{}}}],["cluster_servertestmodule_imports",{"_index":3671,"title":{},"body":{"modules/ServerTestModule.html":{},"overview.html":{}}}],["cluster_taskmodule",{"_index":3887,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_taskmodule_providers",{"_index":3888,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":4196,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":4197,"title":{},"body":{"modules/UserModule.html":{}}}],["cluttered",{"_index":5901,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["codacy",{"_index":4441,"title":{},"body":{"index.html":{}}}],["code",{"_index":179,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"classes/ValidationError.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["codes",{"_index":6181,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["coersion",{"_index":2425,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["cohesion",{"_index":5672,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["collect",{"_index":5149,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collectcoveragefrom",{"_index":5463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collection",{"_index":502,"title":{},"body":{"entities/BaseFile.html":{},"entities/Course.html":{},"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"entities/News.html":{},"interfaces/Options.html":{},"entities/Role.html":{},"entities/SchoolNews.html":{},"entities/Submission.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{},"entities/User.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collection(this",{"_index":859,"title":{},"body":{"entities/Course.html":{},"entities/CourseGroup.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"entities/Role.html":{},"entities/Submission.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/User.html":{}}}],["collection.deletemany",{"_index":1761,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collection.find({}).toarray",{"_index":1759,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collection.insertmany(jsondocuments",{"_index":1756,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collection.name",{"_index":1767,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collectionexists",{"_index":1726,"title":{},"body":{"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionexists(collectionname",{"_index":1737,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collectionname",{"_index":1700,"title":{},"body":{"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"miscellaneous/variables.html":{}}}],["collectionnamefilter",{"_index":1808,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionnamefilter.length",{"_index":1857,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionnamefilter?.includes(collectionname",{"_index":1860,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionnames",{"_index":1765,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collectionname}.json",{"_index":1842,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collections",{"_index":1662,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{},"injectables/PermissionService.html":{}}}],["collections.includes(collectionname",{"_index":1769,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collections.map((collection",{"_index":1766,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collections.map((collectionname",{"_index":1840,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collections.ts",{"_index":5378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collectionstoexport",{"_index":1895,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionstoexport.map(async",{"_index":1897,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionstoseed",{"_index":1869,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionstoseed.map(async",{"_index":1872,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionswithfilepaths",{"_index":1839,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["color",{"_index":657,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"entities/Course.html":{},"classes/CourseFactory.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/variables.html":{}}}],["columns",{"_index":1236,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["colums",{"_index":1340,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["combine",{"_index":5159,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["combined",{"_index":646,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"injectables/TaskAuthorizationService.html":{},"license.html":{}}}],["come",{"_index":4416,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["comes",{"_index":4835,"title":{},"body":{"license.html":{}}}],["command",{"_index":1668,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"classes/DeleteFilesConsole.html":{},"interfaces/Options.html":{},"classes/ServerConsole.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["command({command",{"_index":1660,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"classes/DeleteFilesConsole.html":{},"classes/ServerConsole.html":{}}}],["commander",{"_index":4263,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["commandresponse",{"_index":4113,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["commands",{"_index":4696,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["comment",{"_index":2621,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"miscellaneous/variables.html":{}}}],["commercial",{"_index":4931,"title":{},"body":{"license.html":{}}}],["commit",{"_index":4536,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["commitment",{"_index":5099,"title":{},"body":{"license.html":{}}}],["committing",{"_index":4530,"title":{},"body":{"index.html":{}}}],["common",{"_index":4287,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["communicate",{"_index":5720,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["communication",{"_index":4745,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["community",{"_index":4572,"title":{},"body":{"license.html":{}}}],["comparator",{"_index":6012,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["compare",{"_index":2352,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["compared",{"_index":5888,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comparison",{"_index":6376,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["compilation",{"_index":4843,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":4851,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":5131,"title":{},"body":{"license.html":{}}}],["compile",{"_index":1935,"title":{},"body":{"controllers/DelayController.html":{},"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compiler",{"_index":4727,"title":{},"body":{"license.html":{}}}],["complete",{"_index":4523,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["completely",{"_index":5814,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["complex",{"_index":3011,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compliance",{"_index":5055,"title":{},"body":{"license.html":{}}}],["compliant",{"_index":5694,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comply",{"_index":4767,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":5624,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["component",{"_index":4721,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["component(s",{"_index":5767,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["components",{"_index":4495,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compression",{"_index":4265,"title":{},"body":{"dependencies.html":{}}}],["computer",{"_index":4669,"title":{},"body":{"license.html":{}}}],["concept",{"_index":5917,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concepts",{"_index":5965,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["concerns",{"_index":5167,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["concrete",{"_index":6033,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concurrently",{"_index":4267,"title":{},"body":{"dependencies.html":{}}}],["condition",{"_index":6197,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["conditioned",{"_index":5125,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":4636,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["conditons",{"_index":5776,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["config",{"_index":3644,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["config.initialoptions",{"_index":5447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration",{"_index":2032,"title":{},"body":{"classes/EncryptedStringType.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["configuration.get('mail_send_exchange",{"_index":3650,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["configuration.get('mail_send_routing_key",{"_index":3651,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["configuration.get('rabbitmq_uri",{"_index":3649,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["configuration.get('request_timeout",{"_index":5527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration.get('rocket_chat_admin_id",{"_index":3654,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["configuration.get('rocket_chat_admin_password",{"_index":3657,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["configuration.get('rocket_chat_admin_token",{"_index":3655,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["configuration.get('rocket_chat_admin_user",{"_index":3656,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["configuration.get('rocket_chat_uri",{"_index":3653,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["configurations",{"_index":5634,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["configure",{"_index":5552,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["configures",{"_index":826,"title":{},"body":{"modules/CoreModule.html":{}}}],["conflicts",{"_index":5964,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["connect",{"_index":5708,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connected",{"_index":4496,"title":{},"body":{"index.html":{}}}],["connection",{"_index":3123,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["connectionoptions",{"_index":5339,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["connections",{"_index":5858,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connector/framework",{"_index":5874,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consent",{"_index":5846,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consequence",{"_index":5042,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":5198,"title":{},"body":{"license.html":{}}}],["considered",{"_index":5007,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consist",{"_index":6132,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["consistent",{"_index":5092,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consists",{"_index":6055,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["console",{"_index":801,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"classes/DatabaseManagementConsole.html":{},"classes/DeleteFilesConsole.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"classes/TestBootstrapConsole.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["console/database",{"_index":3071,"title":{},"body":{"modules/ManagementModule.html":{}}}],["consolelogger",{"_index":3000,"title":{},"body":{"injectables/Logger.html":{}}}],["consolemodule",{"_index":3619,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["consolewriter",{"_index":1658,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{},"classes/ServerConsole.html":{}}}],["consolewritermodule",{"_index":793,"title":{"modules/ConsoleWriterModule.html":{}},"body":{"modules/ConsoleWriterModule.html":{},"modules/ServerConsoleModule.html":{},"modules.html":{},"overview.html":{}}}],["consolewriterservice",{"_index":797,"title":{"injectables/ConsoleWriterService.html":{}},"body":{"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"classes/DatabaseManagementConsole.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{},"classes/ServerConsole.html":{},"overview.html":{}}}],["conspicuously",{"_index":4815,"title":{},"body":{"license.html":{}}}],["const",{"_index":128,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"injectables/BoardMapper.html":{},"classes/BoardTaskStatusMapper.html":{},"injectables/BsonConverter.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PermissionService.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"classes/SchoolInfoMapper.html":{},"classes/Scope.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"injectables/StorageProviderRepo.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["constants",{"_index":282,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/TimeoutInterceptor.html":{}}}],["constitutes",{"_index":4758,"title":{},"body":{"license.html":{}}}],["constraint",{"_index":230,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constraints",{"_index":5765,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["constructor",{"_index":69,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusResponse.html":{},"classes/BusinessError.html":{},"entities/Course.html":{},"classes/CourseFactory.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"injectables/CourseRepo.html":{},"injectables/CourseUc.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/EncryptedStringType.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"injectables/JwtStrategy.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"injectables/RoomsUc.html":{},"classes/SchoolInfoResponse.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoResponse.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["constructor(@inject('symmetric_cipher_key",{"_index":3724,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["constructor(@inject(request",{"_index":2156,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["constructor(amqpconnection",{"_index":3046,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(apivalidationerror",{"_index":220,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constructor(consolewriter",{"_index":1655,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"classes/ServerConsole.html":{}}}],["constructor(courserepo",{"_index":1162,"title":{},"body":{"injectables/CourseUc.html":{},"injectables/RoomsUc.html":{},"injectables/TaskAuthorizationService.html":{}}}],["constructor(customkey",{"_index":2023,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["constructor(dashboardrepo",{"_index":1624,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["constructor(data",{"_index":1021,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["constructor(deletefilesuc",{"_index":1940,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["constructor(e",{"_index":42,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["constructor(em",{"_index":535,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementService.html":{},"injectables/LessonRepo.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{}}}],["constructor(entityclass",{"_index":409,"title":{},"body":{"classes/BaseFactory.html":{}}}],["constructor(feathersauthprovider",{"_index":305,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["constructor(feathersserviceprovider",{"_index":2088,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["constructor(field",{"_index":4213,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(filesrepo",{"_index":1963,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["constructor(filestorageadapter",{"_index":2296,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["constructor(filesystemadapter",{"_index":1783,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["constructor(id",{"_index":1038,"title":{},"body":{"classes/CourseMetadataResponse.html":{},"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["constructor(key",{"_index":3716,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["constructor(message",{"_index":4208,"title":{},"body":{"classes/ValidationError.html":{}}}],["constructor(newsrepo",{"_index":3371,"title":{},"body":{"injectables/NewsUc.html":{}}}],["constructor(operator",{"_index":3589,"title":{},"body":{"classes/Scope.html":{}}}],["constructor(private",{"_index":329,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"controllers/CourseController.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"controllers/DashboardController.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FilesRepo.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"classes/ServerConsole.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserRepo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["constructor(props",{"_index":512,"title":{},"body":{"entities/BaseFile.html":{},"entities/Course.html":{},"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"entities/Directory.html":{},"entities/File.html":{},"classes/GridElement.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"entities/Lesson.html":{},"entities/News.html":{},"entities/Role.html":{},"entities/School.html":{},"entities/SchoolNews.html":{},"entities/StorageProvider.html":{},"entities/Submission.html":{},"entities/System.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"entities/User.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{}}}],["constructor(protected",{"_index":556,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["constructor(readonly",{"_index":204,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(request",{"_index":2171,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["constructor(task",{"_index":2662,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["constructor(taskrepo",{"_index":4050,"title":{},"body":{"injectables/TaskUC.html":{}}}],["constructor(total",{"_index":3455,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["constructor(type",{"_index":2070,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["constructor(undefined",{"_index":619,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusResponse.html":{},"classes/BusinessError.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskStatusResponse.html":{},"classes/UserInfoResponse.html":{}}}],["constructor(userrepo",{"_index":2912,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(validationerrors",{"_index":185,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["constructor(value",{"_index":2532,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["constructors",{"_index":6362,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["construed",{"_index":5136,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":4910,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consumers",{"_index":5812,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["contact",{"_index":5232,"title":{},"body":{"license.html":{}}}],["contain",{"_index":5132,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["contained",{"_index":4411,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["containing",{"_index":4518,"title":{},"body":{"index.html":{},"license.html":{}}}],["contains",{"_index":3321,"title":{},"body":{"injectables/NewsRepo.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["content",{"_index":582,"title":{},"body":{"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"entities/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/RoomsUc.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["contentdisposition",{"_index":238,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["contentid",{"_index":243,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["contents",{"_index":5096,"title":{},"body":{"license.html":{}}}],["context",{"_index":2003,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"interfaces/ILogger.html":{},"injectables/Logger.html":{},"injectables/TimeoutInterceptor.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["context.switchtohttp().getrequest",{"_index":6328,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["continue",{"_index":4957,"title":{},"body":{"license.html":{}}}],["continued",{"_index":4941,"title":{},"body":{"license.html":{}}}],["contract",{"_index":5664,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["contractual",{"_index":5004,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":5143,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":4580,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["contributor",{"_index":5082,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":5084,"title":{},"body":{"license.html":{}}}],["control",{"_index":4733,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["controlled",{"_index":5087,"title":{},"body":{"license.html":{}}}],["controller",{"_index":919,"title":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{},"controllers/DatabaseManagementController.html":{},"controllers/DelayController.html":{},"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"controllers/RoomsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}},"body":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{},"controllers/DatabaseManagementController.html":{},"controllers/DelayController.html":{},"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"controllers/RoomsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["controller('courses",{"_index":941,"title":{},"body":{"controllers/CourseController.html":{}}}],["controller('dashboard",{"_index":1221,"title":{},"body":{"controllers/DashboardController.html":{}}}],["controller('management/database",{"_index":1709,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["controller('news",{"_index":3183,"title":{},"body":{"controllers/NewsController.html":{}}}],["controller('rooms",{"_index":3562,"title":{},"body":{"controllers/RoomsController.html":{}}}],["controller('tasks",{"_index":3836,"title":{},"body":{"controllers/TaskController.html":{}}}],["controller('team",{"_index":4099,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["controller('user",{"_index":4170,"title":{},"body":{"controllers/UserController.html":{}}}],["controller('user/import",{"_index":2803,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["controller.ts",{"_index":5978,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["controller/course.controller",{"_index":2964,"title":{},"body":{"modules/LearnroomModule.html":{}}}],["controller/dashboard.controller",{"_index":2963,"title":{},"body":{"modules/LearnroomModule.html":{}}}],["controller/database",{"_index":3069,"title":{},"body":{"modules/ManagementModule.html":{}}}],["controller/dto",{"_index":1009,"title":{},"body":{"classes/CourseMapper.html":{},"classes/DashboardMapper.html":{},"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/UserInfoMapper.html":{}}}],["controller/dto/roomboardresponse",{"_index":665,"title":{},"body":{"injectables/BoardMapper.html":{},"classes/BoardTaskStatusMapper.html":{}}}],["controller/dto/target",{"_index":3741,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["controller/dto/task",{"_index":4035,"title":{},"body":{"classes/TaskStatusMapper.html":{}}}],["controller/import",{"_index":2847,"title":{},"body":{"modules/ImportUserModule.html":{}}}],["controller/news.controller",{"_index":3283,"title":{},"body":{"modules/NewsModule.html":{}}}],["controller/rooms.controller",{"_index":2965,"title":{},"body":{"modules/LearnroomModule.html":{}}}],["controller/task.controller",{"_index":3890,"title":{},"body":{"modules/TaskModule.html":{}}}],["controller/team",{"_index":3284,"title":{},"body":{"modules/NewsModule.html":{}}}],["controllers",{"_index":921,"title":{},"body":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{},"controllers/DatabaseManagementController.html":{},"controllers/DelayController.html":{},"controllers/ImportUserController.html":{},"modules/ImportUserModule.html":{},"modules/LearnroomModule.html":{},"modules/ManagementModule.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"controllers/RoomsController.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["convenient",{"_index":4689,"title":{},"body":{"license.html":{}}}],["convention",{"_index":6190,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["conventions",{"_index":5716,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["convert",{"_index":1907,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["converter/bson.converter",{"_index":1826,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{}}}],["converttodatabasevalue",{"_index":2021,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["converttodatabasevalue(value",{"_index":2027,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["converttojsvalue",{"_index":2022,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["converttojsvalue(value",{"_index":2030,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["convey",{"_index":4676,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":5120,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":4952,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":4684,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":5003,"title":{},"body":{"license.html":{}}}],["cooperation",{"_index":4571,"title":{},"body":{"license.html":{}}}],["copies",{"_index":4563,"title":{},"body":{"license.html":{}}}],["copy",{"_index":479,"title":{},"body":{"classes/BaseFactory.html":{},"license.html":{}}}],["copying",{"_index":4637,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":4567,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":4553,"title":{},"body":{"license.html":{}}}],["copyrightable",{"_index":4645,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":4773,"title":{},"body":{"license.html":{}}}],["core",{"_index":825,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core.autocrlf",{"_index":6401,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["core/error",{"_index":6166,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["coremodule",{"_index":817,"title":{"modules/CoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["correct",{"_index":5491,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["correction",{"_index":5192,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":6175,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["corresponding",{"_index":4730,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cors",{"_index":4269,"title":{},"body":{"dependencies.html":{}}}],["cost",{"_index":4878,"title":{},"body":{"license.html":{}}}],["count",{"_index":1002,"title":{},"body":{"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"injectables/LessonRepo.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/SubmissionRepo.html":{},"entities/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskWithStatusVo.html":{},"controllers/TeamNewsController.html":{}}}],["counted",{"_index":1001,"title":{},"body":{"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"injectables/LessonRepo.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{}}}],["countednewslist",{"_index":3311,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["countedtasklist",{"_index":3971,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["counterclaim",{"_index":5074,"title":{},"body":{"license.html":{}}}],["counterpart",{"_index":5370,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["countries",{"_index":4673,"title":{},"body":{"license.html":{}}}],["country",{"_index":5112,"title":{},"body":{"license.html":{}}}],["counts",{"_index":1034,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"miscellaneous/typealiases.html":{}}}],["couple",{"_index":5868,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["coupling",{"_index":5674,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["course",{"_index":573,"title":{"entities/Course.html":{}},"body":{"interfaces/Board.html":{},"injectables/BoardMapper.html":{},"entities/Course.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/RoomsUc.html":{},"entities/SchoolNews.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["course.entity",{"_index":987,"title":{},"body":{"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Lesson.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{}}}],["course.factory",{"_index":2974,"title":{},"body":{"classes/LessonFactory.html":{}}}],["course.getmetadata",{"_index":1011,"title":{},"body":{"classes/CourseMapper.html":{}}}],["course.id",{"_index":593,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["course.students.contains(user",{"_index":3812,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["course.substitutionteachers.contains(user",{"_index":612,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{},"injectables/TaskAuthorizationService.html":{}}}],["course.teachers.contains(user",{"_index":611,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{},"injectables/TaskAuthorizationService.html":{}}}],["coursecontroller",{"_index":920,"title":{"controllers/CourseController.html":{}},"body":{"controllers/CourseController.html":{},"modules/LearnroomModule.html":{}}}],["coursefactory",{"_index":951,"title":{"classes/CourseFactory.html":{}},"body":{"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"miscellaneous/variables.html":{}}}],["coursefactory.build",{"_index":2977,"title":{},"body":{"classes/LessonFactory.html":{},"miscellaneous/variables.html":{}}}],["coursefactory.define(course",{"_index":976,"title":{},"body":{"classes/CourseFactory.html":{},"miscellaneous/variables.html":{}}}],["coursegroup",{"_index":981,"title":{"entities/CourseGroup.html":{}},"body":{"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{},"injectables/SubmissionRepo.html":{},"miscellaneous/variables.html":{}}}],["coursegroup.entity",{"_index":2627,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["coursegroupfactory",{"_index":5382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coursegroupid",{"_index":2636,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["coursegrouprepo",{"_index":994,"title":{"injectables/CourseGroupRepo.html":{}},"body":{"injectables/CourseGroupRepo.html":{}}}],["coursegroups",{"_index":989,"title":{},"body":{"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"interfaces/ICourseGroupProperties.html":{}}}],["coursegroupsofuser",{"_index":3713,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["courseid",{"_index":984,"title":{},"body":{"entities/CourseGroup.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Lesson.html":{},"entities/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskWithStatusVo.html":{}}}],["courseids",{"_index":1000,"title":{},"body":{"injectables/CourseGroupRepo.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{}}}],["coursemapper",{"_index":937,"title":{"classes/CourseMapper.html":{}},"body":{"controllers/CourseController.html":{},"classes/CourseMapper.html":{}}}],["coursemapper.maptometadataresponse(course",{"_index":946,"title":{},"body":{"controllers/CourseController.html":{}}}],["coursemetadata",{"_index":1010,"title":{},"body":{"classes/CourseMapper.html":{}}}],["coursemetadata.displaycolor",{"_index":1015,"title":{},"body":{"classes/CourseMapper.html":{}}}],["coursemetadata.id",{"_index":1012,"title":{},"body":{"classes/CourseMapper.html":{}}}],["coursemetadata.shorttitle",{"_index":1014,"title":{},"body":{"classes/CourseMapper.html":{}}}],["coursemetadata.startdate",{"_index":1016,"title":{},"body":{"classes/CourseMapper.html":{}}}],["coursemetadata.title",{"_index":1013,"title":{},"body":{"classes/CourseMapper.html":{}}}],["coursemetadata.untildate",{"_index":1017,"title":{},"body":{"classes/CourseMapper.html":{}}}],["coursemetadatalistresponse",{"_index":936,"title":{"classes/CourseMetadataListResponse.html":{}},"body":{"controllers/CourseController.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{}}}],["coursemetadatalistresponse(courseresponses",{"_index":950,"title":{},"body":{"controllers/CourseController.html":{}}}],["coursemetadataresponse",{"_index":1008,"title":{"classes/CourseMetadataResponse.html":{}},"body":{"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{}}}],["coursename",{"_index":642,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{}}}],["coursenews",{"_index":1046,"title":{"entities/CourseNews.html":{}},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"injectables/NewsRepo.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coursenews(props",{"_index":1094,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["coursenewsfactory",{"_index":5384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["courserepo",{"_index":576,"title":{"injectables/CourseRepo.html":{}},"body":{"interfaces/Board.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"injectables/DashboardUc.html":{},"modules/LearnroomModule.html":{},"injectables/RoomsUc.html":{},"injectables/TaskAuthorizationService.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["courseresponses",{"_index":944,"title":{},"body":{"controllers/CourseController.html":{}}}],["courses",{"_index":896,"title":{},"body":{"entities/Course.html":{},"controllers/CourseController.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/DashboardUc.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["courses.filter((c",{"_index":3794,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{}}}],["courses.map((course",{"_index":945,"title":{},"body":{"controllers/CourseController.html":{}}}],["coursescope",{"_index":1113,"title":{"classes/CourseScope.html":{}},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["courseuc",{"_index":934,"title":{"injectables/CourseUc.html":{}},"body":{"controllers/CourseController.html":{},"injectables/CourseUc.html":{},"modules/LearnroomModule.html":{},"overview.html":{}}}],["court",{"_index":5142,"title":{},"body":{"license.html":{}}}],["courts",{"_index":5213,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":5102,"title":{},"body":{"license.html":{}}}],["cover",{"_index":6091,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coverage",{"_index":4527,"title":{},"body":{"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["coveragedirectory",{"_index":5465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coveragepathignorepatterns",{"_index":5466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coveragethreshold",{"_index":5468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["covered",{"_index":4657,"title":{},"body":{"license.html":{}}}],["covers",{"_index":6318,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["create",{"_index":1874,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"classes/TestBootstrapConsole.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["create(@currentuser",{"_index":3184,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["create(currentuser",{"_index":3158,"title":{},"body":{"controllers/NewsController.html":{}}}],["create(userid",{"_index":3373,"title":{},"body":{"injectables/NewsUc.html":{}}}],["createcollection",{"_index":1727,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["createcollection(collectionname",{"_index":1739,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["created",{"_index":2250,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"injectables/Logger.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["createdat",{"_index":380,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BoardElementResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/ResolvedUser.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{}}}],["createdat.$date",{"_index":1905,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["createdir",{"_index":2207,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["createdir(folderpath",{"_index":2216,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["createdmodel",{"_index":1561,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["createerrorresponse",{"_index":2336,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponse(error",{"_index":2344,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforbusinesserror",{"_index":4398,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createerrorresponseforbusinesserror(error",{"_index":2367,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforfeatherserror",{"_index":4400,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createerrorresponseforfeatherserror(error",{"_index":2374,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception",{"_index":2357,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(error",{"_index":2388,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(unknownerror",{"_index":2373,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforunknownerror",{"_index":2389,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforunknownerror(error",{"_index":2370,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{}}}],["creategridelement",{"_index":1500,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["creategridelement(elementwithposition",{"_index":1511,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["creategroup(name",{"_index":109,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["createinstance(targetmodel",{"_index":1091,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["createmikroormmodule",{"_index":3096,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["createnestapplication",{"_index":6324,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["createnewsparam",{"_index":6042,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createnewsparams",{"_index":1169,"title":{"classes/CreateNewsParams.html":{}},"body":{"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createparamdecorator((data",{"_index":5436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createrabbitmqmodule",{"_index":3035,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["createrabbitmqmodule(options",{"_index":3041,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["createredisidentifierfromjwtdata",{"_index":2953,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["createredisidentifierfromjwtdata(accountid",{"_index":2956,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["creates",{"_index":2218,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["createspinner",{"_index":809,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["createstorageproviderclient",{"_index":4401,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createstorageproviderclient(storageprovider",{"_index":2187,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"miscellaneous/functions.html":{}}}],["createstudentstatusforuser(user",{"_index":2735,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["createteacherstatusforuser(user",{"_index":2719,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["createtestmodule",{"_index":1931,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["createtmpdir",{"_index":2208,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["createtmpdir(dirnameprefix",{"_index":2219,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["createuser(email",{"_index":117,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["createusertoken(userid",{"_index":85,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["creating",{"_index":1172,"title":{},"body":{"classes/CreateNewsParams.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creation",{"_index":2421,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{}}}],["creator",{"_index":487,"title":{},"body":{"entities/BaseFile.html":{},"entities/CourseNews.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"entities/SchoolNews.html":{},"entities/Task.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creator.response",{"_index":4195,"title":{},"body":{"classes/UserMatchResponse.html":{}}}],["creator.response.ts",{"_index":4386,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["creatorid",{"_index":1076,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"entities/TeamNews.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["credentials",{"_index":2194,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["criteria",{"_index":5877,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["criterion",{"_index":4701,"title":{},"body":{"license.html":{}}}],["critical",{"_index":5827,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cross",{"_index":827,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"modules/CoreModule.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["crosscutting",{"_index":5921,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["crossing",{"_index":6034,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["crud",{"_index":6103,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["crypto",{"_index":3723,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{},"dependencies.html":{}}}],["cryptojs",{"_index":3722,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["cryptojs.aes.decrypt(data",{"_index":3727,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["cryptojs.aes.encrypt(data",{"_index":3725,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["csv",{"_index":5891,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ctx",{"_index":2405,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getresponse",{"_index":2407,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":5437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cumbersome",{"_index":363,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{}}}],["cure",{"_index":5033,"title":{},"body":{"license.html":{}}}],["current",{"_index":1797,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"miscellaneous/variables.html":{}}}],["currentdatetime",{"_index":1834,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["currently",{"_index":3105,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["currentrooms",{"_index":1370,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["currentrooms.foreach((room",{"_index":1372,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["currentuser",{"_index":929,"title":{},"body":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{},"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"controllers/RoomsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.schoolid",{"_index":3186,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.userid",{"_index":1229,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/RoomsController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["custom",{"_index":2079,"title":{},"body":{"classes/ErrorResponse.html":{},"injectables/Logger.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["custom_error_type",{"_index":6162,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["customarily",{"_index":4869,"title":{},"body":{"license.html":{}}}],["customary",{"_index":5156,"title":{},"body":{"license.html":{}}}],["customer",{"_index":4875,"title":{},"body":{"license.html":{}}}],["customizations",{"_index":3666,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["customizing",{"_index":830,"title":{},"body":{"modules/CoreModule.html":{}}}],["customkey",{"_index":2025,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["customproviderclass.name",{"_index":3015,"title":{},"body":{"injectables/Logger.html":{}}}],["cutting",{"_index":5652,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["cycles",{"_index":5691,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["d",{"_index":881,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["damages",{"_index":5196,"title":{},"body":{"license.html":{}}}],["dash",{"_index":4514,"title":{},"body":{"index.html":{}}}],["dashboard",{"_index":1200,"title":{},"body":{"controllers/DashboardController.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"miscellaneous/variables.html":{}}}],["dashboard.getelement(position",{"_index":1645,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["dashboard.getid",{"_index":1476,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["dashboard.getuserid",{"_index":1647,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["dashboard.model.mapper",{"_index":1601,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["dashboard.moveelement(from",{"_index":1644,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["dashboard.setlearnrooms(courses",{"_index":1640,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["dashboard_repo",{"_index":2967,"title":{},"body":{"modules/LearnroomModule.html":{}}}],["dashboardcontroller",{"_index":1198,"title":{"controllers/DashboardController.html":{}},"body":{"controllers/DashboardController.html":{},"modules/LearnroomModule.html":{}}}],["dashboardelement",{"_index":1423,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["dashboardentity",{"_index":1234,"title":{"classes/DashboardEntity.html":{}},"body":{"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{}}}],["dashboardentity(modelentity.id",{"_index":1551,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["dashboardentity(new",{"_index":1604,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["dashboardgridelementmodel",{"_index":1404,"title":{"entities/DashboardGridElementModel.html":{}},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"interfaces/IDashboardModelProperties.html":{},"miscellaneous/variables.html":{}}}],["dashboardgridelementmodelproperties",{"_index":1421,"title":{"interfaces/DashboardGridElementModelProperties.html":{}},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["dashboardgridelementresponse",{"_index":1440,"title":{"classes/DashboardGridElementResponse.html":{}},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{}}}],["dashboardgridsubelementresponse",{"_index":1447,"title":{"classes/DashboardGridSubElementResponse.html":{}},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{}}}],["dashboardgridsubelementresponse(metadata",{"_index":1495,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["dashboardid",{"_index":1208,"title":{},"body":{"controllers/DashboardController.html":{},"injectables/DashboardUc.html":{}}}],["dashboardmapper",{"_index":1218,"title":{"classes/DashboardMapper.html":{}},"body":{"controllers/DashboardController.html":{},"classes/DashboardMapper.html":{}}}],["dashboardmapper.mapgridelement(elementwithposition",{"_index":1478,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["dashboardmapper.maplearnroom(groupmetadata",{"_index":1494,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["dashboardmapper.maptoresponse(dashboard",{"_index":1224,"title":{},"body":{"controllers/DashboardController.html":{}}}],["dashboardmodel",{"_index":1612,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["dashboardmodelentity",{"_index":1422,"title":{"entities/DashboardModelEntity.html":{}},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["dashboardmodelmapper",{"_index":1498,"title":{"injectables/DashboardModelMapper.html":{}},"body":{"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"modules/LearnroomModule.html":{},"overview.html":{}}}],["dashboardprops",{"_index":1252,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"miscellaneous/typealiases.html":{}}}],["dashboardrepo",{"_index":1589,"title":{"injectables/DashboardRepo.html":{}},"body":{"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"interfaces/IDashboardRepo.html":{},"modules/LearnroomModule.html":{}}}],["dashboardresponse",{"_index":645,"title":{"classes/DashboardResponse.html":{}},"body":{"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"controllers/DashboardController.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{}}}],["dashboarduc",{"_index":1216,"title":{"injectables/DashboardUc.html":{}},"body":{"controllers/DashboardController.html":{},"injectables/DashboardUc.html":{},"modules/LearnroomModule.html":{},"overview.html":{}}}],["data",{"_index":1020,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/DashboardMapper.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICollectionFilePath.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"modules/InterceptorModule.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"interfaces/Options.html":{},"classes/PaginationResponse.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["data.gridelement.getcontent",{"_index":1480,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["data.pos",{"_index":1481,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["data/rules",{"_index":5791,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dataaccess",{"_index":5783,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["database",{"_index":1661,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementUc.html":{},"classes/EncryptedStringType.html":{},"interfaces/GlobalConstants.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/Options.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["database.js",{"_index":3660,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["database.module.ts",{"_index":3086,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["database.module.ts:51",{"_index":3088,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["database.module.ts:64",{"_index":3090,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["database/mongo",{"_index":3085,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["database/types",{"_index":3641,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["database/types.ts",{"_index":5359,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["databasemanagementconsole",{"_index":1650,"title":{"classes/DatabaseManagementConsole.html":{}},"body":{"classes/DatabaseManagementConsole.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{}}}],["databasemanagementcontroller",{"_index":1690,"title":{"controllers/DatabaseManagementController.html":{}},"body":{"controllers/DatabaseManagementController.html":{},"modules/ManagementModule.html":{}}}],["databasemanagementmodule",{"_index":1716,"title":{"modules/DatabaseManagementModule.html":{}},"body":{"modules/DatabaseManagementModule.html":{},"modules/ManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["databasemanagementservice",{"_index":1720,"title":{"injectables/DatabaseManagementService.html":{}},"body":{"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{},"overview.html":{}}}],["databasemanagementuc",{"_index":1656,"title":{"injectables/DatabaseManagementUc.html":{}},"body":{"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{},"overview.html":{}}}],["databases",{"_index":6377,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["datalayer",{"_index":5736,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["datamodel",{"_index":5752,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["datase",{"_index":5555,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["date",{"_index":381,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"entities/BaseFile.html":{},"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"entities/Course.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"entities/Directory.html":{},"entities/File.html":{},"injectables/FilesRepo.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"entities/SchoolNews.html":{},"entities/Task.html":{},"classes/TaskListResponse.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["date(date.now",{"_index":974,"title":{},"body":{"classes/CourseFactory.html":{},"classes/TaskFactory.html":{},"classes/TaskScope.html":{},"miscellaneous/variables.html":{}}}],["date.now",{"_index":2010,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["dated",{"_index":5897,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["days",{"_index":1947,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"license.html":{}}}],["db",{"_index":1733,"title":{},"body":{"injectables/DatabaseManagementService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db/protocol",{"_index":5873,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db_password",{"_index":2326,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["db_url",{"_index":2327,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["db_username",{"_index":2328,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["dbname",{"_index":5362,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["dbs",{"_index":5856,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ddd",{"_index":6065,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["debug",{"_index":2578,"title":{},"body":{"interfaces/ILogger.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["debug(message",{"_index":2582,"title":{},"body":{"interfaces/ILogger.html":{}}}],["debug?(message",{"_index":2593,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["debugger",{"_index":4497,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["debugging",{"_index":3662,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["december",{"_index":4797,"title":{},"body":{"license.html":{}}}],["decide",{"_index":5174,"title":{},"body":{"license.html":{},"todo.html":{}}}],["decision",{"_index":5903,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decisions",{"_index":6133,"title":{"additional-documentation/nestjs-application/decisions.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["declared",{"_index":787,"title":{},"body":{"classes/BusinessError.html":{}}}],["declining",{"_index":4996,"title":{},"body":{"license.html":{}}}],["decoded",{"_index":4412,"title":{},"body":{"miscellaneous/functions.html":{}}}],["decodehtmlentities",{"_index":630,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"miscellaneous/functions.html":{}}}],["decorated",{"_index":2431,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["decorator",{"_index":4410,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["decorators",{"_index":349,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"entities/BaseFile.html":{},"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusResponse.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"entities/CourseGroup.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"entities/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"entities/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"entities/File.html":{},"classes/GlobalValidationPipe.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"entities/Lesson.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/PatchGroupParams.html":{},"classes/ResolvedUser.html":{},"entities/Role.html":{},"controllers/RoomsController.html":{},"entities/School.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"entities/StorageProvider.html":{},"entities/Submission.html":{},"entities/System.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskStatusResponse.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["decouple",{"_index":5645,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decoupled",{"_index":5803,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decouples",{"_index":5813,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decrypt",{"_index":2048,"title":{},"body":{"classes/EncryptedStringType.html":{},"injectables/SymetricKeyEncryptionService.html":{}}}],["decrypt(data",{"_index":3718,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["decryptedstring",{"_index":2049,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["dedicated",{"_index":5744,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deemed",{"_index":4785,"title":{},"body":{"license.html":{}}}],["deeppartial",{"_index":429,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["default",{"_index":385,"title":{},"body":{"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"injectables/ConsoleWriterService.html":{},"entities/Course.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"classes/CourseScope.html":{},"entities/DashboardGridElementModel.html":{},"entities/DashboardModelEntity.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"entities/ImportUser.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"entities/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/ResolvedUserMapper.html":{},"entities/Role.html":{},"injectables/RoleRepo.html":{},"classes/Scope.html":{},"controllers/ServerController.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TimeoutInterceptor.html":{},"entities/User.html":{},"injectables/UserRepo.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["default...what",{"_index":884,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.color",{"_index":849,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.description",{"_index":851,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.name",{"_index":853,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.schema.json",{"_index":5554,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["defaultcolumns",{"_index":1297,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"miscellaneous/variables.html":{}}}],["defaultmessage",{"_index":209,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"classes/ValidationError.html":{},"miscellaneous/variables.html":{}}}],["defaultmikroormoptions",{"_index":3658,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["defaultoptions",{"_index":3121,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["defaults",{"_index":1181,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/FileSystemAdapter.html":{},"classes/PaginationQuery.html":{}}}],["defaulttimeout",{"_index":4121,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["defective",{"_index":5187,"title":{},"body":{"license.html":{}}}],["defending",{"_index":4608,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":5139,"title":{},"body":{"license.html":{}}}],["define",{"_index":367,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/LessonFactory.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"entities/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["define(this",{"_index":441,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["defined",{"_index":187,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"classes/BoardElementResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/ILogger.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"injectables/PermissionService.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"entities/Role.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"modules/ServerTestModule.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"entities/System.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["defines",{"_index":5567,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["defining",{"_index":378,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["definition",{"_index":218,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["definitions",{"_index":3075,"title":{},"body":{"modules/ManagementModule.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["delay",{"_index":1924,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["delay(100",{"_index":1928,"title":{},"body":{"controllers/DelayController.html":{}}}],["delaycontroller",{"_index":1913,"title":{"controllers/DelayController.html":{}},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":1881,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["delete(':id",{"_index":3161,"title":{},"body":{"controllers/NewsController.html":{}}}],["delete(':id/match",{"_index":2786,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["delete(id",{"_index":3375,"title":{},"body":{"injectables/NewsUc.html":{}}}],["delete(newsid",{"_index":3160,"title":{},"body":{"controllers/NewsController.html":{}}}],["deleted",{"_index":1978,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["deletedat",{"_index":488,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"injectables/FilesRepo.html":{},"interfaces/IFileProperties.html":{}}}],["deletedcount",{"_index":1760,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["deletedid",{"_index":3200,"title":{},"body":{"controllers/NewsController.html":{}}}],["deletefile",{"_index":2179,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"injectables/FilesRepo.html":{}}}],["deletefile(file",{"_index":2180,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"injectables/FilesRepo.html":{}}}],["deletefilesconsole",{"_index":1936,"title":{"classes/DeleteFilesConsole.html":{}},"body":{"classes/DeleteFilesConsole.html":{},"modules/FilesModule.html":{}}}],["deletefilesuc",{"_index":1941,"title":{"injectables/DeleteFilesUc.html":{}},"body":{"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"modules/FilesModule.html":{},"overview.html":{}}}],["deletegroup(groupname",{"_index":115,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["deleteobjectcommand",{"_index":2183,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["deletes",{"_index":5895,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deleteuser(username",{"_index":124,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["deleting",{"_index":5896,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deletion",{"_index":1946,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["deletioncommand",{"_index":2200,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["delivered",{"_index":6179,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["demands",{"_index":5845,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["denied",{"_index":4958,"title":{},"body":{"license.html":{}}}],["denominated",{"_index":5100,"title":{},"body":{"license.html":{}}}],["depend",{"_index":6101,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dependencies",{"_index":260,"title":{"dependencies.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/ImportUserModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dependency",{"_index":5546,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["depending",{"_index":2240,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["depends",{"_index":2228,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["deprecated",{"_index":2152,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"index.html":{}}}],["deprive",{"_index":5108,"title":{},"body":{"license.html":{}}}],["desc",{"_index":2502,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/enumerations.html":{}}}],["describe",{"_index":5919,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["describe(\"course",{"_index":6201,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["describe(\"when",{"_index":6202,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["describe('get",{"_index":6346,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["described",{"_index":5685,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["description",{"_index":216,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/BaseFactory.html":{},"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"entities/Course.html":{},"classes/CourseFactory.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"modules/FeathersModule.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"modules/InterceptorModule.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LessonFactory.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PatchGroupParams.html":{},"classes/SchoolInfoResponse.html":{},"classes/ServerConsole.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"classes/SubmissionFactory.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskWithStatusVo.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatchResponse.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["descriptions",{"_index":2745,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["descriptive",{"_index":2525,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deserialize",{"_index":744,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["deserialize(bsondocuments",{"_index":746,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["deserializes",{"_index":748,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["design",{"_index":5658,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["designated",{"_index":4886,"title":{},"body":{"license.html":{}}}],["designed",{"_index":4570,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["designing",{"_index":5904,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["designwe",{"_index":5656,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["destroyed",{"_index":5946,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail",{"_index":5164,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail.response",{"_index":226,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["detail.response.ts",{"_index":4212,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["detail.response.ts:1",{"_index":4214,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["detailed",{"_index":4492,"title":{},"body":{"index.html":{}}}],["details",{"_index":180,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ValidationError.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["detect",{"_index":1867,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"miscellaneous/variables.html":{}}}],["detectleaks",{"_index":5476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detectopenhandles",{"_index":5475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["determine",{"_index":5793,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["determinenewroomsin",{"_index":1239,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["determinenewroomsin(rooms",{"_index":1262,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["determining",{"_index":4920,"title":{},"body":{"license.html":{}}}],["deubg",{"_index":6389,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["dev",{"_index":5581,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["develop",{"_index":4439,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["developer",{"_index":6191,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["developers",{"_index":4596,"title":{},"body":{"license.html":{}}}],["development",{"_index":4522,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dfsdfsf",{"_index":4541,"title":{},"body":{"index.html":{}}}],["di",{"_index":5990,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dictionary",{"_index":3064,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["die",{"_index":5849,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["diff",{"_index":4313,"title":{},"body":{"dependencies.html":{}}}],["diffenrent",{"_index":5325,"title":{},"body":{"todo.html":{}}}],["differ",{"_index":5163,"title":{},"body":{"license.html":{}}}],["different",{"_index":3322,"title":{},"body":{"injectables/NewsRepo.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["differently",{"_index":4984,"title":{},"body":{"license.html":{}}}],["dir",{"_index":1794,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["direct",{"_index":3039,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["direction",{"_index":4771,"title":{},"body":{"license.html":{}}}],["directions",{"_index":4892,"title":{},"body":{"license.html":{}}}],["directly",{"_index":4661,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["directory",{"_index":507,"title":{"entities/Directory.html":{}},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/IFileProperties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["directoryfactory",{"_index":5390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dirnameprefix",{"_index":2223,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["dirpath",{"_index":2267,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["disable",{"_index":44,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"entities/CourseNews.html":{},"injectables/DeleteFilesUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"modules/ManagementModule.html":{},"entities/News.html":{},"injectables/NewsUc.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"entities/SchoolNews.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["disclaim",{"_index":4807,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":5177,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":4981,"title":{},"body":{"license.html":{}}}],["discover",{"_index":6068,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovered",{"_index":6076,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovery",{"_index":361,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"todo.html":{}}}],["discriminatorcolumn",{"_index":504,"title":{},"body":{"entities/BaseFile.html":{},"entities/CourseNews.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"injectables/NewsRepo.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["discriminatorvalue",{"_index":506,"title":{},"body":{"entities/BaseFile.html":{},"entities/CourseNews.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["discriminatory",{"_index":5123,"title":{},"body":{"license.html":{}}}],["display",{"_index":4842,"title":{},"body":{"license.html":{}}}],["displayat",{"_index":1056,"title":{},"body":{"entities/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"miscellaneous/variables.html":{}}}],["displaycolor",{"_index":569,"title":{},"body":{"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"injectables/RoomsUc.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["displayed",{"_index":1180,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{},"license.html":{}}}],["displays",{"_index":4686,"title":{},"body":{"license.html":{}}}],["disposable",{"_index":4274,"title":{},"body":{"dependencies.html":{}}}],["dist",{"_index":5572,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["distinguished",{"_index":6213,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["distinguishing",{"_index":5168,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":4561,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":5230,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":5126,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":4638,"title":{},"body":{"license.html":{}}}],["divide",{"_index":5715,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["divides",{"_index":5687,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["docker",{"_index":5556,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["docs",{"_index":5310,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["document",{"_index":1173,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/NewsRepo.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["documentation",{"_index":4443,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["documentbuilder",{"_index":5489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documented",{"_index":4966,"title":{},"body":{"license.html":{}}}],["documents",{"_index":749,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/NewsRepo.html":{}}}],["doe",{"_index":5543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["doesn't",{"_index":3109,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["doesnt",{"_index":6355,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["doing",{"_index":5754,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["domain",{"_index":5266,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["domainentity",{"_index":1535,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["domains",{"_index":4275,"title":{},"body":{"dependencies.html":{}}}],["don't",{"_index":376,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["done",{"_index":4529,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy",{"_index":6220,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy(x,y,z",{"_index":6225,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy(x,y,z).catch(err",{"_index":6242,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy(x,y,z).then(result",{"_index":6235,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazysync(wrong",{"_index":6245,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["doubtful",{"_index":4922,"title":{},"body":{"license.html":{}}}],["down",{"_index":6183,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["downstream",{"_index":5052,"title":{},"body":{"license.html":{}}}],["draft",{"_index":598,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{},"classes/TaskFactory.html":{},"injectables/TaskRepo.html":{}}}],["driven",{"_index":6064,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["driver",{"_index":5361,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["drop/create",{"_index":1878,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["dropcollection",{"_index":1728,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["dropcollection(collectionname",{"_index":1741,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["dry",{"_index":6093,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dto",{"_index":722,"title":{},"body":{"classes/BoardTaskStatusMapper.html":{},"controllers/CourseController.html":{},"classes/CourseMapper.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardMapper.html":{},"classes/GlobalValidationPipe.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/PatchGroupParams.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TaskStatusMapper.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoMapper.html":{},"miscellaneous/functions.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dto's",{"_index":5970,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dto.availabledate",{"_index":3879,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.createdat",{"_index":3515,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["dto.description",{"_index":3885,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.displaycolor",{"_index":3883,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.duedate",{"_index":3881,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.firstname",{"_index":3511,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["dto.groupelements",{"_index":1492,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["dto.groupid",{"_index":1491,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["dto.id",{"_index":1488,"title":{},"body":{"classes/DashboardMapper.html":{},"classes/ResolvedUserMapper.html":{}}}],["dto.lastname",{"_index":3513,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["dto.permissions",{"_index":3525,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["dto.roles",{"_index":3521,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["dto.schoolid",{"_index":3519,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["dto.target",{"_index":3267,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.unpublished",{"_index":3269,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.updatedat",{"_index":3517,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["dto.updater",{"_index":3264,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto/api",{"_index":2348,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["dto/error.response",{"_index":2347,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["dto/import",{"_index":2793,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["dto/resolveduser.dto",{"_index":4169,"title":{},"body":{"controllers/UserController.html":{}}}],["dto/roomboardresponse",{"_index":3560,"title":{},"body":{"controllers/RoomsController.html":{}}}],["dto/update",{"_index":2797,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["dto/user",{"_index":2800,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["dtolist",{"_index":3192,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["dtos",{"_index":2415,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["dtos/entities",{"_index":5501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["due",{"_index":6360,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["duedate",{"_index":641,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskListResponse.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{}}}],["dummy",{"_index":5534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["duplicate",{"_index":6189,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["duplication",{"_index":375,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{}}}],["durable",{"_index":4868,"title":{},"body":{"license.html":{}}}],["duration",{"_index":1996,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["durationlogginginterceptor",{"_index":1993,"title":{"injectables/DurationLoggingInterceptor.html":{}},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["during",{"_index":5267,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dwelling",{"_index":4919,"title":{},"body":{"license.html":{}}}],["dynamically",{"_index":4740,"title":{},"body":{"license.html":{}}}],["dynamicmodule",{"_index":2057,"title":{},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/RocketChatModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["e",{"_index":1549,"title":{},"body":{"injectables/DashboardModelMapper.html":{},"classes/GlobalErrorFilter.html":{},"classes/RocketChatError.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["e.g",{"_index":364,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["e.property",{"_index":2396,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["e.response.data",{"_index":65,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["e.response.data.errortype",{"_index":67,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["e.response.statuscode",{"_index":62,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["e.value",{"_index":2397,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["e2e",{"_index":3287,"title":{},"body":{"modules/NewsModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["each",{"_index":4455,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["earlier",{"_index":4656,"title":{},"body":{"license.html":{}}}],["easier",{"_index":5650,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["eathers",{"_index":2142,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["edit",{"_index":1067,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["effect",{"_index":5210,"title":{},"body":{"license.html":{}}}],["effected",{"_index":4804,"title":{},"body":{"license.html":{}}}],["effective",{"_index":4786,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":5226,"title":{},"body":{"license.html":{}}}],["effects",{"_index":5756,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["effortless",{"_index":6182,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["efforts",{"_index":5067,"title":{},"body":{"license.html":{}}}],["el.getreferences",{"_index":1384,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["electronic",{"_index":5233,"title":{},"body":{"license.html":{}}}],["element",{"_index":1030,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/PatchGroupParams.html":{}}}],["element.content",{"_index":671,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["element.getreferences",{"_index":1371,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["element.getreferences().length",{"_index":1375,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["element.gridelement",{"_index":1351,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["element.removereference(room",{"_index":1374,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["element.removereferencebyindex(position.groupindex",{"_index":1399,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["elementdata",{"_index":1479,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdata.displaycolor",{"_index":1484,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdata.group",{"_index":1489,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdata.group.map((groupmetadata",{"_index":1493,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdata.groupid",{"_index":1490,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdata.referencedid",{"_index":1487,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdata.shorttitle",{"_index":1483,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdata.title",{"_index":1482,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementmodel",{"_index":1533,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["elementmodel.dashboard",{"_index":1576,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["elementmodel.references.set(references",{"_index":1575,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["elementmodel.title",{"_index":1571,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["elementmodel.xpos",{"_index":1566,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["elementmodel.ypos",{"_index":1568,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["elements",{"_index":570,"title":{},"body":{"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"injectables/NewsRepo.html":{},"classes/PaginationQuery.html":{},"injectables/RoomsUc.html":{}}}],["elementtomove",{"_index":1359,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["elementtomove.getreferences",{"_index":1395,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["elementtomove.isgroup",{"_index":1394,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["elementtype",{"_index":625,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{}}}],["elementwithposition",{"_index":1513,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["elementwithposition.pos.x",{"_index":1567,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["elementwithposition.pos.y",{"_index":1569,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["em",{"_index":538,"title":{},"body":{"injectables/BaseRepo.html":{},"entities/Course.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementService.html":{},"injectables/FilesRepo.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"injectables/LessonRepo.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["em.flush",{"_index":6372,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["em.getconnection('write').listcollections",{"_index":5444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["em.getconnection().deletemany(collectionname",{"_index":5446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["em.nativedelete(news",{"_index":6340,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["email",{"_index":121,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"entities/User.html":{},"classes/UserMatch.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["email(value",{"_index":2529,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["emailvo",{"_index":2527,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["embed",{"_index":6077,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["embeddable",{"_index":2520,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["embedded",{"_index":2521,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["embedded({entity",{"_index":2764,"title":{},"body":{"entities/ImportUser.html":{}}}],["embodied",{"_index":4863,"title":{},"body":{"license.html":{}}}],["employer",{"_index":5240,"title":{},"body":{"license.html":{}}}],["empty",{"_index":2043,"title":{},"body":{"classes/EncryptedStringType.html":{},"injectables/FileSystemAdapter.html":{},"classes/NewsScope.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["emptyresultquery",{"_index":3353,"title":{},"body":{"classes/NewsScope.html":{},"classes/Scope.html":{},"miscellaneous/variables.html":{}}}],["emptyresultquerytype",{"_index":1158,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{},"miscellaneous/typealiases.html":{}}}],["en",{"_index":6094,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enable",{"_index":2420,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/ImportUserModule.html":{},"modules/NewsModule.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["enabled",{"_index":2417,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["enableimplicitconversion",{"_index":2427,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["enableopenapidocs",{"_index":5394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enables",{"_index":4678,"title":{},"body":{"license.html":{}}}],["encapsulate",{"_index":5723,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulated",{"_index":5769,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulates",{"_index":5689,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulation",{"_index":5739,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encoded",{"_index":2241,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"miscellaneous/functions.html":{}}}],["encoding",{"_index":2206,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"miscellaneous/functions.html":{}}}],["encodings",{"_index":4415,"title":{},"body":{"miscellaneous/functions.html":{}}}],["encouraged",{"_index":4616,"title":{},"body":{"license.html":{}}}],["encrypt",{"_index":2018,"title":{},"body":{"classes/EncryptedStringType.html":{},"injectables/SymetricKeyEncryptionService.html":{}}}],["encrypt(data",{"_index":3720,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["encryptedstring",{"_index":2046,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["encryptedstringtype",{"_index":2014,"title":{"classes/EncryptedStringType.html":{}},"body":{"classes/EncryptedStringType.html":{},"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{}}}],["encryption.service",{"_index":2058,"title":{},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{}}}],["encryptionmodule",{"_index":2051,"title":{"modules/EncryptionModule.html":{}},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules.html":{}}}],["encryptionmoduleoptions",{"_index":2055,"title":{"interfaces/EncryptionModuleOptions.html":{}},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{}}}],["encryptionservice",{"_index":2020,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["end",{"_index":1033,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["end2end",{"_index":6394,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["endings",{"_index":6400,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["endpoint",{"_index":2188,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["endpoints",{"_index":5747,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["endpointurl",{"_index":2608,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{},"miscellaneous/variables.html":{}}}],["enforce",{"_index":4101,"title":{},"body":{"controllers/TeamNewsController.html":{},"license.html":{}}}],["enforced",{"_index":6066,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enforcing",{"_index":4810,"title":{},"body":{"license.html":{}}}],["enough",{"_index":5789,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["enrichment",{"_index":5792,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ensure",{"_index":314,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/NewsScope.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ensures",{"_index":4463,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["ensuretokeniswhitelisted",{"_index":2951,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["entered",{"_index":5133,"title":{},"body":{"license.html":{}}}],["entire",{"_index":4833,"title":{},"body":{"license.html":{}}}],["entirely",{"_index":5151,"title":{},"body":{"license.html":{}}}],["entites",{"_index":5790,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entities",{"_index":323,"title":{},"body":{"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"entities/Course.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"entities/DashboardGridElementModel.html":{},"entities/DashboardModelEntity.html":{},"entities/Directory.html":{},"entities/File.html":{},"injectables/FilesRepo.html":{},"entities/ImportUser.html":{},"modules/ImportUserModule.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"entities/News.html":{},"injectables/NewsRepo.html":{},"entities/Role.html":{},"entities/School.html":{},"entities/SchoolNews.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"entities/System.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"entities/User.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entities.foreach((entity",{"_index":566,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["entities.map((n",{"_index":560,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["entities.transformer.ts",{"_index":4404,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entities.ts",{"_index":5374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entitiyids",{"_index":342,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entity",{"_index":316,"title":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"entities/BaseFile.html":{},"entities/Course.html":{},"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"entities/DashboardGridElementModel.html":{},"entities/DashboardModelEntity.html":{},"entities/Directory.html":{},"entities/File.html":{},"entities/ImportUser.html":{},"entities/Lesson.html":{},"entities/News.html":{},"entities/Role.html":{},"entities/School.html":{},"entities/SchoolNews.html":{},"entities/StorageProvider.html":{},"entities/Submission.html":{},"entities/System.html":{},"entities/Task.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"entities/User.html":{}},"body":{"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"entities/Course.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"classes/CreateNewsParams.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"entities/Directory.html":{},"entities/File.html":{},"injectables/FilesRepo.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"entities/Role.html":{},"entities/School.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"entities/System.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskFactory.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"miscellaneous/functions.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entity.getgrid().map((elementwithposition",{"_index":1579,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["entity.getid",{"_index":1586,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["entity.getuserid",{"_index":1588,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["entity.ts",{"_index":5969,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["entity/course.entity",{"_index":2470,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["entity/role.entity",{"_index":2488,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"injectables/PermissionService.html":{}}}],["entity/school.entity",{"_index":2471,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["entity/team.entity",{"_index":2472,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["entity/user.entity",{"_index":3489,"title":{},"body":{"injectables/PermissionService.html":{}}}],["entityclass",{"_index":412,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["entityid",{"_index":308,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/Board.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/FeathersAuthProvider.html":{},"classes/GridElement.html":{},"interfaces/ICreateNews.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"entities/News.html":{},"injectables/NewsRepo.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/RoomsUc.html":{},"entities/SchoolNews.html":{},"injectables/StorageProviderRepo.html":{},"entities/Submission.html":{},"injectables/SubmissionRepo.html":{},"entities/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{},"injectables/UserRepo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["entitymanager",{"_index":536,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementService.html":{},"injectables/FilesRepo.html":{},"interfaces/IDashboardRepo.html":{},"injectables/LessonRepo.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["entityname",{"_index":3078,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["entitypermissions",{"_index":336,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entitypermissions.includes(p",{"_index":340,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entityschema",{"_index":373,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{}}}],["entitywithid",{"_index":467,"title":{},"body":{"classes/BaseFactory.html":{}}}],["entries",{"_index":5924,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entry",{"_index":2931,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/NewsController.html":{}}}],["enum",{"_index":1050,"title":{},"body":{"entities/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/IFindOptions.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"entities/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"entities/Role.html":{},"entities/SchoolNews.html":{},"entities/System.html":{},"injectables/TaskAuthorizationService.html":{},"entities/TeamNews.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{}}}],["enum({fieldname",{"_index":2766,"title":{},"body":{"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["enumerations",{"_index":4382,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumname",{"_index":1189,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{}}}],["env",{"_index":4271,"title":{},"body":{"dependencies.html":{}}}],["env/config",{"_index":5279,"title":{},"body":{"todo.html":{}}}],["environment",{"_index":5704,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["eol",{"_index":2214,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["eq",{"_index":2998,"title":{},"body":{"classes/LessonScope.html":{},"classes/TaskScope.html":{}}}],["equivalent",{"_index":4761,"title":{},"body":{"license.html":{}}}],["err",{"_index":1986,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"injectables/JwtStrategy.html":{},"injectables/TimeoutInterceptor.html":{}}}],["err.code",{"_index":6243,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["error",{"_index":34,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/CoreModule.html":{},"injectables/DatabaseManagementUc.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ILogger.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["error('rocket",{"_index":170,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["error('roles",{"_index":3491,"title":{},"body":{"injectables/PermissionService.html":{}}}],["error('submissions",{"_index":2687,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["error(message",{"_index":2584,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["error.filter",{"_index":2067,"title":{},"body":{"modules/ErrorModule.html":{}}}],["error.filter.ts",{"_index":2334,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["error.filter.ts:119",{"_index":2339,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:122",{"_index":2343,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:130",{"_index":2345,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.getresponse",{"_index":2369,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.interface.ts",{"_index":2122,"title":{},"body":{"interfaces/FeathersError.html":{}}}],["error.response",{"_index":225,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{}}}],["error.response.ts",{"_index":215,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.response.ts:23",{"_index":223,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.response.ts:8",{"_index":221,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.stack",{"_index":2400,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["error.validationerrors.map",{"_index":2395,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errorhandler",{"_index":5852,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["errormodule",{"_index":820,"title":{"modules/ErrorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules.html":{},"overview.html":{}}}],["errormsg",{"_index":2394,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errorresponse",{"_index":201,"title":{"classes/ErrorResponse.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/ValidationError.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["errorresponse(snaketype",{"_index":2379,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["errorresponse(this.type",{"_index":792,"title":{},"body":{"classes/BusinessError.html":{}}}],["errorresponse(type",{"_index":2366,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":219,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/ValidationErrorDetailResponse.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["errortype",{"_index":41,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["es6",{"_index":4277,"title":{},"body":{"dependencies.html":{}}}],["escaped",{"_index":4422,"title":{},"body":{"miscellaneous/functions.html":{}}}],["eslint",{"_index":43,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"entities/CourseNews.html":{},"injectables/DeleteFilesUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"modules/ManagementModule.html":{},"entities/News.html":{},"injectables/NewsUc.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"entities/SchoolNews.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["eslint/dot",{"_index":482,"title":{},"body":{"classes/BaseFactory.html":{}}}],["eslint/no",{"_index":48,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"entities/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"entities/News.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["eslint/restrict",{"_index":138,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/GlobalErrorFilter.html":{},"modules/ManagementModule.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["eslintrc.js",{"_index":5616,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["especially",{"_index":5702,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["essential",{"_index":4723,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["establish",{"_index":5678,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["etc",{"_index":4466,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["evaluate",{"_index":6167,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["evaluated",{"_index":6168,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["even",{"_index":4538,"title":{},"body":{"index.html":{},"license.html":{}}}],["event",{"_index":5194,"title":{},"body":{"license.html":{}}}],["events",{"_index":6135,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["everyone",{"_index":4559,"title":{},"body":{"license.html":{}}}],["everything",{"_index":6052,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["everywhere",{"_index":5922,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exact",{"_index":4655,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exactly",{"_index":4191,"title":{},"body":{"classes/UserMatchResponse.html":{}}}],["example",{"_index":4737,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["examplecolor",{"_index":1336,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["examples",{"_index":4426,"title":{},"body":{"miscellaneous/functions.html":{}}}],["except",{"_index":4667,"title":{},"body":{"license.html":{},"todo.html":{}}}],["exception",{"_index":2064,"title":{},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exception.constructor.name.replace('exception",{"_index":2363,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.getstatus",{"_index":2358,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.message",{"_index":2360,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.stack",{"_index":2391,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptionfactory",{"_index":2438,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["exceptionfilter",{"_index":2335,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["exceptionname",{"_index":2362,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptions",{"_index":2356,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["exchange",{"_index":3031,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["exchangeable",{"_index":5663,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exchanges",{"_index":3037,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["excluded",{"_index":4908,"title":{},"body":{"license.html":{}}}],["excludedraftsofothers",{"_index":3998,"title":{},"body":{"classes/TaskScope.html":{}}}],["excludedraftsofothers(creatorid",{"_index":4017,"title":{},"body":{"classes/TaskScope.html":{}}}],["excludeunavailableofothers",{"_index":3999,"title":{},"body":{"classes/TaskScope.html":{}}}],["excludeunavailableofothers(creatorid",{"_index":4019,"title":{},"body":{"classes/TaskScope.html":{}}}],["excluding",{"_index":5137,"title":{},"body":{"license.html":{}}}],["exclusion",{"_index":5228,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":5093,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":4765,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":5144,"title":{},"body":{"license.html":{}}}],["executable",{"_index":4716,"title":{},"body":{"license.html":{}}}],["execute",{"_index":3288,"title":{},"body":{"modules/NewsModule.html":{},"classes/TestBootstrapConsole.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["execute/rollback",{"_index":5918,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["executed",{"_index":3292,"title":{},"body":{"modules/NewsModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["executes",{"_index":5575,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["executing",{"_index":4668,"title":{},"body":{"license.html":{}}}],["execution",{"_index":4117,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["executioncontext",{"_index":2000,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exercise",{"_index":5068,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":4805,"title":{},"body":{"license.html":{}}}],["exist",{"_index":2251,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["existing",{"_index":1557,"title":{},"body":{"injectables/DashboardModelMapper.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ImportUserModule.html":{},"interfaces/JwtConstants.html":{},"interfaces/Options.html":{},"classes/UpdateNewsParams.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["existingrooms",{"_index":1377,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["existingrooms.includes(room",{"_index":1380,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["existinguser",{"_index":6127,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["exists",{"_index":1121,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"injectables/JwtStrategy.html":{},"entities/System.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["existssync",{"_index":2257,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["existssync(folderpath",{"_index":2265,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["exp",{"_index":2892,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["expect",{"_index":5746,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["expect(code).to",{"_index":6244,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(data.length).tobe(0",{"_index":6350,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(dosomethingcrazy(x,y,z)).to",{"_index":6223,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(dosomethingcrazysync(wrong",{"_index":6247,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(findallspy).tohavebeencalledwith(...expectedparams",{"_index":6309,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(result).to",{"_index":6226,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(service.findonebyidforuser(anothernewsid",{"_index":6314,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(total).tobe(0",{"_index":6349,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expectation",{"_index":6217,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expected",{"_index":4929,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["expectedparams",{"_index":6308,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expecting",{"_index":6240,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expects",{"_index":4928,"title":{},"body":{"license.html":{}}}],["experts",{"_index":6069,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["expexting",{"_index":6231,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expiration",{"_index":2910,"title":{},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtValidationAdapter.html":{}}}],["expiresin",{"_index":2904,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["explicit",{"_index":459,"title":{},"body":{"classes/BaseFactory.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TimeoutInterceptor.html":{}}}],["explicitly",{"_index":56,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"license.html":{}}}],["export",{"_index":22,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"entities/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"modules/ImportUserModule.html":{},"classes/ImportUserResponse.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"injectables/PermissionService.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"entities/System.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["exportcollection",{"_index":1694,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["exportcollection(@param('collectionname",{"_index":1714,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["exportcollection(collectionname",{"_index":1697,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["exportcollections",{"_index":1653,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{}}}],["exportcollections(options",{"_index":1659,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["exportcollectionstofilesystem",{"_index":1775,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["exportcollectionstofilesystem(collections",{"_index":1786,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["exported",{"_index":1792,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exportedcollections",{"_index":1896,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["exportedcollections.push(`${collectionname}:${sortedbsondocuments.length",{"_index":1912,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["exporting",{"_index":6045,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exports",{"_index":295,"title":{},"body":{"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementUc.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ImportUserModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/RocketChatModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["expose",{"_index":5264,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposed",{"_index":5732,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposing",{"_index":5810,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["express",{"_index":2150,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["expressed",{"_index":5179,"title":{},"body":{"license.html":{}}}],["expressions",{"_index":140,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/GlobalErrorFilter.html":{},"modules/ManagementModule.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["expressly",{"_index":5015,"title":{},"body":{"license.html":{}}}],["extend",{"_index":416,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/GlobalValidationPipe.html":{},"injectables/JwtStrategy.html":{},"classes/LessonFactory.html":{},"injectables/Logger.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UpdateNewsParams.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["extended",{"_index":750,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/JwtValidationAdapter.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["extending",{"_index":5435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extends",{"_index":33,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"entities/BaseFile.html":{},"classes/BusinessError.html":{},"entities/Course.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"entities/Directory.html":{},"classes/EncryptedStringType.html":{},"interfaces/FeathersError.html":{},"entities/File.html":{},"injectables/FilesRepo.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"interfaces/InlineAttachment.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/PlainTextMailContent.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"entities/School.html":{},"entities/SchoolNews.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"entities/System.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"entities/User.html":{},"classes/UserMatch.html":{},"classes/ValidationError.html":{},"additional-documentation/nestjs-application.html":{}}}],["extensions",{"_index":4846,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["extent",{"_index":4688,"title":{},"body":{"license.html":{}}}],["external",{"_index":2523,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserListResponse.html":{},"modules/ImportUserModule.html":{},"classes/ImportUserResponse.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"classes/UserMatch.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["externalauthconfig",{"_index":2882,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["externalid",{"_index":1057,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["externaluseridentifier",{"_index":2754,"title":{},"body":{"interfaces/IUserProperties.html":{},"entities/User.html":{}}}],["externaluseridentifier'})@unique",{"_index":4156,"title":{},"body":{"entities/User.html":{}}}],["extract",{"_index":5798,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["extracting",{"_index":2435,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["extractjwt",{"_index":2917,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":2925,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extracts",{"_index":5933,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["f",{"_index":439,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["f0",{"_index":655,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["facade",{"_index":5719,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["facilitate",{"_index":6199,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["facilitating",{"_index":5157,"title":{},"body":{"license.html":{}}}],["facilities",{"_index":4766,"title":{},"body":{"license.html":{}}}],["factory",{"_index":393,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["factory.define",{"_index":446,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["factory.define(generator",{"_index":462,"title":{},"body":{"classes/BaseFactory.html":{}}}],["fail",{"_index":4619,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["failed",{"_index":210,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["failing",{"_index":6395,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["failingfileids",{"_index":1979,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["failingfileids.length",{"_index":1989,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["failingfileids.push(file.id",{"_index":1987,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["fails",{"_index":5028,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["failure",{"_index":5205,"title":{},"body":{"license.html":{}}}],["fair",{"_index":4760,"title":{},"body":{"license.html":{}}}],["false",{"_index":508,"title":{},"body":{"entities/BaseFile.html":{},"interfaces/Board.html":{},"entities/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DatabaseManagementConsole.html":{},"entities/Directory.html":{},"injectables/FeathersAuthProvider.html":{},"entities/File.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/ImportUser.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"entities/Lesson.html":{},"interfaces/Options.html":{},"injectables/RoomsUc.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskFactory.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/UserMatch.html":{},"injectables/UserRepo.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["family",{"_index":4914,"title":{},"body":{"license.html":{}}}],["fantasy",{"_index":4516,"title":{},"body":{"index.html":{}}}],["fashion",{"_index":4653,"title":{},"body":{"license.html":{}}}],["fast",{"_index":6088,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["favicon",{"_index":4357,"title":{},"body":{"dependencies.html":{}}}],["favor",{"_index":4924,"title":{},"body":{"license.html":{}}}],["feathers",{"_index":298,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/JwtConstants.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathers/express",{"_index":5820,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["feathersapp",{"_index":2158,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["feathersapp.service(path",{"_index":2169,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["feathersauthprovider",{"_index":293,"title":{"injectables/FeathersAuthProvider.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["featherserror",{"_index":2120,"title":{"interfaces/FeathersError.html":{}},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["featherserror)?.type",{"_index":2350,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["feathersexpress",{"_index":2165,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["feathersjs/authentication",{"_index":4220,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/configuration",{"_index":4222,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/errors",{"_index":1634,"title":{},"body":{"injectables/DashboardUc.html":{},"dependencies.html":{}}}],["feathersjs/express",{"_index":2151,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"dependencies.html":{}}}],["feathersjs/feathers",{"_index":4223,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/socketio",{"_index":4224,"title":{},"body":{"dependencies.html":{}}}],["feathersmodule",{"_index":291,"title":{"modules/FeathersModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/FeathersModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersservice",{"_index":2138,"title":{"interfaces/FeathersService.html":{}},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["feathersserviceparams",{"_index":2145,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feathersserviceprovider",{"_index":2089,"title":{"injectables/FeathersServiceProvider.html":{}},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersserviceresponse",{"_index":2153,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feature",{"_index":4510,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["feature/sc",{"_index":4515,"title":{},"body":{"index.html":{}}}],["features",{"_index":5625,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["fee",{"_index":4826,"title":{},"body":{"license.html":{}}}],["feel",{"_index":5637,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["fetch",{"_index":6102,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ffffff",{"_index":980,"title":{},"body":{"classes/CourseFactory.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":4215,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["fieldname",{"_index":510,"title":{},"body":{"entities/BaseFile.html":{},"entities/Course.html":{},"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"entities/Lesson.html":{},"entities/News.html":{},"entities/Role.html":{},"entities/SchoolNews.html":{},"entities/StorageProvider.html":{},"entities/Submission.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{},"entities/User.html":{},"classes/UserMatch.html":{}}}],["fields",{"_index":5263,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["figure",{"_index":5681,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["file",{"_index":5,"title":{"entities/File.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"entities/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"modules/ImportUserModule.html":{},"classes/ImportUserResponse.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"injectables/PermissionService.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"entities/System.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["file.collectionname",{"_index":1866,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["file.entity",{"_index":2628,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["filefactory",{"_index":5396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fileids",{"_index":2639,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["filename",{"_index":1847,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application.html":{}}}],["filename.split('.')[0",{"_index":1848,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["filenames",{"_index":1843,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{}}}],["filenames.map((filename",{"_index":1845,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["filepath",{"_index":1828,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{}}}],["files",{"_index":503,"title":{},"body":{"entities/BaseFile.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"entities/Directory.html":{},"entities/File.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IFileProperties.html":{},"interfaces/Options.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["files.console",{"_index":2292,"title":{},"body":{"modules/FilesModule.html":{}}}],["files.console.ts",{"_index":1938,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["files.console.ts:17",{"_index":1949,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["files.console.ts:7",{"_index":1942,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["files.filter((file",{"_index":2318,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["files.uc.ts",{"_index":1962,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["files.uc.ts:15",{"_index":1967,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["files.uc.ts:6",{"_index":1965,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["filesforcleanupquery",{"_index":2314,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["filesfordeletion",{"_index":1973,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["filesfordeletion.length",{"_index":1976,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["filesmodule",{"_index":2284,"title":{"modules/FilesModule.html":{}},"body":{"modules/FilesModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["filesrepo",{"_index":1964,"title":{"injectables/FilesRepo.html":{}},"body":{"injectables/DeleteFilesUc.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"overview.html":{}}}],["filestorageadapter",{"_index":2177,"title":{"injectables/FileStorageAdapter.html":{}},"body":{"injectables/FileStorageAdapter.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"overview.html":{}}}],["filesystem",{"_index":1663,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{}}}],["filesystemadapter",{"_index":1784,"title":{"injectables/FileSystemAdapter.html":{}},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"interfaces/ICollectionFilePath.html":{},"overview.html":{}}}],["filesystemmodule",{"_index":2278,"title":{"modules/FileSystemModule.html":{}},"body":{"modules/FileSystemModule.html":{},"modules/ManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["filter",{"_index":1677,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"modules/ErrorModule.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"interfaces/Options.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TeamNewsController.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["filter((submission",{"_index":2702,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["filter.query",{"_index":2794,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["filter.query.ts",{"_index":2805,"title":{},"body":{"classes/ImportUserFilterQuery.html":{},"classes/NewsFilterQuery.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["filter.query.ts:15",{"_index":2808,"title":{},"body":{"classes/ImportUserFilterQuery.html":{}}}],["filter.query.ts:17",{"_index":3208,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:21",{"_index":2811,"title":{},"body":{"classes/ImportUserFilterQuery.html":{}}}],["filter.query.ts:25",{"_index":3206,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:27",{"_index":2812,"title":{},"body":{"classes/ImportUserFilterQuery.html":{}}}],["filter.query.ts:32",{"_index":2816,"title":{},"body":{"classes/ImportUserFilterQuery.html":{}}}],["filter.query.ts:33",{"_index":3211,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:37",{"_index":2810,"title":{},"body":{"classes/ImportUserFilterQuery.html":{}}}],["filter.ts",{"_index":3364,"title":{},"body":{"interfaces/NewsTargetFilter.html":{}}}],["filter/global",{"_index":2066,"title":{},"body":{"modules/ErrorModule.html":{}}}],["filtered",{"_index":1812,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["filteredcollectionswithfilepaths",{"_index":1858,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["filteredcollectionswithfilepaths.length",{"_index":1861,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["filterquery",{"_index":1151,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{}}}],["filters",{"_index":600,"title":{},"body":{"interfaces/Board.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/LessonRepo.html":{},"classes/NewsFilterQuery.html":{},"injectables/RoomsUc.html":{},"injectables/TaskRepo.html":{}}}],["filters.availableon",{"_index":3969,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["filters.draft",{"_index":601,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["filters.finished.value",{"_index":3962,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["filters.nofutureavailabledate",{"_index":602,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["filters?.afterduedateornone",{"_index":3965,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["filters?.availableon",{"_index":3967,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["filters?.draft",{"_index":3974,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["filters?.finished",{"_index":3960,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["filters?.hidden",{"_index":2985,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["filters?.nofutureavailabledate",{"_index":3976,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["filters?.onlyactivecourses",{"_index":1127,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["final",{"_index":6134,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["finally",{"_index":5025,"title":{},"body":{"license.html":{}}}],["find",{"_index":2141,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["find(params",{"_index":2144,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["findall",{"_index":2779,"title":{},"body":{"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["findall(currentuser",{"_index":2782,"title":{},"body":{"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["findall(targets",{"_index":3296,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findall(userid",{"_index":4052,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallbycourseids",{"_index":2574,"title":{},"body":{"interfaces/ILessonProperties.html":{},"entities/Lesson.html":{},"injectables/LessonRepo.html":{}}}],["findallbycourseids'})@property",{"_index":2969,"title":{},"body":{"entities/Lesson.html":{}}}],["findallbycourseids(courseids",{"_index":2981,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["findallbyparentids",{"_index":3893,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallbyparentids(parentids",{"_index":3898,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallbyparentids_findallforstudent",{"_index":2665,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["findallbyparentids_findallforteacher",{"_index":2671,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["findallbyparentids_findallforteacher'})@manytomany('user",{"_index":3749,"title":{},"body":{"entities/Task.html":{}}}],["findallbytaskids",{"_index":3703,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["findallbytaskids(taskids",{"_index":3707,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["findallbyuser",{"_index":1161,"title":{},"body":{"injectables/CourseUc.html":{}}}],["findallbyuser(userid",{"_index":1164,"title":{},"body":{"injectables/CourseUc.html":{}}}],["findallbyuserid",{"_index":894,"title":{},"body":{"entities/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseProperties.html":{},"injectables/SubmissionRepo.html":{}}}],["findallbyuserid(userid",{"_index":1104,"title":{},"body":{"injectables/CourseRepo.html":{},"injectables/SubmissionRepo.html":{}}}],["findallfilesforcleanup",{"_index":2295,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["findallfilesforcleanup(cleanupthreshold",{"_index":2299,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["findallfinished",{"_index":3825,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskUC.html":{}}}],["findallfinished(currentuser",{"_index":3827,"title":{},"body":{"controllers/TaskController.html":{}}}],["findallfinished(userid",{"_index":4054,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallfinishedbyparentids",{"_index":3894,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallfinishedbyparentids(parentids",{"_index":3903,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallforstudent",{"_index":4048,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallforstudent(user",{"_index":4056,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallforteacher",{"_index":893,"title":{},"body":{"entities/Course.html":{},"injectables/CourseRepo.html":{},"interfaces/ICourseProperties.html":{},"injectables/TaskUC.html":{}}}],["findallforteacher(user",{"_index":4058,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallforteacher(userid",{"_index":1107,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["findallforteam",{"_index":4094,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["findallforteam(teamid",{"_index":4095,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["findallforuser",{"_index":3366,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallforuser(userid",{"_index":3377,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallspy",{"_index":6305,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["findbycourseids",{"_index":996,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["findbycourseids(courseids",{"_index":998,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["findbyid",{"_index":3545,"title":{},"body":{"injectables/RoleRepo.html":{},"injectables/UserRepo.html":{}}}],["findbyid(id",{"_index":3548,"title":{},"body":{"injectables/RoleRepo.html":{},"injectables/UserRepo.html":{}}}],["findbyname",{"_index":3546,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["findbyname(name",{"_index":3550,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["findbysingleparent",{"_index":3895,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findbysingleparent(creatorid",{"_index":3905,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["finddocumentsofcollection",{"_index":1729,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["finddocumentsofcollection(collectionname",{"_index":1743,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["findexistinggridelement",{"_index":1501,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["findexistinggridelement(elementwithposition",{"_index":1514,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["findforuser",{"_index":924,"title":{},"body":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{}}}],["findforuser(@currentuser",{"_index":1222,"title":{},"body":{"controllers/DashboardController.html":{}}}],["findforuser(currentuser",{"_index":925,"title":{},"body":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{}}}],["finding",{"_index":2477,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["findnewsandcount",{"_index":3294,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findnewsandcount(query",{"_index":3299,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findone",{"_index":1102,"title":{},"body":{"injectables/CourseRepo.html":{},"controllers/NewsController.html":{}}}],["findone(courseid",{"_index":1109,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["findone(newsid",{"_index":3167,"title":{},"body":{"controllers/NewsController.html":{}}}],["findonebyid",{"_index":3295,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["findonebyid(id",{"_index":3303,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["findonebyidforuser",{"_index":3367,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findonebyidforuser(id",{"_index":3383,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findoneorfailhandler",{"_index":3077,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["findtasksandcount",{"_index":3896,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findtasksandcount(query",{"_index":3907,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["finduser(userid",{"_index":5864,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["finished",{"_index":1960,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["finished(user",{"_index":3848,"title":{},"body":{"classes/TaskFactory.html":{}}}],["finishedcourseids",{"_index":3912,"title":{},"body":{"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["first",{"_index":3382,"title":{},"body":{"injectables/NewsUc.html":{},"classes/UserInfoResponse.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["firstname",{"_index":2490,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/ResolvedUser.html":{},"entities/User.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"miscellaneous/variables.html":{}}}],["fishery",{"_index":456,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["fit",{"_index":5779,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["fitness",{"_index":5182,"title":{},"body":{"license.html":{}}}],["fix",{"_index":5269,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["fixable",{"_index":5612,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["fixed",{"_index":4867,"title":{},"body":{"license.html":{}}}],["fixes",{"_index":5292,"title":{},"body":{"todo.html":{}}}],["fixtures",{"_index":6274,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["flag",{"_index":3210,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["flagged",{"_index":2514,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserFilterQuery.html":{},"classes/UserMatch.html":{}}}],["flags",{"_index":1674,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["flat",{"_index":1385,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["flow",{"_index":4746,"title":{},"body":{"license.html":{}}}],["flush",{"_index":526,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["focus",{"_index":6107,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["focuses",{"_index":6317,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["folder",{"_index":1686,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["folderpath",{"_index":1829,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{}}}],["folders",{"_index":5963,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["follow",{"_index":4640,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["following",{"_index":1992,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["foo",{"_index":5631,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["foractivecourses",{"_index":1118,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["forallgrouptypes",{"_index":1145,"title":{},"body":{"classes/CourseScope.html":{}}}],["forallgrouptypes(userid",{"_index":1114,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["forbid",{"_index":4803,"title":{},"body":{"license.html":{}}}],["forbidden",{"_index":6047,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["forbiddenexception('jwt",{"_index":5431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forbidnonwhitelisted",{"_index":2433,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["forbidunknownvalues",{"_index":2437,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["force",{"_index":4762,"title":{},"body":{"license.html":{}}}],["forcepathstyle",{"_index":2190,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["forceserverobjectid",{"_index":1757,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["forcourseid",{"_index":1146,"title":{},"body":{"classes/CourseScope.html":{}}}],["forcourseid(courseid",{"_index":1124,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["foreign",{"_index":6383,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["forget",{"_index":6311,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["form",{"_index":4703,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["format",{"_index":878,"title":{},"body":{"entities/Course.html":{},"injectables/DatabaseManagementUc.html":{},"classes/ErrorResponse.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["formatting",{"_index":5610,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["forms",{"_index":4857,"title":{},"body":{"license.html":{}}}],["forroot",{"_index":2053,"title":{},"body":{"modules/EncryptionModule.html":{},"modules/MailModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/RocketChatModule.html":{},"modules/ServerTestModule.html":{}}}],["forroot(options",{"_index":2054,"title":{},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/RocketChatModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["forteacher",{"_index":1147,"title":{},"body":{"classes/CourseScope.html":{}}}],["forteacher(userid",{"_index":1117,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["found",{"_index":1649,"title":{},"body":{"injectables/DashboardUc.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["foundation",{"_index":4556,"title":{},"body":{"license.html":{}}}],["framework",{"_index":5648,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["framework/feature",{"_index":5926,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["frameworks",{"_index":5815,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["free",{"_index":4554,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["freedom",{"_index":4577,"title":{},"body":{"license.html":{}}}],["freeport",{"_index":4293,"title":{},"body":{"dependencies.html":{}}}],["from/in",{"_index":6058,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["from/to",{"_index":6057,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["fromgroup",{"_index":2441,"title":{},"body":{"classes/GridElement.html":{}}}],["fromgroup(title",{"_index":1326,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["frompersistedgroup",{"_index":2442,"title":{},"body":{"classes/GridElement.html":{}}}],["frompersistedgroup(id",{"_index":1324,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["frompersistedreference",{"_index":2443,"title":{},"body":{"classes/GridElement.html":{}}}],["frompersistedreference(id",{"_index":1323,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["fromsinglereference",{"_index":2444,"title":{},"body":{"classes/GridElement.html":{}}}],["fromsinglereference(reference",{"_index":1325,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["fs",{"_index":2258,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["fs.rm",{"_index":2271,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["fsp",{"_index":2256,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"miscellaneous/variables.html":{}}}],["fulfilled",{"_index":5824,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["fulfilling",{"_index":4789,"title":{},"body":{"license.html":{}}}],["full",{"_index":2227,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["fullblown",{"_index":581,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["function",{"_index":418,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"injectables/FileStorageAdapter.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/IGridElement.html":{},"interfaces/ILearnroom.html":{},"interfaces/IRoleProperties.html":{},"classes/LessonFactory.html":{},"entities/Role.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["functional",{"_index":828,"title":{},"body":{"modules/CoreModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["functionality",{"_index":5692,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["functioning",{"_index":4942,"title":{},"body":{"license.html":{}}}],["functions",{"_index":4395,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["further",{"_index":4888,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["future",{"_index":1069,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"injectables/NewsUc.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"license.html":{}}}],["g",{"_index":5629,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["gates",{"_index":5613,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["general",{"_index":4547,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["generally",{"_index":4421,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["generate",{"_index":437,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["generated",{"_index":4481,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["generateemptydashboard",{"_index":1602,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["generateemptydashboard(userid",{"_index":1615,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["generating",{"_index":5620,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["generator",{"_index":442,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["generatorfn",{"_index":443,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["generic",{"_index":4417,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["genericdata",{"_index":29,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"miscellaneous/typealiases.html":{}}}],["get(':id",{"_index":3168,"title":{},"body":{"controllers/NewsController.html":{}}}],["get(':id/board",{"_index":3558,"title":{},"body":{"controllers/RoomsController.html":{}}}],["get(':teamid/news",{"_index":4096,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["get('finished",{"_index":3828,"title":{},"body":{"controllers/TaskController.html":{}}}],["get('me",{"_index":4167,"title":{},"body":{"controllers/UserController.html":{}}}],["get(`${this.options.uri}${path",{"_index":141,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["get(id",{"_index":2147,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["get(path",{"_index":136,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["getadminidandtoken",{"_index":155,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["getasadmin(path",{"_index":134,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["getbasedir",{"_index":1819,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["getboard",{"_index":3567,"title":{},"body":{"injectables/RoomsUc.html":{}}}],["getboard(roomid",{"_index":584,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["getbydraftforcreatorquery",{"_index":4000,"title":{},"body":{"classes/TaskScope.html":{}}}],["getbydraftforcreatorquery(creatorid",{"_index":4021,"title":{},"body":{"classes/TaskScope.html":{}}}],["getbydraftquery",{"_index":4001,"title":{},"body":{"classes/TaskScope.html":{}}}],["getbydraftquery(isdraft",{"_index":4023,"title":{},"body":{"classes/TaskScope.html":{}}}],["getcollectionnames",{"_index":1730,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["getcontent",{"_index":1300,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["getdashboardbyid",{"_index":1591,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["getdashboardbyid(id",{"_index":1595,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["getdatabasecollection",{"_index":1731,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["getdatabasecollection(collectionname",{"_index":1746,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["getdb",{"_index":1749,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["getdefaultmaxduedate",{"_index":4049,"title":{},"body":{"injectables/TaskUC.html":{}}}],["getdescriptions",{"_index":2744,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["getdetails",{"_index":183,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ValidationError.html":{}}}],["getelement",{"_index":1240,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["getelement(position",{"_index":1265,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["getentitypermissions",{"_index":303,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["getentitypermissions(userid",{"_index":318,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["geteol",{"_index":2253,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["getfirstopenindex",{"_index":1241,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["getgradeduserids",{"_index":2699,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["getgrid",{"_index":1242,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["getgroupmembers(groupname",{"_index":107,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["getgroupmoderators(groupname",{"_index":105,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["gethello",{"_index":1916,"title":{},"body":{"controllers/DelayController.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{}}}],["getid",{"_index":1243,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["getinout",{"_index":3605,"title":{},"body":{"classes/ServerConsole.html":{}}}],["getinout(whatever",{"_index":3609,"title":{},"body":{"classes/ServerConsole.html":{}}}],["getmaxsubmissions",{"_index":2713,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["getmetadata",{"_index":2570,"title":{},"body":{"interfaces/ILearnroom.html":{}}}],["getnewspermissions",{"_index":3368,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getnewspermissions(userid",{"_index":3385,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getnumberofgradedusers",{"_index":2707,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["getnumberofstudents",{"_index":916,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["getnumberofsubmittedusers",{"_index":2696,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["getorconstructdashboardmodelentity",{"_index":1502,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["getorconstructdashboardmodelentity(entity",{"_index":1516,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["getparent",{"_index":2727,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["getparentid",{"_index":992,"title":{},"body":{"entities/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{}}}],["getpermittedcourses",{"_index":3757,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["getpermittedcourses(user",{"_index":3764,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["getpermittedentities",{"_index":304,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["getpermittedentities(userid",{"_index":321,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["getpermittedlessonids",{"_index":3787,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["getpermittedlessons",{"_index":3758,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["getpermittedlessons(user",{"_index":3768,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["getpermittedschools",{"_index":2083,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getpermittedschools(userid",{"_index":2091,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getpermittedtargets",{"_index":2084,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{}}}],["getpermittedtargets(userid",{"_index":2093,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{}}}],["getquery",{"_index":3594,"title":{},"body":{"classes/Scope.html":{}}}],["getreferences",{"_index":1305,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["getreferencesfromposition",{"_index":1244,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["getreferencesfromposition(position",{"_index":1274,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["getrequiredpermissions",{"_index":3369,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getrequiredpermissions(unpublished",{"_index":3388,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getresponse",{"_index":184,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ValidationError.html":{}}}],["getroomboard",{"_index":3556,"title":{},"body":{"controllers/RoomsController.html":{}}}],["getroomboard(roomid",{"_index":3557,"title":{},"body":{"controllers/RoomsController.html":{}}}],["gets",{"_index":426,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["getseedfolder",{"_index":1776,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["getservice",{"_index":2170,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["getservice(path",{"_index":2157,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["getstudentid",{"_index":2655,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["getsubmissionitems",{"_index":2685,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["getsubmitteduserids",{"_index":2690,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["gettargetfilters",{"_index":3370,"title":{},"body":{"injectables/NewsUc.html":{}}}],["gettargetfilters(userid",{"_index":3391,"title":{},"body":{"injectables/NewsUc.html":{}}}],["gettargetfolder",{"_index":1777,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["gettargetfolder(toseedfolder",{"_index":1795,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["getter",{"_index":882,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["gettimeout",{"_index":4126,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["getting",{"_index":4436,"title":{"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["getuser",{"_index":2085,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuser(userid",{"_index":2095,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserid",{"_index":1245,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["getuserlist(querystring",{"_index":89,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["getuserschoolpermissions",{"_index":2086,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserschoolpermissions(userid",{"_index":2097,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getusersdashboard",{"_index":1592,"title":{},"body":{"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"interfaces/IDashboardRepo.html":{}}}],["getusersdashboard(userid",{"_index":1597,"title":{},"body":{"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"interfaces/IDashboardRepo.html":{}}}],["getusertargetpermissions",{"_index":2087,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["getusertargetpermissions(userid",{"_index":2099,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["git",{"_index":4450,"title":{"additional-documentation/nestjs-application/git.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["git://github.com/hpi",{"_index":4301,"title":{},"body":{"dependencies.html":{}}}],["git://github.com/leeroybrun/mongoose",{"_index":4324,"title":{},"body":{"dependencies.html":{}}}],["git://github.com/schul",{"_index":4315,"title":{},"body":{"dependencies.html":{}}}],["github",{"_index":4445,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["give",{"_index":4823,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["given",{"_index":1854,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["gives",{"_index":2128,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["giving",{"_index":4829,"title":{},"body":{"license.html":{}}}],["global",{"_index":835,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["globalconstants",{"_index":2324,"title":{"interfaces/GlobalConstants.html":{}},"body":{"interfaces/GlobalConstants.html":{},"miscellaneous/variables.html":{}}}],["globalerrorfilter",{"_index":2065,"title":{"classes/GlobalErrorFilter.html":{}},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["globalerrorfilter.logger",{"_index":2409,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["globally",{"_index":2866,"title":{},"body":{"modules/InterceptorModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["globals",{"_index":2329,"title":{},"body":{"interfaces/GlobalConstants.html":{},"miscellaneous/variables.html":{}}}],["globalvalidationpipe",{"_index":2412,"title":{"classes/GlobalValidationPipe.html":{}},"body":{"classes/GlobalValidationPipe.html":{},"modules/ValidationModule.html":{}}}],["gnu",{"_index":4545,"title":{},"body":{"license.html":{}}}],["go",{"_index":4531,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["goal",{"_index":5321,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["goals",{"_index":4631,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["golden",{"_index":6084,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["golevelup/nestjs",{"_index":3027,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"dependencies.html":{}}}],["good",{"_index":4428,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["governed",{"_index":4973,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":4632,"title":{},"body":{"license.html":{}}}],["grade",{"_index":2622,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["gradecomment",{"_index":2623,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{}}}],["graded",{"_index":726,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/SubmissionFactory.html":{},"entities/Task.html":{},"classes/TaskStatusResponse.html":{},"classes/TaskWithStatusVo.html":{}}}],["gradeduserids",{"_index":2700,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["gradeduserids.length",{"_index":2709,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["gradefileids",{"_index":2640,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["gradefiles",{"_index":2624,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["grant",{"_index":4997,"title":{},"body":{"license.html":{}}}],["granted",{"_index":4751,"title":{},"body":{"license.html":{}}}],["grants",{"_index":5045,"title":{},"body":{"license.html":{}}}],["graph",{"_index":5248,"title":{},"body":{"modules.html":{}}}],["gratis",{"_index":4887,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":5220,"title":{},"body":{"license.html":{}}}],["grid",{"_index":1029,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"classes/PatchGroupParams.html":{},"miscellaneous/variables.html":{}}}],["gridarray",{"_index":1603,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["gridelement",{"_index":1311,"title":{"classes/GridElement.html":{}},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardUc.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["gridelement.frompersistedgroup(modelentity.id",{"_index":1543,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["gridelement.fromsinglereference(referenceforindex",{"_index":1398,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["gridelement.fromsinglereference(room",{"_index":1388,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["gridelement.getcontent().title",{"_index":1572,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["gridelement.getid",{"_index":1565,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["gridelement.hasid",{"_index":1563,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["gridelement.isgroup",{"_index":1570,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["gridelement.setgroupname(params",{"_index":1646,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["gridelementcontent",{"_index":1301,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"miscellaneous/typealiases.html":{}}}],["gridelements",{"_index":1432,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"classes/DashboardResponse.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["gridelementwithposition",{"_index":1272,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["gridindexfromposition",{"_index":1246,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["gridindexfromposition(pos",{"_index":1278,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["gridposition",{"_index":1266,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardUc.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"miscellaneous/typealiases.html":{}}}],["gridpositionwithgroupindex",{"_index":1275,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardUc.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"miscellaneous/typealiases.html":{}}}],["group",{"_index":1309,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/PatchGroupParams.html":{}}}],["group.name",{"_index":111,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["groupdata",{"_index":1337,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["groupelements",{"_index":1442,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["groupid",{"_index":1310,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["groupindex",{"_index":1339,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{}}}],["groupmetadata",{"_index":1334,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["groupname",{"_index":94,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["gt",{"_index":3363,"title":{},"body":{"classes/NewsScope.html":{}}}],["gte",{"_index":1123,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/TaskScope.html":{}}}],["guarantee",{"_index":3195,"title":{},"body":{"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guard",{"_index":5438,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guards",{"_index":5993,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guest",{"_index":5938,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["guest:guest",{"_index":5566,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["guide",{"_index":6351,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["guidelines",{"_index":5770,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hack",{"_index":2714,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["halper",{"_index":4149,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["handle",{"_index":5913,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handlebars",{"_index":4419,"title":{},"body":{"miscellaneous/functions.html":{}}}],["handled",{"_index":769,"title":{},"body":{"classes/BusinessError.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handler",{"_index":5307,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["handles",{"_index":2381,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["handling",{"_index":831,"title":{},"body":{"modules/CoreModule.html":{},"entities/Course.html":{},"interfaces/ICourseProperties.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["happen",{"_index":5675,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["happened",{"_index":6032,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["happens",{"_index":6298,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["hard",{"_index":5699,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hascoursepermission",{"_index":3815,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["hascoursereadpermission",{"_index":3759,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["hascoursereadpermission(user",{"_index":3770,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["hascoursewritepermission",{"_index":3760,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["hascoursewritepermission(user",{"_index":3772,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["hasid",{"_index":1299,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["hasoneoftaskdashboardpermissions",{"_index":3761,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["hasoneoftaskdashboardpermissions(user",{"_index":3774,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["haspermission",{"_index":3811,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["haspermissions",{"_index":338,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["hastaskpermission",{"_index":3762,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["hastaskpermission(user",{"_index":3777,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["having",{"_index":4764,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["header",{"_index":2899,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["headers",{"_index":142,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["heart",{"_index":5842,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["heartened",{"_index":4615,"title":{},"body":{"license.html":{}}}],["heavily",{"_index":5737,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hell",{"_index":885,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["help",{"_index":6261,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helper",{"_index":2353,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"injectables/SubmissionRepo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["helpers",{"_index":5995,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["helpful",{"_index":6232,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helps",{"_index":6219,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helpto",{"_index":5597,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["hence",{"_index":5835,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["here",{"_index":369,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"modules/InterceptorModule.html":{},"injectables/JwtValidationAdapter.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hereafter",{"_index":5089,"title":{},"body":{"license.html":{}}}],["heroes",{"_index":5955,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hidden",{"_index":2573,"title":{},"body":{"interfaces/ILessonProperties.html":{},"entities/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/TaskAuthorizationService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["hide",{"_index":6108,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hiding",{"_index":5662,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["high",{"_index":5671,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["higher",{"_index":6050,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hint",{"_index":1877,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hints",{"_index":5753,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["history",{"_index":4314,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["history.git",{"_index":4317,"title":{},"body":{"dependencies.html":{}}}],["holder",{"_index":5022,"title":{},"body":{"license.html":{}}}],["holders",{"_index":4980,"title":{},"body":{"license.html":{}}}],["homework",{"_index":5968,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["homeworkid",{"_index":2633,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["homeworks",{"_index":2664,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["homogeneitysolve",{"_index":5677,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hook",{"_index":5839,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hooked",{"_index":5836,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["hookfn",{"_index":414,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["hooks",{"_index":4282,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hope",{"_index":886,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{},"license.html":{}}}],["host",{"_index":2341,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["host.switchtohttp",{"_index":2406,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["hosts",{"_index":4894,"title":{},"body":{"license.html":{}}}],["hot",{"_index":5311,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["household",{"_index":4915,"title":{},"body":{"license.html":{}}}],["hpi",{"_index":2033,"title":{},"body":{"classes/EncryptedStringType.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["html",{"_index":1063,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["htmlcontent",{"_index":249,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["htmlmailcontent",{"_index":251,"title":{"interfaces/HtmlMailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["http",{"_index":217,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["http://fsf.org",{"_index":4558,"title":{},"body":{"license.html":{}}}],["http://localhost",{"_index":5537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://www.gnu.org/licenses",{"_index":5244,"title":{},"body":{"license.html":{}}}],["httpexception",{"_index":774,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["httpexceptions",{"_index":6159,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["httpmodule",{"_index":3532,"title":{},"body":{"modules/RocketChatModule.html":{}}}],["https://docs.nestjs.com/first",{"_index":5997,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://github.com/goldbergyoni/javascript",{"_index":6353,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["https://github.com/hpi",{"_index":5287,"title":{},"body":{"todo.html":{}}}],["https://github.com/mikro",{"_index":6096,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://github.com/thoughtbot/fishery",{"_index":396,"title":{},"body":{"classes/BaseFactory.html":{}}}],["https://hpi",{"_index":5317,"title":{},"body":{"todo.html":{}}}],["https://jestjs.io",{"_index":5639,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://khalilstemmler.com/articles/oop",{"_index":6105,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://khalilstemmler.com/articles/software",{"_index":6035,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://mikro",{"_index":5640,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://min.io",{"_index":5642,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nestjs.com",{"_index":5638,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nuxtjs.org",{"_index":5805,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["https://stackoverflow.com/a/61909588",{"_index":5270,"title":{},"body":{"todo.html":{}}}],["https://vuejs.org",{"_index":5807,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["https://www.rabbitmq.com",{"_index":5643,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["httpservice",{"_index":16,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["httpstatus",{"_index":202,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/ValidationError.html":{}}}],["httpstatus.bad_request",{"_index":212,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["httpstatus.conflict",{"_index":788,"title":{},"body":{"classes/BusinessError.html":{},"classes/ErrorResponse.html":{}}}],["human",{"_index":6163,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["i...properties",{"_index":890,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["i.e",{"_index":5828,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["iat",{"_index":2891,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["icollectionfilepath",{"_index":1827,"title":{"interfaces/ICollectionFilePath.html":{}},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["icons",{"_index":6397,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["icoursegroupproperties",{"_index":988,"title":{"interfaces/ICourseGroupProperties.html":{}},"body":{"entities/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{}}}],["icourseproperties",{"_index":877,"title":{"interfaces/ICourseProperties.html":{}},"body":{"entities/Course.html":{},"classes/CourseFactory.html":{},"interfaces/ICourseProperties.html":{}}}],["icreatenews",{"_index":2467,"title":{"interfaces/ICreateNews.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["icurrentuser",{"_index":926,"title":{"interfaces/ICurrentUser.html":{}},"body":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"controllers/ImportUserController.html":{},"interfaces/JwtPayload.html":{},"controllers/NewsController.html":{},"controllers/RoomsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id",{"_index":10,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/BoardElementResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/CourseFactory.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GridElement.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LessonFactory.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"injectables/StorageProviderRepo.html":{},"classes/SubmissionFactory.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatchResponse.html":{},"injectables/UserRepo.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["id.pipe.ts",{"_index":3465,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id.pipe.ts:7",{"_index":3467,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["id.ts",{"_index":5345,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["idashboardmodelproperties",{"_index":1431,"title":{"interfaces/IDashboardModelProperties.html":{}},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["idashboardrepo",{"_index":1606,"title":{"interfaces/IDashboardRepo.html":{}},"body":{"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"interfaces/IDashboardRepo.html":{}}}],["idea",{"_index":3803,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["identical",{"_index":2947,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["identifiable",{"_index":5114,"title":{},"body":{"license.html":{}}}],["identified",{"_index":6169,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identifiedreference",{"_index":1408,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["identifier",{"_index":2073,"title":{},"body":{"classes/ErrorResponse.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identifiers",{"_index":2524,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"injectables/JwtValidationAdapter.html":{},"classes/UserMatch.html":{}}}],["identify",{"_index":3137,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["identity",{"_index":6373,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["ids",{"_index":324,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{}}}],["ierrortype",{"_index":775,"title":{"interfaces/IErrorType.html":{}},"body":{"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"miscellaneous/variables.html":{}}}],["if(enableuseractivation",{"_index":6119,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(existinguser.length",{"_index":6129,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(sendwelcomeemailtouser",{"_index":6122,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ifileproperties",{"_index":499,"title":{"interfaces/IFileProperties.html":{}},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{}}}],["ifindoptions",{"_index":1105,"title":{"interfaces/IFindOptions.html":{}},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{}}}],["ignore",{"_index":2772,"title":{},"body":{"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"entities/System.html":{},"miscellaneous/variables.html":{}}}],["ignoreexpiration",{"_index":2926,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["igridelement",{"_index":1269,"title":{"interfaces/IGridElement.html":{}},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["iimportuserproperties",{"_index":2510,"title":{"interfaces/IImportUserProperties.html":{}},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["ilearnroom",{"_index":871,"title":{"interfaces/ILearnroom.html":{}},"body":{"entities/Course.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardModelMapper.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/ILearnroom.html":{}}}],["ilessonproperties",{"_index":2571,"title":{"interfaces/ILessonProperties.html":{}},"body":{"interfaces/ILessonProperties.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{}}}],["ilogger",{"_index":2337,"title":{"interfaces/ILogger.html":{}},"body":{"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"injectables/Logger.html":{},"injectables/NewsUc.html":{},"miscellaneous/variables.html":{}}}],["imateapotexception",{"_index":2149,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/ImportUserController.html":{}}}],["imateapotexception('this",{"_index":2166,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["immediately",{"_index":2136,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["impact",{"_index":4468,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["implement",{"_index":3003,"title":{},"body":{"injectables/Logger.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implementation",{"_index":2773,"title":{},"body":{"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"entities/System.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["implementations",{"_index":5998,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["implemented",{"_index":2888,"title":{},"body":{"interfaces/JwtConstants.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implements",{"_index":897,"title":{},"body":{"entities/Course.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardRepo.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"injectables/TimeoutInterceptor.html":{}}}],["implications",{"_index":6048,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["implicit",{"_index":6371,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["implied",{"_index":5138,"title":{},"body":{"license.html":{}}}],["import",{"_index":15,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"entities/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"modules/ImportUserModule.html":{},"classes/ImportUserResponse.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"injectables/PermissionService.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"entities/System.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"modules/ValidationModule.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["import.module",{"_index":3646,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["import.module.ts",{"_index":2845,"title":{},"body":{"modules/ImportUserModule.html":{}}}],["import/controller/dto/import",{"_index":2804,"title":{},"body":{"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"miscellaneous/enumerations.html":{}}}],["import/controller/dto/match",{"_index":4393,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["import/controller/dto/role",{"_index":4394,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["import/controller/dto/update",{"_index":4142,"title":{},"body":{"classes/UpdateMatchParams.html":{}}}],["import/controller/dto/user",{"_index":4184,"title":{},"body":{"classes/UserMatchResponse.html":{}}}],["import/controller/import",{"_index":2776,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["import/user",{"_index":2844,"title":{},"body":{"modules/ImportUserModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["important",{"_index":2154,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/PermissionService.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["importcollection",{"_index":1695,"title":{},"body":{"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{}}}],["importcollection(@param('collectionname",{"_index":1711,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["importcollection(collectionname",{"_index":1703,"title":{},"body":{"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{}}}],["importcollections",{"_index":1696,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["imported",{"_index":1891,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["importeddocumentsamount",{"_index":1888,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["importing",{"_index":5080,"title":{},"body":{"license.html":{}}}],["imports",{"_index":273,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementUc.html":{},"modules/FilesModule.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ImportUserModule.html":{},"modules/LearnroomModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/RocketChatModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules/TaskModule.html":{},"classes/TestBootstrapConsole.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["importuser",{"_index":2543,"title":{"entities/ImportUser.html":{}},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"modules/ImportUserModule.html":{},"classes/UserMatch.html":{},"miscellaneous/variables.html":{}}}],["importusercontroller",{"_index":2774,"title":{"controllers/ImportUserController.html":{}},"body":{"controllers/ImportUserController.html":{},"modules/ImportUserModule.html":{}}}],["importuserfilterquery",{"_index":2783,"title":{"classes/ImportUserFilterQuery.html":{}},"body":{"controllers/ImportUserController.html":{},"classes/ImportUserFilterQuery.html":{}}}],["importuserid",{"_index":2788,"title":{},"body":{"controllers/ImportUserController.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{}}}],["importuserlistresponse",{"_index":2795,"title":{"classes/ImportUserListResponse.html":{}},"body":{"controllers/ImportUserController.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{}}}],["importusermodule",{"_index":2841,"title":{"modules/ImportUserModule.html":{}},"body":{"modules/ImportUserModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["importuserresponse",{"_index":2823,"title":{"classes/ImportUserResponse.html":{}},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{}}}],["impose",{"_index":5006,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":5141,"title":{},"body":{"license.html":{}}}],["impossile",{"_index":3360,"title":{},"body":{"classes/NewsScope.html":{}}}],["improvements",{"_index":4609,"title":{},"body":{"license.html":{}}}],["improves",{"_index":6173,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["in/out",{"_index":5971,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["inability",{"_index":5200,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":5202,"title":{},"body":{"license.html":{}}}],["inc",{"_index":4557,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":5197,"title":{},"body":{"license.html":{}}}],["include",{"_index":359,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"license.html":{}}}],["included",{"_index":4717,"title":{},"body":{"license.html":{}}}],["includes",{"_index":4672,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["including",{"_index":2246,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"injectables/TaskUC.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["inclusion",{"_index":4855,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":2422,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["incorporate",{"_index":4613,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":5158,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":4918,"title":{},"body":{"license.html":{}}}],["increase",{"_index":4526,"title":{},"body":{"index.html":{}}}],["increases",{"_index":5800,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["indemnification",{"_index":5002,"title":{},"body":{"license.html":{}}}],["independend",{"_index":6138,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["independent",{"_index":4844,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["independently",{"_index":5850,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"interfaces/EncryptionModuleOptions.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"injectables/PermissionService.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"entities/System.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index({name",{"_index":867,"title":{},"body":{"entities/Course.html":{},"entities/Lesson.html":{},"entities/Task.html":{},"entities/User.html":{}}}],["index.ts",{"_index":5260,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["indexes",{"_index":5297,"title":{},"body":{"todo.html":{}}}],["indicate",{"_index":5049,"title":{},"body":{"license.html":{}}}],["indicating",{"_index":5013,"title":{},"body":{"license.html":{}}}],["individual",{"_index":4853,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["individuals",{"_index":4650,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":4932,"title":{},"body":{"license.html":{}}}],["inestapplication",{"_index":5502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inewsproperties",{"_index":1055,"title":{"interfaces/INewsProperties.html":{}},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["inewsscope",{"_index":2478,"title":{"interfaces/INewsScope.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["inewuserprops",{"_index":6113,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"entities/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"modules/ImportUserModule.html":{},"classes/ImportUserResponse.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"injectables/PermissionService.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"entities/System.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["info(text",{"_index":805,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["info.mapper",{"_index":3246,"title":{},"body":{"classes/NewsMapper.html":{}}}],["info.mapper.ts",{"_index":3576,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/UserInfoMapper.html":{}}}],["info.mapper.ts:5",{"_index":3578,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/UserInfoMapper.html":{}}}],["info.response",{"_index":3220,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/TargetInfoMapper.html":{}}}],["info.response.ts",{"_index":3583,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["info.response.ts:13",{"_index":3585,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{}}}],["info.response.ts:14",{"_index":4178,"title":{},"body":{"classes/UserInfoResponse.html":{}}}],["info.response.ts:18",{"_index":3586,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{}}}],["info.response.ts:19",{"_index":4177,"title":{},"body":{"classes/UserInfoResponse.html":{}}}],["info.response.ts:24",{"_index":4180,"title":{},"body":{"classes/UserInfoResponse.html":{}}}],["info.response.ts:3",{"_index":3584,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["inform",{"_index":4900,"title":{},"body":{"license.html":{},"miscellaneous/typealiases.html":{}}}],["information",{"_index":2080,"title":{},"body":{"classes/ErrorResponse.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["infra",{"_index":3081,"title":{},"body":{"modules/ManagementModule.html":{}}}],["infra/encryption",{"_index":2036,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["infrastructure",{"_index":5983,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["infrastucture",{"_index":3665,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["infringe",{"_index":5047,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":5077,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":4664,"title":{},"body":{"license.html":{}}}],["inherit",{"_index":362,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["inheritances",{"_index":3320,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["inherited",{"_index":192,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/CourseFactory.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseScope.html":{},"injectables/FilesRepo.html":{},"classes/ImportUserListResponse.html":{},"classes/LessonFactory.html":{},"classes/LessonScope.html":{},"classes/NewsListResponse.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/StorageProviderRepo.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskScope.html":{},"classes/ValidationError.html":{}}}],["initialization",{"_index":6359,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["initialize",{"_index":6147,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["initialized",{"_index":3007,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["initializes",{"_index":5932,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["initiate",{"_index":5071,"title":{},"body":{"license.html":{}}}],["inject",{"_index":17,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/DashboardUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/SymetricKeyEncryptionService.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["inject('dashboard_repo",{"_index":1636,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["inject('mail_service_options",{"_index":3053,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["inject('rocket_chat_options",{"_index":70,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["inject(mikroorm",{"_index":3117,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["inject(mongomemoryserver",{"_index":3119,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["injectable",{"_index":18,"title":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/BoardMapper.html":{},"injectables/BsonConverter.html":{},"injectables/ConsoleWriterService.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"injectables/CourseUc.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PermissionService.html":{},"injectables/RoleRepo.html":{},"injectables/RoomsUc.html":{},"injectables/StorageProviderRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserRepo.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"injectables/BoardMapper.html":{},"injectables/BsonConverter.html":{},"injectables/ConsoleWriterService.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PermissionService.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"injectables/RoomsUc.html":{},"injectables/StorageProviderRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserRepo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injectables",{"_index":300,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/BoardMapper.html":{},"injectables/BsonConverter.html":{},"injectables/ConsoleWriterService.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"injectables/CourseUc.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PermissionService.html":{},"injectables/RoleRepo.html":{},"injectables/RoomsUc.html":{},"injectables/StorageProviderRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserRepo.html":{},"overview.html":{}}}],["injected",{"_index":2132,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injection",{"_index":3004,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["injections",{"_index":5881,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["inline",{"_index":242,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["inlineattachment",{"_index":241,"title":{"interfaces/InlineAttachment.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["inner",{"_index":4472,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["input",{"_index":2868,"title":{},"body":{"modules/InterceptorModule.html":{},"classes/ServerConsole.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["inputroles",{"_index":3488,"title":{},"body":{"injectables/PermissionService.html":{}}}],["insertedcount",{"_index":1755,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["inside",{"_index":772,"title":{},"body":{"classes/BusinessError.html":{},"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["inspired",{"_index":6352,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["install",{"_index":4731,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["installation",{"_index":4937,"title":{},"body":{"license.html":{}}}],["installed",{"_index":4955,"title":{},"body":{"license.html":{}}}],["instance",{"_index":2161,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"injectables/Logger.html":{},"index.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["instanceof",{"_index":2319,"title":{},"body":{"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"injectables/NewsRepo.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["instances",{"_index":4457,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["instant",{"_index":889,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["instead",{"_index":1882,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["instructions",{"_index":4493,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intact",{"_index":4818,"title":{},"body":{"license.html":{}}}],["integration",{"_index":6254,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["intended",{"_index":4581,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intention",{"_index":4808,"title":{},"body":{"license.html":{}}}],["interact",{"_index":5235,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interacting",{"_index":5153,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interaction",{"_index":4681,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["interactions",{"_index":5724,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interactive",{"_index":4685,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interacts",{"_index":5920,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["intercept",{"_index":1998,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["intercept(context",{"_index":1999,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["interceptor",{"_index":841,"title":{},"body":{"modules/CoreModule.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interceptormodule",{"_index":821,"title":{"modules/InterceptorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/InterceptorModule.html":{},"modules.html":{},"overview.html":{}}}],["interchange",{"_index":4870,"title":{},"body":{"license.html":{}}}],["interest",{"_index":5064,"title":{},"body":{"license.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AdminIdAndToken.html":{},"interfaces/AppendedAttachment.html":{},"interfaces/Board.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"interfaces/EncryptionModuleOptions.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/GlobalConstants.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"interfaces/MailServiceOptions.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/Options.html":{},"interfaces/PlainTextMailContent.html":{},"interfaces/RocketChatOptions.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"interfaces/AppendedAttachment.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"interfaces/Board.html":{},"entities/Course.html":{},"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"entities/Directory.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"entities/File.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"entities/Lesson.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"entities/News.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/Options.html":{},"interfaces/PlainTextMailContent.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"entities/SchoolNews.html":{},"entities/StorageProvider.html":{},"entities/Submission.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"entities/User.html":{},"classes/UserMatch.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["interface/jwt",{"_index":2922,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"interfaces/AppendedAttachment.html":{},"interfaces/Board.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"interfaces/EncryptionModuleOptions.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/GlobalConstants.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"interfaces/MailServiceOptions.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/Options.html":{},"interfaces/PlainTextMailContent.html":{},"interfaces/RocketChatOptions.html":{},"license.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interfered",{"_index":4944,"title":{},"body":{"license.html":{}}}],["internal",{"_index":1058,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["internal_server_error",{"_index":6111,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["internally",{"_index":815,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["internalservererrorexception",{"_index":1534,"title":{},"body":{"injectables/DashboardModelMapper.html":{},"classes/GlobalErrorFilter.html":{}}}],["internalservererrorexception('unknown",{"_index":1555,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["internalservererrorexception(error",{"_index":2372,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["interpretation",{"_index":5209,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":4729,"title":{},"body":{"license.html":{}}}],["intimate",{"_index":4744,"title":{},"body":{"license.html":{}}}],["intricacies",{"_index":6082,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introduce",{"_index":2133,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduced",{"_index":5757,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduces",{"_index":5871,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introducing",{"_index":5545,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["introduction",{"_index":5256,"title":{},"body":{"todo.html":{}}}],["invalid",{"_index":1864,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["invalidate",{"_index":4839,"title":{},"body":{"license.html":{}}}],["inviteusertogroup(groupname",{"_index":99,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["invocation",{"_index":5952,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invocations",{"_index":5957,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoke",{"_index":5890,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoked",{"_index":5733,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoking",{"_index":5862,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["involved",{"_index":6083,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ipagination",{"_index":2501,"title":{"interfaces/IPagination.html":{}},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/TaskUC.html":{}}}],["ipermissionsandroles",{"_index":2492,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"miscellaneous/typealiases.html":{}}}],["iprimarykey",{"_index":3065,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["iresolveduser",{"_index":2486,"title":{"interfaces/IResolvedUser.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/ResolvedUser.html":{}}}],["irole",{"_index":2489,"title":{"interfaces/IRole.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/ResolvedUser.html":{},"miscellaneous/typealiases.html":{}}}],["iroleproperties",{"_index":2595,"title":{"interfaces/IRoleProperties.html":{}},"body":{"interfaces/IRoleProperties.html":{},"entities/Role.html":{}}}],["irrevocable",{"_index":4753,"title":{},"body":{"license.html":{}}}],["isboolean",{"_index":2817,"title":{},"body":{"classes/ImportUserFilterQuery.html":{},"classes/NewsFilterQuery.html":{}}}],["isbusinesserror",{"_index":2351,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isbusinesserror(error",{"_index":2385,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["ischoolproperties",{"_index":2604,"title":{"interfaces/ISchoolProperties.html":{}},"body":{"interfaces/ISchoolProperties.html":{},"entities/School.html":{}}}],["iscreator",{"_index":3813,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["isdate",{"_index":1193,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{}}}],["isdate()@isoptional()@apipropertyoptional({description",{"_index":1176,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isdirectory",{"_index":489,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{}}}],["isdraft",{"_index":727,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskScope.html":{},"classes/TaskStatusResponse.html":{},"classes/TaskWithStatusVo.html":{}}}],["isenum",{"_index":2818,"title":{},"body":{"classes/ImportUserFilterQuery.html":{}}}],["isenum(matchfilterquery",{"_index":2821,"title":{},"body":{"classes/ImportUserFilterQuery.html":{}}}],["isfeatherserror",{"_index":2349,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isfeatherserror(error",{"_index":2380,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isfinished",{"_index":918,"title":{},"body":{"entities/Course.html":{},"classes/CourseFactory.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskStatusResponse.html":{},"classes/TaskWithStatusVo.html":{}}}],["isfinishedforuser(user",{"_index":2682,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["isgraded",{"_index":2651,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Submission.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["isgradedforuser(user",{"_index":2733,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["isgroup",{"_index":1302,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["ishidden",{"_index":2997,"title":{},"body":{"classes/LessonScope.html":{}}}],["isin",{"_index":3212,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isin(target_model_values",{"_index":3215,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isint",{"_index":3450,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(0)@apipropertyoptional({description",{"_index":3447,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(1)@max(100)@apipropertyoptional({description",{"_index":3441,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["ismongoid",{"_index":2826,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/NewsFilterQuery.html":{},"classes/UpdateMatchParams.html":{},"classes/UserMatchResponse.html":{}}}],["ismongoid()@apiproperty({description",{"_index":4193,"title":{},"body":{"classes/UserMatchResponse.html":{}}}],["ismongoid()@apiproperty({pattern",{"_index":2858,"title":{},"body":{"classes/ImportUserResponse.html":{}}}],["isnotempty",{"_index":2819,"title":{},"body":{"classes/ImportUserFilterQuery.html":{}}}],["isnumber",{"_index":3134,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{}}}],["isnumber()@min(0)@apiproperty",{"_index":3140,"title":{},"body":{"classes/MoveElementPosition.html":{}}}],["isnumber()@min(0)@isoptional()@apipropertyoptional({description",{"_index":3138,"title":{},"body":{"classes/MoveElementPosition.html":{}}}],["isolated",{"_index":5958,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["isolation",{"_index":6205,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["isopen",{"_index":953,"title":{},"body":{"classes/CourseFactory.html":{}}}],["isoptional",{"_index":1194,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/ImportUserFilterQuery.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/NewsFilterQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["isoptional()@isboolean()@stringtoboolean()@apipropertyoptional({description",{"_index":3209,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isoptional()@isdate()@apipropertyoptional({description",{"_index":4153,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["isoptional()@ismongoid()@apipropertyoptional({pattern",{"_index":3203,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isoptional()@isstring()@apipropertyoptional({description",{"_index":4152,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["isoptional()@isstring()@isin(target_model_values)@apipropertyoptional({enum",{"_index":3207,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["ispublished",{"_index":3420,"title":{},"body":{"injectables/NewsUc.html":{}}}],["iss",{"_index":2895,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["isstring",{"_index":1195,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/NewsFilterQuery.html":{},"classes/PatchGroupParams.html":{},"classes/UpdateNewsParams.html":{}}}],["isstring()@apiproperty({description",{"_index":1174,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/ImportUserResponse.html":{},"classes/PatchGroupParams.html":{}}}],["isstring()@apiproperty({enum",{"_index":1187,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstring()@apiproperty({pattern",{"_index":1184,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstudent",{"_index":1115,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["issubmitted",{"_index":2736,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["issubmittedforuser(user",{"_index":2729,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["issubstitutionteacher",{"_index":728,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskStatusResponse.html":{},"classes/TaskWithStatusVo.html":{}}}],["issuer",{"_index":2902,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["issues",{"_index":5609,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["istanbul",{"_index":2771,"title":{},"body":{"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"entities/System.html":{}}}],["isteacher",{"_index":587,"title":{},"body":{"interfaces/Board.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/RoomsUc.html":{}}}],["isteacher(user",{"_index":610,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["istechnicalerror",{"_index":2354,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["istechnicalerror(error",{"_index":2387,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["istimestampenabled",{"_index":3016,"title":{},"body":{"injectables/Logger.html":{}}}],["istorageproviderproperties",{"_index":2606,"title":{"interfaces/IStorageProviderProperties.html":{}},"body":{"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{}}}],["isubmissionproperties",{"_index":2619,"title":{"interfaces/ISubmissionProperties.html":{}},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{}}}],["iswhitelisted",{"_index":2939,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["iswhitelisted(accountid",{"_index":2942,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["it's",{"_index":5760,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["it(\"should",{"_index":6204,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('bad",{"_index":6222,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('good",{"_index":6224,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('should",{"_index":6304,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["itaskproperties",{"_index":2657,"title":{"interfaces/ITaskProperties.html":{}},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskWithStatusVo.html":{}}}],["itaskstatus",{"_index":720,"title":{"interfaces/ITaskStatus.html":{}},"body":{"classes/BoardTaskStatusMapper.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskStatusMapper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{}}}],["iteamproperties",{"_index":2749,"title":{"interfaces/ITeamProperties.html":{}},"body":{"interfaces/ITeamProperties.html":{},"entities/Team.html":{}}}],["item",{"_index":4699,"title":{},"body":{"license.html":{}}}],["items",{"_index":2598,"title":{},"body":{"interfaces/IRoleProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"injectables/PermissionService.html":{},"entities/Role.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/typealiases.html":{}}}],["itself",{"_index":4959,"title":{},"body":{"license.html":{}}}],["iupdatenews",{"_index":2476,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{}}}],["iuserproperties",{"_index":2751,"title":{"interfaces/IUserProperties.html":{}},"body":{"interfaces/IUserProperties.html":{},"entities/User.html":{}}}],["javascript",{"_index":752,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["jest",{"_index":5305,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["jest.config.ts",{"_index":5379,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["jest.spyon(repo",{"_index":6306,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["jest/utils",{"_index":5486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jira",{"_index":4505,"title":{},"body":{"index.html":{}}}],["job",{"_index":1944,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["job/delete",{"_index":2291,"title":{},"body":{"modules/FilesModule.html":{}}}],["jobs",{"_index":5911,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["john",{"_index":5542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":6388,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["joinpath",{"_index":2209,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["joinpath(...paths",{"_index":2230,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["jose",{"_index":4296,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":883,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{},"injectables/SymetricKeyEncryptionService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["json",{"_index":751,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["json.parse(text",{"_index":1875,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["json.stringify",{"_index":1863,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["json.stringify(collections",{"_index":1683,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["json.stringify(e.constraints",{"_index":2398,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["json.stringify(sortedbsondocuments",{"_index":1909,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["jsondocuments",{"_index":764,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["jsondocuments.length",{"_index":1754,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["jsonwebtoken",{"_index":4298,"title":{},"body":{"dependencies.html":{}}}],["jti",{"_index":2897,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{}}}],["jwauthguard",{"_index":6322,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["jwt",{"_index":2920,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwtauthguard",{"_index":2874,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwtconstants",{"_index":281,"title":{"interfaces/JwtConstants.html":{}},"body":{"modules/AuthModule.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.jwtoptions",{"_index":2929,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtconstants.secret",{"_index":2928,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":2924,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":276,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register(jwtconstants",{"_index":285,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtoptions",{"_index":2880,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["jwtpayload",{"_index":2907,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{}}}],["jwtstrategy",{"_index":265,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"overview.html":{}}}],["jwtvalidationadapter",{"_index":266,"title":{"injectables/JwtValidationAdapter.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"overview.html":{}}}],["jwtwhitelist",{"_index":2949,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"miscellaneous/variables.html":{}}}],["kafka",{"_index":5818,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["keep",{"_index":1890,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"classes/EncryptedStringType.html":{},"interfaces/ICollectionFilePath.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["keeps",{"_index":5573,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["kernel",{"_index":4724,"title":{},"body":{"license.html":{}}}],["key",{"_index":2201,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"injectables/NewsUc.html":{},"injectables/SymetricKeyEncryptionService.html":{},"license.html":{}}}],["keyof",{"_index":5371,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["keys",{"_index":2886,"title":{},"body":{"interfaces/JwtConstants.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kickuserfromgroup(groupname",{"_index":97,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["kind",{"_index":4677,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["kinds",{"_index":4568,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["know",{"_index":4594,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["knowingly",{"_index":5104,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":5111,"title":{},"body":{"license.html":{}}}],["known",{"_index":6010,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["knows",{"_index":5910,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kurse",{"_index":892,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{},"miscellaneous/variables.html":{}}}],["l.course.isfinished()).map((l",{"_index":4069,"title":{},"body":{"injectables/TaskUC.html":{}}}],["l.id",{"_index":4070,"title":{},"body":{"injectables/TaskUC.html":{}}}],["label",{"_index":4520,"title":{},"body":{"index.html":{}}}],["language",{"_index":4712,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["large",{"_index":5801,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["larger",{"_index":4847,"title":{},"body":{"license.html":{}}}],["last",{"_index":4179,"title":{},"body":{"classes/UserInfoResponse.html":{}}}],["lastname",{"_index":2491,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/ResolvedUser.html":{},"entities/User.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"miscellaneous/variables.html":{}}}],["later",{"_index":1073,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["latest",{"_index":3381,"title":{},"body":{"injectables/NewsUc.html":{},"dependencies.html":{}}}],["launch",{"_index":5633,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["launch/settings",{"_index":5286,"title":{},"body":{"todo.html":{}}}],["law",{"_index":4666,"title":{},"body":{"license.html":{}}}],["laws",{"_index":4642,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":5075,"title":{},"body":{"license.html":{}}}],["layer",{"_index":5710,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["layered",{"_index":5905,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["layering",{"_index":5668,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["layers",{"_index":5259,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["lazily",{"_index":3483,"title":{},"body":{"injectables/PermissionService.html":{}}}],["lazy",{"_index":2544,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["ldap",{"_index":2852,"title":{},"body":{"modules/ImportUserModule.html":{},"todo.html":{}}}],["ldapdn",{"_index":2515,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["ldapid",{"_index":2516,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["ldapjs",{"_index":4300,"title":{},"body":{"dependencies.html":{}}}],["ldapjs.git",{"_index":4303,"title":{},"body":{"dependencies.html":{}}}],["lead",{"_index":5900,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["leads",{"_index":4423,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["lean",{"_index":4319,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["learnroom",{"_index":1556,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["learnroommetadata",{"_index":873,"title":{},"body":{"entities/Course.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/ILearnroom.html":{},"miscellaneous/typealiases.html":{}}}],["learnroommodule",{"_index":2958,"title":{"modules/LearnroomModule.html":{}},"body":{"modules/LearnroomModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["learnroomtypes",{"_index":874,"title":{},"body":{"entities/Course.html":{},"injectables/DashboardModelMapper.html":{},"interfaces/ICourseProperties.html":{},"miscellaneous/enumerations.html":{}}}],["learnroomtypes.course",{"_index":1554,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["leave",{"_index":5332,"title":{},"body":{"todo.html":{}}}],["leaves",{"_index":4116,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["legacy",{"_index":2129,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"entities/System.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["legacy/feathers",{"_index":5621,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["legacy/feathers/mocha",{"_index":5599,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["legacy/nest",{"_index":5322,"title":{},"body":{"todo.html":{}}}],["legacyerrortypes",{"_index":5525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legal",{"_index":4603,"title":{},"body":{"license.html":{}}}],["less",{"_index":5863,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lesson",{"_index":623,"title":{"entities/Lesson.html":{}},"body":{"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/variables.html":{}}}],["lesson.entity",{"_index":2660,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["lessonfactory",{"_index":2972,"title":{"classes/LessonFactory.html":{}},"body":{"classes/LessonFactory.html":{},"miscellaneous/variables.html":{}}}],["lessonfactory.define(lesson",{"_index":2975,"title":{},"body":{"classes/LessonFactory.html":{},"miscellaneous/variables.html":{}}}],["lessonid",{"_index":2668,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["lessonids",{"_index":3949,"title":{},"body":{"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{}}}],["lessonidsoffinishedcourses",{"_index":3913,"title":{},"body":{"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["lessonidsofopencourses",{"_index":3911,"title":{},"body":{"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["lessonrepo",{"_index":2978,"title":{"injectables/LessonRepo.html":{}},"body":{"injectables/LessonRepo.html":{},"injectables/TaskAuthorizationService.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["lessons",{"_index":659,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"interfaces/ILessonProperties.html":{},"entities/Lesson.html":{},"injectables/LessonRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["lessons.filter((l",{"_index":4068,"title":{},"body":{"injectables/TaskUC.html":{}}}],["lessons.map((l",{"_index":4084,"title":{},"body":{"injectables/TaskUC.html":{}}}],["lessonscope",{"_index":2983,"title":{"classes/LessonScope.html":{}},"body":{"injectables/LessonRepo.html":{},"classes/LessonScope.html":{}}}],["letter",{"_index":6007,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["letting",{"_index":4622,"title":{},"body":{"license.html":{}}}],["level",{"_index":5768,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["levels",{"_index":6200,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["liability",{"_index":4983,"title":{},"body":{"license.html":{}}}],["liable",{"_index":4663,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":4715,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["library",{"_index":4909,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["license",{"_index":4544,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":4646,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":4647,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":4649,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":4574,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":5051,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":4994,"title":{},"body":{"license.html":{}}}],["likewise",{"_index":5043,"title":{},"body":{"license.html":{}}}],["limit",{"_index":948,"title":{},"body":{"controllers/CourseController.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"license.html":{}}}],["limitation",{"_index":5193,"title":{},"body":{"license.html":{}}}],["limited",{"_index":5180,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["limiting",{"_index":4982,"title":{},"body":{"license.html":{}}}],["line",{"_index":46,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"entities/CourseNews.html":{},"injectables/DeleteFilesUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"modules/ManagementModule.html":{},"entities/News.html":{},"injectables/NewsUc.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"entities/SchoolNews.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["lines",{"_index":5471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["link",{"_index":2851,"title":{},"body":{"modules/ImportUserModule.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["linked",{"_index":4741,"title":{},"body":{"license.html":{}}}],["linter",{"_index":5306,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["list",{"_index":320,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/LessonFactory.html":{},"classes/NewsListResponse.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"injectables/TaskRepo.html":{},"license.html":{}}}],["lists",{"_index":2234,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["literal",{"_index":410,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"injectables/CourseRepo.html":{},"classes/GridElement.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/JwtConstants.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"injectables/RoomsUc.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"injectables/TaskRepo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["litigation",{"_index":5072,"title":{},"body":{"license.html":{}}}],["living",{"_index":6080,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["lms",{"_index":5782,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["load",{"_index":1850,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/TaskUC.html":{}}}],["load/perf",{"_index":5277,"title":{},"body":{"todo.html":{}}}],["load/persist",{"_index":5979,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["loadallcollectionsfromdatabase",{"_index":1778,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["loadallcollectionsfromdatabase(targetfolder",{"_index":1798,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["loadallcollectionsfromfilesystem",{"_index":1779,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["loadallcollectionsfromfilesystem(basedir",{"_index":1804,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["loadcollectionsavailablefromsourceandfilterbycollectionnames",{"_index":1780,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["loadcollectionsavailablefromsourceandfilterbycollectionnames(source",{"_index":1807,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["loaded",{"_index":2688,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"injectables/PermissionService.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["loader",{"_index":6253,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["loads",{"_index":1800,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["local",{"_index":2840,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/UpdateMatchParams.html":{},"classes/UserMatchResponse.html":{},"dependencies.html":{},"license.html":{}}}],["localhost:15672",{"_index":5565,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["localhost:3030",{"_index":5578,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["localization",{"_index":5808,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["locally",{"_index":3661,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"additional-documentation/nestjs-application.html":{}}}],["locate",{"_index":6044,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["located",{"_index":5786,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["location",{"_index":1818,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["lodash",{"_index":1822,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"dependencies.html":{}}}],["log",{"_index":2579,"title":{},"body":{"interfaces/ILogger.html":{},"injectables/Logger.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["log(message",{"_index":2587,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["log/response",{"_index":5308,"title":{},"body":{"todo.html":{}}}],["logfile",{"_index":5944,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logged",{"_index":4490,"title":{},"body":{"index.html":{}}}],["logger",{"_index":840,"title":{"injectables/Logger.html":{}},"body":{"modules/CoreModule.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"injectables/NewsUc.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logger('error",{"_index":2338,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["logger(deletefilesconsole.name",{"_index":1954,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["logger(durationlogginginterceptor.name",{"_index":2005,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logger(newsuc.name",{"_index":3399,"title":{},"body":{"injectables/NewsUc.html":{}}}],["logger.error(error",{"_index":2402,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(errormsg",{"_index":2399,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(exception",{"_index":2392,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.info(`could",{"_index":6236,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["logger.interface",{"_index":3001,"title":{},"body":{"injectables/Logger.html":{}}}],["logger.service",{"_index":3021,"title":{},"body":{"modules/LoggerModule.html":{}}}],["loggermodule",{"_index":822,"title":{"modules/LoggerModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/FilesModule.html":{},"modules/ImportUserModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["loggerservice",{"_index":6154,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging",{"_index":833,"title":{},"body":{"modules/CoreModule.html":{},"injectables/DurationLoggingInterceptor.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging.interceptor.ts",{"_index":1995,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logging.interceptor.ts:11",{"_index":2006,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logging.interceptor.ts:13",{"_index":2002,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logic",{"_index":5646,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["logic/rules",{"_index":5759,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logical",{"_index":5811,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["login",{"_index":2837,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/UserMatchResponse.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["loginname",{"_index":2806,"title":{},"body":{"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/UserMatchResponse.html":{}}}],["loginuseruc",{"_index":6016,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["logoutuser(authtoken",{"_index":87,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["logs",{"_index":5258,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["long",{"_index":4521,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["look",{"_index":2885,"title":{},"body":{"interfaces/JwtConstants.html":{},"index.html":{}}}],["loop",{"_index":1983,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["loss",{"_index":5201,"title":{},"body":{"license.html":{}}}],["losses",{"_index":5203,"title":{},"body":{"license.html":{}}}],["low",{"_index":5673,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lowercase",{"_index":2545,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["lte",{"_index":2315,"title":{},"body":{"injectables/FilesRepo.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["luckily",{"_index":5929,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["m:n",{"_index":6382,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["machine",{"_index":4860,"title":{},"body":{"license.html":{}}}],["made",{"_index":4610,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mail",{"_index":252,"title":{"interfaces/Mail.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"interfaces/PlainTextMailContent.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"license.html":{}}}],["mail.interface",{"_index":3052,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["mail.service",{"_index":3030,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["mail_service_options",{"_index":3042,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["mailattachment",{"_index":237,"title":{"interfaces/MailAttachment.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["mailcontent",{"_index":245,"title":{"interfaces/MailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["mailmodule",{"_index":3022,"title":{"modules/MailModule.html":{}},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules.html":{}}}],["mailmodule.forroot",{"_index":3648,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["mailmoduleoptions",{"_index":3024,"title":{"interfaces/MailModuleOptions.html":{}},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["mailservice",{"_index":3029,"title":{"injectables/MailService.html":{}},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["mailserviceoptions",{"_index":3048,"title":{"interfaces/MailServiceOptions.html":{}},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["main",{"_index":5843,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["main.ts",{"_index":2162,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"todo.html":{}}}],["mainly",{"_index":5860,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintain",{"_index":4891,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintainability",{"_index":5738,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintenance",{"_index":5669,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["major",{"_index":4720,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["make",{"_index":2946,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/PermissionService.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["makes",{"_index":4779,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["making",{"_index":4151,"title":{},"body":{"classes/UpdateNewsParams.html":{},"license.html":{}}}],["malformed",{"_index":6299,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["manage",{"_index":5722,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["managed",{"_index":5695,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["management",{"_index":5561,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["management.console",{"_index":3072,"title":{},"body":{"modules/ManagementModule.html":{}}}],["management.console.ts",{"_index":1652,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["management.console.ts:11",{"_index":1657,"title":{},"body":{"classes/DatabaseManagementConsole.html":{}}}],["management.console.ts:25",{"_index":1667,"title":{},"body":{"classes/DatabaseManagementConsole.html":{}}}],["management.console.ts:49",{"_index":1664,"title":{},"body":{"classes/DatabaseManagementConsole.html":{}}}],["management.controller",{"_index":3070,"title":{},"body":{"modules/ManagementModule.html":{}}}],["management.controller.ts",{"_index":1692,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["management.controller.ts:14",{"_index":1705,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["management.controller.ts:19",{"_index":1702,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["management.controller.ts:24",{"_index":1699,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["management.controller.ts:9",{"_index":1707,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["management.module.ts",{"_index":1722,"title":{},"body":{"modules/DatabaseManagementModule.html":{}}}],["management.service",{"_index":1723,"title":{},"body":{"modules/DatabaseManagementModule.html":{}}}],["management.service.ts",{"_index":1724,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:13",{"_index":1747,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:18",{"_index":1748,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:30",{"_index":1744,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:36",{"_index":1736,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:42",{"_index":1745,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:50",{"_index":1738,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:56",{"_index":1740,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:6",{"_index":1734,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:60",{"_index":1742,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:9",{"_index":1750,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.uc",{"_index":1671,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{}}}],["management.uc.ts",{"_index":1773,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["management.uc.ts:134",{"_index":1814,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:183",{"_index":1787,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:19",{"_index":1785,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:30",{"_index":1820,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:38",{"_index":1793,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:46",{"_index":1796,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:63",{"_index":1799,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:76",{"_index":1805,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:91",{"_index":1809,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management/database",{"_index":1693,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["managementmodule",{"_index":3057,"title":{"modules/ManagementModule.html":{}},"body":{"modules/ManagementModule.html":{},"modules/ServerConsoleModule.html":{},"modules.html":{},"overview.html":{}}}],["manager",{"_index":4240,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["managing",{"_index":5784,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mandatory/optional",{"_index":5262,"title":{},"body":{"todo.html":{}}}],["manner",{"_index":5090,"title":{},"body":{"license.html":{}}}],["manual",{"_index":2535,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserFilterQuery.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"miscellaneous/enumerations.html":{}}}],["manually",{"_index":6233,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["many",{"_index":4614,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["manytomany",{"_index":870,"title":{},"body":{"entities/Course.html":{},"entities/CourseGroup.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"entities/Role.html":{},"entities/Submission.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/User.html":{}}}],["manytomany('course",{"_index":1412,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["manytomany('file",{"_index":2638,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["manytomany('role",{"_index":2599,"title":{},"body":{"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["manytomany('user",{"_index":860,"title":{},"body":{"entities/Course.html":{},"entities/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Submission.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["manytomany({entity",{"_index":3540,"title":{},"body":{"entities/Role.html":{}}}],["manytoone",{"_index":494,"title":{},"body":{"entities/BaseFile.html":{},"entities/Course.html":{},"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"entities/Lesson.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/Submission.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{},"entities/User.html":{},"classes/UserMatch.html":{}}}],["manytoone('course",{"_index":983,"title":{},"body":{"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Lesson.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{}}}],["manytoone('coursegroup",{"_index":2635,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["manytoone('dashboardmodelentity",{"_index":1409,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["manytoone('lesson",{"_index":2667,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["manytoone('school",{"_index":855,"title":{},"body":{"entities/Course.html":{},"entities/CourseNews.html":{},"interfaces/ICourseProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IUserProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"entities/User.html":{}}}],["manytoone('storageprovider",{"_index":509,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{}}}],["manytoone('task",{"_index":2632,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["manytoone('team",{"_index":1100,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["manytoone('user",{"_index":1075,"title":{},"body":{"entities/CourseNews.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/Submission.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{}}}],["manytoone(undefined",{"_index":2768,"title":{},"body":{"entities/ImportUser.html":{}}}],["map",{"_index":1255,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["map((el",{"_index":1383,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["map((elementwithposition",{"_index":1477,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["map((submission",{"_index":2704,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["mapcreatenewstodomain",{"_index":3234,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapcreatenewstodomain(params",{"_index":3237,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapdashboardtoentity",{"_index":1503,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapdashboardtoentity(modelentity",{"_index":1518,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapdashboardtomodel",{"_index":1504,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapdashboardtomodel(entity",{"_index":1521,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapdomaintoresponse",{"_index":5986,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapelementtoentity",{"_index":1505,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapelementtoentity(modelentity",{"_index":1523,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapfootodomain",{"_index":5987,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapgridelement",{"_index":1467,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["mapgridelement(data",{"_index":1469,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["mapgridelementtomodel",{"_index":1506,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapgridelementtomodel(elementwithposition",{"_index":1525,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["maplearnroom",{"_index":1468,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["maplearnroom(metadata",{"_index":1471,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["mapnewsscopetodomain",{"_index":3235,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapnewsscopetodomain(query",{"_index":3239,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapped",{"_index":693,"title":{},"body":{"injectables/BoardMapper.html":{},"controllers/RoomsController.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mappedelements",{"_index":1578,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mappedelements.includes(el",{"_index":1582,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mappedtask",{"_index":676,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["mappedtask.availabledate",{"_index":685,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["mappedtask.coursename",{"_index":683,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["mappedtask.description",{"_index":691,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["mappedtask.displaycolor",{"_index":689,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["mappedtask.duedate",{"_index":687,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["mapper",{"_index":1593,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"controllers/RoomsController.html":{},"controllers/UserController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mapper.ts",{"_index":5985,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapper/board.mapper",{"_index":2966,"title":{},"body":{"modules/LearnroomModule.html":{},"controllers/RoomsController.html":{}}}],["mapper/course.mapper",{"_index":938,"title":{},"body":{"controllers/CourseController.html":{}}}],["mapper/dashboard.mapper",{"_index":1219,"title":{},"body":{"controllers/DashboardController.html":{}}}],["mapper/news.mapper",{"_index":3181,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["mapper/task.mapper",{"_index":3834,"title":{},"body":{"controllers/TaskController.html":{}}}],["mappers",{"_index":6321,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mapping",{"_index":5717,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mapreferencetoentity",{"_index":1507,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapreferencetoentity(modelentity",{"_index":1527,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapreferencetomodel",{"_index":1508,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapreferencetomodel(reference",{"_index":1529,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["maps",{"_index":5751,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["maptometadataresponse",{"_index":1005,"title":{},"body":{"classes/CourseMapper.html":{}}}],["maptometadataresponse(course",{"_index":1006,"title":{},"body":{"classes/CourseMapper.html":{}}}],["maptoresponse",{"_index":662,"title":{},"body":{"injectables/BoardMapper.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/DashboardMapper.html":{},"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/TaskStatusMapper.html":{},"classes/UserInfoMapper.html":{}}}],["maptoresponse(board",{"_index":663,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["maptoresponse(dashboard",{"_index":1474,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["maptoresponse(news",{"_index":3241,"title":{},"body":{"classes/NewsMapper.html":{}}}],["maptoresponse(schoolinfo",{"_index":3577,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["maptoresponse(status",{"_index":719,"title":{},"body":{"classes/BoardTaskStatusMapper.html":{},"classes/TaskStatusMapper.html":{}}}],["maptoresponse(target",{"_index":3740,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["maptoresponse(taskwithstatus",{"_index":3865,"title":{},"body":{"classes/TaskMapper.html":{}}}],["maptoresponse(user",{"_index":3509,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{}}}],["mapupdatenewstodomain",{"_index":3236,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapupdatenewstodomain(params",{"_index":3243,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapusertocurrentuser",{"_index":5400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["march",{"_index":5135,"title":{},"body":{"license.html":{}}}],["marked",{"_index":1945,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"license.html":{}}}],["marks",{"_index":5001,"title":{},"body":{"license.html":{}}}],["masks",{"_index":4644,"title":{},"body":{"license.html":{}}}],["master",{"_index":4440,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["match",{"_index":1788,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"classes/ErrorResponse.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["match.params",{"_index":2798,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["match.params.ts",{"_index":4143,"title":{},"body":{"classes/UpdateMatchParams.html":{}}}],["match.params.ts:7",{"_index":4146,"title":{},"body":{"classes/UpdateMatchParams.html":{}}}],["match.response",{"_index":2801,"title":{},"body":{"controllers/ImportUserController.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{}}}],["match.response.ts",{"_index":4185,"title":{},"body":{"classes/UserMatchResponse.html":{}}}],["match.response.ts:17",{"_index":4194,"title":{},"body":{"classes/UserMatchResponse.html":{}}}],["match.response.ts:20",{"_index":4189,"title":{},"body":{"classes/UserMatchResponse.html":{}}}],["match.response.ts:23",{"_index":4187,"title":{},"body":{"classes/UserMatchResponse.html":{}}}],["match.response.ts:26",{"_index":4188,"title":{},"body":{"classes/UserMatchResponse.html":{}}}],["match.response.ts:32",{"_index":4192,"title":{},"body":{"classes/UserMatchResponse.html":{}}}],["match.response.ts:6",{"_index":4186,"title":{},"body":{"classes/UserMatchResponse.html":{}}}],["matchcreator",{"_index":2533,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{},"miscellaneous/enumerations.html":{}}}],["matchcreatorresponse",{"_index":4190,"title":{},"body":{"classes/UserMatchResponse.html":{},"miscellaneous/enumerations.html":{}}}],["matched",{"_index":785,"title":{},"body":{"classes/BusinessError.html":{}}}],["matchedby",{"_index":2542,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{}}}],["matches",{"_index":6295,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["matchfilterquery",{"_index":2813,"title":{},"body":{"classes/ImportUserFilterQuery.html":{},"miscellaneous/enumerations.html":{}}}],["matchfilterquery})@isoptional()@isenum(matchfilterquery",{"_index":2815,"title":{},"body":{"classes/ImportUserFilterQuery.html":{}}}],["matching",{"_index":173,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"entities/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"modules/ImportUserModule.html":{},"classes/ImportUserResponse.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"injectables/PermissionService.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"entities/System.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["material",{"_index":4768,"title":{},"body":{"license.html":{}}}],["materially",{"_index":4960,"title":{},"body":{"license.html":{}}}],["math.floor(index",{"_index":1346,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["matrix",{"_index":5795,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matrixchat",{"_index":5788,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matter",{"_index":5865,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["max",{"_index":3451,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["max(100",{"_index":3453,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["maximum",{"_index":3444,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["maxsubmissions",{"_index":729,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskStatusResponse.html":{},"classes/TaskWithStatusVo.html":{}}}],["maxworkers",{"_index":5483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maybe",{"_index":3102,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["md",{"_index":5313,"title":{},"body":{"todo.html":{}}}],["me(@currentuser",{"_index":4171,"title":{},"body":{"controllers/UserController.html":{}}}],["me(authtoken",{"_index":75,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["me(currentuser",{"_index":4166,"title":{},"body":{"controllers/UserController.html":{}}}],["meaning",{"_index":5009,"title":{},"body":{"license.html":{}}}],["meaningful",{"_index":4537,"title":{},"body":{"index.html":{}}}],["means",{"_index":4473,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["measure",{"_index":4788,"title":{},"body":{"license.html":{}}}],["measures",{"_index":4477,"title":{},"body":{"index.html":{},"license.html":{}}}],["mechanisms",{"_index":5956,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["medium",{"_index":4814,"title":{},"body":{"license.html":{}}}],["meet",{"_index":4827,"title":{},"body":{"license.html":{}}}],["meets",{"_index":4700,"title":{},"body":{"license.html":{}}}],["member",{"_index":50,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/FeathersAuthProvider.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["members",{"_index":110,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["memory",{"_index":3084,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["menu",{"_index":4697,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":5181,"title":{},"body":{"license.html":{}}}],["mere",{"_index":4680,"title":{},"body":{"license.html":{}}}],["merge",{"_index":4542,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mergeelementintoposition",{"_index":1247,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["mergeelementintoposition(element",{"_index":1281,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["merging",{"_index":5061,"title":{},"body":{"license.html":{}}}],["message",{"_index":84,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/ValidationError.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["messages",{"_index":5819,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["met",{"_index":4755,"title":{},"body":{"license.html":{}}}],["meta",{"_index":6366,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["metadata",{"_index":1473,"title":{},"body":{"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["metadata.type",{"_index":1553,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["method",{"_index":2143,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/PermissionService.html":{},"classes/ServerConsole.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["methods",{"_index":182,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"injectables/BoardMapper.html":{},"classes/BoardTaskStatusMapper.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/ILogger.html":{},"controllers/ImportUserController.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PermissionService.html":{},"classes/ResolvedUserMapper.html":{},"modules/RocketChatModule.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"classes/SchoolInfoMapper.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"modules/ServerTestModule.html":{},"injectables/StorageProviderRepo.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["metrics",{"_index":4340,"title":{},"body":{"dependencies.html":{}}}],["microservice",{"_index":5799,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["microservices",{"_index":5725,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["middleware",{"_index":4465,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["migrate",{"_index":4305,"title":{},"body":{"dependencies.html":{}}}],["migrated",{"_index":5797,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["migration",{"_index":2850,"title":{},"body":{"modules/ImportUserModule.html":{},"modules/NewsModule.html":{}}}],["migrations/scheduled",{"_index":3290,"title":{},"body":{"modules/NewsModule.html":{}}}],["mikro",{"_index":355,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"entities/Course.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementService.html":{},"entities/Directory.html":{},"classes/EncryptedStringType.html":{},"injectables/FeathersAuthProvider.html":{},"entities/File.html":{},"injectables/FilesRepo.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"entities/Lesson.html":{},"injectables/LessonRepo.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"entities/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/ParseObjectIdPipe.html":{},"entities/Role.html":{},"injectables/RoleRepo.html":{},"entities/School.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/StorageProvider.html":{},"entities/Submission.html":{},"injectables/SubmissionRepo.html":{},"entities/System.html":{},"entities/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"entities/User.html":{},"classes/UserMatch.html":{},"injectables/UserRepo.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mikroorm",{"_index":3091,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{}}}],["mikroorm.init",{"_index":5533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mikroorm/asynclocalstorage",{"_index":5303,"title":{},"body":{"todo.html":{}}}],["mikroormcoremodule",{"_index":3113,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormcoremodule.exports",{"_index":3115,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormcoremodule.exports.push(mongomemoryserver",{"_index":3116,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule",{"_index":3062,"title":{},"body":{"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.forfeature",{"_index":2849,"title":{},"body":{"modules/ImportUserModule.html":{}}}],["mikroormmodule.forroot",{"_index":3073,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mikroormmodule.forrootasync",{"_index":3097,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.imports",{"_index":3111,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.imports.length",{"_index":3112,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.imports[0",{"_index":3114,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmoduleasyncoptions",{"_index":3092,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodulesyncoptions",{"_index":3108,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["milliseconds",{"_index":4130,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["mimetype",{"_index":240,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["min",{"_index":3135,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/PaginationQuery.html":{}}}],["min(0",{"_index":3136,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/PaginationQuery.html":{}}}],["min(1",{"_index":3452,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["minimizes",{"_index":5878,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["minimum",{"_index":3443,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["minus",{"_index":6014,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["misc",{"_index":6386,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["miscellaneous",{"_index":4381,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["misrepresentation",{"_index":4990,"title":{},"body":{"license.html":{}}}],["missed",{"_index":2740,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["missing",{"_index":2160,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/variables.html":{}}}],["mission",{"_index":3359,"title":{},"body":{"classes/NewsScope.html":{}}}],["mix",{"_index":5705,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mixwith",{"_index":4306,"title":{},"body":{"dependencies.html":{}}}],["mkdir",{"_index":2261,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["mkdir(folderpath",{"_index":2266,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["mkdtemp",{"_index":2262,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["mkdtemp(dirpath",{"_index":2270,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["mocha",{"_index":5459,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["mocha's",{"_index":6209,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocked",{"_index":6269,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocking",{"_index":6257,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocks",{"_index":6259,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mode",{"_index":4936,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["model",{"_index":1190,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["modelentity",{"_index":1520,"title":{},"body":{"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["modelentity.gridelements.init",{"_index":1546,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["modelentity.gridelements.isinitialized",{"_index":1545,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["modelentity.gridelements.remove(el",{"_index":1583,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["modelentity.references.loaditems",{"_index":1538,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["modelentity.title",{"_index":1544,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["modelentity.user.id",{"_index":1552,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["modelentity.xpos",{"_index":1541,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["modelentity.ypos",{"_index":1542,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["models",{"_index":3428,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["modification",{"_index":4639,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":4704,"title":{},"body":{"license.html":{}}}],["modified",{"_index":4621,"title":{},"body":{"license.html":{}}}],["modifies",{"_index":4832,"title":{},"body":{"license.html":{}}}],["modify",{"_index":4605,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":4670,"title":{},"body":{"license.html":{}}}],["modularization",{"_index":5549,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["modularize",{"_index":2037,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["module",{"_index":257,"title":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"modules/EncryptionModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/ImportUserModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/RocketChatModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/ImportUserModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/RocketChatModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["module.createnestapplication",{"_index":6334,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(entitymanager",{"_index":6338,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(mikroorm",{"_index":6336,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(newsrepo);test",{"_index":6302,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(newsuc",{"_index":6301,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.ts",{"_index":5467,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/application",{"_index":6252,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module/repo",{"_index":6022,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/uc",{"_index":6017,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modulefileextensions",{"_index":5448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modulenamemapper",{"_index":5479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moduleref",{"_index":3093,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["moduleref.get(catscontroller",{"_index":6268,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["moduleref.get(sampleservice",{"_index":6267,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["modules",{"_index":259,"title":{"modules.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"modules/EncryptionModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/ImportUserModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/RocketChatModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["modules/authentication/auth.module",{"_index":3642,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["modules/authorization/authorization.module.ts",{"_index":6029,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers",{"_index":6027,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers.module.ts",{"_index":6028,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/files/files.module",{"_index":3622,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["modules/management/management.module",{"_index":3621,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["modules/user",{"_index":3645,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["moment",{"_index":4308,"title":{},"body":{"dependencies.html":{}}}],["mongo",{"_index":756,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongo.ensureinstance",{"_index":3100,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongo.geturi",{"_index":3101,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongod",{"_index":3120,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application.html":{}}}],["mongodatabasemoduleoptions",{"_index":3087,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/typealiases.html":{}}}],["mongodb",{"_index":457,"title":{},"body":{"classes/BaseFactory.html":{},"injectables/DatabaseManagementService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongoexport",{"_index":1789,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["mongoimport",{"_index":1815,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["mongomemorydatabasemodule",{"_index":3082,"title":{"modules/MongoMemoryDatabaseModule.html":{}},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mongomemorydatabasemodule.forroot",{"_index":3668,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mongomemoryserver",{"_index":3094,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongomemoryserver.create",{"_index":3099,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongoose",{"_index":3659,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["monitoring",{"_index":5831,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["moodle",{"_index":4326,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":4491,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["moreover",{"_index":5031,"title":{},"body":{"license.html":{}}}],["mostly",{"_index":6177,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mount",{"_index":4467,"title":{},"body":{"index.html":{}}}],["mounted",{"_index":4458,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mounts",{"_index":5281,"title":{},"body":{"todo.html":{}}}],["move",{"_index":578,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["moveelement",{"_index":1201,"title":{},"body":{"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{}}}],["moveelement(dashboardid",{"_index":1204,"title":{},"body":{"controllers/DashboardController.html":{}}}],["moveelement(from",{"_index":1283,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["moveelementondashboard",{"_index":1621,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["moveelementondashboard(dashboardid",{"_index":1627,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["moveelementparams",{"_index":1205,"title":{"classes/MoveElementParams.html":{}},"body":{"controllers/DashboardController.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{}}}],["moveelementposition",{"_index":3129,"title":{"classes/MoveElementPosition.html":{}},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{}}}],["ms",{"_index":1925,"title":{},"body":{"controllers/DelayController.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["msg",{"_index":2359,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["much",{"_index":5854,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multilayered",{"_index":5709,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multiple",{"_index":2436,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mylearningapp",{"_index":5748,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mylearningappadapter",{"_index":5750,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["n",{"_index":562,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["name",{"_index":114,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"classes/BoardElementResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"interfaces/InlineAttachment.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"injectables/PermissionService.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerTestModule.html":{},"injectables/StorageProviderRepo.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["name.response",{"_index":2828,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{}}}],["name.response.ts",{"_index":4389,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["named",{"_index":4534,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nameonly",{"_index":1763,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["names",{"_index":1791,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"controllers/NewsController.html":{},"classes/UserMatchResponse.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["naming",{"_index":5331,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nanoid",{"_index":4328,"title":{},"body":{"dependencies.html":{}}}],["native",{"_index":4349,"title":{},"body":{"dependencies.html":{}}}],["nature",{"_index":4845,"title":{},"body":{"license.html":{}}}],["ne",{"_index":4026,"title":{},"body":{"classes/TaskScope.html":{}}}],["necessary",{"_index":5189,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["need",{"_index":2724,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["needed",{"_index":4074,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["neededpermission",{"_index":3765,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["needs",{"_index":5726,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nest",{"_index":2383,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nest/legacy",{"_index":5320,"title":{},"body":{"todo.html":{}}}],["nest:build",{"_index":5569,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:build:all",{"_index":5574,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:console",{"_index":5595,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:console:dev",{"_index":5596,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:docs:build",{"_index":5588,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:docs:serve",{"_index":5591,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:lint",{"_index":5608,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:lint:fix",{"_index":5611,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:prebuild",{"_index":5568,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start",{"_index":5577,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:debug",{"_index":5582,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:dev",{"_index":5579,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:prod",{"_index":5585,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test",{"_index":5453,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:all",{"_index":5603,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:cov",{"_index":5604,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:debug",{"_index":5607,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:e2e",{"_index":5456,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:spec",{"_index":5455,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:watch",{"_index":5605,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nested",{"_index":3482,"title":{},"body":{"injectables/PermissionService.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["nestexpress.set('feathersapp",{"_index":2164,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["nestinterceptor",{"_index":1920,"title":{},"body":{"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["nestjs",{"_index":811,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"injectables/ConsoleWriterService.html":{},"classes/DatabaseManagementConsole.html":{},"classes/DeleteFilesConsole.html":{},"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/Options.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"classes/TestBootstrapConsole.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["nestjs/clithen",{"_index":5630,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nestjs/common",{"_index":19,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"injectables/BoardMapper.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"controllers/CourseController.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"controllers/ImportUserController.html":{},"modules/ImportUserModule.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"injectables/LessonRepo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PermissionService.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"injectables/StorageProviderRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1923,"title":{},"body":{"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/InterceptorModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":277,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":4231,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":275,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":4233,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":629,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusResponse.html":{},"controllers/CourseController.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/PatchGroupParams.html":{},"classes/ResolvedUser.html":{},"controllers/RoomsController.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskStatusResponse.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"controllers/UserController.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatchResponse.html":{},"dependencies.html":{}}}],["nestjs/testing",{"_index":1922,"title":{},"body":{"controllers/DelayController.html":{},"classes/TestBootstrapConsole.html":{}}}],["nestjs/testing.test",{"_index":6258,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["net",{"_index":4487,"title":{},"body":{"index.html":{}}}],["network",{"_index":4573,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["neutral",{"_index":5866,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["never",{"_index":317,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["new",{"_index":149,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"interfaces/Board.html":{},"injectables/BoardMapper.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BusinessError.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"classes/CourseMapper.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"controllers/ImportUserController.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"modules/ManagementModule.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PermissionService.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"injectables/RoomsUc.html":{},"classes/SchoolInfoMapper.html":{},"entities/SchoolNews.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/Submission.html":{},"classes/TargetInfoMapper.html":{},"entities/Task.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"entities/User.html":{},"classes/UserInfoMapper.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newelement",{"_index":1387,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["newfactory",{"_index":473,"title":{},"body":{"classes/BaseFactory.html":{}}}],["newgroupname",{"_index":1338,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["newly",{"_index":6075,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["newpropsfactory",{"_index":471,"title":{},"body":{"classes/BaseFactory.html":{}}}],["newrooms",{"_index":1365,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["newrooms.foreach((room",{"_index":1367,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["news",{"_index":1062,"title":{"entities/News.html":{}},"body":{"entities/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["news.content",{"_index":3254,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.controller",{"_index":3285,"title":{},"body":{"modules/NewsModule.html":{}}}],["news.controller.ts",{"_index":4093,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["news.controller.ts:22",{"_index":4097,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["news.createdat",{"_index":3260,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.createinstance(targetmodel",{"_index":3405,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news.displayat",{"_index":3255,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.id",{"_index":3252,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.params.ts",{"_index":1171,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{},"miscellaneous/variables.html":{}}}],["news.params.ts:14",{"_index":4155,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:15",{"_index":1192,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:21",{"_index":1175,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{}}}],["news.params.ts:28",{"_index":4154,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:29",{"_index":1183,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:37",{"_index":1191,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:44",{"_index":1186,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.permissions",{"_index":3262,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.source",{"_index":3256,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.sourcedescription",{"_index":3257,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.target.id",{"_index":3258,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.targetmodel",{"_index":3259,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.title",{"_index":3253,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.updatedat",{"_index":3261,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.updater",{"_index":3263,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news[key",{"_index":3425,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news].param.ts",{"_index":6041,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news].response.dto",{"_index":6046,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news_add_target_schools",{"_index":3289,"title":{},"body":{"modules/NewsModule.html":{}}}],["news_create",{"_index":3403,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news_edit",{"_index":3398,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["news_sources",{"_index":3223,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"miscellaneous/variables.html":{}}}],["news_sources[number",{"_index":3225,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{}}}],["news_view",{"_index":3397,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newscontroller",{"_index":3155,"title":{"controllers/NewsController.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{}}}],["newscount",{"_index":3413,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsentities",{"_index":3316,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["newsentities.filter((news",{"_index":3323,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["newsentity",{"_index":3313,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["newsfilterquery",{"_index":3164,"title":{"classes/NewsFilterQuery.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"controllers/TeamNewsController.html":{}}}],["newsid",{"_index":3163,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newslist",{"_index":3189,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"controllers/TeamNewsController.html":{}}}],["newslist.length",{"_index":3418,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newslist.map((news",{"_index":3193,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["newslist.map(async",{"_index":3415,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newslistresponse",{"_index":3178,"title":{"classes/NewsListResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newslistresponse(dtolist",{"_index":3194,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["newsmapper",{"_index":3180,"title":{"classes/NewsMapper.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"controllers/TeamNewsController.html":{}}}],["newsmapper.mapcreatenewstodomain(params",{"_index":3187,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapnewsscopetodomain(scope",{"_index":3191,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["newsmapper.maptoresponse(news",{"_index":3188,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapupdatenewstodomain(params",{"_index":3199,"title":{},"body":{"controllers/NewsController.html":{}}}],["newsmodule",{"_index":3275,"title":{"modules/NewsModule.html":{}},"body":{"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["newsrepo",{"_index":3280,"title":{"injectables/NewsRepo.html":{}},"body":{"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newsresponse",{"_index":3179,"title":{"classes/NewsResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{}}}],["newsscope",{"_index":3308,"title":{"classes/NewsScope.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{}}}],["newstarget",{"_index":1053,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"classes/TargetInfoMapper.html":{},"entities/TeamNews.html":{},"miscellaneous/typealiases.html":{}}}],["newstargetfilter",{"_index":3297,"title":{"interfaces/NewsTargetFilter.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{}}}],["newstargetmodel",{"_index":310,"title":{},"body":{"injectables/AuthorizationService.html":{},"entities/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"entities/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"miscellaneous/enumerations.html":{}}}],["newstargetmodel.course",{"_index":1092,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["newstargetmodel.school",{"_index":331,"title":{},"body":{"injectables/AuthorizationService.html":{},"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["newstargetmodel.team",{"_index":1095,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["newsuc",{"_index":3176,"title":{"injectables/NewsUc.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsUc.html":{},"controllers/TeamNewsController.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newsuc.getrequiredpermissions(ispublished",{"_index":3422,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsuc.getrequiredpermissions(unpublished",{"_index":3410,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newvar",{"_index":160,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["next",{"_index":45,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"entities/CourseNews.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LessonFactory.html":{},"modules/ManagementModule.html":{},"entities/News.html":{},"injectables/NewsUc.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"entities/SchoolNews.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"entities/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["next.handle().pipe",{"_index":4134,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["next.handle().pipe(tap",{"_index":2011,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["node",{"_index":2273,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":4452,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{}}}],["node_env=test",{"_index":3667,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["nodejs",{"_index":5930,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["nodeps",{"_index":4323,"title":{},"body":{"dependencies.html":{}}}],["nodeps.git",{"_index":4325,"title":{},"body":{"dependencies.html":{}}}],["nofutureavailabledate",{"_index":599,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{}}}],["non",{"_index":2042,"title":{},"body":{"classes/EncryptedStringType.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["noncommercially",{"_index":4882,"title":{},"body":{"license.html":{}}}],["none",{"_index":2820,"title":{},"body":{"classes/ImportUserFilterQuery.html":{},"miscellaneous/enumerations.html":{}}}],["nonemptytargets",{"_index":3433,"title":{},"body":{"injectables/NewsUc.html":{}}}],["normal",{"_index":4718,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["normally",{"_index":4913,"title":{},"body":{"license.html":{}}}],["not_found_error",{"_index":5523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["not_found_error_type",{"_index":5403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notation",{"_index":483,"title":{},"body":{"classes/BaseFactory.html":{}}}],["note",{"_index":358,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"modules/MongoMemoryDatabaseModule.html":{},"index.html":{}}}],["notfinished",{"_index":4081,"title":{},"body":{"injectables/TaskUC.html":{}}}],["notfound",{"_index":1633,"title":{},"body":{"injectables/DashboardUc.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["notfoundexception",{"_index":1294,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardUc.html":{},"injectables/FeathersAuthProvider.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["notfoundexception('no",{"_index":1358,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardUc.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["notfoundexception(`the",{"_index":3079,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["nothing",{"_index":5044,"title":{},"body":{"license.html":{}}}],["notice",{"_index":4691,"title":{},"body":{"license.html":{}}}],["notices",{"_index":4687,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":5032,"title":{},"body":{"license.html":{}}}],["notify",{"_index":5029,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":4977,"title":{},"body":{"license.html":{}}}],["nountildate",{"_index":1120,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["november",{"_index":4551,"title":{},"body":{"license.html":{}}}],["now",{"_index":1119,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/ICollectionFilePath.html":{},"classes/NewsScope.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["now.getfullyear()}_",{"_index":1835,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["now.getmonth",{"_index":1836,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["now}ms",{"_index":2013,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["npm",{"_index":5272,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["null",{"_index":2119,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"injectables/NewsUc.html":{},"entities/Submission.html":{},"entities/System.html":{},"entities/Task.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{}}}],["nullish",{"_index":2041,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["number",{"_index":37,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/BaseFactory.html":{},"classes/BoardTaskStatusResponse.html":{},"classes/BusinessError.html":{},"entities/Course.html":{},"classes/CourseFactory.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"entities/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IPagination.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"interfaces/JwtPayload.html":{},"classes/LessonFactory.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskStatusResponse.html":{},"classes/TaskWithStatusVo.html":{},"injectables/TimeoutInterceptor.html":{},"classes/ValidationError.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["numbered",{"_index":5170,"title":{},"body":{"license.html":{}}}],["numberoffiles",{"_index":1975,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["numberofstudents",{"_index":2717,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["numbers",{"_index":5364,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["nuxt",{"_index":5822,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["nvmrc",{"_index":5550,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["o",{"_index":1685,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["oauth",{"_index":4330,"title":{},"body":{"dependencies.html":{}}}],["oauth2",{"_index":4261,"title":{},"body":{"dependencies.html":{}}}],["object",{"_index":420,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/LessonFactory.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserMatch.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["object.assign(entity",{"_index":468,"title":{},"body":{"classes/BaseFactory.html":{}}}],["object.assign(this",{"_index":1082,"title":{},"body":{"entities/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/Submission.html":{},"entities/TeamNews.html":{}}}],["object.entries(params",{"_index":3424,"title":{},"body":{"injectables/NewsUc.html":{}}}],["object.setprototypeof(this",{"_index":57,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["object.values(constraint",{"_index":234,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["object.values(newstargetmodel",{"_index":1197,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"miscellaneous/variables.html":{}}}],["objectid",{"_index":348,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/CourseGroup.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"injectables/ParseObjectIdPipe.html":{}}}],["objectid().tohexstring",{"_index":5521,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["objectid().tostring",{"_index":1605,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["objectid(id",{"_index":469,"title":{},"body":{"classes/BaseFactory.html":{}}}],["objectid.createfromhexstring(id",{"_index":1425,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["objectid.createfromhexstring(props.id",{"_index":1433,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["objectid.isvalid(value",{"_index":3470,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["objects",{"_index":753,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["obligate",{"_index":5148,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":4896,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":4790,"title":{},"body":{"license.html":{}}}],["observable",{"_index":2004,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["obviously",{"_index":5778,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occasionally",{"_index":4881,"title":{},"body":{"license.html":{}}}],["occurred",{"_index":2361,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occurring",{"_index":5041,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":4945,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["odered",{"_index":3379,"title":{},"body":{"injectables/NewsUc.html":{}}}],["of.ts",{"_index":5358,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["offer",{"_index":4602,"title":{},"body":{"license.html":{}}}],["offered",{"_index":4903,"title":{},"body":{"license.html":{}}}],["offering",{"_index":4885,"title":{},"body":{"license.html":{}}}],["offers",{"_index":5593,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["official",{"_index":4706,"title":{},"body":{"license.html":{}}}],["offset",{"_index":1132,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/TaskRepo.html":{}}}],["ok/err",{"_index":6104,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["okay",{"_index":6188,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["old",{"_index":4485,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["older",{"_index":4628,"title":{},"body":{"license.html":{}}}],["omit",{"_index":3034,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["once",{"_index":5653,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["one",{"_index":1862,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/JwtStrategy.html":{},"injectables/NewsUc.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["oneday",{"_index":970,"title":{},"body":{"classes/CourseFactory.html":{},"miscellaneous/variables.html":{}}}],["ones",{"_index":6013,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["onetomany",{"_index":1418,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["onetomany('dashboardgridelementmodel",{"_index":1438,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["onetomany('submission",{"_index":2669,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["oneweekago",{"_index":4085,"title":{},"body":{"injectables/TaskUC.html":{}}}],["oneweekago.setdate(oneweekago.getdate",{"_index":4086,"title":{},"body":{"injectables/TaskUC.html":{}}}],["onlyactivecourses",{"_index":1125,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/DashboardUc.html":{}}}],["onlyreadcourses",{"_index":3805,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["onlywritecoursesids",{"_index":3804,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["onmoduledestroy",{"_index":3089,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["onto",{"_index":5766,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["onupdate",{"_index":382,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{}}}],["open",{"_index":6293,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["openapi",{"_index":4285,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["opencourseids",{"_index":3910,"title":{},"body":{"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["opencourses",{"_index":4078,"title":{},"body":{"injectables/TaskUC.html":{}}}],["opencourses.map((c",{"_index":4083,"title":{},"body":{"injectables/TaskUC.html":{}}}],["opened",{"_index":5583,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["operate",{"_index":5206,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["operated",{"_index":4889,"title":{},"body":{"license.html":{}}}],["operates",{"_index":6174,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["operating",{"_index":4726,"title":{},"body":{"license.html":{}}}],["operation",{"_index":4809,"title":{},"body":{"license.html":{}}}],["operations",{"_index":5841,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["operator",{"_index":3591,"title":{},"body":{"classes/Scope.html":{},"license.html":{}}}],["opportunity",{"_index":5155,"title":{},"body":{"license.html":{}}}],["opposed",{"_index":6368,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["ops",{"_index":5304,"title":{},"body":{"todo.html":{}}}],["optimization",{"_index":6054,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["optimizations",{"_index":6374,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["option",{"_index":3110,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["optional",{"_index":190,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"classes/BoardElementResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"interfaces/Mail.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementPosition.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PermissionService.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerTestModule.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"entities/System.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{}}}],["optionaldatathere",{"_index":6164,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["optionally",{"_index":1811,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["options",{"_index":72,"title":{"interfaces/Options.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/DatabaseManagementConsole.html":{},"modules/EncryptionModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"injectables/TaskRepo.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["options.collection",{"_index":1680,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["options.exchange",{"_index":3038,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["options.order",{"_index":3412,"title":{},"body":{"injectables/NewsUc.html":{}}}],["options.routingkey",{"_index":3043,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["options.symmetriccipherkey",{"_index":2061,"title":{},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{}}}],["options.ts",{"_index":2499,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["options.uri",{"_index":3040,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["options?.collection",{"_index":1679,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["options?.override",{"_index":1688,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["ora",{"_index":812,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["ora.ora",{"_index":808,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["order",{"_index":1130,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"injectables/DashboardUc.html":{},"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["orderby",{"_index":1135,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["orderby(bsondocuments",{"_index":1903,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["organization",{"_index":5057,"title":{},"body":{"license.html":{}}}],["organizations",{"_index":4651,"title":{},"body":{"license.html":{}}}],["oriented",{"_index":5655,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["origin",{"_index":4991,"title":{},"body":{"license.html":{}}}],["original",{"_index":4992,"title":{},"body":{"license.html":{}}}],["orm",{"_index":3118,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["orm.close",{"_index":6342,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["orm.io",{"_index":5641,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["orm/core",{"_index":356,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"entities/BaseFile.html":{},"entities/Course.html":{},"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"entities/Directory.html":{},"classes/EncryptedStringType.html":{},"entities/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"entities/Lesson.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"entities/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"entities/Role.html":{},"entities/School.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/StorageProvider.html":{},"entities/Submission.html":{},"injectables/SubmissionRepo.html":{},"entities/System.html":{},"entities/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"entities/User.html":{},"classes/UserMatch.html":{},"dependencies.html":{}}}],["orm/core/enums",{"_index":3307,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["orm/entitymanager",{"_index":6275,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["orm/mikro",{"_index":6097,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["orm/mongodb",{"_index":357,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementService.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FilesRepo.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"injectables/LessonRepo.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{},"dependencies.html":{}}}],["orm/nestjs",{"_index":3063,"title":{},"body":{"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"dependencies.html":{}}}],["os",{"_index":2229,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["os.eol",{"_index":2264,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["others",{"_index":2432,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["otherwise",{"_index":3107,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ours",{"_index":6004,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["out",{"_index":270,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DeleteFilesUc.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/ImportUserModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/NewsModule.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"license.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["outcome",{"_index":6198,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["outdated",{"_index":5284,"title":{},"body":{"todo.html":{}}}],["outgoing",{"_index":5857,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["output",{"_index":3607,"title":{},"body":{"classes/ServerConsole.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["outside",{"_index":1344,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["over",{"_index":5758,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["overall",{"_index":6319,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overhead",{"_index":5741,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overridden",{"_index":6157,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["override",{"_index":1672,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["overrideguard(jwtauthguard",{"_index":6325,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overrideprovider(authorizationservice",{"_index":6333,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overrides",{"_index":2063,"title":{},"body":{"modules/ErrorModule.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["overrides/configures",{"_index":834,"title":{},"body":{"modules/CoreModule.html":{}}}],["overriding",{"_index":5360,"title":{},"body":{"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["overview",{"_index":5249,"title":{"overview.html":{}},"body":{"overview.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overwritten",{"_index":6263,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["owned",{"_index":5086,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owner",{"_index":5696,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ownership",{"_index":3230,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owns",{"_index":3900,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["p",{"_index":5557,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["package",{"_index":4219,"title":{"dependencies.html":{}},"body":{"todo.html":{}}}],["packaged",{"_index":4838,"title":{},"body":{"license.html":{}}}],["packages",{"_index":5273,"title":{},"body":{"todo.html":{}}}],["packaging",{"_index":4719,"title":{},"body":{"license.html":{}}}],["page",{"_index":3442,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/PaginationQuery.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["pages",{"_index":3448,"title":{},"body":{"classes/PaginationQuery.html":{},"index.html":{}}}],["paginate",{"_index":2114,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["pagination",{"_index":1129,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["pagination.query",{"_index":5975,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pagination?.limit",{"_index":1134,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/TaskRepo.html":{}}}],["pagination?.skip",{"_index":1133,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/TaskRepo.html":{}}}],["pagination].query.ts",{"_index":6043,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationquery",{"_index":927,"title":{"classes/PaginationQuery.html":{}},"body":{"controllers/CourseController.html":{},"injectables/CourseUc.html":{},"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"classes/PaginationQuery.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationresponse",{"_index":1019,"title":{"classes/PaginationResponse.html":{}},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["paginationresponse:136",{"_index":3218,"title":{},"body":{"classes/NewsListResponse.html":{}}}],["paginationresponse:14",{"_index":1026,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/ImportUserListResponse.html":{},"classes/NewsListResponse.html":{},"classes/TaskListResponse.html":{}}}],["paginationresponse:17",{"_index":1025,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/ImportUserListResponse.html":{},"classes/NewsListResponse.html":{},"classes/TaskListResponse.html":{}}}],["paginationresponse:20",{"_index":1024,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/ImportUserListResponse.html":{},"classes/NewsListResponse.html":{},"classes/TaskListResponse.html":{}}}],["paginationresponse:59",{"_index":3858,"title":{},"body":{"classes/TaskListResponse.html":{}}}],["paginationresponse:61",{"_index":1023,"title":{},"body":{"classes/CourseMetadataListResponse.html":{}}}],["paginationresponse:65",{"_index":2825,"title":{},"body":{"classes/ImportUserListResponse.html":{}}}],["papaparse",{"_index":4333,"title":{},"body":{"dependencies.html":{}}}],["paper",{"_index":5234,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":5019,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":5097,"title":{},"body":{"license.html":{}}}],["parallel",{"_index":6272,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["param",{"_index":330,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"injectables/BsonConverter.html":{},"controllers/DashboardController.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DeleteFilesUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"controllers/ImportUserController.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/PermissionService.html":{},"controllers/RoomsController.html":{},"injectables/TaskRepo.html":{},"controllers/TeamNewsController.html":{}}}],["param('id",{"_index":1225,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"controllers/RoomsController.html":{}}}],["param('teamid",{"_index":4100,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["param)).rejects.tothrow(badrequestexception",{"_index":6248,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["param)).tothrow(badrequestexception",{"_index":6246,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["param.ts",{"_index":5974,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paramdisplayat",{"_index":3404,"title":{},"body":{"injectables/NewsUc.html":{}}}],["parameter",{"_index":2725,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"controllers/NewsController.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["parameters",{"_index":189,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"classes/BoardElementResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/ILogger.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PermissionService.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerTestModule.html":{},"injectables/StorageProviderRepo.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["params",{"_index":405,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"controllers/DashboardController.html":{},"injectables/DashboardUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"controllers/ImportUserController.html":{},"classes/LessonFactory.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["params(params",{"_index":447,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["params.content",{"_index":3271,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.course",{"_index":2976,"title":{},"body":{"classes/LessonFactory.html":{},"miscellaneous/variables.html":{}}}],["params.displayat",{"_index":3272,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.from",{"_index":1227,"title":{},"body":{"controllers/DashboardController.html":{}}}],["params.school",{"_index":978,"title":{},"body":{"classes/CourseFactory.html":{},"miscellaneous/variables.html":{}}}],["params.target",{"_index":3401,"title":{},"body":{"injectables/NewsUc.html":{}}}],["params.targetid",{"_index":3274,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.targetmodel",{"_index":3273,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.title",{"_index":1233,"title":{},"body":{"controllers/DashboardController.html":{},"classes/NewsMapper.html":{}}}],["params.to",{"_index":1228,"title":{},"body":{"controllers/DashboardController.html":{}}}],["params?.school",{"_index":977,"title":{},"body":{"classes/CourseFactory.html":{},"miscellaneous/variables.html":{}}}],["param|query].ts",{"_index":5973,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parent",{"_index":2711,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskWithStatusVo.html":{}}}],["parentids",{"_index":3901,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentids.courseids",{"_index":3955,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentids.creatorid",{"_index":3953,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentids.lessonids",{"_index":3957,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentidscope",{"_index":3952,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentidscope.bycourseids(parentids.courseids",{"_index":3956,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentidscope.bylessonids(parentids.lessonids",{"_index":3958,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentidscope.byonlycreatorid(parentids.creatorid",{"_index":3954,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parents",{"_index":2716,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskWithStatusVo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["parentsfinished",{"_index":3918,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentsfinished.bycourseids(parentids.finishedcourseids",{"_index":3919,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentsfinished.bylessonids(parentids.lessonidsoffinishedcourses",{"_index":3920,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentsopen",{"_index":3915,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentsopen.bycourseids(parentids.opencourseids",{"_index":3916,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentsopen.bylessonids(parentids.lessonidsofopencourses",{"_index":3917,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parse",{"_index":6023,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parsed",{"_index":6040,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parseobjectidpipe",{"_index":1215,"title":{"injectables/ParseObjectIdPipe.html":{}},"body":{"controllers/DashboardController.html":{},"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"injectables/ParseObjectIdPipe.html":{},"controllers/RoomsController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parser",{"_index":4254,"title":{},"body":{"dependencies.html":{}}}],["parsing",{"_index":5892,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["part",{"_index":2741,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["partial",{"_index":454,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"interfaces/ICreateNews.html":{},"interfaces/IFindOptions.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["partialtype",{"_index":4148,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["particular",{"_index":4710,"title":{},"body":{"license.html":{}}}],["parties",{"_index":4679,"title":{},"body":{"license.html":{}}}],["parts",{"_index":4748,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["party",{"_index":4890,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["party's",{"_index":5062,"title":{},"body":{"license.html":{}}}],["pascalcase",{"_index":6005,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pass",{"_index":2429,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/TaskAuthorizationService.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["passed",{"_index":449,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"miscellaneous/variables.html":{}}}],["passport",{"_index":2919,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":274,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":2921,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":2923,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":118,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"modules/ManagementModule.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["past",{"_index":1064,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["patch",{"_index":1214,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/ImportUserController.html":{},"controllers/NewsController.html":{}}}],["patch(':id",{"_index":3174,"title":{},"body":{"controllers/NewsController.html":{}}}],["patch(':id/element",{"_index":1212,"title":{},"body":{"controllers/DashboardController.html":{}}}],["patch(':id/match",{"_index":2791,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["patch(':id/moveelement",{"_index":1206,"title":{},"body":{"controllers/DashboardController.html":{}}}],["patchgroup",{"_index":1202,"title":{},"body":{"controllers/DashboardController.html":{}}}],["patchgroup(dashboardid",{"_index":1209,"title":{},"body":{"controllers/DashboardController.html":{}}}],["patchgroupparams",{"_index":1211,"title":{"classes/PatchGroupParams.html":{}},"body":{"controllers/DashboardController.html":{},"classes/PatchGroupParams.html":{}}}],["patching",{"_index":3473,"title":{},"body":{"classes/PatchGroupParams.html":{}}}],["patent",{"_index":5018,"title":{},"body":{"license.html":{}}}],["patents",{"_index":5081,"title":{},"body":{"license.html":{}}}],["path",{"_index":1817,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["path's",{"_index":5480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path.join(...paths",{"_index":2277,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["paths",{"_index":1802,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["pattern",{"_index":654,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["payload",{"_index":2916,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.ts",{"_index":2909,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["payment",{"_index":5127,"title":{},"body":{"license.html":{}}}],["peer",{"_index":4898,"title":{},"body":{"license.html":{}}}],["peers",{"_index":4901,"title":{},"body":{"license.html":{}}}],["per",{"_index":5989,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["performance",{"_index":5185,"title":{},"body":{"license.html":{}}}],["performing",{"_index":4736,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":5027,"title":{},"body":{"license.html":{}}}],["permission",{"_index":1068,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"entities/Role.html":{},"entities/SchoolNews.html":{},"injectables/TaskAuthorizationService.html":{},"entities/TeamNews.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["permission.includes('news",{"_index":3438,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permission.some((p",{"_index":3820,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["permissions",{"_index":312,"title":{},"body":{"injectables/AuthorizationService.html":{},"entities/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"injectables/PermissionService.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"entities/Role.html":{},"entities/SchoolNews.html":{},"injectables/TaskAuthorizationService.html":{},"entities/TeamNews.html":{},"controllers/UserController.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["permissions.every((p",{"_index":339,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["permissions.filter((permission",{"_index":3437,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permissions.includes(p",{"_index":3821,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["permissions.includes(permission",{"_index":3822,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["permissionservice",{"_index":3475,"title":{"injectables/PermissionService.html":{}},"body":{"injectables/PermissionService.html":{},"injectables/TaskAuthorizationService.html":{},"modules/TaskModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["permissive",{"_index":4820,"title":{},"body":{"license.html":{}}}],["permit",{"_index":4854,"title":{},"body":{"license.html":{}}}],["permits",{"_index":4620,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":4560,"title":{},"body":{"license.html":{}}}],["permittedcourses",{"_index":3788,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["permittedlessons",{"_index":3810,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["perpetuity",{"_index":4950,"title":{},"body":{"license.html":{}}}],["persist",{"_index":527,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FilesRepo.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persist(entity",{"_index":540,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/FilesRepo.html":{},"interfaces/IDashboardRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["persist/make",{"_index":6060,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["persistall",{"_index":528,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["persistall(entities",{"_index":542,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["persistallandflush",{"_index":529,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["persistallandflush(entities",{"_index":544,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["persistandflush",{"_index":530,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/FilesRepo.html":{},"interfaces/IDashboardRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["persistandflush(entity",{"_index":546,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/FilesRepo.html":{},"interfaces/IDashboardRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["persisted",{"_index":559,"title":{},"body":{"injectables/BaseRepo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persistence",{"_index":6063,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["persistent",{"_index":3056,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["persisting",{"_index":6155,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["person",{"_index":6192,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["personal",{"_index":4912,"title":{},"body":{"license.html":{}}}],["pertinent",{"_index":5146,"title":{},"body":{"license.html":{}}}],["phenomenon",{"_index":6074,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["physical",{"_index":4864,"title":{},"body":{"license.html":{}}}],["physically",{"_index":4879,"title":{},"body":{"license.html":{}}}],["pieces",{"_index":4592,"title":{},"body":{"license.html":{}}}],["pin",{"_index":6120,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["pipe",{"_index":146,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pipe/global",{"_index":4217,"title":{},"body":{"modules/ValidationModule.html":{}}}],["pipes",{"_index":5992,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["pipetransform",{"_index":3468,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["place",{"_index":4075,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{}}}],["plain",{"_index":754,"title":{},"body":{"injectables/BsonConverter.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["plaintextcontent",{"_index":250,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["plaintextmailcontent",{"_index":248,"title":{"interfaces/PlainTextMailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["platform",{"_index":2028,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["please",{"_index":3484,"title":{},"body":{"injectables/PermissionService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["plugin",{"_index":4279,"title":{},"body":{"dependencies.html":{}}}],["plus",{"_index":5066,"title":{},"body":{"license.html":{}}}],["point",{"_index":1177,"title":{},"body":{"classes/CreateNewsParams.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/UpdateNewsParams.html":{}}}],["pointer",{"_index":5229,"title":{},"body":{"license.html":{}}}],["policy",{"_index":6051,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pool",{"_index":4368,"title":{},"body":{"dependencies.html":{}}}],["populate",{"_index":3319,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/PermissionService.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["populated",{"_index":1072,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["populateroles",{"_index":4200,"title":{},"body":{"injectables/UserRepo.html":{}}}],["populateroles(roles",{"_index":4203,"title":{},"body":{"injectables/UserRepo.html":{}}}],["port",{"_index":5563,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["portion",{"_index":4906,"title":{},"body":{"license.html":{}}}],["pos",{"_index":1280,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardModelMapper.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["pos.x",{"_index":1341,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["pos.y",{"_index":1345,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["position",{"_index":1268,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{}}}],["position.groupindex",{"_index":1393,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["position.x",{"_index":1485,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["position.y",{"_index":1486,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["positionfromgridindex",{"_index":1248,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["positionfromgridindex(index",{"_index":1285,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["possesses",{"_index":4876,"title":{},"body":{"license.html":{}}}],["possession",{"_index":4836,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":5208,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["possible",{"_index":4484,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["post",{"_index":1708,"title":{},"body":{"controllers/DatabaseManagementController.html":{},"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["post('export",{"_index":1701,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["post('export/:collectionname",{"_index":1698,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["post('seed/:collectionname",{"_index":1704,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["post(`${this.options.uri}${path",{"_index":154,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["post(`${this.options.uri}/api/v1/login",{"_index":161,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["post(path",{"_index":153,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["postasadmin(path",{"_index":126,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["povider",{"_index":5296,"title":{},"body":{"todo.html":{}}}],["power",{"_index":4802,"title":{},"body":{"license.html":{}}}],["pr",{"_index":4503,"title":{},"body":{"index.html":{}}}],["practical",{"_index":4575,"title":{},"body":{"license.html":{}}}],["practice",{"_index":5101,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["practices",{"_index":6354,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["practices/layers/orm",{"_index":5302,"title":{},"body":{"todo.html":{}}}],["preamble",{"_index":4566,"title":{},"body":{"license.html":{}}}],["precise",{"_index":4635,"title":{},"body":{"license.html":{}}}],["preconditions",{"_index":4446,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["predecessor",{"_index":5063,"title":{},"body":{"license.html":{}}}],["predefined",{"_index":6158,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["preexisting",{"_index":6207,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["preferred",{"_index":4702,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["prefix",{"_index":923,"title":{},"body":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{},"controllers/DatabaseManagementController.html":{},"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"controllers/RoomsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"index.html":{},"todo.html":{}}}],["preloaded",{"_index":6385,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["preloading",{"_index":6384,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["prepare",{"_index":3010,"title":{},"body":{"injectables/Logger.html":{}}}],["prepended",{"_index":4482,"title":{},"body":{"index.html":{}}}],["present",{"_index":5162,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["presentation",{"_index":5712,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["presents",{"_index":4695,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":4987,"title":{},"body":{"license.html":{}}}],["prettier",{"_index":5615,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["prevent",{"_index":374,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{}}}],["prevented",{"_index":4943,"title":{},"body":{"license.html":{}}}],["previous",{"_index":5065,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["price",{"_index":4587,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":5129,"title":{},"body":{"license.html":{}}}],["primarykey",{"_index":350,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{}}}],["primaryrolesearchoperation",{"_index":2597,"title":{},"body":{"interfaces/IRoleProperties.html":{},"entities/Role.html":{}}}],["primaryrolesearchoperation'})@unique",{"_index":3537,"title":{},"body":{"entities/Role.html":{}}}],["principle",{"_index":6271,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["principles",{"_index":5654,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["principles/command",{"_index":6106,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["prior",{"_index":1970,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"license.html":{}}}],["prisma",{"_index":6370,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["private",{"_index":35,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"interfaces/Board.html":{},"injectables/ConsoleWriterService.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IGridElement.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"injectables/JwtStrategy.html":{},"classes/LessonScope.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/PermissionService.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskFactory.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserRepo.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["privatedevice",{"_index":2954,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["problem",{"_index":4517,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["problems",{"_index":5166,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["procedures",{"_index":4938,"title":{},"body":{"license.html":{}}}],["process",{"_index":5859,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["processed",{"_index":5948,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["processes",{"_index":5886,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["processing",{"_index":5764,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["procuring",{"_index":5119,"title":{},"body":{"license.html":{}}}],["produce",{"_index":4728,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["produces",{"_index":6152,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["product",{"_index":4865,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["production",{"_index":3632,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["products",{"_index":5130,"title":{},"body":{"license.html":{}}}],["program",{"_index":4583,"title":{},"body":{"license.html":{}}}],["program's",{"_index":4813,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":5241,"title":{},"body":{"license.html":{}}}],["programming",{"_index":4711,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["programs",{"_index":4593,"title":{},"body":{"license.html":{}}}],["prohibit",{"_index":4772,"title":{},"body":{"license.html":{},"todo.html":{}}}],["prohibiting",{"_index":4799,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":5124,"title":{},"body":{"license.html":{}}}],["project",{"_index":4532,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prom",{"_index":4337,"title":{},"body":{"dependencies.html":{}}}],["prometheus",{"_index":4339,"title":{},"body":{"dependencies.html":{}}}],["prominent",{"_index":4698,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":4690,"title":{},"body":{"license.html":{}}}],["promise",{"_index":77,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"controllers/CourseController.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"controllers/DashboardController.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"controllers/ImportUserController.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"injectables/StorageProviderRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"controllers/UserController.html":{},"injectables/UserRepo.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["promise((resolve",{"_index":1926,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["promise.all",{"_index":1547,"title":{},"body":{"injectables/DashboardModelMapper.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/NewsUc.html":{},"injectables/TaskAuthorizationService.html":{},"miscellaneous/variables.html":{}}}],["promise.all(gridelement.getreferences().map((ref",{"_index":1573,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["promise.all(referencemodels.map((ref",{"_index":1539,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["promise.resolve",{"_index":2276,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["promises",{"_index":2255,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["promisify",{"_index":4278,"title":{},"body":{"dependencies.html":{}}}],["propagate",{"_index":4659,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":5048,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":4671,"title":{},"body":{"license.html":{}}}],["properly",{"_index":4432,"title":{},"body":{"miscellaneous/functions.html":{}}}],["properties",{"_index":9,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusResponse.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"entities/Course.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"entities/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"interfaces/EncryptionModuleOptions.html":{},"interfaces/FeathersError.html":{},"entities/File.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"classes/LessonScope.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"interfaces/MailServiceOptions.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/PatchGroupParams.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"injectables/RoleRepo.html":{},"entities/School.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"entities/StorageProvider.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"entities/System.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusResponse.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"classes/ValidationError.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["properties)mongodb",{"_index":6367,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["propertiestopopulate",{"_index":2294,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{}}}],["property",{"_index":354,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"entities/BaseFile.html":{},"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"entities/Course.html":{},"entities/CourseNews.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"entities/Directory.html":{},"entities/File.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"entities/Lesson.html":{},"entities/News.html":{},"entities/Role.html":{},"entities/School.html":{},"entities/SchoolNews.html":{},"entities/StorageProvider.html":{},"entities/Submission.html":{},"entities/System.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"entities/User.html":{},"classes/UserMatch.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["property()@index({name",{"_index":3536,"title":{},"body":{"entities/Role.html":{},"entities/User.html":{}}}],["property({fieldname",{"_index":3676,"title":{},"body":{"entities/StorageProvider.html":{},"classes/UserMatch.html":{}}}],["property({onupdate",{"_index":389,"title":{},"body":{"entities/BaseEntityWithTimestamps.html":{}}}],["propertydecorator",{"_index":4433,"title":{},"body":{"miscellaneous/functions.html":{}}}],["props",{"_index":460,"title":{},"body":{"classes/BaseFactory.html":{},"entities/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"classes/ImportUserResponse.html":{},"entities/News.html":{},"injectables/NewsUc.html":{},"entities/SchoolNews.html":{},"entities/Submission.html":{},"entities/TeamNews.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["props.accesskeyid",{"_index":2614,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{}}}],["props.alias",{"_index":3737,"title":{},"body":{"entities/System.html":{}}}],["props.availabledate",{"_index":2673,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["props.bucket",{"_index":519,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{}}}],["props.classnames",{"_index":2836,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{}}}],["props.classnames.length",{"_index":2563,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["props.color",{"_index":910,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.colums",{"_index":1347,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["props.comment",{"_index":2644,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["props.content",{"_index":1079,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["props.course",{"_index":991,"title":{},"body":{"entities/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Lesson.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["props.creator",{"_index":523,"title":{},"body":{"entities/BaseFile.html":{},"entities/CourseNews.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{}}}],["props.deletedat",{"_index":515,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{}}}],["props.description",{"_index":900,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.displayat",{"_index":1081,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["props.duedate",{"_index":2675,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["props.email",{"_index":2558,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"entities/User.html":{},"classes/UserMatch.html":{}}}],["props.endpointurl",{"_index":2612,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{}}}],["props.externalid",{"_index":1086,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["props.firstname",{"_index":2554,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"entities/User.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{}}}],["props.flagged",{"_index":2567,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["props.grade",{"_index":2648,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["props.gradecomment",{"_index":2650,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["props.grid.foreach((element",{"_index":1349,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["props.gridelements",{"_index":1436,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["props.hidden",{"_index":2575,"title":{},"body":{"interfaces/ILessonProperties.html":{},"entities/Lesson.html":{}}}],["props.id",{"_index":1320,"title":{},"body":{"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"classes/GridElement.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IGridElement.html":{}}}],["props.importuserid",{"_index":2830,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{}}}],["props.lastname",{"_index":2556,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"entities/User.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{}}}],["props.ldapdn",{"_index":2550,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["props.ldapid",{"_index":2552,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["props.lesson",{"_index":2679,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["props.loginname",{"_index":2832,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/UserMatchResponse.html":{}}}],["props.match",{"_index":2565,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/UserMatch.html":{}}}],["props.matchedby",{"_index":2541,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{}}}],["props.name",{"_index":899,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"entities/Lesson.html":{},"entities/Role.html":{},"entities/School.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{}}}],["props.permissions",{"_index":2600,"title":{},"body":{"interfaces/IRoleProperties.html":{},"entities/Role.html":{}}}],["props.private",{"_index":2676,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["props.references.sort(this.sortreferences",{"_index":1322,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["props.region",{"_index":2618,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{}}}],["props.rolenames",{"_index":2834,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{}}}],["props.rolenames.length",{"_index":2560,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["props.roles",{"_index":2602,"title":{},"body":{"interfaces/IRoleProperties.html":{},"entities/Role.html":{}}}],["props.school",{"_index":903,"title":{},"body":{"entities/Course.html":{},"entities/CourseNews.html":{},"interfaces/ICourseProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IUserProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"entities/User.html":{}}}],["props.secretaccesskey",{"_index":2616,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{}}}],["props.source",{"_index":1088,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["props.sourcedescription",{"_index":1090,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["props.startdate",{"_index":914,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.storagefilename",{"_index":517,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{}}}],["props.storageprovider",{"_index":521,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{}}}],["props.student",{"_index":2642,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["props.students",{"_index":904,"title":{},"body":{"entities/Course.html":{},"entities/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{}}}],["props.substitutionteachers",{"_index":908,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.target",{"_index":1084,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["props.task",{"_index":2646,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["props.teachers",{"_index":906,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.title",{"_index":1078,"title":{},"body":{"entities/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["props.type",{"_index":3734,"title":{},"body":{"entities/System.html":{}}}],["props.untildate",{"_index":912,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.updater",{"_index":1083,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["props.url",{"_index":3735,"title":{},"body":{"entities/System.html":{}}}],["props.user",{"_index":2539,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["props.userid",{"_index":1353,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"classes/UserMatchResponse.html":{}}}],["propsfactory",{"_index":398,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["protect",{"_index":4597,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["protected",{"_index":397,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"injectables/DashboardRepo.html":{},"injectables/FilesRepo.html":{},"interfaces/IDashboardRepo.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"injectables/TimeoutInterceptor.html":{}}}],["protecting",{"_index":4781,"title":{},"body":{"license.html":{}}}],["protection",{"_index":4825,"title":{},"body":{"license.html":{}}}],["protocol",{"_index":5647,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["protocols",{"_index":4965,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prototype",{"_index":55,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["prove",{"_index":5186,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["provide",{"_index":1933,"title":{},"body":{"controllers/DelayController.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"modules/ImportUserModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/RocketChatModule.html":{},"modules/ValidationModule.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["provided",{"_index":326,"title":{},"body":{"injectables/AuthorizationService.html":{},"modules/ErrorModule.html":{},"injectables/Logger.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["provider",{"_index":3013,"title":{},"body":{"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["providers",{"_index":272,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"controllers/DelayController.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/ImportUserModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/RocketChatModule.html":{},"modules/ServerConsoleModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["provides",{"_index":3008,"title":{},"body":{"injectables/Logger.html":{},"injectables/NewsUc.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["providing",{"_index":832,"title":{},"body":{"modules/CoreModule.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["provision",{"_index":4978,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":5024,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":5173,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":5175,"title":{},"body":{"license.html":{}}}],["public",{"_index":73,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"controllers/DelayController.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"controllers/ServerController.html":{},"injectables/SymetricKeyEncryptionService.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["publicity",{"_index":4993,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":4626,"title":{},"body":{"license.html":{}}}],["publish",{"_index":4817,"title":{},"body":{"license.html":{},"todo.html":{}}}],["published",{"_index":1182,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsUc.html":{},"controllers/UserController.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pull",{"_index":4502,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{}}}],["pulled",{"_index":5804,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["purpose",{"_index":4413,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["purposes",{"_index":4916,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["pursuant",{"_index":5117,"title":{},"body":{"license.html":{}}}],["put",{"_index":5265,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["putting",{"_index":6062,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["qs",{"_index":4342,"title":{},"body":{"dependencies.html":{}}}],["qualify",{"_index":5037,"title":{},"body":{"license.html":{}}}],["quality",{"_index":5184,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["queries",{"_index":3354,"title":{},"body":{"classes/NewsScope.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["queries.length",{"_index":3358,"title":{},"body":{"classes/NewsScope.html":{}}}],["queries/requests",{"_index":5870,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["query",{"_index":930,"title":{},"body":{"controllers/CourseController.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"injectables/FeathersAuthProvider.html":{},"classes/GlobalValidationPipe.html":{},"controllers/ImportUserController.html":{},"classes/LessonScope.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"controllers/TeamNewsController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["query('x",{"_index":1230,"title":{},"body":{"controllers/DashboardController.html":{}}}],["query('y",{"_index":1231,"title":{},"body":{"controllers/DashboardController.html":{}}}],["query.targetid",{"_index":3268,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.targetmodel",{"_index":3266,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.unpublished",{"_index":3270,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query/body",{"_index":6039,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["query/empty",{"_index":3596,"title":{},"body":{"classes/Scope.html":{}}}],["queryoptions",{"_index":1131,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["queryordermap",{"_index":1111,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["querys",{"_index":3663,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["r.id",{"_index":5519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rabbitmq",{"_index":3028,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{}}}],["rabbitmq:3.8.9",{"_index":5560,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["rabbitmq_url",{"_index":5553,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["rabbitmqmodule",{"_index":3026,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["rabbitmqmodule.forroot(rabbitmqmodule",{"_index":3036,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["rabbitmqmoduleoptions",{"_index":3033,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["random",{"_index":2225,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["rates",{"_index":5833,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["react",{"_index":4280,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":2237,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"controllers/NewsController.html":{},"injectables/TaskAuthorizationService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["readable",{"_index":4861,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["readcourseids",{"_index":3801,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["readcourses",{"_index":3796,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["readcourses.map((c",{"_index":3802,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["readdir",{"_index":2210,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["readdir(folderpath",{"_index":2232,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["readfile",{"_index":2211,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["readfile(filepath",{"_index":2235,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["readily",{"_index":5106,"title":{},"body":{"license.html":{}}}],["reading",{"_index":4969,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["readlessons",{"_index":3807,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["readonly",{"_index":71,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"classes/BusinessError.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"controllers/DashboardController.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"injectables/JwtStrategy.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["ready",{"_index":6090,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["real",{"_index":6270,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["really",{"_index":879,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["reason",{"_index":5115,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":4877,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["receipt",{"_index":5035,"title":{},"body":{"license.html":{}}}],["receive",{"_index":4590,"title":{},"body":{"license.html":{}}}],["received",{"_index":4841,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["receives",{"_index":5053,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":5121,"title":{},"body":{"license.html":{}}}],["recipient",{"_index":4949,"title":{},"body":{"license.html":{}}}],["recipient's",{"_index":5113,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":253,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"license.html":{}}}],["recognized",{"_index":4707,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":6399,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["recommendations",{"_index":6393,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["recommended",{"_index":6391,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["record",{"_index":30,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/ValidationError.html":{},"miscellaneous/typealiases.html":{}}}],["recursively",{"_index":2245,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"injectables/PermissionService.html":{}}}],["red",{"_index":5294,"title":{},"body":{"todo.html":{}}}],["redis",{"_index":2948,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"dependencies.html":{}}}],["redisidentifier",{"_index":2955,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["redistribute",{"_index":5223,"title":{},"body":{"license.html":{}}}],["reduce",{"_index":5773,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reduces",{"_index":5902,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["redundant",{"_index":4430,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refactor",{"_index":1607,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["refactoring",{"_index":6176,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["refactorings",{"_index":5802,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refer",{"_index":6072,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["reference",{"_index":1071,"title":{},"body":{"entities/CourseNews.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DatabaseManagementUc.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/INewsProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"classes/UpdateMatchParams.html":{},"classes/UserMatch.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reference.create(props.school",{"_index":2546,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["reference.create(props.system",{"_index":2548,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["reference.getmetadata",{"_index":1330,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardModelMapper.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["referenced",{"_index":1074,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["referencedid",{"_index":1308,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["referenceforindex",{"_index":1396,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["referenceids",{"_index":1413,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["referencemodels",{"_index":1537,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["references",{"_index":1319,"title":{},"body":{"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"classes/GridElement.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"modules/ImportUserModule.html":{},"classes/UserMatch.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["references[position.groupindex",{"_index":1397,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["referring",{"_index":4586,"title":{},"body":{"license.html":{}}}],["refers",{"_index":4641,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":4346,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["reflects",{"_index":6079,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["refrain",{"_index":5150,"title":{},"body":{"license.html":{}}}],["regard",{"_index":4974,"title":{},"body":{"license.html":{}}}],["regarding",{"_index":4478,"title":{},"body":{"index.html":{}}}],["regardless",{"_index":4837,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["regenerate",{"_index":4749,"title":{},"body":{"license.html":{}}}],["regex",{"_index":5454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["region",{"_index":2191,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{}}}],["registernewuser(creatorid",{"_index":6112,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["regularfiles",{"_index":2317,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["reimplement",{"_index":6300,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reinstated",{"_index":5023,"title":{},"body":{"license.html":{}}}],["rejected",{"_index":6310,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["related",{"_index":1185,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["relates",{"_index":6095,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["relation",{"_index":6379,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["relations",{"_index":5590,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["relationship",{"_index":2743,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"license.html":{}}}],["relative",{"_index":1816,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["release",{"_index":6287,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["released",{"_index":4633,"title":{},"body":{"license.html":{}}}],["releasing",{"_index":4623,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":4830,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["relicensing",{"_index":4634,"title":{},"body":{"license.html":{}}}],["relies",{"_index":6053,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reload",{"_index":5312,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["relying",{"_index":5105,"title":{},"body":{"license.html":{}}}],["remain",{"_index":4895,"title":{},"body":{"license.html":{}}}],["remains",{"_index":4584,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["remote",{"_index":5152,"title":{},"body":{"license.html":{}}}],["remotely",{"_index":5154,"title":{},"body":{"license.html":{}}}],["removal",{"_index":4975,"title":{},"body":{"license.html":{}}}],["remove",{"_index":531,"title":{},"body":{"injectables/BaseRepo.html":{},"classes/DeleteFilesConsole.html":{},"injectables/FilesRepo.html":{},"classes/GlobalValidationPipe.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"modules/InterceptorModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/StorageProviderRepo.html":{},"entities/System.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["remove(entity",{"_index":548,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["removeall",{"_index":532,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["removeall(entities",{"_index":550,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["removeallandflush",{"_index":533,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["removeallandflush(entities",{"_index":552,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["removeandflush",{"_index":534,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["removeandflush(entity",{"_index":554,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["removed",{"_index":1969,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["removedeletedfilesdata",{"_index":1939,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{}}}],["removedeletedfilesdata(removedsince",{"_index":1966,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["removedeletedfilesdata(removedsincedays",{"_index":1943,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["removedirrecursive",{"_index":2212,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["removedirrecursive(folderpath",{"_index":2242,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["removedsince",{"_index":1956,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{}}}],["removedsince.setdate(removedsince.getdate",{"_index":1957,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["removedsincedays",{"_index":1950,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["removefromposition",{"_index":1249,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["removefromposition(position",{"_index":1287,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["removegroupmoderator(groupname",{"_index":103,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["removematch",{"_index":2780,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["removematch(importuserid",{"_index":2785,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["removereference",{"_index":2445,"title":{},"body":{"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["removereference(reference",{"_index":1304,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["removereferencebyindex",{"_index":2446,"title":{},"body":{"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["removereferencebyindex(index",{"_index":1303,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["removeroomsnotinlist",{"_index":1250,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["removeroomsnotinlist(roomlist",{"_index":1289,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["removes",{"_index":2244,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["rename",{"_index":2670,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["renamegroupondashboard",{"_index":1622,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["renamegroupondashboard(dashboardid",{"_index":1629,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["rendered",{"_index":4424,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["repair",{"_index":5191,"title":{},"body":{"license.html":{}}}],["repeats",{"_index":3074,"title":{},"body":{"modules/ManagementModule.html":{}}}],["replace",{"_index":5774,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["replaced",{"_index":5315,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["replacing",{"_index":6145,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["replikaset",{"_index":5299,"title":{},"body":{"todo.html":{}}}],["replyto",{"_index":256,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["repo",{"_index":5330,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repo.integration.spec",{"_index":1139,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["repo.integration.spec.js",{"_index":6277,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["repo.ts",{"_index":5982,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reponse",{"_index":6361,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["report",{"_index":1682,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{},"additional-documentation/nestjs-application.html":{}}}],["reported",{"_index":6171,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["reporting",{"_index":5728,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reports",{"_index":6292,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["repositories",{"_index":5276,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repository",{"_index":4444,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["represent",{"_index":4934,"title":{},"body":{"license.html":{}}}],["representation",{"_index":5618,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["req",{"_index":6327,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["req.user",{"_index":6329,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["request",{"_index":2131,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TimeoutInterceptor.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["request(app.gethttpserver()).delete(`/news/${newsid}`).expect(404",{"_index":6356,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["request(app.gethttpserver()).get(`/news`).expect(200",{"_index":6347,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["request.user.user",{"_index":5283,"title":{},"body":{"todo.html":{}}}],["request/response",{"_index":5826,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["request/response/error",{"_index":5834,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["request_timeout",{"_index":4124,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["requested",{"_index":3080,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["requests",{"_index":2871,"title":{},"body":{"modules/InterceptorModule.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["requesttimeoutexception",{"_index":4131,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["require",{"_index":4743,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["require('../../../../../../src/services/authentication/logic/whitelist",{"_index":2950,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["require('../../../../../src/services/authentication/configuration",{"_index":2883,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["require('../../../../config/globals",{"_index":2330,"title":{},"body":{"interfaces/GlobalConstants.html":{}}}],["require('./tsconfig.json",{"_index":5487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('rimraf",{"_index":2260,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["require('ts",{"_index":5485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1676,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"classes/GlobalValidationPipe.html":{},"injectables/JwtValidationAdapter.html":{},"interfaces/Options.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["requiredpermissions",{"_index":3421,"title":{},"body":{"injectables/NewsUc.html":{}}}],["requirement",{"_index":4831,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":4897,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["requires",{"_index":2168,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["requiring",{"_index":4654,"title":{},"body":{"license.html":{}}}],["reset",{"_index":269,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"classes/DatabaseManagementConsole.html":{},"modules/DatabaseManagementModule.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/ImportUserModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/NewsModule.html":{},"interfaces/Options.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"overview.html":{},"additional-documentation/nestjs-application.html":{}}}],["resolve",{"_index":3481,"title":{},"body":{"injectables/PermissionService.html":{}}}],["resolved",{"_index":4923,"title":{},"body":{"license.html":{}}}],["resolveduser",{"_index":3497,"title":{"classes/ResolvedUser.html":{}},"body":{"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"controllers/UserController.html":{}}}],["resolvedusermapper",{"_index":3507,"title":{"classes/ResolvedUserMapper.html":{}},"body":{"classes/ResolvedUserMapper.html":{},"controllers/UserController.html":{}}}],["resolvedusermapper.maptoresponse(user",{"_index":4173,"title":{},"body":{"controllers/UserController.html":{}}}],["resolvepermissions",{"_index":3477,"title":{},"body":{"injectables/PermissionService.html":{}}}],["resolvepermissions(user",{"_index":3479,"title":{},"body":{"injectables/PermissionService.html":{}}}],["resolvepermissionsbyroles",{"_index":3478,"title":{},"body":{"injectables/PermissionService.html":{}}}],["resolvepermissionsbyroles(inputroles",{"_index":3486,"title":{},"body":{"injectables/PermissionService.html":{}}}],["resolves",{"_index":3301,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["resources",{"_index":6288,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["respect",{"_index":4806,"title":{},"body":{"license.html":{}}}],["respond",{"_index":5326,"title":{},"body":{"todo.html":{}}}],["responds",{"_index":3166,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["response",{"_index":38,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"controllers/NewsController.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["response.body",{"_index":6348,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["response.status(errorresponse.code).json(errorresponse",{"_index":2411,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["response.ts",{"_index":5977,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["response?.data",{"_index":152,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["response].ts",{"_index":5976,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responsejson",{"_index":164,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["responsejson.data.authtoken",{"_index":166,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["responsejson.data.userid",{"_index":165,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["responses",{"_index":5762,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsibilities",{"_index":6037,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responsibility",{"_index":5688,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsible",{"_index":5054,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["respository",{"_index":6059,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["ressource",{"_index":5524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ressources",{"_index":5570,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["resssource",{"_index":5327,"title":{},"body":{"todo.html":{}}}],["rest",{"_index":1997,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["restart",{"_index":5914,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restful/socket",{"_index":5821,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restricted",{"_index":1980,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"injectables/NewsUc.html":{}}}],["restricting",{"_index":4800,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":5010,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":5008,"title":{},"body":{"license.html":{}}}],["result",{"_index":949,"title":{},"body":{"controllers/CourseController.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DatabaseManagementService.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"classes/NewsScope.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["result.push(room",{"_index":1381,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["result.query",{"_index":3597,"title":{},"body":{"classes/Scope.html":{}}}],["result.query.ts",{"_index":5393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resultelement",{"_index":1361,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["resulting",{"_index":4617,"title":{},"body":{"license.html":{}}}],["results",{"_index":172,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"entities/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"modules/ImportUserModule.html":{},"classes/ImportUserResponse.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"injectables/PermissionService.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"entities/System.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["retains",{"_index":4953,"title":{},"body":{"license.html":{}}}],["retention",{"_index":5894,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieve",{"_index":3170,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieves",{"_index":5942,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retry",{"_index":5906,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["return",{"_index":78,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"injectables/BoardMapper.html":{},"classes/BoardTaskStatusMapper.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/ImportUser.html":{},"injectables/JwtStrategy.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PermissionService.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"classes/SchoolInfoMapper.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"injectables/StorageProviderRepo.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"classes/UserMatch.html":{},"injectables/UserRepo.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["returned",{"_index":427,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["returning",{"_index":3861,"title":{},"body":{"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["returns",{"_index":199,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"injectables/BoardMapper.html":{},"classes/BoardTaskStatusMapper.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/ILogger.html":{},"controllers/ImportUserController.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PermissionService.html":{},"classes/ResolvedUserMapper.html":{},"modules/RocketChatModule.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"classes/SchoolInfoMapper.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"modules/ServerTestModule.html":{},"injectables/StorageProviderRepo.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["retvalue",{"_index":6221,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reusability",{"_index":5660,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reused",{"_index":5991,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reused/called",{"_index":5777,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["revert",{"_index":4414,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reverted",{"_index":4431,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reviewers",{"_index":4528,"title":{},"body":{"index.html":{}}}],["reviewing",{"_index":5212,"title":{},"body":{"license.html":{}}}],["revised",{"_index":5160,"title":{},"body":{"license.html":{}}}],["rewindsequence",{"_index":406,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["rich",{"_index":6078,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["right",{"_index":4947,"title":{},"body":{"license.html":{}}}],["rights",{"_index":4598,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rimraf",{"_index":2259,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"dependencies.html":{}}}],["rimraf.sync(folderpath",{"_index":2275,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["risk",{"_index":5183,"title":{},"body":{"license.html":{}}}],["rocket",{"_index":3533,"title":{},"body":{"modules/RocketChatModule.html":{}}}],["rocket_chat_options",{"_index":3535,"title":{},"body":{"modules/RocketChatModule.html":{}}}],["rocketchat",{"_index":39,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rocketchatadapter",{"_index":5771,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rocketchaterror",{"_index":32,"title":{"classes/RocketChatError.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["rocketchaterror(e",{"_index":150,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["rocketchaterror.prototype",{"_index":58,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["rocketchatmodule",{"_index":3529,"title":{"modules/RocketChatModule.html":{}},"body":{"modules/RocketChatModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules.html":{}}}],["rocketchatmodule.forroot",{"_index":3652,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["rocketchatoptions",{"_index":23,"title":{"interfaces/RocketChatOptions.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{}}}],["rocketchatservice",{"_index":68,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{}}}],["role",{"_index":2485,"title":{"entities/Role.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"injectables/JwtStrategy.html":{},"injectables/PermissionService.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"entities/Role.html":{},"injectables/RoleRepo.html":{},"entities/User.html":{},"injectables/UserRepo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["role.entity",{"_index":2753,"title":{},"body":{"interfaces/IUserProperties.html":{},"entities/User.html":{}}}],["role.id",{"_index":3524,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["role.name",{"_index":3523,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["role/permissions",{"_index":5825,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rolefactory",{"_index":5406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roleidbasedsearches",{"_index":2755,"title":{},"body":{"interfaces/IUserProperties.html":{},"entities/User.html":{}}}],["roleidbasedsearches'})@manytomany('role",{"_index":4160,"title":{},"body":{"entities/User.html":{}}}],["rolename",{"_index":2519,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{},"miscellaneous/enumerations.html":{}}}],["rolenameresponse",{"_index":2827,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"miscellaneous/enumerations.html":{}}}],["rolenames",{"_index":2517,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/UserMatch.html":{}}}],["rolerepo",{"_index":3542,"title":{"injectables/RoleRepo.html":{}},"body":{"injectables/RoleRepo.html":{}}}],["roles",{"_index":2482,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"injectables/PermissionService.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"entities/Role.html":{},"injectables/TaskUC.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserMatch.html":{},"injectables/UserRepo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["roles.map((role",{"_index":3522,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["rolesandpermissions",{"_index":3492,"title":{},"body":{"injectables/PermissionService.html":{}}}],["rom",{"_index":4956,"title":{},"body":{"license.html":{}}}],["room",{"_index":652,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/DashboardEntity.html":{},"injectables/RoomsUc.html":{}}}],["room.getmetadata",{"_index":605,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["roomboardresponse",{"_index":633,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{}}}],["roomid",{"_index":571,"title":{},"body":{"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{}}}],["roomlist",{"_index":1291,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["roomlist.includes(room",{"_index":1373,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["roommetadata",{"_index":604,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["roommetadata.displaycolor",{"_index":607,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["roommetadata.id",{"_index":606,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["roommetadata.title",{"_index":608,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["roomname",{"_index":93,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["rooms",{"_index":1264,"title":{},"body":{"classes/DashboardEntity.html":{},"controllers/RoomsController.html":{}}}],["rooms.foreach((room",{"_index":1379,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["roomscontroller",{"_index":2962,"title":{"controllers/RoomsController.html":{}},"body":{"modules/LearnroomModule.html":{},"controllers/RoomsController.html":{}}}],["roomsuc",{"_index":583,"title":{"injectables/RoomsUc.html":{}},"body":{"interfaces/Board.html":{},"modules/LearnroomModule.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"overview.html":{}}}],["root",{"_index":368,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"controllers/UserController.html":{},"index.html":{}}}],["rootdir",{"_index":5449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roots",{"_index":5477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roughly",{"_index":6297,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["route",{"_index":1918,"title":{},"body":{"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"controllers/ServerController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["routes",{"_index":4469,"title":{},"body":{"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["routingkey",{"_index":3032,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["royalty",{"_index":5070,"title":{},"body":{"license.html":{}}}],["rss",{"_index":1059,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["rule",{"_index":6099,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["rules",{"_index":4964,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["run",{"_index":4464,"title":{},"body":{"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["runner",{"_index":6251,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["running",{"_index":4118,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["runs",{"_index":4456,"title":{},"body":{"index.html":{},"license.html":{}}}],["runtime",{"_index":6260,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["rxjs",{"_index":2007,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":21,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/TimeoutInterceptor.html":{}}}],["s3",{"_index":2186,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["s3client",{"_index":2182,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"miscellaneous/functions.html":{}}}],["safest",{"_index":5225,"title":{},"body":{"license.html":{}}}],["safety",{"_index":4486,"title":{},"body":{"index.html":{}}}],["sale",{"_index":5079,"title":{},"body":{"license.html":{}}}],["same",{"_index":3664,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["sameschool",{"_index":2102,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["sample",{"_index":2163,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/ServerConsole.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["samplecontroller",{"_index":6265,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["samples",{"_index":6011,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sampleservice",{"_index":6266,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sampleucmethod(params",{"_index":6149,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sanitization",{"_index":4418,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sanitize",{"_index":4354,"title":{},"body":{"dependencies.html":{}}}],["sanitizer",{"_index":5268,"title":{},"body":{"todo.html":{}}}],["satisfied",{"_index":335,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["satisfy",{"_index":325,"title":{},"body":{"injectables/AuthorizationService.html":{},"license.html":{}}}],["save",{"_index":5606,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["saying",{"_index":4893,"title":{},"body":{"license.html":{}}}],["sc",{"_index":4508,"title":{},"body":{"index.html":{}}}],["scans",{"_index":1810,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["scenarios",{"_index":5796,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schedules",{"_index":1968,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["schema",{"_index":888,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{},"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["schema.ts",{"_index":5980,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["schemas",{"_index":5981,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["scheme",{"_index":5498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["school",{"_index":843,"title":{"entities/School.html":{}},"body":{"entities/Course.html":{},"classes/CourseFactory.html":{},"entities/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"entities/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"entities/User.html":{},"classes/UserMatch.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["school.entity",{"_index":876,"title":{},"body":{"entities/Course.html":{},"entities/CourseNews.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"entities/User.html":{},"classes/UserMatch.html":{}}}],["school.factory",{"_index":968,"title":{},"body":{"classes/CourseFactory.html":{}}}],["schoolfactory",{"_index":967,"title":{},"body":{"classes/CourseFactory.html":{},"miscellaneous/variables.html":{}}}],["schoolfactory.build",{"_index":979,"title":{},"body":{"classes/CourseFactory.html":{},"miscellaneous/variables.html":{}}}],["schoolid",{"_index":856,"title":{},"body":{"entities/Course.html":{},"entities/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"entities/News.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"entities/User.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["schoolinfo",{"_index":3579,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfo.id",{"_index":3580,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfo.name",{"_index":3581,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfomapper",{"_index":3245,"title":{"classes/SchoolInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{}}}],["schoolinfomapper.maptoresponse(news.school",{"_index":3250,"title":{},"body":{"classes/NewsMapper.html":{}}}],["schoolinforesponse",{"_index":3219,"title":{"classes/SchoolInfoResponse.html":{}},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{}}}],["schoolnews",{"_index":1098,"title":{"entities/SchoolNews.html":{}},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"injectables/NewsRepo.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"miscellaneous/variables.html":{}}}],["schoolnews(props",{"_index":1097,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["schoolnewsfactory",{"_index":5409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schools",{"_index":2473,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/ISchoolProperties.html":{},"entities/School.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schould",{"_index":1179,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{}}}],["schul",{"_index":2034,"title":{},"body":{"classes/EncryptedStringType.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schulcloud",{"_index":1929,"title":{},"body":{"controllers/DelayController.html":{},"controllers/ServerController.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["scope",{"_index":1112,"title":{"classes/Scope.html":{}},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/ImportUserController.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"controllers/TeamNewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["scope.addquery(allforcreator.query",{"_index":3946,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.addquery(allforfinishedcoursesandlessons.query",{"_index":3945,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.addquery(closedforopencoursesandlessons.query",{"_index":3944,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.addquery(parentidscope.query",{"_index":3959,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.afterduedateornone(filters.afterduedateornone",{"_index":3966,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.byavailable(filters?.availableon",{"_index":3970,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.bycourseids([courseid",{"_index":3973,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.bycourseids(courseids",{"_index":2984,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["scope.bydraft(false",{"_index":3964,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.byfinished(filters.finished.userid",{"_index":3961,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.byhidden(filters.hidden",{"_index":2986,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["scope.bytargets(targets",{"_index":3309,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.byunpublished(unpublished",{"_index":3310,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.excludedraftsofothers(creatorid",{"_index":3975,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.excludedraftsofothers(parentids.creatorid",{"_index":3963,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.excludeunavailableofothers(parentids.creatorid",{"_index":3968,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.foractivecourses",{"_index":1128,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["scope.forallgrouptypes(userid",{"_index":1126,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["scope.forcourseid(courseid",{"_index":1141,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["scope.forteacher(userid",{"_index":1140,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["scope.nofutureavailabledate",{"_index":3977,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.query",{"_index":1137,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/LessonRepo.html":{},"injectables/TaskRepo.html":{}}}],["scope.request",{"_index":2155,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["scope.target",{"_index":3430,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope.targetid",{"_index":4102,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["scope.targetmodel",{"_index":4103,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["scope.transient",{"_index":3002,"title":{},"body":{"injectables/Logger.html":{}}}],["scope.ts",{"_index":2990,"title":{},"body":{"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["scope.ts:10",{"_index":2996,"title":{},"body":{"classes/LessonScope.html":{}}}],["scope.ts:16",{"_index":4016,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:23",{"_index":3352,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:24",{"_index":4008,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:30",{"_index":4006,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:38",{"_index":4014,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:44",{"_index":4010,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:5",{"_index":2994,"title":{},"body":{"classes/LessonScope.html":{}}}],["scope.ts:51",{"_index":4018,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:59",{"_index":4005,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:6",{"_index":4012,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:65",{"_index":4025,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:72",{"_index":4020,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:8",{"_index":3350,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:82",{"_index":4003,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:88",{"_index":4024,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:94",{"_index":4022,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope:11",{"_index":1150,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["scope:25",{"_index":1159,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["scope:9",{"_index":1152,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["scope?.target",{"_index":3427,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope?.unpublished",{"_index":3409,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scoped",{"_index":3786,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["scopeid",{"_index":2109,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["scopeoperator",{"_index":1149,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{},"miscellaneous/typealiases.html":{}}}],["scopepermission",{"_index":3784,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["scopepermissions",{"_index":3783,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["scopes",{"_index":3171,"title":{},"body":{"controllers/NewsController.html":{}}}],["scripts",{"_index":4732,"title":{},"body":{"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["sdk",{"_index":4247,"title":{},"body":{"dependencies.html":{}}}],["sdk/client",{"_index":2185,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["search",{"_index":5876,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["searchuserforschool",{"_index":2756,"title":{},"body":{"interfaces/IUserProperties.html":{},"entities/User.html":{}}}],["searchuserforschool'})@manytoone('school",{"_index":4162,"title":{},"body":{"entities/User.html":{}}}],["second",{"_index":6156,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["secondarily",{"_index":4662,"title":{},"body":{"license.html":{}}}],["secondary",{"_index":4606,"title":{},"body":{"license.html":{}}}],["secret",{"_index":2881,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["secretaccesskey",{"_index":2197,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":2927,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["section",{"_index":4778,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["sections",{"_index":4858,"title":{},"body":{"license.html":{}}}],["security",{"_index":5730,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["see",{"_index":211,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/IDashboardRepo.html":{},"classes/LessonFactory.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"classes/SubmissionFactory.html":{},"entities/System.html":{},"classes/TaskFactory.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["seed",{"_index":1666,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{},"additional-documentation/nestjs-application.html":{}}}],["seedcollections",{"_index":1654,"title":{},"body":{"classes/DatabaseManagementConsole.html":{}}}],["seedcollections(options",{"_index":1665,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["seeddata",{"_index":6211,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["seeddatabasecollectionsfromfilesystem",{"_index":1781,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["seeddatabasecollectionsfromfilesystem(collections",{"_index":1813,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["seededcollectionswithamount",{"_index":1871,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["seededcollectionswithamount.push(`${collectionname}:${importeddocumentsamount",{"_index":1892,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["seems",{"_index":5316,"title":{},"body":{"todo.html":{}}}],["selected",{"_index":5291,"title":{},"body":{"todo.html":{}}}],["self",{"_index":5665,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sell",{"_index":5095,"title":{},"body":{"license.html":{}}}],["selling",{"_index":5078,"title":{},"body":{"license.html":{}}}],["semiconductor",{"_index":4643,"title":{},"body":{"license.html":{}}}],["send",{"_index":3045,"title":{},"body":{"injectables/MailService.html":{},"additional-documentation/nestjs-application.html":{}}}],["send(data",{"_index":3050,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["sends",{"_index":6121,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["sense",{"_index":5740,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sent",{"_index":5945,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sentence",{"_index":2076,"title":{},"body":{"classes/ErrorResponse.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sentry",{"_index":5271,"title":{},"body":{"todo.html":{}}}],["sentry/node",{"_index":4235,"title":{},"body":{"dependencies.html":{}}}],["separable",{"_index":4905,"title":{},"body":{"license.html":{}}}],["separate",{"_index":3006,"title":{},"body":{"injectables/Logger.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["separated",{"_index":4513,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["separately",{"_index":4840,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["separates",{"_index":5875,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["separating",{"_index":6137,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["separation",{"_index":5659,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["seperate",{"_index":4454,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["seperation",{"_index":4453,"title":{},"body":{"index.html":{}}}],["sequence",{"_index":407,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"miscellaneous/variables.html":{}}}],["sequence}@example.com",{"_index":5544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serialization",{"_index":2016,"title":{},"body":{"classes/EncryptedStringType.html":{},"todo.html":{}}}],["serialize",{"_index":745,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["serialize(documents",{"_index":758,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["serialized",{"_index":6387,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["serializedprimarykey",{"_index":352,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{}}}],["serializes",{"_index":760,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["serve",{"_index":4356,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application.html":{}}}],["served",{"_index":5622,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["server",{"_index":1930,"title":{},"body":{"controllers/DelayController.html":{},"injectables/Logger.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["server.console",{"_index":3623,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["server.controller",{"_index":3643,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["server/overview.html",{"_index":5319,"title":{},"body":{"todo.html":{}}}],["server/pull/2729#pullrequestreview",{"_index":5289,"title":{},"body":{"todo.html":{}}}],["serverconsole",{"_index":3603,"title":{"classes/ServerConsole.html":{}},"body":{"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{}}}],["serverconsolemodule",{"_index":3615,"title":{"modules/ServerConsoleModule.html":{}},"body":{"modules/ServerConsoleModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["servercontroller",{"_index":3624,"title":{"controllers/ServerController.html":{}},"body":{"controllers/ServerController.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["servererrortypes",{"_index":5410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverlogger",{"_index":6143,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["servermodule",{"_index":3627,"title":{"modules/ServerModule.html":{}},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["servermodules",{"_index":3647,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["servers",{"_index":4618,"title":{},"body":{"license.html":{}}}],["servertestmodule",{"_index":3669,"title":{"modules/ServerTestModule.html":{}},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules.html":{},"overview.html":{}}}],["serves",{"_index":4722,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["service",{"_index":814,"title":{},"body":{"injectables/ConsoleWriterService.html":{},"classes/EncryptedStringType.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["service.find",{"_index":2112,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["service.findallforuser(userid",{"_index":6307,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["service.get",{"_index":6031,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.get(userid",{"_index":2108,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["service.provider",{"_index":2137,"title":{},"body":{"modules/FeathersModule.html":{}}}],["service.provider.ts",{"_index":2140,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.provider.ts:13",{"_index":2148,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:19",{"_index":2146,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:33",{"_index":2172,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.provider.ts:36",{"_index":2173,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.ts",{"_index":5984,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["services",{"_index":2130,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"modules/ManagementModule.html":{},"modules/ServerConsoleModule.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["servicing",{"_index":5190,"title":{},"body":{"license.html":{}}}],["set",{"_index":54,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/ImportUser.html":{},"modules/InterceptorModule.html":{},"classes/LessonFactory.html":{},"injectables/NewsUc.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/SubmissionFactory.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskWithStatusVo.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["set(gradeduserids",{"_index":2706,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["set(permissions",{"_index":3496,"title":{},"body":{"injectables/PermissionService.html":{}}}],["set(submitteduserids",{"_index":2695,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["setcontext",{"_index":3014,"title":{},"body":{"injectables/Logger.html":{}}}],["setdescription('this",{"_index":5494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setgroupname",{"_index":2447,"title":{},"body":{"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["setgroupname(newgroupname",{"_index":1307,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["setlearnrooms",{"_index":1251,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["setlearnrooms(rooms",{"_index":1292,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["sets",{"_index":6273,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["settimeout(milliseconds",{"_index":4128,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["settimeout(resolve",{"_index":1927,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["setting",{"_index":5434,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["settings",{"_index":6038,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["settitle('hpi",{"_index":5493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":1673,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICollectionFilePath.html":{},"modules/InterceptorModule.html":{},"interfaces/Options.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["setupentities",{"_index":5411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setuppath",{"_index":1868,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["setuserstatus(authtoken",{"_index":81,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["setversion('3.0",{"_index":5496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":4784,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["share",{"_index":4578,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["shared",{"_index":4739,"title":{},"body":{"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/common",{"_index":224,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{}}}],["shared/controller",{"_index":631,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"controllers/CourseController.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"injectables/CourseUc.html":{},"controllers/DashboardController.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"controllers/RoomsController.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"controllers/TeamNewsController.html":{}}}],["shared/controller/transformer",{"_index":3214,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["shared/core",{"_index":5999,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/domain",{"_index":328,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"injectables/BoardMapper.html":{},"classes/BoardTaskStatusMapper.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/IDashboardRepo.html":{},"controllers/ImportUserController.html":{},"interfaces/JwtPayload.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"classes/SchoolInfoMapper.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"injectables/StorageProviderRepo.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"todo.html":{}}}],["shared/domain/entity",{"_index":3850,"title":{},"body":{"classes/TaskFactory.html":{}}}],["shared/domain/entity/base.entity",{"_index":1420,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["shared/domain/interface",{"_index":872,"title":{},"body":{"entities/Course.html":{},"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IGridElement.html":{}}}],["shared/domain/types",{"_index":1296,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/ILearnroom.html":{},"injectables/NewsUc.html":{}}}],["shared/infra/console",{"_index":3067,"title":{},"body":{"modules/ManagementModule.html":{},"classes/ServerConsole.html":{}}}],["shared/infra/console/console",{"_index":1669,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{},"modules/ServerConsoleModule.html":{}}}],["shared/infra/database",{"_index":1825,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["shared/infra/database/mongo",{"_index":3640,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["shared/infra/feathers",{"_index":296,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/FeathersAuthProvider.html":{}}}],["shared/infra/file",{"_index":1823,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{}}}],["shared/infra/filestorage",{"_index":2290,"title":{},"body":{"modules/FilesModule.html":{},"injectables/FilesRepo.html":{}}}],["shared/infra/mail",{"_index":3633,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["shared/pipes",{"_index":6024,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/repo",{"_index":279,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/Board.html":{},"injectables/CourseUc.html":{},"injectables/DashboardUc.html":{},"injectables/DeleteFilesUc.html":{},"modules/FilesModule.html":{},"injectables/JwtStrategy.html":{},"modules/LearnroomModule.html":{},"modules/NewsModule.html":{},"injectables/NewsUc.html":{},"injectables/RoomsUc.html":{},"injectables/TaskAuthorizationService.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["shared/repo/base.repo",{"_index":3306,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["shared/repo/types/encryptedstring.type",{"_index":2609,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{}}}],["shared/utils",{"_index":6000,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators",{"_index":6020,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators/text.validator.ts",{"_index":6003,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shit",{"_index":880,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["short",{"_index":1031,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["shortid",{"_index":4322,"title":{},"body":{"dependencies.html":{}}}],["shorttitle",{"_index":1027,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["show",{"_index":3380,"title":{},"body":{"injectables/NewsUc.html":{}}}],["shows",{"_index":5682,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["side",{"_index":5755,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sign",{"_index":5242,"title":{},"body":{"license.html":{}}}],["signature",{"_index":5927,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["significant",{"_index":4935,"title":{},"body":{"license.html":{}}}],["similar",{"_index":4630,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simple",{"_index":5742,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["simplicity",{"_index":5334,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simplification",{"_index":5899,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["simplify",{"_index":6218,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["simply",{"_index":4479,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["simulates",{"_index":6343,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["simultaneously",{"_index":5145,"title":{},"body":{"license.html":{}}}],["single",{"_index":1678,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"classes/GlobalValidationPipe.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/UserMatchResponse.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["situation",{"_index":5743,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["six",{"_index":2224,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["sizetype",{"_index":1439,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["skip",{"_index":947,"title":{},"body":{"controllers/CourseController.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["skipped",{"_index":2434,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"classes/PaginationQuery.html":{}}}],["slash",{"_index":5324,"title":{},"body":{"todo.html":{}}}],["slow",{"_index":1880,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["small",{"_index":6396,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["snaketype",{"_index":2375,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["socketio",{"_index":4359,"title":{},"body":{"dependencies.html":{}}}],["sockets",{"_index":5817,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["software",{"_index":4555,"title":{"additional-documentation/nestjs-application/software-architecture.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sold",{"_index":4917,"title":{},"body":{"license.html":{}}}],["sole",{"_index":4763,"title":{},"body":{"license.html":{}}}],["solely",{"_index":4775,"title":{},"body":{"license.html":{}}}],["solid",{"_index":6357,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["solution",{"_index":5701,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["solutions",{"_index":5238,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["something",{"_index":6150,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["something...later",{"_index":6153,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["somewhere",{"_index":579,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["sort",{"_index":1900,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["sortedbsondocuments",{"_index":1902,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["sorting",{"_index":3902,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["sorting.ts",{"_index":5285,"title":{},"body":{"todo.html":{}}}],["sortorder",{"_index":1166,"title":{},"body":{"injectables/CourseUc.html":{},"injectables/DashboardUc.html":{},"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["sortorder.asc",{"_index":1639,"title":{},"body":{"injectables/DashboardUc.html":{},"injectables/TaskUC.html":{}}}],["sortorder.desc",{"_index":1168,"title":{},"body":{"injectables/CourseUc.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["sortordermap",{"_index":2500,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/typealiases.html":{}}}],["sortreferences",{"_index":1312,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"entities/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"modules/ImportUserModule.html":{},"classes/ImportUserResponse.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"injectables/PermissionService.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"entities/System.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcecode",{"_index":5967,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcedescription",{"_index":1060,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["sources",{"_index":5580,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["sourcetype",{"_index":3224,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"miscellaneous/typealiases.html":{}}}],["sovereignty",{"_index":5670,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["span",{"_index":5916,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spanid",{"_index":5935,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spare",{"_index":4874,"title":{},"body":{"license.html":{}}}],["speak",{"_index":4585,"title":{},"body":{"license.html":{}}}],["spec",{"_index":5428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spec.ts",{"_index":5452,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["spec\\\\.ts",{"_index":5458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":4967,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specific",{"_index":40,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/AuthorizationService.html":{},"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["specifically",{"_index":4569,"title":{},"body":{"license.html":{}}}],["specification",{"_index":5823,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specifics",{"_index":6061,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specified",{"_index":4709,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specifies",{"_index":5169,"title":{},"body":{"license.html":{}}}],["specify",{"_index":3106,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["spinner",{"_index":804,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["spirit",{"_index":5161,"title":{},"body":{"license.html":{}}}],["split",{"_index":5714,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spy",{"_index":6303,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["spyied",{"_index":6294,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sql",{"_index":5853,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sql/nosql",{"_index":6378,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["sql/sql",{"_index":5880,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["src",{"_index":5461,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["src/...*.spec.ts",{"_index":5450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/config",{"_index":3068,"title":{},"body":{"modules/ManagementModule.html":{}}}],["src/core",{"_index":3636,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["src/core/error/dto/error.response",{"_index":783,"title":{},"body":{"classes/BusinessError.html":{}}}],["src/core/error/interface",{"_index":784,"title":{},"body":{"classes/BusinessError.html":{}}}],["src/core/logger",{"_index":1951,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/FilesModule.html":{},"classes/GlobalErrorFilter.html":{},"modules/ImportUserModule.html":{},"modules/NewsModule.html":{},"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["src/core/logger/logger.service",{"_index":1971,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["src/modules/authentication/decorator/auth.decorator",{"_index":933,"title":{},"body":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{},"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"controllers/RoomsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}}}],["src/modules/authorization",{"_index":2846,"title":{},"body":{"modules/ImportUserModule.html":{},"modules/NewsModule.html":{}}}],["src/modules/authorization/authorization.service",{"_index":3396,"title":{},"body":{"injectables/NewsUc.html":{}}}],["src/modules/database",{"_index":6281,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["src/modules/files",{"_index":3639,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["src/modules/learnroom",{"_index":3635,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["src/modules/news",{"_index":3638,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["src/modules/rocketchat",{"_index":3634,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["src/modules/task",{"_index":3637,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["src/modules/user",{"_index":278,"title":{},"body":{"modules/AuthModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["stable",{"_index":5666,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stack",{"_index":2390,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["standard",{"_index":4705,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["standards",{"_index":4708,"title":{},"body":{"license.html":{}}}],["start",{"_index":1032,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["startdate",{"_index":844,"title":{},"body":{"entities/Course.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"interfaces/ICourseProperties.html":{}}}],["started",{"_index":4437,"title":{"index.html":{},"license.html":{},"todo.html":{}},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["starting",{"_index":4447,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["starts",{"_index":5562,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["starttitle",{"_index":2377,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["startup",{"_index":6144,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["state",{"_index":5227,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["stated",{"_index":4754,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statement",{"_index":5012,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statements",{"_index":5472,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["static",{"_index":404,"title":{},"body":{"classes/BaseFactory.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/CourseFactory.html":{},"classes/CourseMapper.html":{},"entities/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/INewsProperties.html":{},"classes/LessonFactory.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"entities/News.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUserMapper.html":{},"modules/RocketChatModule.html":{},"classes/SchoolInfoMapper.html":{},"entities/SchoolNews.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"classes/SubmissionFactory.html":{},"classes/TargetInfoMapper.html":{},"classes/TaskFactory.html":{},"classes/TaskMapper.html":{},"classes/TaskStatusMapper.html":{},"entities/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfoMapper.html":{},"additional-documentation/nestjs-application.html":{}}}],["stating",{"_index":4819,"title":{},"body":{"license.html":{}}}],["status",{"_index":82,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoomsUc.html":{},"entities/Task.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TaskStatusMapper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["status.mapper",{"_index":3869,"title":{},"body":{"classes/TaskMapper.html":{}}}],["status.mapper.ts",{"_index":4033,"title":{},"body":{"classes/TaskStatusMapper.html":{}}}],["status.mapper.ts:5",{"_index":4034,"title":{},"body":{"classes/TaskStatusMapper.html":{}}}],["status.response",{"_index":3860,"title":{},"body":{"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskStatusMapper.html":{}}}],["status.response.ts",{"_index":4038,"title":{},"body":{"classes/TaskStatusResponse.html":{}}}],["status.response.ts:14",{"_index":4045,"title":{},"body":{"classes/TaskStatusResponse.html":{}}}],["status.response.ts:17",{"_index":4044,"title":{},"body":{"classes/TaskStatusResponse.html":{}}}],["status.response.ts:20",{"_index":4040,"title":{},"body":{"classes/TaskStatusResponse.html":{}}}],["status.response.ts:23",{"_index":4041,"title":{},"body":{"classes/TaskStatusResponse.html":{}}}],["status.response.ts:26",{"_index":4043,"title":{},"body":{"classes/TaskStatusResponse.html":{}}}],["status.response.ts:29",{"_index":4042,"title":{},"body":{"classes/TaskStatusResponse.html":{}}}],["status.response.ts:3",{"_index":4039,"title":{},"body":{"classes/TaskStatusResponse.html":{}}}],["statuscode",{"_index":36,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["statusdto",{"_index":3872,"title":{},"body":{"classes/TaskMapper.html":{}}}],["stay",{"_index":5697,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["step",{"_index":6131,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["steps",{"_index":4600,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["stick",{"_index":6185,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["still",{"_index":6067,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["stop",{"_index":3124,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"injectables/TimeoutInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["storage",{"_index":4849,"title":{},"body":{"license.html":{}}}],["storagefilename",{"_index":500,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"interfaces/IFileProperties.html":{},"miscellaneous/variables.html":{}}}],["storageprovider",{"_index":496,"title":{"entities/StorageProvider.html":{}},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["storageprovider.accesskeyid",{"_index":2196,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["storageprovider.endpointurl",{"_index":2189,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["storageprovider.entity",{"_index":497,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{}}}],["storageprovider.region",{"_index":2192,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["storageprovider.secretaccesskey",{"_index":2198,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["storageproviderclient",{"_index":2199,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["storageproviderclient.send(deletioncommand",{"_index":2202,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["storageproviderfactory",{"_index":5413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storageproviderfactory.build",{"_index":5514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storageproviderid",{"_index":511,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{}}}],["storageproviderrepo",{"_index":2288,"title":{"injectables/StorageProviderRepo.html":{}},"body":{"modules/FilesModule.html":{},"injectables/StorageProviderRepo.html":{},"overview.html":{}}}],["storageproviders",{"_index":2610,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{}}}],["store",{"_index":5861,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stored",{"_index":5781,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stores",{"_index":5937,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["story",{"_index":6296,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["strategies",{"_index":5353,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["strategies.includes('jwt",{"_index":5426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strategy",{"_index":2918,"title":{},"body":{"injectables/JwtStrategy.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["strategy/jwt",{"_index":283,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/jwt.strategy",{"_index":280,"title":{},"body":{"modules/AuthModule.html":{}}}],["strict",{"_index":6358,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["strictly",{"_index":5657,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["string",{"_index":12,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"interfaces/AppendedAttachment.html":{},"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"entities/Course.html":{},"classes/CourseFactory.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DeleteFilesUc.html":{},"entities/Directory.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"entities/File.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/GlobalConstants.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtValidationAdapter.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"injectables/PermissionService.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/StorageProvider.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SymetricKeyEncryptionService.html":{},"entities/System.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["strings",{"_index":2044,"title":{},"body":{"classes/EncryptedStringType.html":{},"injectables/Logger.html":{},"miscellaneous/functions.html":{}}}],["stringtoboolean",{"_index":3213,"title":{},"body":{"classes/NewsFilterQuery.html":{},"miscellaneous/functions.html":{}}}],["strip",{"_index":4363,"title":{},"body":{"dependencies.html":{}}}],["strong",{"_index":2134,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["strongly",{"_index":6398,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["structure",{"_index":5960,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["structured",{"_index":5961,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["structures",{"_index":3012,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["stucture",{"_index":5282,"title":{},"body":{"todo.html":{}}}],["student",{"_index":2537,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"interfaces/ISubmissionProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"classes/UserMatch.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["studentdashboard",{"_index":3781,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"miscellaneous/enumerations.html":{}}}],["studentfiles",{"_index":2625,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["studentid",{"_index":2634,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["students",{"_index":845,"title":{},"body":{"entities/Course.html":{},"entities/CourseGroup.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"injectables/SubmissionRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["studio",{"_index":4499,"title":{},"body":{"index.html":{}}}],["stuff",{"_index":4540,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["style",{"_index":5680,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sub",{"_index":2896,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["subdividing",{"_index":5060,"title":{},"body":{"license.html":{}}}],["subelements",{"_index":1448,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["subject",{"_index":246,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"license.html":{}}}],["sublicenses",{"_index":5091,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":4777,"title":{},"body":{"license.html":{}}}],["submission",{"_index":2631,"title":{"entities/Submission.html":{}},"body":{"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/variables.html":{}}}],["submission.entity",{"_index":2661,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["submission.isgraded",{"_index":2703,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["submission.student.id",{"_index":2693,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["submissionfactory",{"_index":3690,"title":{"classes/SubmissionFactory.html":{}},"body":{"classes/SubmissionFactory.html":{},"miscellaneous/variables.html":{}}}],["submissionfactory.define(submission",{"_index":3697,"title":{},"body":{"classes/SubmissionFactory.html":{},"miscellaneous/variables.html":{}}}],["submissionrepo",{"_index":3700,"title":{"injectables/SubmissionRepo.html":{}},"body":{"injectables/SubmissionRepo.html":{}}}],["submissions",{"_index":2630,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Submission.html":{},"injectables/SubmissionRepo.html":{},"entities/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskWithStatusVo.html":{}}}],["submitted",{"_index":730,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskStatusResponse.html":{},"classes/TaskWithStatusVo.html":{}}}],["submitteduserids",{"_index":2691,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["submitteduserids.length",{"_index":2698,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["subpermissions",{"_index":3494,"title":{},"body":{"injectables/PermissionService.html":{}}}],["subprograms",{"_index":4742,"title":{},"body":{"license.html":{}}}],["subsection",{"_index":4883,"title":{},"body":{"license.html":{}}}],["subset",{"_index":5602,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["substantial",{"_index":4930,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":5058,"title":{},"body":{"license.html":{}}}],["substitutionids",{"_index":863,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["substitutionteachers",{"_index":846,"title":{},"body":{"entities/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseProperties.html":{}}}],["succeed",{"_index":6238,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["successfully",{"_index":1990,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["such",{"_index":1648,"title":{},"body":{"injectables/DashboardUc.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sue",{"_index":5103,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":4940,"title":{},"body":{"license.html":{}}}],["sufficient",{"_index":315,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["suffix",{"_index":5333,"title":{},"body":{"todo.html":{}}}],["suggested",{"_index":5257,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["suites",{"_index":5600,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["super",{"_index":205,"title":{},"body":{"classes/ApiValidationError.html":{},"entities/BaseFile.html":{},"classes/BusinessError.html":{},"entities/Course.html":{},"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"entities/Directory.html":{},"classes/EncryptedStringType.html":{},"entities/File.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"injectables/JwtStrategy.html":{},"entities/Lesson.html":{},"entities/News.html":{},"entities/Role.html":{},"entities/School.html":{},"entities/SchoolNews.html":{},"entities/StorageProvider.html":{},"entities/Submission.html":{},"entities/System.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"entities/User.html":{},"classes/UserMatch.html":{},"classes/ValidationError.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["super(e.response.statustext",{"_index":53,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["super(em",{"_index":2313,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["super(total",{"_index":1036,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["super(type",{"_index":227,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["supertest",{"_index":6255,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["supplement",{"_index":4970,"title":{},"body":{"license.html":{}}}],["support",{"_index":2889,"title":{},"body":{"interfaces/JwtConstants.html":{},"dependencies.html":{},"license.html":{},"modules.html":{},"todo.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["support_${objectid",{"_index":2898,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["supported",{"_index":5713,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["supporting",{"_index":5547,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["supports",{"_index":458,"title":{},"body":{"classes/BaseFactory.html":{},"license.html":{}}}],["supportuserid",{"_index":2890,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["sure",{"_index":3485,"title":{},"body":{"injectables/PermissionService.html":{},"license.html":{}}}],["surrender",{"_index":5140,"title":{},"body":{"license.html":{}}}],["survive",{"_index":5011,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":5204,"title":{},"body":{"license.html":{}}}],["svg",{"_index":5246,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":4290,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application.html":{}}}],["swaggermodule.createdocument(app",{"_index":5503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggermodule.setup(path",{"_index":5504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symetrickeyencryptionservice",{"_index":2026,"title":{"injectables/SymetricKeyEncryptionService.html":{}},"body":{"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"injectables/SymetricKeyEncryptionService.html":{}}}],["symetrickeyencryptionservice(configuration.get('s3_key",{"_index":2040,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["symetrickeyencryptionservice(customkey",{"_index":2039,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["symmetric_cipher_key",{"_index":2060,"title":{},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{}}}],["symmetriccipherkey",{"_index":2059,"title":{},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{}}}],["sync",{"_index":2854,"title":{},"body":{"modules/ImportUserModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["syntax",{"_index":1981,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"injectables/NewsUc.html":{}}}],["system",{"_index":1824,"title":{"entities/System.html":{}},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserListResponse.html":{},"modules/ImportUserModule.html":{},"classes/ImportUserResponse.html":{},"modules/ManagementModule.html":{},"entities/System.html":{},"classes/UserMatch.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["system.adapter",{"_index":2283,"title":{},"body":{"modules/FileSystemModule.html":{}}}],["system.adapter.ts",{"_index":2205,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"miscellaneous/variables.html":{}}}],["system.adapter.ts:12",{"_index":2215,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:18",{"_index":2254,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:26",{"_index":2217,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:36",{"_index":2233,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:48",{"_index":2248,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:57",{"_index":2236,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:68",{"_index":2220,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:78",{"_index":2243,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:84",{"_index":2231,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.entity",{"_index":2522,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["system.module.ts",{"_index":2282,"title":{},"body":{"modules/FileSystemModule.html":{}}}],["system/file",{"_index":2204,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"miscellaneous/variables.html":{}}}],["systems",{"_index":2221,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"entities/System.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["t",{"_index":425,"title":{},"body":{"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"classes/CourseFactory.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/LessonFactory.html":{},"injectables/NewsRepo.html":{},"classes/PaginationResponse.html":{},"injectables/StorageProviderRepo.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"miscellaneous/typealiases.html":{}}}],["tab",{"_index":1908,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["tablename",{"_index":895,"title":{},"body":{"entities/Course.html":{},"entities/CourseGroup.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"entities/Lesson.html":{},"entities/Role.html":{},"entities/School.html":{},"entities/StorageProvider.html":{},"entities/Submission.html":{},"entities/System.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/User.html":{},"classes/UserMatch.html":{}}}],["take",{"_index":4476,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["takes",{"_index":6056,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["taking",{"_index":5432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tangible",{"_index":4911,"title":{},"body":{"license.html":{}}}],["tap",{"_index":2008,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["target",{"_index":1048,"title":{},"body":{"entities/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"entities/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"entities/SchoolNews.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/TeamNews.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["target._id.tostring",{"_index":2117,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["target.id",{"_index":3742,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["target.name",{"_index":3743,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["target.targetids",{"_index":3357,"title":{},"body":{"classes/NewsScope.html":{}}}],["target.targetids.length",{"_index":3435,"title":{},"body":{"injectables/NewsUc.html":{}}}],["target.targetmodel",{"_index":3355,"title":{},"body":{"classes/NewsScope.html":{}}}],["target:in",{"_index":3356,"title":{},"body":{"classes/NewsScope.html":{}}}],["target_model_values",{"_index":1188,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"miscellaneous/variables.html":{}}}],["targetelement",{"_index":1401,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["targetelement.addreferences(element.getreferences",{"_index":1402,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["targetfolder",{"_index":1803,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["targetid",{"_index":311,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{}}}],["targetids",{"_index":2115,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{}}}],["targetinfomapper",{"_index":3247,"title":{"classes/TargetInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/TargetInfoMapper.html":{}}}],["targetinfomapper.maptoresponse(news.target",{"_index":3249,"title":{},"body":{"classes/NewsMapper.html":{}}}],["targetinforesponse",{"_index":3221,"title":{"classes/TargetInfoResponse.html":{}},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{}}}],["targetmodel",{"_index":309,"title":{},"body":{"injectables/AuthorizationService.html":{},"entities/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"entities/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["targetmodels",{"_index":3392,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetmodels.map(async",{"_index":3431,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetpermissions",{"_index":2107,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["targets",{"_index":2111,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["targets.filter((target",{"_index":3434,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targets.map((target",{"_index":2116,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/NewsScope.html":{}}}],["task",{"_index":574,"title":{"entities/Task.html":{}},"body":{"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"injectables/RoomsUc.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["task.authorization.service",{"_index":4061,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.availabledate",{"_index":3880,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.course",{"_index":3816,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["task.createdat",{"_index":3877,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.createstudentstatusforuser(user",{"_index":616,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{},"injectables/TaskUC.html":{}}}],["task.createteacherstatusforuser(user",{"_index":614,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{},"injectables/TaskUC.html":{}}}],["task.creator",{"_index":3814,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["task.duedate",{"_index":3882,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.entity",{"_index":2629,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["task.factory",{"_index":3694,"title":{},"body":{"classes/SubmissionFactory.html":{}}}],["task.getdescriptions",{"_index":3871,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.id",{"_index":3874,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.name",{"_index":3875,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.updatedat",{"_index":3878,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task_dashboard_teacher_view_v3",{"_index":3780,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"miscellaneous/enumerations.html":{}}}],["task_dashboard_view_v3",{"_index":3782,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"miscellaneous/enumerations.html":{}}}],["taskauthorizationservice",{"_index":3755,"title":{"injectables/TaskAuthorizationService.html":{}},"body":{"injectables/TaskAuthorizationService.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"overview.html":{}}}],["taskcontroller",{"_index":3823,"title":{"controllers/TaskController.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{}}}],["taskcourse",{"_index":681,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["taskcourse.name",{"_index":684,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["taskdashboardpermission",{"_index":3775,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["taskdashboardpermission.studentdashboard",{"_index":4064,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskdashboardpermission.teacherdashboard",{"_index":4063,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskdesc",{"_index":3870,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskdesc.color",{"_index":3884,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskdesc.description",{"_index":3886,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskdesc.name",{"_index":3876,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskentities",{"_index":3978,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["taskfactory",{"_index":3693,"title":{"classes/TaskFactory.html":{}},"body":{"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"miscellaneous/variables.html":{}}}],["taskfactory.build",{"_index":3698,"title":{},"body":{"classes/SubmissionFactory.html":{},"miscellaneous/variables.html":{}}}],["taskfactory.define(task",{"_index":3853,"title":{},"body":{"classes/TaskFactory.html":{},"miscellaneous/variables.html":{}}}],["taskfilter",{"_index":589,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["taskfilter(isteacher",{"_index":597,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["taskids",{"_index":3709,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["tasklistresponse",{"_index":3832,"title":{"classes/TaskListResponse.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["tasklistresponse(taskresponses",{"_index":3842,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskmapper",{"_index":3833,"title":{"classes/TaskMapper.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskMapper.html":{}}}],["taskmapper.maptoresponse(task",{"_index":3845,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskmapper.maptoresponse(taskwithstatus",{"_index":3841,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskmodule",{"_index":3630,"title":{"modules/TaskModule.html":{}},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["taskparentdescriptions",{"_index":2663,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/typealiases.html":{}}}],["taskparentpermission",{"_index":3766,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["taskparentpermission.read",{"_index":3791,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{}}}],["taskparentpermission.write",{"_index":3789,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{}}}],["taskrepo",{"_index":577,"title":{"injectables/TaskRepo.html":{}},"body":{"interfaces/Board.html":{},"modules/LearnroomModule.html":{},"injectables/RoomsUc.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"overview.html":{}}}],["taskresponse",{"_index":3856,"title":{"classes/TaskResponse.html":{}},"body":{"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{}}}],["taskresponses",{"_index":3839,"title":{},"body":{"controllers/TaskController.html":{}}}],["tasks",{"_index":591,"title":{},"body":{"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"injectables/RoomsUc.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["tasks.map((task",{"_index":609,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{},"injectables/TaskUC.html":{}}}],["taskscope",{"_index":3909,"title":{"classes/TaskScope.html":{}},"body":{"injectables/TaskRepo.html":{},"classes/TaskScope.html":{}}}],["taskscope('$or",{"_index":3914,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["taskstatus",{"_index":634,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{}}}],["taskstatus.mapper",{"_index":668,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["taskstatus.mapper.ts",{"_index":718,"title":{},"body":{"classes/BoardTaskStatusMapper.html":{}}}],["taskstatus.mapper.ts:5",{"_index":721,"title":{},"body":{"classes/BoardTaskStatusMapper.html":{}}}],["taskstatus.ts",{"_index":725,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{}}}],["taskstatus.ts:13",{"_index":736,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{}}}],["taskstatus.ts:16",{"_index":735,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{}}}],["taskstatus.ts:19",{"_index":732,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{}}}],["taskstatus.ts:22",{"_index":733,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{}}}],["taskstatus.ts:25",{"_index":734,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{}}}],["taskstatus.ts:3",{"_index":731,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{}}}],["taskstatusmapper",{"_index":3868,"title":{"classes/TaskStatusMapper.html":{}},"body":{"classes/TaskMapper.html":{},"classes/TaskStatusMapper.html":{}}}],["taskstatusmapper.maptoresponse(status",{"_index":3873,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskstatusresponse",{"_index":3859,"title":{"classes/TaskStatusResponse.html":{}},"body":{"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{}}}],["taskstatusresponse(status",{"_index":4036,"title":{},"body":{"classes/TaskStatusMapper.html":{}}}],["taskswithstatus",{"_index":3837,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskswithstatus.map((task",{"_index":3844,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskswithstatus.map((taskwithstatus",{"_index":3840,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskswithstatusvos",{"_index":594,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["taskuc",{"_index":3830,"title":{"injectables/TaskUC.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"overview.html":{}}}],["taskwithstatus",{"_index":3867,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskwithstatusvo",{"_index":575,"title":{"classes/TaskWithStatusVo.html":{}},"body":{"interfaces/Board.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"injectables/RoomsUc.html":{},"entities/Task.html":{},"classes/TaskMapper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{}}}],["taskwithstatusvo(task",{"_index":615,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{},"injectables/TaskUC.html":{}}}],["taskwithstatusvos",{"_index":4072,"title":{},"body":{"injectables/TaskUC.html":{}}}],["teacher",{"_index":2538,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"interfaces/ISubmissionProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"entities/Submission.html":{},"injectables/TaskRepo.html":{},"classes/UserMatch.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["teacherdashboard",{"_index":3779,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"miscellaneous/enumerations.html":{}}}],["teacherid",{"_index":2666,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{}}}],["teacherids",{"_index":865,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["teachers",{"_index":847,"title":{},"body":{"entities/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseProperties.html":{}}}],["team",{"_index":1051,"title":{"entities/Team.html":{}},"body":{"entities/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/ITeamProperties.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"entities/SchoolNews.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["team.entity",{"_index":1052,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["teamfactory",{"_index":5418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["teamfactory.build",{"_index":5511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["teamid",{"_index":4098,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["teammembers",{"_index":2626,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{},"injectables/SubmissionRepo.html":{}}}],["teamnews",{"_index":1099,"title":{"entities/TeamNews.html":{}},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"injectables/NewsRepo.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"miscellaneous/variables.html":{}}}],["teamnews(props",{"_index":1096,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["teamnewscontroller",{"_index":3282,"title":{"controllers/TeamNewsController.html":{}},"body":{"modules/NewsModule.html":{},"controllers/TeamNewsController.html":{}}}],["teamnewsfactory",{"_index":5420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["teams",{"_index":2474,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/ITeamProperties.html":{},"entities/Team.html":{},"controllers/TeamNewsController.html":{},"miscellaneous/enumerations.html":{}}}],["teardown",{"_index":5298,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["tech",{"_index":5636,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["technial",{"_index":5939,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technical",{"_index":2355,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["technically",{"_index":5700,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technological",{"_index":4787,"title":{},"body":{"license.html":{}}}],["technology",{"_index":5649,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tell",{"_index":5626,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["tells",{"_index":4692,"title":{},"body":{"license.html":{}}}],["temp",{"_index":2222,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["template",{"_index":139,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"classes/GlobalErrorFilter.html":{},"modules/ManagementModule.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["term",{"_index":4752,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["terminate",{"_index":5017,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":5036,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":5026,"title":{},"body":{"license.html":{}}}],["termination",{"_index":5014,"title":{},"body":{"license.html":{}}}],["terms",{"_index":4474,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["test",{"_index":1919,"title":{},"body":{"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/TaskFactory.html":{},"classes/TestBootstrapConsole.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["test.createtestingmodule",{"_index":1932,"title":{},"body":{"controllers/DelayController.html":{},"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["test.module.ts",{"_index":1915,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["test.module.ts:12",{"_index":1917,"title":{},"body":{"controllers/DelayController.html":{}}}],["test/...*.e2e",{"_index":5451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testable",{"_index":6089,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["testbootstrapconsole",{"_index":4104,"title":{"classes/TestBootstrapConsole.html":{}},"body":{"classes/TestBootstrapConsole.html":{}}}],["testcase",{"_index":6195,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testdata",{"_index":6214,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tested",{"_index":1138,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testenvironment",{"_index":5474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testing",{"_index":2873,"title":{"additional-documentation/nestjs-application/testing.html":{}},"body":{"modules/InterceptorModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["testingmodule",{"_index":1921,"title":{},"body":{"controllers/DelayController.html":{},"classes/TestBootstrapConsole.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule",{"_index":6282,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.close",{"_index":6291,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(entitymanager",{"_index":6285,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(mikroorm",{"_index":6284,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(newsrepo",{"_index":6283,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testpathignorepatterns",{"_index":5460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testregex",{"_index":5457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tests",{"_index":365,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"modules/NewsModule.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["text",{"_index":807,"title":{},"body":{"injectables/ConsoleWriterService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"classes/SubmissionFactory.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["text.validator.ts",{"_index":6018,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textutils",{"_index":6001,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textvalidator",{"_index":6019,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["that's",{"_index":366,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{}}}],["thats",{"_index":5775,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["therefore",{"_index":4625,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["things",{"_index":4595,"title":{},"body":{"license.html":{}}}],["think",{"_index":5966,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["third",{"_index":4812,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["this(entityclass",{"_index":463,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this._email",{"_index":2530,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["this._id",{"_index":1424,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["this._operator",{"_index":3598,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries",{"_index":3600,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries.length",{"_index":3599,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries.push(query",{"_index":3602,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries[0",{"_index":3601,"title":{},"body":{"classes/Scope.html":{}}}],["this._timeout",{"_index":4139,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["this.accesskeyid",{"_index":2613,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{}}}],["this.addquery",{"_index":1116,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["this.addquery(emptyresultquery",{"_index":3361,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery(queries[0",{"_index":3362,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery(query",{"_index":4028,"title":{},"body":{"classes/TaskScope.html":{}}}],["this.addroom(room",{"_index":1368,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.addstatustotasks(isteacher",{"_index":595,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["this.adminidandtoken",{"_index":157,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.alias",{"_index":3738,"title":{},"body":{"entities/System.html":{}}}],["this.allrooms",{"_index":1378,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.amqpconnection.publish(this.options.exchange",{"_index":3054,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["this.aud",{"_index":2894,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["this.authorizationservice.checkentitypermissions",{"_index":3423,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.checkentitypermissions(creatorid",{"_index":6114,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.authorizationservice.checkentitypermissions(userid",{"_index":3402,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getentitypermissions(userid",{"_index":3436,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getpermittedcourses(user",{"_index":4065,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.authorizationservice.getpermittedentities(userid",{"_index":3432,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getpermittedlessons(user",{"_index":4066,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.authorizationservice.hasoneoftaskdashboardpermissions(user",{"_index":4062,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.authorizationservice.hastaskpermission(user",{"_index":4073,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.availabledate",{"_index":2672,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.basepath",{"_index":1831,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.bsonconverter.deserialize(bsondocuments",{"_index":1876,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.bsonconverter.serialize(jsondocuments",{"_index":1899,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.bucket",{"_index":518,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{}}}],["this.build(params",{"_index":466,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.buildboard(course",{"_index":596,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["this.byuseridquery(userid",{"_index":3712,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["this.cache",{"_index":3554,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["this.classnames",{"_index":2835,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{}}}],["this.classnames.push(...props.classnames",{"_index":2564,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["this.clone(newpropsfactory",{"_index":474,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.code",{"_index":789,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.color",{"_index":911,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.columns",{"_index":1342,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.comment",{"_index":2643,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["this.consolewriter.info('schulcloud",{"_index":3613,"title":{},"body":{"classes/ServerConsole.html":{}}}],["this.consolewriter.info(`input",{"_index":3614,"title":{},"body":{"classes/ServerConsole.html":{}}}],["this.consolewriter.info(report",{"_index":1684,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["this.constructor",{"_index":480,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.content",{"_index":644,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["this.course",{"_index":990,"title":{},"body":{"entities/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Lesson.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.course._id",{"_index":993,"title":{},"body":{"entities/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{}}}],["this.course.color",{"_index":2748,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.course.getnumberofstudents",{"_index":2718,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.course.name",{"_index":2746,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.course.substitutionteachers.contains(user",{"_index":2728,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.course?.isfinished",{"_index":2684,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.coursename",{"_index":3863,"title":{},"body":{"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["this.courserepo.findallbyuserid",{"_index":1638,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["this.courserepo.findallbyuserid(user.id",{"_index":3792,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["this.courserepo.findallbyuserid(userid",{"_index":1167,"title":{},"body":{"injectables/CourseUc.html":{}}}],["this.courserepo.findallforteacher(user.id",{"_index":3790,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["this.courserepo.findone(roomid",{"_index":586,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["this.courseuc.findallbyuser(currentuser.userid",{"_index":943,"title":{},"body":{"controllers/CourseController.html":{}}}],["this.createdat",{"_index":637,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["this.createerrorresponse(error",{"_index":2410,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["this.creategridelement(elementwithposition",{"_index":1562,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["this.creator",{"_index":522,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.dashboard",{"_index":1429,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["this.dashboardrepo.getdashboardbyid(dashboardid",{"_index":1642,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["this.dashboardrepo.getusersdashboard(userid",{"_index":1637,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["this.dashboardrepo.persistandflush(dashboard",{"_index":1641,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["this.dashboarduc.getusersdashboard(currentuser.userid",{"_index":1223,"title":{},"body":{"controllers/DashboardController.html":{}}}],["this.dashboarduc.moveelementondashboard",{"_index":1226,"title":{},"body":{"controllers/DashboardController.html":{}}}],["this.dashboarduc.renamegroupondashboard",{"_index":1232,"title":{},"body":{"controllers/DashboardController.html":{}}}],["this.data",{"_index":1037,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["this.databasemanagementservice.clearcollection(collectionname",{"_index":1885,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementservice.collectionexists(collectionname",{"_index":1883,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementservice.createcollection(collectionname",{"_index":1886,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementservice.finddocumentsofcollection(collectionname",{"_index":1898,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementservice.getcollectionnames",{"_index":1838,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementservice.importcollection",{"_index":1889,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementuc.exportcollectionstofilesystem",{"_index":1713,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["this.databasemanagementuc.exportcollectionstofilesystem([collectionname",{"_index":1715,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["this.databasemanagementuc.exportcollectionstofilesystem(filter",{"_index":1689,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["this.databasemanagementuc.seeddatabasecollectionsfromfilesystem",{"_index":1710,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["this.databasemanagementuc.seeddatabasecollectionsfromfilesystem([collectionname",{"_index":1712,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["this.databasemanagementuc.seeddatabasecollectionsfromfilesystem(filter",{"_index":1681,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["this.db.collection(collectionname",{"_index":1752,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.db.createcollection(collectionname",{"_index":1770,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.db.dropcollection(collectionname",{"_index":1771,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.db.listcollections(undefined",{"_index":1762,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.deletedat",{"_index":514,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{}}}],["this.deletefilesuc.removedeletedfilesdata(removedsince",{"_index":1958,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["this.description",{"_index":901,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.details",{"_index":791,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.determinenewroomsin(rooms",{"_index":1366,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.displayat",{"_index":1080,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["this.displaycolor",{"_index":650,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["this.duedate",{"_index":2674,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.elements",{"_index":651,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{}}}],["this.em.find(basefile",{"_index":2316,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["this.em.find(coursegroup",{"_index":3714,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["this.em.findandcount(course",{"_index":1136,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["this.em.findandcount(coursegroup",{"_index":1003,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["this.em.findandcount(lesson",{"_index":2987,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["this.em.findandcount(news",{"_index":3317,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.findandcount(submission",{"_index":3711,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["this.em.findandcount(task",{"_index":3947,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.findone(dashboardgridelementmodel",{"_index":1564,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["this.em.findone(dashboardmodelentity",{"_index":1585,"title":{},"body":{"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.em.findoneorfail(course",{"_index":1142,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["this.em.findoneorfail(dashboardmodelentity",{"_index":1613,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.em.findoneorfail(news",{"_index":3314,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.findoneorfail(role",{"_index":3553,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["this.em.findoneorfail(storageprovider",{"_index":3680,"title":{},"body":{"injectables/StorageProviderRepo.html":{}}}],["this.em.findoneorfail(user",{"_index":1587,"title":{},"body":{"injectables/DashboardModelMapper.html":{},"injectables/UserRepo.html":{}}}],["this.em.flush",{"_index":563,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.getconnection('write').getdb",{"_index":1751,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.em.persist(entity",{"_index":557,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.persist(modelentity",{"_index":1609,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.em.persist(n",{"_index":561,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.persistandflush(entity",{"_index":558,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.persistandflush(modelentity",{"_index":1611,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.em.populate(coursenews",{"_index":3326,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(lessons",{"_index":2988,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["this.em.populate(newsentities",{"_index":3318,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(newsentity",{"_index":3315,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(regularfiles",{"_index":2320,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["this.em.populate(schoolnews",{"_index":3324,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(taskentities",{"_index":3979,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.populate(tasks",{"_index":3948,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.populate(teamnews",{"_index":3325,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(user",{"_index":4205,"title":{},"body":{"injectables/UserRepo.html":{}}}],["this.em.remove(el",{"_index":1584,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["this.em.remove(entity",{"_index":564,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.removeandflush(entity",{"_index":565,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.email",{"_index":2557,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"entities/User.html":{},"classes/UserMatch.html":{}}}],["this.encoding",{"_index":2263,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["this.encryptionservice",{"_index":2038,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["this.encryptionservice.decrypt(value",{"_index":2050,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["this.encryptionservice.encrypt(value",{"_index":2047,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["this.endpointurl",{"_index":2611,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{}}}],["this.entityclass",{"_index":481,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.entityclass(props",{"_index":465,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.errortype",{"_index":66,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.externalid",{"_index":1085,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["this.feathersauthprovider.getpermittedschools(userid",{"_index":343,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getpermittedtargets(userid",{"_index":344,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getuserschoolpermissions(userid",{"_index":332,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getusertargetpermissions(userid",{"_index":333,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersserviceprovider.getservice('users",{"_index":2118,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`${targetmodel}/:scopeid/userpermissions",{"_index":2106,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`/users/:scopeid/${targetmodel",{"_index":2110,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`path",{"_index":6030,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.filesrepo.deletefile(file",{"_index":1984,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["this.filesrepo.findallfilesforcleanup(removedsince",{"_index":1974,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["this.filestorageadapter.deletefile(file",{"_index":2322,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["this.filesystemadapter.createdir(targetfolder",{"_index":1894,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.eol",{"_index":1911,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.joinpath(__dirname",{"_index":1830,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.joinpath(basedir",{"_index":1846,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.joinpath(targetfolder",{"_index":1841,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.joinpath(this.basedir",{"_index":1832,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.readdir(basedir",{"_index":1844,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.readfile(filepath",{"_index":1873,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.writefile(filepath",{"_index":1910,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.findallforstudent(user",{"_index":4076,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.findallforteacher(user",{"_index":4077,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.findexistinggridelement(elementwithposition",{"_index":1558,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["this.findnewsandcount(scope.query",{"_index":3312,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.findtasksandcount(scope.query",{"_index":3972,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.finished.set(props.finished",{"_index":2681,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.finished?.contains(user",{"_index":2683,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.firstname",{"_index":2553,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"entities/User.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{}}}],["this.flagged",{"_index":2568,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["this.get('/api/v1/me",{"_index":79,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.get(path",{"_index":135,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.getadminidandtoken",{"_index":130,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.getasadmin(`/api/v1/groups.members?roomname=${groupname",{"_index":108,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.getasadmin(`/api/v1/groups.moderators?roomname=${groupname",{"_index":106,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.getasadmin(`/api/v1/users.list?${querystring",{"_index":90,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.getbydraftforcreatorquery(creatorid",{"_index":4029,"title":{},"body":{"classes/TaskScope.html":{}}}],["this.getbydraftquery(false",{"_index":4030,"title":{},"body":{"classes/TaskScope.html":{}}}],["this.getbydraftquery(isdraft",{"_index":4027,"title":{},"body":{"classes/TaskScope.html":{}}}],["this.getbydraftquery(true",{"_index":4031,"title":{},"body":{"classes/TaskScope.html":{}}}],["this.getcollectionnames",{"_index":1768,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.getdatabasecollection(collectionname",{"_index":1753,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.getdefaultmaxduedate",{"_index":4080,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.getelement(position",{"_index":1391,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.getentitypermissions(userid",{"_index":337,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.getfirstopenindex",{"_index":1386,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.getgradeduserids",{"_index":2708,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.getgradeduserids().some((uid",{"_index":2734,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.getid",{"_index":1335,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.getmaxsubmissions",{"_index":2722,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.getnewspermissions(userid",{"_index":3416,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getnumberofgradedusers",{"_index":2721,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.getnumberofsubmittedusers",{"_index":2720,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.getorconstructdashboardmodelentity(entity",{"_index":1577,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["this.getparent",{"_index":2712,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.getpermittedtargets(userid",{"_index":3411,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getreferencesfromposition(from",{"_index":1360,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.getseedfolder",{"_index":1833,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.getsubmissionitems",{"_index":2701,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.getsubmissionitems().map((submission",{"_index":2692,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.getsubmitteduserids",{"_index":2697,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.getsubmitteduserids().some((uid",{"_index":2730,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.gettargetfilters(userid",{"_index":3429,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.gettargetfolder(toseedfolder",{"_index":1893,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.getuser(userid",{"_index":2101,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.grade",{"_index":2647,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["this.gradecomment",{"_index":2649,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["this.gradecomment.length",{"_index":2652,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["this.graded",{"_index":739,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{},"classes/TaskStatusResponse.html":{}}}],["this.gradefiles",{"_index":2653,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["this.gradefiles.length",{"_index":2654,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["this.grid",{"_index":1348,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.grid.delete(key",{"_index":1376,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.grid.delete(this.gridindexfromposition(position",{"_index":1400,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.grid.get(i",{"_index":1390,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.grid.get(key",{"_index":1356,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.grid.get(this.gridindexfromposition(position",{"_index":1357,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.grid.keys()].foreach((key",{"_index":1369,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.grid.keys()].map((key",{"_index":1354,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.grid.set(index",{"_index":1389,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.grid.set(this.gridindexfromposition(element.pos",{"_index":1350,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.grid.set(this.gridindexfromposition(position",{"_index":1403,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.grid.values",{"_index":1382,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.gridelements",{"_index":1460,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["this.gridelements.set(props.gridelements",{"_index":1437,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["this.groupelements",{"_index":1459,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["this.groupid",{"_index":1458,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["this.hascoursereadpermission(user",{"_index":3817,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["this.hascoursewritepermission(user",{"_index":3795,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["this.hidden",{"_index":2576,"title":{},"body":{"interfaces/ILessonProperties.html":{},"entities/Lesson.html":{}}}],["this.httpservice",{"_index":137,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.id",{"_index":635,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"entities/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/GridElement.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IGridElement.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/UserInfoResponse.html":{}}}],["this.importuserid",{"_index":2829,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{}}}],["this.isdirectory",{"_index":513,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{}}}],["this.isdraft",{"_index":740,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskStatusResponse.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.isfinished",{"_index":4046,"title":{},"body":{"classes/TaskStatusResponse.html":{}}}],["this.isfinishedforuser(user",{"_index":2723,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.isgradedforuser(user",{"_index":2738,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.isgroup",{"_index":1327,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.issubmittedforuser(user",{"_index":2737,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.issubstitutionteacher",{"_index":741,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{},"classes/TaskStatusResponse.html":{}}}],["this.issubstitutionteacher(userid",{"_index":2726,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.isteacher(user",{"_index":588,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["this.joinpath(os.tmpdir",{"_index":2268,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["this.jwtvalidationadapter.iswhitelisted(accountid",{"_index":2932,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.key).tostring",{"_index":3726,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["this.key).tostring(cryptojs.enc.utf8",{"_index":3728,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["this.lastname",{"_index":2555,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"entities/User.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{}}}],["this.ldapdn",{"_index":2549,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["this.ldapid",{"_index":2551,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["this.lesson",{"_index":2678,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.lesson.name",{"_index":2747,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.lessonrepo.findallbycourseids(readcourseids",{"_index":3809,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["this.lessonrepo.findallbycourseids(writecourseids",{"_index":3808,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["this.limit",{"_index":3463,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.loadallcollectionsfromdatabase(folder",{"_index":1853,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.loadallcollectionsfromfilesystem(folder",{"_index":1852,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.loadcollectionsavailablefromsourceandfilterbycollectionnames",{"_index":1870,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.logger",{"_index":1953,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"injectables/NewsUc.html":{}}}],["this.logger.error('the",{"_index":1991,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["this.logger.error(err",{"_index":1988,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["this.logger.log('cleanup",{"_index":1959,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["this.logger.log(`${numberoffiles",{"_index":1977,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["this.logger.log(`cleanup",{"_index":1955,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["this.logger.log(`create",{"_index":3400,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.log(`finished",{"_index":6151,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`news",{"_index":3407,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`return",{"_index":3417,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`start",{"_index":3408,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`user",{"_index":6124,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.setcontext(deletefilesuc.name",{"_index":1972,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["this.logger.setcontext(youruc.name",{"_index":6148,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.verbose('before",{"_index":2009,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.logger.verbose(`after",{"_index":2012,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.loginname",{"_index":2831,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/UserMatchResponse.html":{}}}],["this.mapelementtoentity(e",{"_index":1550,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["this.mapgridelementtomodel(elementwithposition",{"_index":1580,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["this.mapper.mapdashboardtoentity(dashboardmodel",{"_index":1614,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.mapper.mapdashboardtoentity(modelentity",{"_index":1610,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.mapper.mapdashboardtomodel(entity",{"_index":1608,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.mapper.maptoresponse(board",{"_index":3564,"title":{},"body":{"controllers/RoomsController.html":{}}}],["this.mapreferencetoentity(ref",{"_index":1540,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["this.mapreferencetomodel(ref",{"_index":1574,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["this.match",{"_index":2566,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/UserMatch.html":{}}}],["this.matchedby",{"_index":2540,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{}}}],["this.maxsubmissions",{"_index":738,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{},"classes/TaskStatusResponse.html":{}}}],["this.mergeelementintoposition(elementtomove",{"_index":1362,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.message",{"_index":790,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.mongod.stop",{"_index":3127,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["this.name",{"_index":636,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"entities/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"entities/Lesson.html":{},"entities/Role.html":{},"entities/School.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{}}}],["this.newsrepo.findall(targets",{"_index":3414,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.findonebyid(id",{"_index":3419,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.persistandflush(news",{"_index":3406,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.removeandflush(news",{"_index":3426,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsuc.create",{"_index":3185,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.newsuc.delete(newsid",{"_index":3201,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.findallforuser",{"_index":3190,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["this.newsuc.findonebyidforuser(newsid",{"_index":3197,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.update(newsid",{"_index":3198,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.options.adminid",{"_index":158,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.options.adminpassword",{"_index":163,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.options.admintoken",{"_index":159,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.options.adminuser",{"_index":162,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.options.module",{"_index":4109,"title":{},"body":{"classes/TestBootstrapConsole.html":{}}}],["this.options.routingkey",{"_index":3055,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["this.options.uri",{"_index":169,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.orm.close",{"_index":3126,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["this.params(params",{"_index":975,"title":{},"body":{"classes/CourseFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["this.permissions",{"_index":2601,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"entities/Role.html":{}}}],["this.permissionservice.resolvepermissions(user",{"_index":3818,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"controllers/UserController.html":{}}}],["this.persistandflush(dashboard",{"_index":1616,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.populateroles(user.roles.getitems",{"_index":4206,"title":{},"body":{"injectables/UserRepo.html":{}}}],["this.positionfromgridindex(key",{"_index":1355,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.post('/api/v1/logout",{"_index":88,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.post('/api/v1/users.setstatus",{"_index":83,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.post(path",{"_index":131,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/groups.addmoderator",{"_index":102,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/groups.archive",{"_index":96,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/groups.create",{"_index":113,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/groups.delete",{"_index":116,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/groups.invite",{"_index":100,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/groups.kick",{"_index":98,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/groups.removemoderator",{"_index":104,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/groups.unarchive",{"_index":92,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/users.create",{"_index":120,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/users.createtoken",{"_index":86,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/users.delete",{"_index":125,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.private",{"_index":2677,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.propertiestopopulate",{"_index":2321,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{}}}],["this.propsfactory",{"_index":461,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.propsfactory.afterbuild(afterbuildfn",{"_index":472,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.propsfactory.build(params",{"_index":464,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.propsfactory.params(params",{"_index":475,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.propsfactory.rewindsequence",{"_index":477,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.propsfactory.transient(transient",{"_index":476,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.propsfactory['sequence",{"_index":484,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.references",{"_index":1321,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.references.length",{"_index":1329,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.references.set(references",{"_index":1428,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["this.region",{"_index":2617,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{}}}],["this.removeandflush(file",{"_index":2323,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["this.removefromposition(from",{"_index":1363,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.removeroomsnotinlist(rooms",{"_index":1364,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.request.app.get('feathersapp",{"_index":2159,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["this.resolvepermissionsbyroles(innerroles",{"_index":3495,"title":{},"body":{"injectables/PermissionService.html":{}}}],["this.resolvepermissionsbyroles(user.roles.getitems",{"_index":3493,"title":{},"body":{"injectables/PermissionService.html":{}}}],["this.response",{"_index":64,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.rolenames",{"_index":2833,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{}}}],["this.rolenames.push(...props.rolenames",{"_index":2561,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["this.roles.set(props.roles",{"_index":2603,"title":{},"body":{"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["this.roomid",{"_index":648,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{}}}],["this.roomsuc.getboard(roomid",{"_index":3563,"title":{},"body":{"controllers/RoomsController.html":{}}}],["this.school",{"_index":902,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"entities/User.html":{},"classes/UserMatch.html":{}}}],["this.secretaccesskey",{"_index":2615,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{}}}],["this.shorttitle",{"_index":1028,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["this.skip",{"_index":3462,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.source",{"_index":1087,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["this.sourcedescription",{"_index":1089,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["this.spinner.info(text",{"_index":816,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["this.startdate",{"_index":915,"title":{},"body":{"entities/Course.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"interfaces/ICourseProperties.html":{}}}],["this.status",{"_index":639,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.statuscode",{"_index":61,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.storagefilename",{"_index":516,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{}}}],["this.storageprovider",{"_index":520,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{}}}],["this.student",{"_index":2641,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["this.student.id",{"_index":2656,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["this.students.length",{"_index":917,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.students.set(props.students",{"_index":905,"title":{},"body":{"entities/Course.html":{},"entities/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{}}}],["this.submissions.getitems",{"_index":2689,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.submissions.isinitialized(true",{"_index":2686,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.submissions.set(props.submissions",{"_index":2680,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.submitted",{"_index":737,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{},"classes/TaskStatusResponse.html":{}}}],["this.substitutionteachers.set(props.substitutionteachers",{"_index":909,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.system",{"_index":2547,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["this.target",{"_index":3228,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{}}}],["this.targetid",{"_index":3227,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{}}}],["this.targetmodel",{"_index":3226,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{}}}],["this.task",{"_index":2645,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Submission.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.taskfilter(isteacher",{"_index":590,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["this.taskrepo.findallbyparentids",{"_index":4082,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.taskrepo.findallfinishedbyparentids",{"_index":4071,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.taskrepo.findbysingleparent(user.id",{"_index":592,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["this.taskuc.findall(currentuser.userid",{"_index":3838,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskuc.findallfinished(currentuser.userid",{"_index":3843,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.teachers.set(props.teachers",{"_index":907,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.timeout",{"_index":5293,"title":{},"body":{"todo.html":{}}}],["this.timeout(10000",{"_index":6234,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["this.title",{"_index":649,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BusinessError.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"entities/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/GridElement.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["this.title.substr(0",{"_index":1332,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.total",{"_index":3461,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.type",{"_index":643,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BusinessError.html":{},"entities/System.html":{}}}],["this.untildate",{"_index":913,"title":{},"body":{"entities/Course.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"interfaces/ICourseProperties.html":{}}}],["this.updatedat",{"_index":638,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["this.updateexistinggridelement(existing",{"_index":1560,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["this.updater",{"_index":3229,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{}}}],["this.url",{"_index":3736,"title":{},"body":{"entities/System.html":{}}}],["this.user",{"_index":1434,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["this.useremailservice.sendwelcomemessage(user",{"_index":6123,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userid",{"_index":1352,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"classes/UserMatchResponse.html":{}}}],["this.userrepo.findbyemail(props.email",{"_index":6128,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userrepo.findbyid(currentuser.userid",{"_index":4172,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userrepo.findbyid(userid",{"_index":585,"title":{},"body":{"interfaces/Board.html":{},"injectables/JwtStrategy.html":{},"injectables/RoomsUc.html":{},"injectables/TaskUC.html":{}}}],["this.userrepo.save(user",{"_index":6118,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userservice.checkusernotexistbyemail(props.email",{"_index":6116,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.validaterocketchatconfig",{"_index":156,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.validateusersmatch(dashboard",{"_index":1643,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["this.validationerrors",{"_index":228,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["this.xpos",{"_index":1426,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["this.xposition",{"_index":1456,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["this.ypos",{"_index":1427,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["this.yposition",{"_index":1457,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["those",{"_index":4734,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["though",{"_index":4972,"title":{},"body":{"license.html":{}}}],["thoughtbot/fishery",{"_index":395,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["three",{"_index":4872,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["through",{"_index":4682,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["throw",{"_index":148,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/AuthorizationService.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardUc.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IGridElement.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"controllers/ImportUserController.html":{},"injectables/JwtStrategy.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PermissionService.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"entities/Task.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["throwerror",{"_index":4132,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(err",{"_index":4138,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(new",{"_index":4137,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["thrown",{"_index":6241,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["throws",{"_index":334,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["thus",{"_index":4769,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ticket",{"_index":4504,"title":{},"body":{"index.html":{}}}],["ticketsystem.hpi",{"_index":4506,"title":{},"body":{"index.html":{}}}],["tightly",{"_index":5780,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["time",{"_index":1178,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/JwtValidationAdapter.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["timeout",{"_index":2870,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["timeout(milliseconds",{"_index":4141,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout(this.timeout",{"_index":4135,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeouterror",{"_index":4133,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeoutinterceptor",{"_index":2872,"title":{"injectables/TimeoutInterceptor.html":{}},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{}}}],["timeoutinterceptor.defaulttimeout",{"_index":4140,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeouts",{"_index":6239,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["times",{"_index":5832,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["timestamp",{"_index":3232,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["timouts",{"_index":6227,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tiny",{"_index":4367,"title":{},"body":{"dependencies.html":{}}}],["title",{"_index":181,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BusinessError.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ICreateNews.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IErrorType.html":{},"interfaces/IGridElement.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/PatchGroupParams.html":{},"injectables/RoomsUc.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/ValidationError.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["titlea",{"_index":1314,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["titleb",{"_index":1316,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["tls",{"_index":2193,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["tmpdirpath",{"_index":2269,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["toarray",{"_index":1764,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["todo",{"_index":370,"title":{"todo.html":{}},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"entities/Course.html":{},"injectables/DashboardRepo.html":{},"classes/EncryptedStringType.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"modules/InterceptorModule.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"entities/Role.html":{},"injectables/RoomsUc.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"injectables/SubmissionRepo.html":{},"entities/System.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/UserMatch.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["together",{"_index":3205,"title":{},"body":{"classes/NewsFilterQuery.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["token",{"_index":11,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["tooling",{"_index":6250,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tools",{"_index":4448,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["topics",{"_index":6142,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["topromise",{"_index":151,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["toseedfolder",{"_index":1687,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{}}}],["total",{"_index":942,"title":{},"body":{"controllers/CourseController.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["trace",{"_index":2585,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["traceid",{"_index":5934,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tracing",{"_index":5959,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trade",{"_index":4999,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":4998,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":5000,"title":{},"body":{"license.html":{}}}],["transaction",{"_index":4946,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transactions",{"_index":5915,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["transfer",{"_index":4683,"title":{},"body":{"license.html":{}}}],["transferred",{"_index":4948,"title":{},"body":{"license.html":{}}}],["transferring",{"_index":5056,"title":{},"body":{"license.html":{}}}],["transfers",{"_index":6092,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["transform",{"_index":2423,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/ParseObjectIdPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transform(value",{"_index":3466,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["transform:true",{"_index":2426,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transformer",{"_index":4258,"title":{},"body":{"dependencies.html":{}}}],["transformoptions",{"_index":2424,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transient",{"_index":408,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"injectables/Logger.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["transient(transient",{"_index":453,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["translate",{"_index":4471,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["translates",{"_index":5829,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["transmission",{"_index":4899,"title":{},"body":{"license.html":{}}}],["transparent",{"_index":2017,"title":{},"body":{"classes/EncryptedStringType.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transport",{"_index":5950,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["treated",{"_index":4971,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["treaty",{"_index":4794,"title":{},"body":{"license.html":{}}}],["tries",{"_index":6203,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["trigger",{"_index":5844,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggerd",{"_index":5953,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggered",{"_index":5925,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["true",{"_index":123,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"entities/BaseFile.html":{},"interfaces/Board.html":{},"entities/CourseNews.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"entities/Directory.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/ImportUser.html":{},"interfaces/JwtConstants.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"entities/News.html":{},"interfaces/Options.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoomsUc.html":{},"entities/SchoolNews.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{},"controllers/UserController.html":{},"classes/UserMatch.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["try",{"_index":1982,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"classes/GlobalErrorFilter.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ts",{"_index":5278,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["two",{"_index":4599,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["typ",{"_index":2900,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["type",{"_index":13,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"entities/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"injectables/PermissionService.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"entities/System.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["type.interface.ts",{"_index":2497,"title":{},"body":{"interfaces/IErrorType.html":{}}}],["typealiases",{"_index":5336,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":6365,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["typeof",{"_index":1392,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/ISubmissionProperties.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/Scope.html":{},"entities/Submission.html":{}}}],["typeorm",{"_index":6369,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["types",{"_index":875,"title":{},"body":{"entities/Course.html":{},"entities/CourseNews.html":{},"interfaces/ICourseProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"modules/MongoMemoryDatabaseModule.html":{},"entities/News.html":{},"injectables/NewsRepo.html":{},"entities/SchoolNews.html":{},"entities/Submission.html":{},"entities/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["types.ts",{"_index":5405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types/entity",{"_index":2659,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["types/news.types",{"_index":1054,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["typesafety",{"_index":3196,"title":{},"body":{"controllers/NewsController.html":{}}}],["typescript",{"_index":47,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"entities/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"modules/ManagementModule.html":{},"entities/News.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"entities/SchoolNews.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["typical",{"_index":4925,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typically",{"_index":5885,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typing",{"_index":2135,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["t|j)s",{"_index":5462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["u",{"_index":445,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["uc",{"_index":1952,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"modules/FilesModule.html":{},"modules/TaskModule.html":{},"controllers/TeamNewsController.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["uc.ts",{"_index":5988,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uc/course.uc",{"_index":935,"title":{},"body":{"controllers/CourseController.html":{},"modules/LearnroomModule.html":{}}}],["uc/dashboard.uc",{"_index":1217,"title":{},"body":{"controllers/DashboardController.html":{},"modules/LearnroomModule.html":{}}}],["uc/database",{"_index":1670,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{}}}],["uc/news.uc",{"_index":3177,"title":{},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{}}}],["uc/rooms.uc",{"_index":666,"title":{},"body":{"injectables/BoardMapper.html":{},"modules/LearnroomModule.html":{},"controllers/RoomsController.html":{}}}],["uc/task.authorization.service",{"_index":3891,"title":{},"body":{"modules/TaskModule.html":{}}}],["uc/task.uc",{"_index":3831,"title":{},"body":{"controllers/TaskController.html":{}}}],["ui",{"_index":4365,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["uid",{"_index":2731,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["un",{"_index":5908,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unambigious",{"_index":2072,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["unarchivegroup(groupname",{"_index":91,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["unauthorizedexception",{"_index":327,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/JwtStrategy.html":{},"injectables/TaskUC.html":{},"miscellaneous/variables.html":{}}}],["unauthorizedexception('insufficient",{"_index":341,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["unauthorizedexception('unauthorized",{"_index":2933,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["uncle",{"_index":6085,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["und",{"_index":5838,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["undefined",{"_index":700,"title":{},"body":{"classes/BoardResponse.html":{},"entities/Course.html":{},"entities/CourseGroup.html":{},"classes/CourseMetadataListResponse.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"classes/DashboardResponse.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/EncryptedStringType.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"classes/ImportUserListResponse.html":{},"entities/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/NewsListResponse.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"entities/Submission.html":{},"entities/Task.html":{},"classes/TaskListResponse.html":{},"injectables/TaskRepo.html":{},"classes/TaskWithStatusVo.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":4459,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["understand",{"_index":5651,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["unexpected",{"_index":6237,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unfamiliar",{"_index":6196,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unhandled",{"_index":2404,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["uniform",{"_index":5679,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unique",{"_index":2075,"title":{},"body":{"classes/ErrorResponse.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"entities/Role.html":{},"entities/User.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["uniquegradeduserids",{"_index":2705,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["uniquesubmitteduserids",{"_index":2694,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["unit",{"_index":5548,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["universal",{"_index":4369,"title":{},"body":{"dependencies.html":{}}}],["unknown",{"_index":762,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/NewsUc.html":{},"miscellaneous/variables.html":{}}}],["unknownerror",{"_index":2371,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["unless",{"_index":4933,"title":{},"body":{"license.html":{}}}],["unlike",{"_index":6316,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unlimited",{"_index":4757,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":4658,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":4780,"title":{},"body":{"license.html":{}}}],["unpacking",{"_index":4968,"title":{},"body":{"license.html":{}}}],["unpublished",{"_index":2479,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{}}}],["unsafe",{"_index":49,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/JwtValidationAdapter.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["unskip",{"_index":3286,"title":{},"body":{"modules/NewsModule.html":{}}}],["untestable",{"_index":6139,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["until",{"_index":2715,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["untildate",{"_index":848,"title":{},"body":{"entities/Course.html":{},"classes/CourseFactory.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseProperties.html":{}}}],["untildateinfuture",{"_index":1122,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["unused",{"_index":4111,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["up",{"_index":4500,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["update",{"_index":3157,"title":{},"body":{"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"modules/NewsModule.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{}}}],["update(id",{"_index":3394,"title":{},"body":{"injectables/NewsUc.html":{}}}],["update(newsid",{"_index":3172,"title":{},"body":{"controllers/NewsController.html":{}}}],["updated",{"_index":3231,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["updatedat",{"_index":383,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BoardElementResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"injectables/CourseUc.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/ResolvedUser.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{}}}],["updatedmodel",{"_index":1559,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["updateexistinggridelement",{"_index":1509,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["updateexistinggridelement(elementmodel",{"_index":1531,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["updatematch",{"_index":2781,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["updatematch(importuserid",{"_index":2789,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["updatematchparams",{"_index":2790,"title":{"classes/UpdateMatchParams.html":{}},"body":{"controllers/ImportUserController.html":{},"classes/UpdateMatchParams.html":{}}}],["updatenewsparams",{"_index":3173,"title":{"classes/UpdateNewsParams.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/UpdateNewsParams.html":{}}}],["updater",{"_index":1061,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["updaterid",{"_index":1077,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["updates",{"_index":4144,"title":{},"body":{"classes/UpdateMatchParams.html":{},"license.html":{}}}],["updating",{"_index":2475,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/UpdateNewsParams.html":{},"miscellaneous/typealiases.html":{}}}],["updator/creator",{"_index":3302,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["upload",{"_index":4360,"title":{},"body":{"dependencies.html":{}}}],["uploads",{"_index":2637,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["upon",{"_index":6071,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["uppercase",{"_index":6006,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uppercase_snake_case",{"_index":2074,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["uri",{"_index":24,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":2332,"title":{},"body":{"interfaces/GlobalConstants.html":{},"entities/System.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["urls",{"_index":4480,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["urlsafe",{"_index":4372,"title":{},"body":{"dependencies.html":{}}}],["usage",{"_index":6026,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["use",{"_index":372,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"entities/CourseNews.html":{},"injectables/FileSystemAdapter.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"injectables/Logger.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["usecase",{"_index":5718,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["useclass",{"_index":2068,"title":{},"body":{"modules/ErrorModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/ValidationModule.html":{}}}],["used",{"_index":112,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"controllers/TeamNewsController.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["usedecorators",{"_index":5440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usedglobals",{"_index":2331,"title":{},"body":{"interfaces/GlobalConstants.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":3098,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["useful",{"_index":5231,"title":{},"body":{"license.html":{}}}],["useguards(jwtauthguard",{"_index":5427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":145,"title":{"entities/User.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/AuthorizationService.html":{},"entities/BaseFile.html":{},"interfaces/Board.html":{},"entities/Course.html":{},"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DeleteFilesUc.html":{},"entities/Directory.html":{},"injectables/FeathersAuthProvider.html":{},"entities/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"modules/ImportUserModule.html":{},"classes/ImportUserResponse.html":{},"injectables/JwtStrategy.html":{},"modules/ManagementModule.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"injectables/PermissionService.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoomsUc.html":{},"entities/SchoolNews.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/Submission.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskFactory.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateMatchParams.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"injectables/UserRepo.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["user'})@ismongoid",{"_index":4145,"title":{},"body":{"classes/UpdateMatchParams.html":{}}}],["user(props",{"_index":6117,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user.controller",{"_index":2848,"title":{},"body":{"modules/ImportUserModule.html":{}}}],["user.controller.ts",{"_index":2777,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["user.controller.ts:17",{"_index":2784,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["user.controller.ts:27",{"_index":2792,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["user.controller.ts:37",{"_index":2787,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["user.createdat",{"_index":3516,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user.entity",{"_index":498,"title":{},"body":{"entities/BaseFile.html":{},"entities/Course.html":{},"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/ImportUser.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/Submission.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{},"classes/UserMatch.html":{}}}],["user.entity.ts",{"_index":2512,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{},"miscellaneous/enumerations.html":{}}}],["user.entity.ts:102",{"_index":2767,"title":{},"body":{"entities/ImportUser.html":{}}}],["user.entity.ts:105",{"_index":2757,"title":{},"body":{"entities/ImportUser.html":{}}}],["user.entity.ts:108",{"_index":2765,"title":{},"body":{"entities/ImportUser.html":{}}}],["user.entity.ts:111",{"_index":2760,"title":{},"body":{"entities/ImportUser.html":{}}}],["user.entity.ts:61",{"_index":4181,"title":{},"body":{"classes/UserMatch.html":{}}}],["user.entity.ts:69",{"_index":4183,"title":{},"body":{"classes/UserMatch.html":{}}}],["user.entity.ts:72",{"_index":4182,"title":{},"body":{"classes/UserMatch.html":{}}}],["user.entity.ts:78",{"_index":2769,"title":{},"body":{"entities/ImportUser.html":{}}}],["user.entity.ts:81",{"_index":2770,"title":{},"body":{"entities/ImportUser.html":{}}}],["user.entity.ts:84",{"_index":2762,"title":{},"body":{"entities/ImportUser.html":{}}}],["user.entity.ts:87",{"_index":2763,"title":{},"body":{"entities/ImportUser.html":{}}}],["user.entity.ts:90",{"_index":2759,"title":{},"body":{"entities/ImportUser.html":{}}}],["user.entity.ts:93",{"_index":2761,"title":{},"body":{"entities/ImportUser.html":{}}}],["user.entity.ts:99",{"_index":2758,"title":{},"body":{"entities/ImportUser.html":{}}}],["user.factory",{"_index":3696,"title":{},"body":{"classes/SubmissionFactory.html":{}}}],["user.firstname",{"_index":3512,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{}}}],["user.id",{"_index":2732,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/ResolvedUserMapper.html":{},"entities/Task.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/UserInfoMapper.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user.lastname",{"_index":3514,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{}}}],["user.permissions",{"_index":2105,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["user.repo.ts",{"_index":6021,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user.response",{"_index":2796,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["user.response.ts",{"_index":2822,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{}}}],["user.response.ts:25",{"_index":2859,"title":{},"body":{"classes/ImportUserResponse.html":{}}}],["user.response.ts:31",{"_index":2861,"title":{},"body":{"classes/ImportUserResponse.html":{}}}],["user.response.ts:37",{"_index":2857,"title":{},"body":{"classes/ImportUserResponse.html":{}}}],["user.response.ts:43",{"_index":2860,"title":{},"body":{"classes/ImportUserResponse.html":{}}}],["user.response.ts:49",{"_index":2864,"title":{},"body":{"classes/ImportUserResponse.html":{}}}],["user.response.ts:52",{"_index":2856,"title":{},"body":{"classes/ImportUserResponse.html":{}}}],["user.response.ts:55",{"_index":2863,"title":{},"body":{"classes/ImportUserResponse.html":{}}}],["user.response.ts:58",{"_index":2824,"title":{},"body":{"classes/ImportUserListResponse.html":{}}}],["user.response.ts:8",{"_index":2855,"title":{},"body":{"classes/ImportUserResponse.html":{}}}],["user.roles.getitems",{"_index":4174,"title":{},"body":{"controllers/UserController.html":{}}}],["user.roles.getitems().map((r",{"_index":5518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.roles.isinitialized(true",{"_index":3490,"title":{},"body":{"injectables/PermissionService.html":{}}}],["user.school.id",{"_index":5520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.school.tostring",{"_index":3520,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user.schoolid.tostring",{"_index":2103,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["user.ts",{"_index":5402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.uc.ts",{"_index":6015,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user.updatedat",{"_index":3518,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user/account",{"_index":2934,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["user/class",{"_index":5727,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["user/import",{"_index":2778,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["user_already_exists",{"_index":6109,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user_create",{"_index":6115,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["useralreadyexisterror",{"_index":6130,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["usercontroller",{"_index":4164,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["userfactory",{"_index":3695,"title":{},"body":{"classes/SubmissionFactory.html":{},"miscellaneous/variables.html":{}}}],["userfactory.build",{"_index":3699,"title":{},"body":{"classes/SubmissionFactory.html":{},"miscellaneous/variables.html":{}}}],["userid",{"_index":76,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/AuthorizationService.html":{},"interfaces/Board.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/FeathersAuthProvider.html":{},"classes/GridElement.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"entities/ImportUser.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"injectables/NewsUc.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoomsUc.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/UpdateMatchParams.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["userid)).rejects.tothrow(notfoundexception",{"_index":6315,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["userid.tostring",{"_index":2113,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["userids",{"_index":861,"title":{},"body":{"entities/Course.html":{},"entities/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{}}}],["userinfomapper",{"_index":3248,"title":{"classes/UserInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/UserInfoMapper.html":{}}}],["userinfomapper.maptoresponse(news.creator",{"_index":3251,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinfomapper.maptoresponse(news.updater",{"_index":3265,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinforesponse",{"_index":3222,"title":{"classes/UserInfoResponse.html":{}},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{}}}],["usermatch",{"_index":2518,"title":{"classes/UserMatch.html":{}},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{},"miscellaneous/variables.html":{}}}],["usermatchresponse",{"_index":2799,"title":{"classes/UserMatchResponse.html":{}},"body":{"controllers/ImportUserController.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/UserMatchResponse.html":{}}}],["usermodule",{"_index":264,"title":{"modules/UserModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["username",{"_index":119,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["userrepo",{"_index":267,"title":{"injectables/UserRepo.html":{}},"body":{"modules/AuthModule.html":{},"interfaces/Board.html":{},"injectables/JwtStrategy.html":{},"modules/LearnroomModule.html":{},"injectables/RoomsUc.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["users",{"_index":2484,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"modules/ImportUserModule.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/NewsUc.html":{},"entities/User.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["userservice",{"_index":6125,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["uses",{"_index":4927,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["usevalue",{"_index":1934,"title":{},"body":{"controllers/DelayController.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/RocketChatModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["using",{"_index":431,"title":{},"body":{"classes/BaseFactory.html":{},"injectables/ConsoleWriterService.html":{},"classes/CourseFactory.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"modules/InterceptorModule.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["usually",{"_index":5721,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["utf",{"_index":2238,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["util",{"_index":5994,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["utilities",{"_index":6249,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["utils",{"_index":5996,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uuid",{"_index":4374,"title":{},"body":{"dependencies.html":{}}}],["v1",{"_index":5495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v3",{"_index":5323,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["v3/docs",{"_index":5619,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["v3/index",{"_index":5328,"title":{},"body":{"todo.html":{}}}],["valid",{"_index":2430,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"interfaces/IRoleProperties.html":{},"entities/Role.html":{},"entities/System.html":{},"license.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["validate",{"_index":2867,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/JwtStrategy.html":{},"injectables/TaskAuthorizationService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validate(payload",{"_index":2914,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validated",{"_index":2945,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validatenested",{"_index":3133,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{}}}],["validatenested()@apiproperty",{"_index":3130,"title":{},"body":{"classes/MoveElementParams.html":{}}}],["validaterocketchatconfig",{"_index":167,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["validateusersmatch",{"_index":1623,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["validateusersmatch(dashboard",{"_index":1631,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["validating",{"_index":2944,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["validation",{"_index":208,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/ValidationError.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validation.adapter",{"_index":284,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["validation.adapter.ts",{"_index":2937,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"miscellaneous/variables.html":{}}}],["validation.adapter.ts:15",{"_index":2943,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["validation.adapter.ts:20",{"_index":2941,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["validation.error.ts",{"_index":177,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["validation.error.ts:4",{"_index":188,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["validation.pipe",{"_index":4218,"title":{},"body":{"modules/ValidationModule.html":{}}}],["validation.pipe.ts",{"_index":2414,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validation.pipe.ts:12",{"_index":2419,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validation_error",{"_index":4210,"title":{},"body":{"classes/ValidationError.html":{}}}],["validationerror",{"_index":186,"title":{"classes/ValidationError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/GlobalValidationPipe.html":{},"classes/ValidationError.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validationerror.constraints",{"_index":231,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrordetailresponse",{"_index":222,"title":{"classes/ValidationErrorDetailResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["validationerrordetailresponse(validationerror.property",{"_index":233,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrors",{"_index":191,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{}}}],["validationmodule",{"_index":823,"title":{"modules/ValidationModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{}}}],["validationpipe",{"_index":2418,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validator",{"_index":1196,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/IRoleProperties.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/NewsFilterQuery.html":{},"classes/PaginationQuery.html":{},"classes/PatchGroupParams.html":{},"entities/Role.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"classes/UserMatchResponse.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["validators",{"_index":6002,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validity",{"_index":6364,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["validobjectid",{"_index":3469,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["value",{"_index":386,"title":{},"body":{"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"injectables/ConsoleWriterService.html":{},"entities/Course.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"entities/DashboardModelEntity.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"entities/ImportUser.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"classes/LessonScope.html":{},"entities/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"entities/Role.html":{},"injectables/RoleRepo.html":{},"classes/Scope.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"entities/User.html":{},"injectables/UserRepo.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["value.tolowercase",{"_index":2531,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["value?.length",{"_index":2045,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["valueof",{"_index":5356,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["values",{"_index":2019,"title":{},"body":{"classes/EncryptedStringType.html":{},"entities/System.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["variable",{"_index":5928,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["variables",{"_index":5372,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["vars",{"_index":4112,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["verbatim",{"_index":4562,"title":{},"body":{"license.html":{}}}],["verbose",{"_index":2580,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose(message",{"_index":2589,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose?(message",{"_index":2594,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["verification",{"_index":6345,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verified",{"_index":122,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["verify",{"_index":6178,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verifying",{"_index":6276,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["version",{"_index":4548,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["versions",{"_index":4582,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["very",{"_index":1879,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["via",{"_index":3862,"title":{},"body":{"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["view",{"_index":3390,"title":{},"body":{"injectables/NewsUc.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["viewers",{"_index":1066,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["violates",{"_index":4963,"title":{},"body":{"license.html":{}}}],["violation",{"_index":5021,"title":{},"body":{"license.html":{}}}],["virtuals",{"_index":4320,"title":{},"body":{"dependencies.html":{}}}],["visibilities",{"_index":5301,"title":{},"body":{"todo.html":{}}}],["visibility",{"_index":2739,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["visible",{"_index":1065,"title":{},"body":{"entities/CourseNews.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"license.html":{}}}],["visual",{"_index":4498,"title":{},"body":{"index.html":{}}}],["vo",{"_index":2526,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["void",{"_index":168,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"injectables/ConsoleWriterService.html":{},"classes/CourseFactory.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardUc.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"classes/LessonFactory.html":{},"classes/LessonScope.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"injectables/StorageProviderRepo.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/TaskScope.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["volume",{"_index":4848,"title":{},"body":{"license.html":{}}}],["vs",{"_index":2887,"title":{},"body":{"interfaces/JwtConstants.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["vscode",{"_index":4449,"title":{"additional-documentation/nestjs-application/vscode.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/extensions.json",{"_index":6392,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/lauch",{"_index":5329,"title":{},"body":{"todo.html":{}}}],["vscode/launch.default.json",{"_index":5635,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/settings.default.json",{"_index":6390,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["vue.js",{"_index":4420,"title":{},"body":{"miscellaneous/functions.html":{}}}],["wait",{"_index":4376,"title":{},"body":{"dependencies.html":{}}}],["waive",{"_index":4801,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":5216,"title":{},"body":{"license.html":{}}}],["want",{"_index":4591,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["want's",{"_index":5749,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["warn",{"_index":2581,"title":{},"body":{"interfaces/ILogger.html":{}}}],["warn(message",{"_index":2591,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["warranties",{"_index":4694,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":4693,"title":{},"body":{"license.html":{}}}],["watch",{"_index":5309,"title":{},"body":{"todo.html":{}}}],["way",{"_index":3104,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ways",{"_index":4862,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["web",{"_index":5236,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["well",{"_index":4675,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["went",{"_index":6193,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["whatever",{"_index":3612,"title":{},"body":{"classes/ServerConsole.html":{},"license.html":{}}}],["whereas",{"_index":5887,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["wherever",{"_index":3005,"title":{},"body":{"injectables/Logger.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["whether",{"_index":4921,"title":{},"body":{"license.html":{}}}],["whitelist",{"_index":2428,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{}}}],["whitelisted",{"_index":2930,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["whole",{"_index":4494,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["whose",{"_index":4907,"title":{},"body":{"license.html":{}}}],["widely",{"_index":4713,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["widespread",{"_index":4612,"title":{},"body":{"license.html":{}}}],["window",{"_index":4725,"title":{},"body":{"license.html":{},"todo.html":{}}}],["windows",{"_index":5280,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["winston",{"_index":4377,"title":{},"body":{"dependencies.html":{}}}],["wip",{"_index":4519,"title":{},"body":{"index.html":{}}}],["wipo",{"_index":4793,"title":{},"body":{"license.html":{}}}],["wish",{"_index":4589,"title":{},"body":{"license.html":{}}}],["within",{"_index":770,"title":{},"body":{"classes/BusinessError.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["without",{"_index":3929,"title":{},"body":{"injectables/TaskRepo.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["without/succeeds",{"_index":5274,"title":{},"body":{"todo.html":{}}}],["words",{"_index":4512,"title":{},"body":{"index.html":{}}}],["work",{"_index":377,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["work's",{"_index":4735,"title":{},"body":{"license.html":{}}}],["workers",{"_index":5484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["workflows",{"_index":6140,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["working",{"_index":4714,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["workings",{"_index":6187,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["works",{"_index":3204,"title":{},"body":{"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["world",{"_index":5816,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["worldwide",{"_index":5094,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":1419,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"interfaces/IDashboardModelProperties.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["wrap(dashboard).toreference",{"_index":1430,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["wrap(modelentity).init",{"_index":1536,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["wrap(props.user).toreference",{"_index":1435,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["wrapped",{"_index":5441,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["wrappedreference",{"_index":1410,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["wraps",{"_index":5806,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["write",{"_index":2249,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"injectables/TaskAuthorizationService.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["writecourseids",{"_index":3798,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["writecourses",{"_index":3793,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["writecourses.includes(c",{"_index":3797,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["writecourses.map((c",{"_index":3799,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["writeerrorlog",{"_index":2401,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["writeerrorlog(error",{"_index":2408,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["writefile",{"_index":2213,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["writefile(filepath",{"_index":2247,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["writelessons",{"_index":3806,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["writer",{"_index":813,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["writer.module",{"_index":3620,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["writer.module.ts",{"_index":800,"title":{},"body":{"modules/ConsoleWriterModule.html":{}}}],["writer.service",{"_index":802,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["writer.service.ts",{"_index":803,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["writer.service.ts:10",{"_index":810,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["writer.service.ts:12",{"_index":806,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["writer/console",{"_index":799,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{},"modules/ServerConsoleModule.html":{}}}],["writes",{"_index":5941,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["writevalidationerrors",{"_index":2393,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["writevalidationerrors(error",{"_index":2403,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["writing",{"_index":5178,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["written",{"_index":4871,"title":{},"body":{"license.html":{}}}],["wrong",{"_index":1635,"title":{},"body":{"injectables/DashboardUc.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["x",{"_index":143,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"injectables/DashboardModelMapper.html":{},"classes/DashboardResponse.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["xml2js",{"_index":4379,"title":{},"body":{"dependencies.html":{}}}],["xpos",{"_index":1406,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["xposition",{"_index":1443,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{}}}],["xunit",{"_index":5855,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["y",{"_index":1210,"title":{},"body":{"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"injectables/DashboardModelMapper.html":{},"classes/DashboardResponse.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"miscellaneous/functions.html":{}}}],["years",{"_index":4873,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["yes",{"_index":432,"title":{},"body":{"classes/BaseFactory.html":{},"classes/BusinessError.html":{},"classes/CourseFactory.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"injectables/CourseRepo.html":{},"injectables/CourseUc.html":{},"injectables/DatabaseManagementUc.html":{},"classes/EncryptedStringType.html":{},"interfaces/FeathersService.html":{},"interfaces/ILogger.html":{},"classes/ImportUserListResponse.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/NewsListResponse.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"modules/ServerTestModule.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/ValidationError.html":{},"miscellaneous/functions.html":{}}}],["yesterday",{"_index":3851,"title":{},"body":{"classes/TaskFactory.html":{},"miscellaneous/variables.html":{}}}],["yourself",{"_index":5109,"title":{},"body":{"license.html":{}}}],["youruc",{"_index":6146,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["ypos",{"_index":1407,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["yposition",{"_index":1444,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{}}}],["zoom",{"_index":268,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/ImportUserModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AdminIdAndToken.html":{"url":"interfaces/AdminIdAndToken.html","title":"interface - AdminIdAndToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AdminIdAndToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/rocketchat/rocket-chat.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpService, Inject, Injectable } from '@nestjs/common';\nimport { catchError } from 'rxjs/operators';\n\nexport interface RocketChatOptions {\n\turi?: string;\n\tadminUser?: string;\n\tadminPassword?: string;\n\tadminId?: string;\n\tadminToken?: string;\n}\n\ntype GenericData = Record;\n\nexport class RocketChatError extends Error {\n\tprivate statusCode: number;\n\n\tprivate response: GenericData;\n\n\t// rocketchat specific error type\n\tprivate errorType: string;\n\n\tconstructor(e: any) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-argument\n\t\tsuper(e.response.statusText);\n\n\t\t// Set the prototype explicitly.\n\t\tObject.setPrototypeOf(this, RocketChatError.prototype);\n\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access\n\t\tthis.statusCode = e.response.statusCode;\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment\n\t\tthis.response = e.response.data;\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment\n\t\tthis.errorType = e.response.data.errorType;\n\t}\n}\n\ninterface AdminIdAndToken {\n\tid: string;\n\ttoken: string;\n}\n\n@Injectable()\nexport class RocketChatService {\n\tprivate adminIdAndToken?: AdminIdAndToken;\n\n\tconstructor(\n\t\t@Inject('ROCKET_CHAT_OPTIONS') private readonly options: RocketChatOptions,\n\t\tprivate readonly httpService: HttpService\n\t) {}\n\n\tpublic async me(authToken: string, userId: string): Promise {\n\t\treturn this.get('/api/v1/me', authToken, userId);\n\t}\n\n\tpublic async setUserStatus(authToken: string, userId: string, status: string): Promise {\n\t\treturn this.post('/api/v1/users.setStatus', authToken, userId, {\n\t\t\tmessage: '',\n\t\t\tstatus,\n\t\t});\n\t}\n\n\tpublic async createUserToken(userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/users.createToken', {\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async logoutUser(authToken: string, userId: string): Promise {\n\t\treturn this.post('/api/v1/logout', authToken, userId, {});\n\t}\n\n\tpublic async getUserList(queryString: string): Promise {\n\t\treturn this.getAsAdmin(`/api/v1/users.list?${queryString}`);\n\t}\n\n\tpublic async unarchiveGroup(groupName: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.unarchive', {\n\t\t\troomName: groupName,\n\t\t});\n\t}\n\n\tpublic async archiveGroup(groupName: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.archive', {\n\t\t\troomName: groupName,\n\t\t});\n\t}\n\n\tpublic async kickUserFromGroup(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.kick', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async inviteUserToGroup(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.invite', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async addGroupModerator(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.addModerator', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async removeGroupModerator(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.removeModerator', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async getGroupModerators(groupName: string): Promise {\n\t\treturn this.getAsAdmin(`/api/v1/groups.moderators?roomName=${groupName}`);\n\t}\n\n\tpublic async getGroupMembers(groupName: string): Promise {\n\t\treturn this.getAsAdmin(`/api/v1/groups.members?roomName=${groupName}`);\n\t}\n\n\tpublic async createGroup(name: string, members: string[]): Promise {\n\t\t// group.name is only used\n\t\treturn this.postAsAdmin('/api/v1/groups.create', {\n\t\t\tname,\n\t\t\tmembers,\n\t\t});\n\t}\n\n\tpublic async deleteGroup(groupName: string): Promise {\n\t\t// group.name is only used\n\t\treturn this.postAsAdmin('/api/v1/groups.delete', {\n\t\t\troomName: groupName,\n\t\t});\n\t}\n\n\tpublic async createUser(email: string, password: string, username: string, name: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/users.create', {\n\t\t\temail,\n\t\t\tpassword,\n\t\t\tusername,\n\t\t\tname,\n\t\t\tverified: true,\n\t\t});\n\t}\n\n\tpublic async deleteUser(username: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/users.delete', {\n\t\t\tusername,\n\t\t});\n\t}\n\n\tprivate async postAsAdmin(path: string, body: GenericData): Promise {\n\t\tconst adminIdAndToken = await this.getAdminIdAndToken();\n\t\treturn this.post(path, adminIdAndToken.token, adminIdAndToken.id, body);\n\t}\n\n\tprivate async getAsAdmin(path: string): Promise {\n\t\tconst adminIdAndToken = await this.getAdminIdAndToken();\n\t\treturn this.get(path, adminIdAndToken.token, adminIdAndToken.id);\n\t}\n\n\tprivate async get(path: string, authToken: string, userId: string): Promise {\n\t\tconst response = await this.httpService\n\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t.get(`${this.options.uri}${path}`, {\n\t\t\t\theaders: {\n\t\t\t\t\t'X-Auth-Token': authToken,\n\t\t\t\t\t'X-User-ID': userId,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tcatchError((e) => {\n\t\t\t\t\tthrow new RocketChatError(e);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.toPromise();\n\t\treturn response?.data as GenericData;\n\t}\n\n\tprivate async post(path: string, authToken: string, userId: string, body: GenericData): Promise {\n\t\tconst response = await this.httpService\n\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t.post(`${this.options.uri}${path}`, body, {\n\t\t\t\theaders: {\n\t\t\t\t\t'X-Auth-Token': authToken,\n\t\t\t\t\t'X-User-ID': userId,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tcatchError((e) => {\n\t\t\t\t\tthrow new RocketChatError(e);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.toPromise();\n\t\treturn response?.data as GenericData;\n\t}\n\n\tprivate async getAdminIdAndToken(): Promise {\n\t\tthis.validateRocketChatConfig();\n\n\t\tif (this.adminIdAndToken) {\n\t\t\treturn this.adminIdAndToken;\n\t\t}\n\n\t\tif (this.options.adminId && this.options.adminToken) {\n\t\t\tconst newVar = { id: this.options.adminId, token: this.options.adminToken } as AdminIdAndToken;\n\t\t\tthis.adminIdAndToken = newVar;\n\t\t\treturn newVar;\n\t\t}\n\t\tconst response = await this.httpService\n\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t.post(`${this.options.uri}/api/v1/login`, {\n\t\t\t\tuser: this.options.adminUser,\n\t\t\t\tpassword: this.options.adminPassword,\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tcatchError((e) => {\n\t\t\t\t\tthrow new RocketChatError(e);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.toPromise();\n\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\t\tconst responseJson = response?.data;\n\t\tthis.adminIdAndToken = {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\tid: responseJson.data.userId as string,\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\ttoken: responseJson.data.authToken as string,\n\t\t} as AdminIdAndToken;\n\t\treturn this.adminIdAndToken;\n\t}\n\n\tprivate validateRocketChatConfig(): void {\n\t\tif (!this.options.uri) {\n\t\t\tthrow new Error('rocket chat uri not set');\n\t\t}\n\t\tif (!(this.options.adminId && this.options.adminToken) && !(this.options.adminUser && this.options.adminPassword)) {\n\t\t\tthrow new Error('rocket chat adminId and adminToken OR adminUser and adminPassword must be set');\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiValidationError.html":{"url":"classes/ApiValidationError.html","title":"class - ApiValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/api-validation.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BusinessError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                details\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDetails\n                            \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(validationErrors: ValidationError[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/api-validation.error.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validationErrors\n                                                  \n                                                        \n                                                                        ValidationError[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:12\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDetails\n                        \n                    \n                \n            \n            \n                \ngetDetails()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Record\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResponse\n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus, ValidationError } from '@nestjs/common';\nimport { BusinessError } from './business.error';\n\nexport class ApiValidationError extends BusinessError {\n\tconstructor(readonly validationErrors: ValidationError[] = []) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\ttype: 'API_VALIDATION_ERROR',\n\t\t\t\ttitle: 'API Validation Error',\n\t\t\t\tdefaultMessage: 'API validation failed, see validationErrors for details',\n\t\t\t},\n\t\t\tHttpStatus.BAD_REQUEST\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiValidationErrorResponse.html":{"url":"classes/ApiValidationErrorResponse.html","title":"class - ApiValidationErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/api-validation-error.response.ts\n        \n\n\n            \n                Description\n            \n            \n                HTTP response definition for api validation errors.\n\n            \n\n            \n                Extends\n            \n            \n                        ErrorResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                validationErrors\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiValidationError: ApiValidationError)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiValidationError\n                                                  \n                                                        \n                                                                        ApiValidationError\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        validationErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ValidationErrorDetailResponse[]\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiValidationError } from '@shared/common';\nimport { ErrorResponse } from './error.response';\nimport { ValidationErrorDetailResponse } from './validation-error-detail.response';\n\n/**\n * HTTP response definition for api validation errors.\n */\nexport class ApiValidationErrorResponse extends ErrorResponse {\n\tconstructor(apiValidationError: ApiValidationError) {\n\t\tconst { type, title, message, code } = apiValidationError;\n\t\tsuper(type, title, message, code);\n\n\t\tthis.validationErrors = apiValidationError.validationErrors.map((validationError) => {\n\t\t\tconst constraint = validationError.constraints ? validationError.constraints : ['validation failed'];\n\t\t\tif (Array.isArray(constraint)) {\n\t\t\t\treturn new ValidationErrorDetailResponse(validationError.property, constraint);\n\t\t\t}\n\t\t\tconst errors = Object.values(constraint);\n\t\t\treturn new ValidationErrorDetailResponse(validationError.property, errors);\n\t\t});\n\t}\n\n\tvalidationErrors: ValidationErrorDetailResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppendedAttachment.html":{"url":"interfaces/AppendedAttachment.html","title":"interface - AppendedAttachment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppendedAttachment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailAttachment\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contentDisposition\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contentDisposition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentDisposition:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nJwtValidationAdapter\n\nJwtValidationAdapter\n\nAuthModule -->\n\nJwtValidationAdapter->AuthModule\n\n\n\n\n\nUserRepo\n\nUserRepo\n\nAuthModule -->\n\nUserRepo->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authentication/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStrategy\n                        \n                        \n                            JwtValidationAdapter\n                        \n                        \n                            UserRepo\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { UserModule } from '@src/modules/user';\nimport { UserRepo } from '@shared/repo';\nimport { JwtStrategy } from './strategy/jwt.strategy';\nimport { jwtConstants } from './constants';\nimport { JwtValidationAdapter } from './strategy/jwt-validation.adapter';\n\n@Module({\n\timports: [PassportModule, JwtModule.register(jwtConstants), UserModule],\n\tproviders: [JwtStrategy, JwtValidationAdapter, UserRepo],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthorizationModule.html":{"url":"modules/AuthorizationModule.html","title":"module - AuthorizationModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthorizationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthorizationService\n                        \n                        \n                            FeathersAuthProvider\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeathersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthorizationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersModule } from '@shared/infra/feathers';\nimport { AuthorizationService } from './authorization.service';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Module({\n\timports: [FeathersModule],\n\tproviders: [AuthorizationService, FeathersAuthProvider],\n\texports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizationService.html":{"url":"injectables/AuthorizationService.html","title":"injectable - AuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkEntityPermissions\n                            \n                            \n                                    Async\n                                getEntityPermissions\n                            \n                            \n                                    Async\n                                getPermittedEntities\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersAuthProvider: FeathersAuthProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/authorization.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersAuthProvider\n                                                  \n                                                        \n                                                                        FeathersAuthProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkEntityPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkEntityPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:32\n                \n            \n\n\n            \n                \n                    Ensure that a user has sufficient permissions for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getEntityPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getEntityPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:16\n                \n            \n\n\n            \n                \n                    Get all permissions a user has for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The list of entity permissions for the user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedEntities\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedEntities(userId: EntityId, targetModel: NewsTargetModel, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:52\n                \n            \n\n\n            \n                \n                    Get all entities for which a user has specific permissions\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The list of ids of all entities that satisfy the provided permissions for the user\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { EntityId, NewsTargetModel } from '@shared/domain';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Injectable()\nexport class AuthorizationService {\n\tconstructor(private feathersAuthProvider: FeathersAuthProvider) {}\n\n\t/**\n\t * Get all permissions a user has for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @returns The list of entity permissions for the user\n\t */\n\tasync getEntityPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId): Promise {\n\t\tconst permissions =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getUserSchoolPermissions(userId, targetId)\n\t\t\t\t: await this.feathersAuthProvider.getUserTargetPermissions(userId, targetModel, targetId);\n\t\treturn permissions;\n\t}\n\n\t/**\n\t * Ensure that a user has sufficient permissions for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @param permissions\n\t * @throws UnauthorizedException if the permissions are not satisfied\n\t */\n\tasync checkEntityPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\ttargetId: EntityId,\n\t\tpermissions: string[]\n\t): Promise | never {\n\t\tconst entityPermissions = await this.getEntityPermissions(userId, targetModel, targetId);\n\t\tconst hasPermissions = permissions.every((p) => entityPermissions.includes(p));\n\t\tif (!hasPermissions) {\n\t\t\tthrow new UnauthorizedException('Insufficient permissions');\n\t\t}\n\t}\n\n\t/**\n\t * Get all entities for which a user has specific permissions\n\t * @param userId\n\t * @param targetModel\n\t * @param permissions\n\t * @returns The list of ids of all entities that satisfy the provided permissions for the user\n\t */\n\tasync getPermittedEntities(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst entitiyIds =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getPermittedSchools(userId)\n\t\t\t\t: await this.feathersAuthProvider.getPermittedTargets(userId, targetModel, permissions);\n\n\t\treturn entitiyIds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/BaseEntity.html":{"url":"entities/BaseEntity.html","title":"entity - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/BaseEntityWithTimestamps.html":{"url":"entities/BaseEntityWithTimestamps.html","title":"entity - BaseEntityWithTimestamps","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  BaseEntityWithTimestamps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: () => })\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:28\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseFactory.html":{"url":"classes/BaseFactory.html","title":"class - BaseFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/testing/factory/base.factory.ts\n        \n\n\n            \n                Description\n            \n            \n                Entity factory based on thoughtbot/fishery\nhttps://github.com/thoughtbot/fishery\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                propsFactory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterBuild\n                            \n                            \n                                build\n                            \n                            \n                                buildList\n                            \n                            \n                                buildWithId\n                            \n                            \n                                    Protected\n                                clone\n                            \n                            \n                                    Static\n                                define\n                            \n                            \n                                params\n                            \n                            \n                                rewindSequence\n                            \n                            \n                                    Protected\n                                sequence\n                            \n                            \n                                transient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(EntityClass: literal type, propsFactory: Factory)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/testing/factory/base.factory.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        EntityClass\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        propsFactory\n                                                  \n                                                        \n                                                                    Factory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        propsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Factory\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/testing/factory/base.factory.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterBuild\n                        \n                    \n                \n            \n            \n                \nafterBuild(afterBuildFn: HookFn)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:85\n                \n            \n\n\n            \n                \n                    Extend the factory by adding a function to be called after an object is built.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    afterBuildFn\n                                    \n                                            HookFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe function to call. It accepts your object of type T. The value this function returns gets returned from \"build\"\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        build\n                        \n                    \n                \n            \n            \n                \nbuild(params?: DeepPartial)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:45\n                \n            \n\n\n            \n                \n                    Build an entity using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildList\n                        \n                    \n                \n            \n            \n                \nbuildList(number: number, params?: DeepPartial)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:71\n                \n            \n\n\n            \n                \n                    Build a list of entities using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    number\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        a list of entities\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildWithId\n                        \n                    \n                \n            \n            \n                \nbuildWithId(params?: DeepPartial, id?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:58\n                \n            \n\n\n            \n                \n                    Build an entity using your factory and generate a id for it.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        clone\n                        \n                    \n                \n            \n            \n                \n                    \n                    clone(this: F, propsFactory: Factory)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:123\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        F\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                            F\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    propsFactory\n                                    \n                                            Factory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        define\n                        \n                    \n                \n            \n            \n                \n                    \n                    define(this, EntityClass: literal type, generator: GeneratorFn)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:30\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        U\n                        I\n                        F\n                    \n                \n            \n\n            \n                \n                    Define a factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    EntityClass\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The constructor of the entity to be built.\n\n                                    \n                                \n                                \n                                    generator\n                                    \n                                            GeneratorFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Your factory function - see Factory.define() in thoughtbot/fishery\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        params\n                        \n                    \n                \n            \n            \n                \nparams(params: DeepPartial)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:97\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rewindSequence\n                        \n                    \n                \n            \n            \n                \nrewindSequence()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:119\n                \n            \n\n\n            \n                \n                    Set sequence back to its default value\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        sequence\n                        \n                    \n                \n            \n            \n                \n                    \n                    sequence()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:135\n                \n            \n\n\n            \n                \n                    Get the next sequence value\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        the next sequence value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transient\n                        \n                    \n                \n            \n            \n                \ntransient(transient: Partial)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:109\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default transient parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    transient\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ntransient params\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DeepPartial, Factory, GeneratorFn, HookFn } from 'fishery';\nimport { ObjectId } from 'mongodb';\n\n/**\n * Entity factory based on thoughtbot/fishery\n * https://github.com/thoughtbot/fishery\n *\n * @template T The entity to be built\n * @template U The properties interface of the entity\n * @template I The transient parameters that your factory supports\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport class BaseFactory {\n\tprotected readonly propsFactory: Factory;\n\n\tconstructor(private readonly EntityClass: { new (props: U): T }, propsFactory: Factory) {\n\t\tthis.propsFactory = propsFactory;\n\t}\n\n\t/**\n\t * Define a factory\n\t * @template T The entity to be built\n\t * @template U The properties interface of the entity\n\t * @template I The transient parameters that your factory supports\n\t * @param EntityClass The constructor of the entity to be built.\n\t * @param generator Your factory function - see `Factory.define()` in thoughtbot/fishery\n\t * @returns\n\t */\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tstatic define>(\n\t\tthis: new (EntityClass: { new (props: U): T }, propsFactory: Factory) => F,\n\t\tEntityClass: { new (props: U): T },\n\t\tgenerator: GeneratorFn\n\t): F {\n\t\tconst propsFactory = Factory.define(generator);\n\t\tconst factory = new this(EntityClass, propsFactory);\n\t\treturn factory;\n\t}\n\n\t/**\n\t * Build an entity using your factory\n\t * @param params\n\t * @returns an entity\n\t */\n\tbuild(params?: DeepPartial): T {\n\t\tconst props = this.propsFactory.build(params);\n\t\tconst entity = new this.EntityClass(props);\n\n\t\treturn entity;\n\t}\n\n\t/**\n\t * Build an entity using your factory and generate a id for it.\n\t * @param params\n\t * @param id\n\t * @returns an entity\n\t */\n\tbuildWithId(params?: DeepPartial, id?: string): T {\n\t\tconst entity = this.build(params);\n\t\tconst entityWithId = Object.assign(entity, { _id: new ObjectId(id) });\n\n\t\treturn entityWithId;\n\t}\n\n\t/**\n\t * Build a list of entities using your factory\n\t * @param number\n\t * @param params\n\t * @returns a list of entities\n\t */\n\tbuildList(number: number, params?: DeepPartial): T[] {\n\t\tconst list: T[] = [];\n\t\tfor (let i = 0; i ): this {\n\t\tconst newPropsFactory = this.propsFactory.afterBuild(afterBuildFn);\n\t\tconst newFactory = this.clone(newPropsFactory);\n\n\t\treturn newFactory;\n\t}\n\n\t/**\n\t * Extend the factory by adding default parameters to be passed to the factory when \"build\" is called\n\t * @param params\n\t * @returns a new factory\n\t */\n\tparams(params: DeepPartial): this {\n\t\tconst newPropsFactory = this.propsFactory.params(params);\n\t\tconst newFactory = this.clone(newPropsFactory);\n\n\t\treturn newFactory;\n\t}\n\n\t/**\n\t * Extend the factory by adding default transient parameters to be passed to the factory when \"build\" is called\n\t * @param transient - transient params\n\t * @returns a new factory\n\t */\n\ttransient(transient: Partial): this {\n\t\tconst newPropsFactory = this.propsFactory.transient(transient);\n\t\tconst newFactory = this.clone(newPropsFactory);\n\n\t\treturn newFactory;\n\t}\n\n\t/**\n\t * Set sequence back to its default value\n\t */\n\trewindSequence(): void {\n\t\tthis.propsFactory.rewindSequence();\n\t}\n\n\tprotected clone>(this: F, propsFactory: Factory): F {\n\t\tconst copy = new (this.constructor as {\n\t\t\tnew (EntityClass: { new (props: U): T }, propsFactory: Factory): F;\n\t\t})(this.EntityClass, propsFactory);\n\n\t\treturn copy;\n\t}\n\n\t/**\n\t * Get the next sequence value\n\t * @returns the next sequence value\n\t */\n\tprotected sequence(): number {\n\t\t// eslint-disable-next-line @typescript-eslint/dot-notation\n\t\treturn this.propsFactory['sequence']();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/BaseFile.html":{"url":"entities/BaseFile.html","title":"entity - BaseFile","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  BaseFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/file.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                creator\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                isDirectory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDirectory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:20\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Property, ManyToOne } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { StorageProvider } from './storageprovider.entity';\nimport type { User } from './user.entity';\n\nexport interface IFileProperties {\n\tdeletedAt?: Date;\n\tstorageFileName: string;\n\tbucket: string;\n\tstorageProvider: StorageProvider;\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorColumn: 'isDirectory', abstract: true })\nexport abstract class BaseFile extends BaseEntityWithTimestamps {\n\t@Property()\n\tdeletedAt?: Date;\n\n\t@Property()\n\tisDirectory!: boolean;\n\n\t@Property()\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorValue: 'true' })\nexport class Directory extends BaseFile {}\n\n@Entity({ collection: 'files', discriminatorValue: 'false' })\nexport class File extends BaseFile {\n\t@Property()\n\tstorageFileName: string;\n\n\t@Property()\n\tbucket: string;\n\n\t@ManyToOne('StorageProvider', { fieldName: 'storageProviderId' })\n\tstorageProvider: StorageProvider;\n\n\tconstructor(props: IFileProperties) {\n\t\tsuper();\n\t\tthis.isDirectory = false;\n\t\tthis.deletedAt = props.deletedAt;\n\t\tthis.storageFileName = props.storageFileName;\n\t\tthis.bucket = props.bucket;\n\t\tthis.storageProvider = props.storageProvider;\n\t\tthis.creator = props.creator;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseRepo.html":{"url":"injectables/BaseRepo.html","title":"injectable - BaseRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BaseRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/base.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                flush\n                            \n                            \n                                persist\n                            \n                            \n                                persistAll\n                            \n                            \n                                    Async\n                                persistAllAndFlush\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                    Async\n                                removeAllAndFlush\n                            \n                            \n                                    Async\n                                removeAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/base.repo.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                    \n                    flush()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persist\n                        \n                    \n                \n            \n            \n                \npersist(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAll\n                        \n                    \n                \n            \n            \n                \npersistAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAll\n                        \n                    \n                \n            \n            \n                \nremoveAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { BaseEntity } from '@shared/domain';\nimport { EntityManager } from '@mikro-orm/mongodb';\n\n@Injectable()\nexport class BaseRepo {\n\tconstructor(protected readonly em: EntityManager) {}\n\n\tpersist(entity: T): T {\n\t\tthis.em.persist(entity);\n\t\treturn entity;\n\t}\n\n\tasync persistAndFlush(entity: T): Promise {\n\t\tawait this.em.persistAndFlush(entity);\n\t\treturn entity;\n\t}\n\n\tpersistAll(entities: T[]): T[] {\n\t\tconst persisted = entities.map((n) => {\n\t\t\tthis.em.persist(n);\n\t\t\treturn n;\n\t\t});\n\t\treturn persisted;\n\t}\n\n\tasync persistAllAndFlush(entities: T[]): Promise {\n\t\tconst persisted = entities.map((n) => {\n\t\t\tthis.em.persist(n);\n\t\t\treturn n;\n\t\t});\n\t\tawait this.em.flush();\n\t\treturn persisted;\n\t}\n\n\tremove(entity: T): void {\n\t\tthis.em.remove(entity);\n\t}\n\n\tasync removeAndFlush(entity: T): Promise {\n\t\tawait this.em.removeAndFlush(entity);\n\t}\n\n\tremoveAll(entities: T[]): void {\n\t\tentities.forEach((entity) => this.em.remove(entity));\n\t}\n\n\tasync removeAllAndFlush(entities: T[]): Promise {\n\t\tentities.forEach((entity) => this.em.remove(entity));\n\t\tawait this.em.flush();\n\t}\n\n\tasync flush(): Promise {\n\t\tawait this.em.flush();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Board.html":{"url":"interfaces/Board.html","title":"interface - Board","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Board\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/uc/rooms.uc.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            displayColor\n                                        \n                                \n                                \n                                        \n                                            elements\n                                        \n                                \n                                \n                                        \n                                            roomId\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        elements\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        elements:         BoardElement[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BoardElement[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roomId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roomId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, Course, Task, TaskWithStatusVo, User } from '@shared/domain';\nimport { CourseRepo, TaskRepo, UserRepo } from '@shared/repo';\n\n// TODO: move this somewhere else\nexport interface Board {\n\troomId: string;\n\tdisplayColor: string;\n\ttitle: string;\n\telements: BoardElement[];\n}\n\nexport type BoardElement = {\n\t// TODO: should become fullblown class\n\ttype: string;\n\tcontent: TaskWithStatusVo;\n};\n\n@Injectable()\nexport class RoomsUc {\n\tconstructor(\n\t\tprivate readonly courseRepo: CourseRepo,\n\t\tprivate readonly taskRepo: TaskRepo,\n\t\tprivate readonly userRepo: UserRepo\n\t) {}\n\n\tasync getBoard(roomId: EntityId, userId: EntityId): Promise {\n\t\tconst user = await this.userRepo.findById(userId, true);\n\n\t\tconst course = await this.courseRepo.findOne(roomId, userId);\n\t\tconst isTeacher = this.isTeacher(user, course);\n\t\tconst taskFilter = this.taskFilter(isTeacher);\n\t\tconst [tasks] = await this.taskRepo.findBySingleParent(user.id, course.id, taskFilter);\n\t\tconst tasksWithStatusVos = this.addStatusToTasks(isTeacher, tasks, user);\n\n\t\tconst board = this.buildBoard(course, tasksWithStatusVos);\n\t\treturn board;\n\t}\n\n\tprivate taskFilter(isTeacher: boolean): { draft?: boolean; noFutureAvailableDate?: boolean } {\n\t\tconst filters: { draft?: boolean; noFutureAvailableDate?: boolean } = {};\n\t\tif (!isTeacher) {\n\t\t\tfilters.draft = false;\n\t\t\tfilters.noFutureAvailableDate = true;\n\t\t\treturn filters;\n\t\t}\n\t\tfilters.draft = true;\n\t\treturn filters;\n\t}\n\n\t// TODO: move somewhere else\n\tprivate buildBoard(room: Course, tasks: TaskWithStatusVo[]): Board {\n\t\tconst roomMetadata = room.getMetadata();\n\t\tconst board = {\n\t\t\troomId: roomMetadata.id,\n\t\t\tdisplayColor: roomMetadata.displayColor,\n\t\t\ttitle: roomMetadata.title,\n\t\t\telements: tasks.map((task) => ({ type: 'task', content: task })),\n\t\t};\n\t\treturn board;\n\t}\n\n\tprivate isTeacher(user: User, course: Course): boolean {\n\t\tif (course.teachers.contains(user) || course.substitutionTeachers.contains(user)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate addStatusToTasks(isTeacher: boolean, tasks: Task[], user: User): TaskWithStatusVo[] {\n\t\tlet tasksWithStatusVos: TaskWithStatusVo[];\n\t\tif (isTeacher) {\n\t\t\ttasksWithStatusVos = tasks.map((task) => {\n\t\t\t\tconst status = task.createTeacherStatusForUser(user);\n\t\t\t\treturn new TaskWithStatusVo(task, status);\n\t\t\t});\n\t\t} else {\n\t\t\ttasksWithStatusVos = tasks.map((task) => {\n\t\t\t\tconst status = task.createStudentStatusForUser(user);\n\t\t\t\treturn new TaskWithStatusVo(task, status);\n\t\t\t});\n\t\t}\n\t\treturn tasksWithStatusVos;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BoardElementResponse.html":{"url":"classes/BoardElementResponse.html","title":"class - BoardElementResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BoardElementResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: BoardElementResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        BoardElementResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BoardTaskResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Content of the Board, either: a task or a lesson specific for the board'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'ElementType. Can be any of: \"task\", \"lesson\".'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:57\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { DecodeHtmlEntities } from '@shared/controller';\nimport { BoardTaskStatusResponse } from './roomBoardResponse-taskStatus';\n\nexport class BoardTaskResponse {\n\tconstructor({ id, name, createdAt, updatedAt, status }: BoardTaskResponse) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.createdAt = createdAt;\n\t\tthis.updatedAt = updatedAt;\n\t\tthis.status = status;\n\t}\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\t@DecodeHtmlEntities()\n\tname: string;\n\n\t@ApiPropertyOptional()\n\tavailableDate?: Date;\n\n\t@ApiPropertyOptional()\n\tduedate?: Date;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tcourseName?: string;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tdescription?: string;\n\n\t@ApiPropertyOptional()\n\tdisplayColor?: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\tstatus: BoardTaskStatusResponse;\n}\n\nexport class BoardElementResponse {\n\tconstructor({ type, content }: BoardElementResponse) {\n\t\tthis.type = type;\n\t\tthis.content = content;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'ElementType. Can be any of: \"task\", \"lesson\".',\n\t})\n\ttype: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Content of the Board, either: a task or a lesson specific for the board',\n\t})\n\tcontent: BoardTaskResponse;\n}\n\n// TODO: this and DashboardResponse should be combined\nexport class BoardResponse {\n\tconstructor({ roomId, title, displayColor, elements }: BoardResponse) {\n\t\tthis.roomId = roomId;\n\t\tthis.title = title;\n\t\tthis.displayColor = displayColor;\n\t\tthis.elements = elements;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the room this board belongs to',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\troomId: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Board',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Board',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\ttype: [BoardElementResponse],\n\t\tdescription: 'Array of board specific tasks or lessons with matching type property',\n\t})\n\telements: BoardElementResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BoardMapper.html":{"url":"injectables/BoardMapper.html","title":"injectable - BoardMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BoardMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/mapper/board.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \nmapToResponse(board: Board)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/mapper/board.mapper.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    board\n                                    \n                                                Board\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         BoardResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Course } from '@shared/domain';\nimport { BoardResponse, BoardElementResponse, BoardTaskResponse } from '../controller/dto/roomBoardResponse';\nimport { Board } from '../uc/rooms.uc';\nimport { BoardTaskStatusMapper } from './board-taskStatus.mapper';\n\n@Injectable()\nexport class BoardMapper {\n\tmapToResponse(board: Board): BoardResponse {\n\t\tconst elements = board.elements.map((element) => {\n\t\t\tconst { task: boardTask, status } = element.content;\n\t\t\tconst boardTaskDesc = boardTask.getDescriptions();\n\t\t\tconst boardTaskStatus = BoardTaskStatusMapper.mapToResponse(status);\n\n\t\t\tconst mappedTask = new BoardTaskResponse({\n\t\t\t\tid: boardTask.id,\n\t\t\t\tname: boardTask.name,\n\t\t\t\tcreatedAt: boardTask.createdAt,\n\t\t\t\tupdatedAt: boardTask.updatedAt,\n\t\t\t\tstatus: boardTaskStatus,\n\t\t\t});\n\n\t\t\tconst taskCourse = boardTask.course as Course;\n\t\t\tmappedTask.courseName = taskCourse.name;\n\t\t\tmappedTask.availableDate = boardTask.availableDate;\n\t\t\tmappedTask.duedate = boardTask.dueDate;\n\t\t\tmappedTask.displayColor = boardTaskDesc.color;\n\t\t\tmappedTask.description = boardTaskDesc.description;\n\n\t\t\tconst boardElementResponse = new BoardElementResponse({ type: 'task', content: mappedTask });\n\t\t\treturn boardElementResponse;\n\t\t});\n\t\tconst mapped = new BoardResponse({\n\t\t\troomId: board.roomId,\n\t\t\ttitle: board.title,\n\t\t\tdisplayColor: board.displayColor,\n\t\t\telements,\n\t\t});\n\t\treturn mapped;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BoardResponse.html":{"url":"classes/BoardResponse.html","title":"class - BoardResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BoardResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayColor\n                            \n                            \n                                elements\n                            \n                            \n                                roomId\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: BoardResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        BoardResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Color of the Board'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BoardElementResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, description: 'Array of board specific tasks or lessons with matching type property'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roomId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the room this board belongs to', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Title of the Board'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:83\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { DecodeHtmlEntities } from '@shared/controller';\nimport { BoardTaskStatusResponse } from './roomBoardResponse-taskStatus';\n\nexport class BoardTaskResponse {\n\tconstructor({ id, name, createdAt, updatedAt, status }: BoardTaskResponse) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.createdAt = createdAt;\n\t\tthis.updatedAt = updatedAt;\n\t\tthis.status = status;\n\t}\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\t@DecodeHtmlEntities()\n\tname: string;\n\n\t@ApiPropertyOptional()\n\tavailableDate?: Date;\n\n\t@ApiPropertyOptional()\n\tduedate?: Date;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tcourseName?: string;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tdescription?: string;\n\n\t@ApiPropertyOptional()\n\tdisplayColor?: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\tstatus: BoardTaskStatusResponse;\n}\n\nexport class BoardElementResponse {\n\tconstructor({ type, content }: BoardElementResponse) {\n\t\tthis.type = type;\n\t\tthis.content = content;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'ElementType. Can be any of: \"task\", \"lesson\".',\n\t})\n\ttype: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Content of the Board, either: a task or a lesson specific for the board',\n\t})\n\tcontent: BoardTaskResponse;\n}\n\n// TODO: this and DashboardResponse should be combined\nexport class BoardResponse {\n\tconstructor({ roomId, title, displayColor, elements }: BoardResponse) {\n\t\tthis.roomId = roomId;\n\t\tthis.title = title;\n\t\tthis.displayColor = displayColor;\n\t\tthis.elements = elements;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the room this board belongs to',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\troomId: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Board',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Board',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\ttype: [BoardElementResponse],\n\t\tdescription: 'Array of board specific tasks or lessons with matching type property',\n\t})\n\telements: BoardElementResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BoardTaskResponse.html":{"url":"classes/BoardTaskResponse.html","title":"class - BoardTaskResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BoardTaskResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                availableDate\n                            \n                            \n                                    Optional\n                                courseName\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                description\n                            \n                            \n                                    Optional\n                                displayColor\n                            \n                            \n                                    Optional\n                                duedate\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: BoardTaskResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        BoardTaskResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        availableDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        courseName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@DecodeHtmlEntities()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@DecodeHtmlEntities()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        duedate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@DecodeHtmlEntities()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BoardTaskStatusResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { DecodeHtmlEntities } from '@shared/controller';\nimport { BoardTaskStatusResponse } from './roomBoardResponse-taskStatus';\n\nexport class BoardTaskResponse {\n\tconstructor({ id, name, createdAt, updatedAt, status }: BoardTaskResponse) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.createdAt = createdAt;\n\t\tthis.updatedAt = updatedAt;\n\t\tthis.status = status;\n\t}\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\t@DecodeHtmlEntities()\n\tname: string;\n\n\t@ApiPropertyOptional()\n\tavailableDate?: Date;\n\n\t@ApiPropertyOptional()\n\tduedate?: Date;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tcourseName?: string;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tdescription?: string;\n\n\t@ApiPropertyOptional()\n\tdisplayColor?: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\tstatus: BoardTaskStatusResponse;\n}\n\nexport class BoardElementResponse {\n\tconstructor({ type, content }: BoardElementResponse) {\n\t\tthis.type = type;\n\t\tthis.content = content;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'ElementType. Can be any of: \"task\", \"lesson\".',\n\t})\n\ttype: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Content of the Board, either: a task or a lesson specific for the board',\n\t})\n\tcontent: BoardTaskResponse;\n}\n\n// TODO: this and DashboardResponse should be combined\nexport class BoardResponse {\n\tconstructor({ roomId, title, displayColor, elements }: BoardResponse) {\n\t\tthis.roomId = roomId;\n\t\tthis.title = title;\n\t\tthis.displayColor = displayColor;\n\t\tthis.elements = elements;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the room this board belongs to',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\troomId: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Board',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Board',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\ttype: [BoardElementResponse],\n\t\tdescription: 'Array of board specific tasks or lessons with matching type property',\n\t})\n\telements: BoardElementResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BoardTaskStatusMapper.html":{"url":"classes/BoardTaskStatusMapper.html","title":"class - BoardTaskStatusMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BoardTaskStatusMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/mapper/board-taskStatus.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(status: ITaskStatus)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/mapper/board-taskStatus.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                ITaskStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         BoardTaskStatusResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ITaskStatus } from '@shared/domain';\nimport { BoardTaskStatusResponse } from '../controller/dto/roomBoardResponse-taskStatus';\n\nexport class BoardTaskStatusMapper {\n\tstatic mapToResponse(status: ITaskStatus): BoardTaskStatusResponse {\n\t\tconst dto = new BoardTaskStatusResponse(status);\n\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BoardTaskStatusResponse.html":{"url":"classes/BoardTaskStatusResponse.html","title":"class - BoardTaskStatusResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BoardTaskStatusResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/roomBoardResponse-taskStatus.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                graded\n                            \n                            \n                                isDraft\n                            \n                            \n                                isSubstitutionTeacher\n                            \n                            \n                                maxSubmissions\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: BoardTaskStatusResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse-taskStatus.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        BoardTaskStatusResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        graded\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse-taskStatus.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDraft\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse-taskStatus.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSubstitutionTeacher\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse-taskStatus.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maxSubmissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse-taskStatus.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse-taskStatus.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class BoardTaskStatusResponse {\n\tconstructor({ submitted, maxSubmissions, graded, isDraft, isSubstitutionTeacher }: BoardTaskStatusResponse) {\n\t\tthis.submitted = submitted;\n\t\tthis.maxSubmissions = maxSubmissions;\n\t\tthis.graded = graded;\n\t\tthis.isDraft = isDraft;\n\t\tthis.isSubstitutionTeacher = isSubstitutionTeacher;\n\t}\n\n\t@ApiProperty()\n\tsubmitted: number;\n\n\t@ApiProperty()\n\tmaxSubmissions: number;\n\n\t@ApiProperty()\n\tgraded: number;\n\n\t@ApiProperty()\n\tisDraft: boolean;\n\n\t@ApiProperty()\n\tisSubstitutionTeacher: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BsonConverter.html":{"url":"injectables/BsonConverter.html","title":"injectable - BsonConverter","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BsonConverter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/converter/bson.converter.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserialize\n                            \n                            \n                                serialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deserialize\n                        \n                    \n                \n            \n            \n                \ndeserialize(bsonDocuments: [])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/converter/bson.converter.ts:21\n                \n            \n\n\n            \n                \n                    Deserializes documents from Extended JSON JavaScript objects to plain JavaScript objects.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    bsonDocuments\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mongo-bson/ejson objects\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     []\n\n                    \n                    \n                        mongo-json documents\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize(documents: [])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/converter/bson.converter.ts:11\n                \n            \n\n\n            \n                \n                    Serializes documents from plain JavaScript objects to Extended JSON JavaScript objects.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    documents\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mongo-json documents\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     []\n\n                    \n                    \n                        mongo-bson/ejson objects\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport BSON from 'bson';\n\n@Injectable()\nexport class BsonConverter {\n\t/**\n\t * Serializes documents from plain JavaScript objects to Extended JSON JavaScript objects.\n\t * @param documents mongo-json documents\n\t * @returns mongo-bson/ejson objects\n\t */\n\tserialize(documents: unknown[]): unknown[] {\n\t\tconst bsonDocuments = BSON.EJSON.serialize(documents) as unknown[];\n\t\treturn bsonDocuments;\n\t}\n\n\t/**\n\t * Deserializes documents from Extended JSON JavaScript objects to plain JavaScript objects.\n\t * @param bsonDocuments mongo-bson/ejson objects\n\t * @returns mongo-json documents\n\t */\n\tdeserialize(bsonDocuments: unknown[]): unknown[] {\n\t\tconst jsonDocuments = BSON.EJSON.deserialize(bsonDocuments) as unknown[];\n\t\treturn jsonDocuments;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BusinessError.html":{"url":"classes/BusinessError.html","title":"class - BusinessError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BusinessError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/business.error.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract base class for business errors, errors that are handled\nwithin of a client or inside of the application.\n\n            \n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                details\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDetails\n                            \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: IErrorType, code: HttpStatus, details?: Record)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/business.error.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        IErrorType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                    HttpStatus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                    Record\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDetails\n                        \n                    \n                \n            \n            \n                \ngetDetails()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/error/business.error.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Record\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResponse\n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/error/business.error.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\nimport { ErrorResponse } from '@src/core/error/dto/error.response';\nimport { IErrorType } from '@src/core/error/interface';\n\n/**\n * Abstract base class for business errors, errors that are handled\n * within of a client or inside of the application.\n */\nexport abstract class BusinessError extends HttpException {\n\treadonly code: number;\n\n\treadonly type: string;\n\n\treadonly title: string;\n\n\treadonly message: string;\n\n\t// Is not matched by type validation because HttpException is already declared\n\treadonly details: Record;\n\n\tconstructor(\n\t\t{ type, title, defaultMessage }: IErrorType,\n\t\tcode: HttpStatus = HttpStatus.CONFLICT,\n\t\tdetails?: Record\n\t) {\n\t\tsuper({ code, type, title, message: defaultMessage }, code);\n\t\tthis.code = code;\n\t\tthis.type = type;\n\t\tthis.title = title;\n\t\tthis.message = defaultMessage;\n\t\tthis.details = details || {};\n\t}\n\n\tgetDetails(): Record {\n\t\treturn this.details;\n\t}\n\n\tgetResponse(): ErrorResponse {\n\t\treturn new ErrorResponse(this.type, this.title, this.message, this.code);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConsoleWriterModule.html":{"url":"modules/ConsoleWriterModule.html","title":"module - ConsoleWriterModule","body":"\n                   \n\n\n\n\n    Modules\n    ConsoleWriterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ConsoleWriterModule\n\n\n\ncluster_ConsoleWriterModule_providers\n\n\n\ncluster_ConsoleWriterModule_exports\n\n\n\n\nConsoleWriterService \n\nConsoleWriterService \n\n\n\nConsoleWriterModule\n\nConsoleWriterModule\n\nConsoleWriterService  -->\n\nConsoleWriterModule->ConsoleWriterService \n\n\n\n\n\nConsoleWriterService\n\nConsoleWriterService\n\nConsoleWriterModule -->\n\nConsoleWriterService->ConsoleWriterModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/shared/infra/console/console-writer/console-writer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ConsoleWriterService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ConsoleWriterService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConsoleWriterService } from './console-writer.service';\n\n@Module({\n\tproviders: [ConsoleWriterService],\n\texports: [ConsoleWriterService],\n})\nexport class ConsoleWriterModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsoleWriterService.html":{"url":"injectables/ConsoleWriterService.html","title":"injectable - ConsoleWriterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConsoleWriterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/console/console-writer/console-writer.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                spinner\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                info\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        info\n                        \n                    \n                \n            \n            \n                \ninfo(text: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/console/console-writer/console-writer.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        spinner\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ora.Ora\n\n                    \n                \n                \n                    \n                        Default value : createSpinner()\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/infra/console/console-writer/console-writer.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { createSpinner } from 'nestjs-console';\nimport ora from 'ora';\n\n@Injectable()\n/**\n * Console writer service using ora spinner internally.\n */\nexport class ConsoleWriterService {\n\tprivate spinner: ora.Ora = createSpinner();\n\n\tinfo(text: string): void {\n\t\tthis.spinner.info(text);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/core.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\nOverrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ErrorModule\n                        \n                        \n                            InterceptorModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            ValidationModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ErrorModule } from './error';\nimport { LoggerModule } from './logger';\nimport { ValidationModule } from './validation';\nimport { InterceptorModule } from './interceptor';\n\n/**\n * The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\n * Overrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n */\n@Module({\n\timports: [LoggerModule, ErrorModule, ValidationModule, InterceptorModule],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Course.html":{"url":"entities/Course.html","title":"entity - Course","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/course.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                startDate\n                            \n                            \n                                students\n                            \n                            \n                                substitutionTeachers\n                            \n                            \n                                teachers\n                            \n                            \n                                    Optional\n                                untilDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT.color\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT.description\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT.name\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('School', {fieldName: 'schoolId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        students\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('User', undefined, {fieldName: 'userIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        substitutionTeachers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('User', undefined, {fieldName: 'substitutionIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teachers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('User', undefined, {fieldName: 'teacherIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        untilDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({name: 'activeCourses'})@Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:62\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Property, Index, ManyToOne, ManyToMany, Collection } from '@mikro-orm/core';\n\nimport { ILearnroom } from '@shared/domain/interface';\nimport { LearnroomMetadata, LearnroomTypes } from '../types';\n\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { School } from './school.entity';\nimport type { User } from './user.entity';\n\nexport interface ICourseProperties {\n\tname?: string;\n\tdescription?: string;\n\tschool: School;\n\tstudents?: User[];\n\tteachers?: User[];\n\tsubstitutionTeachers?: User[];\n\t// TODO: color format\n\tcolor?: string;\n\tstartDate?: Date;\n\tuntilDate?: Date;\n}\n\n// that is really really shit default handling :D constructor, getter, js default, em default...what the hell\n// i hope it can cleanup with adding schema instant of I...Properties.\nconst DEFAULT = {\n\tcolor: '#ACACAC',\n\tname: 'Kurse',\n\tdescription: '',\n};\n\n@Index({ name: 'findAllForTeacher', properties: ['substitutionTeachers', 'teachers'] })\n@Index({ name: 'findAllByUserId', properties: ['students', 'substitutionTeachers', 'teachers'] })\n@Entity({ tableName: 'courses' })\nexport class Course extends BaseEntityWithTimestamps implements ILearnroom {\n\t@Property()\n\tname: string = DEFAULT.name;\n\n\t@Property()\n\tdescription: string = DEFAULT.description;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToMany('User', undefined, { fieldName: 'userIds' })\n\tstudents = new Collection(this);\n\n\t@ManyToMany('User', undefined, { fieldName: 'teacherIds' })\n\tteachers = new Collection(this);\n\n\t@ManyToMany('User', undefined, { fieldName: 'substitutionIds' })\n\tsubstitutionTeachers = new Collection(this);\n\n\t// TODO: string color format\n\t@Property()\n\tcolor: string = DEFAULT.color;\n\n\t@Property()\n\tstartDate?: Date;\n\n\t@Index({ name: 'activeCourses' })\n\t@Property()\n\tuntilDate?: Date;\n\n\tconstructor(props: ICourseProperties) {\n\t\tsuper();\n\t\tif (props.name) this.name = props.name;\n\t\tif (props.description) this.description = props.description;\n\t\tthis.school = props.school;\n\t\tif (props.students) this.students.set(props.students);\n\t\tif (props.teachers) this.teachers.set(props.teachers);\n\t\tif (props.substitutionTeachers) this.substitutionTeachers.set(props.substitutionTeachers);\n\t\tif (props.color) this.color = props.color;\n\t\tif (props.untilDate) this.untilDate = props.untilDate;\n\t\tif (props.startDate) this.startDate = props.startDate;\n\t}\n\n\tgetNumberOfStudents(): number {\n\t\treturn this.students.length;\n\t}\n\n\tisFinished(): boolean {\n\t\tif (!this.untilDate) {\n\t\t\treturn false;\n\t\t}\n\t\tconst isFinished = this.untilDate \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CourseController.html":{"url":"controllers/CourseController.html","title":"controller - CourseController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CourseController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/course.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                courses\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findForUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findForUser(currentUser: ICurrentUser, paginationQuery: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/controller/course.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    paginationQuery\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Query } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\nimport { PaginationQuery } from '@shared/controller/';\nimport { ICurrentUser } from '@shared/domain';\nimport { CourseUc } from '../uc/course.uc';\nimport { CourseMetadataListResponse } from './dto';\nimport { CourseMapper } from '../mapper/course.mapper';\n\n@ApiTags('Courses')\n@Authenticate('jwt')\n@Controller('courses')\nexport class CourseController {\n\tconstructor(private readonly courseUc: CourseUc) {}\n\n\t@Get()\n\tasync findForUser(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() paginationQuery: PaginationQuery\n\t): Promise {\n\t\tconst [courses, total] = await this.courseUc.findAllByUser(currentUser.userId, paginationQuery);\n\t\tconst courseResponses = courses.map((course) => CourseMapper.mapToMetadataResponse(course));\n\t\tconst { skip, limit } = paginationQuery;\n\n\t\tconst result = new CourseMetadataListResponse(courseResponses, total, skip, limit);\n\t\treturn result;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseFactory.html":{"url":"classes/CourseFactory.html","title":"class - CourseFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/testing/factory/course.factory.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseFactory\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                propsFactory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isFinished\n                            \n                            \n                                isOpen\n                            \n                            \n                                afterBuild\n                            \n                            \n                                build\n                            \n                            \n                                buildList\n                            \n                            \n                                buildWithId\n                            \n                            \n                                    Protected\n                                clone\n                            \n                            \n                                    Static\n                                define\n                            \n                            \n                                params\n                            \n                            \n                                rewindSequence\n                            \n                            \n                                    Protected\n                                sequence\n                            \n                            \n                                transient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        propsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Factory\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFactory\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFactory:14\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isFinished\n                        \n                    \n                \n            \n            \n                \nisFinished()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/course.factory.ts:11\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOpen\n                        \n                    \n                \n            \n            \n                \nisOpen()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/course.factory.ts:18\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        afterBuild\n                        \n                    \n                \n            \n            \n                \nafterBuild(afterBuildFn: HookFn)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:85\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding a function to be called after an object is built.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    afterBuildFn\n                                    \n                                            HookFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe function to call. It accepts your object of type T. The value this function returns gets returned from \"build\"\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        build\n                        \n                    \n                \n            \n            \n                \nbuild(params?: DeepPartial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:45\n\n                \n            \n\n\n            \n                \n                    Build an entity using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildList\n                        \n                    \n                \n            \n            \n                \nbuildList(number: number, params?: DeepPartial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:71\n\n                \n            \n\n\n            \n                \n                    Build a list of entities using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    number\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        a list of entities\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildWithId\n                        \n                    \n                \n            \n            \n                \nbuildWithId(params?: DeepPartial, id?: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:58\n\n                \n            \n\n\n            \n                \n                    Build an entity using your factory and generate a id for it.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        clone\n                        \n                    \n                \n            \n            \n                \n                    \n                    clone(this: F, propsFactory: Factory)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:123\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        F\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                            F\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    propsFactory\n                                    \n                                            Factory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        define\n                        \n                    \n                \n            \n            \n                \n                    \n                    define(this, EntityClass: literal type, generator: GeneratorFn)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:30\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        U\n                        I\n                        F\n                    \n                \n            \n\n            \n                \n                    Define a factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    EntityClass\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The constructor of the entity to be built.\n\n                                    \n                                \n                                \n                                    generator\n                                    \n                                            GeneratorFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Your factory function - see Factory.define() in thoughtbot/fishery\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        params\n                        \n                    \n                \n            \n            \n                \nparams(params: DeepPartial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:97\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rewindSequence\n                        \n                    \n                \n            \n            \n                \nrewindSequence()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:119\n\n                \n            \n\n\n            \n                \n                    Set sequence back to its default value\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        sequence\n                        \n                    \n                \n            \n            \n                \n                    \n                    sequence()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:135\n\n                \n            \n\n\n            \n                \n                    Get the next sequence value\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        the next sequence value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transient\n                        \n                    \n                \n            \n            \n                \ntransient(transient: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:109\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default transient parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    transient\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ntransient params\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DeepPartial } from 'fishery';\n\nimport { Course, School, ICourseProperties } from '@shared/domain';\n\nimport { schoolFactory } from './school.factory';\nimport { BaseFactory } from './base.factory';\n\nconst oneDay = 24 * 60 * 60 * 1000;\n\nclass CourseFactory extends BaseFactory {\n\tisFinished(): this {\n\t\tconst untilDate = new Date(Date.now() - oneDay);\n\t\tconst params: DeepPartial = { untilDate };\n\n\t\treturn this.params(params);\n\t}\n\n\tisOpen(): this {\n\t\tconst untilDate = new Date(Date.now() + oneDay);\n\t\tconst params: DeepPartial = { untilDate };\n\n\t\treturn this.params(params);\n\t}\n}\n\nexport const courseFactory = CourseFactory.define(Course, ({ sequence, params }) => {\n\tlet school: School;\n\tif (params?.school) {\n\t\tschool = params.school as School;\n\t} else {\n\t\tschool = schoolFactory.build();\n\t}\n\n\treturn {\n\t\tname: `course #${sequence}`,\n\t\tdescription: `course #${sequence} description`,\n\t\tcolor: '#FFFFFF',\n\t\tschool,\n\t};\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CourseGroup.html":{"url":"entities/CourseGroup.html","title":"entity - CourseGroup","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CourseGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/coursegroup.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                            \n                                students\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        course\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Course', {fieldName: 'courseId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/coursegroup.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        students\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('User', undefined, {fieldName: 'userIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/coursegroup.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Collection, ManyToMany, ManyToOne } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { User } from './user.entity';\nimport type { Course } from './course.entity';\n\nexport interface ICourseGroupProperties {\n\tcourse: Course;\n\tstudents?: User[];\n}\n\n@Entity({ tableName: 'coursegroups' })\nexport class CourseGroup extends BaseEntityWithTimestamps {\n\t@ManyToMany('User', undefined, { fieldName: 'userIds' })\n\tstudents = new Collection(this);\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse: Course;\n\n\tconstructor(props: ICourseGroupProperties) {\n\t\tsuper();\n\t\tthis.course = props.course;\n\t\tif (props.students) this.students.set(props.students);\n\t}\n\n\tgetParentId(): ObjectId {\n\t\treturn this.course._id;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseGroupRepo.html":{"url":"injectables/CourseGroupRepo.html","title":"injectable - CourseGroupRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CourseGroupRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/coursegroup/coursegroup.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findByCourseIds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/coursegroup/coursegroup.repo.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByCourseIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByCourseIds(courseIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/coursegroup/coursegroup.repo.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\n\nimport { Counted, EntityId, CourseGroup } from '@shared/domain';\n\n@Injectable()\nexport class CourseGroupRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findByCourseIds(courseIds: EntityId[]): Promise> {\n\t\tconst [courseGroups, count] = await this.em.findAndCount(CourseGroup, {\n\t\t\tcourse: { $in: courseIds },\n\t\t});\n\t\treturn [courseGroups, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseMapper.html":{"url":"classes/CourseMapper.html","title":"class - CourseMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/mapper/course.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToMetadataResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToMetadataResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToMetadataResponse(course: Course)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/mapper/course.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    course\n                                    \n                                                Course\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CourseMetadataResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Course } from '@shared/domain';\nimport { CourseMetadataResponse } from '../controller/dto';\n\nexport class CourseMapper {\n\tstatic mapToMetadataResponse(course: Course): CourseMetadataResponse {\n\t\tconst courseMetadata = course.getMetadata();\n\t\tconst dto = new CourseMetadataResponse(\n\t\t\tcourseMetadata.id,\n\t\t\tcourseMetadata.title,\n\t\t\tcourseMetadata.shortTitle,\n\t\t\tcourseMetadata.displayColor,\n\t\t\tcourseMetadata.startDate,\n\t\t\tcourseMetadata.untilDate\n\t\t);\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseMetadataListResponse.html":{"url":"classes/CourseMetadataListResponse.html","title":"class - CourseMetadataListResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseMetadataListResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/courseMetadata.response.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PaginationResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: CourseMetadataResponse[], total: number, skip?: number, limit?: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/controller/dto/courseMetadata.response.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        CourseMetadataResponse[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        skip\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CourseMetadataResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:61\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { PaginationResponse } from '@shared/controller';\nimport { EntityId } from '@shared/domain';\n\nexport class CourseMetadataResponse {\n\tconstructor(\n\t\tid: EntityId,\n\t\ttitle: string,\n\t\tshortTitle: string,\n\t\tdisplayColor: string,\n\t\tstartDate?: Date,\n\t\tuntilDate?: Date\n\t) {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.shortTitle = shortTitle;\n\t\tthis.displayColor = displayColor;\n\t\tthis.startDate = startDate;\n\t\tthis.untilDate = untilDate;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Start date of the course',\n\t})\n\tstartDate?: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'End date of the course. After this the course counts as archived',\n\t})\n\tuntilDate?: Date;\n}\n\nexport class CourseMetadataListResponse extends PaginationResponse {\n\tconstructor(data: CourseMetadataResponse[], total: number, skip?: number, limit?: number) {\n\t\tsuper(total, skip, limit);\n\t\tthis.data = data;\n\t}\n\n\t@ApiProperty({ type: [CourseMetadataResponse] })\n\tdata: CourseMetadataResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseMetadataResponse.html":{"url":"classes/CourseMetadataResponse.html","title":"class - CourseMetadataResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseMetadataResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/courseMetadata.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayColor\n                            \n                            \n                                id\n                            \n                            \n                                shortTitle\n                            \n                            \n                                    Optional\n                                startDate\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                untilDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: EntityId, title: string, shortTitle: string, displayColor: string, startDate?: Date, untilDate?: Date)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/controller/dto/courseMetadata.response.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        EntityId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        shortTitle\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        displayColor\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        startDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        untilDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Color of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/courseMetadata.response.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the Grid element', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/courseMetadata.response.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shortTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Short title of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/courseMetadata.response.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Start date of the course'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/courseMetadata.response.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Title of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/courseMetadata.response.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        untilDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'End date of the course. After this the course counts as archived'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/courseMetadata.response.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { PaginationResponse } from '@shared/controller';\nimport { EntityId } from '@shared/domain';\n\nexport class CourseMetadataResponse {\n\tconstructor(\n\t\tid: EntityId,\n\t\ttitle: string,\n\t\tshortTitle: string,\n\t\tdisplayColor: string,\n\t\tstartDate?: Date,\n\t\tuntilDate?: Date\n\t) {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.shortTitle = shortTitle;\n\t\tthis.displayColor = displayColor;\n\t\tthis.startDate = startDate;\n\t\tthis.untilDate = untilDate;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Start date of the course',\n\t})\n\tstartDate?: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'End date of the course. After this the course counts as archived',\n\t})\n\tuntilDate?: Date;\n}\n\nexport class CourseMetadataListResponse extends PaginationResponse {\n\tconstructor(data: CourseMetadataResponse[], total: number, skip?: number, limit?: number) {\n\t\tsuper(total, skip, limit);\n\t\tthis.data = data;\n\t}\n\n\t@ApiProperty({ type: [CourseMetadataResponse] })\n\tdata: CourseMetadataResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CourseNews.html":{"url":"entities/CourseNews.html","title":"entity - CourseNews","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CourseNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/news.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Course')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:104\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { School } from './school.entity';\nimport type { Team } from './team.entity';\nimport type { User } from './user.entity';\nimport { NewsTarget, NewsTargetModel } from '../types/news.types';\nimport { EntityId } from '../types';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId | School;\n\tcreator: EntityId | User;\n\ttarget: EntityId | NewsTarget;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: User;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTarget;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel!: NewsTargetModel;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToOne('User', { fieldName: 'creatorId' })\n\tcreator!: User;\n\n\t@ManyToOne('User', { fieldName: 'updaterId' })\n\tupdater?: User;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, updater: props.updater, target: props.target });\n\t\tthis.externalId = props.externalId;\n\t\tthis.source = props.source;\n\t\tthis.sourceDescription = props.sourceDescription;\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne('School')\n\ttarget!: School;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne('Course')\n\ttarget!: Course;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne('Team')\n\ttarget!: Team;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseRepo.html":{"url":"injectables/CourseRepo.html","title":"injectable - CourseRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CourseRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/course/course.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllByUserId\n                            \n                            \n                                    Async\n                                findAllForTeacher\n                            \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/course/course.repo.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByUserId(userId: EntityId, filters?: literal type, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/course/course.repo.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filters\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForTeacher\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForTeacher(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/course/course.repo.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(courseId: EntityId, userId?: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/course/course.repo.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { QueryOrderMap } from '@mikro-orm/core';\n\nimport { EntityId, Course, Counted, IFindOptions } from '@shared/domain';\nimport { Scope } from '../scope';\n\nclass CourseScope extends Scope {\n\tforAllGroupTypes(userId: EntityId): CourseScope {\n\t\tconst isStudent = { students: userId };\n\t\tconst isTeacher = { teachers: userId };\n\t\tconst isSubstitutionTeacher = { substitutionTeachers: userId };\n\n\t\tif (userId) {\n\t\t\tthis.addQuery({ $or: [isStudent, isTeacher, isSubstitutionTeacher] });\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tforTeacher(userId: EntityId): CourseScope {\n\t\tconst isTeacher = { teachers: userId };\n\t\tconst isSubstitutionTeacher = { substitutionTeachers: userId };\n\n\t\tif (userId) {\n\t\t\tthis.addQuery({ $or: [isTeacher, isSubstitutionTeacher] });\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tforActiveCourses(): CourseScope {\n\t\tconst now = new Date();\n\t\tconst noUntilDate = { untilDate: { $exists: false } };\n\t\tconst untilDateInFuture = { untilDate: { $gte: now } };\n\n\t\tthis.addQuery({ $or: [noUntilDate, untilDateInFuture] });\n\n\t\treturn this;\n\t}\n\n\tforCourseId(courseId: EntityId): CourseScope {\n\t\tthis.addQuery({ id: courseId });\n\t\treturn this;\n\t}\n}\n\n@Injectable()\nexport class CourseRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findAllByUserId(\n\t\tuserId: EntityId,\n\t\tfilters?: { onlyActiveCourses?: boolean },\n\t\toptions?: IFindOptions\n\t): Promise> {\n\t\tconst scope = new CourseScope();\n\t\tscope.forAllGroupTypes(userId);\n\n\t\tif (filters?.onlyActiveCourses) {\n\t\t\tscope.forActiveCourses();\n\t\t}\n\n\t\tconst { pagination, order } = options || {};\n\t\tconst queryOptions = {\n\t\t\toffset: pagination?.skip,\n\t\t\tlimit: pagination?.limit,\n\t\t\torderBy: order as QueryOrderMap,\n\t\t};\n\n\t\tconst [courses, count] = await this.em.findAndCount(Course, scope.query, queryOptions);\n\n\t\treturn [courses, count];\n\t}\n\n\t// not tested in repo.integration.spec\n\tasync findAllForTeacher(userId: EntityId): Promise> {\n\t\tconst scope = new CourseScope();\n\t\tscope.forTeacher(userId);\n\n\t\tconst [courses, count] = await this.em.findAndCount(Course, scope.query);\n\n\t\treturn [courses, count];\n\t}\n\n\tasync findOne(courseId: EntityId, userId?: EntityId): Promise {\n\t\tconst scope = new CourseScope();\n\t\tscope.forCourseId(courseId);\n\t\tif (userId) scope.forAllGroupTypes(userId);\n\n\t\tconst course = await this.em.findOneOrFail(Course, scope.query);\n\n\t\treturn course;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseScope.html":{"url":"classes/CourseScope.html","title":"class - CourseScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/course/course.repo.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _operator\n                            \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                forActiveCourses\n                            \n                            \n                                forAllGroupTypes\n                            \n                            \n                                forCourseId\n                            \n                            \n                                forTeacher\n                            \n                            \n                                addQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _operator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScopeOperator\n\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        forActiveCourses\n                        \n                    \n                \n            \n            \n                \nforActiveCourses()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/course/course.repo.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         CourseScope\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forAllGroupTypes\n                        \n                    \n                \n            \n            \n                \nforAllGroupTypes(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/course/course.repo.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CourseScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forCourseId\n                        \n                    \n                \n            \n            \n                \nforCourseId(courseId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/course/course.repo.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CourseScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forTeacher\n                        \n                    \n                \n            \n            \n                \nforTeacher(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/course/course.repo.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CourseScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { QueryOrderMap } from '@mikro-orm/core';\n\nimport { EntityId, Course, Counted, IFindOptions } from '@shared/domain';\nimport { Scope } from '../scope';\n\nclass CourseScope extends Scope {\n\tforAllGroupTypes(userId: EntityId): CourseScope {\n\t\tconst isStudent = { students: userId };\n\t\tconst isTeacher = { teachers: userId };\n\t\tconst isSubstitutionTeacher = { substitutionTeachers: userId };\n\n\t\tif (userId) {\n\t\t\tthis.addQuery({ $or: [isStudent, isTeacher, isSubstitutionTeacher] });\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tforTeacher(userId: EntityId): CourseScope {\n\t\tconst isTeacher = { teachers: userId };\n\t\tconst isSubstitutionTeacher = { substitutionTeachers: userId };\n\n\t\tif (userId) {\n\t\t\tthis.addQuery({ $or: [isTeacher, isSubstitutionTeacher] });\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tforActiveCourses(): CourseScope {\n\t\tconst now = new Date();\n\t\tconst noUntilDate = { untilDate: { $exists: false } };\n\t\tconst untilDateInFuture = { untilDate: { $gte: now } };\n\n\t\tthis.addQuery({ $or: [noUntilDate, untilDateInFuture] });\n\n\t\treturn this;\n\t}\n\n\tforCourseId(courseId: EntityId): CourseScope {\n\t\tthis.addQuery({ id: courseId });\n\t\treturn this;\n\t}\n}\n\n@Injectable()\nexport class CourseRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findAllByUserId(\n\t\tuserId: EntityId,\n\t\tfilters?: { onlyActiveCourses?: boolean },\n\t\toptions?: IFindOptions\n\t): Promise> {\n\t\tconst scope = new CourseScope();\n\t\tscope.forAllGroupTypes(userId);\n\n\t\tif (filters?.onlyActiveCourses) {\n\t\t\tscope.forActiveCourses();\n\t\t}\n\n\t\tconst { pagination, order } = options || {};\n\t\tconst queryOptions = {\n\t\t\toffset: pagination?.skip,\n\t\t\tlimit: pagination?.limit,\n\t\t\torderBy: order as QueryOrderMap,\n\t\t};\n\n\t\tconst [courses, count] = await this.em.findAndCount(Course, scope.query, queryOptions);\n\n\t\treturn [courses, count];\n\t}\n\n\t// not tested in repo.integration.spec\n\tasync findAllForTeacher(userId: EntityId): Promise> {\n\t\tconst scope = new CourseScope();\n\t\tscope.forTeacher(userId);\n\n\t\tconst [courses, count] = await this.em.findAndCount(Course, scope.query);\n\n\t\treturn [courses, count];\n\t}\n\n\tasync findOne(courseId: EntityId, userId?: EntityId): Promise {\n\t\tconst scope = new CourseScope();\n\t\tscope.forCourseId(courseId);\n\t\tif (userId) scope.forAllGroupTypes(userId);\n\n\t\tconst course = await this.em.findOneOrFail(Course, scope.query);\n\n\t\treturn course;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseUc.html":{"url":"injectables/CourseUc.html","title":"injectable - CourseUc","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CourseUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/uc/course.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAllByUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(courseRepo: CourseRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/uc/course.uc.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseRepo\n                                                  \n                                                        \n                                                                        CourseRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAllByUser\n                        \n                    \n                \n            \n            \n                \nfindAllByUser(userId: EntityId, options?: PaginationQuery)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/course.uc.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, Course, Counted, SortOrder } from '@shared/domain';\nimport { CourseRepo } from '@shared/repo';\nimport { PaginationQuery } from '@shared/controller/';\n\n@Injectable()\nexport class CourseUc {\n\tconstructor(private readonly courseRepo: CourseRepo) {}\n\n\tfindAllByUser(userId: EntityId, options?: PaginationQuery): Promise> {\n\t\treturn this.courseRepo.findAllByUserId(userId, {}, { pagination: options, order: { updatedAt: SortOrder.desc } });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNewsParams.html":{"url":"classes/CreateNewsParams.html","title":"class - CreateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/create-news.params.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for creating a news document.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                    Optional\n                                displayAt\n                            \n                            \n                                targetId\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Content of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiPropertyOptional({description: 'The point in time from when the News entity schould be displayed. Defaults to now so that the news is published'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Title of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsDate, IsOptional, IsString } from 'class-validator';\nimport { NewsTargetModel } from '@shared/domain';\n\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\n/**\n * DTO for creating a news document.\n */\nexport class CreateNewsParams {\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle!: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent!: string;\n\n\t@IsDate()\n\t@IsOptional()\n\t@ApiPropertyOptional({\n\t\tdescription:\n\t\t\t'The point in time from when the News entity schould be displayed. Defaults to now so that the news is published',\n\t})\n\tdisplayAt?: Date;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel!: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId!: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DashboardController.html":{"url":"controllers/DashboardController.html","title":"controller - DashboardController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DashboardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dashboard.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                dashboard\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findForUser\n                            \n                            \n                                    Async\n                                moveElement\n                            \n                            \n                                    Async\n                                patchGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findForUser(currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/controller/dashboard.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        moveElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    moveElement(dashboardId: string, params: MoveElementParams, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/moveElement')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/controller/dashboard.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dashboardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                MoveElementParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        patchGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    patchGroup(dashboardId: string, x: number, y: number, params: PatchGroupParams, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/element')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/controller/dashboard.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dashboardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    x\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    y\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                PatchGroupParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Patch, Param, Body, Query } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\nimport { ParseObjectIdPipe } from '@shared/controller';\nimport { ICurrentUser } from '@shared/domain';\nimport { DashboardUc } from '../uc/dashboard.uc';\nimport { DashboardResponse, MoveElementParams, PatchGroupParams } from './dto';\nimport { DashboardMapper } from '../mapper/dashboard.mapper';\n\n@ApiTags('Dashboard')\n@Authenticate('jwt')\n@Controller('dashboard')\nexport class DashboardController {\n\tconstructor(private readonly dashboardUc: DashboardUc) {}\n\n\t@Get()\n\tasync findForUser(@CurrentUser() currentUser: ICurrentUser): Promise {\n\t\tconst dashboard = await this.dashboardUc.getUsersDashboard(currentUser.userId);\n\t\tconst dto = DashboardMapper.mapToResponse(dashboard);\n\t\treturn dto;\n\t}\n\n\t@Patch(':id/moveElement')\n\tasync moveElement(\n\t\t@Param('id', ParseObjectIdPipe) dashboardId: string,\n\t\t@Body() params: MoveElementParams,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst dashboard = await this.dashboardUc.moveElementOnDashboard(\n\t\t\tdashboardId,\n\t\t\tparams.from,\n\t\t\tparams.to,\n\t\t\tcurrentUser.userId\n\t\t);\n\t\tconst dto = DashboardMapper.mapToResponse(dashboard);\n\t\treturn dto;\n\t}\n\n\t@Patch(':id/element')\n\tasync patchGroup(\n\t\t@Param('id', ParseObjectIdPipe) dashboardId: string,\n\t\t@Query('x') x: number,\n\t\t@Query('y') y: number,\n\t\t@Body() params: PatchGroupParams,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst dashboard = await this.dashboardUc.renameGroupOnDashboard(\n\t\t\tdashboardId,\n\t\t\t{ x, y },\n\t\t\tparams.title,\n\t\t\tcurrentUser.userId\n\t\t);\n\t\tconst dto = DashboardMapper.mapToResponse(dashboard);\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardEntity.html":{"url":"classes/DashboardEntity.html","title":"class - DashboardEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columns\n                            \n                            \n                                grid\n                            \n                            \n                                id\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addRoom\n                            \n                            \n                                    Private\n                                allRooms\n                            \n                            \n                                    Private\n                                determineNewRoomsIn\n                            \n                            \n                                getElement\n                            \n                            \n                                    Private\n                                getFirstOpenIndex\n                            \n                            \n                                getGrid\n                            \n                            \n                                getId\n                            \n                            \n                                    Private\n                                getReferencesFromPosition\n                            \n                            \n                                getUserId\n                            \n                            \n                                    Private\n                                gridIndexFromPosition\n                            \n                            \n                                    Private\n                                mergeElementIntoPosition\n                            \n                            \n                                moveElement\n                            \n                            \n                                    Private\n                                positionFromGridIndex\n                            \n                            \n                                    Private\n                                removeFromPosition\n                            \n                            \n                                    Private\n                                removeRoomsNotInList\n                            \n                            \n                                setLearnRooms\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, props: DashboardProps)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:179\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        DashboardProps\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:162\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        grid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:164\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:160\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:166\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addRoom\n                        \n                    \n                \n            \n            \n                \n                    \n                    addRoom(room: ILearnroom)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:275\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    room\n                                    \n                                                ILearnroom\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        allRooms\n                        \n                    \n                \n            \n            \n                \n                    \n                    allRooms()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:265\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ILearnroom[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        determineNewRoomsIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    determineNewRoomsIn(rooms: ILearnroom[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:254\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rooms\n                                    \n                                                ILearnroom[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ILearnroom[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getElement\n                        \n                    \n                \n            \n            \n                \ngetElement(position: GridPosition)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:212\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                                GridPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IGridElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getFirstOpenIndex\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFirstOpenIndex()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:281\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGrid\n                        \n                    \n                \n            \n            \n                \ngetGrid()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:200\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         GridElementWithPosition[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getId\n                        \n                    \n                \n            \n            \n                \ngetId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getReferencesFromPosition\n                        \n                    \n                \n            \n            \n                \n                    \n                    getReferencesFromPosition(position: GridPositionWithGroupIndex)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:289\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                                GridPositionWithGroupIndex\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IGridElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserId\n                        \n                    \n                \n            \n            \n                \ngetUserId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:196\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityId\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        gridIndexFromPosition\n                        \n                    \n                \n            \n            \n                \n                    \n                    gridIndexFromPosition(pos: GridPosition)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pos\n                                    \n                                                GridPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        mergeElementIntoPosition\n                        \n                    \n                \n            \n            \n                \n                    \n                    mergeElementIntoPosition(element: IGridElement, position: GridPosition)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:310\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                                IGridElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                                GridPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IGridElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moveElement\n                        \n                    \n                \n            \n            \n                \nmoveElement(from: GridPositionWithGroupIndex, to: GridPositionWithGroupIndex)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:220\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    from\n                                    \n                                                GridPositionWithGroupIndex\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                                GridPositionWithGroupIndex\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GridElementWithPosition\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        positionFromGridIndex\n                        \n                    \n                \n            \n            \n                \n                    \n                    positionFromGridIndex(index: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GridPosition\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        removeFromPosition\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeFromPosition(position: GridPositionWithGroupIndex)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:301\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                                GridPositionWithGroupIndex\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        removeRoomsNotInList\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeRoomsNotInList(roomList: ILearnroom[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:239\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roomList\n                                    \n                                                ILearnroom[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLearnRooms\n                        \n                    \n                \n            \n            \n                \nsetLearnRooms(rooms: ILearnroom[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:230\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rooms\n                                    \n                                                ILearnroom[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException, BadRequestException } from '@nestjs/common';\nimport { EntityId, LearnroomMetadata } from '@shared/domain/types';\nimport { ILearnroom } from '@shared/domain/interface';\n\nconst defaultColumns = 4;\n\nexport interface IGridElement {\n\thasId(): boolean;\n\n\tgetId: () => EntityId | undefined;\n\n\tgetContent: () => GridElementContent;\n\n\tisGroup(): boolean;\n\n\tremoveReferenceByIndex(index: number): void;\n\n\tremoveReference(reference: ILearnroom): void;\n\n\tgetReferences(): ILearnroom[];\n\n\taddReferences(anotherReference: ILearnroom[]): void;\n\n\tsetGroupName(newGroupName: string): void;\n}\n\nexport type GridElementContent = {\n\treferencedId?: string;\n\ttitle?: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n\tgroup?: LearnroomMetadata[];\n\tgroupId?: string;\n};\n\nexport class GridElement implements IGridElement {\n\tid?: EntityId;\n\n\ttitle?: string;\n\n\tprivate sortReferences = (a: ILearnroom, b: ILearnroom) => {\n\t\tconst titleA = a.getMetadata().title;\n\t\tconst titleB = b.getMetadata().title;\n\t\tif (titleA  titleB) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t};\n\n\tprivate constructor(props: { id?: EntityId; title?: string; references: ILearnroom[] }) {\n\t\tif (props.id) this.id = props.id;\n\t\tif (props.title) this.title = props.title;\n\t\tthis.references = props.references.sort(this.sortReferences);\n\t}\n\n\tstatic FromPersistedReference(id: EntityId, reference: ILearnroom): GridElement {\n\t\treturn new GridElement({ id, references: [reference] });\n\t}\n\n\tstatic FromPersistedGroup(id: EntityId, title: string | undefined, group: ILearnroom[]): GridElement {\n\t\treturn new GridElement({ id, title, references: group });\n\t}\n\n\tstatic FromSingleReference(reference: ILearnroom): GridElement {\n\t\treturn new GridElement({ references: [reference] });\n\t}\n\n\tstatic FromGroup(title: string, references: ILearnroom[]): GridElement {\n\t\treturn new GridElement({ title, references });\n\t}\n\n\treferences: ILearnroom[];\n\n\thasId(): boolean {\n\t\treturn !!this.id;\n\t}\n\n\tgetId(): EntityId | undefined {\n\t\treturn this.id;\n\t}\n\n\tgetReferences(): ILearnroom[] {\n\t\treturn this.references;\n\t}\n\n\tremoveReferenceByIndex(index: number): void {\n\t\tif (!this.isGroup()) {\n\t\t\tthrow new BadRequestException('this element is not a group.');\n\t\t}\n\t\tif (index > 0 && this.references.length  reference.getMetadata());\n\t\tconst checkShortTitle = this.title ? this.title.substr(0, 2) : '';\n\t\tconst groupMetadata = {\n\t\t\tgroupId: this.getId(),\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: checkShortTitle,\n\t\t\tdisplayColor: 'exampleColor',\n\t\t\tgroup: groupData,\n\t\t};\n\t\treturn groupMetadata;\n\t}\n\n\tisGroup(): boolean {\n\t\treturn this.references.length > 1;\n\t}\n\n\tsetGroupName(newGroupName: string): void {\n\t\tif (!this.isGroup()) {\n\t\t\treturn;\n\t\t}\n\t\tthis.title = newGroupName;\n\t}\n}\n\nexport type GridPosition = { x: number; y: number };\nexport type GridPositionWithGroupIndex = { x: number; y: number; groupIndex?: number };\n\nexport type GridElementWithPosition = {\n\tgridElement: IGridElement;\n\tpos: GridPosition;\n};\n\nexport type DashboardProps = { colums?: number; grid: GridElementWithPosition[]; userId: EntityId };\n\nexport class DashboardEntity {\n\tid: EntityId;\n\n\tcolumns: number;\n\n\tgrid: Map;\n\n\tuserId: EntityId;\n\n\tprivate gridIndexFromPosition(pos: GridPosition): number {\n\t\tif (pos.x > this.columns) {\n\t\t\tthrow new BadRequestException('dashboard element position is outside the grid.');\n\t\t}\n\t\treturn this.columns * pos.y + pos.x;\n\t}\n\n\tprivate positionFromGridIndex(index: number): GridPosition {\n\t\tconst y = Math.floor(index / this.columns);\n\t\tconst x = index % this.columns;\n\t\treturn { x, y };\n\t}\n\n\tconstructor(id: string, props: DashboardProps) {\n\t\tthis.columns = props.colums || defaultColumns;\n\t\tthis.grid = new Map();\n\t\tprops.grid.forEach((element) => {\n\t\t\tthis.grid.set(this.gridIndexFromPosition(element.pos), element.gridElement);\n\t\t});\n\t\tthis.id = id;\n\t\tthis.userId = props.userId;\n\t\tObject.assign(this, {});\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetUserId(): EntityId {\n\t\treturn this.userId;\n\t}\n\n\tgetGrid(): GridElementWithPosition[] {\n\t\tconst result = [...this.grid.keys()].map((key) => {\n\t\t\tconst position = this.positionFromGridIndex(key);\n\t\t\tconst value = this.grid.get(key) as IGridElement;\n\t\t\treturn {\n\t\t\t\tpos: position,\n\t\t\t\tgridElement: value,\n\t\t\t};\n\t\t});\n\t\treturn result;\n\t}\n\n\tgetElement(position: GridPosition): IGridElement {\n\t\tconst element = this.grid.get(this.gridIndexFromPosition(position));\n\t\tif (!element) {\n\t\t\tthrow new NotFoundException('no element at grid position');\n\t\t}\n\t\treturn element;\n\t}\n\n\tmoveElement(from: GridPositionWithGroupIndex, to: GridPositionWithGroupIndex): GridElementWithPosition {\n\t\tconst elementToMove = this.getReferencesFromPosition(from);\n\t\tconst resultElement = this.mergeElementIntoPosition(elementToMove, to);\n\t\tthis.removeFromPosition(from);\n\t\treturn {\n\t\t\tpos: to,\n\t\t\tgridElement: resultElement,\n\t\t};\n\t}\n\n\tsetLearnRooms(rooms: ILearnroom[]): void {\n\t\tthis.removeRoomsNotInList(rooms);\n\t\tconst newRooms = this.determineNewRoomsIn(rooms);\n\n\t\tnewRooms.forEach((room) => {\n\t\t\tthis.addRoom(room);\n\t\t});\n\t}\n\n\tprivate removeRoomsNotInList(roomList: ILearnroom[]): void {\n\t\t[...this.grid.keys()].forEach((key) => {\n\t\t\tconst element = this.grid.get(key) as IGridElement;\n\t\t\tconst currentRooms = element.getReferences();\n\t\t\tcurrentRooms.forEach((room) => {\n\t\t\t\tif (!roomList.includes(room)) {\n\t\t\t\t\telement.removeReference(room);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (element.getReferences().length === 0) {\n\t\t\t\tthis.grid.delete(key);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate determineNewRoomsIn(rooms: ILearnroom[]): ILearnroom[] {\n\t\tconst result: ILearnroom[] = [];\n\t\tconst existingRooms = this.allRooms();\n\t\trooms.forEach((room) => {\n\t\t\tif (!existingRooms.includes(room)) {\n\t\t\t\tresult.push(room);\n\t\t\t}\n\t\t});\n\t\treturn result;\n\t}\n\n\tprivate allRooms(): ILearnroom[] {\n\t\tconst elements = [...this.grid.values()];\n\t\tconst references = elements\n\t\t\t.map((el) => {\n\t\t\t\treturn el.getReferences();\n\t\t\t})\n\t\t\t.flat();\n\t\treturn references;\n\t}\n\n\tprivate addRoom(room: ILearnroom): void {\n\t\tconst index = this.getFirstOpenIndex();\n\t\tconst newElement = GridElement.FromSingleReference(room);\n\t\tthis.grid.set(index, newElement);\n\t}\n\n\tprivate getFirstOpenIndex(): number {\n\t\tlet i = 0;\n\t\twhile (this.grid.get(i) !== undefined) {\n\t\t\ti += 1;\n\t\t}\n\t\treturn i;\n\t}\n\n\tprivate getReferencesFromPosition(position: GridPositionWithGroupIndex): IGridElement {\n\t\tconst elementToMove = this.getElement(position);\n\n\t\tif (typeof position.groupIndex === 'number' && elementToMove.isGroup()) {\n\t\t\tconst references = elementToMove.getReferences();\n\t\t\tconst referenceForIndex = references[position.groupIndex];\n\t\t\treturn GridElement.FromSingleReference(referenceForIndex);\n\t\t}\n\n\t\treturn elementToMove;\n\t}\n\n\tprivate removeFromPosition(position: GridPositionWithGroupIndex): void {\n\t\tconst element = this.getElement(position);\n\t\tif (typeof position.groupIndex === 'number') {\n\t\t\telement.removeReferenceByIndex(position.groupIndex);\n\t\t} else {\n\t\t\tthis.grid.delete(this.gridIndexFromPosition(position));\n\t\t}\n\t}\n\n\tprivate mergeElementIntoPosition(element: IGridElement, position: GridPosition): IGridElement {\n\t\tconst targetElement = this.grid.get(this.gridIndexFromPosition(position));\n\t\tif (targetElement) {\n\t\t\ttargetElement.addReferences(element.getReferences());\n\t\t\treturn targetElement;\n\t\t}\n\t\tthis.grid.set(this.gridIndexFromPosition(position), element);\n\t\treturn element;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DashboardGridElementModel.html":{"url":"entities/DashboardGridElementModel.html","title":"entity - DashboardGridElementModel","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DashboardGridElementModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.model.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dashboard\n                            \n                            \n                                references\n                            \n                            \n                                    Optional\n                                title\n                            \n                            \n                                xPos\n                            \n                            \n                                yPos\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dashboard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentifiedReference\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('DashboardModelEntity', {wrappedReference: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.model.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        references\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('Course', undefined, {fieldName: 'referenceIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.model.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.model.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        xPos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.model.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        yPos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.model.entity.ts:47\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n\tEntity,\n\tProperty,\n\tManyToOne,\n\tOneToMany,\n\tManyToMany,\n\tCollection,\n\tIdentifiedReference,\n\twrap,\n} from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from '@shared/domain/entity/base.entity';\nimport { User } from './user.entity';\nimport { Course } from './course.entity';\n\nexport interface DashboardGridElementModelProperties {\n\tid?: string;\n\ttitle?: string;\n\txPos: number;\n\tyPos: number;\n\treferences: Course[];\n\tdashboard: DashboardModelEntity;\n}\n\n@Entity({ tableName: 'dashboardelement' })\nexport class DashboardGridElementModel extends BaseEntityWithTimestamps {\n\tconstructor({ id, title, xPos, yPos, references, dashboard }: DashboardGridElementModelProperties) {\n\t\tsuper();\n\t\tif (id) {\n\t\t\tthis._id = ObjectId.createFromHexString(id);\n\t\t\tthis.id = id;\n\t\t}\n\t\tthis.title = title;\n\t\tthis.xPos = xPos;\n\t\tthis.yPos = yPos;\n\t\tthis.references.set(references);\n\t\tthis.dashboard = wrap(dashboard).toReference();\n\t}\n\n\t@Property()\n\ttitle?: string;\n\n\t@Property()\n\txPos: number;\n\n\t@Property()\n\tyPos: number;\n\n\t@ManyToMany('Course', undefined, { fieldName: 'referenceIds' })\n\treferences = new Collection(this);\n\n\t@ManyToOne('DashboardModelEntity', { wrappedReference: true })\n\tdashboard: IdentifiedReference;\n}\n\nexport interface IDashboardModelProperties {\n\tid: string;\n\tuser: User;\n\tgridElements?: DashboardGridElementModel[];\n}\n\n@Entity({ tableName: 'dashboard' })\nexport class DashboardModelEntity extends BaseEntityWithTimestamps {\n\tconstructor(props: IDashboardModelProperties) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(props.id);\n\t\tthis.id = props.id;\n\t\tthis.user = wrap(props.user).toReference();\n\t\tif (props.gridElements) this.gridElements.set(props.gridElements);\n\t}\n\n\t@OneToMany('DashboardGridElementModel', 'dashboard')\n\tgridElements: Collection = new Collection(this);\n\n\t// userId\n\t@ManyToOne('User', { fieldName: 'userId', wrappedReference: true })\n\tuser: IdentifiedReference;\n\n\t// sizetype\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DashboardGridElementModelProperties.html":{"url":"interfaces/DashboardGridElementModelProperties.html","title":"interface - DashboardGridElementModelProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DashboardGridElementModelProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.model.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            dashboard\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            references\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            xPos\n                                        \n                                \n                                \n                                        \n                                            yPos\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dashboard\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dashboard:         DashboardModelEntity\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DashboardModelEntity\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        references\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        references:         Course[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Course[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        xPos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        xPos:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yPos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        yPos:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n\tEntity,\n\tProperty,\n\tManyToOne,\n\tOneToMany,\n\tManyToMany,\n\tCollection,\n\tIdentifiedReference,\n\twrap,\n} from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from '@shared/domain/entity/base.entity';\nimport { User } from './user.entity';\nimport { Course } from './course.entity';\n\nexport interface DashboardGridElementModelProperties {\n\tid?: string;\n\ttitle?: string;\n\txPos: number;\n\tyPos: number;\n\treferences: Course[];\n\tdashboard: DashboardModelEntity;\n}\n\n@Entity({ tableName: 'dashboardelement' })\nexport class DashboardGridElementModel extends BaseEntityWithTimestamps {\n\tconstructor({ id, title, xPos, yPos, references, dashboard }: DashboardGridElementModelProperties) {\n\t\tsuper();\n\t\tif (id) {\n\t\t\tthis._id = ObjectId.createFromHexString(id);\n\t\t\tthis.id = id;\n\t\t}\n\t\tthis.title = title;\n\t\tthis.xPos = xPos;\n\t\tthis.yPos = yPos;\n\t\tthis.references.set(references);\n\t\tthis.dashboard = wrap(dashboard).toReference();\n\t}\n\n\t@Property()\n\ttitle?: string;\n\n\t@Property()\n\txPos: number;\n\n\t@Property()\n\tyPos: number;\n\n\t@ManyToMany('Course', undefined, { fieldName: 'referenceIds' })\n\treferences = new Collection(this);\n\n\t@ManyToOne('DashboardModelEntity', { wrappedReference: true })\n\tdashboard: IdentifiedReference;\n}\n\nexport interface IDashboardModelProperties {\n\tid: string;\n\tuser: User;\n\tgridElements?: DashboardGridElementModel[];\n}\n\n@Entity({ tableName: 'dashboard' })\nexport class DashboardModelEntity extends BaseEntityWithTimestamps {\n\tconstructor(props: IDashboardModelProperties) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(props.id);\n\t\tthis.id = props.id;\n\t\tthis.user = wrap(props.user).toReference();\n\t\tif (props.gridElements) this.gridElements.set(props.gridElements);\n\t}\n\n\t@OneToMany('DashboardGridElementModel', 'dashboard')\n\tgridElements: Collection = new Collection(this);\n\n\t// userId\n\t@ManyToOne('User', { fieldName: 'userId', wrappedReference: true })\n\tuser: IdentifiedReference;\n\n\t// sizetype\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardGridElementResponse.html":{"url":"classes/DashboardGridElementResponse.html","title":"class - DashboardGridElementResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardGridElementResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayColor\n                            \n                            \n                                    Optional\n                                groupElements\n                            \n                            \n                                    Optional\n                                groupId\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                shortTitle\n                            \n                            \n                                    Optional\n                                title\n                            \n                            \n                                xPosition\n                            \n                            \n                                yPosition\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: DashboardGridElementResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        DashboardGridElementResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Color of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        groupElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DashboardGridSubElementResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, description: 'List of all subelements in the group'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        groupId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the group element', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the Grid element', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shortTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Short title of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Title of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        xPosition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'X position of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        yPosition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Y position of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:83\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class DashboardGridSubElementResponse {\n\tconstructor({ id, title, shortTitle, displayColor }: DashboardGridSubElementResponse) {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.shortTitle = shortTitle;\n\t\tthis.displayColor = displayColor;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n}\n\nexport class DashboardGridElementResponse {\n\tconstructor({\n\t\tid,\n\t\ttitle,\n\t\tshortTitle,\n\t\tdisplayColor,\n\t\txPosition,\n\t\tyPosition,\n\t\tgroupId,\n\t\tgroupElements,\n\t}: DashboardGridElementResponse) {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.shortTitle = shortTitle;\n\t\tthis.displayColor = displayColor;\n\t\tthis.xPosition = xPosition;\n\t\tthis.yPosition = yPosition;\n\t\tthis.groupId = groupId;\n\t\tthis.groupElements = groupElements;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid?: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle?: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\tdescription: 'X position of the Grid element',\n\t})\n\txPosition: number;\n\n\t@ApiProperty({\n\t\tdescription: 'Y position of the Grid element',\n\t})\n\tyPosition: number;\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the group element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tgroupId?: string;\n\n\t@ApiProperty({\n\t\ttype: [DashboardGridSubElementResponse],\n\t\tdescription: 'List of all subelements in the group',\n\t})\n\tgroupElements?: DashboardGridSubElementResponse[];\n}\n\nexport class DashboardResponse {\n\tconstructor({ id, gridElements }: DashboardResponse) {\n\t\tthis.id = id;\n\t\tthis.gridElements = gridElements;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the Dashboard entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\ttype: [DashboardGridElementResponse],\n\t\tdescription: 'List of all elements visible on the dashboard',\n\t})\n\tgridElements: DashboardGridElementResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardGridSubElementResponse.html":{"url":"classes/DashboardGridSubElementResponse.html","title":"class - DashboardGridSubElementResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardGridSubElementResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayColor\n                            \n                            \n                                id\n                            \n                            \n                                shortTitle\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: DashboardGridSubElementResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        DashboardGridSubElementResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Color of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the Grid element', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shortTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Short title of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Title of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class DashboardGridSubElementResponse {\n\tconstructor({ id, title, shortTitle, displayColor }: DashboardGridSubElementResponse) {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.shortTitle = shortTitle;\n\t\tthis.displayColor = displayColor;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n}\n\nexport class DashboardGridElementResponse {\n\tconstructor({\n\t\tid,\n\t\ttitle,\n\t\tshortTitle,\n\t\tdisplayColor,\n\t\txPosition,\n\t\tyPosition,\n\t\tgroupId,\n\t\tgroupElements,\n\t}: DashboardGridElementResponse) {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.shortTitle = shortTitle;\n\t\tthis.displayColor = displayColor;\n\t\tthis.xPosition = xPosition;\n\t\tthis.yPosition = yPosition;\n\t\tthis.groupId = groupId;\n\t\tthis.groupElements = groupElements;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid?: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle?: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\tdescription: 'X position of the Grid element',\n\t})\n\txPosition: number;\n\n\t@ApiProperty({\n\t\tdescription: 'Y position of the Grid element',\n\t})\n\tyPosition: number;\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the group element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tgroupId?: string;\n\n\t@ApiProperty({\n\t\ttype: [DashboardGridSubElementResponse],\n\t\tdescription: 'List of all subelements in the group',\n\t})\n\tgroupElements?: DashboardGridSubElementResponse[];\n}\n\nexport class DashboardResponse {\n\tconstructor({ id, gridElements }: DashboardResponse) {\n\t\tthis.id = id;\n\t\tthis.gridElements = gridElements;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the Dashboard entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\ttype: [DashboardGridElementResponse],\n\t\tdescription: 'List of all elements visible on the dashboard',\n\t})\n\tgridElements: DashboardGridElementResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardMapper.html":{"url":"classes/DashboardMapper.html","title":"class - DashboardMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                mapGridElement\n                            \n                            \n                                    Private\n                                    Static\n                                mapLearnroom\n                            \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        mapGridElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapGridElement(data: GridElementWithPosition)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GridElementWithPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DashboardGridElementResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        mapLearnroom\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapLearnroom(metadata: LearnroomMetadata)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metadata\n                                    \n                                                LearnroomMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DashboardGridSubElementResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(dashboard: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dashboard\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DashboardResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DashboardEntity, GridElementWithPosition, LearnroomMetadata } from '@shared/domain';\nimport { DashboardResponse, DashboardGridElementResponse, DashboardGridSubElementResponse } from '../controller/dto';\n\nexport class DashboardMapper {\n\tstatic mapToResponse(dashboard: DashboardEntity): DashboardResponse {\n\t\tconst dto = new DashboardResponse({\n\t\t\tid: dashboard.getId(),\n\t\t\tgridElements: dashboard\n\t\t\t\t.getGrid()\n\t\t\t\t.map((elementWithPosition) => DashboardMapper.mapGridElement(elementWithPosition)),\n\t\t});\n\t\treturn dto;\n\t}\n\n\tprivate static mapGridElement(data: GridElementWithPosition): DashboardGridElementResponse {\n\t\tconst elementData = data.gridElement.getContent();\n\t\tconst position = data.pos;\n\t\tconst dto = new DashboardGridElementResponse({\n\t\t\ttitle: elementData.title,\n\t\t\tshortTitle: elementData.shortTitle,\n\t\t\tdisplayColor: elementData.displayColor,\n\t\t\txPosition: position.x,\n\t\t\tyPosition: position.y,\n\t\t});\n\t\tif (elementData.referencedId) {\n\t\t\tdto.id = elementData.referencedId;\n\t\t}\n\t\tif (elementData.group && elementData.groupId) {\n\t\t\tdto.groupId = elementData.groupId;\n\t\t\tdto.groupElements = elementData.group.map((groupMetadata) => DashboardMapper.mapLearnroom(groupMetadata));\n\t\t}\n\t\treturn dto;\n\t}\n\n\tprivate static mapLearnroom(metadata: LearnroomMetadata): DashboardGridSubElementResponse {\n\t\treturn new DashboardGridSubElementResponse(metadata);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DashboardModelEntity.html":{"url":"entities/DashboardModelEntity.html","title":"entity - DashboardModelEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DashboardModelEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.model.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                gridElements\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        gridElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Collection\n\n                    \n                \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany('DashboardGridElementModel', 'dashboard')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.model.entity.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentifiedReference\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'userId', wrappedReference: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.model.entity.ts:77\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n\tEntity,\n\tProperty,\n\tManyToOne,\n\tOneToMany,\n\tManyToMany,\n\tCollection,\n\tIdentifiedReference,\n\twrap,\n} from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from '@shared/domain/entity/base.entity';\nimport { User } from './user.entity';\nimport { Course } from './course.entity';\n\nexport interface DashboardGridElementModelProperties {\n\tid?: string;\n\ttitle?: string;\n\txPos: number;\n\tyPos: number;\n\treferences: Course[];\n\tdashboard: DashboardModelEntity;\n}\n\n@Entity({ tableName: 'dashboardelement' })\nexport class DashboardGridElementModel extends BaseEntityWithTimestamps {\n\tconstructor({ id, title, xPos, yPos, references, dashboard }: DashboardGridElementModelProperties) {\n\t\tsuper();\n\t\tif (id) {\n\t\t\tthis._id = ObjectId.createFromHexString(id);\n\t\t\tthis.id = id;\n\t\t}\n\t\tthis.title = title;\n\t\tthis.xPos = xPos;\n\t\tthis.yPos = yPos;\n\t\tthis.references.set(references);\n\t\tthis.dashboard = wrap(dashboard).toReference();\n\t}\n\n\t@Property()\n\ttitle?: string;\n\n\t@Property()\n\txPos: number;\n\n\t@Property()\n\tyPos: number;\n\n\t@ManyToMany('Course', undefined, { fieldName: 'referenceIds' })\n\treferences = new Collection(this);\n\n\t@ManyToOne('DashboardModelEntity', { wrappedReference: true })\n\tdashboard: IdentifiedReference;\n}\n\nexport interface IDashboardModelProperties {\n\tid: string;\n\tuser: User;\n\tgridElements?: DashboardGridElementModel[];\n}\n\n@Entity({ tableName: 'dashboard' })\nexport class DashboardModelEntity extends BaseEntityWithTimestamps {\n\tconstructor(props: IDashboardModelProperties) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(props.id);\n\t\tthis.id = props.id;\n\t\tthis.user = wrap(props.user).toReference();\n\t\tif (props.gridElements) this.gridElements.set(props.gridElements);\n\t}\n\n\t@OneToMany('DashboardGridElementModel', 'dashboard')\n\tgridElements: Collection = new Collection(this);\n\n\t// userId\n\t@ManyToOne('User', { fieldName: 'userId', wrappedReference: true })\n\tuser: IdentifiedReference;\n\n\t// sizetype\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DashboardModelMapper.html":{"url":"injectables/DashboardModelMapper.html","title":"injectable - DashboardModelMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DashboardModelMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                createGridElement\n                            \n                            \n                                    Private\n                                    Async\n                                findExistingGridElement\n                            \n                            \n                                    Private\n                                    Async\n                                getOrConstructDashboardModelEntity\n                            \n                            \n                                    Async\n                                mapDashboardToEntity\n                            \n                            \n                                    Async\n                                mapDashboardToModel\n                            \n                            \n                                    Async\n                                mapElementToEntity\n                            \n                            \n                                    Async\n                                mapGridElementToModel\n                            \n                            \n                                    Async\n                                mapReferenceToEntity\n                            \n                            \n                                mapReferenceToModel\n                            \n                            \n                                    Private\n                                    Async\n                                updateExistingGridElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        createGridElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    createGridElement(elementWithPosition: GridElementWithPosition, dashboard: DashboardModelEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elementWithPosition\n                                    \n                                                GridElementWithPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dashboard\n                                    \n                                                DashboardModelEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findExistingGridElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    findExistingGridElement(elementWithPosition: GridElementWithPosition)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elementWithPosition\n                                    \n                                                GridElementWithPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getOrConstructDashboardModelEntity\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOrConstructDashboardModelEntity(entity: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        mapDashboardToEntity\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapDashboardToEntity(modelEntity: DashboardModelEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modelEntity\n                                    \n                                                DashboardModelEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        mapDashboardToModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapDashboardToModel(entity: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        mapElementToEntity\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapElementToEntity(modelEntity: DashboardGridElementModel)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modelEntity\n                                    \n                                                DashboardGridElementModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        mapGridElementToModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapGridElementToModel(elementWithPosition: GridElementWithPosition, dashboard: DashboardModelEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elementWithPosition\n                                    \n                                                GridElementWithPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dashboard\n                                    \n                                                DashboardModelEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        mapReferenceToEntity\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapReferenceToEntity(modelEntity: Course)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modelEntity\n                                    \n                                                Course\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapReferenceToModel\n                        \n                    \n                \n            \n            \n                \nmapReferenceToModel(reference: ILearnroom)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reference\n                                    \n                                                ILearnroom\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Course\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        updateExistingGridElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateExistingGridElement(elementModel: DashboardGridElementModel, elementWithPosition: GridElementWithPosition, dashboard: DashboardModelEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elementModel\n                                    \n                                                DashboardGridElementModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    elementWithPosition\n                                    \n                                                GridElementWithPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dashboard\n                                    \n                                                DashboardModelEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { wrap, EntityManager } from '@mikro-orm/core';\nimport { Injectable, InternalServerErrorException } from '@nestjs/common';\nimport {\n\tDashboardEntity,\n\tGridElement,\n\tGridElementWithPosition,\n\tILearnroom,\n\tLearnroomTypes,\n\tDashboardGridElementModel,\n\tDashboardModelEntity,\n\tCourse,\n\tUser,\n} from '@shared/domain';\n\n@Injectable()\nexport class DashboardModelMapper {\n\tconstructor(protected readonly em: EntityManager) {}\n\n\tasync mapReferenceToEntity(modelEntity: Course): Promise {\n\t\tconst domainEntity = await wrap(modelEntity).init();\n\t\treturn domainEntity;\n\t}\n\n\tasync mapElementToEntity(modelEntity: DashboardGridElementModel): Promise {\n\t\tconst referenceModels = await modelEntity.references.loadItems();\n\t\tconst references = await Promise.all(referenceModels.map((ref) => this.mapReferenceToEntity(ref)));\n\t\tconst result = {\n\t\t\tpos: { x: modelEntity.xPos, y: modelEntity.yPos },\n\t\t\tgridElement: GridElement.FromPersistedGroup(modelEntity.id, modelEntity.title, references),\n\t\t};\n\t\treturn result;\n\t}\n\n\tasync mapDashboardToEntity(modelEntity: DashboardModelEntity): Promise {\n\t\tif (!modelEntity.gridElements.isInitialized()) {\n\t\t\tawait modelEntity.gridElements.init();\n\t\t}\n\t\tconst grid = await Promise.all(\n\t\t\tArray.from(modelEntity.gridElements).map(async (e) => {\n\t\t\t\treturn this.mapElementToEntity(e);\n\t\t\t})\n\t\t);\n\t\treturn new DashboardEntity(modelEntity.id, { grid, userId: modelEntity.user.id });\n\t}\n\n\tmapReferenceToModel(reference: ILearnroom): Course {\n\t\tconst metadata = reference.getMetadata();\n\t\tif (metadata.type === LearnroomTypes.Course) {\n\t\t\tconst course = reference as Course;\n\t\t\treturn course;\n\t\t}\n\t\tthrow new InternalServerErrorException('unknown learnroom type');\n\t}\n\n\tasync mapGridElementToModel(\n\t\telementWithPosition: GridElementWithPosition,\n\t\tdashboard: DashboardModelEntity\n\t): Promise {\n\t\tconst existing = await this.findExistingGridElement(elementWithPosition);\n\t\tif (existing) {\n\t\t\tconst updatedModel = this.updateExistingGridElement(existing, elementWithPosition, dashboard);\n\t\t\treturn updatedModel;\n\t\t}\n\t\tconst createdModel = await this.createGridElement(elementWithPosition, dashboard);\n\t\treturn createdModel;\n\t}\n\n\tprivate async findExistingGridElement(\n\t\telementWithPosition: GridElementWithPosition\n\t): Promise {\n\t\tconst { gridElement } = elementWithPosition;\n\t\tif (gridElement.hasId()) {\n\t\t\tconst existing = await this.em.findOne(DashboardGridElementModel, gridElement.getId() as string);\n\t\t\tif (existing) return existing;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate async updateExistingGridElement(\n\t\telementModel: DashboardGridElementModel,\n\t\telementWithPosition: GridElementWithPosition,\n\t\tdashboard: DashboardModelEntity\n\t): Promise {\n\t\telementModel.xPos = elementWithPosition.pos.x;\n\t\telementModel.yPos = elementWithPosition.pos.y;\n\t\tconst { gridElement } = elementWithPosition;\n\n\t\tif (gridElement.isGroup()) {\n\t\t\telementModel.title = gridElement.getContent().title;\n\t\t}\n\n\t\tconst references = await Promise.all(gridElement.getReferences().map((ref) => this.mapReferenceToModel(ref)));\n\t\telementModel.references.set(references);\n\n\t\telementModel.dashboard = wrap(dashboard).toReference();\n\t\treturn elementModel;\n\t}\n\n\tprivate async createGridElement(\n\t\telementWithPosition: GridElementWithPosition,\n\t\tdashboard: DashboardModelEntity\n\t): Promise {\n\t\tconst { gridElement } = elementWithPosition;\n\t\tconst references = await Promise.all(gridElement.getReferences().map((ref) => this.mapReferenceToModel(ref)));\n\t\tconst elementModel = new DashboardGridElementModel({\n\t\t\tid: gridElement.getId(),\n\t\t\txPos: elementWithPosition.pos.x,\n\t\t\tyPos: elementWithPosition.pos.y,\n\t\t\treferences,\n\t\t\tdashboard,\n\t\t});\n\n\t\treturn elementModel;\n\t}\n\n\tasync mapDashboardToModel(entity: DashboardEntity): Promise {\n\t\tconst modelEntity = await this.getOrConstructDashboardModelEntity(entity);\n\t\tconst mappedElements = await Promise.all(\n\t\t\tentity.getGrid().map((elementWithPosition) => this.mapGridElementToModel(elementWithPosition, modelEntity))\n\t\t);\n\n\t\tArray.from(modelEntity.gridElements).forEach((el) => {\n\t\t\tif (!mappedElements.includes(el)) {\n\t\t\t\tmodelEntity.gridElements.remove(el);\n\t\t\t\tthis.em.remove(el);\n\t\t\t}\n\t\t});\n\n\t\treturn modelEntity;\n\t}\n\n\tprivate async getOrConstructDashboardModelEntity(entity: DashboardEntity): Promise {\n\t\tconst existing = await this.em.findOne(DashboardModelEntity, entity.getId());\n\t\tif (existing) {\n\t\t\treturn existing;\n\t\t}\n\t\tconst user = await this.em.findOneOrFail(User, entity.getUserId());\n\t\treturn new DashboardModelEntity({ id: entity.getId(), user, gridElements: [] });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DashboardRepo.html":{"url":"injectables/DashboardRepo.html","title":"injectable - DashboardRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DashboardRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/dashboard/dashboard.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getDashboardById\n                            \n                            \n                                    Async\n                                getUsersDashboard\n                            \n                            \n                                    Async\n                                persist\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager, mapper: DashboardModelMapper)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/dashboard/dashboard.repo.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapper\n                                                  \n                                                        \n                                                                        DashboardModelMapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getDashboardById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDashboardById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.repo.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUsersDashboard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsersDashboard(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.repo.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persist\n                        \n                    \n                \n            \n            \n                \n                    \n                    persist(entity: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.repo.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.repo.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, DashboardEntity, GridElementWithPosition, DashboardModelEntity } from '@shared/domain';\nimport { EntityManager, ObjectId } from '@mikro-orm/mongodb';\nimport { DashboardModelMapper } from './dashboard.model.mapper';\n\nconst generateEmptyDashboard = (userId: EntityId) => {\n\tconst gridArray: GridElementWithPosition[] = [];\n\n\tconst dashboard = new DashboardEntity(new ObjectId().toString(), { grid: gridArray, userId });\n\treturn dashboard;\n};\n\nexport interface IDashboardRepo {\n\tgetUsersDashboard(userId: EntityId): Promise;\n\tgetDashboardById(id: EntityId): Promise;\n\tpersistAndFlush(entity: DashboardEntity): Promise;\n}\n\n@Injectable()\nexport class DashboardRepo implements IDashboardRepo {\n\tconstructor(protected readonly em: EntityManager, protected readonly mapper: DashboardModelMapper) {}\n\n\t// ToDo: refactor this to be in an abstract class (see baseRepo)\n\tasync persist(entity: DashboardEntity): Promise {\n\t\tconst modelEntity = await this.mapper.mapDashboardToModel(entity);\n\t\tthis.em.persist(modelEntity);\n\t\treturn this.mapper.mapDashboardToEntity(modelEntity);\n\t}\n\n\tasync persistAndFlush(entity: DashboardEntity): Promise {\n\t\tconst modelEntity = await this.mapper.mapDashboardToModel(entity);\n\t\tawait this.em.persistAndFlush(modelEntity);\n\t\treturn this.mapper.mapDashboardToEntity(modelEntity);\n\t}\n\n\tasync getDashboardById(id: EntityId): Promise {\n\t\tconst dashboardModel = await this.em.findOneOrFail(DashboardModelEntity, id);\n\t\tconst dashboard = await this.mapper.mapDashboardToEntity(dashboardModel);\n\t\treturn dashboard;\n\t}\n\n\tasync getUsersDashboard(userId: EntityId): Promise {\n\t\tconst dashboardModel = await this.em.findOne(DashboardModelEntity, { user: userId });\n\t\tif (dashboardModel) {\n\t\t\treturn this.mapper.mapDashboardToEntity(dashboardModel);\n\t\t}\n\n\t\tconst dashboard = generateEmptyDashboard(userId);\n\t\tawait this.persistAndFlush(dashboard);\n\n\t\treturn dashboard;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardResponse.html":{"url":"classes/DashboardResponse.html","title":"class - DashboardResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                gridElements\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: DashboardResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:98\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        DashboardResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        gridElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DashboardGridElementResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, description: 'List of all elements visible on the dashboard'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:114\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the Dashboard entity', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:108\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class DashboardGridSubElementResponse {\n\tconstructor({ id, title, shortTitle, displayColor }: DashboardGridSubElementResponse) {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.shortTitle = shortTitle;\n\t\tthis.displayColor = displayColor;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n}\n\nexport class DashboardGridElementResponse {\n\tconstructor({\n\t\tid,\n\t\ttitle,\n\t\tshortTitle,\n\t\tdisplayColor,\n\t\txPosition,\n\t\tyPosition,\n\t\tgroupId,\n\t\tgroupElements,\n\t}: DashboardGridElementResponse) {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.shortTitle = shortTitle;\n\t\tthis.displayColor = displayColor;\n\t\tthis.xPosition = xPosition;\n\t\tthis.yPosition = yPosition;\n\t\tthis.groupId = groupId;\n\t\tthis.groupElements = groupElements;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid?: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle?: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\tdescription: 'X position of the Grid element',\n\t})\n\txPosition: number;\n\n\t@ApiProperty({\n\t\tdescription: 'Y position of the Grid element',\n\t})\n\tyPosition: number;\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the group element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tgroupId?: string;\n\n\t@ApiProperty({\n\t\ttype: [DashboardGridSubElementResponse],\n\t\tdescription: 'List of all subelements in the group',\n\t})\n\tgroupElements?: DashboardGridSubElementResponse[];\n}\n\nexport class DashboardResponse {\n\tconstructor({ id, gridElements }: DashboardResponse) {\n\t\tthis.id = id;\n\t\tthis.gridElements = gridElements;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the Dashboard entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\ttype: [DashboardGridElementResponse],\n\t\tdescription: 'List of all elements visible on the dashboard',\n\t})\n\tgridElements: DashboardGridElementResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DashboardUc.html":{"url":"injectables/DashboardUc.html","title":"injectable - DashboardUc","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DashboardUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/uc/dashboard.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUsersDashboard\n                            \n                            \n                                    Async\n                                moveElementOnDashboard\n                            \n                            \n                                    Async\n                                renameGroupOnDashboard\n                            \n                            \n                                    Private\n                                validateUsersMatch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dashboardRepo: IDashboardRepo, courseRepo: CourseRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/uc/dashboard.uc.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dashboardRepo\n                                                  \n                                                        \n                                                                        IDashboardRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        courseRepo\n                                                  \n                                                        \n                                                                        CourseRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUsersDashboard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsersDashboard(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/dashboard.uc.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        moveElementOnDashboard\n                        \n                    \n                \n            \n            \n                \n                    \n                    moveElementOnDashboard(dashboardId: EntityId, from: GridPositionWithGroupIndex, to: GridPositionWithGroupIndex, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/dashboard.uc.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dashboardId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    from\n                                    \n                                                GridPositionWithGroupIndex\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                                GridPositionWithGroupIndex\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        renameGroupOnDashboard\n                        \n                    \n                \n            \n            \n                \n                    \n                    renameGroupOnDashboard(dashboardId: EntityId, position: GridPosition, params: string, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/dashboard.uc.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dashboardId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                                GridPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        validateUsersMatch\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUsersMatch(dashboard: DashboardEntity, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/dashboard.uc.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dashboard\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, NotFoundException } from '@nestjs/common';\nimport { DashboardEntity, EntityId, GridPositionWithGroupIndex, GridPosition, SortOrder } from '@shared/domain';\nimport { IDashboardRepo, CourseRepo } from '@shared/repo';\n// import { NotFound } from '@feathersjs/errors'; // wrong import? see NotFoundException\n\n@Injectable()\nexport class DashboardUc {\n\tconstructor(\n\t\t@Inject('DASHBOARD_REPO') private readonly dashboardRepo: IDashboardRepo,\n\t\tprivate readonly courseRepo: CourseRepo\n\t) {}\n\n\tasync getUsersDashboard(userId: EntityId): Promise {\n\t\tconst dashboard = await this.dashboardRepo.getUsersDashboard(userId);\n\t\tconst [courses] = await this.courseRepo.findAllByUserId(\n\t\t\tuserId,\n\t\t\t{ onlyActiveCourses: true },\n\t\t\t{ order: { name: SortOrder.asc } }\n\t\t);\n\t\tdashboard.setLearnRooms(courses);\n\t\tawait this.dashboardRepo.persistAndFlush(dashboard);\n\t\treturn dashboard;\n\t}\n\n\tasync moveElementOnDashboard(\n\t\tdashboardId: EntityId,\n\t\tfrom: GridPositionWithGroupIndex,\n\t\tto: GridPositionWithGroupIndex,\n\t\tuserId: EntityId\n\t): Promise {\n\t\tconst dashboard = await this.dashboardRepo.getDashboardById(dashboardId);\n\t\tthis.validateUsersMatch(dashboard, userId);\n\n\t\tdashboard.moveElement(from, to);\n\n\t\tawait this.dashboardRepo.persistAndFlush(dashboard);\n\t\treturn dashboard;\n\t}\n\n\tasync renameGroupOnDashboard(\n\t\tdashboardId: EntityId,\n\t\tposition: GridPosition,\n\t\tparams: string,\n\t\tuserId: EntityId\n\t): Promise {\n\t\tconst dashboard = await this.dashboardRepo.getDashboardById(dashboardId);\n\t\tthis.validateUsersMatch(dashboard, userId);\n\n\t\tconst gridElement = dashboard.getElement(position);\n\t\tgridElement.setGroupName(params);\n\n\t\tawait this.dashboardRepo.persistAndFlush(dashboard);\n\t\treturn dashboard;\n\t}\n\n\tprivate validateUsersMatch(dashboard: DashboardEntity, userId: EntityId) {\n\t\tif (dashboard.getUserId() !== userId) {\n\t\t\tthrow new NotFoundException('no such dashboard found');\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatabaseManagementConsole.html":{"url":"classes/DatabaseManagementConsole.html","title":"class - DatabaseManagementConsole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatabaseManagementConsole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/console/database-management.console.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                exportCollections\n                            \n                            \n                                    Async\n                                seedCollections\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(consoleWriter: ConsoleWriterService, databaseManagementUc: DatabaseManagementUc)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/management/console/database-management.console.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        consoleWriter\n                                                  \n                                                        \n                                                                        ConsoleWriterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        databaseManagementUc\n                                                  \n                                                        \n                                                                        DatabaseManagementUc\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        exportCollections\n                        \n                    \n                \n            \n            \n                \n                    \n                    exportCollections(options: Options)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'export', options: undefined, description: 'export database collections to filesystem'})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/console/database-management.console.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                Options\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        seedCollections\n                        \n                    \n                \n            \n            \n                \n                    \n                    seedCollections(options: Options)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'seed', options: undefined, description: 'reset database collections with seed data from filesystem'})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/console/database-management.console.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                Options\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Command, Console } from 'nestjs-console';\nimport { ConsoleWriterService } from '@shared/infra/console/console-writer/console-writer.service';\nimport { DatabaseManagementUc } from '../uc/database-management.uc';\n\ninterface Options {\n\tcollection?: string;\n\toverride?: boolean;\n}\n\n@Console({ command: 'database', description: 'database setup console' })\nexport class DatabaseManagementConsole {\n\tconstructor(private consoleWriter: ConsoleWriterService, private databaseManagementUc: DatabaseManagementUc) {}\n\n\t@Command({\n\t\tcommand: 'seed',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tflags: '-c, --collection ',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'filter for a single ',\n\t\t\t},\n\t\t],\n\t\tdescription: 'reset database collections with seed data from filesystem',\n\t})\n\tasync seedCollections(options: Options): Promise {\n\t\tconst filter = options?.collection ? [options.collection] : undefined;\n\t\tconst collections = await this.databaseManagementUc.seedDatabaseCollectionsFromFileSystem(filter);\n\t\tconst report = JSON.stringify(collections);\n\t\tthis.consoleWriter.info(report);\n\t\treturn collections;\n\t}\n\n\t@Command({\n\t\tcommand: 'export',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tflags: '-c, --collection ',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'filter for a single ',\n\t\t\t},\n\t\t\t{\n\t\t\t\tflags: '-o, --override',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'optional export collections to setup folder and override existing files',\n\t\t\t},\n\t\t],\n\t\tdescription: 'export database collections to filesystem',\n\t})\n\tasync exportCollections(options: Options): Promise {\n\t\tconst filter = options?.collection ? [options.collection] : undefined;\n\t\tconst toSeedFolder = options?.override ? true : undefined;\n\t\tconst collections = await this.databaseManagementUc.exportCollectionsToFileSystem(filter, toSeedFolder);\n\t\tconst report = JSON.stringify(collections);\n\t\tthis.consoleWriter.info(report);\n\t\treturn collections;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DatabaseManagementController.html":{"url":"controllers/DatabaseManagementController.html","title":"controller - DatabaseManagementController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DatabaseManagementController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/controller/database-management.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                management/database\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                exportCollection\n                            \n                            \n                                    Async\n                                exportCollections\n                            \n                            \n                                    Async\n                                importCollection\n                            \n                            \n                                    Async\n                                importCollections\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        exportCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    exportCollection(collectionName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('export/:collectionName')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/controller/database-management.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        exportCollections\n                        \n                    \n                \n            \n            \n                \n                    \n                    exportCollections()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('export')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/controller/database-management.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        importCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    importCollection(collectionName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('seed/:collectionName')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/controller/database-management.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        importCollections\n                        \n                    \n                \n            \n            \n                \n                    \n                    importCollections()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @All('seed')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/controller/database-management.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Param, Post, All } from '@nestjs/common';\nimport { DatabaseManagementUc } from '../uc/database-management.uc';\n\n@Controller('management/database')\nexport class DatabaseManagementController {\n\tconstructor(private databaseManagementUc: DatabaseManagementUc) {}\n\n\t@All('seed')\n\tasync importCollections(): Promise {\n\t\treturn this.databaseManagementUc.seedDatabaseCollectionsFromFileSystem();\n\t}\n\n\t@Post('seed/:collectionName')\n\tasync importCollection(@Param('collectionName') collectionName: string): Promise {\n\t\treturn this.databaseManagementUc.seedDatabaseCollectionsFromFileSystem([collectionName]);\n\t}\n\n\t@Post('export')\n\tasync exportCollections(): Promise {\n\t\treturn this.databaseManagementUc.exportCollectionsToFileSystem();\n\t}\n\n\t@Post('export/:collectionName')\n\tasync exportCollection(@Param('collectionName') collectionName: string): Promise {\n\t\treturn this.databaseManagementUc.exportCollectionsToFileSystem([collectionName]);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseManagementModule.html":{"url":"modules/DatabaseManagementModule.html","title":"module - DatabaseManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DatabaseManagementModule\n\n\n\ncluster_DatabaseManagementModule_exports\n\n\n\ncluster_DatabaseManagementModule_imports\n\n\n\n\nDatabaseManagementService\n\nDatabaseManagementService\n\n\n\nDatabaseManagementModule\n\nDatabaseManagementModule\n\nDatabaseManagementModule -->\n\nDatabaseManagementService->DatabaseManagementModule\n\n\n\n\n\nDatabaseManagementService \n\nDatabaseManagementService \n\nDatabaseManagementService  -->\n\nDatabaseManagementModule->DatabaseManagementService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/shared/infra/database/management/database-management.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            DatabaseManagementService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DatabaseManagementService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DatabaseManagementService } from './database-management.service';\n\n@Module({\n\timports: [DatabaseManagementService],\n\texports: [DatabaseManagementService],\n})\nexport class DatabaseManagementModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseManagementService.html":{"url":"injectables/DatabaseManagementService.html","title":"injectable - DatabaseManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/database/management/database-management.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearCollection\n                            \n                            \n                                    Async\n                                collectionExists\n                            \n                            \n                                    Async\n                                createCollection\n                            \n                            \n                                    Async\n                                dropCollection\n                            \n                            \n                                    Async\n                                findDocumentsOfCollection\n                            \n                            \n                                    Async\n                                getCollectionNames\n                            \n                            \n                                    Private\n                                getDatabaseCollection\n                            \n                            \n                                    Async\n                                importCollection\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    db\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        clearCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearCollection(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        collectionExists\n                        \n                    \n                \n            \n            \n                \n                    \n                    collectionExists(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    createCollection(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        dropCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    dropCollection(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findDocumentsOfCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    findDocumentsOfCollection(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCollectionNames\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCollectionNames()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getDatabaseCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDatabaseCollection(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Collection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        importCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    importCollection(collectionName: string, jsonDocuments: [])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    jsonDocuments\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        db\n                    \n                \n\n                \n                    \n                        getdb()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { Collection, Db } from 'mongodb';\n\n@Injectable()\nexport class DatabaseManagementService {\n\tconstructor(private em: EntityManager) {}\n\n\tprivate get db(): Db {\n\t\treturn this.em.getConnection('write').getDb();\n\t}\n\n\tprivate getDatabaseCollection(collectionName: string): Collection {\n\t\tconst collection = this.db.collection(collectionName);\n\t\treturn collection;\n\t}\n\n\tasync importCollection(collectionName: string, jsonDocuments: unknown[]): Promise {\n\t\tconst collection = this.getDatabaseCollection(collectionName);\n\t\tif (jsonDocuments.length === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tconst { insertedCount } = await collection.insertMany(jsonDocuments, {\n\t\t\tforceServerObjectId: true,\n\t\t\tbypassDocumentValidation: true,\n\t\t});\n\t\treturn insertedCount;\n\t}\n\n\tasync findDocumentsOfCollection(collectionName: string): Promise {\n\t\tconst collection = this.getDatabaseCollection(collectionName);\n\t\tconst documents = (await collection.find({}).toArray()) as unknown[];\n\t\treturn documents;\n\t}\n\n\tasync clearCollection(collectionName: string): Promise {\n\t\tconst collection = this.getDatabaseCollection(collectionName);\n\t\tconst { deletedCount } = await collection.deleteMany({});\n\t\treturn deletedCount || 0;\n\t}\n\n\tasync getCollectionNames(): Promise {\n\t\tconst collections = (await this.db.listCollections(undefined, { nameOnly: true }).toArray()) as unknown[] as {\n\t\t\tname: string;\n\t\t}[];\n\t\tconst collectionNames = collections.map((collection) => collection.name);\n\t\treturn collectionNames;\n\t}\n\n\tasync collectionExists(collectionName: string): Promise {\n\t\tconst collections = await this.getCollectionNames();\n\t\tconst result = collections.includes(collectionName);\n\t\treturn result;\n\t}\n\n\tasync createCollection(collectionName: string): Promise {\n\t\tawait this.db.createCollection(collectionName);\n\t}\n\n\tasync dropCollection(collectionName: string): Promise {\n\t\tawait this.db.dropCollection(collectionName);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseManagementUc.html":{"url":"injectables/DatabaseManagementUc.html","title":"injectable - DatabaseManagementUc","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseManagementUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/uc/database-management.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                basePath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                exportCollectionsToFileSystem\n                            \n                            \n                                    Private\n                                getSeedFolder\n                            \n                            \n                                    Private\n                                getTargetFolder\n                            \n                            \n                                    Private\n                                    Async\n                                loadAllCollectionsFromDatabase\n                            \n                            \n                                    Private\n                                    Async\n                                loadAllCollectionsFromFilesystem\n                            \n                            \n                                    Private\n                                    Async\n                                loadCollectionsAvailableFromSourceAndFilterByCollectionNames\n                            \n                            \n                                    Async\n                                seedDatabaseCollectionsFromFileSystem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    baseDir\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fileSystemAdapter: FileSystemAdapter, databaseManagementService: DatabaseManagementService, bsonConverter: BsonConverter)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/management/uc/database-management.uc.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileSystemAdapter\n                                                  \n                                                        \n                                                                        FileSystemAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        databaseManagementService\n                                                  \n                                                        \n                                                                        DatabaseManagementService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bsonConverter\n                                                  \n                                                        \n                                                                        BsonConverter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        exportCollectionsToFileSystem\n                        \n                    \n                \n            \n            \n                \n                    \n                    exportCollectionsToFileSystem(collections?: string[], toSeedFolder?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:183\n                \n            \n\n\n            \n                \n                    Exports all or defined  from database as bson to filesystem.\nThe behaviour should match $ mongoexport\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    collections\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        optional filter applied on existing collections\n\n                                    \n                                \n                                \n                                    toSeedFolder\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        optional override existing seed data files\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        the list of collection names exported\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getSeedFolder\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSeedFolder()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:38\n                \n            \n\n\n            \n                \n                    setup dir with json files\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getTargetFolder\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTargetFolder(toSeedFolder?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:46\n                \n            \n\n\n            \n                \n                    export folder name based on current date\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    toSeedFolder\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        loadAllCollectionsFromDatabase\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadAllCollectionsFromDatabase(targetFolder: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:63\n                \n            \n\n\n            \n                \n                    Loads all collection names from database and adds related file paths.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetFolder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        loadAllCollectionsFromFilesystem\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadAllCollectionsFromFilesystem(baseDir: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:76\n                \n            \n\n\n            \n                \n                    Loads all collection names and file paths from backup files.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    baseDir\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        loadCollectionsAvailableFromSourceAndFilterByCollectionNames\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadCollectionsAvailableFromSourceAndFilterByCollectionNames(source: \"files\" | \"database\", folder: string, collectionNameFilter?: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:91\n                \n            \n\n\n            \n                \n                    Scans  for existing collections and optionally filters them based on \n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                            \"files\" | \"database\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    folder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    collectionNameFilter\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        the filtered collection names and related file paths\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        seedDatabaseCollectionsFromFileSystem\n                        \n                    \n                \n            \n            \n                \n                    \n                    seedDatabaseCollectionsFromFileSystem(collections?: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:134\n                \n            \n\n\n            \n                \n                    Imports all or filtered  from filesystem as bson to database.\nThe behaviour should match $ mongoimport\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    collections\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        optional filter applied on existing collections\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        the list of collection names exported\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        basePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '../../../../../../backup'\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/management/uc/database-management.uc.ts:19\n                        \n                    \n\n            \n                \n                    relative path to seed data folder based of location of this file.\n\n                \n            \n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        baseDir\n                    \n                \n\n                \n                    \n                        getbaseDir()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:30\n                                \n                            \n                    \n                        \n                                absolute path reference for seed data base folder.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { orderBy } from 'lodash';\nimport { FileSystemAdapter } from '@shared/infra/file-system';\nimport { DatabaseManagementService } from '@shared/infra/database';\nimport { BsonConverter } from '../converter/bson.converter';\n\nexport interface ICollectionFilePath {\n\tfilePath: string;\n\tcollectionName: string;\n}\n\n@Injectable()\nexport class DatabaseManagementUc {\n\t/**\n\t * relative path to seed data folder based of location of this file.\n\t */\n\tprivate basePath = '../../../../../../backup';\n\n\tconstructor(\n\t\tprivate fileSystemAdapter: FileSystemAdapter,\n\t\tprivate databaseManagementService: DatabaseManagementService,\n\t\tprivate bsonConverter: BsonConverter\n\t) {}\n\n\t/**\n\t * absolute path reference for seed data base folder.\n\t */\n\tprivate get baseDir(): string {\n\t\tconst folderPath = this.fileSystemAdapter.joinPath(__dirname, this.basePath);\n\t\treturn folderPath;\n\t}\n\n\t/**\n\t * setup dir with json files\n\t */\n\tprivate getSeedFolder() {\n\t\treturn this.fileSystemAdapter.joinPath(this.baseDir, 'setup');\n\t}\n\n\t/**\n\t * export folder name based on current date\n\t * @returns\n\t */\n\tprivate getTargetFolder(toSeedFolder?: boolean) {\n\t\tif (toSeedFolder === true) {\n\t\t\tconst targetFolder = this.getSeedFolder();\n\t\t\treturn targetFolder;\n\t\t}\n\t\tconst now = new Date();\n\t\tconst currentDateTime = `${now.getFullYear()}_${\n\t\t\tnow.getMonth() + 1\n\t\t}_${now.getDate()}_${now.getHours()}_${now.getMinutes()}_${now.getSeconds()}`;\n\t\tconst targetFolder = this.fileSystemAdapter.joinPath(this.baseDir, currentDateTime);\n\t\treturn targetFolder;\n\t}\n\n\t/**\n\t * Loads all collection names from database and adds related file paths.\n\t * @returns {ICollectionFilePath}\n\t */\n\tprivate async loadAllCollectionsFromDatabase(targetFolder: string): Promise {\n\t\tconst collections = await this.databaseManagementService.getCollectionNames();\n\t\tconst collectionsWithFilePaths = collections.map((collectionName) => ({\n\t\t\tfilePath: this.fileSystemAdapter.joinPath(targetFolder, `${collectionName}.json`),\n\t\t\tcollectionName,\n\t\t}));\n\t\treturn collectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Loads all collection names and file paths from backup files.\n\t * @returns {ICollectionFilePath}\n\t */\n\tprivate async loadAllCollectionsFromFilesystem(baseDir: string): Promise {\n\t\tconst filenames = await this.fileSystemAdapter.readDir(baseDir);\n\t\tconst collectionsWithFilePaths = filenames.map((fileName) => ({\n\t\t\tfilePath: this.fileSystemAdapter.joinPath(baseDir, fileName),\n\t\t\tcollectionName: fileName.split('.')[0],\n\t\t}));\n\t\treturn collectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Scans  for existing collections and optionally filters them based on \n\t * @param source\n\t * @param collectionNameFilter\n\t * @returns {ICollectionFilePath} the filtered collection names and related file paths\n\t */\n\tprivate async loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\tsource: 'files' | 'database',\n\t\tfolder: string,\n\t\tcollectionNameFilter?: string[]\n\t) {\n\t\tlet allCollectionsWithFilePaths: ICollectionFilePath[] = [];\n\n\t\t// load all available collections from source\n\t\tif (source === 'files') {\n\t\t\tallCollectionsWithFilePaths = await this.loadAllCollectionsFromFilesystem(folder);\n\t\t} else {\n\t\t\t// source === 'database'\n\t\t\tallCollectionsWithFilePaths = await this.loadAllCollectionsFromDatabase(folder);\n\t\t}\n\n\t\t// when a collection name filter is given, apply it and check\n\t\tif (Array.isArray(collectionNameFilter) && collectionNameFilter.length > 0) {\n\t\t\tconst filteredCollectionsWithFilePaths = allCollectionsWithFilePaths.filter(({ collectionName }) =>\n\t\t\t\tcollectionNameFilter?.includes(collectionName)\n\t\t\t);\n\n\t\t\tif (filteredCollectionsWithFilePaths.length !== collectionNameFilter.length) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`At least one collectionName of ${JSON.stringify(\n\t\t\t\t\t\tcollectionNameFilter\n\t\t\t\t\t)} is invalid. Collection names available in '${source}' are: ${JSON.stringify(\n\t\t\t\t\t\tallCollectionsWithFilePaths.map((file) => file.collectionName)\n\t\t\t\t\t)}`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn filteredCollectionsWithFilePaths;\n\t\t}\n\n\t\treturn allCollectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Imports all or filtered  from filesystem as bson to database.\n\t * The behaviour should match $ mongoimport\n\t * @param collections optional filter applied on existing collections\n\t * @returns the list of collection names exported\n\t */\n\tasync seedDatabaseCollectionsFromFileSystem(collections?: string[]): Promise {\n\t\t// detect collections to seed based on filesystem data\n\t\tconst setupPath = this.getSeedFolder();\n\t\tconst collectionsToSeed = await this.loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\t\t'files',\n\t\t\tsetupPath,\n\t\t\tcollections\n\t\t);\n\n\t\tconst seededCollectionsWithAmount: string[] = [];\n\n\t\tawait Promise.all(\n\t\t\tcollectionsToSeed.map(async ({ filePath, collectionName }) => {\n\t\t\t\t// load text from backup file\n\t\t\t\tconst text = await this.fileSystemAdapter.readFile(filePath);\n\t\t\t\t// create bson-objects from text\n\t\t\t\tconst bsonDocuments = JSON.parse(text) as unknown[];\n\t\t\t\t// deserialize bson (format of mongoexport) to json documents we can import to mongo\n\t\t\t\tconst jsonDocuments = this.bsonConverter.deserialize(bsonDocuments);\n\n\t\t\t\t// hint: collection drop/create is very slow, delete all documents instead\n\t\t\t\tconst collectionExists = await this.databaseManagementService.collectionExists(collectionName);\n\t\t\t\tif (collectionExists) {\n\t\t\t\t\t// clear existing documents, if collection exists\n\t\t\t\t\tawait this.databaseManagementService.clearCollection(collectionName);\n\t\t\t\t} else {\n\t\t\t\t\t// create collection\n\t\t\t\t\tawait this.databaseManagementService.createCollection(collectionName);\n\t\t\t\t}\n\n\t\t\t\t// import backuop data into database collection\n\t\t\t\tconst importedDocumentsAmount = await this.databaseManagementService.importCollection(\n\t\t\t\t\tcollectionName,\n\t\t\t\t\tjsonDocuments\n\t\t\t\t);\n\t\t\t\t// keep collection name and number of imported documents\n\t\t\t\tseededCollectionsWithAmount.push(`${collectionName}:${importedDocumentsAmount}`);\n\t\t\t})\n\t\t);\n\t\treturn seededCollectionsWithAmount;\n\t}\n\n\t/**\n\t * Exports all or defined  from database as bson to filesystem.\n\t * The behaviour should match $ mongoexport\n\t * @param collections optional filter applied on existing collections\n\t * @param toSeedFolder optional override existing seed data files\n\t * @returns the list of collection names exported\n\t */\n\tasync exportCollectionsToFileSystem(collections?: string[], toSeedFolder?: boolean): Promise {\n\t\tconst targetFolder = this.getTargetFolder(toSeedFolder);\n\t\tawait this.fileSystemAdapter.createDir(targetFolder);\n\t\t// detect collections to export based on database collections\n\t\tconst collectionsToExport = await this.loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\t\t'database',\n\t\t\ttargetFolder,\n\t\t\tcollections\n\t\t);\n\t\tconst exportedCollections: string[] = [];\n\n\t\tawait Promise.all(\n\t\t\tcollectionsToExport.map(async ({ filePath, collectionName }) => {\n\t\t\t\t// load json documents from collection\n\t\t\t\tconst jsonDocuments = await this.databaseManagementService.findDocumentsOfCollection(collectionName);\n\t\t\t\t// serialize to bson (format of mongoexport)\n\t\t\t\tconst bsonDocuments = this.bsonConverter.serialize(jsonDocuments);\n\t\t\t\t// sort results to have 'new' data added at documents end\n\t\t\t\tconst sortedBsonDocuments = orderBy(bsonDocuments, ['_id.$oid', 'createdAt.$date'], ['asc', 'asc']);\n\t\t\t\t// convert to text\n\t\t\t\tconst TAB = '\t';\n\t\t\t\tconst text = JSON.stringify(sortedBsonDocuments, undefined, TAB);\n\t\t\t\t// persist to filesystem\n\t\t\t\tawait this.fileSystemAdapter.writeFile(filePath, text + this.fileSystemAdapter.EOL);\n\t\t\t\t// keep collection name and number of exported documents\n\t\t\t\texportedCollections.push(`${collectionName}:${sortedBsonDocuments.length}`);\n\t\t\t})\n\t\t);\n\t\treturn exportedCollections;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DelayController.html":{"url":"controllers/DelayController.html","title":"controller - DelayController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DelayController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/test/create-test.module.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/test/create-test.module.ts:12\n                \n            \n\n\n            \n                \n                    default route to test public access\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, NestInterceptor } from '@nestjs/common';\n\nimport { Test, TestingModule } from '@nestjs/testing';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\n\nconst delay = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms));\n\n@Controller()\nclass DelayController {\n\t/** default route to test public access */\n\t@Get()\n\tasync getHello(): Promise {\n\t\tawait delay(100);\n\t\treturn 'Schulcloud Server API';\n\t}\n}\n\nexport const createTestModule = (interceptor: NestInterceptor): Promise => {\n\treturn Test.createTestingModule({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\t\tuseValue: interceptor,\n\t\t\t},\n\t\t],\n\t\tcontrollers: [DelayController],\n\t}).compile();\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteFilesConsole.html":{"url":"classes/DeleteFilesConsole.html","title":"class - DeleteFilesConsole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteFilesConsole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/files/job/delete-files.console.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                removeDeletedFilesData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(deleteFilesUc: DeleteFilesUc)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/files/job/delete-files.console.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deleteFilesUc\n                                                  \n                                                        \n                                                                        DeleteFilesUc\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/files/job/delete-files.console.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeDeletedFilesData\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeDeletedFilesData(removedSinceDays: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'cleanup-job ', description: 'cleanup job to remove files that were marked for deletion  days ago'})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/files/job/delete-files.console.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    removedSinceDays\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Console, Command } from 'nestjs-console';\nimport { Logger } from '@src/core/logger';\nimport { DeleteFilesUc } from '../uc';\n\n@Console({ command: 'files', description: 'file deletion console' })\nexport class DeleteFilesConsole {\n\tprivate logger: Logger;\n\n\tconstructor(private deleteFilesUc: DeleteFilesUc) {\n\t\tthis.logger = new Logger(DeleteFilesConsole.name);\n\t}\n\n\t@Command({\n\t\tcommand: 'cleanup-job ',\n\t\tdescription: 'cleanup job to remove files that were marked for deletion  days ago',\n\t})\n\tasync removeDeletedFilesData(removedSinceDays: number): Promise {\n\t\tthis.logger.log(`cleanup job will remove files that were marked for deletion ${removedSinceDays} days ago`);\n\t\tconst removedSince = new Date();\n\t\tremovedSince.setDate(removedSince.getDate() - removedSinceDays);\n\n\t\tawait this.deleteFilesUc.removeDeletedFilesData(removedSince);\n\t\tthis.logger.log('cleanup job finished');\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeleteFilesUc.html":{"url":"injectables/DeleteFilesUc.html","title":"injectable - DeleteFilesUc","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeleteFilesUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/files/uc/delete-files.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                removeDeletedFilesData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(filesRepo: FilesRepo, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/files/uc/delete-files.uc.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filesRepo\n                                                  \n                                                        \n                                                                        FilesRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeDeletedFilesData\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeDeletedFilesData(removedSince: Date)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/files/uc/delete-files.uc.ts:15\n                \n            \n\n\n            \n                \n                    Schedules files that have been removed prior removedSince by a user to be removed.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    removedSince\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Logger } from '@src/core/logger/logger.service';\nimport { FilesRepo } from '@shared/repo';\n\n@Injectable()\nexport class DeleteFilesUc {\n\tconstructor(private filesRepo: FilesRepo, private logger: Logger) {\n\t\tthis.logger.setContext(DeleteFilesUc.name);\n\t}\n\n\t/**\n\t * Schedules files that have been removed prior removedSince by a user to be removed.\n\t * @param removedSince\n\t */\n\tasync removeDeletedFilesData(removedSince: Date): Promise {\n\t\tconst filesForDeletion = await this.filesRepo.findAllFilesForCleanup(removedSince);\n\t\tconst numberOfFiles = filesForDeletion.length;\n\t\tthis.logger.log(`${numberOfFiles} files will be deleted`);\n\t\tconst failingFileIds: string[] = [];\n\t\t// eslint-disable-next-line no-restricted-syntax\n\t\tfor (const file of filesForDeletion) {\n\t\t\ttry {\n\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\tawait this.filesRepo.deleteFile(file);\n\t\t\t} catch (err) {\n\t\t\t\tfailingFileIds.push(file.id);\n\t\t\t\tthis.logger.error(err);\n\t\t\t}\n\t\t}\n\t\tthis.logger.log(`${numberOfFiles - failingFileIds.length} out of ${numberOfFiles} files were successfully deleted`);\n\t\tif (failingFileIds.length > 0) {\n\t\t\tthis.logger.error('the following files could not be deleted:', failingFileIds);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Directory.html":{"url":"entities/Directory.html","title":"entity - Directory","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Directory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/file.entity.ts\n        \n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, ManyToOne } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { StorageProvider } from './storageprovider.entity';\nimport type { User } from './user.entity';\n\nexport interface IFileProperties {\n\tdeletedAt?: Date;\n\tstorageFileName: string;\n\tbucket: string;\n\tstorageProvider: StorageProvider;\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorColumn: 'isDirectory', abstract: true })\nexport abstract class BaseFile extends BaseEntityWithTimestamps {\n\t@Property()\n\tdeletedAt?: Date;\n\n\t@Property()\n\tisDirectory!: boolean;\n\n\t@Property()\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorValue: 'true' })\nexport class Directory extends BaseFile {}\n\n@Entity({ collection: 'files', discriminatorValue: 'false' })\nexport class File extends BaseFile {\n\t@Property()\n\tstorageFileName: string;\n\n\t@Property()\n\tbucket: string;\n\n\t@ManyToOne('StorageProvider', { fieldName: 'storageProviderId' })\n\tstorageProvider: StorageProvider;\n\n\tconstructor(props: IFileProperties) {\n\t\tsuper();\n\t\tthis.isDirectory = false;\n\t\tthis.deletedAt = props.deletedAt;\n\t\tthis.storageFileName = props.storageFileName;\n\t\tthis.bucket = props.bucket;\n\t\tthis.storageProvider = props.storageProvider;\n\t\tthis.creator = props.creator;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DurationLoggingInterceptor.html":{"url":"injectables/DurationLoggingInterceptor.html","title":"injectable - DurationLoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DurationLoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                This interceptor is logging the duration of a REST call.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(DurationLoggingInterceptor.name)\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Logger } from '@src/core/logger';\n\n/**\n * This interceptor is logging the duration of a REST call.\n */\n@Injectable()\nexport class DurationLoggingInterceptor implements NestInterceptor {\n\tprivate readonly logger = new Logger(DurationLoggingInterceptor.name);\n\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\tthis.logger.verbose('Before...');\n\t\tconst now = Date.now();\n\t\treturn next.handle().pipe(tap(() => this.logger.verbose(`After... ${Date.now() - now}ms`)));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EncryptedStringType.html":{"url":"classes/EncryptedStringType.html","title":"class - EncryptedStringType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EncryptedStringType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/types/EncryptedString.type.ts\n        \n\n\n            \n                Description\n            \n            \n                Serialization type to transparent encrypt string values in database.\n\n            \n\n            \n                Extends\n            \n            \n                        Type\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                encryptionService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                convertToDatabaseValue\n                            \n                            \n                                convertToJSValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(customKey?: string)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/types/EncryptedString.type.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        customKey\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        encryptionService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SymetricKeyEncryptionService\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/repo/types/EncryptedString.type.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        convertToDatabaseValue\n                        \n                    \n                \n            \n            \n                \nconvertToDatabaseValue(value: string | undefined, platform: Platform)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/types/EncryptedString.type.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    platform\n                                    \n                                            Platform\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        convertToJSValue\n                        \n                    \n                \n            \n            \n                \nconvertToJSValue(value: string | undefined, platform: Platform)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/types/EncryptedString.type.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    platform\n                                    \n                                            Platform\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Configuration } from '@hpi-schul-cloud/commons';\nimport { Type, Platform } from '@mikro-orm/core';\nimport { SymetricKeyEncryptionService } from '../../infra/encryption';\n\n/**\n * Serialization type to transparent encrypt string values in database.\n */\nexport class EncryptedStringType extends Type {\n\t// TODO modularize service?\n\tprivate encryptionService: SymetricKeyEncryptionService;\n\n\tconstructor(customKey?: string) {\n\t\tsuper();\n\t\tif (customKey) {\n\t\t\tthis.encryptionService = new SymetricKeyEncryptionService(customKey);\n\t\t} else {\n\t\t\tthis.encryptionService = new SymetricKeyEncryptionService(Configuration.get('S3_KEY') as string);\n\t\t}\n\t}\n\n\tconvertToDatabaseValue(value: string | undefined, platform: Platform): string {\n\t\t// keep nullish values\n\t\tif (!value) {\n\t\t\treturn value as string;\n\t\t}\n\n\t\t// encrypt non-empty strings only\n\t\tif (value?.length === 0) {\n\t\t\treturn '';\n\t\t}\n\t\tconst encryptedString = this.encryptionService.encrypt(value);\n\n\t\treturn encryptedString;\n\t}\n\n\tconvertToJSValue(value: string | undefined, platform: Platform): string {\n\t\t// keep nullish values\n\t\tif (!value) {\n\t\t\treturn value as string;\n\t\t}\n\n\t\t// decrypt non-empty strings only\n\t\tif (value?.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// decrypt only non-empty strings\n\t\tconst decryptedString: string = this.encryptionService.decrypt(value);\n\n\t\treturn decryptedString;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EncryptionModule.html":{"url":"modules/EncryptionModule.html","title":"module - EncryptionModule","body":"\n                   \n\n\n\n\n    Modules\n    EncryptionModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/shared/infra/encryption/encryption.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: EncryptionModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/encryption/encryption.module.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                EncryptionModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { SymetricKeyEncryptionService } from './encryption.service';\n\nexport interface EncryptionModuleOptions {\n\tSymmetricCipherKey: string;\n}\n\n@Module({})\nexport class EncryptionModule {\n\tstatic forRoot(options: EncryptionModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: EncryptionModule,\n\t\t\tproviders: [\n\t\t\t\tSymetricKeyEncryptionService,\n\t\t\t\t{\n\t\t\t\t\tprovide: 'SYMMETRIC_CIPHER_KEY',\n\t\t\t\t\tuseValue: options.SymmetricCipherKey,\n\t\t\t\t},\n\t\t\t],\n\t\t\texports: [SymetricKeyEncryptionService],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EncryptionModuleOptions.html":{"url":"interfaces/EncryptionModuleOptions.html","title":"interface - EncryptionModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EncryptionModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/encryption/encryption.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            SymmetricCipherKey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        SymmetricCipherKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SymmetricCipherKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { SymetricKeyEncryptionService } from './encryption.service';\n\nexport interface EncryptionModuleOptions {\n\tSymmetricCipherKey: string;\n}\n\n@Module({})\nexport class EncryptionModule {\n\tstatic forRoot(options: EncryptionModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: EncryptionModule,\n\t\t\tproviders: [\n\t\t\t\tSymetricKeyEncryptionService,\n\t\t\t\t{\n\t\t\t\t\tprovide: 'SYMMETRIC_CIPHER_KEY',\n\t\t\t\t\tuseValue: options.SymmetricCipherKey,\n\t\t\t\t},\n\t\t\t],\n\t\t\texports: [SymetricKeyEncryptionService],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ErrorModule.html":{"url":"modules/ErrorModule.html","title":"module - ErrorModule","body":"\n                   \n\n\n\n\n    Modules\n    ErrorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/error/error.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_FILTER } from '@nestjs/core';\nimport { GlobalErrorFilter } from './filter/global-error.filter';\n\n/**\n * Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_FILTER,\n\t\t\tuseClass: GlobalErrorFilter,\n\t\t},\n\t],\n})\nexport class ErrorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorResponse.html":{"url":"classes/ErrorResponse.html","title":"class - ErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/error.response.ts\n        \n\n\n            \n                Description\n            \n            \n                HTTP response definition for errors.\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: string, title: string, message: string, code: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/error.response.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\n/**\n * HTTP response definition for errors.\n */\nexport class ErrorResponse {\n\tconstructor(\n\t\t/**\n\t\t * Unambigious error identifier, format: UPPERCASE_SNAKE_CASE\n\t\t */\n\t\treadonly type: string,\n\t\t/**\n\t\t * Description about the type, unique by type, format: Sentence case\n\t\t */\n\t\treadonly title: string,\n\t\t/**\n\t\t * additional custom information about the error\n\t\t */\n\t\treadonly message: string,\n\t\t/**\n\t\t * Must match HTTP error code\n\t\t */\n\t\treadonly code: number = HttpStatus.CONFLICT\n\t) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersAuthProvider.html":{"url":"injectables/FeathersAuthProvider.html","title":"injectable - FeathersAuthProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FeathersAuthProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/feathers-auth.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getPermittedSchools\n                            \n                            \n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                getUserSchoolPermissions\n                            \n                            \n                                    Async\n                                getUserTargetPermissions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersServiceProvider: FeathersServiceProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersServiceProvider\n                                                  \n                                                        \n                                                                        FeathersServiceProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedSchools\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedSchools(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedTargets\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, targetModel: NewsTargetModel, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserSchoolPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserSchoolPermissions(userId: EntityId, schoolId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserTargetPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserTargetPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { BaseEntity, EntityId, NewsTargetModel } from '@shared/domain';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { FeathersServiceProvider } from '@shared/infra/feathers';\n\ninterface User {\n\t_id: ObjectId;\n\tschoolId: ObjectId;\n\tpermissions: string[];\n}\n\n@Injectable()\nexport class FeathersAuthProvider {\n\tconstructor(private feathersServiceProvider: FeathersServiceProvider) {}\n\n\tasync getUserSchoolPermissions(userId: EntityId, schoolId: EntityId): Promise | never {\n\t\tconst user = await this.getUser(userId);\n\t\t// test user is school member\n\t\tconst sameSchool = user.schoolId.toString() === schoolId;\n\t\tif (sameSchool && Array.isArray(user.permissions)) {\n\t\t\treturn user.permissions;\n\t\t}\n\t\treturn [];\n\t}\n\n\tasync getUserTargetPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\ttargetId: EntityId\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`${targetModel}/:scopeId/userPermissions/`);\n\t\tconst targetPermissions = (await service.get(userId, {\n\t\t\troute: { scopeId: targetId },\n\t\t})) as string[];\n\t\treturn targetPermissions;\n\t}\n\n\tasync getPermittedTargets(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`/users/:scopeId/${targetModel}`);\n\t\tconst targets = (await service.find({\n\t\t\troute: { scopeId: userId.toString() },\n\t\t\tquery: {\n\t\t\t\tpermissions,\n\t\t\t},\n\t\t\tpaginate: false,\n\t\t})) as BaseEntity[];\n\t\tconst targetIds = targets.map((target) => target._id.toString());\n\t\treturn targetIds;\n\t}\n\n\tasync getPermittedSchools(userId: EntityId): Promise {\n\t\tconst user = await this.getUser(userId);\n\t\treturn [user.schoolId.toString()] as EntityId[];\n\t}\n\n\tprivate async getUser(userId: EntityId): Promise {\n\t\tconst service = this.feathersServiceProvider.getService('users');\n\t\tconst user = (await service.get(userId)) as User;\n\t\tif (user == null) throw new NotFoundException();\n\t\treturn user;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersError.html":{"url":"interfaces/FeathersError.html","title":"interface - FeathersError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FeathersError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/feathers-error.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            className\n                                        \n                                \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        className\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        className:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FeathersError extends Error {\n\tcode: number;\n\tclassName: string;\n\ttype: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeathersModule.html":{"url":"modules/FeathersModule.html","title":"module - FeathersModule","body":"\n                   \n\n\n\n\n    Modules\n    FeathersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_exports\n\n\n\ncluster_FeathersModule_providers\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\n\n\nFeathersModule\n\nFeathersModule\n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/shared/infra/feathers/feathers.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            This Module gives access to legacy feathers services. It is request based injected.\nIntroduce strong typing immediately when using this modules service.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersServiceProvider } from './feathers-service.provider';\n\n/**\n * This Module gives access to legacy feathers services. It is request based injected.\n * Introduce strong typing immediately when using this modules service.\n */\n@Module({\n\tproviders: [FeathersServiceProvider],\n\texports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersService.html":{"url":"interfaces/FeathersService.html","title":"interface - FeathersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FeathersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/feathers/feathers-service.provider.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        find\n                                    \n                                \n                                \n                                    \n                                        get\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \n                    Access legacy eathers service find method\n                \n            \n            \n                \nfind(params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/feathers/feathers-service.provider.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \n                    Access legacy eathers service get method\n                \n            \n            \n                \nget(id: string, params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/feathers/feathers-service.provider.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject, ImATeapotException } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: string, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst feathersApp = this.request.app.get('feathersApp') as Application;\n\t\tif (feathersApp == null) {\n\t\t\t// missing a feathers instance defined in module definition\n\t\t\t// see main.ts how it might work\n\t\t\t// sample: nestExpress.set('feathersApp', feathersExpress);\n\t\t\tthrow new ImATeapotException('this action requires a feathers instance available');\n\t\t}\n\t\tconst service = feathersApp.service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersServiceProvider.html":{"url":"injectables/FeathersServiceProvider.html","title":"injectable - FeathersServiceProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FeathersServiceProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/feathers/feathers-service.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                This Service gives access to legacy feathers services. It is request based injected.\nIMPORTANT: Introduce strong typing immediately when using this modules service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(request: Request)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/infra/feathers/feathers-service.provider.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getService\n                        \n                    \n                \n            \n            \n                \ngetService(path: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/feathers/feathers-service.provider.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FeathersService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject, ImATeapotException } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: string, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst feathersApp = this.request.app.get('feathersApp') as Application;\n\t\tif (feathersApp == null) {\n\t\t\t// missing a feathers instance defined in module definition\n\t\t\t// see main.ts how it might work\n\t\t\t// sample: nestExpress.set('feathersApp', feathersExpress);\n\t\t\tthrow new ImATeapotException('this action requires a feathers instance available');\n\t\t}\n\t\tconst service = feathersApp.service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/File.html":{"url":"entities/File.html","title":"entity - File","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/file.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bucket\n                            \n                            \n                                storageFileName\n                            \n                            \n                                storageProvider\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bucket\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        storageFileName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        storageProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StorageProvider\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('StorageProvider', {fieldName: 'storageProviderId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:38\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Property, ManyToOne } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { StorageProvider } from './storageprovider.entity';\nimport type { User } from './user.entity';\n\nexport interface IFileProperties {\n\tdeletedAt?: Date;\n\tstorageFileName: string;\n\tbucket: string;\n\tstorageProvider: StorageProvider;\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorColumn: 'isDirectory', abstract: true })\nexport abstract class BaseFile extends BaseEntityWithTimestamps {\n\t@Property()\n\tdeletedAt?: Date;\n\n\t@Property()\n\tisDirectory!: boolean;\n\n\t@Property()\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorValue: 'true' })\nexport class Directory extends BaseFile {}\n\n@Entity({ collection: 'files', discriminatorValue: 'false' })\nexport class File extends BaseFile {\n\t@Property()\n\tstorageFileName: string;\n\n\t@Property()\n\tbucket: string;\n\n\t@ManyToOne('StorageProvider', { fieldName: 'storageProviderId' })\n\tstorageProvider: StorageProvider;\n\n\tconstructor(props: IFileProperties) {\n\t\tsuper();\n\t\tthis.isDirectory = false;\n\t\tthis.deletedAt = props.deletedAt;\n\t\tthis.storageFileName = props.storageFileName;\n\t\tthis.bucket = props.bucket;\n\t\tthis.storageProvider = props.storageProvider;\n\t\tthis.creator = props.creator;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileStorageAdapter.html":{"url":"injectables/FileStorageAdapter.html","title":"injectable - FileStorageAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileStorageAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/filestorage/filestorage.adapter.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteFile(file: File)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/filestorage/filestorage.adapter.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { S3Client, DeleteObjectCommand } from '@aws-sdk/client-s3';\n\nimport { Injectable } from '@nestjs/common';\nimport { StorageProvider, File } from '@shared/domain';\n\nfunction createStorageProviderClient(storageProvider: StorageProvider): S3Client {\n\treturn new S3Client({\n\t\tendpoint: storageProvider.endpointUrl,\n\t\tforcePathStyle: true,\n\t\tregion: storageProvider.region,\n\t\ttls: true,\n\t\tcredentials: {\n\t\t\taccessKeyId: storageProvider.accessKeyId,\n\t\t\tsecretAccessKey: storageProvider.secretAccessKey,\n\t\t},\n\t});\n}\n\n@Injectable()\nexport class FileStorageAdapter {\n\tasync deleteFile(file: File): Promise {\n\t\tconst { storageProvider, bucket, storageFileName } = file;\n\t\tconst storageProviderClient = createStorageProviderClient(storageProvider);\n\t\tconst deletionCommand = new DeleteObjectCommand({ Bucket: bucket, Key: storageFileName });\n\t\tawait storageProviderClient.send(deletionCommand);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileSystemAdapter.html":{"url":"injectables/FileSystemAdapter.html","title":"injectable - FileSystemAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileSystemAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/file-system/file-system.adapter.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                encoding\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createDir\n                            \n                            \n                                    Async\n                                createTmpDir\n                            \n                            \n                                joinPath\n                            \n                            \n                                    Async\n                                readDir\n                            \n                            \n                                    Async\n                                readFile\n                            \n                            \n                                    Async\n                                removeDirRecursive\n                            \n                            \n                                    Async\n                                writeFile\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    EOL\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createDir\n                        \n                    \n                \n            \n            \n                \n                    \n                    createDir(folderPath: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:26\n                \n            \n\n\n            \n                \n                    creates a directory if not already exists\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    folderPath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createTmpDir\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTmpDir(dirNamePrefix: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:68\n                \n            \n\n\n            \n                \n                    Creates a folder in systems temp path.\nThe dirNamePrefix given will be extended by six random characters.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dirNamePrefix\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        full path string to temp folder, format depends on os\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joinPath\n                        \n                    \n                \n            \n            \n                \njoinPath(...paths: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    paths\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        readDir\n                        \n                    \n                \n            \n            \n                \n                    \n                    readDir(folderPath: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:36\n                \n            \n\n\n            \n                \n                    Lists filenames of given folderPath\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    folderPath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        path to an existing folder\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        string array of filenames\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        readFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    readFile(filePath: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:57\n                \n            \n\n\n            \n                \n                    Read file from filesystem with given encoding, defaults to utf-8\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filePath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        path to existing file, format depending on os\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        file content as encoded text\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeDirRecursive\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeDirRecursive(folderPath: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:78\n                \n            \n\n\n            \n                \n                    Removes the given folder recursively including content when not empty.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    folderPath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        path to an existing folder, format depending on\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        writeFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    writeFile(filePath: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:48\n                \n            \n\n\n            \n                \n                    Write text to file, will override existing files.\nThe folder in which the file will be created must exist.\nThe path format depends on os\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filePath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        path to a file\n\n                                    \n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        encoding\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BufferEncoding\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        EOL\n                    \n                \n\n                \n                    \n                        getEOL()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:18\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { promises as fsp, existsSync } from 'fs';\nimport os from 'os';\nimport path from 'path';\n\nimport rimraf = require('rimraf');\n\nconst { mkdir, readdir, writeFile, readFile, mkdtemp } = fsp;\n\n@Injectable()\nexport class FileSystemAdapter {\n\tprivate encoding: BufferEncoding;\n\n\tconstructor() {\n\t\tthis.encoding = 'utf-8';\n\t}\n\n\tget EOL(): string {\n\t\treturn os.EOL;\n\t}\n\n\t/**\n\t * creates a directory if not already exists\n\t * @param folderPath\n\t */\n\tasync createDir(folderPath: string): Promise {\n\t\tconst exists = existsSync(folderPath);\n\t\tif (!exists) await mkdir(folderPath);\n\t}\n\n\t/**\n\t * Lists filenames of given folderPath\n\t * @param folderPath path to an existing folder\n\t * @returns string array of filenames\n\t */\n\tasync readDir(folderPath: string): Promise {\n\t\tconst filenames = await readdir(folderPath, { encoding: this.encoding });\n\t\treturn filenames;\n\t}\n\n\t/**\n\t * Write text to file, will override existing files.\n\t * The folder in which the file will be created must exist.\n\t * The path format depends on os\n\t * @param filePath path to a file\n\t * @param text\n\t */\n\tasync writeFile(filePath: string, text: string): Promise {\n\t\tawait writeFile(filePath, text);\n\t}\n\n\t/**\n\t * Read file from filesystem with given encoding, defaults to utf-8\n\t * @param filePath path to existing file, format depending on os\n\t * @returns file content as encoded text\n\t */\n\tasync readFile(filePath: string): Promise {\n\t\tconst text = await readFile(filePath, this.encoding);\n\t\treturn text;\n\t}\n\n\t/**\n\t * Creates a folder in systems temp path.\n\t * The dirNamePrefix given will be extended by six random characters.\n\t * @param dirNamePrefix\n\t * @returns full path string to temp folder, format depends on os\n\t */\n\tasync createTmpDir(dirNamePrefix: string): Promise {\n\t\tconst dirPath = this.joinPath(os.tmpdir(), dirNamePrefix);\n\t\tconst tmpDirPath = await mkdtemp(dirPath);\n\t\treturn tmpDirPath;\n\t}\n\n\t/**\n\t * Removes the given folder recursively including content when not empty.\n\t * @param folderPath path to an existing folder, format depending on\n\t */\n\tasync removeDirRecursive(folderPath: string): Promise {\n\t\t// fs.rm changed in node 14.14, use rimraf instead\n\t\trimraf.sync(folderPath);\n\t\treturn Promise.resolve();\n\t}\n\n\tjoinPath(...paths: string[]): string {\n\t\treturn path.join(...paths);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FileSystemModule.html":{"url":"modules/FileSystemModule.html","title":"module - FileSystemModule","body":"\n                   \n\n\n\n\n    Modules\n    FileSystemModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FileSystemModule\n\n\n\ncluster_FileSystemModule_providers\n\n\n\ncluster_FileSystemModule_exports\n\n\n\n\nFileSystemAdapter \n\nFileSystemAdapter \n\n\n\nFileSystemModule\n\nFileSystemModule\n\nFileSystemAdapter  -->\n\nFileSystemModule->FileSystemAdapter \n\n\n\n\n\nFileSystemAdapter\n\nFileSystemAdapter\n\nFileSystemModule -->\n\nFileSystemAdapter->FileSystemModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/shared/infra/file-system/file-system.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FileSystemAdapter\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FileSystemAdapter\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FileSystemAdapter } from './file-system.adapter';\n\n@Module({\n\tproviders: [FileSystemAdapter],\n\texports: [FileSystemAdapter],\n})\nexport class FileSystemModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n    Modules\n    FilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_imports\n\n\n\ncluster_FilesModule_providers\n\n\n\n\nLoggerModule\n\nLoggerModule\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nLoggerModule->FilesModule\n\n\n\n\n\nDeleteFilesUc\n\nDeleteFilesUc\n\nFilesModule -->\n\nDeleteFilesUc->FilesModule\n\n\n\n\n\nFileStorageAdapter\n\nFileStorageAdapter\n\nFilesModule -->\n\nFileStorageAdapter->FilesModule\n\n\n\n\n\nFilesRepo\n\nFilesRepo\n\nFilesModule -->\n\nFilesRepo->FilesModule\n\n\n\n\n\nStorageProviderRepo\n\nStorageProviderRepo\n\nFilesModule -->\n\nStorageProviderRepo->FilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/files/files.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DeleteFilesUc\n                        \n                        \n                            FileStorageAdapter\n                        \n                        \n                            FilesRepo\n                        \n                        \n                            StorageProviderRepo\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LoggerModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FileStorageAdapter } from '@shared/infra/filestorage';\nimport { FilesRepo, StorageProviderRepo } from '@shared/repo';\nimport { LoggerModule } from '@src/core/logger';\nimport { DeleteFilesConsole } from './job/delete-files.console';\nimport { DeleteFilesUc } from './uc';\n\n@Module({\n\timports: [LoggerModule],\n\tproviders: [DeleteFilesConsole, DeleteFilesUc, FilesRepo, StorageProviderRepo, FileStorageAdapter],\n})\nexport class FilesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesRepo.html":{"url":"injectables/FilesRepo.html","title":"injectable - FilesRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FilesRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/files/files.repo.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseRepo\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                propertiesToPopulate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteFile\n                            \n                            \n                                    Async\n                                findAllFilesForCleanup\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                persist\n                            \n                            \n                                persistAll\n                            \n                            \n                                    Async\n                                persistAllAndFlush\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                    Async\n                                removeAllAndFlush\n                            \n                            \n                                    Async\n                                removeAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fileStorageAdapter: FileStorageAdapter, em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/files/files.repo.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileStorageAdapter\n                                                  \n                                                        \n                                                                        FileStorageAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteFile(file: BaseFile)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/files/files.repo.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                BaseFile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllFilesForCleanup\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllFilesForCleanup(cleanupThreshold: Date)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/files/files.repo.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cleanupThreshold\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                    \n                    flush()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persist\n                        \n                    \n                \n            \n            \n                \npersist(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:9\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAll\n                        \n                    \n                \n            \n            \n                \npersistAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAll\n                        \n                    \n                \n            \n            \n                \nremoveAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        propertiesToPopulate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['storageProvider']\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/repo/files/files.repo.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityManager } from '@mikro-orm/mongodb';\nimport { BaseFile, File } from '@shared/domain';\nimport { FileStorageAdapter } from '@shared/infra/filestorage';\nimport { BaseRepo } from '../base.repo';\n\n@Injectable()\nexport class FilesRepo extends BaseRepo {\n\tconstructor(private fileStorageAdapter: FileStorageAdapter, protected readonly em: EntityManager) {\n\t\tsuper(em);\n\t}\n\n\tpropertiesToPopulate = ['storageProvider'];\n\n\tasync findAllFilesForCleanup(cleanupThreshold: Date): Promise {\n\t\tconst filesForCleanupQuery = { deletedAt: { $lte: cleanupThreshold } };\n\t\tconst files = await this.em.find(BaseFile, filesForCleanupQuery);\n\t\tconst regularFiles = files.filter((file) => file instanceof File);\n\t\tawait this.em.populate(regularFiles, this.propertiesToPopulate);\n\t\treturn files;\n\t}\n\n\tasync deleteFile(file: BaseFile): Promise {\n\t\tif (file instanceof File) await this.fileStorageAdapter.deleteFile(file);\n\t\tawait this.removeAndFlush(file);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GlobalConstants.html":{"url":"interfaces/GlobalConstants.html","title":"interface - GlobalConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GlobalConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/config/database.config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            DB_PASSWORD\n                                        \n                                \n                                \n                                        \n                                            DB_URL\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            DB_USERNAME\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        DB_PASSWORD\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_PASSWORD:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DB_URL\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_URL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DB_USERNAME\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_USERNAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import globals = require('../../../../config/globals');\n\ninterface GlobalConstants {\n\tDB_URL: string;\n\tDB_PASSWORD?: string;\n\tDB_USERNAME?: string;\n}\n\nconst usedGlobals: GlobalConstants = globals;\n\n/** Database URL */\nexport const { DB_URL, DB_PASSWORD, DB_USERNAME } = usedGlobals;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalErrorFilter.html":{"url":"classes/GlobalErrorFilter.html","title":"class - GlobalErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/filter/global-error.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                            \n                                createErrorResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILogger\n\n                    \n                \n                \n                    \n                        Default value : new Logger('Error')\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/core/error/filter/global-error.filter.ts:119\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(error: T, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponse\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponse(error: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, InternalServerErrorException } from '@nestjs/common';\nimport _ from 'lodash';\nimport { Response } from 'express';\nimport { BusinessError, ApiValidationError } from '@shared/common';\nimport { Logger, ILogger } from '@src/core/logger';\nimport { ErrorResponse } from '../dto/error.response';\nimport { FeathersError } from '../interface';\nimport { ApiValidationErrorResponse } from '../dto/api-validation-error.response';\n\nconst isFeathersError = (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n};\n\nconst isBusinessError = (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n};\n\n/**\n * Compare helper to detect an error is a build in NestJS http exception.\n * @param error\n * @returns\n */\nconst isTechnicalError = (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n};\n\n/**\n * Creates ErrorResponse from NestJS build in technical exceptions\n * @param exception\n * @returns {ErrorResponse}\n */\nconst createErrorResponseForHttpException = (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n};\n\nfunction createErrorResponseForBusinessError(error: BusinessError): ErrorResponse {\n\tif (error instanceof ApiValidationError) {\n\t\tconst response = new ApiValidationErrorResponse(error);\n\t\treturn response;\n\t}\n\tconst response = error.getResponse();\n\treturn response;\n}\n\nfunction createErrorResponseForUnknownError(error?: unknown): ErrorResponse {\n\tconst unknownError = new InternalServerErrorException(error);\n\tconst response = createErrorResponseForHttpException(unknownError);\n\treturn response;\n}\n\nfunction createErrorResponseForFeathersError(error: FeathersError) {\n\tconst { code, className: type, name: title, message } = error;\n\tconst snakeType = _.snakeCase(type).toUpperCase();\n\tconst startTitle = _.startCase(title);\n\treturn new ErrorResponse(snakeType, startTitle, message, code);\n}\n\nconst createErrorResponse = (error: unknown, logger: ILogger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create default response for all unknown errors\n\t\treturn createErrorResponseForUnknownError();\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n};\n\nconst writeValidationErrors = (error: ApiValidationError, logger: ILogger) => {\n\tconst errorMsg = error.validationErrors.map(\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t(e) => `Wrong property ${e.property} got ${e.value} : ${JSON.stringify(e.constraints)}`\n\t);\n\tlogger.error(errorMsg, error.stack, 'API Validation Error');\n};\n\nconst writeErrorLog = (error: unknown, logger: ILogger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tif (error instanceof ApiValidationError) {\n\t\t\t\twriteValidationErrors(error, logger);\n\t\t\t} else {\n\t\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t\t}\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n};\n\n@Catch()\nexport class GlobalErrorFilter implements ExceptionFilter {\n\tprivate static readonly logger: ILogger = new Logger('Error');\n\n\t// eslint-disable-next-line class-methods-use-this\n\tcatch(error: T, host: ArgumentsHost): void {\n\t\tconst ctx = host.switchToHttp();\n\t\tconst response = ctx.getResponse();\n\t\twriteErrorLog(error, GlobalErrorFilter.logger);\n\t\tconst errorResponse: ErrorResponse = this.createErrorResponse(error);\n\t\tresponse.status(errorResponse.code).json(errorResponse);\n\t}\n\n\tcreateErrorResponse(error: T): ErrorResponse {\n\t\treturn createErrorResponse(error, GlobalErrorFilter.logger);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalValidationPipe.html":{"url":"classes/GlobalValidationPipe.html","title":"class - GlobalValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/validation/pipe/global-validation.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                \nGlobal Pipe setup\n\nValidation of DTOs will base on type-checking\nwhich is enabled by default. To you might use\nthe class-validator decorators to extend\nvalidation.\n\n            \n\n            \n                Extends\n            \n            \n                    ValidationPipe\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/validation/pipe/global-validation.pipe.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ValidationError, ValidationPipe } from '@nestjs/common';\nimport { ApiValidationError } from '@shared/common';\n\n/** *********************************************\n * Global Pipe setup\n * **********************************************\n * Validation of DTOs will base on type-checking\n * which is enabled by default. To you might use\n * the class-validator decorators to extend\n * validation.\n */\nexport class GlobalValidationPipe extends ValidationPipe {\n\tconstructor() {\n\t\tsuper({\n\t\t\t// enable DTO instance creation for incoming data\n\t\t\ttransform: true,\n\t\t\ttransformOptions: {\n\t\t\t\t// enable type coersion, requires transform:true\n\t\t\t\tenableImplicitConversion: true,\n\t\t\t},\n\t\t\twhitelist: true, // only pass valid @ApiProperty-decorated DTO properties, remove others\n\t\t\tforbidNonWhitelisted: false, // additional params are just skipped (required when extracting multiple DTO from single query)\n\t\t\tforbidUnknownValues: true,\n\t\t\texceptionFactory: (errors: ValidationError[]) => {\n\t\t\t\treturn new ApiValidationError(errors);\n\t\t\t},\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GridElement.html":{"url":"classes/GridElement.html","title":"class - GridElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GridElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IGridElement\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                id\n                            \n                            \n                                references\n                            \n                            \n                                    Private\n                                sortReferences\n                            \n                            \n                                    Optional\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addReferences\n                            \n                            \n                                    Static\n                                FromGroup\n                            \n                            \n                                    Static\n                                FromPersistedGroup\n                            \n                            \n                                    Static\n                                FromPersistedReference\n                            \n                            \n                                    Static\n                                FromSingleReference\n                            \n                            \n                                getContent\n                            \n                            \n                                getId\n                            \n                            \n                                getReferences\n                            \n                            \n                                hasId\n                            \n                            \n                                isGroup\n                            \n                            \n                                removeReference\n                            \n                            \n                                removeReferenceByIndex\n                            \n                            \n                                setGroupName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        references\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILearnroom[]\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sortReferences\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:39\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addReferences\n                        \n                    \n                \n            \n            \n                \naddReferences(anotherReference: ILearnroom[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    anotherReference\n                                    \n                                                ILearnroom[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        FromGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    FromGroup(title: string, references: ILearnroom[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    references\n                                    \n                                                ILearnroom[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GridElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        FromPersistedGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    FromPersistedGroup(id: EntityId, title: string | undefined, group: ILearnroom[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    title\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    group\n                                    \n                                                ILearnroom[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GridElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        FromPersistedReference\n                        \n                    \n                \n            \n            \n                \n                    \n                    FromPersistedReference(id: EntityId, reference: ILearnroom)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reference\n                                    \n                                                ILearnroom\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GridElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        FromSingleReference\n                        \n                    \n                \n            \n            \n                \n                    \n                    FromSingleReference(reference: ILearnroom)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reference\n                                    \n                                                ILearnroom\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GridElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getContent\n                        \n                    \n                \n            \n            \n                \ngetContent()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         GridElementContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getId\n                        \n                    \n                \n            \n            \n                \ngetId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityId | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferences\n                        \n                    \n                \n            \n            \n                \ngetReferences()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ILearnroom[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasId\n                        \n                    \n                \n            \n            \n                \nhasId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isGroup\n                        \n                    \n                \n            \n            \n                \nisGroup()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeReference\n                        \n                    \n                \n            \n            \n                \nremoveReference(reference: ILearnroom)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reference\n                                    \n                                                ILearnroom\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeReferenceByIndex\n                        \n                    \n                \n            \n            \n                \nremoveReferenceByIndex(index: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setGroupName\n                        \n                    \n                \n            \n            \n                \nsetGroupName(newGroupName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newGroupName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException, BadRequestException } from '@nestjs/common';\nimport { EntityId, LearnroomMetadata } from '@shared/domain/types';\nimport { ILearnroom } from '@shared/domain/interface';\n\nconst defaultColumns = 4;\n\nexport interface IGridElement {\n\thasId(): boolean;\n\n\tgetId: () => EntityId | undefined;\n\n\tgetContent: () => GridElementContent;\n\n\tisGroup(): boolean;\n\n\tremoveReferenceByIndex(index: number): void;\n\n\tremoveReference(reference: ILearnroom): void;\n\n\tgetReferences(): ILearnroom[];\n\n\taddReferences(anotherReference: ILearnroom[]): void;\n\n\tsetGroupName(newGroupName: string): void;\n}\n\nexport type GridElementContent = {\n\treferencedId?: string;\n\ttitle?: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n\tgroup?: LearnroomMetadata[];\n\tgroupId?: string;\n};\n\nexport class GridElement implements IGridElement {\n\tid?: EntityId;\n\n\ttitle?: string;\n\n\tprivate sortReferences = (a: ILearnroom, b: ILearnroom) => {\n\t\tconst titleA = a.getMetadata().title;\n\t\tconst titleB = b.getMetadata().title;\n\t\tif (titleA  titleB) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t};\n\n\tprivate constructor(props: { id?: EntityId; title?: string; references: ILearnroom[] }) {\n\t\tif (props.id) this.id = props.id;\n\t\tif (props.title) this.title = props.title;\n\t\tthis.references = props.references.sort(this.sortReferences);\n\t}\n\n\tstatic FromPersistedReference(id: EntityId, reference: ILearnroom): GridElement {\n\t\treturn new GridElement({ id, references: [reference] });\n\t}\n\n\tstatic FromPersistedGroup(id: EntityId, title: string | undefined, group: ILearnroom[]): GridElement {\n\t\treturn new GridElement({ id, title, references: group });\n\t}\n\n\tstatic FromSingleReference(reference: ILearnroom): GridElement {\n\t\treturn new GridElement({ references: [reference] });\n\t}\n\n\tstatic FromGroup(title: string, references: ILearnroom[]): GridElement {\n\t\treturn new GridElement({ title, references });\n\t}\n\n\treferences: ILearnroom[];\n\n\thasId(): boolean {\n\t\treturn !!this.id;\n\t}\n\n\tgetId(): EntityId | undefined {\n\t\treturn this.id;\n\t}\n\n\tgetReferences(): ILearnroom[] {\n\t\treturn this.references;\n\t}\n\n\tremoveReferenceByIndex(index: number): void {\n\t\tif (!this.isGroup()) {\n\t\t\tthrow new BadRequestException('this element is not a group.');\n\t\t}\n\t\tif (index > 0 && this.references.length  reference.getMetadata());\n\t\tconst checkShortTitle = this.title ? this.title.substr(0, 2) : '';\n\t\tconst groupMetadata = {\n\t\t\tgroupId: this.getId(),\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: checkShortTitle,\n\t\t\tdisplayColor: 'exampleColor',\n\t\t\tgroup: groupData,\n\t\t};\n\t\treturn groupMetadata;\n\t}\n\n\tisGroup(): boolean {\n\t\treturn this.references.length > 1;\n\t}\n\n\tsetGroupName(newGroupName: string): void {\n\t\tif (!this.isGroup()) {\n\t\t\treturn;\n\t\t}\n\t\tthis.title = newGroupName;\n\t}\n}\n\nexport type GridPosition = { x: number; y: number };\nexport type GridPositionWithGroupIndex = { x: number; y: number; groupIndex?: number };\n\nexport type GridElementWithPosition = {\n\tgridElement: IGridElement;\n\tpos: GridPosition;\n};\n\nexport type DashboardProps = { colums?: number; grid: GridElementWithPosition[]; userId: EntityId };\n\nexport class DashboardEntity {\n\tid: EntityId;\n\n\tcolumns: number;\n\n\tgrid: Map;\n\n\tuserId: EntityId;\n\n\tprivate gridIndexFromPosition(pos: GridPosition): number {\n\t\tif (pos.x > this.columns) {\n\t\t\tthrow new BadRequestException('dashboard element position is outside the grid.');\n\t\t}\n\t\treturn this.columns * pos.y + pos.x;\n\t}\n\n\tprivate positionFromGridIndex(index: number): GridPosition {\n\t\tconst y = Math.floor(index / this.columns);\n\t\tconst x = index % this.columns;\n\t\treturn { x, y };\n\t}\n\n\tconstructor(id: string, props: DashboardProps) {\n\t\tthis.columns = props.colums || defaultColumns;\n\t\tthis.grid = new Map();\n\t\tprops.grid.forEach((element) => {\n\t\t\tthis.grid.set(this.gridIndexFromPosition(element.pos), element.gridElement);\n\t\t});\n\t\tthis.id = id;\n\t\tthis.userId = props.userId;\n\t\tObject.assign(this, {});\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetUserId(): EntityId {\n\t\treturn this.userId;\n\t}\n\n\tgetGrid(): GridElementWithPosition[] {\n\t\tconst result = [...this.grid.keys()].map((key) => {\n\t\t\tconst position = this.positionFromGridIndex(key);\n\t\t\tconst value = this.grid.get(key) as IGridElement;\n\t\t\treturn {\n\t\t\t\tpos: position,\n\t\t\t\tgridElement: value,\n\t\t\t};\n\t\t});\n\t\treturn result;\n\t}\n\n\tgetElement(position: GridPosition): IGridElement {\n\t\tconst element = this.grid.get(this.gridIndexFromPosition(position));\n\t\tif (!element) {\n\t\t\tthrow new NotFoundException('no element at grid position');\n\t\t}\n\t\treturn element;\n\t}\n\n\tmoveElement(from: GridPositionWithGroupIndex, to: GridPositionWithGroupIndex): GridElementWithPosition {\n\t\tconst elementToMove = this.getReferencesFromPosition(from);\n\t\tconst resultElement = this.mergeElementIntoPosition(elementToMove, to);\n\t\tthis.removeFromPosition(from);\n\t\treturn {\n\t\t\tpos: to,\n\t\t\tgridElement: resultElement,\n\t\t};\n\t}\n\n\tsetLearnRooms(rooms: ILearnroom[]): void {\n\t\tthis.removeRoomsNotInList(rooms);\n\t\tconst newRooms = this.determineNewRoomsIn(rooms);\n\n\t\tnewRooms.forEach((room) => {\n\t\t\tthis.addRoom(room);\n\t\t});\n\t}\n\n\tprivate removeRoomsNotInList(roomList: ILearnroom[]): void {\n\t\t[...this.grid.keys()].forEach((key) => {\n\t\t\tconst element = this.grid.get(key) as IGridElement;\n\t\t\tconst currentRooms = element.getReferences();\n\t\t\tcurrentRooms.forEach((room) => {\n\t\t\t\tif (!roomList.includes(room)) {\n\t\t\t\t\telement.removeReference(room);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (element.getReferences().length === 0) {\n\t\t\t\tthis.grid.delete(key);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate determineNewRoomsIn(rooms: ILearnroom[]): ILearnroom[] {\n\t\tconst result: ILearnroom[] = [];\n\t\tconst existingRooms = this.allRooms();\n\t\trooms.forEach((room) => {\n\t\t\tif (!existingRooms.includes(room)) {\n\t\t\t\tresult.push(room);\n\t\t\t}\n\t\t});\n\t\treturn result;\n\t}\n\n\tprivate allRooms(): ILearnroom[] {\n\t\tconst elements = [...this.grid.values()];\n\t\tconst references = elements\n\t\t\t.map((el) => {\n\t\t\t\treturn el.getReferences();\n\t\t\t})\n\t\t\t.flat();\n\t\treturn references;\n\t}\n\n\tprivate addRoom(room: ILearnroom): void {\n\t\tconst index = this.getFirstOpenIndex();\n\t\tconst newElement = GridElement.FromSingleReference(room);\n\t\tthis.grid.set(index, newElement);\n\t}\n\n\tprivate getFirstOpenIndex(): number {\n\t\tlet i = 0;\n\t\twhile (this.grid.get(i) !== undefined) {\n\t\t\ti += 1;\n\t\t}\n\t\treturn i;\n\t}\n\n\tprivate getReferencesFromPosition(position: GridPositionWithGroupIndex): IGridElement {\n\t\tconst elementToMove = this.getElement(position);\n\n\t\tif (typeof position.groupIndex === 'number' && elementToMove.isGroup()) {\n\t\t\tconst references = elementToMove.getReferences();\n\t\t\tconst referenceForIndex = references[position.groupIndex];\n\t\t\treturn GridElement.FromSingleReference(referenceForIndex);\n\t\t}\n\n\t\treturn elementToMove;\n\t}\n\n\tprivate removeFromPosition(position: GridPositionWithGroupIndex): void {\n\t\tconst element = this.getElement(position);\n\t\tif (typeof position.groupIndex === 'number') {\n\t\t\telement.removeReferenceByIndex(position.groupIndex);\n\t\t} else {\n\t\t\tthis.grid.delete(this.gridIndexFromPosition(position));\n\t\t}\n\t}\n\n\tprivate mergeElementIntoPosition(element: IGridElement, position: GridPosition): IGridElement {\n\t\tconst targetElement = this.grid.get(this.gridIndexFromPosition(position));\n\t\tif (targetElement) {\n\t\t\ttargetElement.addReferences(element.getReferences());\n\t\t\treturn targetElement;\n\t\t}\n\t\tthis.grid.set(this.gridIndexFromPosition(position), element);\n\t\treturn element;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HtmlMailContent.html":{"url":"interfaces/HtmlMailContent.html","title":"interface - HtmlMailContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HtmlMailContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailContent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            htmlContent\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            plainTextContent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        htmlContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        htmlContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plainTextContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        plainTextContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICollectionFilePath.html":{"url":"interfaces/ICollectionFilePath.html","title":"interface - ICollectionFilePath","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICollectionFilePath\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/uc/database-management.uc.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            collectionName\n                                        \n                                \n                                \n                                        \n                                            filePath\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        collectionName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        collectionName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filePath\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filePath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { orderBy } from 'lodash';\nimport { FileSystemAdapter } from '@shared/infra/file-system';\nimport { DatabaseManagementService } from '@shared/infra/database';\nimport { BsonConverter } from '../converter/bson.converter';\n\nexport interface ICollectionFilePath {\n\tfilePath: string;\n\tcollectionName: string;\n}\n\n@Injectable()\nexport class DatabaseManagementUc {\n\t/**\n\t * relative path to seed data folder based of location of this file.\n\t */\n\tprivate basePath = '../../../../../../backup';\n\n\tconstructor(\n\t\tprivate fileSystemAdapter: FileSystemAdapter,\n\t\tprivate databaseManagementService: DatabaseManagementService,\n\t\tprivate bsonConverter: BsonConverter\n\t) {}\n\n\t/**\n\t * absolute path reference for seed data base folder.\n\t */\n\tprivate get baseDir(): string {\n\t\tconst folderPath = this.fileSystemAdapter.joinPath(__dirname, this.basePath);\n\t\treturn folderPath;\n\t}\n\n\t/**\n\t * setup dir with json files\n\t */\n\tprivate getSeedFolder() {\n\t\treturn this.fileSystemAdapter.joinPath(this.baseDir, 'setup');\n\t}\n\n\t/**\n\t * export folder name based on current date\n\t * @returns\n\t */\n\tprivate getTargetFolder(toSeedFolder?: boolean) {\n\t\tif (toSeedFolder === true) {\n\t\t\tconst targetFolder = this.getSeedFolder();\n\t\t\treturn targetFolder;\n\t\t}\n\t\tconst now = new Date();\n\t\tconst currentDateTime = `${now.getFullYear()}_${\n\t\t\tnow.getMonth() + 1\n\t\t}_${now.getDate()}_${now.getHours()}_${now.getMinutes()}_${now.getSeconds()}`;\n\t\tconst targetFolder = this.fileSystemAdapter.joinPath(this.baseDir, currentDateTime);\n\t\treturn targetFolder;\n\t}\n\n\t/**\n\t * Loads all collection names from database and adds related file paths.\n\t * @returns {ICollectionFilePath}\n\t */\n\tprivate async loadAllCollectionsFromDatabase(targetFolder: string): Promise {\n\t\tconst collections = await this.databaseManagementService.getCollectionNames();\n\t\tconst collectionsWithFilePaths = collections.map((collectionName) => ({\n\t\t\tfilePath: this.fileSystemAdapter.joinPath(targetFolder, `${collectionName}.json`),\n\t\t\tcollectionName,\n\t\t}));\n\t\treturn collectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Loads all collection names and file paths from backup files.\n\t * @returns {ICollectionFilePath}\n\t */\n\tprivate async loadAllCollectionsFromFilesystem(baseDir: string): Promise {\n\t\tconst filenames = await this.fileSystemAdapter.readDir(baseDir);\n\t\tconst collectionsWithFilePaths = filenames.map((fileName) => ({\n\t\t\tfilePath: this.fileSystemAdapter.joinPath(baseDir, fileName),\n\t\t\tcollectionName: fileName.split('.')[0],\n\t\t}));\n\t\treturn collectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Scans  for existing collections and optionally filters them based on \n\t * @param source\n\t * @param collectionNameFilter\n\t * @returns {ICollectionFilePath} the filtered collection names and related file paths\n\t */\n\tprivate async loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\tsource: 'files' | 'database',\n\t\tfolder: string,\n\t\tcollectionNameFilter?: string[]\n\t) {\n\t\tlet allCollectionsWithFilePaths: ICollectionFilePath[] = [];\n\n\t\t// load all available collections from source\n\t\tif (source === 'files') {\n\t\t\tallCollectionsWithFilePaths = await this.loadAllCollectionsFromFilesystem(folder);\n\t\t} else {\n\t\t\t// source === 'database'\n\t\t\tallCollectionsWithFilePaths = await this.loadAllCollectionsFromDatabase(folder);\n\t\t}\n\n\t\t// when a collection name filter is given, apply it and check\n\t\tif (Array.isArray(collectionNameFilter) && collectionNameFilter.length > 0) {\n\t\t\tconst filteredCollectionsWithFilePaths = allCollectionsWithFilePaths.filter(({ collectionName }) =>\n\t\t\t\tcollectionNameFilter?.includes(collectionName)\n\t\t\t);\n\n\t\t\tif (filteredCollectionsWithFilePaths.length !== collectionNameFilter.length) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`At least one collectionName of ${JSON.stringify(\n\t\t\t\t\t\tcollectionNameFilter\n\t\t\t\t\t)} is invalid. Collection names available in '${source}' are: ${JSON.stringify(\n\t\t\t\t\t\tallCollectionsWithFilePaths.map((file) => file.collectionName)\n\t\t\t\t\t)}`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn filteredCollectionsWithFilePaths;\n\t\t}\n\n\t\treturn allCollectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Imports all or filtered  from filesystem as bson to database.\n\t * The behaviour should match $ mongoimport\n\t * @param collections optional filter applied on existing collections\n\t * @returns the list of collection names exported\n\t */\n\tasync seedDatabaseCollectionsFromFileSystem(collections?: string[]): Promise {\n\t\t// detect collections to seed based on filesystem data\n\t\tconst setupPath = this.getSeedFolder();\n\t\tconst collectionsToSeed = await this.loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\t\t'files',\n\t\t\tsetupPath,\n\t\t\tcollections\n\t\t);\n\n\t\tconst seededCollectionsWithAmount: string[] = [];\n\n\t\tawait Promise.all(\n\t\t\tcollectionsToSeed.map(async ({ filePath, collectionName }) => {\n\t\t\t\t// load text from backup file\n\t\t\t\tconst text = await this.fileSystemAdapter.readFile(filePath);\n\t\t\t\t// create bson-objects from text\n\t\t\t\tconst bsonDocuments = JSON.parse(text) as unknown[];\n\t\t\t\t// deserialize bson (format of mongoexport) to json documents we can import to mongo\n\t\t\t\tconst jsonDocuments = this.bsonConverter.deserialize(bsonDocuments);\n\n\t\t\t\t// hint: collection drop/create is very slow, delete all documents instead\n\t\t\t\tconst collectionExists = await this.databaseManagementService.collectionExists(collectionName);\n\t\t\t\tif (collectionExists) {\n\t\t\t\t\t// clear existing documents, if collection exists\n\t\t\t\t\tawait this.databaseManagementService.clearCollection(collectionName);\n\t\t\t\t} else {\n\t\t\t\t\t// create collection\n\t\t\t\t\tawait this.databaseManagementService.createCollection(collectionName);\n\t\t\t\t}\n\n\t\t\t\t// import backuop data into database collection\n\t\t\t\tconst importedDocumentsAmount = await this.databaseManagementService.importCollection(\n\t\t\t\t\tcollectionName,\n\t\t\t\t\tjsonDocuments\n\t\t\t\t);\n\t\t\t\t// keep collection name and number of imported documents\n\t\t\t\tseededCollectionsWithAmount.push(`${collectionName}:${importedDocumentsAmount}`);\n\t\t\t})\n\t\t);\n\t\treturn seededCollectionsWithAmount;\n\t}\n\n\t/**\n\t * Exports all or defined  from database as bson to filesystem.\n\t * The behaviour should match $ mongoexport\n\t * @param collections optional filter applied on existing collections\n\t * @param toSeedFolder optional override existing seed data files\n\t * @returns the list of collection names exported\n\t */\n\tasync exportCollectionsToFileSystem(collections?: string[], toSeedFolder?: boolean): Promise {\n\t\tconst targetFolder = this.getTargetFolder(toSeedFolder);\n\t\tawait this.fileSystemAdapter.createDir(targetFolder);\n\t\t// detect collections to export based on database collections\n\t\tconst collectionsToExport = await this.loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\t\t'database',\n\t\t\ttargetFolder,\n\t\t\tcollections\n\t\t);\n\t\tconst exportedCollections: string[] = [];\n\n\t\tawait Promise.all(\n\t\t\tcollectionsToExport.map(async ({ filePath, collectionName }) => {\n\t\t\t\t// load json documents from collection\n\t\t\t\tconst jsonDocuments = await this.databaseManagementService.findDocumentsOfCollection(collectionName);\n\t\t\t\t// serialize to bson (format of mongoexport)\n\t\t\t\tconst bsonDocuments = this.bsonConverter.serialize(jsonDocuments);\n\t\t\t\t// sort results to have 'new' data added at documents end\n\t\t\t\tconst sortedBsonDocuments = orderBy(bsonDocuments, ['_id.$oid', 'createdAt.$date'], ['asc', 'asc']);\n\t\t\t\t// convert to text\n\t\t\t\tconst TAB = '\t';\n\t\t\t\tconst text = JSON.stringify(sortedBsonDocuments, undefined, TAB);\n\t\t\t\t// persist to filesystem\n\t\t\t\tawait this.fileSystemAdapter.writeFile(filePath, text + this.fileSystemAdapter.EOL);\n\t\t\t\t// keep collection name and number of exported documents\n\t\t\t\texportedCollections.push(`${collectionName}:${sortedBsonDocuments.length}`);\n\t\t\t})\n\t\t);\n\t\treturn exportedCollections;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICourseGroupProperties.html":{"url":"interfaces/ICourseGroupProperties.html","title":"interface - ICourseGroupProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICourseGroupProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/coursegroup.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            course\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            students\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        course\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        course:         Course\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Course\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        students\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        students:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Collection, ManyToMany, ManyToOne } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { User } from './user.entity';\nimport type { Course } from './course.entity';\n\nexport interface ICourseGroupProperties {\n\tcourse: Course;\n\tstudents?: User[];\n}\n\n@Entity({ tableName: 'coursegroups' })\nexport class CourseGroup extends BaseEntityWithTimestamps {\n\t@ManyToMany('User', undefined, { fieldName: 'userIds' })\n\tstudents = new Collection(this);\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse: Course;\n\n\tconstructor(props: ICourseGroupProperties) {\n\t\tsuper();\n\t\tthis.course = props.course;\n\t\tif (props.students) this.students.set(props.students);\n\t}\n\n\tgetParentId(): ObjectId {\n\t\treturn this.course._id;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICourseProperties.html":{"url":"interfaces/ICourseProperties.html","title":"interface - ICourseProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICourseProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/course.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            school\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            startDate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            students\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            substitutionTeachers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            teachers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            untilDate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        school:         School\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         School\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        students\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        students:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        substitutionTeachers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        substitutionTeachers:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teachers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teachers:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        untilDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        untilDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, Index, ManyToOne, ManyToMany, Collection } from '@mikro-orm/core';\n\nimport { ILearnroom } from '@shared/domain/interface';\nimport { LearnroomMetadata, LearnroomTypes } from '../types';\n\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { School } from './school.entity';\nimport type { User } from './user.entity';\n\nexport interface ICourseProperties {\n\tname?: string;\n\tdescription?: string;\n\tschool: School;\n\tstudents?: User[];\n\tteachers?: User[];\n\tsubstitutionTeachers?: User[];\n\t// TODO: color format\n\tcolor?: string;\n\tstartDate?: Date;\n\tuntilDate?: Date;\n}\n\n// that is really really shit default handling :D constructor, getter, js default, em default...what the hell\n// i hope it can cleanup with adding schema instant of I...Properties.\nconst DEFAULT = {\n\tcolor: '#ACACAC',\n\tname: 'Kurse',\n\tdescription: '',\n};\n\n@Index({ name: 'findAllForTeacher', properties: ['substitutionTeachers', 'teachers'] })\n@Index({ name: 'findAllByUserId', properties: ['students', 'substitutionTeachers', 'teachers'] })\n@Entity({ tableName: 'courses' })\nexport class Course extends BaseEntityWithTimestamps implements ILearnroom {\n\t@Property()\n\tname: string = DEFAULT.name;\n\n\t@Property()\n\tdescription: string = DEFAULT.description;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToMany('User', undefined, { fieldName: 'userIds' })\n\tstudents = new Collection(this);\n\n\t@ManyToMany('User', undefined, { fieldName: 'teacherIds' })\n\tteachers = new Collection(this);\n\n\t@ManyToMany('User', undefined, { fieldName: 'substitutionIds' })\n\tsubstitutionTeachers = new Collection(this);\n\n\t// TODO: string color format\n\t@Property()\n\tcolor: string = DEFAULT.color;\n\n\t@Property()\n\tstartDate?: Date;\n\n\t@Index({ name: 'activeCourses' })\n\t@Property()\n\tuntilDate?: Date;\n\n\tconstructor(props: ICourseProperties) {\n\t\tsuper();\n\t\tif (props.name) this.name = props.name;\n\t\tif (props.description) this.description = props.description;\n\t\tthis.school = props.school;\n\t\tif (props.students) this.students.set(props.students);\n\t\tif (props.teachers) this.teachers.set(props.teachers);\n\t\tif (props.substitutionTeachers) this.substitutionTeachers.set(props.substitutionTeachers);\n\t\tif (props.color) this.color = props.color;\n\t\tif (props.untilDate) this.untilDate = props.untilDate;\n\t\tif (props.startDate) this.startDate = props.startDate;\n\t}\n\n\tgetNumberOfStudents(): number {\n\t\treturn this.students.length;\n\t}\n\n\tisFinished(): boolean {\n\t\tif (!this.untilDate) {\n\t\t\treturn false;\n\t\t}\n\t\tconst isFinished = this.untilDate \n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICreateNews.html":{"url":"interfaces/ICreateNews.html","title":"interface - ICreateNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICreateNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/types/news.types.ts\n        \n\n\n            \n                Description\n            \n            \n                news interface for ceating news\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            displayAt\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from './entity-id';\nimport type { Course } from '../entity/course.entity';\nimport type { School } from '../entity/school.entity';\nimport type { Team } from '../entity/team.entity';\n\nexport enum NewsTargetModel {\n\t'School' = 'schools',\n\t'Course' = 'courses',\n\t'Team' = 'teams',\n}\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt?: Date;\n\ttarget: { targetModel: NewsTargetModel; targetId: EntityId };\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** interface for finding news with optional targetId */\nexport interface INewsScope {\n\ttarget?: { targetModel: NewsTargetModel; targetId?: EntityId };\n\tunpublished?: boolean;\n}\n\nexport type NewsTarget = School | Team | Course;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICurrentUser.html":{"url":"interfaces/ICurrentUser.html","title":"interface - ICurrentUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICurrentUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accountId\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            schoolId\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accountId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accountId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    account id as string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users role ids as string[]\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        schoolId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users schoolId as string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         IResolvedUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IResolvedUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    authenticated users id\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import type { Role } from '../entity/role.entity';\n\nexport interface IRole {\n\tname: string;\n\n\tid: string;\n}\n\nexport interface IResolvedUser {\n\tfirstName: string;\n\n\tlastName: string;\n\n\tid: string;\n\n\tcreatedAt: Date;\n\n\tupdatedAt: Date;\n\n\troles: IRole[];\n\n\tpermissions: string[];\n\n\tschoolId: string;\n}\n\nexport interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n\n\tuser: IResolvedUser;\n}\n\nexport type IPermissionsAndRoles = {\n\tpermissions: string[];\n\troles: Role[];\n};\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDashboardModelProperties.html":{"url":"interfaces/IDashboardModelProperties.html","title":"interface - IDashboardModelProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDashboardModelProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.model.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            gridElements\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gridElements\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gridElements:         DashboardGridElementModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DashboardGridElementModel[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n\tEntity,\n\tProperty,\n\tManyToOne,\n\tOneToMany,\n\tManyToMany,\n\tCollection,\n\tIdentifiedReference,\n\twrap,\n} from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from '@shared/domain/entity/base.entity';\nimport { User } from './user.entity';\nimport { Course } from './course.entity';\n\nexport interface DashboardGridElementModelProperties {\n\tid?: string;\n\ttitle?: string;\n\txPos: number;\n\tyPos: number;\n\treferences: Course[];\n\tdashboard: DashboardModelEntity;\n}\n\n@Entity({ tableName: 'dashboardelement' })\nexport class DashboardGridElementModel extends BaseEntityWithTimestamps {\n\tconstructor({ id, title, xPos, yPos, references, dashboard }: DashboardGridElementModelProperties) {\n\t\tsuper();\n\t\tif (id) {\n\t\t\tthis._id = ObjectId.createFromHexString(id);\n\t\t\tthis.id = id;\n\t\t}\n\t\tthis.title = title;\n\t\tthis.xPos = xPos;\n\t\tthis.yPos = yPos;\n\t\tthis.references.set(references);\n\t\tthis.dashboard = wrap(dashboard).toReference();\n\t}\n\n\t@Property()\n\ttitle?: string;\n\n\t@Property()\n\txPos: number;\n\n\t@Property()\n\tyPos: number;\n\n\t@ManyToMany('Course', undefined, { fieldName: 'referenceIds' })\n\treferences = new Collection(this);\n\n\t@ManyToOne('DashboardModelEntity', { wrappedReference: true })\n\tdashboard: IdentifiedReference;\n}\n\nexport interface IDashboardModelProperties {\n\tid: string;\n\tuser: User;\n\tgridElements?: DashboardGridElementModel[];\n}\n\n@Entity({ tableName: 'dashboard' })\nexport class DashboardModelEntity extends BaseEntityWithTimestamps {\n\tconstructor(props: IDashboardModelProperties) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(props.id);\n\t\tthis.id = props.id;\n\t\tthis.user = wrap(props.user).toReference();\n\t\tif (props.gridElements) this.gridElements.set(props.gridElements);\n\t}\n\n\t@OneToMany('DashboardGridElementModel', 'dashboard')\n\tgridElements: Collection = new Collection(this);\n\n\t// userId\n\t@ManyToOne('User', { fieldName: 'userId', wrappedReference: true })\n\tuser: IdentifiedReference;\n\n\t// sizetype\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDashboardRepo.html":{"url":"interfaces/IDashboardRepo.html","title":"interface - IDashboardRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDashboardRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/dashboard/dashboard.repo.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getDashboardById\n                                    \n                                \n                                \n                                    \n                                        getUsersDashboard\n                                    \n                                \n                                \n                                    \n                                        persistAndFlush\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDashboardById\n                        \n                    \n                \n            \n            \n                \ngetDashboardById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.repo.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsersDashboard\n                        \n                    \n                \n            \n            \n                \ngetUsersDashboard(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.repo.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \npersistAndFlush(entity: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.repo.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, DashboardEntity, GridElementWithPosition, DashboardModelEntity } from '@shared/domain';\nimport { EntityManager, ObjectId } from '@mikro-orm/mongodb';\nimport { DashboardModelMapper } from './dashboard.model.mapper';\n\nconst generateEmptyDashboard = (userId: EntityId) => {\n\tconst gridArray: GridElementWithPosition[] = [];\n\n\tconst dashboard = new DashboardEntity(new ObjectId().toString(), { grid: gridArray, userId });\n\treturn dashboard;\n};\n\nexport interface IDashboardRepo {\n\tgetUsersDashboard(userId: EntityId): Promise;\n\tgetDashboardById(id: EntityId): Promise;\n\tpersistAndFlush(entity: DashboardEntity): Promise;\n}\n\n@Injectable()\nexport class DashboardRepo implements IDashboardRepo {\n\tconstructor(protected readonly em: EntityManager, protected readonly mapper: DashboardModelMapper) {}\n\n\t// ToDo: refactor this to be in an abstract class (see baseRepo)\n\tasync persist(entity: DashboardEntity): Promise {\n\t\tconst modelEntity = await this.mapper.mapDashboardToModel(entity);\n\t\tthis.em.persist(modelEntity);\n\t\treturn this.mapper.mapDashboardToEntity(modelEntity);\n\t}\n\n\tasync persistAndFlush(entity: DashboardEntity): Promise {\n\t\tconst modelEntity = await this.mapper.mapDashboardToModel(entity);\n\t\tawait this.em.persistAndFlush(modelEntity);\n\t\treturn this.mapper.mapDashboardToEntity(modelEntity);\n\t}\n\n\tasync getDashboardById(id: EntityId): Promise {\n\t\tconst dashboardModel = await this.em.findOneOrFail(DashboardModelEntity, id);\n\t\tconst dashboard = await this.mapper.mapDashboardToEntity(dashboardModel);\n\t\treturn dashboard;\n\t}\n\n\tasync getUsersDashboard(userId: EntityId): Promise {\n\t\tconst dashboardModel = await this.em.findOne(DashboardModelEntity, { user: userId });\n\t\tif (dashboardModel) {\n\t\t\treturn this.mapper.mapDashboardToEntity(dashboardModel);\n\t\t}\n\n\t\tconst dashboard = generateEmptyDashboard(userId);\n\t\tawait this.persistAndFlush(dashboard);\n\n\t\treturn dashboard;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IErrorType.html":{"url":"interfaces/IErrorType.html","title":"interface - IErrorType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IErrorType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/error-type.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            defaultMessage\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        defaultMessage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IErrorType {\n\treadonly type: string;\n\treadonly title: string;\n\treadonly defaultMessage: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFileProperties.html":{"url":"interfaces/IFileProperties.html","title":"interface - IFileProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFileProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/file.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bucket\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            creator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            deletedAt\n                                        \n                                \n                                \n                                        \n                                            storageFileName\n                                        \n                                \n                                \n                                        \n                                            storageProvider\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bucket\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bucket:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deletedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deletedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storageFileName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        storageFileName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storageProvider\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        storageProvider:         StorageProvider\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StorageProvider\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, ManyToOne } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { StorageProvider } from './storageprovider.entity';\nimport type { User } from './user.entity';\n\nexport interface IFileProperties {\n\tdeletedAt?: Date;\n\tstorageFileName: string;\n\tbucket: string;\n\tstorageProvider: StorageProvider;\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorColumn: 'isDirectory', abstract: true })\nexport abstract class BaseFile extends BaseEntityWithTimestamps {\n\t@Property()\n\tdeletedAt?: Date;\n\n\t@Property()\n\tisDirectory!: boolean;\n\n\t@Property()\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorValue: 'true' })\nexport class Directory extends BaseFile {}\n\n@Entity({ collection: 'files', discriminatorValue: 'false' })\nexport class File extends BaseFile {\n\t@Property()\n\tstorageFileName: string;\n\n\t@Property()\n\tbucket: string;\n\n\t@ManyToOne('StorageProvider', { fieldName: 'storageProviderId' })\n\tstorageProvider: StorageProvider;\n\n\tconstructor(props: IFileProperties) {\n\t\tsuper();\n\t\tthis.isDirectory = false;\n\t\tthis.deletedAt = props.deletedAt;\n\t\tthis.storageFileName = props.storageFileName;\n\t\tthis.bucket = props.bucket;\n\t\tthis.storageProvider = props.storageProvider;\n\t\tthis.creator = props.creator;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFindOptions.html":{"url":"interfaces/IFindOptions.html","title":"interface - IFindOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFindOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/find-options.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            order\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pagination\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        order:         SortOrderMap\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SortOrderMap\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pagination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pagination:         IPagination\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IPagination\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPagination {\n\tskip?: number;\n\tlimit?: number;\n}\n\nexport enum SortOrder {\n\tasc = 'asc',\n\tdesc = 'desc',\n}\n\nexport type SortOrderMap = Partial>;\n\nexport interface IFindOptions {\n\tpagination?: IPagination;\n\torder?: SortOrderMap;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGridElement.html":{"url":"interfaces/IGridElement.html","title":"interface - IGridElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IGridElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            getContent\n                                        \n                                \n                                \n                                        \n                                            getId\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        addReferences\n                                    \n                                \n                                \n                                    \n                                        getReferences\n                                    \n                                \n                                \n                                    \n                                        hasId\n                                    \n                                \n                                \n                                    \n                                        isGroup\n                                    \n                                \n                                \n                                    \n                                        removeReference\n                                    \n                                \n                                \n                                    \n                                        removeReferenceByIndex\n                                    \n                                \n                                \n                                    \n                                        setGroupName\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addReferences\n                        \n                    \n                \n            \n            \n                \naddReferences(anotherReference: ILearnroom[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    anotherReference\n                                    \n                                                ILearnroom[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferences\n                        \n                    \n                \n            \n            \n                \ngetReferences()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ILearnroom[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasId\n                        \n                    \n                \n            \n            \n                \nhasId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isGroup\n                        \n                    \n                \n            \n            \n                \nisGroup()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeReference\n                        \n                    \n                \n            \n            \n                \nremoveReference(reference: ILearnroom)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reference\n                                    \n                                                ILearnroom\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeReferenceByIndex\n                        \n                    \n                \n            \n            \n                \nremoveReferenceByIndex(index: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setGroupName\n                        \n                    \n                \n            \n            \n                \nsetGroupName(newGroupName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newGroupName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        getContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getContent:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getId:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NotFoundException, BadRequestException } from '@nestjs/common';\nimport { EntityId, LearnroomMetadata } from '@shared/domain/types';\nimport { ILearnroom } from '@shared/domain/interface';\n\nconst defaultColumns = 4;\n\nexport interface IGridElement {\n\thasId(): boolean;\n\n\tgetId: () => EntityId | undefined;\n\n\tgetContent: () => GridElementContent;\n\n\tisGroup(): boolean;\n\n\tremoveReferenceByIndex(index: number): void;\n\n\tremoveReference(reference: ILearnroom): void;\n\n\tgetReferences(): ILearnroom[];\n\n\taddReferences(anotherReference: ILearnroom[]): void;\n\n\tsetGroupName(newGroupName: string): void;\n}\n\nexport type GridElementContent = {\n\treferencedId?: string;\n\ttitle?: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n\tgroup?: LearnroomMetadata[];\n\tgroupId?: string;\n};\n\nexport class GridElement implements IGridElement {\n\tid?: EntityId;\n\n\ttitle?: string;\n\n\tprivate sortReferences = (a: ILearnroom, b: ILearnroom) => {\n\t\tconst titleA = a.getMetadata().title;\n\t\tconst titleB = b.getMetadata().title;\n\t\tif (titleA  titleB) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t};\n\n\tprivate constructor(props: { id?: EntityId; title?: string; references: ILearnroom[] }) {\n\t\tif (props.id) this.id = props.id;\n\t\tif (props.title) this.title = props.title;\n\t\tthis.references = props.references.sort(this.sortReferences);\n\t}\n\n\tstatic FromPersistedReference(id: EntityId, reference: ILearnroom): GridElement {\n\t\treturn new GridElement({ id, references: [reference] });\n\t}\n\n\tstatic FromPersistedGroup(id: EntityId, title: string | undefined, group: ILearnroom[]): GridElement {\n\t\treturn new GridElement({ id, title, references: group });\n\t}\n\n\tstatic FromSingleReference(reference: ILearnroom): GridElement {\n\t\treturn new GridElement({ references: [reference] });\n\t}\n\n\tstatic FromGroup(title: string, references: ILearnroom[]): GridElement {\n\t\treturn new GridElement({ title, references });\n\t}\n\n\treferences: ILearnroom[];\n\n\thasId(): boolean {\n\t\treturn !!this.id;\n\t}\n\n\tgetId(): EntityId | undefined {\n\t\treturn this.id;\n\t}\n\n\tgetReferences(): ILearnroom[] {\n\t\treturn this.references;\n\t}\n\n\tremoveReferenceByIndex(index: number): void {\n\t\tif (!this.isGroup()) {\n\t\t\tthrow new BadRequestException('this element is not a group.');\n\t\t}\n\t\tif (index > 0 && this.references.length  reference.getMetadata());\n\t\tconst checkShortTitle = this.title ? this.title.substr(0, 2) : '';\n\t\tconst groupMetadata = {\n\t\t\tgroupId: this.getId(),\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: checkShortTitle,\n\t\t\tdisplayColor: 'exampleColor',\n\t\t\tgroup: groupData,\n\t\t};\n\t\treturn groupMetadata;\n\t}\n\n\tisGroup(): boolean {\n\t\treturn this.references.length > 1;\n\t}\n\n\tsetGroupName(newGroupName: string): void {\n\t\tif (!this.isGroup()) {\n\t\t\treturn;\n\t\t}\n\t\tthis.title = newGroupName;\n\t}\n}\n\nexport type GridPosition = { x: number; y: number };\nexport type GridPositionWithGroupIndex = { x: number; y: number; groupIndex?: number };\n\nexport type GridElementWithPosition = {\n\tgridElement: IGridElement;\n\tpos: GridPosition;\n};\n\nexport type DashboardProps = { colums?: number; grid: GridElementWithPosition[]; userId: EntityId };\n\nexport class DashboardEntity {\n\tid: EntityId;\n\n\tcolumns: number;\n\n\tgrid: Map;\n\n\tuserId: EntityId;\n\n\tprivate gridIndexFromPosition(pos: GridPosition): number {\n\t\tif (pos.x > this.columns) {\n\t\t\tthrow new BadRequestException('dashboard element position is outside the grid.');\n\t\t}\n\t\treturn this.columns * pos.y + pos.x;\n\t}\n\n\tprivate positionFromGridIndex(index: number): GridPosition {\n\t\tconst y = Math.floor(index / this.columns);\n\t\tconst x = index % this.columns;\n\t\treturn { x, y };\n\t}\n\n\tconstructor(id: string, props: DashboardProps) {\n\t\tthis.columns = props.colums || defaultColumns;\n\t\tthis.grid = new Map();\n\t\tprops.grid.forEach((element) => {\n\t\t\tthis.grid.set(this.gridIndexFromPosition(element.pos), element.gridElement);\n\t\t});\n\t\tthis.id = id;\n\t\tthis.userId = props.userId;\n\t\tObject.assign(this, {});\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetUserId(): EntityId {\n\t\treturn this.userId;\n\t}\n\n\tgetGrid(): GridElementWithPosition[] {\n\t\tconst result = [...this.grid.keys()].map((key) => {\n\t\t\tconst position = this.positionFromGridIndex(key);\n\t\t\tconst value = this.grid.get(key) as IGridElement;\n\t\t\treturn {\n\t\t\t\tpos: position,\n\t\t\t\tgridElement: value,\n\t\t\t};\n\t\t});\n\t\treturn result;\n\t}\n\n\tgetElement(position: GridPosition): IGridElement {\n\t\tconst element = this.grid.get(this.gridIndexFromPosition(position));\n\t\tif (!element) {\n\t\t\tthrow new NotFoundException('no element at grid position');\n\t\t}\n\t\treturn element;\n\t}\n\n\tmoveElement(from: GridPositionWithGroupIndex, to: GridPositionWithGroupIndex): GridElementWithPosition {\n\t\tconst elementToMove = this.getReferencesFromPosition(from);\n\t\tconst resultElement = this.mergeElementIntoPosition(elementToMove, to);\n\t\tthis.removeFromPosition(from);\n\t\treturn {\n\t\t\tpos: to,\n\t\t\tgridElement: resultElement,\n\t\t};\n\t}\n\n\tsetLearnRooms(rooms: ILearnroom[]): void {\n\t\tthis.removeRoomsNotInList(rooms);\n\t\tconst newRooms = this.determineNewRoomsIn(rooms);\n\n\t\tnewRooms.forEach((room) => {\n\t\t\tthis.addRoom(room);\n\t\t});\n\t}\n\n\tprivate removeRoomsNotInList(roomList: ILearnroom[]): void {\n\t\t[...this.grid.keys()].forEach((key) => {\n\t\t\tconst element = this.grid.get(key) as IGridElement;\n\t\t\tconst currentRooms = element.getReferences();\n\t\t\tcurrentRooms.forEach((room) => {\n\t\t\t\tif (!roomList.includes(room)) {\n\t\t\t\t\telement.removeReference(room);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (element.getReferences().length === 0) {\n\t\t\t\tthis.grid.delete(key);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate determineNewRoomsIn(rooms: ILearnroom[]): ILearnroom[] {\n\t\tconst result: ILearnroom[] = [];\n\t\tconst existingRooms = this.allRooms();\n\t\trooms.forEach((room) => {\n\t\t\tif (!existingRooms.includes(room)) {\n\t\t\t\tresult.push(room);\n\t\t\t}\n\t\t});\n\t\treturn result;\n\t}\n\n\tprivate allRooms(): ILearnroom[] {\n\t\tconst elements = [...this.grid.values()];\n\t\tconst references = elements\n\t\t\t.map((el) => {\n\t\t\t\treturn el.getReferences();\n\t\t\t})\n\t\t\t.flat();\n\t\treturn references;\n\t}\n\n\tprivate addRoom(room: ILearnroom): void {\n\t\tconst index = this.getFirstOpenIndex();\n\t\tconst newElement = GridElement.FromSingleReference(room);\n\t\tthis.grid.set(index, newElement);\n\t}\n\n\tprivate getFirstOpenIndex(): number {\n\t\tlet i = 0;\n\t\twhile (this.grid.get(i) !== undefined) {\n\t\t\ti += 1;\n\t\t}\n\t\treturn i;\n\t}\n\n\tprivate getReferencesFromPosition(position: GridPositionWithGroupIndex): IGridElement {\n\t\tconst elementToMove = this.getElement(position);\n\n\t\tif (typeof position.groupIndex === 'number' && elementToMove.isGroup()) {\n\t\t\tconst references = elementToMove.getReferences();\n\t\t\tconst referenceForIndex = references[position.groupIndex];\n\t\t\treturn GridElement.FromSingleReference(referenceForIndex);\n\t\t}\n\n\t\treturn elementToMove;\n\t}\n\n\tprivate removeFromPosition(position: GridPositionWithGroupIndex): void {\n\t\tconst element = this.getElement(position);\n\t\tif (typeof position.groupIndex === 'number') {\n\t\t\telement.removeReferenceByIndex(position.groupIndex);\n\t\t} else {\n\t\t\tthis.grid.delete(this.gridIndexFromPosition(position));\n\t\t}\n\t}\n\n\tprivate mergeElementIntoPosition(element: IGridElement, position: GridPosition): IGridElement {\n\t\tconst targetElement = this.grid.get(this.gridIndexFromPosition(position));\n\t\tif (targetElement) {\n\t\t\ttargetElement.addReferences(element.getReferences());\n\t\t\treturn targetElement;\n\t\t}\n\t\tthis.grid.set(this.gridIndexFromPosition(position), element);\n\t\treturn element;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IImportUserProperties.html":{"url":"interfaces/IImportUserProperties.html","title":"interface - IImportUserProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IImportUserProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/import-user.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            classNames\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            flagged\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            ldapDn\n                                        \n                                \n                                \n                                        \n                                            ldapId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            match\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            roleNames\n                                        \n                                \n                                \n                                        \n                                            school\n                                        \n                                \n                                \n                                        \n                                            system\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classNames\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        classNames:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        flagged\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        flagged:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ldapDn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ldapDn:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ldapId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ldapId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        match\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        match:         UserMatch\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserMatch\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roleNames\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roleNames:         RoleName[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RoleName[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        school:         School\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         School\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        system\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        system:         System\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         System\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n\tEmbeddable,\n\tEmbedded,\n\tEntity,\n\tEnum,\n\tIdentifiedReference,\n\tManyToOne,\n\tProperty,\n\tReference,\n} from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { School } from './school.entity';\nimport { System } from './system.entity';\nimport type { User } from './user.entity';\n\nexport interface IImportUserProperties {\n\t// references\n\tschool: School;\n\tsystem: System;\n\t// external identifiers\n\tldapDn: string;\n\tldapId: string;\n\t// descriptive properties\n\tfirstName: string;\n\tlastName: string;\n\temail: string; // TODO VO\n\troleNames?: RoleName[];\n\tclassNames?: string[];\n\tmatch?: UserMatch;\n\tflagged?: boolean;\n}\n\n// class EMailVO {\n// \t_email: string;\n\n// \tset email(value: string) {\n// \t\tthis._email = value.toLowerCase();\n// \t}\n\n// \tget email(): string {\n// \t\treturn this._email;\n// \t}\n\n// \tconstructor(value: string) {\n// \t\tthis._email = value.toLowerCase();\n// \t}\n// }\n\nexport enum MatchCreator {\n\tAUTO = 'auto',\n\tMANUAL = 'admin',\n}\nexport enum RoleName {\n\tSTUDENT = 'student',\n\tTEACHER = 'teacher',\n\tADMIN = 'admin',\n}\n\n@Embeddable()\nexport class UserMatch extends BaseEntityWithTimestamps {\n\tconstructor(props: UserMatch) {\n\t\tsuper();\n\t\tthis.user = props.user;\n\t\tthis.matchedBy = props.matchedBy;\n\t}\n\n\t@Property({ fieldName: 'userId' })\n\tuser: User;\n\n\t@Enum({ fieldName: 'matchedBy' })\n\tmatchedBy: MatchCreator;\n}\n\n@Entity({ tableName: 'importUser' })\nexport class ImportUser extends BaseEntityWithTimestamps {\n\t@ManyToOne(() => 'School', { wrappedReference: true, lazy: true })\n\tschool: IdentifiedReference;\n\n\t@ManyToOne(() => 'System', { wrappedReference: true, lazy: true })\n\tsystem: IdentifiedReference;\n\n\t@Property()\n\tldapDn: string;\n\n\t@Property()\n\tldapId: string;\n\n\t@Property()\n\tfirstName: string;\n\n\t@Property()\n\tlastName: string;\n\n\t@Property()\n\t/**\n\t * Lowercase email string // TODO VO\n\t */\n\temail: string;\n\n\t@Enum({ fieldName: 'roles' })\n\troleNames: RoleName[] = [];\n\n\t@Property()\n\tclassNames: string[] = [];\n\n\t@Embedded({ entity: () => UserMatch, object: true })\n\tmatch?: UserMatch;\n\n\t@Property()\n\tflagged = false;\n\n\tconstructor(props: IImportUserProperties) {\n\t\tsuper();\n\t\tthis.school = Reference.create(props.school);\n\t\tthis.system = Reference.create(props.system);\n\t\tthis.ldapDn = props.ldapDn;\n\t\tthis.ldapId = props.ldapId;\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.email = props.email;\n\t\tif (Array.isArray(props.roleNames) && props.roleNames.length > 0) this.roleNames.push(...props.roleNames);\n\t\tif (Array.isArray(props.classNames) && props.classNames.length > 0) this.classNames.push(...props.classNames);\n\t\tif (props.match) this.match = props.match;\n\t\tif (props.flagged && props.flagged === true) this.flagged = true;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILearnroom.html":{"url":"interfaces/ILearnroom.html","title":"interface - ILearnroom","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILearnroom\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/learnroom.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            getMetadata\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        getMetadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getMetadata:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LearnroomMetadata } from '@shared/domain/types';\n\nexport interface ILearnroom {\n\tgetMetadata: () => LearnroomMetadata;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILessonProperties.html":{"url":"interfaces/ILessonProperties.html","title":"interface - ILessonProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILessonProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/lesson.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            course\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hidden\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        course\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        course:         Course\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Course\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, ManyToOne, Property, Index } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\n\nexport interface ILessonProperties {\n\tname: string;\n\thidden?: boolean;\n\tcourse: Course;\n}\n\n@Entity({ tableName: 'lessons' })\nexport class Lesson extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Index({ name: 'findAllByCourseIds' })\n\t@Property()\n\thidden = false;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse: Course;\n\n\tconstructor(props: ILessonProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tif (props.hidden !== undefined) this.hidden = props.hidden;\n\t\tthis.course = props.course;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILogger.html":{"url":"interfaces/ILogger.html","title":"interface - ILogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Optional\n                                    \n                                        debug\n                                    \n                                \n                                \n                                    \n                                        error\n                                    \n                                \n                                \n                                    \n                                        log\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        verbose\n                                    \n                                \n                                \n                                    \n                                        warn\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: any, trace?: string, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    trace\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        verbose\n                        \n                    \n                \n            \n            \n                \nverbose(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface ILogger {\n\tlog(message: any, context?: string): any;\n\terror(message: any, trace?: string, context?: string): any;\n\twarn(message: any, context?: string): any;\n\tdebug?(message: any, context?: string): any;\n\tverbose?(message: any, context?: string): any;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsProperties.html":{"url":"interfaces/INewsProperties.html","title":"interface - INewsProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  INewsProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/news.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            creator\n                                        \n                                \n                                \n                                        \n                                            displayAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            externalId\n                                        \n                                \n                                \n                                        \n                                            school\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            source\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sourceDescription\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updater\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator:         EntityId | User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId | User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        externalId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        externalId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        school:         EntityId | School\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId | School\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source:     \"internal\" | \"rss\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"internal\" | \"rss\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sourceDescription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sourceDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         EntityId | NewsTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId | NewsTarget\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updater\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updater:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { School } from './school.entity';\nimport type { Team } from './team.entity';\nimport type { User } from './user.entity';\nimport { NewsTarget, NewsTargetModel } from '../types/news.types';\nimport { EntityId } from '../types';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId | School;\n\tcreator: EntityId | User;\n\ttarget: EntityId | NewsTarget;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: User;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTarget;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel!: NewsTargetModel;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToOne('User', { fieldName: 'creatorId' })\n\tcreator!: User;\n\n\t@ManyToOne('User', { fieldName: 'updaterId' })\n\tupdater?: User;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, updater: props.updater, target: props.target });\n\t\tthis.externalId = props.externalId;\n\t\tthis.source = props.source;\n\t\tthis.sourceDescription = props.sourceDescription;\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne('School')\n\ttarget!: School;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne('Course')\n\ttarget!: Course;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne('Team')\n\ttarget!: Team;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsScope.html":{"url":"interfaces/INewsScope.html","title":"interface - INewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  INewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/types/news.types.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for finding news with optional targetId\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            target\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            unpublished\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unpublished\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unpublished:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from './entity-id';\nimport type { Course } from '../entity/course.entity';\nimport type { School } from '../entity/school.entity';\nimport type { Team } from '../entity/team.entity';\n\nexport enum NewsTargetModel {\n\t'School' = 'schools',\n\t'Course' = 'courses',\n\t'Team' = 'teams',\n}\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt?: Date;\n\ttarget: { targetModel: NewsTargetModel; targetId: EntityId };\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** interface for finding news with optional targetId */\nexport interface INewsScope {\n\ttarget?: { targetModel: NewsTargetModel; targetId?: EntityId };\n\tunpublished?: boolean;\n}\n\nexport type NewsTarget = School | Team | Course;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPagination.html":{"url":"interfaces/IPagination.html","title":"interface - IPagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/find-options.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            limit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            skip\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPagination {\n\tskip?: number;\n\tlimit?: number;\n}\n\nexport enum SortOrder {\n\tasc = 'asc',\n\tdesc = 'desc',\n}\n\nexport type SortOrderMap = Partial>;\n\nexport interface IFindOptions {\n\tpagination?: IPagination;\n\torder?: SortOrderMap;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IResolvedUser.html":{"url":"interfaces/IResolvedUser.html","title":"interface - IResolvedUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IResolvedUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            schoolId\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         IRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IRole[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        schoolId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { Role } from '../entity/role.entity';\n\nexport interface IRole {\n\tname: string;\n\n\tid: string;\n}\n\nexport interface IResolvedUser {\n\tfirstName: string;\n\n\tlastName: string;\n\n\tid: string;\n\n\tcreatedAt: Date;\n\n\tupdatedAt: Date;\n\n\troles: IRole[];\n\n\tpermissions: string[];\n\n\tschoolId: string;\n}\n\nexport interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n\n\tuser: IResolvedUser;\n}\n\nexport type IPermissionsAndRoles = {\n\tpermissions: string[];\n\troles: Role[];\n};\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRole.html":{"url":"interfaces/IRole.html","title":"interface - IRole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { Role } from '../entity/role.entity';\n\nexport interface IRole {\n\tname: string;\n\n\tid: string;\n}\n\nexport interface IResolvedUser {\n\tfirstName: string;\n\n\tlastName: string;\n\n\tid: string;\n\n\tcreatedAt: Date;\n\n\tupdatedAt: Date;\n\n\troles: IRole[];\n\n\tpermissions: string[];\n\n\tschoolId: string;\n}\n\nexport interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n\n\tuser: IResolvedUser;\n}\n\nexport type IPermissionsAndRoles = {\n\tpermissions: string[];\n\troles: Role[];\n};\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRoleProperties.html":{"url":"interfaces/IRoleProperties.html","title":"interface - IRoleProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRoleProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/role.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            permissions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            roles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         Role[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, Unique, Index, ManyToMany, Collection } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface IRoleProperties {\n\tpermissions?: string[];\n\troles?: Role[];\n\tname: string;\n}\n\n@Entity({ tableName: 'roles' })\nexport class Role extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'primaryRoleSearchOperation' })\n\t@Unique()\n\tname: string;\n\n\t// @Enum({ items: ['a', 'b', 'c'] }) in array with no permission is valid => validator function\n\t@Property()\n\tpermissions: string[] = [];\n\t// TODO: enum\n\n\t// @ManyToMany('Role', 'roles')\n\t// roles = new Collection(this);\n\n\t// @ManyToMany({ fieldName: 'roles', type: Role })\n\t// roles = new Collection(this);\n\n\t@ManyToMany({ entity: 'Role' })\n\troles = new Collection(this);\n\n\tconstructor(props: IRoleProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tif (props.permissions) this.permissions = props.permissions;\n\t\tif (props.roles) this.roles.set(props.roles);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISchoolProperties.html":{"url":"interfaces/ISchoolProperties.html","title":"interface - ISchoolProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISchoolProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/school.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from './base.entity';\n\nexport interface ISchoolProperties {\n\tname: string;\n}\n@Entity({ tableName: 'schools' })\nexport class School extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: ISchoolProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IStorageProviderProperties.html":{"url":"interfaces/IStorageProviderProperties.html","title":"interface - IStorageProviderProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IStorageProviderProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/storageprovider.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessKeyId\n                                        \n                                \n                                \n                                        \n                                            endpointUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            region\n                                        \n                                \n                                \n                                        \n                                            secretAccessKey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessKeyId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessKeyId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endpointUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endpointUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        region\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        region:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secretAccessKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secretAccessKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { EncryptedStringType } from '@shared/repo/types/EncryptedString.type';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface IStorageProviderProperties {\n\tendpointUrl: string;\n\taccessKeyId: string;\n\tsecretAccessKey: string;\n\tregion?: string;\n}\n\n@Entity({ tableName: 'storageproviders' })\nexport class StorageProvider extends BaseEntityWithTimestamps {\n\t@Property()\n\tendpointUrl!: string;\n\n\t@Property()\n\taccessKeyId!: string;\n\n\t@Property({ fieldName: 'secretAccessKey', type: EncryptedStringType })\n\tsecretAccessKey!: string;\n\n\t@Property()\n\tregion?: string;\n\n\tconstructor(props: IStorageProviderProperties) {\n\t\tsuper();\n\t\tthis.endpointUrl = props.endpointUrl;\n\t\tthis.accessKeyId = props.accessKeyId;\n\t\tthis.secretAccessKey = props.secretAccessKey;\n\t\tthis.region = props.region;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISubmissionProperties.html":{"url":"interfaces/ISubmissionProperties.html","title":"interface - ISubmissionProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISubmissionProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/submission.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            comment\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            courseGroup\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            grade\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            gradeComment\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            gradeFiles\n                                        \n                                \n                                \n                                        \n                                            student\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            studentFiles\n                                        \n                                \n                                \n                                        \n                                            task\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            teamMembers\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        courseGroup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        courseGroup:         CourseGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CourseGroup[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        grade\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        grade:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gradeComment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gradeComment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gradeFiles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gradeFiles:         File[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         File[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        student\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        student:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        studentFiles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        studentFiles:         File[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         File[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task:         Task\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Task\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teamMembers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teamMembers:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, ManyToOne, Collection, Property, ManyToMany } from '@mikro-orm/core';\n\nimport { EntityId } from '../types';\n\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { CourseGroup } from './coursegroup.entity';\nimport type { User } from './user.entity';\nimport type { File } from './file.entity';\nimport type { Task } from './task.entity';\n\nexport interface ISubmissionProperties {\n\ttask: Task;\n\tstudent: User;\n\tcourseGroup?: CourseGroup[];\n\tteamMembers?: User[];\n\tcomment: string;\n\tstudentFiles?: File[];\n\tgrade?: number;\n\tgradeComment?: string;\n\tgradeFiles?: File[];\n}\n\n@Entity({ tableName: 'submissions' })\nexport class Submission extends BaseEntityWithTimestamps {\n\t@ManyToOne('Task', { fieldName: 'homeworkId' })\n\ttask: Task;\n\n\t@ManyToOne('User', { fieldName: 'studentId' })\n\tstudent: User;\n\n\t@ManyToOne('CourseGroup', { fieldName: 'courseGroupId' })\n\tcourseGroup?: CourseGroup;\n\n\t@ManyToMany('User', undefined, { fieldName: 'teamMembers' })\n\tteamMembers = new Collection(this);\n\n\t/* ***** student uploads ***** */\n\t@Property()\n\tcomment: string | null;\n\n\t@ManyToMany('File', undefined, { fieldName: 'fileIds' })\n\tstudentFiles = new Collection(this);\n\n\t/* ***** teacher uploads ***** */\n\t@Property()\n\tgrade: number | null;\n\n\t@Property()\n\tgradeComment: string | null;\n\n\t@ManyToMany('File', undefined, { fieldName: 'gradeFileIds' })\n\tgradeFiles = new Collection(this);\n\n\tconstructor(props: ISubmissionProperties) {\n\t\tsuper();\n\t\tthis.student = props.student;\n\t\tthis.comment = props.comment;\n\t\tthis.task = props.task;\n\n\t\tthis.grade = props.grade || null;\n\t\tthis.gradeComment = props.gradeComment || null;\n\n\t\tconst { courseGroup, teamMembers, studentFiles, gradeFiles } = props;\n\t\tObject.assign(this, { courseGroup, teamMembers, studentFiles, gradeFiles });\n\t}\n\n\tisGraded(): boolean {\n\t\tconst isGraded =\n\t\t\t(typeof this.grade === 'number' && this.grade >= 0) ||\n\t\t\t(typeof this.gradeComment === 'string' && this.gradeComment.length > 0) ||\n\t\t\t(this.gradeFiles !== undefined && this.gradeFiles.length > 0);\n\t\treturn isGraded;\n\t}\n\n\tgetStudentId(): EntityId {\n\t\treturn this.student.id;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITaskProperties.html":{"url":"interfaces/ITaskProperties.html","title":"interface - ITaskProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITaskProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/task.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            availableDate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            course\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            creator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dueDate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            finished\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lesson\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            private\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            submissions\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        availableDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        availableDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        course:         Course\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Course\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dueDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dueDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        finished\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        finished:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lesson\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lesson:         Lesson\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Lesson\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        private\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        private:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        submissions:         Submission[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Submission[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Collection, Entity, ManyToOne, OneToMany, ManyToMany, Property, Index } from '@mikro-orm/core';\nimport { EntityId } from '../types/entity-id';\n\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { Lesson } from './lesson.entity';\nimport type { Submission } from './submission.entity';\nimport type { User } from './user.entity';\n\nexport interface ITaskProperties {\n\tname: string;\n\tavailableDate?: Date;\n\tdueDate?: Date;\n\tprivate?: boolean;\n\tcreator?: User;\n\tcourse?: Course;\n\tlesson?: Lesson;\n\tsubmissions?: Submission[];\n\tfinished?: User[];\n}\n\nexport interface ITaskStatus {\n\tsubmitted: number;\n\tmaxSubmissions: number;\n\tgraded: number;\n\tisDraft: boolean;\n\tisSubstitutionTeacher: boolean;\n\tisFinished: boolean;\n}\n\nexport class TaskWithStatusVo {\n\ttask!: Task;\n\n\tstatus!: ITaskStatus;\n\n\tconstructor(task: Task, status: ITaskStatus) {\n\t\tthis.task = task;\n\t\tthis.status = status;\n\t}\n}\n\nexport type TaskParentDescriptions = { name: string; description: string; color: string };\n\n@Entity({ tableName: 'homeworks' })\n@Index({ name: 'findAllByParentIds_findAllForStudent', properties: ['private', 'dueDate', 'finished'] })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tavailableDate?: Date;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate = true;\n\n\t@ManyToOne('User', { fieldName: 'teacherId' })\n\tcreator?: User;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse?: Course;\n\n\t@ManyToOne('Lesson', { fieldName: 'lessonId' })\n\tlesson?: Lesson; // In database exist also null, but it can not set.\n\n\t@OneToMany('Submission', 'task')\n\tsubmissions = new Collection(this);\n\n\t// TODO: rename to finished\n\t@Index({ name: 'findAllByParentIds_findAllForTeacher' })\n\t@ManyToMany('User', undefined, { fieldName: 'archived' })\n\tfinished = new Collection(this);\n\n\tconstructor(props: ITaskProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.availableDate = props.availableDate;\n\t\tthis.dueDate = props.dueDate;\n\t\tif (props.private !== undefined) this.private = props.private;\n\t\tthis.creator = props.creator;\n\t\tthis.course = props.course;\n\t\tthis.lesson = props.lesson;\n\t\tthis.submissions.set(props.submissions || []);\n\t\tthis.finished.set(props.finished || []);\n\t}\n\n\tisFinishedForUser(user: User): boolean {\n\t\treturn !!(this.finished?.contains(user) || this.course?.isFinished());\n\t}\n\n\tisDraft(): boolean {\n\t\t// private can be undefined in the database\n\t\treturn !!this.private;\n\t}\n\n\tprivate getSubmissionItems(): Submission[] {\n\t\tif (!this.submissions.isInitialized(true)) {\n\t\t\tthrow new Error('Submissions items are not loaded.');\n\t\t}\n\t\tconst submissions = this.submissions.getItems();\n\t\treturn submissions;\n\t}\n\n\tgetSubmittedUserIds(): EntityId[] {\n\t\tconst submittedUserIds = this.getSubmissionItems().map((submission) => submission.student.id);\n\t\tconst uniqueSubmittedUserIds = [...new Set(submittedUserIds)];\n\n\t\treturn uniqueSubmittedUserIds;\n\t}\n\n\tgetNumberOfSubmittedUsers(): number {\n\t\tconst submittedUserIds = this.getSubmittedUserIds();\n\t\tconst count = submittedUserIds.length;\n\n\t\treturn count;\n\t}\n\n\tgetGradedUserIds(): EntityId[] {\n\t\tconst gradedUserIds = this.getSubmissionItems()\n\t\t\t.filter((submission) => submission.isGraded())\n\t\t\t.map((submission) => submission.student.id);\n\t\tconst uniqueGradedUserIds = [...new Set(gradedUserIds)];\n\n\t\treturn uniqueGradedUserIds;\n\t}\n\n\tgetNumberOfGradedUsers(): number {\n\t\tconst gradedUserIds = this.getGradedUserIds();\n\t\tconst count = gradedUserIds.length;\n\n\t\treturn count;\n\t}\n\n\t// attention based on this parent use this.getParent() instant\n\tgetMaxSubmissions(): number {\n\t\t// hack until parents are defined\n\t\tconst numberOfStudents = this.course ? this.course.getNumberOfStudents() : 0;\n\n\t\treturn numberOfStudents;\n\t}\n\n\tcreateTeacherStatusForUser(user: User): ITaskStatus {\n\t\tconst submitted = this.getNumberOfSubmittedUsers();\n\t\tconst graded = this.getNumberOfGradedUsers();\n\t\tconst maxSubmissions = this.getMaxSubmissions();\n\t\tconst isDraft = this.isDraft();\n\t\tconst isFinished = this.isFinishedForUser(user);\n\t\t// only point that need the parameter\n\t\t// const isSubstitutionTeacher = this.isSubstitutionTeacher(userId);\n\t\t// work with getParent()\n\t\tlet isSubstitutionTeacher = false;\n\t\tif (this.course) {\n\t\t\tisSubstitutionTeacher = this.course.substitutionTeachers.contains(user);\n\t\t}\n\n\t\tconst status = {\n\t\t\tsubmitted,\n\t\t\tgraded,\n\t\t\tmaxSubmissions,\n\t\t\tisDraft,\n\t\t\tisSubstitutionTeacher,\n\t\t\tisFinished,\n\t\t};\n\n\t\treturn status;\n\t}\n\n\tisSubmittedForUser(user: User): boolean {\n\t\tconst submitted = this.getSubmittedUserIds().some((uid) => uid === user.id);\n\n\t\treturn submitted;\n\t}\n\n\tisGradedForUser(user: User): boolean {\n\t\tconst graded = this.getGradedUserIds().some((uid) => uid === user.id);\n\n\t\treturn graded;\n\t}\n\n\tcreateStudentStatusForUser(user: User): ITaskStatus {\n\t\tconst isSubmitted = this.isSubmittedForUser(user);\n\t\tconst isGraded = this.isGradedForUser(user);\n\t\tconst maxSubmissions = 1;\n\t\tconst isDraft = this.isDraft();\n\t\tconst isSubstitutionTeacher = false;\n\t\tconst isFinished = this.isFinishedForUser(user);\n\n\t\tconst status = {\n\t\t\tsubmitted: isSubmitted ? 1 : 0,\n\t\t\tgraded: isGraded ? 1 : 0,\n\t\t\tmaxSubmissions,\n\t\t\tisDraft,\n\t\t\tisSubstitutionTeacher,\n\t\t\tisFinished,\n\t\t\t// TODO: visibility of parent is missed ..but isSubstitutionTeacher and this is not really a part from task,\n\t\t\t// for this we must add parent relationship\n\t\t};\n\n\t\treturn status;\n\t}\n\n\t// TODO: based on the parent relationship\n\tgetDescriptions(): TaskParentDescriptions {\n\t\tlet descriptions: TaskParentDescriptions;\n\t\tif (this.course) {\n\t\t\tdescriptions = {\n\t\t\t\tname: this.course.name,\n\t\t\t\tdescription: this.lesson ? this.lesson.name : '',\n\t\t\t\tcolor: this.course.color,\n\t\t\t};\n\t\t} else {\n\t\t\tdescriptions = {\n\t\t\t\tname: '',\n\t\t\t\tdescription: '',\n\t\t\t\tcolor: '#ACACAC',\n\t\t\t};\n\t\t}\n\n\t\treturn descriptions;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITaskStatus.html":{"url":"interfaces/ITaskStatus.html","title":"interface - ITaskStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITaskStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/task.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            graded\n                                        \n                                \n                                \n                                        \n                                            isDraft\n                                        \n                                \n                                \n                                        \n                                            isFinished\n                                        \n                                \n                                \n                                        \n                                            isSubstitutionTeacher\n                                        \n                                \n                                \n                                        \n                                            maxSubmissions\n                                        \n                                \n                                \n                                        \n                                            submitted\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        graded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        graded:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isDraft\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isDraft:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isFinished\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isFinished:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isSubstitutionTeacher\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isSubstitutionTeacher:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxSubmissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxSubmissions:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submitted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        submitted:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Collection, Entity, ManyToOne, OneToMany, ManyToMany, Property, Index } from '@mikro-orm/core';\nimport { EntityId } from '../types/entity-id';\n\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { Lesson } from './lesson.entity';\nimport type { Submission } from './submission.entity';\nimport type { User } from './user.entity';\n\nexport interface ITaskProperties {\n\tname: string;\n\tavailableDate?: Date;\n\tdueDate?: Date;\n\tprivate?: boolean;\n\tcreator?: User;\n\tcourse?: Course;\n\tlesson?: Lesson;\n\tsubmissions?: Submission[];\n\tfinished?: User[];\n}\n\nexport interface ITaskStatus {\n\tsubmitted: number;\n\tmaxSubmissions: number;\n\tgraded: number;\n\tisDraft: boolean;\n\tisSubstitutionTeacher: boolean;\n\tisFinished: boolean;\n}\n\nexport class TaskWithStatusVo {\n\ttask!: Task;\n\n\tstatus!: ITaskStatus;\n\n\tconstructor(task: Task, status: ITaskStatus) {\n\t\tthis.task = task;\n\t\tthis.status = status;\n\t}\n}\n\nexport type TaskParentDescriptions = { name: string; description: string; color: string };\n\n@Entity({ tableName: 'homeworks' })\n@Index({ name: 'findAllByParentIds_findAllForStudent', properties: ['private', 'dueDate', 'finished'] })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tavailableDate?: Date;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate = true;\n\n\t@ManyToOne('User', { fieldName: 'teacherId' })\n\tcreator?: User;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse?: Course;\n\n\t@ManyToOne('Lesson', { fieldName: 'lessonId' })\n\tlesson?: Lesson; // In database exist also null, but it can not set.\n\n\t@OneToMany('Submission', 'task')\n\tsubmissions = new Collection(this);\n\n\t// TODO: rename to finished\n\t@Index({ name: 'findAllByParentIds_findAllForTeacher' })\n\t@ManyToMany('User', undefined, { fieldName: 'archived' })\n\tfinished = new Collection(this);\n\n\tconstructor(props: ITaskProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.availableDate = props.availableDate;\n\t\tthis.dueDate = props.dueDate;\n\t\tif (props.private !== undefined) this.private = props.private;\n\t\tthis.creator = props.creator;\n\t\tthis.course = props.course;\n\t\tthis.lesson = props.lesson;\n\t\tthis.submissions.set(props.submissions || []);\n\t\tthis.finished.set(props.finished || []);\n\t}\n\n\tisFinishedForUser(user: User): boolean {\n\t\treturn !!(this.finished?.contains(user) || this.course?.isFinished());\n\t}\n\n\tisDraft(): boolean {\n\t\t// private can be undefined in the database\n\t\treturn !!this.private;\n\t}\n\n\tprivate getSubmissionItems(): Submission[] {\n\t\tif (!this.submissions.isInitialized(true)) {\n\t\t\tthrow new Error('Submissions items are not loaded.');\n\t\t}\n\t\tconst submissions = this.submissions.getItems();\n\t\treturn submissions;\n\t}\n\n\tgetSubmittedUserIds(): EntityId[] {\n\t\tconst submittedUserIds = this.getSubmissionItems().map((submission) => submission.student.id);\n\t\tconst uniqueSubmittedUserIds = [...new Set(submittedUserIds)];\n\n\t\treturn uniqueSubmittedUserIds;\n\t}\n\n\tgetNumberOfSubmittedUsers(): number {\n\t\tconst submittedUserIds = this.getSubmittedUserIds();\n\t\tconst count = submittedUserIds.length;\n\n\t\treturn count;\n\t}\n\n\tgetGradedUserIds(): EntityId[] {\n\t\tconst gradedUserIds = this.getSubmissionItems()\n\t\t\t.filter((submission) => submission.isGraded())\n\t\t\t.map((submission) => submission.student.id);\n\t\tconst uniqueGradedUserIds = [...new Set(gradedUserIds)];\n\n\t\treturn uniqueGradedUserIds;\n\t}\n\n\tgetNumberOfGradedUsers(): number {\n\t\tconst gradedUserIds = this.getGradedUserIds();\n\t\tconst count = gradedUserIds.length;\n\n\t\treturn count;\n\t}\n\n\t// attention based on this parent use this.getParent() instant\n\tgetMaxSubmissions(): number {\n\t\t// hack until parents are defined\n\t\tconst numberOfStudents = this.course ? this.course.getNumberOfStudents() : 0;\n\n\t\treturn numberOfStudents;\n\t}\n\n\tcreateTeacherStatusForUser(user: User): ITaskStatus {\n\t\tconst submitted = this.getNumberOfSubmittedUsers();\n\t\tconst graded = this.getNumberOfGradedUsers();\n\t\tconst maxSubmissions = this.getMaxSubmissions();\n\t\tconst isDraft = this.isDraft();\n\t\tconst isFinished = this.isFinishedForUser(user);\n\t\t// only point that need the parameter\n\t\t// const isSubstitutionTeacher = this.isSubstitutionTeacher(userId);\n\t\t// work with getParent()\n\t\tlet isSubstitutionTeacher = false;\n\t\tif (this.course) {\n\t\t\tisSubstitutionTeacher = this.course.substitutionTeachers.contains(user);\n\t\t}\n\n\t\tconst status = {\n\t\t\tsubmitted,\n\t\t\tgraded,\n\t\t\tmaxSubmissions,\n\t\t\tisDraft,\n\t\t\tisSubstitutionTeacher,\n\t\t\tisFinished,\n\t\t};\n\n\t\treturn status;\n\t}\n\n\tisSubmittedForUser(user: User): boolean {\n\t\tconst submitted = this.getSubmittedUserIds().some((uid) => uid === user.id);\n\n\t\treturn submitted;\n\t}\n\n\tisGradedForUser(user: User): boolean {\n\t\tconst graded = this.getGradedUserIds().some((uid) => uid === user.id);\n\n\t\treturn graded;\n\t}\n\n\tcreateStudentStatusForUser(user: User): ITaskStatus {\n\t\tconst isSubmitted = this.isSubmittedForUser(user);\n\t\tconst isGraded = this.isGradedForUser(user);\n\t\tconst maxSubmissions = 1;\n\t\tconst isDraft = this.isDraft();\n\t\tconst isSubstitutionTeacher = false;\n\t\tconst isFinished = this.isFinishedForUser(user);\n\n\t\tconst status = {\n\t\t\tsubmitted: isSubmitted ? 1 : 0,\n\t\t\tgraded: isGraded ? 1 : 0,\n\t\t\tmaxSubmissions,\n\t\t\tisDraft,\n\t\t\tisSubstitutionTeacher,\n\t\t\tisFinished,\n\t\t\t// TODO: visibility of parent is missed ..but isSubstitutionTeacher and this is not really a part from task,\n\t\t\t// for this we must add parent relationship\n\t\t};\n\n\t\treturn status;\n\t}\n\n\t// TODO: based on the parent relationship\n\tgetDescriptions(): TaskParentDescriptions {\n\t\tlet descriptions: TaskParentDescriptions;\n\t\tif (this.course) {\n\t\t\tdescriptions = {\n\t\t\t\tname: this.course.name,\n\t\t\t\tdescription: this.lesson ? this.lesson.name : '',\n\t\t\t\tcolor: this.course.color,\n\t\t\t};\n\t\t} else {\n\t\t\tdescriptions = {\n\t\t\t\tname: '',\n\t\t\t\tdescription: '',\n\t\t\t\tcolor: '#ACACAC',\n\t\t\t};\n\t\t}\n\n\t\treturn descriptions;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITeamProperties.html":{"url":"interfaces/ITeamProperties.html","title":"interface - ITeamProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITeamProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/team.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from './base.entity';\n\nexport interface ITeamProperties {\n\tname: string;\n}\n@Entity({ tableName: 'teams' })\nexport class Team extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: ITeamProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserProperties.html":{"url":"interfaces/IUserProperties.html","title":"interface - IUserProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/user.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            firstName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            school\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         Role[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        school:         School\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         School\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Collection, Entity, ManyToMany, ManyToOne, Property, Index, Unique } from '@mikro-orm/core';\nimport type { Role } from './role.entity';\nimport type { School } from './school.entity';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface IUserProperties {\n\temail: string;\n\tfirstName?: string;\n\tlastName?: string;\n\tschool: School;\n\troles: Role[];\n}\n\n@Entity({ tableName: 'users' })\nexport class User extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'externalUserIdentifier' })\n\t@Unique()\n\temail: string;\n\n\t@Property()\n\tfirstName?: string;\n\n\t@Property()\n\tlastName?: string;\n\n\t@Index({ name: 'roleIdBasedSearches' })\n\t@ManyToMany('Role', undefined, { fieldName: 'roles' })\n\troles = new Collection(this);\n\n\t@Index({ name: 'searchUserForSchool' })\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\tconstructor(props: IUserProperties) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.email = props.email;\n\t\tthis.school = props.school;\n\t\tthis.roles.set(props.roles);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ImportUser.html":{"url":"entities/ImportUser.html","title":"entity - ImportUser","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ImportUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/import-user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                classNames\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                flagged\n                            \n                            \n                                lastName\n                            \n                            \n                                ldapDn\n                            \n                            \n                                ldapId\n                            \n                            \n                                    Optional\n                                match\n                            \n                            \n                                roleNames\n                            \n                            \n                                school\n                            \n                            \n                                system\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        classNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/import-user.entity.ts:105\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/import-user.entity.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/import-user.entity.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flagged\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/import-user.entity.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/import-user.entity.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ldapDn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/import-user.entity.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ldapId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/import-user.entity.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        match\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserMatch\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Embedded({entity: () => UserMatch, object: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/import-user.entity.ts:108\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roleNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleName[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum({fieldName: 'roles'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/import-user.entity.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentifiedReference\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, {wrappedReference: true, lazy: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/import-user.entity.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        system\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentifiedReference\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, {wrappedReference: true, lazy: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/import-user.entity.ts:81\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /* istanbul ignore file */ // TODO remove when implementation exists\nimport {\n\tEmbeddable,\n\tEmbedded,\n\tEntity,\n\tEnum,\n\tIdentifiedReference,\n\tManyToOne,\n\tProperty,\n\tReference,\n} from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { School } from './school.entity';\nimport { System } from './system.entity';\nimport type { User } from './user.entity';\n\nexport interface IImportUserProperties {\n\t// references\n\tschool: School;\n\tsystem: System;\n\t// external identifiers\n\tldapDn: string;\n\tldapId: string;\n\t// descriptive properties\n\tfirstName: string;\n\tlastName: string;\n\temail: string; // TODO VO\n\troleNames?: RoleName[];\n\tclassNames?: string[];\n\tmatch?: UserMatch;\n\tflagged?: boolean;\n}\n\n// class EMailVO {\n// \t_email: string;\n\n// \tset email(value: string) {\n// \t\tthis._email = value.toLowerCase();\n// \t}\n\n// \tget email(): string {\n// \t\treturn this._email;\n// \t}\n\n// \tconstructor(value: string) {\n// \t\tthis._email = value.toLowerCase();\n// \t}\n// }\n\nexport enum MatchCreator {\n\tAUTO = 'auto',\n\tMANUAL = 'admin',\n}\nexport enum RoleName {\n\tSTUDENT = 'student',\n\tTEACHER = 'teacher',\n\tADMIN = 'admin',\n}\n\n@Embeddable()\nexport class UserMatch extends BaseEntityWithTimestamps {\n\tconstructor(props: UserMatch) {\n\t\tsuper();\n\t\tthis.user = props.user;\n\t\tthis.matchedBy = props.matchedBy;\n\t}\n\n\t@Property({ fieldName: 'userId' })\n\tuser: User;\n\n\t@Enum({ fieldName: 'matchedBy' })\n\tmatchedBy: MatchCreator;\n}\n\n@Entity({ tableName: 'importUser' })\nexport class ImportUser extends BaseEntityWithTimestamps {\n\t@ManyToOne(() => 'School', { wrappedReference: true, lazy: true })\n\tschool: IdentifiedReference;\n\n\t@ManyToOne(() => 'System', { wrappedReference: true, lazy: true })\n\tsystem: IdentifiedReference;\n\n\t@Property()\n\tldapDn: string;\n\n\t@Property()\n\tldapId: string;\n\n\t@Property()\n\tfirstName: string;\n\n\t@Property()\n\tlastName: string;\n\n\t@Property()\n\t/**\n\t * Lowercase email string // TODO VO\n\t */\n\temail: string;\n\n\t@Enum({ fieldName: 'roles' })\n\troleNames: RoleName[] = [];\n\n\t@Property()\n\tclassNames: string[] = [];\n\n\t@Embedded({ entity: () => UserMatch, object: true })\n\tmatch?: UserMatch;\n\n\t@Property()\n\tflagged = false;\n\n\tconstructor(props: IImportUserProperties) {\n\t\tsuper();\n\t\tthis.school = Reference.create(props.school);\n\t\tthis.system = Reference.create(props.system);\n\t\tthis.ldapDn = props.ldapDn;\n\t\tthis.ldapId = props.ldapId;\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.email = props.email;\n\t\tif (Array.isArray(props.roleNames) && props.roleNames.length > 0) this.roleNames.push(...props.roleNames);\n\t\tif (Array.isArray(props.classNames) && props.classNames.length > 0) this.classNames.push(...props.classNames);\n\t\tif (props.match) this.match = props.match;\n\t\tif (props.flagged && props.flagged === true) this.flagged = true;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ImportUserController.html":{"url":"controllers/ImportUserController.html","title":"controller - ImportUserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ImportUserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user-import/controller/import-user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user/import\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                removeMatch\n                            \n                            \n                                updateMatch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(currentUser: ICurrentUser, scope: ImportUserFilterQuery, pagination: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/user-import/controller/import-user.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                ImportUserFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeMatch\n                        \n                    \n                \n            \n            \n                \nremoveMatch(importUserId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id/match')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/user-import/controller/import-user.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    importUserId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMatch\n                        \n                    \n                \n            \n            \n                \nupdateMatch(importUserId: string, currentUser: ICurrentUser, params: UpdateMatchParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/match')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/user-import/controller/import-user.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    importUserId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                UpdateMatchParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* istanbul ignore file */ // TODO remove when implementation exists\nimport { Body, Controller, Delete, Get, ImATeapotException, Param, Patch, Query } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { PaginationQuery, ParseObjectIdPipe } from '@shared/controller';\nimport { ICurrentUser } from '@shared/domain';\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\nimport { ImportUserFilterQuery } from './dto/import-user-filter.query';\nimport { ImportUserListResponse } from './dto/import-user.response';\nimport { UpdateMatchParams } from './dto/update-match.params';\nimport { UserMatchResponse } from './dto/user-match.response';\n\n@ApiTags('User')\n@Authenticate('jwt')\n@Controller('user/import')\nexport class ImportUserController {\n\t@Get()\n\tfindAll(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() scope: ImportUserFilterQuery,\n\t\t@Query() pagination: PaginationQuery\n\t): Promise {\n\t\t// TODO\n\t\tthrow new ImATeapotException();\n\t}\n\n\t@Patch(':id/match')\n\tupdateMatch(\n\t\t@Param('id', ParseObjectIdPipe) importUserId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Body() params: UpdateMatchParams\n\t): Promise {\n\t\t// TODO\n\t\tthrow new ImATeapotException();\n\t}\n\n\t@Delete(':id/match')\n\tremoveMatch(\n\t\t@Param('id', ParseObjectIdPipe) importUserId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\t// TODO\n\t\tthrow new ImATeapotException();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImportUserFilterQuery.html":{"url":"classes/ImportUserFilterQuery.html","title":"class - ImportUserFilterQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImportUserFilterQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user-import/controller/dto/import-user-filter.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                    Optional\n                                flagged\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                            \n                                    Optional\n                                loginName\n                            \n                            \n                                    Optional\n                                match\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/import-user-filter.query.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        flagged\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/import-user-filter.query.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/import-user-filter.query.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        loginName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/import-user-filter.query.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        match\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatchFilterQuery\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: MatchFilterQuery})@IsOptional()@IsEnum(MatchFilterQuery)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/import-user-filter.query.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsBoolean, IsEnum, IsNotEmpty, IsOptional, IsString } from 'class-validator';\n\nexport enum MatchFilterQuery {\n\tAUTO = 'auto',\n\tMANUAL = 'admin',\n\tNONE = 'none',\n}\n\nexport class ImportUserFilterQuery {\n\t@ApiPropertyOptional()\n\t@IsOptional()\n\t@IsString()\n\t@IsNotEmpty()\n\tfirstName?: string;\n\n\t@ApiPropertyOptional()\n\t@IsOptional()\n\t@IsString()\n\t@IsNotEmpty()\n\tlastName?: string;\n\n\t@ApiPropertyOptional()\n\t@IsOptional()\n\t@IsString()\n\t@IsNotEmpty()\n\tloginName?: string;\n\n\t@ApiPropertyOptional({ enum: MatchFilterQuery })\n\t@IsOptional()\n\t@IsEnum(MatchFilterQuery)\n\tmatch?: MatchFilterQuery;\n\n\t@ApiPropertyOptional()\n\t@IsOptional()\n\t@IsBoolean()\n\tflagged?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImportUserListResponse.html":{"url":"classes/ImportUserListResponse.html","title":"class - ImportUserListResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImportUserListResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user-import/controller/dto/import-user.response.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PaginationResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: ImportUserResponse[], total: number, skip?: number, limit?: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user-import/controller/dto/import-user.response.ts:58\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        ImportUserResponse[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        skip\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ImportUserResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:65\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { PaginationResponse } from '@shared/controller';\nimport { IsMongoId, IsString } from 'class-validator';\nimport { RoleNameResponse } from './role-name.response';\nimport { UserMatchResponse } from './user-match.response';\n\nexport class ImportUserResponse {\n\tconstructor(props: ImportUserResponse) {\n\t\tthis.importUserId = props.importUserId;\n\t\tthis.loginName = props.loginName;\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.roleNames = props.roleNames;\n\t\tthis.classNames = props.classNames;\n\t\tif (props.match != null) this.match = props.match;\n\t}\n\n\t@IsMongoId()\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'id reference to a import user',\n\t})\n\t// no school, system\n\timportUserId: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'login name from external system',\n\t})\n\tloginName: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'external systems user firstname',\n\t})\n\tfirstName: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'external systems user lastname',\n\t})\n\tlastName: string;\n\n\t@ApiProperty({\n\t\tdescription: 'list of user roles from external system: student, teacher, admin',\n\t\tenum: RoleNameResponse,\n\t})\n\troleNames: RoleNameResponse[];\n\n\t@ApiProperty({ description: 'names of classes the user attends from external system' })\n\tclassNames: string[];\n\n\t@ApiPropertyOptional({ description: 'assignemnt to a local user account' })\n\tmatch?: UserMatchResponse;\n}\n\nexport class ImportUserListResponse extends PaginationResponse {\n\tconstructor(data: ImportUserResponse[], total: number, skip?: number, limit?: number) {\n\t\tsuper(total, skip, limit);\n\t\tthis.data = data;\n\t}\n\n\t@ApiProperty({ type: [ImportUserResponse] })\n\tdata: ImportUserResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImportUserModule.html":{"url":"modules/ImportUserModule.html","title":"module - ImportUserModule","body":"\n                   \n\n\n\n\n    Modules\n    ImportUserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ImportUserModule\n\n\n\ncluster_ImportUserModule_imports\n\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\n\n\nImportUserModule\n\nImportUserModule\n\nImportUserModule -->\n\nAuthorizationModule->ImportUserModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nImportUserModule -->\n\nLoggerModule->ImportUserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/user-import/user-import.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            ImportUserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthorizationModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LoggerModule } from '@src/core/logger';\nimport { AuthorizationModule } from '@src/modules/authorization';\nimport { ImportUserController } from './controller/import-user.controller';\n\n@Module({\n\timports: [\n\t\tAuthorizationModule,\n\t\tLoggerModule,\n\t\t// MikroOrmModule.forFeature({ entities: [ImportUser, System] })\n\t],\n\tcontrollers: [ImportUserController],\n\tproviders: [],\n\texports: [],\n})\n/**\n * Module to provide user migration,\n * to link existing users with ldap references to enable\n * external authentication and sync.\n */\nexport class ImportUserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImportUserResponse.html":{"url":"classes/ImportUserResponse.html","title":"class - ImportUserResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImportUserResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user-import/controller/dto/import-user.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                classNames\n                            \n                            \n                                firstName\n                            \n                            \n                                importUserId\n                            \n                            \n                                lastName\n                            \n                            \n                                loginName\n                            \n                            \n                                    Optional\n                                match\n                            \n                            \n                                roleNames\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ImportUserResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user-import/controller/dto/import-user.response.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ImportUserResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        classNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'names of classes the user attends from external system'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/import-user.response.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'external systems user firstname'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/import-user.response.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        importUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty({pattern: '[a-f0-9]{24}', description: 'id reference to a import user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/import-user.response.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'external systems user lastname'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/import-user.response.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'login name from external system'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/import-user.response.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        match\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserMatchResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'assignemnt to a local user account'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/import-user.response.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roleNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleNameResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'list of user roles from external system: student, teacher, admin', enum: RoleNameResponse})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/import-user.response.ts:49\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { PaginationResponse } from '@shared/controller';\nimport { IsMongoId, IsString } from 'class-validator';\nimport { RoleNameResponse } from './role-name.response';\nimport { UserMatchResponse } from './user-match.response';\n\nexport class ImportUserResponse {\n\tconstructor(props: ImportUserResponse) {\n\t\tthis.importUserId = props.importUserId;\n\t\tthis.loginName = props.loginName;\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.roleNames = props.roleNames;\n\t\tthis.classNames = props.classNames;\n\t\tif (props.match != null) this.match = props.match;\n\t}\n\n\t@IsMongoId()\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'id reference to a import user',\n\t})\n\t// no school, system\n\timportUserId: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'login name from external system',\n\t})\n\tloginName: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'external systems user firstname',\n\t})\n\tfirstName: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'external systems user lastname',\n\t})\n\tlastName: string;\n\n\t@ApiProperty({\n\t\tdescription: 'list of user roles from external system: student, teacher, admin',\n\t\tenum: RoleNameResponse,\n\t})\n\troleNames: RoleNameResponse[];\n\n\t@ApiProperty({ description: 'names of classes the user attends from external system' })\n\tclassNames: string[];\n\n\t@ApiPropertyOptional({ description: 'assignemnt to a local user account' })\n\tmatch?: UserMatchResponse;\n}\n\nexport class ImportUserListResponse extends PaginationResponse {\n\tconstructor(data: ImportUserResponse[], total: number, skip?: number, limit?: number) {\n\t\tsuper(total, skip, limit);\n\t\tthis.data = data;\n\t}\n\n\t@ApiProperty({ type: [ImportUserResponse] })\n\tdata: ImportUserResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InlineAttachment.html":{"url":"interfaces/InlineAttachment.html","title":"interface - InlineAttachment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InlineAttachment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailAttachment\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contentDisposition\n                                        \n                                \n                                \n                                        \n                                            contentId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contentDisposition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentDisposition:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contentId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InterceptorModule.html":{"url":"modules/InterceptorModule.html","title":"module - InterceptorModule","body":"\n                   \n\n\n\n\n    Modules\n    InterceptorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/interceptor/interceptor.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            \nGlobal Interceptor setup\n\nHere, we globally apply\n\nvalidate input data using @ClassSerializerInterceptor\nset a timeout for requests using @TimeoutInterceptor\n\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ClassSerializerInterceptor, Module } from '@nestjs/common';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\nimport { TimeoutInterceptor } from '@shared/common';\n\n/** *********************************************\n * Global Interceptor setup\n * **********************************************\n * Here, we globally apply\n * - validate input data using @ClassSerializerInterceptor\n * - set a timeout for requests using @TimeoutInterceptor\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\tuseClass: ClassSerializerInterceptor,\n\t\t},\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR, // TODO remove (for testing)\n\t\t\tuseClass: TimeoutInterceptor,\n\t\t},\n\t],\n})\nexport class InterceptorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/guard/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtConstants.html":{"url":"interfaces/JwtConstants.html","title":"interface - JwtConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/constants.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            jwtOptions\n                                        \n                                \n                                \n                                        \n                                            secret\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        jwtOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jwtOptions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secret\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import externalAuthConfig = require('../../../../../src/services/authentication/configuration');\n\nconst { authConfig } = externalAuthConfig;\n\n/*\n\tTODO: look at existing keys, vs implemented keys\n\tsupport: true,\n\tsupportUserId,\n\taccountId,\n\tuserId,\n\tiat,\n\texp,\n\taud: this.aud,\n\tiss: 'feathers',\n\tsub: accountId,\n\tjti: `support_${ObjectId()}`,\n*/\nexport interface JwtConstants {\n\tsecret: string;\n\tjwtOptions: {\n\t\theader: { typ: string };\n\t\taudience: string;\n\t\tissuer: string;\n\t\talgorithm: string;\n\t\texpiresIn: string;\n\t};\n}\n\nexport const jwtConstants: JwtConstants = {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n};\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/interface/jwt-payload.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ICurrentUser\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            aud\n                                        \n                                \n                                \n                                        \n                                            exp\n                                        \n                                \n                                \n                                        \n                                            iat\n                                        \n                                \n                                \n                                        \n                                            iss\n                                        \n                                \n                                \n                                        \n                                            jti\n                                        \n                                \n                                \n                                        \n                                            sub\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aud\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        aud:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    audience\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    expiration in // TODO\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iss\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iss:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    issuer\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jti\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jti:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    // TODO\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ICurrentUser } from '@shared/domain';\n\nexport interface JwtPayload extends ICurrentUser {\n\t/** audience */\n\taud: string;\n\t/** expiration in // TODO\n\t *\n\t */\n\texp: number;\n\tiat: number;\n\t/** issuer */\n\tiss: string;\n\tjti: string;\n\n\t/** // TODO\n\t *\n\t */\n\tsub: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/strategy/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepo: UserRepo, jwtValidationAdapter: JwtValidationAdapter)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        UserRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtValidationAdapter\n                                                  \n                                                        \n                                                                        JwtValidationAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { UserRepo } from '@shared/repo';\nimport { jwtConstants } from '../constants';\nimport { JwtPayload } from '../interface/jwt-payload';\nimport { JwtValidationAdapter } from './jwt-validation.adapter';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n\tconstructor(private readonly userRepo: UserRepo, private readonly jwtValidationAdapter: JwtValidationAdapter) {\n\t\tsuper({\n\t\t\tjwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n\t\t\tignoreExpiration: false,\n\t\t\tsecretOrKey: jwtConstants.secret,\n\t\t\t...jwtConstants.jwtOptions,\n\t\t});\n\t}\n\n\tasync validate(payload: JwtPayload): Promise {\n\t\t// check jwt is whitelisted and extend whitelist entry\n\t\tconst { accountId, jti, userId } = payload;\n\t\tawait this.jwtValidationAdapter.isWhitelisted(accountId, jti);\n\t\t// check user exists\n\t\ttry {\n\t\t\tawait this.userRepo.findById(userId);\n\t\t} catch (err) {\n\t\t\tthrow new UnauthorizedException('Unauthorized.');\n\t\t}\n\n\t\t// TODO: check user/account is active and has one role\n\t\treturn payload;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtValidationAdapter.html":{"url":"injectables/JwtValidationAdapter.html","title":"injectable - JwtValidationAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtValidationAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addToWhitelist\n                            \n                            \n                                    Async\n                                isWhitelisted\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addToWhitelist\n                        \n                    \n                \n            \n            \n                \n                    \n                    addToWhitelist(accountId: string, jti: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accountId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    jti\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isWhitelisted\n                        \n                    \n                \n            \n            \n                \n                    \n                    isWhitelisted(accountId: string, jti: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts:15\n                \n            \n\n\n            \n                \n                    When validating a jwt it must be added to a whitelist, here we check this.\nWhen the jwt is validated, the expiration time will be extended with this call.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    accountId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        users account id\n\n                                    \n                                \n                                \n                                    jti\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        jwt id (here required to make jwt identifiers identical in redis)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport jwtWhitelist = require('../../../../../../src/services/authentication/logic/whitelist');\n\nconst { ensureTokenIsWhitelisted, addTokenToWhitelist, createRedisIdentifierFromJwtData } = jwtWhitelist;\n\n@Injectable()\nexport class JwtValidationAdapter {\n\t/**\n\t * When validating a jwt it must be added to a whitelist, here we check this.\n\t * When the jwt is validated, the expiration time will be extended with this call.\n\t * @param accountId users account id\n\t * @param jti jwt id (here required to make jwt identifiers identical in redis)\n\t */\n\tasync isWhitelisted(accountId: string, jti: string): Promise {\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n\t\tawait ensureTokenIsWhitelisted({ accountId, jti, privateDevice: false });\n\t}\n\n\tasync addToWhitelist(accountId: string, jti: string): Promise {\n\t\tconst redisIdentifier = createRedisIdentifierFromJwtData(accountId, jti);\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n\t\tawait addTokenToWhitelist(redisIdentifier);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LearnroomModule.html":{"url":"modules/LearnroomModule.html","title":"module - LearnroomModule","body":"\n                   \n\n\n\n\n    Modules\n    LearnroomModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LearnroomModule\n\n\n\ncluster_LearnroomModule_providers\n\n\n\n\nBoardMapper\n\nBoardMapper\n\n\n\nLearnroomModule\n\nLearnroomModule\n\nLearnroomModule -->\n\nBoardMapper->LearnroomModule\n\n\n\n\n\nCourseRepo\n\nCourseRepo\n\nLearnroomModule -->\n\nCourseRepo->LearnroomModule\n\n\n\n\n\nCourseUc\n\nCourseUc\n\nLearnroomModule -->\n\nCourseUc->LearnroomModule\n\n\n\n\n\nDashboardModelMapper\n\nDashboardModelMapper\n\nLearnroomModule -->\n\nDashboardModelMapper->LearnroomModule\n\n\n\n\n\nDashboardUc\n\nDashboardUc\n\nLearnroomModule -->\n\nDashboardUc->LearnroomModule\n\n\n\n\n\nRoomsUc\n\nRoomsUc\n\nLearnroomModule -->\n\nRoomsUc->LearnroomModule\n\n\n\n\n\nTaskRepo\n\nTaskRepo\n\nLearnroomModule -->\n\nTaskRepo->LearnroomModule\n\n\n\n\n\nUserRepo\n\nUserRepo\n\nLearnroomModule -->\n\nUserRepo->LearnroomModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/learnroom.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BoardMapper\n                        \n                        \n                            CourseRepo\n                        \n                        \n                            CourseUc\n                        \n                        \n                            DashboardModelMapper\n                        \n                        \n                            DashboardUc\n                        \n                        \n                            RoomsUc\n                        \n                        \n                            TaskRepo\n                        \n                        \n                            UserRepo\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DashboardController\n                        \n                        \n                            CourseController\n                        \n                        \n                            RoomsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { DashboardRepo, DashboardModelMapper, CourseRepo, TaskRepo, UserRepo } from '@shared/repo';\n\nimport { DashboardController } from './controller/dashboard.controller';\nimport { CourseController } from './controller/course.controller';\nimport { DashboardUc } from './uc/dashboard.uc';\nimport { CourseUc } from './uc/course.uc';\nimport { RoomsController } from './controller/rooms.controller';\nimport { RoomsUc } from './uc/rooms.uc';\nimport { BoardMapper } from './mapper/board.mapper';\n\n@Module({\n\timports: [],\n\tcontrollers: [DashboardController, CourseController, RoomsController],\n\tproviders: [\n\t\tDashboardUc,\n\t\t{\n\t\t\tprovide: 'DASHBOARD_REPO',\n\t\t\tuseClass: DashboardRepo,\n\t\t},\n\t\tDashboardModelMapper,\n\t\tCourseUc,\n\t\tCourseRepo,\n\t\tRoomsUc,\n\t\tTaskRepo,\n\t\tUserRepo,\n\t\tBoardMapper,\n\t],\n})\nexport class LearnroomModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Lesson.html":{"url":"entities/Lesson.html","title":"entity - Lesson","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Lesson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/lesson.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                            \n                                hidden\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        course\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Course', {fieldName: 'courseId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/lesson.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hidden\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({name: 'findAllByCourseIds'})@Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/lesson.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/lesson.entity.ts:14\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, ManyToOne, Property, Index } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\n\nexport interface ILessonProperties {\n\tname: string;\n\thidden?: boolean;\n\tcourse: Course;\n}\n\n@Entity({ tableName: 'lessons' })\nexport class Lesson extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Index({ name: 'findAllByCourseIds' })\n\t@Property()\n\thidden = false;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse: Course;\n\n\tconstructor(props: ILessonProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tif (props.hidden !== undefined) this.hidden = props.hidden;\n\t\tthis.course = props.course;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LessonFactory.html":{"url":"classes/LessonFactory.html","title":"class - LessonFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LessonFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/testing/factory/lesson.factory.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseFactory\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                propsFactory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterBuild\n                            \n                            \n                                build\n                            \n                            \n                                buildList\n                            \n                            \n                                buildWithId\n                            \n                            \n                                    Protected\n                                clone\n                            \n                            \n                                    Static\n                                define\n                            \n                            \n                                params\n                            \n                            \n                                rewindSequence\n                            \n                            \n                                    Protected\n                                sequence\n                            \n                            \n                                transient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        propsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Factory\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFactory\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFactory:14\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterBuild\n                        \n                    \n                \n            \n            \n                \nafterBuild(afterBuildFn: HookFn)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:85\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding a function to be called after an object is built.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    afterBuildFn\n                                    \n                                            HookFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe function to call. It accepts your object of type T. The value this function returns gets returned from \"build\"\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        build\n                        \n                    \n                \n            \n            \n                \nbuild(params?: DeepPartial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:45\n\n                \n            \n\n\n            \n                \n                    Build an entity using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildList\n                        \n                    \n                \n            \n            \n                \nbuildList(number: number, params?: DeepPartial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:71\n\n                \n            \n\n\n            \n                \n                    Build a list of entities using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    number\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        a list of entities\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildWithId\n                        \n                    \n                \n            \n            \n                \nbuildWithId(params?: DeepPartial, id?: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:58\n\n                \n            \n\n\n            \n                \n                    Build an entity using your factory and generate a id for it.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        clone\n                        \n                    \n                \n            \n            \n                \n                    \n                    clone(this: F, propsFactory: Factory)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:123\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        F\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                            F\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    propsFactory\n                                    \n                                            Factory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        define\n                        \n                    \n                \n            \n            \n                \n                    \n                    define(this, EntityClass: literal type, generator: GeneratorFn)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:30\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        U\n                        I\n                        F\n                    \n                \n            \n\n            \n                \n                    Define a factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    EntityClass\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The constructor of the entity to be built.\n\n                                    \n                                \n                                \n                                    generator\n                                    \n                                            GeneratorFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Your factory function - see Factory.define() in thoughtbot/fishery\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        params\n                        \n                    \n                \n            \n            \n                \nparams(params: DeepPartial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:97\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rewindSequence\n                        \n                    \n                \n            \n            \n                \nrewindSequence()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:119\n\n                \n            \n\n\n            \n                \n                    Set sequence back to its default value\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        sequence\n                        \n                    \n                \n            \n            \n                \n                    \n                    sequence()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:135\n\n                \n            \n\n\n            \n                \n                    Get the next sequence value\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        the next sequence value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transient\n                        \n                    \n                \n            \n            \n                \ntransient(transient: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:109\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default transient parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    transient\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ntransient params\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Lesson, ILessonProperties, Course } from '@shared/domain';\n\nimport { courseFactory } from './course.factory';\nimport { BaseFactory } from './base.factory';\n\nclass LessonFactory extends BaseFactory {}\n\nexport const lessonFactory = LessonFactory.define(Lesson, ({ sequence, params }) => {\n\tlet course: Course;\n\tif (params.course) {\n\t\tcourse = params.course as Course;\n\t} else {\n\t\tcourse = courseFactory.build();\n\t}\n\n\treturn {\n\t\tname: `lesson #${sequence}`,\n\t\tcourse,\n\t};\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LessonRepo.html":{"url":"injectables/LessonRepo.html","title":"injectable - LessonRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LessonRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/lesson/lesson.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllByCourseIds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/lesson/lesson.repo.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByCourseIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByCourseIds(courseIds: EntityId[], filters?: literal type)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/lesson/lesson.repo.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filters\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityManager } from '@mikro-orm/mongodb';\n\nimport { EntityId, Lesson, Counted } from '@shared/domain';\n\nimport { LessonScope } from './lesson-scope';\n\n@Injectable()\nexport class LessonRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findAllByCourseIds(courseIds: EntityId[], filters?: { hidden?: boolean }): Promise> {\n\t\tconst scope = new LessonScope();\n\n\t\tscope.byCourseIds(courseIds);\n\n\t\tif (filters?.hidden !== undefined) {\n\t\t\tscope.byHidden(filters.hidden);\n\t\t}\n\n\t\tconst [lessons, count] = await this.em.findAndCount(Lesson, scope.query);\n\n\t\tawait this.em.populate(lessons, ['course']);\n\n\t\treturn [lessons, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LessonScope.html":{"url":"classes/LessonScope.html","title":"class - LessonScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LessonScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/lesson/lesson-scope.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _operator\n                            \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                byCourseIds\n                            \n                            \n                                byHidden\n                            \n                            \n                                addQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _operator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScopeOperator\n\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        byCourseIds\n                        \n                    \n                \n            \n            \n                \nbyCourseIds(courseIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/lesson/lesson-scope.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LessonScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byHidden\n                        \n                    \n                \n            \n            \n                \nbyHidden(isHidden: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/lesson/lesson-scope.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isHidden\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LessonScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityId, Lesson } from '@shared/domain';\nimport { Scope } from '../scope';\n\nexport class LessonScope extends Scope {\n\tbyCourseIds(courseIds: EntityId[]): LessonScope {\n\t\tthis.addQuery({ course: { $in: courseIds } });\n\t\treturn this;\n\t}\n\n\tbyHidden(isHidden: boolean): LessonScope {\n\t\tthis.addQuery({ hidden: { $eq: isHidden } });\n\t\treturn this;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Logger.html":{"url":"injectables/Logger.html","title":"injectable - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ConsoleLogger\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Scope, ConsoleLogger } from '@nestjs/common';\nimport { ILogger } from './logger.interface';\n\n@Injectable({ scope: Scope.TRANSIENT })\n/**\n * Default logger for server application.\n * Must implement ILogger but must not extend ConsoleLogger (this can be changed).\n * Transient injection: Wherever injected, a separate instance will be created, that can be provided with a custom context.\n */\nexport class Logger extends ConsoleLogger implements ILogger {\n\t/**\n\t * This Logger Service can be initialized with a context, that will be added to every log.\n\t * It implements @ILogger which provides the logger methods.\n\t * CAUTION: PREPARE STRINGS AS LOG DATA, DO NOT LOG COMPLEX DATA STRUCTURES\n\t * @param context when initialized in a provider, use setContext with CustomProviderClass.name\n\t * @param isTimestampEnabled\n\t */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_LoggerModule_exports\n\n\n\n\nLogger \n\nLogger \n\n\n\nLoggerModule\n\nLoggerModule\n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            Logger\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Logger\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Logger } from './logger.service';\n\n@Module({\n\tproviders: [Logger],\n\texports: [Logger],\n})\nexport class LoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Mail.html":{"url":"interfaces/Mail.html","title":"interface - Mail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Mail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            bcc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            from\n                                        \n                                \n                                \n                                        \n                                            mail\n                                        \n                                \n                                \n                                        \n                                            recipients\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            replyTo\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bcc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bcc:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cc:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        from:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mail:     PlainTextMailContent | HtmlMailContent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PlainTextMailContent | HtmlMailContent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recipients\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        recipients:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        replyTo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        replyTo:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailAttachment.html":{"url":"interfaces/MailAttachment.html","title":"interface - MailAttachment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailAttachment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            base64Content\n                                        \n                                \n                                \n                                        \n                                            mimeType\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        base64Content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        base64Content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mimeType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mimeType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailContent.html":{"url":"interfaces/MailContent.html","title":"interface - MailContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            attachments\n                                        \n                                \n                                \n                                        \n                                            subject\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attachments\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attachments:     (InlineAttachment | AppendedAttachment)[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     (InlineAttachment | AppendedAttachment)[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: MailModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/mail/mail.module.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MailModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, DynamicModule } from '@nestjs/common';\nimport { RabbitMQModule } from '@golevelup/nestjs-rabbitmq';\nimport { MailService } from './mail.service';\n\ninterface MailModuleOptions {\n\turi: string;\n\texchange: string;\n\troutingKey: string;\n}\n\ntype RabbitMqModuleOptions = Omit;\n\nconst createRabbitMqModule = (options: RabbitMqModuleOptions) => {\n\tconst rabbitMqModule = RabbitMQModule.forRoot(RabbitMQModule, {\n\t\texchanges: [\n\t\t\t{\n\t\t\t\tname: options.exchange,\n\t\t\t\ttype: 'direct',\n\t\t\t},\n\t\t],\n\t\turi: options.uri,\n\t});\n\treturn rabbitMqModule;\n};\n\n@Module({})\nexport class MailModule {\n\tstatic forRoot(options: MailModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: MailModule,\n\t\t\timports: [createRabbitMqModule(options)],\n\t\t\tproviders: [\n\t\t\t\tMailService,\n\t\t\t\t{\n\t\t\t\t\tprovide: 'MAIL_SERVICE_OPTIONS',\n\t\t\t\t\tuseValue: { exchange: options.exchange, routingKey: options.routingKey },\n\t\t\t\t},\n\t\t\t],\n\t\t\texports: [MailService],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailModuleOptions.html":{"url":"interfaces/MailModuleOptions.html","title":"interface - MailModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            exchange\n                                        \n                                \n                                \n                                        \n                                            routingKey\n                                        \n                                \n                                \n                                        \n                                            uri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exchange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exchange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routingKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routingKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Module, DynamicModule } from '@nestjs/common';\nimport { RabbitMQModule } from '@golevelup/nestjs-rabbitmq';\nimport { MailService } from './mail.service';\n\ninterface MailModuleOptions {\n\turi: string;\n\texchange: string;\n\troutingKey: string;\n}\n\ntype RabbitMqModuleOptions = Omit;\n\nconst createRabbitMqModule = (options: RabbitMqModuleOptions) => {\n\tconst rabbitMqModule = RabbitMQModule.forRoot(RabbitMQModule, {\n\t\texchanges: [\n\t\t\t{\n\t\t\t\tname: options.exchange,\n\t\t\t\ttype: 'direct',\n\t\t\t},\n\t\t],\n\t\turi: options.uri,\n\t});\n\treturn rabbitMqModule;\n};\n\n@Module({})\nexport class MailModule {\n\tstatic forRoot(options: MailModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: MailModule,\n\t\t\timports: [createRabbitMqModule(options)],\n\t\t\tproviders: [\n\t\t\t\tMailService,\n\t\t\t\t{\n\t\t\t\t\tprovide: 'MAIL_SERVICE_OPTIONS',\n\t\t\t\t\tuseValue: { exchange: options.exchange, routingKey: options.routingKey },\n\t\t\t\t},\n\t\t\t],\n\t\t\texports: [MailService],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(amqpConnection: AmqpConnection, options: MailServiceOptions)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/infra/mail/mail.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        amqpConnection\n                                                  \n                                                        \n                                                                    AmqpConnection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        MailServiceOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        send\n                        \n                    \n                \n            \n            \n                \n                    \n                    send(data: Mail)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/mail/mail.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Mail\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { AmqpConnection } from '@golevelup/nestjs-rabbitmq';\n\nimport { Mail } from './mail.interface';\n\ninterface MailServiceOptions {\n\texchange: string;\n\troutingKey: string;\n}\n\n@Injectable()\nexport class MailService {\n\tconstructor(\n\t\tprivate readonly amqpConnection: AmqpConnection,\n\t\t@Inject('MAIL_SERVICE_OPTIONS') private readonly options: MailServiceOptions\n\t) {}\n\n\tpublic async send(data: Mail): Promise {\n\t\tawait this.amqpConnection.publish(this.options.exchange, this.options.routingKey, data, { persistent: true });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailServiceOptions.html":{"url":"interfaces/MailServiceOptions.html","title":"interface - MailServiceOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailServiceOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            exchange\n                                        \n                                \n                                \n                                        \n                                            routingKey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exchange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exchange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routingKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routingKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { AmqpConnection } from '@golevelup/nestjs-rabbitmq';\n\nimport { Mail } from './mail.interface';\n\ninterface MailServiceOptions {\n\texchange: string;\n\troutingKey: string;\n}\n\n@Injectable()\nexport class MailService {\n\tconstructor(\n\t\tprivate readonly amqpConnection: AmqpConnection,\n\t\t@Inject('MAIL_SERVICE_OPTIONS') private readonly options: MailServiceOptions\n\t) {}\n\n\tpublic async send(data: Mail): Promise {\n\t\tawait this.amqpConnection.publish(this.options.exchange, this.options.routingKey, data, { persistent: true });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ManagementModule.html":{"url":"modules/ManagementModule.html","title":"module - ManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    ManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ManagementModule\n\n\n\ncluster_ManagementModule_imports\n\n\n\ncluster_ManagementModule_providers\n\n\n\n\nDatabaseManagementModule\n\nDatabaseManagementModule\n\n\n\nManagementModule\n\nManagementModule\n\nManagementModule -->\n\nDatabaseManagementModule->ManagementModule\n\n\n\n\n\nFileSystemModule\n\nFileSystemModule\n\nManagementModule -->\n\nFileSystemModule->ManagementModule\n\n\n\n\n\nBsonConverter\n\nBsonConverter\n\nManagementModule -->\n\nBsonConverter->ManagementModule\n\n\n\n\n\nConsoleWriterService\n\nConsoleWriterService\n\nManagementModule -->\n\nConsoleWriterService->ManagementModule\n\n\n\n\n\nDatabaseManagementService\n\nDatabaseManagementService\n\nManagementModule -->\n\nDatabaseManagementService->ManagementModule\n\n\n\n\n\nDatabaseManagementUc\n\nDatabaseManagementUc\n\nManagementModule -->\n\nDatabaseManagementUc->ManagementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/management/management.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BsonConverter\n                        \n                        \n                            ConsoleWriterService\n                        \n                        \n                            DatabaseManagementService\n                        \n                        \n                            DatabaseManagementUc\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DatabaseManagementController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseManagementModule\n                        \n                        \n                            FileSystemModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, NotFoundException } from '@nestjs/common';\nimport { DatabaseManagementService, DatabaseManagementModule } from '@shared/infra/database';\nimport { MikroOrmModule } from '@mikro-orm/nestjs';\nimport { Dictionary, IPrimaryKey } from '@mikro-orm/core';\nimport { ALL_ENTITIES } from '@shared/domain';\nimport { FileSystemModule } from '@shared/infra/file-system';\n\nimport { ConsoleWriterService } from '@shared/infra/console';\nimport { DB_URL, DB_USERNAME, DB_PASSWORD } from '@src/config';\nimport { DatabaseManagementController } from './controller/database-management.controller';\nimport { DatabaseManagementUc } from './uc/database-management.uc';\nimport { BsonConverter } from './converter/bson.converter';\nimport { DatabaseManagementConsole } from './console/database-management.console';\n\n@Module({\n\timports: [\n\t\tFileSystemModule,\n\t\tDatabaseManagementModule,\n\t\tMikroOrmModule.forRoot({\n\t\t\t// TODO repeats server module definitions\n\t\t\ttype: 'mongo',\n\t\t\tclientUrl: DB_URL,\n\t\t\tpassword: DB_PASSWORD,\n\t\t\tuser: DB_USERNAME,\n\t\t\tentities: ALL_ENTITIES,\n\t\t\tfindOneOrFailHandler: (entityName: string, where: Dictionary | IPrimaryKey) => {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t\treturn new NotFoundException(`The requested ${entityName}: ${where} has not been found.`);\n\t\t\t},\n\t\t}),\n\t],\n\tproviders: [\n\t\tDatabaseManagementUc,\n\t\tDatabaseManagementService,\n\t\tBsonConverter,\n\t\t// console providers\n\t\tDatabaseManagementConsole,\n\t\t// infra services\n\t\tConsoleWriterService,\n\t],\n\tcontrollers: [DatabaseManagementController],\n})\nexport class ManagementModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MongoMemoryDatabaseModule.html":{"url":"modules/MongoMemoryDatabaseModule.html","title":"module - MongoMemoryDatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    MongoMemoryDatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/shared/infra/database/mongo-memory-database/mongo-memory-database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options?: MongoDatabaseModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/mongo-memory-database/mongo-memory-database.module.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MongoDatabaseModuleOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleDestroy()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/mongo-memory-database/mongo-memory-database.module.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MikroORM } from '@mikro-orm/core';\nimport { MikroOrmModule, MikroOrmModuleAsyncOptions } from '@mikro-orm/nestjs';\nimport { DynamicModule, Inject, Module, OnModuleDestroy } from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport { ALL_ENTITIES } from '@shared/domain';\nimport { MongoMemoryServer } from 'mongodb-memory-server-global-4.2';\nimport { MongoDatabaseModuleOptions } from './types';\n\nconst createMikroOrmModule = async (options: MikroOrmModuleAsyncOptions): Promise => {\n\tconst mikroOrmModule = MikroOrmModule.forRootAsync({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: MongoMemoryServer,\n\t\t\t\tuseFactory: async () => {\n\t\t\t\t\tconst mongo = await MongoMemoryServer.create();\n\t\t\t\t\treturn mongo;\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tuseFactory: async (mongo: MongoMemoryServer) => {\n\t\t\tawait mongo.ensureInstance();\n\t\t\tconst clientUrl = mongo.getUri();\n\t\t\treturn {\n\t\t\t\t...options,\n\t\t\t\ttype: 'mongo',\n\t\t\t\tclientUrl,\n\t\t\t};\n\t\t},\n\t\tinject: [MongoMemoryServer],\n\t});\n\n\t// TODO maybe we can find a better way to export the MongoMemoryServer provider\n\t// currently we cannot specify the export otherwise because MikroOrmModuleSyncOptions doesn't provide an export option\n\tif (mikroOrmModule.imports && mikroOrmModule.imports.length > 0) {\n\t\tconst mikroOrmCoreModule = (await mikroOrmModule.imports[0]) as DynamicModule;\n\t\tmikroOrmCoreModule.exports ||= [];\n\t\tmikroOrmCoreModule.exports.push(MongoMemoryServer);\n\t}\n\n\treturn mikroOrmModule;\n};\n\n@Module({})\nexport class MongoMemoryDatabaseModule implements OnModuleDestroy {\n\tconstructor(\n\t\t@Inject(MikroORM) private orm: MikroORM,\n\t\t@Inject(MongoMemoryServer) private mongod: MongoMemoryServer,\n\t\tprivate readonly moduleRef: ModuleRef\n\t) {}\n\n\tstatic forRoot(options?: MongoDatabaseModuleOptions): DynamicModule {\n\t\tconst defaultOptions = {\n\t\t\tentities: ALL_ENTITIES,\n\t\t};\n\t\treturn {\n\t\t\tmodule: MongoMemoryDatabaseModule,\n\t\t\timports: [createMikroOrmModule({ ...defaultOptions, ...options })],\n\t\t\texports: [MikroOrmModule],\n\t\t};\n\t}\n\n\t// close db connection and stop mongo server\n\t// NOTE: we have to call close() on this module to make nest call this callback\n\tasync onModuleDestroy(): Promise {\n\t\tawait this.orm.close();\n\t\tawait this.mongod.stop();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MoveElementParams.html":{"url":"classes/MoveElementParams.html","title":"class - MoveElementParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MoveElementParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                from\n                            \n                            \n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MoveElementPosition\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MoveElementPosition\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { ValidateNested, IsNumber, Min, IsOptional } from 'class-validator';\n\n/**\n * DTO for Updating the position of a Dashboard Element.\n */\n\nexport class MoveElementPosition {\n\t@IsNumber()\n\t@Min(0)\n\t@ApiProperty()\n\tx!: number;\n\n\t@IsNumber()\n\t@Min(0)\n\t@ApiProperty()\n\ty!: number;\n\n\t@IsNumber()\n\t@Min(0)\n\t@IsOptional()\n\t@ApiPropertyOptional({ description: 'used to identify a position within a group.' })\n\tgroupIndex?: number;\n}\n\nexport class MoveElementParams {\n\t@ValidateNested()\n\t@ApiProperty()\n\tfrom!: MoveElementPosition;\n\n\t@ValidateNested()\n\t@ApiProperty()\n\tto!: MoveElementPosition;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MoveElementPosition.html":{"url":"classes/MoveElementPosition.html","title":"class - MoveElementPosition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MoveElementPosition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for Updating the position of a Dashboard Element.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                groupIndex\n                            \n                            \n                                x\n                            \n                            \n                                y\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        groupIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Min(0)@IsOptional()@ApiPropertyOptional({description: 'used to identify a position within a group.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        x\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Min(0)@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        y\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Min(0)@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { ValidateNested, IsNumber, Min, IsOptional } from 'class-validator';\n\n/**\n * DTO for Updating the position of a Dashboard Element.\n */\n\nexport class MoveElementPosition {\n\t@IsNumber()\n\t@Min(0)\n\t@ApiProperty()\n\tx!: number;\n\n\t@IsNumber()\n\t@Min(0)\n\t@ApiProperty()\n\ty!: number;\n\n\t@IsNumber()\n\t@Min(0)\n\t@IsOptional()\n\t@ApiPropertyOptional({ description: 'used to identify a position within a group.' })\n\tgroupIndex?: number;\n}\n\nexport class MoveElementParams {\n\t@ValidateNested()\n\t@ApiProperty()\n\tfrom!: MoveElementPosition;\n\n\t@ValidateNested()\n\t@ApiProperty()\n\tto!: MoveElementPosition;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/News.html":{"url":"entities/News.html","title":"entity - News","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  News\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/news.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:35\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'creatorId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:39\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('School', {fieldName: 'schoolId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTarget\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:51\n                        \n                    \n\n            \n                \n                    id reference to a collection populated later with name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:55\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:31\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'updaterId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:64\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { School } from './school.entity';\nimport type { Team } from './team.entity';\nimport type { User } from './user.entity';\nimport { NewsTarget, NewsTargetModel } from '../types/news.types';\nimport { EntityId } from '../types';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId | School;\n\tcreator: EntityId | User;\n\ttarget: EntityId | NewsTarget;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: User;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTarget;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel!: NewsTargetModel;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToOne('User', { fieldName: 'creatorId' })\n\tcreator!: User;\n\n\t@ManyToOne('User', { fieldName: 'updaterId' })\n\tupdater?: User;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, updater: props.updater, target: props.target });\n\t\tthis.externalId = props.externalId;\n\t\tthis.source = props.source;\n\t\tthis.sourceDescription = props.sourceDescription;\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne('School')\n\ttarget!: School;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne('Course')\n\ttarget!: Course;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne('Team')\n\ttarget!: Team;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NewsController.html":{"url":"controllers/NewsController.html","title":"controller - NewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/news.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                news\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(currentUser: ICurrentUser, params: CreateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:21\n                \n            \n\n\n            \n                \n                    Create a news by a user in a given scope (school or team).\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:84\n                \n            \n\n\n            \n                \n                    Delete a news.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, scope: NewsFilterQuery, pagination: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:35\n                \n            \n\n\n            \n                \n                    Responds with all news for a user.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:56\n                \n            \n\n\n            \n                \n                    Retrieve a specific news entry by id.\nA user may only read news of scopes he has the read permission.\nThe news entity has school and user names populated.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(newsId: string, currentUser: ICurrentUser, params: UpdateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:70\n                \n            \n\n\n            \n                \n                    Update properties of a news.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Query, Patch, Delete } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ICurrentUser } from '@shared/domain';\nimport { ParseObjectIdPipe, PaginationQuery } from '@shared/controller';\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\nimport { NewsUc } from '../uc/news.uc';\n\nimport { CreateNewsParams, NewsFilterQuery, NewsListResponse, NewsResponse, UpdateNewsParams } from './dto';\nimport { NewsMapper } from '../mapper/news.mapper';\n\n@ApiTags('News')\n@Authenticate('jwt')\n@Controller('news')\nexport class NewsController {\n\tconstructor(private readonly newsUc: NewsUc) {}\n\n\t/**\n\t * Create a news by a user in a given scope (school or team).\n\t */\n\t@Post()\n\tasync create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n\t\tconst news = await this.newsUc.create(\n\t\t\tcurrentUser.userId,\n\t\t\tcurrentUser.schoolId,\n\t\t\tNewsMapper.mapCreateNewsToDomain(params)\n\t\t);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t/**\n\t * Responds with all news for a user.\n\t */\n\t@Get()\n\tasync findAll(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() scope: NewsFilterQuery,\n\t\t@Query() pagination: PaginationQuery\n\t): Promise {\n\t\tconst [newsList, count] = await this.newsUc.findAllForUser(\n\t\t\tcurrentUser.userId,\n\t\t\tNewsMapper.mapNewsScopeToDomain(scope),\n\t\t\t{ pagination }\n\t\t);\n\t\tconst dtoList = newsList.map((news) => NewsMapper.mapToResponse(news));\n\t\tconst response = new NewsListResponse(dtoList, count);\n\t\treturn response;\n\t}\n\n\t/**\n\t * Retrieve a specific news entry by id.\n\t * A user may only read news of scopes he has the read permission.\n\t * The news entity has school and user names populated.\n\t */\n\t@Get(':id')\n\tasync findOne(\n\t\t// A parameter pipe like ParseObjectIdPipe gives us the guarantee of typesafety for @Param\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst news = await this.newsUc.findOneByIdForUser(newsId, currentUser.userId);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t/**\n\t * Update properties of a news.\n\t */\n\t@Patch(':id')\n\tasync update(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Body() params: UpdateNewsParams\n\t): Promise {\n\t\tconst news = await this.newsUc.update(newsId, currentUser.userId, NewsMapper.mapUpdateNewsToDomain(params));\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t/**\n\t * Delete a news.\n\t */\n\t@Delete(':id')\n\tasync delete(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst deletedId = await this.newsUc.delete(newsId, currentUser.userId);\n\t\treturn deletedId;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsFilterQuery.html":{"url":"classes/NewsFilterQuery.html","title":"class - NewsFilterQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsFilterQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news-filter.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                targetId\n                            \n                            \n                                    Optional\n                                targetModel\n                            \n                            \n                                    Optional\n                                unpublished\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        targetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()@ApiPropertyOptional({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the news are related (works only together with targetModel)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@IsIn(TARGET_MODEL_VALUES)@ApiPropertyOptional({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the news are related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        unpublished\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()@StringToBoolean()@ApiPropertyOptional({description: 'Flag that filters if the news should be published or not'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsBoolean, IsIn, IsMongoId, IsOptional, IsString } from 'class-validator';\nimport { StringToBoolean } from '@shared/controller/transformer';\nimport { NewsTargetModel } from '@shared/domain';\n\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\nexport class NewsFilterQuery {\n\t@IsOptional()\n\t@IsString()\n\t@IsIn(TARGET_MODEL_VALUES)\n\t@ApiPropertyOptional({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the news are related',\n\t})\n\ttargetModel?: string;\n\n\t@IsOptional()\n\t@IsMongoId()\n\t@ApiPropertyOptional({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the news are related (works only together with targetModel)',\n\t})\n\ttargetId?: string;\n\n\t@IsOptional()\n\t@IsBoolean()\n\t@StringToBoolean()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Flag that filters if the news should be published or not',\n\t})\n\tunpublished?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsListResponse.html":{"url":"classes/NewsListResponse.html","title":"class - NewsListResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsListResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news.response.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PaginationResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: NewsResponse[], total: number, skip?: number, limit?: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:129\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        NewsResponse[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        skip\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:136\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { PaginationResponse } from '@shared/controller';\nimport { NewsTargetModel } from '@shared/domain';\nimport { SchoolInfoResponse } from './school-info.response';\nimport { TargetInfoResponse } from './target-info.response';\nimport { UserInfoResponse } from './user-info.response';\n\nconst NEWS_SOURCES = ['internal', 'rss'] as const;\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\ntype SourceType = typeof NEWS_SOURCES[number];\nexport class NewsResponse {\n\tconstructor({\n\t\tid,\n\t\ttitle,\n\t\tcontent,\n\t\tdisplayAt,\n\t\tsource,\n\t\tsourceDescription,\n\t\ttargetModel,\n\t\ttargetId,\n\t\ttarget,\n\t\tschool,\n\t\tcreator,\n\t\tupdater,\n\t\tcreatedAt,\n\t\tupdatedAt,\n\t\tpermissions,\n\t}: NewsResponse) {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.content = content;\n\t\tthis.displayAt = displayAt;\n\t\tthis.source = source;\n\t\tthis.sourceDescription = sourceDescription;\n\t\tthis.targetModel = targetModel;\n\t\tthis.targetId = targetId;\n\t\tthis.target = target;\n\t\tthis.school = school;\n\t\tthis.creator = creator;\n\t\tthis.updater = updater;\n\t\tthis.createdAt = createdAt;\n\t\tthis.updatedAt = updatedAt;\n\t\tthis.permissions = permissions;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the News entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n\n\t@ApiPropertyOptional({\n\t\ttype: 'string',\n\t\tenum: NEWS_SOURCES,\n\t\tdescription: 'The type of source of the News entity',\n\t})\n\tsource?: SourceType;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'The source description of the News entity',\n\t})\n\tsourceDescription?: string;\n\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel: string;\n\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The target object with id and name, could be the school, team, or course name',\n\t})\n\ttarget: TargetInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The School ownership',\n\t})\n\tschool: SchoolInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'Reference to the User that created the News entity',\n\t})\n\tcreator: UserInfoResponse;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'Reference to the User that updated the News entity',\n\t})\n\tupdater?: UserInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The creation timestamp',\n\t})\n\tcreatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'The update timestamp',\n\t})\n\tupdatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'List of permissions the current user has for the News entity',\n\t})\n\tpermissions: string[];\n}\n\nexport class NewsListResponse extends PaginationResponse {\n\tconstructor(data: NewsResponse[], total: number, skip?: number, limit?: number) {\n\t\tsuper(total, skip, limit);\n\t\tthis.data = data;\n\t}\n\n\t@ApiProperty({ type: [NewsResponse] })\n\tdata: NewsResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsMapper.html":{"url":"classes/NewsMapper.html","title":"class - NewsMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/news.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapCreateNewsToDomain\n                            \n                            \n                                    Static\n                                mapNewsScopeToDomain\n                            \n                            \n                                    Static\n                                mapToResponse\n                            \n                            \n                                    Static\n                                mapUpdateNewsToDomain\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapCreateNewsToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapCreateNewsToDomain(params: CreateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ICreateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapNewsScopeToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapNewsScopeToDomain(query: NewsFilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         INewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapUpdateNewsToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapUpdateNewsToDomain(params: UpdateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IUpdateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { News, ICreateNews, INewsScope, IUpdateNews, NewsTargetModel } from '@shared/domain';\nimport { CreateNewsParams, NewsFilterQuery, NewsResponse, UpdateNewsParams } from '../controller/dto';\nimport { SchoolInfoMapper } from './school-info.mapper';\nimport { TargetInfoMapper } from './target-info.mapper';\nimport { UserInfoMapper } from './user-info.mapper';\n\nexport class NewsMapper {\n\tstatic mapToResponse(news: News): NewsResponse {\n\t\tconst target = TargetInfoMapper.mapToResponse(news.target);\n\t\tconst school = SchoolInfoMapper.mapToResponse(news.school);\n\t\tconst creator = UserInfoMapper.mapToResponse(news.creator);\n\n\t\tconst dto = new NewsResponse({\n\t\t\tid: news.id,\n\t\t\ttitle: news.title,\n\t\t\tcontent: news.content,\n\t\t\tdisplayAt: news.displayAt,\n\t\t\tsource: news.source,\n\t\t\tsourceDescription: news.sourceDescription,\n\t\t\ttargetId: news.target.id,\n\t\t\ttargetModel: news.targetModel,\n\t\t\ttarget,\n\t\t\tschool,\n\t\t\tcreator,\n\t\t\tcreatedAt: news.createdAt,\n\t\t\tupdatedAt: news.updatedAt,\n\t\t\tpermissions: news.permissions,\n\t\t});\n\n\t\tif (news.updater) {\n\t\t\tdto.updater = UserInfoMapper.mapToResponse(news.updater);\n\t\t}\n\n\t\treturn dto;\n\t}\n\n\tstatic mapNewsScopeToDomain(query: NewsFilterQuery): INewsScope {\n\t\tconst dto: INewsScope = {};\n\t\tif (query.targetModel) {\n\t\t\tdto.target = {\n\t\t\t\ttargetModel: query.targetModel as NewsTargetModel,\n\t\t\t\ttargetId: query.targetId,\n\t\t\t};\n\t\t}\n\t\tif ('unpublished' in query) {\n\t\t\tdto.unpublished = query.unpublished;\n\t\t}\n\t\treturn dto;\n\t}\n\n\tstatic mapCreateNewsToDomain(params: CreateNewsParams): ICreateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.content,\n\t\t\tdisplayAt: params.displayAt,\n\t\t\ttarget: {\n\t\t\t\ttargetModel: params.targetModel as NewsTargetModel,\n\t\t\t\ttargetId: params.targetId,\n\t\t\t},\n\t\t};\n\t\treturn dto;\n\t}\n\n\tstatic mapUpdateNewsToDomain(params: UpdateNewsParams): IUpdateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.content,\n\t\t\tdisplayAt: params.displayAt,\n\t\t};\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewsModule.html":{"url":"modules/NewsModule.html","title":"module - NewsModule","body":"\n                   \n\n\n\n\n    Modules\n    NewsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_imports\n\n\n\ncluster_NewsModule_exports\n\n\n\ncluster_NewsModule_providers\n\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/news/news.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NewsRepo\n                        \n                        \n                            NewsUc\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NewsController\n                        \n                        \n                            TeamNewsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthorizationModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NewsUc\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LoggerModule } from '@src/core/logger';\nimport { AuthorizationModule } from '@src/modules/authorization';\nimport { NewsRepo } from '@shared/repo';\nimport { NewsUc } from './uc/news.uc';\nimport { NewsController } from './controller/news.controller';\nimport { TeamNewsController } from './controller/team-news.controller';\n\n/* NewsController\n * to enable:\n * - unskip e2e tests\n * - execute migration news_add_target_schools (in migrations/scheduled)\n * - update backup/setup/news.json from db after migration has been executed\n */\n@Module({\n\timports: [AuthorizationModule, LoggerModule],\n\tcontrollers: [NewsController, TeamNewsController],\n\tproviders: [NewsUc, NewsRepo],\n\texports: [NewsUc],\n})\nexport class NewsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsRepo.html":{"url":"injectables/NewsRepo.html","title":"injectable - NewsRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NewsRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/news/news.repo.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseRepo\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                propertiesToPopulate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Private\n                                    Async\n                                findNewsAndCount\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                persist\n                            \n                            \n                                persistAll\n                            \n                            \n                                    Async\n                                persistAllAndFlush\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                    Async\n                                removeAllAndFlush\n                            \n                            \n                                    Async\n                                removeAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(targets: NewsTargetFilter[], unpublished: boolean, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/news/news.repo.ts:19\n                \n            \n\n\n            \n                \n                    Find news\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findNewsAndCount\n                        \n                    \n                \n            \n            \n                \n                    \n                    findNewsAndCount(query: FilterQuery, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/news/news.repo.ts:39\n                \n            \n\n\n            \n                \n                    resolves a news documents list with some elements (school, target, and updator/creator) populated already\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/news/news.repo.ts:32\n                \n            \n\n\n            \n                \n                    resolves a news document with some elements (school, target, and updator/creator) populated already\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                    \n                    flush()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persist\n                        \n                    \n                \n            \n            \n                \npersist(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:9\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAll\n                        \n                    \n                \n            \n            \n                \npersistAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAll\n                        \n                    \n                \n            \n            \n                \nremoveAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        propertiesToPopulate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['school', 'target', 'creator', 'updater']\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/repo/news/news.repo.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { FilterQuery } from '@mikro-orm/core';\nimport { BaseRepo } from '@shared/repo/base.repo';\nimport { QueryOrderMap } from '@mikro-orm/core/enums';\nimport { Counted, CourseNews, EntityId, IFindOptions, News, SchoolNews, TeamNews } from '@shared/domain';\nimport { NewsScope } from './news-scope';\nimport { NewsTargetFilter } from './news-target-filter';\n\n@Injectable()\nexport class NewsRepo extends BaseRepo {\n\tpropertiesToPopulate = ['school', 'target', 'creator', 'updater'];\n\n\t/**\n\t * Find news\n\t * @param targets\n\t * @param unpublished\n\t * @param options\n\t */\n\tasync findAll(\n\t\ttargets: NewsTargetFilter[],\n\t\tunpublished: boolean,\n\t\toptions?: IFindOptions\n\t): Promise> {\n\t\tconst scope = new NewsScope();\n\t\tscope.byTargets(targets);\n\t\tscope.byUnpublished(unpublished);\n\t\tconst countedNewsList = await this.findNewsAndCount(scope.query, options);\n\t\treturn countedNewsList;\n\t}\n\n\t/** resolves a news document with some elements (school, target, and updator/creator) populated already */\n\tasync findOneById(id: EntityId): Promise {\n\t\tconst newsEntity = await this.em.findOneOrFail(News, id);\n\t\tawait this.em.populate(newsEntity, this.propertiesToPopulate);\n\t\treturn newsEntity;\n\t}\n\n\t/** resolves a news documents list with some elements (school, target, and updator/creator) populated already */\n\tprivate async findNewsAndCount(query: FilterQuery, options?: IFindOptions): Promise> {\n\t\tconst { pagination, order } = options || {};\n\t\tconst [newsEntities, count] = await this.em.findAndCount(News, query, {\n\t\t\t...pagination,\n\t\t\torderBy: order as QueryOrderMap,\n\t\t});\n\t\tawait this.em.populate(newsEntities, this.propertiesToPopulate);\n\t\t// populate target for all inheritances of news which not works when the list contains different types\n\t\tconst discriminatorColumn = 'target';\n\t\tconst schoolNews = newsEntities.filter((news) => news instanceof SchoolNews);\n\t\tawait this.em.populate(schoolNews, discriminatorColumn);\n\t\tconst teamNews = newsEntities.filter((news) => news instanceof TeamNews);\n\t\tawait this.em.populate(teamNews, discriminatorColumn);\n\t\tconst courseNews = newsEntities.filter((news) => news instanceof CourseNews);\n\t\tawait this.em.populate(courseNews, discriminatorColumn);\n\t\treturn [newsEntities, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsResponse.html":{"url":"classes/NewsResponse.html","title":"class - NewsResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                createdAt\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                id\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetId\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                updater\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: NewsResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        NewsResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Content of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The creation timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Reference to the User that created the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The point in time from when the News entity schould be displayed'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the News entity', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'List of permissions the current user has for the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:126\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SchoolInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The School ownership'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SourceType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'string', enum: NEWS_SOURCES, description: 'The type of source of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The source description of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TargetInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The target object with id and name, could be the school, team, or course name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Title of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The update timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:121\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Reference to the User that updated the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:111\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { PaginationResponse } from '@shared/controller';\nimport { NewsTargetModel } from '@shared/domain';\nimport { SchoolInfoResponse } from './school-info.response';\nimport { TargetInfoResponse } from './target-info.response';\nimport { UserInfoResponse } from './user-info.response';\n\nconst NEWS_SOURCES = ['internal', 'rss'] as const;\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\ntype SourceType = typeof NEWS_SOURCES[number];\nexport class NewsResponse {\n\tconstructor({\n\t\tid,\n\t\ttitle,\n\t\tcontent,\n\t\tdisplayAt,\n\t\tsource,\n\t\tsourceDescription,\n\t\ttargetModel,\n\t\ttargetId,\n\t\ttarget,\n\t\tschool,\n\t\tcreator,\n\t\tupdater,\n\t\tcreatedAt,\n\t\tupdatedAt,\n\t\tpermissions,\n\t}: NewsResponse) {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.content = content;\n\t\tthis.displayAt = displayAt;\n\t\tthis.source = source;\n\t\tthis.sourceDescription = sourceDescription;\n\t\tthis.targetModel = targetModel;\n\t\tthis.targetId = targetId;\n\t\tthis.target = target;\n\t\tthis.school = school;\n\t\tthis.creator = creator;\n\t\tthis.updater = updater;\n\t\tthis.createdAt = createdAt;\n\t\tthis.updatedAt = updatedAt;\n\t\tthis.permissions = permissions;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the News entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n\n\t@ApiPropertyOptional({\n\t\ttype: 'string',\n\t\tenum: NEWS_SOURCES,\n\t\tdescription: 'The type of source of the News entity',\n\t})\n\tsource?: SourceType;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'The source description of the News entity',\n\t})\n\tsourceDescription?: string;\n\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel: string;\n\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The target object with id and name, could be the school, team, or course name',\n\t})\n\ttarget: TargetInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The School ownership',\n\t})\n\tschool: SchoolInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'Reference to the User that created the News entity',\n\t})\n\tcreator: UserInfoResponse;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'Reference to the User that updated the News entity',\n\t})\n\tupdater?: UserInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The creation timestamp',\n\t})\n\tcreatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'The update timestamp',\n\t})\n\tupdatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'List of permissions the current user has for the News entity',\n\t})\n\tpermissions: string[];\n}\n\nexport class NewsListResponse extends PaginationResponse {\n\tconstructor(data: NewsResponse[], total: number, skip?: number, limit?: number) {\n\t\tsuper(total, skip, limit);\n\t\tthis.data = data;\n\t}\n\n\t@ApiProperty({ type: [NewsResponse] })\n\tdata: NewsResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsScope.html":{"url":"classes/NewsScope.html","title":"class - NewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/news/news-scope.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _operator\n                            \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                byTargets\n                            \n                            \n                                byUnpublished\n                            \n                            \n                                addQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _operator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScopeOperator\n\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        byTargets\n                        \n                    \n                \n            \n            \n                \nbyTargets(targets: NewsTargetFilter[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/news/news-scope.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byUnpublished\n                        \n                    \n                \n            \n            \n                \nbyUnpublished(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/news/news-scope.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { News } from '@shared/domain';\nimport { EmptyResultQuery } from '../query';\nimport { Scope } from '../scope';\nimport { NewsTargetFilter } from './news-target-filter';\n\nexport class NewsScope extends Scope {\n\tbyTargets(targets: NewsTargetFilter[]): NewsScope {\n\t\tconst queries: FilterQuery[] = targets.map((target) => {\n\t\t\treturn { $and: [{ targetModel: target.targetModel }, { 'target:in': target.targetIds }] };\n\t\t});\n\t\tif (queries.length === 0) {\n\t\t\t// mission impossile query to ensure empty query result\n\t\t\tthis.addQuery(EmptyResultQuery);\n\t\t} else if (queries.length === 1) {\n\t\t\tthis.addQuery(queries[0]);\n\t\t} else {\n\t\t\tthis.addQuery({ $or: queries });\n\t\t}\n\t\treturn this;\n\t}\n\n\tbyUnpublished(unpublished: boolean): NewsScope {\n\t\tconst now = new Date();\n\t\tthis.addQuery({ displayAt: unpublished ? { $gt: now } : { $lte: now } });\n\t\treturn this;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NewsTargetFilter.html":{"url":"interfaces/NewsTargetFilter.html","title":"interface - NewsTargetFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NewsTargetFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/news/news-target-filter.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            targetIds\n                                        \n                                \n                                \n                                        \n                                            targetModel\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        targetIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        targetIds:         EntityId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        targetModel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        targetModel:         NewsTargetModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NewsTargetModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId, NewsTargetModel } from '@shared/domain';\n\nexport interface NewsTargetFilter {\n\ttargetModel: NewsTargetModel;\n\ttargetIds: EntityId[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsUc.html":{"url":"injectables/NewsUc.html","title":"injectable - NewsUc","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NewsUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/uc/news.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAllForUser\n                            \n                            \n                                    Async\n                                findOneByIdForUser\n                            \n                            \n                                    Private\n                                    Async\n                                getNewsPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Static\n                                getRequiredPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getTargetFilters\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(newsRepo: NewsRepo, authorizationService: AuthorizationService)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/uc/news.uc.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newsRepo\n                                                  \n                                                        \n                                                                        NewsRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizationService\n                                                  \n                                                        \n                                                                        AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userId: EntityId, schoolId: EntityId, params: ICreateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                ICreateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForUser(userId: EntityId, scope?: INewsScope, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:64\n                \n            \n\n\n            \n                \n                    Provides news for a user, by default odered by displayAt to show latest news first.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByIdForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByIdForUser(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getNewsPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNewsPermissions(userId: EntityId, news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getPermittedTargets\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                                Permission[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        getRequiredPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequiredPermissions(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        news with displayAt set to future date are not published for users with view permission\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getTargetFilters\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTargetFilters(userId: EntityId, targetModels: NewsTargetModel[], permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModels\n                                    \n                                                NewsTargetModel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: EntityId, userId: EntityId, params: IUpdateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                IUpdateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILogger\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/uc/news.uc.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport {\n\tEntityId,\n\tIFindOptions,\n\tNews,\n\tSortOrder,\n\tNewsTargetModel,\n\tICreateNews,\n\tINewsScope,\n\tIUpdateNews,\n} from '@shared/domain';\nimport { Counted } from '@shared/domain/types';\nimport { Logger, ILogger } from '@src/core/logger';\nimport { AuthorizationService } from '@src/modules/authorization/authorization.service';\nimport { NewsRepo, NewsTargetFilter } from '@shared/repo';\n\ntype Permission = 'NEWS_VIEW' | 'NEWS_EDIT';\n\n@Injectable()\nexport class NewsUc {\n\tprivate logger: ILogger;\n\n\tconstructor(private newsRepo: NewsRepo, private authorizationService: AuthorizationService) {\n\t\tthis.logger = new Logger(NewsUc.name);\n\t}\n\n\t/**\n\t *\n\t * @param userId\n\t * @param schoolId\n\t * @param params\n\t * @returns\n\t */\n\tasync create(userId: EntityId, schoolId: EntityId, params: ICreateNews): Promise {\n\t\tthis.logger.log(`create news as user ${userId}`);\n\n\t\tconst { targetModel, targetId } = params.target;\n\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, ['NEWS_CREATE']);\n\n\t\tconst { target, displayAt: paramDisplayAt, ...props } = params;\n\t\t// set news as published by default\n\t\tconst displayAt = paramDisplayAt || new Date();\n\t\tconst news = News.createInstance(targetModel, {\n\t\t\t...props,\n\t\t\tdisplayAt,\n\t\t\tschool: schoolId,\n\t\t\tcreator: userId,\n\t\t\ttarget: targetId,\n\t\t});\n\t\tawait this.newsRepo.persistAndFlush(news);\n\n\t\tthis.logger.log(`news ${news.id} created by user ${userId}`);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t * Provides news for a user, by default odered by displayAt to show latest news first.\n\t * @param userId\n\t * @param scope\n\t * @param pagination\n\t * @returns\n\t */\n\tasync findAllForUser(userId: EntityId, scope?: INewsScope, options?: IFindOptions): Promise> {\n\t\tthis.logger.log(`start find all news for user ${userId}`);\n\n\t\tconst unpublished = !!scope?.unpublished; // default is only published news\n\t\tconst permissions: [Permission] = NewsUc.getRequiredPermissions(unpublished);\n\n\t\tconst targets = await this.getPermittedTargets(userId, scope, permissions);\n\n\t\tif (options == null) options = {};\n\t\t// by default show latest news first\n\t\tif (options.order == null) options.order = { displayAt: SortOrder.desc };\n\n\t\tconst [newsList, newsCount] = await this.newsRepo.findAll(targets, unpublished, options);\n\n\t\tawait Promise.all(\n\t\t\tnewsList.map(async (news: News) => {\n\t\t\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\t\t\t})\n\t\t);\n\n\t\tthis.logger.log(`return ${newsList.length} news for user ${userId}`);\n\n\t\treturn [newsList, newsCount];\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync findOneByIdForUser(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start find one news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tconst isPublished = news.displayAt > new Date();\n\t\tconst requiredPermissions = NewsUc.getRequiredPermissions(isPublished);\n\t\tawait this.authorizationService.checkEntityPermissions(\n\t\t\tuserId,\n\t\t\tnews.targetModel,\n\t\t\tnews.target.id,\n\t\t\trequiredPermissions\n\t\t);\n\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @param params\n\t * @returns\n\t */\n\tasync update(id: EntityId, userId: EntityId, params: IUpdateNews): Promise {\n\t\tthis.logger.log(`start update news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\t// eslint-disable-next-line no-restricted-syntax\n\t\tfor (const [key, value] of Object.entries(params)) {\n\t\t\tif (value) {\n\t\t\t\tnews[key] = value;\n\t\t\t}\n\t\t}\n\n\t\tawait this.newsRepo.persistAndFlush(news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync delete(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start remove news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\tawait this.newsRepo.removeAndFlush(news);\n\n\t\treturn id;\n\t}\n\n\tprivate async getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[]) {\n\t\tlet targets: NewsTargetFilter[];\n\n\t\tif (scope?.target == null) {\n\t\t\t// for all target models\n\t\t\ttargets = await this.getTargetFilters(userId, Object.values(NewsTargetModel), permissions);\n\t\t} else {\n\t\t\tconst { targetModel, targetId } = scope.target;\n\t\t\tif (targetModel && targetId) {\n\t\t\t\t// for specific news target\n\t\t\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, permissions);\n\t\t\t\ttargets = [{ targetModel, targetIds: [targetId] }];\n\t\t\t} else {\n\t\t\t\t// for single target model\n\t\t\t\ttargets = await this.getTargetFilters(userId, [targetModel], permissions);\n\t\t\t}\n\t\t}\n\t\treturn targets;\n\t}\n\n\tprivate async getTargetFilters(\n\t\tuserId: EntityId,\n\t\ttargetModels: NewsTargetModel[],\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst targets = await Promise.all(\n\t\t\ttargetModels.map(async (targetModel) => {\n\t\t\t\treturn {\n\t\t\t\t\ttargetModel,\n\t\t\t\t\ttargetIds: await this.authorizationService.getPermittedEntities(userId, targetModel, permissions),\n\t\t\t\t};\n\t\t\t})\n\t\t);\n\t\tconst nonEmptyTargets = targets.filter((target) => target.targetIds.length > 0);\n\n\t\treturn nonEmptyTargets;\n\t}\n\n\tprivate async getNewsPermissions(userId: EntityId, news: News): Promise {\n\t\tconst permissions = await this.authorizationService.getEntityPermissions(userId, news.targetModel, news.target.id);\n\t\treturn permissions.filter((permission) => permission.includes('NEWS'));\n\t}\n\n\t/**\n\t *\n\t * @param unpublished news with displayAt set to future date are not published for users with view permission\n\t * @returns\n\t */\n\tprivate static getRequiredPermissions(unpublished: boolean): [Permission] {\n\t\treturn unpublished ? ['NEWS_EDIT'] : ['NEWS_VIEW'];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Options.html":{"url":"interfaces/Options.html","title":"interface - Options","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Options\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/console/database-management.console.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            collection\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            override\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        collection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        collection:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        override\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        override:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Command, Console } from 'nestjs-console';\nimport { ConsoleWriterService } from '@shared/infra/console/console-writer/console-writer.service';\nimport { DatabaseManagementUc } from '../uc/database-management.uc';\n\ninterface Options {\n\tcollection?: string;\n\toverride?: boolean;\n}\n\n@Console({ command: 'database', description: 'database setup console' })\nexport class DatabaseManagementConsole {\n\tconstructor(private consoleWriter: ConsoleWriterService, private databaseManagementUc: DatabaseManagementUc) {}\n\n\t@Command({\n\t\tcommand: 'seed',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tflags: '-c, --collection ',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'filter for a single ',\n\t\t\t},\n\t\t],\n\t\tdescription: 'reset database collections with seed data from filesystem',\n\t})\n\tasync seedCollections(options: Options): Promise {\n\t\tconst filter = options?.collection ? [options.collection] : undefined;\n\t\tconst collections = await this.databaseManagementUc.seedDatabaseCollectionsFromFileSystem(filter);\n\t\tconst report = JSON.stringify(collections);\n\t\tthis.consoleWriter.info(report);\n\t\treturn collections;\n\t}\n\n\t@Command({\n\t\tcommand: 'export',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tflags: '-c, --collection ',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'filter for a single ',\n\t\t\t},\n\t\t\t{\n\t\t\t\tflags: '-o, --override',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'optional export collections to setup folder and override existing files',\n\t\t\t},\n\t\t],\n\t\tdescription: 'export database collections to filesystem',\n\t})\n\tasync exportCollections(options: Options): Promise {\n\t\tconst filter = options?.collection ? [options.collection] : undefined;\n\t\tconst toSeedFolder = options?.override ? true : undefined;\n\t\tconst collections = await this.databaseManagementUc.exportCollectionsToFileSystem(filter, toSeedFolder);\n\t\tconst report = JSON.stringify(collections);\n\t\tthis.consoleWriter.info(report);\n\t\treturn collections;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationQuery.html":{"url":"classes/PaginationQuery.html","title":"class - PaginationQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(1)@Max(100)@ApiPropertyOptional({description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.query.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(0)@ApiPropertyOptional({description: 'Number of elements (not pages) to be skipped'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.query.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, Max, Min } from 'class-validator';\nimport { ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class PaginationQuery {\n\t@IsInt()\n\t@Min(0)\n\t@ApiPropertyOptional({ description: 'Number of elements (not pages) to be skipped' })\n\tskip?: number = 0;\n\n\t@IsInt()\n\t@Min(1)\n\t@Max(100)\n\t@ApiPropertyOptional({ description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99 })\n\tlimit?: number = 10;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationResponse.html":{"url":"classes/PaginationResponse.html","title":"class - PaginationResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                data\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(total: number, skip?: number, limit?: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        skip\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport abstract class PaginationResponse {\n\tconstructor(total: number, skip?: number, limit?: number) {\n\t\tthis.total = total;\n\t\tthis.skip = skip;\n\t\tthis.limit = limit;\n\t}\n\n\t@ApiProperty()\n\tabstract data: T;\n\n\t@ApiProperty({ type: 'number' })\n\ttotal: number;\n\n\t@ApiProperty({ type: 'number' })\n\tskip?: number;\n\n\t@ApiProperty({ type: 'number' })\n\tlimit?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ParseObjectIdPipe.html":{"url":"injectables/ParseObjectIdPipe.html","title":"injectable - ParseObjectIdPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ParseObjectIdPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, BadRequestException } from '@nestjs/common';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { EntityId } from '@shared/domain';\n\n@Injectable()\nexport class ParseObjectIdPipe implements PipeTransform {\n\ttransform(value: string): string {\n\t\tconst validObjectId = ObjectId.isValid(value);\n\n\t\tif (!validObjectId) {\n\t\t\tthrow new BadRequestException('Invalid ObjectId');\n\t\t}\n\n\t\treturn value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchGroupParams.html":{"url":"classes/PatchGroupParams.html","title":"class - PatchGroupParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchGroupParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/patchGroup.params.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for Patching a the group name of a grid element.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Title of the Group grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/patchGroup.params.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\n/**\n * DTO for Patching a the group name of a grid element.\n */\nexport class PatchGroupParams {\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Title of the Group grid element',\n\t})\n\ttitle!: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PermissionService.html":{"url":"injectables/PermissionService.html","title":"injectable - PermissionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PermissionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/service/permission.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolvePermissions\n                            \n                            \n                                    Private\n                                resolvePermissionsByRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resolvePermissions\n                        \n                    \n                \n            \n            \n                \nresolvePermissions(user: User)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/service/permission.service.ts:14\n                \n            \n\n\n            \n                \n                    Recursively resolve all roles and permissions of a user.\nIMPORTANT: The role collections of the user and nested roles will not be loaded lazily.\nPlease make sure you populate them before calling this method.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        resolvePermissionsByRoles\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolvePermissionsByRoles(inputRoles: Role[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/service/permission.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    inputRoles\n                                    \n                                                Role[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Role } from '../entity/role.entity';\nimport { User } from '../entity/user.entity';\n\n@Injectable()\nexport class PermissionService {\n\t/**\n\t * Recursively resolve all roles and permissions of a user.\n\t * IMPORTANT: The role collections of the user and nested roles will not be loaded lazily.\n\t * Please make sure you populate them before calling this method.\n\t * @param user\n\t * @returns\n\t */\n\tresolvePermissions(user: User): string[] {\n\t\tif (!user.roles.isInitialized(true)) {\n\t\t\tthrow new Error('Roles items are not loaded.');\n\t\t}\n\t\tconst rolesAndPermissions = this.resolvePermissionsByRoles(user.roles.getItems());\n\n\t\treturn rolesAndPermissions;\n\t}\n\n\tprivate resolvePermissionsByRoles(inputRoles: Role[]): string[] {\n\t\tlet permissions: string[] = [];\n\n\t\tfor (let i = 0; i  0) {\n\t\t\t\tconst subPermissions = this.resolvePermissionsByRoles(innerRoles);\n\t\t\t\tpermissions = [...permissions, ...subPermissions];\n\t\t\t}\n\t\t}\n\n\t\tpermissions = [...new Set(permissions)];\n\n\t\treturn permissions;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlainTextMailContent.html":{"url":"interfaces/PlainTextMailContent.html","title":"interface - PlainTextMailContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlainTextMailContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailContent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            htmlContent\n                                        \n                                \n                                \n                                        \n                                            plainTextContent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        htmlContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        htmlContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plainTextContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        plainTextContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResolvedUser.html":{"url":"classes/ResolvedUser.html","title":"class - ResolvedUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResolvedUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IResolvedUser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                permissions\n                            \n                            \n                                roles\n                            \n                            \n                                schoolId\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        schoolId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IResolvedUser, IRole } from '@shared/domain';\n\nexport type Role = IRole;\n\nexport class ResolvedUser implements IResolvedUser {\n\t@ApiProperty()\n\tfirstName!: string;\n\n\t@ApiProperty()\n\tlastName!: string;\n\n\t@ApiProperty()\n\tid!: string;\n\n\t@ApiProperty()\n\tcreatedAt!: Date;\n\n\t@ApiProperty()\n\tupdatedAt!: Date;\n\n\t@ApiProperty()\n\troles!: Role[];\n\n\t@ApiProperty()\n\tpermissions!: string[];\n\n\t@ApiProperty()\n\tschoolId!: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResolvedUserMapper.html":{"url":"classes/ResolvedUserMapper.html","title":"class - ResolvedUserMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResolvedUserMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/mapper/ResolvedUser.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(user: User, permissions: string[], roles: Role[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/mapper/ResolvedUser.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                                \n                                    roles\n                                    \n                                                Role[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ResolvedUser\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User, Role } from '@shared/domain';\nimport { ResolvedUser } from '../controller/dto';\n\nexport class ResolvedUserMapper {\n\tstatic mapToResponse(user: User, permissions: string[] = [], roles: Role[] = []): ResolvedUser {\n\t\tconst dto = new ResolvedUser();\n\t\tdto.id = user.id;\n\t\tdto.firstName = user.firstName || '';\n\t\tdto.lastName = user.lastName || '';\n\t\tdto.createdAt = user.createdAt;\n\t\tdto.updatedAt = user.updatedAt;\n\t\tdto.schoolId = user.school.toString();\n\t\tdto.roles = roles.map((role) => ({ name: role.name, id: role.id }));\n\n\t\tdto.permissions = permissions;\n\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RocketChatError.html":{"url":"classes/RocketChatError.html","title":"class - RocketChatError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RocketChatError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/rocketchat/rocket-chat.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorType\n                            \n                            \n                                    Private\n                                response\n                            \n                            \n                                    Private\n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(e: any)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/rocketchat/rocket-chat.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        errorType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/rocketchat/rocket-chat.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        response\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GenericData\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/rocketchat/rocket-chat.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/rocketchat/rocket-chat.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpService, Inject, Injectable } from '@nestjs/common';\nimport { catchError } from 'rxjs/operators';\n\nexport interface RocketChatOptions {\n\turi?: string;\n\tadminUser?: string;\n\tadminPassword?: string;\n\tadminId?: string;\n\tadminToken?: string;\n}\n\ntype GenericData = Record;\n\nexport class RocketChatError extends Error {\n\tprivate statusCode: number;\n\n\tprivate response: GenericData;\n\n\t// rocketchat specific error type\n\tprivate errorType: string;\n\n\tconstructor(e: any) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-argument\n\t\tsuper(e.response.statusText);\n\n\t\t// Set the prototype explicitly.\n\t\tObject.setPrototypeOf(this, RocketChatError.prototype);\n\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access\n\t\tthis.statusCode = e.response.statusCode;\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment\n\t\tthis.response = e.response.data;\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment\n\t\tthis.errorType = e.response.data.errorType;\n\t}\n}\n\ninterface AdminIdAndToken {\n\tid: string;\n\ttoken: string;\n}\n\n@Injectable()\nexport class RocketChatService {\n\tprivate adminIdAndToken?: AdminIdAndToken;\n\n\tconstructor(\n\t\t@Inject('ROCKET_CHAT_OPTIONS') private readonly options: RocketChatOptions,\n\t\tprivate readonly httpService: HttpService\n\t) {}\n\n\tpublic async me(authToken: string, userId: string): Promise {\n\t\treturn this.get('/api/v1/me', authToken, userId);\n\t}\n\n\tpublic async setUserStatus(authToken: string, userId: string, status: string): Promise {\n\t\treturn this.post('/api/v1/users.setStatus', authToken, userId, {\n\t\t\tmessage: '',\n\t\t\tstatus,\n\t\t});\n\t}\n\n\tpublic async createUserToken(userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/users.createToken', {\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async logoutUser(authToken: string, userId: string): Promise {\n\t\treturn this.post('/api/v1/logout', authToken, userId, {});\n\t}\n\n\tpublic async getUserList(queryString: string): Promise {\n\t\treturn this.getAsAdmin(`/api/v1/users.list?${queryString}`);\n\t}\n\n\tpublic async unarchiveGroup(groupName: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.unarchive', {\n\t\t\troomName: groupName,\n\t\t});\n\t}\n\n\tpublic async archiveGroup(groupName: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.archive', {\n\t\t\troomName: groupName,\n\t\t});\n\t}\n\n\tpublic async kickUserFromGroup(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.kick', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async inviteUserToGroup(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.invite', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async addGroupModerator(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.addModerator', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async removeGroupModerator(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.removeModerator', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async getGroupModerators(groupName: string): Promise {\n\t\treturn this.getAsAdmin(`/api/v1/groups.moderators?roomName=${groupName}`);\n\t}\n\n\tpublic async getGroupMembers(groupName: string): Promise {\n\t\treturn this.getAsAdmin(`/api/v1/groups.members?roomName=${groupName}`);\n\t}\n\n\tpublic async createGroup(name: string, members: string[]): Promise {\n\t\t// group.name is only used\n\t\treturn this.postAsAdmin('/api/v1/groups.create', {\n\t\t\tname,\n\t\t\tmembers,\n\t\t});\n\t}\n\n\tpublic async deleteGroup(groupName: string): Promise {\n\t\t// group.name is only used\n\t\treturn this.postAsAdmin('/api/v1/groups.delete', {\n\t\t\troomName: groupName,\n\t\t});\n\t}\n\n\tpublic async createUser(email: string, password: string, username: string, name: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/users.create', {\n\t\t\temail,\n\t\t\tpassword,\n\t\t\tusername,\n\t\t\tname,\n\t\t\tverified: true,\n\t\t});\n\t}\n\n\tpublic async deleteUser(username: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/users.delete', {\n\t\t\tusername,\n\t\t});\n\t}\n\n\tprivate async postAsAdmin(path: string, body: GenericData): Promise {\n\t\tconst adminIdAndToken = await this.getAdminIdAndToken();\n\t\treturn this.post(path, adminIdAndToken.token, adminIdAndToken.id, body);\n\t}\n\n\tprivate async getAsAdmin(path: string): Promise {\n\t\tconst adminIdAndToken = await this.getAdminIdAndToken();\n\t\treturn this.get(path, adminIdAndToken.token, adminIdAndToken.id);\n\t}\n\n\tprivate async get(path: string, authToken: string, userId: string): Promise {\n\t\tconst response = await this.httpService\n\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t.get(`${this.options.uri}${path}`, {\n\t\t\t\theaders: {\n\t\t\t\t\t'X-Auth-Token': authToken,\n\t\t\t\t\t'X-User-ID': userId,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tcatchError((e) => {\n\t\t\t\t\tthrow new RocketChatError(e);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.toPromise();\n\t\treturn response?.data as GenericData;\n\t}\n\n\tprivate async post(path: string, authToken: string, userId: string, body: GenericData): Promise {\n\t\tconst response = await this.httpService\n\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t.post(`${this.options.uri}${path}`, body, {\n\t\t\t\theaders: {\n\t\t\t\t\t'X-Auth-Token': authToken,\n\t\t\t\t\t'X-User-ID': userId,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tcatchError((e) => {\n\t\t\t\t\tthrow new RocketChatError(e);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.toPromise();\n\t\treturn response?.data as GenericData;\n\t}\n\n\tprivate async getAdminIdAndToken(): Promise {\n\t\tthis.validateRocketChatConfig();\n\n\t\tif (this.adminIdAndToken) {\n\t\t\treturn this.adminIdAndToken;\n\t\t}\n\n\t\tif (this.options.adminId && this.options.adminToken) {\n\t\t\tconst newVar = { id: this.options.adminId, token: this.options.adminToken } as AdminIdAndToken;\n\t\t\tthis.adminIdAndToken = newVar;\n\t\t\treturn newVar;\n\t\t}\n\t\tconst response = await this.httpService\n\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t.post(`${this.options.uri}/api/v1/login`, {\n\t\t\t\tuser: this.options.adminUser,\n\t\t\t\tpassword: this.options.adminPassword,\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tcatchError((e) => {\n\t\t\t\t\tthrow new RocketChatError(e);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.toPromise();\n\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\t\tconst responseJson = response?.data;\n\t\tthis.adminIdAndToken = {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\tid: responseJson.data.userId as string,\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\ttoken: responseJson.data.authToken as string,\n\t\t} as AdminIdAndToken;\n\t\treturn this.adminIdAndToken;\n\t}\n\n\tprivate validateRocketChatConfig(): void {\n\t\tif (!this.options.uri) {\n\t\t\tthrow new Error('rocket chat uri not set');\n\t\t}\n\t\tif (!(this.options.adminId && this.options.adminToken) && !(this.options.adminUser && this.options.adminPassword)) {\n\t\t\tthrow new Error('rocket chat adminId and adminToken OR adminUser and adminPassword must be set');\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RocketChatModule.html":{"url":"modules/RocketChatModule.html","title":"module - RocketChatModule","body":"\n                   \n\n\n\n\n    Modules\n    RocketChatModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/rocketchat/rocket-chat.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: RocketChatOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/rocketchat/rocket-chat.module.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                RocketChatOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, DynamicModule, HttpModule } from '@nestjs/common';\nimport { RocketChatOptions, RocketChatService } from './rocket-chat.service';\n\n@Module({})\nexport class RocketChatModule {\n\tstatic forRoot(options: RocketChatOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: RocketChatModule,\n\t\t\timports: [HttpModule],\n\t\t\tproviders: [\n\t\t\t\tRocketChatService,\n\t\t\t\t{\n\t\t\t\t\tprovide: 'ROCKET_CHAT_OPTIONS',\n\t\t\t\t\tuseValue: options,\n\t\t\t\t},\n\t\t\t],\n\t\t\texports: [RocketChatService],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RocketChatOptions.html":{"url":"interfaces/RocketChatOptions.html","title":"interface - RocketChatOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RocketChatOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/rocketchat/rocket-chat.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            adminId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            adminPassword\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            adminToken\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            adminUser\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            uri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        adminId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        adminId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        adminPassword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        adminPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        adminToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        adminToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        adminUser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        adminUser:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpService, Inject, Injectable } from '@nestjs/common';\nimport { catchError } from 'rxjs/operators';\n\nexport interface RocketChatOptions {\n\turi?: string;\n\tadminUser?: string;\n\tadminPassword?: string;\n\tadminId?: string;\n\tadminToken?: string;\n}\n\ntype GenericData = Record;\n\nexport class RocketChatError extends Error {\n\tprivate statusCode: number;\n\n\tprivate response: GenericData;\n\n\t// rocketchat specific error type\n\tprivate errorType: string;\n\n\tconstructor(e: any) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-argument\n\t\tsuper(e.response.statusText);\n\n\t\t// Set the prototype explicitly.\n\t\tObject.setPrototypeOf(this, RocketChatError.prototype);\n\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access\n\t\tthis.statusCode = e.response.statusCode;\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment\n\t\tthis.response = e.response.data;\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment\n\t\tthis.errorType = e.response.data.errorType;\n\t}\n}\n\ninterface AdminIdAndToken {\n\tid: string;\n\ttoken: string;\n}\n\n@Injectable()\nexport class RocketChatService {\n\tprivate adminIdAndToken?: AdminIdAndToken;\n\n\tconstructor(\n\t\t@Inject('ROCKET_CHAT_OPTIONS') private readonly options: RocketChatOptions,\n\t\tprivate readonly httpService: HttpService\n\t) {}\n\n\tpublic async me(authToken: string, userId: string): Promise {\n\t\treturn this.get('/api/v1/me', authToken, userId);\n\t}\n\n\tpublic async setUserStatus(authToken: string, userId: string, status: string): Promise {\n\t\treturn this.post('/api/v1/users.setStatus', authToken, userId, {\n\t\t\tmessage: '',\n\t\t\tstatus,\n\t\t});\n\t}\n\n\tpublic async createUserToken(userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/users.createToken', {\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async logoutUser(authToken: string, userId: string): Promise {\n\t\treturn this.post('/api/v1/logout', authToken, userId, {});\n\t}\n\n\tpublic async getUserList(queryString: string): Promise {\n\t\treturn this.getAsAdmin(`/api/v1/users.list?${queryString}`);\n\t}\n\n\tpublic async unarchiveGroup(groupName: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.unarchive', {\n\t\t\troomName: groupName,\n\t\t});\n\t}\n\n\tpublic async archiveGroup(groupName: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.archive', {\n\t\t\troomName: groupName,\n\t\t});\n\t}\n\n\tpublic async kickUserFromGroup(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.kick', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async inviteUserToGroup(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.invite', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async addGroupModerator(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.addModerator', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async removeGroupModerator(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.removeModerator', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async getGroupModerators(groupName: string): Promise {\n\t\treturn this.getAsAdmin(`/api/v1/groups.moderators?roomName=${groupName}`);\n\t}\n\n\tpublic async getGroupMembers(groupName: string): Promise {\n\t\treturn this.getAsAdmin(`/api/v1/groups.members?roomName=${groupName}`);\n\t}\n\n\tpublic async createGroup(name: string, members: string[]): Promise {\n\t\t// group.name is only used\n\t\treturn this.postAsAdmin('/api/v1/groups.create', {\n\t\t\tname,\n\t\t\tmembers,\n\t\t});\n\t}\n\n\tpublic async deleteGroup(groupName: string): Promise {\n\t\t// group.name is only used\n\t\treturn this.postAsAdmin('/api/v1/groups.delete', {\n\t\t\troomName: groupName,\n\t\t});\n\t}\n\n\tpublic async createUser(email: string, password: string, username: string, name: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/users.create', {\n\t\t\temail,\n\t\t\tpassword,\n\t\t\tusername,\n\t\t\tname,\n\t\t\tverified: true,\n\t\t});\n\t}\n\n\tpublic async deleteUser(username: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/users.delete', {\n\t\t\tusername,\n\t\t});\n\t}\n\n\tprivate async postAsAdmin(path: string, body: GenericData): Promise {\n\t\tconst adminIdAndToken = await this.getAdminIdAndToken();\n\t\treturn this.post(path, adminIdAndToken.token, adminIdAndToken.id, body);\n\t}\n\n\tprivate async getAsAdmin(path: string): Promise {\n\t\tconst adminIdAndToken = await this.getAdminIdAndToken();\n\t\treturn this.get(path, adminIdAndToken.token, adminIdAndToken.id);\n\t}\n\n\tprivate async get(path: string, authToken: string, userId: string): Promise {\n\t\tconst response = await this.httpService\n\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t.get(`${this.options.uri}${path}`, {\n\t\t\t\theaders: {\n\t\t\t\t\t'X-Auth-Token': authToken,\n\t\t\t\t\t'X-User-ID': userId,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tcatchError((e) => {\n\t\t\t\t\tthrow new RocketChatError(e);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.toPromise();\n\t\treturn response?.data as GenericData;\n\t}\n\n\tprivate async post(path: string, authToken: string, userId: string, body: GenericData): Promise {\n\t\tconst response = await this.httpService\n\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t.post(`${this.options.uri}${path}`, body, {\n\t\t\t\theaders: {\n\t\t\t\t\t'X-Auth-Token': authToken,\n\t\t\t\t\t'X-User-ID': userId,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tcatchError((e) => {\n\t\t\t\t\tthrow new RocketChatError(e);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.toPromise();\n\t\treturn response?.data as GenericData;\n\t}\n\n\tprivate async getAdminIdAndToken(): Promise {\n\t\tthis.validateRocketChatConfig();\n\n\t\tif (this.adminIdAndToken) {\n\t\t\treturn this.adminIdAndToken;\n\t\t}\n\n\t\tif (this.options.adminId && this.options.adminToken) {\n\t\t\tconst newVar = { id: this.options.adminId, token: this.options.adminToken } as AdminIdAndToken;\n\t\t\tthis.adminIdAndToken = newVar;\n\t\t\treturn newVar;\n\t\t}\n\t\tconst response = await this.httpService\n\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t.post(`${this.options.uri}/api/v1/login`, {\n\t\t\t\tuser: this.options.adminUser,\n\t\t\t\tpassword: this.options.adminPassword,\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tcatchError((e) => {\n\t\t\t\t\tthrow new RocketChatError(e);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.toPromise();\n\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\t\tconst responseJson = response?.data;\n\t\tthis.adminIdAndToken = {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\tid: responseJson.data.userId as string,\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\ttoken: responseJson.data.authToken as string,\n\t\t} as AdminIdAndToken;\n\t\treturn this.adminIdAndToken;\n\t}\n\n\tprivate validateRocketChatConfig(): void {\n\t\tif (!this.options.uri) {\n\t\t\tthrow new Error('rocket chat uri not set');\n\t\t}\n\t\tif (!(this.options.adminId && this.options.adminToken) && !(this.options.adminUser && this.options.adminPassword)) {\n\t\t\tthrow new Error('rocket chat adminId and adminToken OR adminUser and adminPassword must be set');\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Role.html":{"url":"entities/Role.html","title":"entity - Role","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/role.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                permissions\n                            \n                            \n                                roles\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()@Index({name: 'primaryRoleSearchOperation'})@Unique()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/role.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/role.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany({entity: 'Role'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/role.entity.ts:29\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Property, Unique, Index, ManyToMany, Collection } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface IRoleProperties {\n\tpermissions?: string[];\n\troles?: Role[];\n\tname: string;\n}\n\n@Entity({ tableName: 'roles' })\nexport class Role extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'primaryRoleSearchOperation' })\n\t@Unique()\n\tname: string;\n\n\t// @Enum({ items: ['a', 'b', 'c'] }) in array with no permission is valid => validator function\n\t@Property()\n\tpermissions: string[] = [];\n\t// TODO: enum\n\n\t// @ManyToMany('Role', 'roles')\n\t// roles = new Collection(this);\n\n\t// @ManyToMany({ fieldName: 'roles', type: Role })\n\t// roles = new Collection(this);\n\n\t@ManyToMany({ entity: 'Role' })\n\troles = new Collection(this);\n\n\tconstructor(props: IRoleProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tif (props.permissions) this.permissions = props.permissions;\n\t\tif (props.roles) this.roles.set(props.roles);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleRepo.html":{"url":"injectables/RoleRepo.html","title":"injectable - RoleRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/role/role.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/role/role.repo.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/role/role.repo.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/role/role.repo.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cache\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 60000\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/repo/role/role.repo.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId, Role } from '@shared/domain';\n\n@Injectable()\nexport class RoleRepo {\n\tcache = 60000;\n\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findByName(name: string): Promise {\n\t\tconst role = await this.em.findOneOrFail(Role, { name }, { cache: this.cache });\n\t\treturn role;\n\t}\n\n\tasync findById(id: EntityId): Promise {\n\t\tconst role = await this.em.findOneOrFail(Role, { id }, { cache: this.cache });\n\n\t\treturn role;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RoomsController.html":{"url":"controllers/RoomsController.html","title":"controller - RoomsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RoomsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/rooms.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                rooms\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getRoomBoard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getRoomBoard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRoomBoard(roomId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id/board')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/controller/rooms.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roomId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param } from '@nestjs/common';\nimport { ParseObjectIdPipe } from '@shared/controller';\nimport { ApiTags } from '@nestjs/swagger';\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\nimport { ICurrentUser } from '@shared/domain';\nimport { RoomsUc } from '../uc/rooms.uc';\nimport { BoardMapper } from '../mapper/board.mapper';\nimport { BoardResponse } from './dto/roomBoardResponse';\n\n@ApiTags('Rooms')\n@Authenticate('jwt')\n@Controller('rooms')\nexport class RoomsController {\n\tconstructor(private readonly roomsUc: RoomsUc, private readonly mapper: BoardMapper) {}\n\n\t@Get(':id/board')\n\tasync getRoomBoard(\n\t\t@Param('id', ParseObjectIdPipe) roomId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst board = await this.roomsUc.getBoard(roomId, currentUser.userId);\n\t\tconst mapped = this.mapper.mapToResponse(board);\n\t\treturn mapped;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoomsUc.html":{"url":"injectables/RoomsUc.html","title":"injectable - RoomsUc","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoomsUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/uc/rooms.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addStatusToTasks\n                            \n                            \n                                    Private\n                                buildBoard\n                            \n                            \n                                    Async\n                                getBoard\n                            \n                            \n                                    Private\n                                isTeacher\n                            \n                            \n                                    Private\n                                taskFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(courseRepo: CourseRepo, taskRepo: TaskRepo, userRepo: UserRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/uc/rooms.uc.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseRepo\n                                                  \n                                                        \n                                                                        CourseRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskRepo\n                                                  \n                                                        \n                                                                        TaskRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        UserRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addStatusToTasks\n                        \n                    \n                \n            \n            \n                \n                    \n                    addStatusToTasks(isTeacher: boolean, tasks: Task[], user: User)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/rooms.uc.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isTeacher\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tasks\n                                    \n                                                Task[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskWithStatusVo[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        buildBoard\n                        \n                    \n                \n            \n            \n                \n                    \n                    buildBoard(room: Course, tasks: TaskWithStatusVo[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/rooms.uc.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    room\n                                    \n                                                Course\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tasks\n                                    \n                                                TaskWithStatusVo[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Board\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getBoard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBoard(roomId: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/rooms.uc.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roomId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isTeacher\n                        \n                    \n                \n            \n            \n                \n                    \n                    isTeacher(user: User, course: Course)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/rooms.uc.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    course\n                                    \n                                                Course\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        taskFilter\n                        \n                    \n                \n            \n            \n                \n                    \n                    taskFilter(isTeacher: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/rooms.uc.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isTeacher\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, Course, Task, TaskWithStatusVo, User } from '@shared/domain';\nimport { CourseRepo, TaskRepo, UserRepo } from '@shared/repo';\n\n// TODO: move this somewhere else\nexport interface Board {\n\troomId: string;\n\tdisplayColor: string;\n\ttitle: string;\n\telements: BoardElement[];\n}\n\nexport type BoardElement = {\n\t// TODO: should become fullblown class\n\ttype: string;\n\tcontent: TaskWithStatusVo;\n};\n\n@Injectable()\nexport class RoomsUc {\n\tconstructor(\n\t\tprivate readonly courseRepo: CourseRepo,\n\t\tprivate readonly taskRepo: TaskRepo,\n\t\tprivate readonly userRepo: UserRepo\n\t) {}\n\n\tasync getBoard(roomId: EntityId, userId: EntityId): Promise {\n\t\tconst user = await this.userRepo.findById(userId, true);\n\n\t\tconst course = await this.courseRepo.findOne(roomId, userId);\n\t\tconst isTeacher = this.isTeacher(user, course);\n\t\tconst taskFilter = this.taskFilter(isTeacher);\n\t\tconst [tasks] = await this.taskRepo.findBySingleParent(user.id, course.id, taskFilter);\n\t\tconst tasksWithStatusVos = this.addStatusToTasks(isTeacher, tasks, user);\n\n\t\tconst board = this.buildBoard(course, tasksWithStatusVos);\n\t\treturn board;\n\t}\n\n\tprivate taskFilter(isTeacher: boolean): { draft?: boolean; noFutureAvailableDate?: boolean } {\n\t\tconst filters: { draft?: boolean; noFutureAvailableDate?: boolean } = {};\n\t\tif (!isTeacher) {\n\t\t\tfilters.draft = false;\n\t\t\tfilters.noFutureAvailableDate = true;\n\t\t\treturn filters;\n\t\t}\n\t\tfilters.draft = true;\n\t\treturn filters;\n\t}\n\n\t// TODO: move somewhere else\n\tprivate buildBoard(room: Course, tasks: TaskWithStatusVo[]): Board {\n\t\tconst roomMetadata = room.getMetadata();\n\t\tconst board = {\n\t\t\troomId: roomMetadata.id,\n\t\t\tdisplayColor: roomMetadata.displayColor,\n\t\t\ttitle: roomMetadata.title,\n\t\t\telements: tasks.map((task) => ({ type: 'task', content: task })),\n\t\t};\n\t\treturn board;\n\t}\n\n\tprivate isTeacher(user: User, course: Course): boolean {\n\t\tif (course.teachers.contains(user) || course.substitutionTeachers.contains(user)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate addStatusToTasks(isTeacher: boolean, tasks: Task[], user: User): TaskWithStatusVo[] {\n\t\tlet tasksWithStatusVos: TaskWithStatusVo[];\n\t\tif (isTeacher) {\n\t\t\ttasksWithStatusVos = tasks.map((task) => {\n\t\t\t\tconst status = task.createTeacherStatusForUser(user);\n\t\t\t\treturn new TaskWithStatusVo(task, status);\n\t\t\t});\n\t\t} else {\n\t\t\ttasksWithStatusVos = tasks.map((task) => {\n\t\t\t\tconst status = task.createStudentStatusForUser(user);\n\t\t\t\treturn new TaskWithStatusVo(task, status);\n\t\t\t});\n\t\t}\n\t\treturn tasksWithStatusVos;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/School.html":{"url":"entities/School.html","title":"entity - School","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  School\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/school.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/school.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from './base.entity';\n\nexport interface ISchoolProperties {\n\tname: string;\n}\n@Entity({ tableName: 'schools' })\nexport class School extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: ISchoolProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoMapper.html":{"url":"classes/SchoolInfoMapper.html","title":"class - SchoolInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/school-info.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(schoolInfo: School)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/school-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    schoolInfo\n                                    \n                                                School\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SchoolInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { School } from '@shared/domain';\nimport { SchoolInfoResponse } from '../controller/dto';\n\nexport class SchoolInfoMapper {\n\tstatic mapToResponse(schoolInfo: School): SchoolInfoResponse {\n\t\tconst dto = new SchoolInfoResponse({ id: schoolInfo.id, name: schoolInfo.name });\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoResponse.html":{"url":"classes/SchoolInfoResponse.html","title":"class - SchoolInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/school-info.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: SchoolInfoResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        SchoolInfoResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the School entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the School entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class SchoolInfoResponse {\n\tconstructor({ id, name }: SchoolInfoResponse) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t}\n\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the School entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The name of the School entity',\n\t})\n\tname: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/SchoolNews.html":{"url":"entities/SchoolNews.html","title":"entity - SchoolNews","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  SchoolNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/news.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('School')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:98\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { School } from './school.entity';\nimport type { Team } from './team.entity';\nimport type { User } from './user.entity';\nimport { NewsTarget, NewsTargetModel } from '../types/news.types';\nimport { EntityId } from '../types';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId | School;\n\tcreator: EntityId | User;\n\ttarget: EntityId | NewsTarget;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: User;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTarget;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel!: NewsTargetModel;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToOne('User', { fieldName: 'creatorId' })\n\tcreator!: User;\n\n\t@ManyToOne('User', { fieldName: 'updaterId' })\n\tupdater?: User;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, updater: props.updater, target: props.target });\n\t\tthis.externalId = props.externalId;\n\t\tthis.source = props.source;\n\t\tthis.sourceDescription = props.sourceDescription;\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne('School')\n\ttarget!: School;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne('Course')\n\ttarget!: Course;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne('Team')\n\ttarget!: Team;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Scope.html":{"url":"classes/Scope.html","title":"class - Scope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Scope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/scope.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _operator\n                            \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    query\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(operator: ScopeOperator)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/scope.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        operator\n                                                  \n                                                        \n                                                                        ScopeOperator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _operator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScopeOperator\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/repo/scope.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/repo/scope.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/scope.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        query\n                    \n                \n\n                \n                    \n                        getquery()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/repo/scope.ts:17\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EmptyResultQuery } from './query/empty-result.query';\n\ntype EmptyResultQueryType = typeof EmptyResultQuery;\n\ntype ScopeOperator = '$and' | '$or';\n\nexport class Scope {\n\tprivate _queries: FilterQuery[] = [];\n\n\tprivate _operator: ScopeOperator;\n\n\tconstructor(operator: ScopeOperator = '$and') {\n\t\tthis._operator = operator;\n\t}\n\n\tget query(): FilterQuery {\n\t\tif (this._queries.length === 0) {\n\t\t\treturn EmptyResultQuery as FilterQuery;\n\t\t}\n\t\tconst query = this._queries.length > 1 ? { [this._operator]: this._queries } : this._queries[0];\n\t\treturn query as FilterQuery;\n\t}\n\n\taddQuery(query: FilterQuery | EmptyResultQueryType): void {\n\t\tthis._queries.push(query);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServerConsole.html":{"url":"classes/ServerConsole.html","title":"class - ServerConsole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServerConsole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/console/server.console.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                            \n                                getInOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(consoleWriter: ConsoleWriterService)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/console/server.console.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        consoleWriter\n                                                  \n                                                        \n                                                                        ConsoleWriterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'test', description: 'sample test output'})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/console/server.console.ts:11\n                \n            \n\n\n            \n                \n                    test method for console output\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInOut\n                        \n                    \n                \n            \n            \n                \ngetInOut(whatever: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'out ', description: 'return input args'})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/console/server.console.ts:17\n                \n            \n\n\n            \n                \n                    test method for console input\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    whatever\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Command, Console } from 'nestjs-console';\nimport { ConsoleWriterService } from '@shared/infra/console';\n\n@Console({ command: 'server', description: 'sample server console' })\nexport class ServerConsole {\n\tconstructor(private consoleWriter: ConsoleWriterService) {}\n\n\t/** test method for console output */\n\t@Command({ command: 'test', description: 'sample test output' })\n\tgetHello(): void {\n\t\tthis.consoleWriter.info('Schulcloud Server API');\n\t}\n\n\t/** test method for console input */\n\t@Command({ command: 'out ', description: 'return input args' })\n\tgetInOut(whatever: string): void {\n\t\tthis.consoleWriter.info(`input was: ${whatever}`);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServerConsoleModule.html":{"url":"modules/ServerConsoleModule.html","title":"module - ServerConsoleModule","body":"\n                   \n\n\n\n\n    Modules\n    ServerConsoleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ServerConsoleModule\n\n\n\ncluster_ServerConsoleModule_imports\n\n\n\n\nConsoleWriterModule\n\nConsoleWriterModule\n\n\n\nServerConsoleModule\n\nServerConsoleModule\n\nServerConsoleModule -->\n\nConsoleWriterModule->ServerConsoleModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nServerConsoleModule -->\n\nFilesModule->ServerConsoleModule\n\n\n\n\n\nManagementModule\n\nManagementModule\n\nServerConsoleModule -->\n\nManagementModule->ServerConsoleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/console/console.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ConsoleWriterModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            ManagementModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConsoleModule } from 'nestjs-console';\nimport { ConsoleWriterModule } from '@shared/infra/console/console-writer/console-writer.module';\nimport { ManagementModule } from '../modules/management/management.module';\nimport { FilesModule } from '../modules/files/files.module';\nimport { ServerConsole } from './server.console';\n\n@Module({\n\timports: [ManagementModule, ConsoleModule, ConsoleWriterModule, FilesModule],\n\tproviders: [\n\t\t/** add console services as providers */\n\t\tServerConsole,\n\t],\n})\nexport class ServerConsoleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ServerController.html":{"url":"controllers/ServerController.html","title":"controller - ServerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ServerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/server.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/server.controller.ts:7\n                \n            \n\n\n            \n                \n                    default route to test public access\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\n\n@Controller()\nexport class ServerController {\n\t/** default route to test public access */\n\t@Get()\n\tgetHello(): string {\n\t\treturn 'Schulcloud Server API';\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServerModule.html":{"url":"modules/ServerModule.html","title":"module - ServerModule","body":"\n                   \n\n\n\n\n    Modules\n    ServerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nServerModule -->\n\nFilesModule->ServerModule\n\n\n\n\n\nImportUserModule\n\nImportUserModule\n\nServerModule -->\n\nImportUserModule->ServerModule\n\n\n\n\n\nLearnroomModule\n\nLearnroomModule\n\nServerModule -->\n\nLearnroomModule->ServerModule\n\n\n\n\n\nNewsModule\n\nNewsModule\n\nServerModule -->\n\nNewsModule->ServerModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nServerModule -->\n\nUserModule->ServerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/server.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Server Module used for production\n\n        \n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            ServerController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            ImportUserModule\n                        \n                        \n                            LearnroomModule\n                        \n                        \n                            NewsModule\n                        \n                        \n                            TaskModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { DynamicModule, Module, NotFoundException } from '@nestjs/common';\nimport { MikroOrmModule } from '@mikro-orm/nestjs';\nimport { Dictionary, IPrimaryKey } from '@mikro-orm/core';\nimport { Configuration } from '@hpi-schul-cloud/commons';\nimport { ALL_ENTITIES } from '@shared/domain';\nimport { MailModule } from '@shared/infra/mail';\nimport { RocketChatModule } from '@src/modules/rocketchat';\nimport { LearnroomModule } from '@src/modules/learnroom';\nimport { CoreModule } from '@src/core';\nimport { TaskModule } from '@src/modules/task';\nimport { UserModule } from '@src/modules/user';\nimport { NewsModule } from '@src/modules/news';\nimport { FilesModule } from '@src/modules/files';\nimport { MongoMemoryDatabaseModule } from '@shared/infra/database';\nimport { MongoDatabaseModuleOptions } from '@shared/infra/database/mongo-memory-database/types';\nimport { AuthModule } from './modules/authentication/auth.module';\nimport { ServerController } from './server.controller';\nimport { DB_URL, DB_USERNAME, DB_PASSWORD } from './config';\nimport { ImportUserModule } from './modules/user-import/user-import.module';\n\nconst serverModules = [\n\tCoreModule,\n\tAuthModule,\n\tTaskModule,\n\tNewsModule,\n\tUserModule,\n\tImportUserModule,\n\tLearnroomModule,\n\tMailModule.forRoot({\n\t\turi: Configuration.get('RABBITMQ_URI') as string,\n\t\texchange: Configuration.get('MAIL_SEND_EXCHANGE') as string,\n\t\troutingKey: Configuration.get('MAIL_SEND_ROUTING_KEY') as string,\n\t}),\n\tFilesModule,\n\tRocketChatModule.forRoot({\n\t\turi: Configuration.get('ROCKET_CHAT_URI') as string,\n\t\tadminId: Configuration.get('ROCKET_CHAT_ADMIN_ID') as string,\n\t\tadminToken: Configuration.get('ROCKET_CHAT_ADMIN_TOKEN') as string,\n\t\tadminUser: Configuration.get('ROCKET_CHAT_ADMIN_USER') as string,\n\t\tadminPassword: Configuration.get('ROCKET_CHAT_ADMIN_PASSWORD') as string,\n\t}),\n];\n\nconst defaultMikroOrmOptions = {\n\tfindOneOrFailHandler: (entityName: string, where: Dictionary | IPrimaryKey) => {\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\treturn new NotFoundException(`The requested ${entityName}: ${where} has not been found.`);\n\t},\n};\n\n/**\n * Server Module used for production\n */\n@Module({\n\timports: [\n\t\t...serverModules,\n\t\tMikroOrmModule.forRoot({\n\t\t\t...defaultMikroOrmOptions,\n\t\t\ttype: 'mongo',\n\t\t\t// TODO add mongoose options as mongo options (see database.js)\n\t\t\tclientUrl: DB_URL,\n\t\t\tpassword: DB_PASSWORD,\n\t\t\tuser: DB_USERNAME,\n\t\t\tentities: ALL_ENTITIES,\n\n\t\t\t// debug: true, // use it for locally debugging of querys\n\t\t}),\n\t],\n\tcontrollers: [ServerController],\n})\nexport class ServerModule {}\n\n/**\n * Server module used for testing.\n * Should have same modules than the @ServerModule while infrastucture Modules can be different.\n * Customizations:\n * - In Memory Database instead of external connection\n * // TODO add custom mail, rocketchat, and rabbitmq modules\n * // TODO use instead of ServerModule when NODE_ENV=test\n */\n@Module({\n\timports: [...serverModules, MongoMemoryDatabaseModule.forRoot({ ...defaultMikroOrmOptions })],\n\tcontrollers: [ServerController],\n})\nexport class ServerTestModule {\n\tstatic forRoot(options?: MongoDatabaseModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: ServerTestModule,\n\t\t\timports: [...serverModules, MongoMemoryDatabaseModule.forRoot({ ...defaultMikroOrmOptions, ...options })],\n\t\t\tcontrollers: [ServerController],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServerTestModule.html":{"url":"modules/ServerTestModule.html","title":"module - ServerTestModule","body":"\n                   \n\n\n\n\n    Modules\n    ServerTestModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ServerTestModule\n\n\n\ncluster_ServerTestModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nServerTestModule\n\nServerTestModule\n\nServerTestModule -->\n\nAuthModule->ServerTestModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nServerTestModule -->\n\nCoreModule->ServerTestModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nServerTestModule -->\n\nFilesModule->ServerTestModule\n\n\n\n\n\nImportUserModule\n\nImportUserModule\n\nServerTestModule -->\n\nImportUserModule->ServerTestModule\n\n\n\n\n\nLearnroomModule\n\nLearnroomModule\n\nServerTestModule -->\n\nLearnroomModule->ServerTestModule\n\n\n\n\n\nMongoMemoryDatabaseModule\n\nMongoMemoryDatabaseModule\n\nServerTestModule -->\n\nMongoMemoryDatabaseModule->ServerTestModule\n\n\n\n\n\nNewsModule\n\nNewsModule\n\nServerTestModule -->\n\nNewsModule->ServerTestModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nServerTestModule -->\n\nTaskModule->ServerTestModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nServerTestModule -->\n\nUserModule->ServerTestModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/server.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Server module used for testing.\nShould have same modules than the @ServerModule while infrastucture Modules can be different.\nCustomizations:\n\nIn Memory Database instead of external connection\n// TODO add custom mail, rocketchat, and rabbitmq modules\n// TODO use instead of ServerModule when NODE_ENV=test\n\n\n        \n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            ServerController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            ImportUserModule\n                        \n                        \n                            LearnroomModule\n                        \n                        \n                            MongoMemoryDatabaseModule\n                        \n                        \n                            NewsModule\n                        \n                        \n                            TaskModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options?: MongoDatabaseModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/server.module.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MongoDatabaseModuleOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module, NotFoundException } from '@nestjs/common';\nimport { MikroOrmModule } from '@mikro-orm/nestjs';\nimport { Dictionary, IPrimaryKey } from '@mikro-orm/core';\nimport { Configuration } from '@hpi-schul-cloud/commons';\nimport { ALL_ENTITIES } from '@shared/domain';\nimport { MailModule } from '@shared/infra/mail';\nimport { RocketChatModule } from '@src/modules/rocketchat';\nimport { LearnroomModule } from '@src/modules/learnroom';\nimport { CoreModule } from '@src/core';\nimport { TaskModule } from '@src/modules/task';\nimport { UserModule } from '@src/modules/user';\nimport { NewsModule } from '@src/modules/news';\nimport { FilesModule } from '@src/modules/files';\nimport { MongoMemoryDatabaseModule } from '@shared/infra/database';\nimport { MongoDatabaseModuleOptions } from '@shared/infra/database/mongo-memory-database/types';\nimport { AuthModule } from './modules/authentication/auth.module';\nimport { ServerController } from './server.controller';\nimport { DB_URL, DB_USERNAME, DB_PASSWORD } from './config';\nimport { ImportUserModule } from './modules/user-import/user-import.module';\n\nconst serverModules = [\n\tCoreModule,\n\tAuthModule,\n\tTaskModule,\n\tNewsModule,\n\tUserModule,\n\tImportUserModule,\n\tLearnroomModule,\n\tMailModule.forRoot({\n\t\turi: Configuration.get('RABBITMQ_URI') as string,\n\t\texchange: Configuration.get('MAIL_SEND_EXCHANGE') as string,\n\t\troutingKey: Configuration.get('MAIL_SEND_ROUTING_KEY') as string,\n\t}),\n\tFilesModule,\n\tRocketChatModule.forRoot({\n\t\turi: Configuration.get('ROCKET_CHAT_URI') as string,\n\t\tadminId: Configuration.get('ROCKET_CHAT_ADMIN_ID') as string,\n\t\tadminToken: Configuration.get('ROCKET_CHAT_ADMIN_TOKEN') as string,\n\t\tadminUser: Configuration.get('ROCKET_CHAT_ADMIN_USER') as string,\n\t\tadminPassword: Configuration.get('ROCKET_CHAT_ADMIN_PASSWORD') as string,\n\t}),\n];\n\nconst defaultMikroOrmOptions = {\n\tfindOneOrFailHandler: (entityName: string, where: Dictionary | IPrimaryKey) => {\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\treturn new NotFoundException(`The requested ${entityName}: ${where} has not been found.`);\n\t},\n};\n\n/**\n * Server Module used for production\n */\n@Module({\n\timports: [\n\t\t...serverModules,\n\t\tMikroOrmModule.forRoot({\n\t\t\t...defaultMikroOrmOptions,\n\t\t\ttype: 'mongo',\n\t\t\t// TODO add mongoose options as mongo options (see database.js)\n\t\t\tclientUrl: DB_URL,\n\t\t\tpassword: DB_PASSWORD,\n\t\t\tuser: DB_USERNAME,\n\t\t\tentities: ALL_ENTITIES,\n\n\t\t\t// debug: true, // use it for locally debugging of querys\n\t\t}),\n\t],\n\tcontrollers: [ServerController],\n})\nexport class ServerModule {}\n\n/**\n * Server module used for testing.\n * Should have same modules than the @ServerModule while infrastucture Modules can be different.\n * Customizations:\n * - In Memory Database instead of external connection\n * // TODO add custom mail, rocketchat, and rabbitmq modules\n * // TODO use instead of ServerModule when NODE_ENV=test\n */\n@Module({\n\timports: [...serverModules, MongoMemoryDatabaseModule.forRoot({ ...defaultMikroOrmOptions })],\n\tcontrollers: [ServerController],\n})\nexport class ServerTestModule {\n\tstatic forRoot(options?: MongoDatabaseModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: ServerTestModule,\n\t\t\timports: [...serverModules, MongoMemoryDatabaseModule.forRoot({ ...defaultMikroOrmOptions, ...options })],\n\t\t\tcontrollers: [ServerController],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/StorageProvider.html":{"url":"entities/StorageProvider.html","title":"entity - StorageProvider","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  StorageProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/storageprovider.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessKeyId\n                            \n                            \n                                endpointUrl\n                            \n                            \n                                    Optional\n                                region\n                            \n                            \n                                secretAccessKey\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accessKeyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/storageprovider.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endpointUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/storageprovider.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        region\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/storageprovider.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        secretAccessKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({fieldName: 'secretAccessKey', type: EncryptedStringType})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/storageprovider.entity.ts:21\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { EncryptedStringType } from '@shared/repo/types/EncryptedString.type';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface IStorageProviderProperties {\n\tendpointUrl: string;\n\taccessKeyId: string;\n\tsecretAccessKey: string;\n\tregion?: string;\n}\n\n@Entity({ tableName: 'storageproviders' })\nexport class StorageProvider extends BaseEntityWithTimestamps {\n\t@Property()\n\tendpointUrl!: string;\n\n\t@Property()\n\taccessKeyId!: string;\n\n\t@Property({ fieldName: 'secretAccessKey', type: EncryptedStringType })\n\tsecretAccessKey!: string;\n\n\t@Property()\n\tregion?: string;\n\n\tconstructor(props: IStorageProviderProperties) {\n\t\tsuper();\n\t\tthis.endpointUrl = props.endpointUrl;\n\t\tthis.accessKeyId = props.accessKeyId;\n\t\tthis.secretAccessKey = props.secretAccessKey;\n\t\tthis.region = props.region;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageProviderRepo.html":{"url":"injectables/StorageProviderRepo.html","title":"injectable - StorageProviderRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StorageProviderRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/storageprovider/storageprovider.repo.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseRepo\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                persist\n                            \n                            \n                                persistAll\n                            \n                            \n                                    Async\n                                persistAllAndFlush\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                    Async\n                                removeAllAndFlush\n                            \n                            \n                                    Async\n                                removeAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/storageprovider/storageprovider.repo.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                    \n                    flush()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persist\n                        \n                    \n                \n            \n            \n                \npersist(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:9\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAll\n                        \n                    \n                \n            \n            \n                \npersistAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAll\n                        \n                    \n                \n            \n            \n                \nremoveAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { StorageProvider, EntityId } from '@shared/domain';\nimport { BaseRepo } from '../base.repo';\n\n@Injectable()\nexport class StorageProviderRepo extends BaseRepo {\n\tasync findOneById(id: EntityId): Promise {\n\t\tconst storageProvider = await this.em.findOneOrFail(StorageProvider, id);\n\t\treturn storageProvider;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Submission.html":{"url":"entities/Submission.html","title":"entity - Submission","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Submission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/submission.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                comment\n                            \n                            \n                                    Optional\n                                courseGroup\n                            \n                            \n                                grade\n                            \n                            \n                                gradeComment\n                            \n                            \n                                gradeFiles\n                            \n                            \n                                student\n                            \n                            \n                                studentFiles\n                            \n                            \n                                task\n                            \n                            \n                                teamMembers\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        courseGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CourseGroup\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('CourseGroup', {fieldName: 'courseGroupId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        grade\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gradeComment\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gradeFiles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('File', undefined, {fieldName: 'gradeFileIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        student\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'studentId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentFiles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('File', undefined, {fieldName: 'fileIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Task', {fieldName: 'homeworkId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teamMembers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('User', undefined, {fieldName: 'teamMembers'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:35\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, ManyToOne, Collection, Property, ManyToMany } from '@mikro-orm/core';\n\nimport { EntityId } from '../types';\n\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { CourseGroup } from './coursegroup.entity';\nimport type { User } from './user.entity';\nimport type { File } from './file.entity';\nimport type { Task } from './task.entity';\n\nexport interface ISubmissionProperties {\n\ttask: Task;\n\tstudent: User;\n\tcourseGroup?: CourseGroup[];\n\tteamMembers?: User[];\n\tcomment: string;\n\tstudentFiles?: File[];\n\tgrade?: number;\n\tgradeComment?: string;\n\tgradeFiles?: File[];\n}\n\n@Entity({ tableName: 'submissions' })\nexport class Submission extends BaseEntityWithTimestamps {\n\t@ManyToOne('Task', { fieldName: 'homeworkId' })\n\ttask: Task;\n\n\t@ManyToOne('User', { fieldName: 'studentId' })\n\tstudent: User;\n\n\t@ManyToOne('CourseGroup', { fieldName: 'courseGroupId' })\n\tcourseGroup?: CourseGroup;\n\n\t@ManyToMany('User', undefined, { fieldName: 'teamMembers' })\n\tteamMembers = new Collection(this);\n\n\t/* ***** student uploads ***** */\n\t@Property()\n\tcomment: string | null;\n\n\t@ManyToMany('File', undefined, { fieldName: 'fileIds' })\n\tstudentFiles = new Collection(this);\n\n\t/* ***** teacher uploads ***** */\n\t@Property()\n\tgrade: number | null;\n\n\t@Property()\n\tgradeComment: string | null;\n\n\t@ManyToMany('File', undefined, { fieldName: 'gradeFileIds' })\n\tgradeFiles = new Collection(this);\n\n\tconstructor(props: ISubmissionProperties) {\n\t\tsuper();\n\t\tthis.student = props.student;\n\t\tthis.comment = props.comment;\n\t\tthis.task = props.task;\n\n\t\tthis.grade = props.grade || null;\n\t\tthis.gradeComment = props.gradeComment || null;\n\n\t\tconst { courseGroup, teamMembers, studentFiles, gradeFiles } = props;\n\t\tObject.assign(this, { courseGroup, teamMembers, studentFiles, gradeFiles });\n\t}\n\n\tisGraded(): boolean {\n\t\tconst isGraded =\n\t\t\t(typeof this.grade === 'number' && this.grade >= 0) ||\n\t\t\t(typeof this.gradeComment === 'string' && this.gradeComment.length > 0) ||\n\t\t\t(this.gradeFiles !== undefined && this.gradeFiles.length > 0);\n\t\treturn isGraded;\n\t}\n\n\tgetStudentId(): EntityId {\n\t\treturn this.student.id;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SubmissionFactory.html":{"url":"classes/SubmissionFactory.html","title":"class - SubmissionFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SubmissionFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/testing/factory/submission.factory.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseFactory\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                propsFactory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                graded\n                            \n                            \n                                afterBuild\n                            \n                            \n                                build\n                            \n                            \n                                buildList\n                            \n                            \n                                buildWithId\n                            \n                            \n                                    Protected\n                                clone\n                            \n                            \n                                    Static\n                                define\n                            \n                            \n                                params\n                            \n                            \n                                rewindSequence\n                            \n                            \n                                    Protected\n                                sequence\n                            \n                            \n                                transient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        propsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Factory\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFactory\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFactory:14\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        graded\n                        \n                    \n                \n            \n            \n                \ngraded()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/submission.factory.ts:8\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        afterBuild\n                        \n                    \n                \n            \n            \n                \nafterBuild(afterBuildFn: HookFn)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:85\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding a function to be called after an object is built.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    afterBuildFn\n                                    \n                                            HookFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe function to call. It accepts your object of type T. The value this function returns gets returned from \"build\"\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        build\n                        \n                    \n                \n            \n            \n                \nbuild(params?: DeepPartial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:45\n\n                \n            \n\n\n            \n                \n                    Build an entity using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildList\n                        \n                    \n                \n            \n            \n                \nbuildList(number: number, params?: DeepPartial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:71\n\n                \n            \n\n\n            \n                \n                    Build a list of entities using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    number\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        a list of entities\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildWithId\n                        \n                    \n                \n            \n            \n                \nbuildWithId(params?: DeepPartial, id?: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:58\n\n                \n            \n\n\n            \n                \n                    Build an entity using your factory and generate a id for it.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        clone\n                        \n                    \n                \n            \n            \n                \n                    \n                    clone(this: F, propsFactory: Factory)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:123\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        F\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                            F\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    propsFactory\n                                    \n                                            Factory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        define\n                        \n                    \n                \n            \n            \n                \n                    \n                    define(this, EntityClass: literal type, generator: GeneratorFn)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:30\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        U\n                        I\n                        F\n                    \n                \n            \n\n            \n                \n                    Define a factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    EntityClass\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The constructor of the entity to be built.\n\n                                    \n                                \n                                \n                                    generator\n                                    \n                                            GeneratorFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Your factory function - see Factory.define() in thoughtbot/fishery\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        params\n                        \n                    \n                \n            \n            \n                \nparams(params: DeepPartial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:97\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rewindSequence\n                        \n                    \n                \n            \n            \n                \nrewindSequence()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:119\n\n                \n            \n\n\n            \n                \n                    Set sequence back to its default value\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        sequence\n                        \n                    \n                \n            \n            \n                \n                    \n                    sequence()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:135\n\n                \n            \n\n\n            \n                \n                    Get the next sequence value\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        the next sequence value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transient\n                        \n                    \n                \n            \n            \n                \ntransient(transient: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:109\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default transient parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    transient\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ntransient params\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DeepPartial } from 'fishery';\nimport { Submission, ISubmissionProperties } from '@shared/domain';\nimport { BaseFactory } from './base.factory';\nimport { taskFactory } from './task.factory';\nimport { userFactory } from './user.factory';\n\nclass SubmissionFactory extends BaseFactory {\n\tgraded(): this {\n\t\tconst params: DeepPartial = { gradeComment: 'graded text' };\n\t\treturn this.params(params);\n\t}\n}\n\nexport const submissionFactory = SubmissionFactory.define(Submission, ({ sequence }) => {\n\treturn {\n\t\ttask: taskFactory.build(),\n\t\tstudent: userFactory.build(),\n\t\tcomment: `submission comment #${sequence}`,\n\t};\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubmissionRepo.html":{"url":"injectables/SubmissionRepo.html","title":"injectable - SubmissionRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SubmissionRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/submission/submission.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                byUserIdQuery\n                            \n                            \n                                    Async\n                                findAllByTaskIds\n                            \n                            \n                                    Async\n                                findAllByUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/submission/submission.repo.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        byUserIdQuery\n                        \n                    \n                \n            \n            \n                \n                    \n                    byUserIdQuery(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/submission/submission.repo.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByTaskIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByTaskIds(taskIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/submission/submission.repo.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByUserId(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/submission/submission.repo.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\n\nimport { Counted, EntityId, CourseGroup, Submission } from '@shared/domain';\n\n// TODO: add scope helper\n\n@Injectable()\nexport class SubmissionRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findAllByTaskIds(taskIds: EntityId[]): Promise> {\n\t\tconst [submissions, count] = await this.em.findAndCount(Submission, {\n\t\t\ttask: { $in: taskIds },\n\t\t});\n\n\t\treturn [submissions, count];\n\t}\n\n\tasync findAllByUserId(userId: EntityId): Promise> {\n\t\tconst result = await this.em.findAndCount(Submission, await this.byUserIdQuery(userId));\n\t\treturn result;\n\t}\n\n\tprivate async byUserIdQuery(userId: EntityId): Promise> {\n\t\tconst courseGroupsOfUser = await this.em.find(CourseGroup, { students: userId });\n\t\tconst query = { $or: [{ student: userId }, { teamMembers: userId }, { courseGroup: { $in: courseGroupsOfUser } }] };\n\t\treturn query;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SymetricKeyEncryptionService.html":{"url":"injectables/SymetricKeyEncryptionService.html","title":"injectable - SymetricKeyEncryptionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SymetricKeyEncryptionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/encryption/encryption.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                decrypt\n                            \n                            \n                                    Public\n                                encrypt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(key: string)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/infra/encryption/encryption.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        decrypt\n                        \n                    \n                \n            \n            \n                \n                    \n                    decrypt(data: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/encryption/encryption.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        encrypt\n                        \n                    \n                \n            \n            \n                \n                    \n                    encrypt(data: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/encryption/encryption.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import CryptoJs from 'crypto-js';\n\nimport { Inject, Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class SymetricKeyEncryptionService {\n\tconstructor(@Inject('SYMMETRIC_CIPHER_KEY') private readonly key: string) {}\n\n\tpublic encrypt(data: string): string {\n\t\treturn CryptoJs.AES.encrypt(data, this.key).toString();\n\t}\n\n\tpublic decrypt(data: string): string {\n\t\treturn CryptoJs.AES.decrypt(data, this.key).toString(CryptoJs.enc.Utf8);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/System.html":{"url":"entities/System.html","title":"entity - System","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  System\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/system.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                alias\n                            \n                            \n                                type\n                            \n                            \n                                    Optional\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        alias\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/system.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/system.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/system.entity.ts:18\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /* istanbul ignore file */ // TODO remove when implementation exists\nimport { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\n@Entity({ tableName: 'systems' })\nexport class System extends BaseEntityWithTimestamps {\n\tconstructor(props: System) {\n\t\tsuper();\n\t\tthis.type = props.type;\n\t\tif (props.url != null) this.url = props.url;\n\t\tif (props.alias != null) this.alias = props.alias;\n\t}\n\n\t@Property({})\n\ttype: string; // see legacy enum for valid values\n\n\t@Property()\n\turl?: string;\n\n\t@Property()\n\talias?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TargetInfoMapper.html":{"url":"classes/TargetInfoMapper.html","title":"class - TargetInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TargetInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/target-info.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(target: NewsTarget)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/target-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                NewsTarget\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TargetInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NewsTarget } from '@shared/domain';\nimport { TargetInfoResponse } from '../controller/dto/target-info.response';\n\nexport class TargetInfoMapper {\n\tstatic mapToResponse(target: NewsTarget): TargetInfoResponse {\n\t\tconst dto = new TargetInfoResponse({ id: target.id, name: target.name });\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TargetInfoResponse.html":{"url":"classes/TargetInfoResponse.html","title":"class - TargetInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TargetInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/target-info.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: TargetInfoResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/controller/dto/target-info.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        TargetInfoResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the Target entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/target-info.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the Target entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/target-info.response.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class TargetInfoResponse {\n\tconstructor({ id, name }: TargetInfoResponse) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t}\n\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the Target entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The name of the Target entity',\n\t})\n\tname: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Task.html":{"url":"entities/Task.html","title":"entity - Task","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/task.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                availableDate\n                            \n                            \n                                    Optional\n                                course\n                            \n                            \n                                    Optional\n                                creator\n                            \n                            \n                                    Optional\n                                dueDate\n                            \n                            \n                                finished\n                            \n                            \n                                    Optional\n                                lesson\n                            \n                            \n                                name\n                            \n                            \n                                private\n                            \n                            \n                                submissions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        availableDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        course\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Course', {fieldName: 'courseId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'teacherId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        dueDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        finished\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({name: 'findAllByParentIds_findAllForTeacher'})@ManyToMany('User', undefined, {fieldName: 'archived'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lesson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Lesson\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Lesson', {fieldName: 'lessonId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        private\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submissions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany('Submission', 'task')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:69\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Collection, Entity, ManyToOne, OneToMany, ManyToMany, Property, Index } from '@mikro-orm/core';\nimport { EntityId } from '../types/entity-id';\n\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { Lesson } from './lesson.entity';\nimport type { Submission } from './submission.entity';\nimport type { User } from './user.entity';\n\nexport interface ITaskProperties {\n\tname: string;\n\tavailableDate?: Date;\n\tdueDate?: Date;\n\tprivate?: boolean;\n\tcreator?: User;\n\tcourse?: Course;\n\tlesson?: Lesson;\n\tsubmissions?: Submission[];\n\tfinished?: User[];\n}\n\nexport interface ITaskStatus {\n\tsubmitted: number;\n\tmaxSubmissions: number;\n\tgraded: number;\n\tisDraft: boolean;\n\tisSubstitutionTeacher: boolean;\n\tisFinished: boolean;\n}\n\nexport class TaskWithStatusVo {\n\ttask!: Task;\n\n\tstatus!: ITaskStatus;\n\n\tconstructor(task: Task, status: ITaskStatus) {\n\t\tthis.task = task;\n\t\tthis.status = status;\n\t}\n}\n\nexport type TaskParentDescriptions = { name: string; description: string; color: string };\n\n@Entity({ tableName: 'homeworks' })\n@Index({ name: 'findAllByParentIds_findAllForStudent', properties: ['private', 'dueDate', 'finished'] })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tavailableDate?: Date;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate = true;\n\n\t@ManyToOne('User', { fieldName: 'teacherId' })\n\tcreator?: User;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse?: Course;\n\n\t@ManyToOne('Lesson', { fieldName: 'lessonId' })\n\tlesson?: Lesson; // In database exist also null, but it can not set.\n\n\t@OneToMany('Submission', 'task')\n\tsubmissions = new Collection(this);\n\n\t// TODO: rename to finished\n\t@Index({ name: 'findAllByParentIds_findAllForTeacher' })\n\t@ManyToMany('User', undefined, { fieldName: 'archived' })\n\tfinished = new Collection(this);\n\n\tconstructor(props: ITaskProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.availableDate = props.availableDate;\n\t\tthis.dueDate = props.dueDate;\n\t\tif (props.private !== undefined) this.private = props.private;\n\t\tthis.creator = props.creator;\n\t\tthis.course = props.course;\n\t\tthis.lesson = props.lesson;\n\t\tthis.submissions.set(props.submissions || []);\n\t\tthis.finished.set(props.finished || []);\n\t}\n\n\tisFinishedForUser(user: User): boolean {\n\t\treturn !!(this.finished?.contains(user) || this.course?.isFinished());\n\t}\n\n\tisDraft(): boolean {\n\t\t// private can be undefined in the database\n\t\treturn !!this.private;\n\t}\n\n\tprivate getSubmissionItems(): Submission[] {\n\t\tif (!this.submissions.isInitialized(true)) {\n\t\t\tthrow new Error('Submissions items are not loaded.');\n\t\t}\n\t\tconst submissions = this.submissions.getItems();\n\t\treturn submissions;\n\t}\n\n\tgetSubmittedUserIds(): EntityId[] {\n\t\tconst submittedUserIds = this.getSubmissionItems().map((submission) => submission.student.id);\n\t\tconst uniqueSubmittedUserIds = [...new Set(submittedUserIds)];\n\n\t\treturn uniqueSubmittedUserIds;\n\t}\n\n\tgetNumberOfSubmittedUsers(): number {\n\t\tconst submittedUserIds = this.getSubmittedUserIds();\n\t\tconst count = submittedUserIds.length;\n\n\t\treturn count;\n\t}\n\n\tgetGradedUserIds(): EntityId[] {\n\t\tconst gradedUserIds = this.getSubmissionItems()\n\t\t\t.filter((submission) => submission.isGraded())\n\t\t\t.map((submission) => submission.student.id);\n\t\tconst uniqueGradedUserIds = [...new Set(gradedUserIds)];\n\n\t\treturn uniqueGradedUserIds;\n\t}\n\n\tgetNumberOfGradedUsers(): number {\n\t\tconst gradedUserIds = this.getGradedUserIds();\n\t\tconst count = gradedUserIds.length;\n\n\t\treturn count;\n\t}\n\n\t// attention based on this parent use this.getParent() instant\n\tgetMaxSubmissions(): number {\n\t\t// hack until parents are defined\n\t\tconst numberOfStudents = this.course ? this.course.getNumberOfStudents() : 0;\n\n\t\treturn numberOfStudents;\n\t}\n\n\tcreateTeacherStatusForUser(user: User): ITaskStatus {\n\t\tconst submitted = this.getNumberOfSubmittedUsers();\n\t\tconst graded = this.getNumberOfGradedUsers();\n\t\tconst maxSubmissions = this.getMaxSubmissions();\n\t\tconst isDraft = this.isDraft();\n\t\tconst isFinished = this.isFinishedForUser(user);\n\t\t// only point that need the parameter\n\t\t// const isSubstitutionTeacher = this.isSubstitutionTeacher(userId);\n\t\t// work with getParent()\n\t\tlet isSubstitutionTeacher = false;\n\t\tif (this.course) {\n\t\t\tisSubstitutionTeacher = this.course.substitutionTeachers.contains(user);\n\t\t}\n\n\t\tconst status = {\n\t\t\tsubmitted,\n\t\t\tgraded,\n\t\t\tmaxSubmissions,\n\t\t\tisDraft,\n\t\t\tisSubstitutionTeacher,\n\t\t\tisFinished,\n\t\t};\n\n\t\treturn status;\n\t}\n\n\tisSubmittedForUser(user: User): boolean {\n\t\tconst submitted = this.getSubmittedUserIds().some((uid) => uid === user.id);\n\n\t\treturn submitted;\n\t}\n\n\tisGradedForUser(user: User): boolean {\n\t\tconst graded = this.getGradedUserIds().some((uid) => uid === user.id);\n\n\t\treturn graded;\n\t}\n\n\tcreateStudentStatusForUser(user: User): ITaskStatus {\n\t\tconst isSubmitted = this.isSubmittedForUser(user);\n\t\tconst isGraded = this.isGradedForUser(user);\n\t\tconst maxSubmissions = 1;\n\t\tconst isDraft = this.isDraft();\n\t\tconst isSubstitutionTeacher = false;\n\t\tconst isFinished = this.isFinishedForUser(user);\n\n\t\tconst status = {\n\t\t\tsubmitted: isSubmitted ? 1 : 0,\n\t\t\tgraded: isGraded ? 1 : 0,\n\t\t\tmaxSubmissions,\n\t\t\tisDraft,\n\t\t\tisSubstitutionTeacher,\n\t\t\tisFinished,\n\t\t\t// TODO: visibility of parent is missed ..but isSubstitutionTeacher and this is not really a part from task,\n\t\t\t// for this we must add parent relationship\n\t\t};\n\n\t\treturn status;\n\t}\n\n\t// TODO: based on the parent relationship\n\tgetDescriptions(): TaskParentDescriptions {\n\t\tlet descriptions: TaskParentDescriptions;\n\t\tif (this.course) {\n\t\t\tdescriptions = {\n\t\t\t\tname: this.course.name,\n\t\t\t\tdescription: this.lesson ? this.lesson.name : '',\n\t\t\t\tcolor: this.course.color,\n\t\t\t};\n\t\t} else {\n\t\t\tdescriptions = {\n\t\t\t\tname: '',\n\t\t\t\tdescription: '',\n\t\t\t\tcolor: '#ACACAC',\n\t\t\t};\n\t\t}\n\n\t\treturn descriptions;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskAuthorizationService.html":{"url":"injectables/TaskAuthorizationService.html","title":"injectable - TaskAuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskAuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/uc/task.authorization.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getPermittedCourses\n                            \n                            \n                                    Async\n                                getPermittedLessons\n                            \n                            \n                                    Private\n                                hasCourseReadPermission\n                            \n                            \n                                    Private\n                                hasCourseWritePermission\n                            \n                            \n                                hasOneOfTaskDashboardPermissions\n                            \n                            \n                                hasTaskPermission\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(courseRepo: CourseRepo, lessonRepo: LessonRepo, permissionService: PermissionService)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/uc/task.authorization.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseRepo\n                                                  \n                                                        \n                                                                        CourseRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lessonRepo\n                                                  \n                                                        \n                                                                        LessonRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        permissionService\n                                                  \n                                                        \n                                                                        PermissionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedCourses\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedCourses(user: User, neededPermission: TaskParentPermission)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.authorization.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    neededPermission\n                                    \n                                                TaskParentPermission\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedLessons\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedLessons(user: User, courses: Course[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.authorization.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    courses\n                                    \n                                                Course[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        hasCourseReadPermission\n                        \n                    \n                \n            \n            \n                \n                    \n                    hasCourseReadPermission(user: User, course: Course)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.authorization.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    course\n                                    \n                                                Course\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        hasCourseWritePermission\n                        \n                    \n                \n            \n            \n                \n                    \n                    hasCourseWritePermission(user: User, course: Course)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.authorization.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    course\n                                    \n                                                Course\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasOneOfTaskDashboardPermissions\n                        \n                    \n                \n            \n            \n                \nhasOneOfTaskDashboardPermissions(user: User, permission: TaskDashBoardPermission | TaskDashBoardPermission[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.authorization.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permission\n                                    \n                                                TaskDashBoardPermission | TaskDashBoardPermission[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasTaskPermission\n                        \n                    \n                \n            \n            \n                \nhasTaskPermission(user: User, task: Task, permission: TaskParentPermission)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.authorization.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permission\n                                    \n                                                TaskParentPermission\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Course, Lesson, PermissionService, Task, User } from '@shared/domain';\nimport { CourseRepo, LessonRepo } from '@shared/repo';\n\nexport enum TaskParentPermission {\n\tread,\n\twrite,\n}\n\nexport enum TaskDashBoardPermission {\n\tteacherDashboard = 'TASK_DASHBOARD_TEACHER_VIEW_V3',\n\tstudentDashboard = 'TASK_DASHBOARD_VIEW_V3',\n}\n\n@Injectable()\nexport class TaskAuthorizationService {\n\tconstructor(\n\t\tprivate readonly courseRepo: CourseRepo,\n\t\tprivate readonly lessonRepo: LessonRepo,\n\t\tprivate readonly permissionService: PermissionService\n\t) {}\n\n\t// it should return also the scopePermissions for this user added to the entity .scopePermission: { userId, read: boolean, write: boolean }\n\t// then we can pass and allow only scoped courses to getPermittedLessonIds and validate read write of .scopePermission\n\tasync getPermittedCourses(user: User, neededPermission: TaskParentPermission): Promise {\n\t\tlet permittedCourses: Course[] = [];\n\n\t\tif (neededPermission === TaskParentPermission.write) {\n\t\t\t[permittedCourses] = await this.courseRepo.findAllForTeacher(user.id);\n\t\t} else if (neededPermission === TaskParentPermission.read) {\n\t\t\t[permittedCourses] = await this.courseRepo.findAllByUserId(user.id);\n\t\t}\n\n\t\treturn permittedCourses;\n\t}\n\n\tasync getPermittedLessons(user: User, courses: Course[]): Promise {\n\t\tconst writeCourses = courses.filter((c) => this.hasCourseWritePermission(user, c));\n\t\tconst readCourses = courses.filter((c) => !writeCourses.includes(c));\n\n\t\tconst writeCourseIds = writeCourses.map((c) => c.id);\n\t\tconst readCourseIds = readCourses.map((c) => c.id);\n\n\t\t// idea as combined query:\n\t\t// [{courseIds: onlyWriteCoursesIds}, { courseIds: onlyReadCourses, filter: { hidden: false }}]\n\t\tconst [[writeLessons], [readLessons]] = await Promise.all([\n\t\t\tthis.lessonRepo.findAllByCourseIds(writeCourseIds),\n\t\t\tthis.lessonRepo.findAllByCourseIds(readCourseIds, { hidden: false }),\n\t\t]);\n\n\t\tconst permittedLessons = [...writeLessons, ...readLessons];\n\n\t\treturn permittedLessons;\n\t}\n\n\tprivate hasCourseWritePermission(user: User, course: Course): boolean {\n\t\tconst hasPermission = course.substitutionTeachers.contains(user) || course.teachers.contains(user);\n\n\t\treturn hasPermission;\n\t}\n\n\tprivate hasCourseReadPermission(user: User, course: Course): boolean {\n\t\tconst hasPermission =\n\t\t\tcourse.students.contains(user) || course.substitutionTeachers.contains(user) || course.teachers.contains(user);\n\n\t\treturn hasPermission;\n\t}\n\n\thasTaskPermission(user: User, task: Task, permission: TaskParentPermission): boolean {\n\t\tconst isCreator = task.creator === user;\n\t\tlet hasCoursePermission = false;\n\n\t\tif (task.course && permission === TaskParentPermission.write) {\n\t\t\thasCoursePermission = this.hasCourseWritePermission(user, task.course);\n\t\t} else if (task.course && permission === TaskParentPermission.read) {\n\t\t\thasCoursePermission = this.hasCourseReadPermission(user, task.course);\n\t\t}\n\n\t\tconst hasPermission = isCreator || hasCoursePermission;\n\n\t\treturn hasPermission;\n\t}\n\n\thasOneOfTaskDashboardPermissions(\n\t\tuser: User,\n\t\tpermission: TaskDashBoardPermission | TaskDashBoardPermission[]\n\t): boolean {\n\t\tconst permissions = this.permissionService.resolvePermissions(user);\n\n\t\tconst hasPermission = Array.isArray(permission)\n\t\t\t? permission.some((p) => permissions.includes(p))\n\t\t\t: permissions.includes(permission);\n\n\t\treturn hasPermission;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TaskController.html":{"url":"controllers/TaskController.html","title":"controller - TaskController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TaskController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/task.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tasks\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAllFinished\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, paginationQuery: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/task/controller/task.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    paginationQuery\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllFinished\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllFinished(currentUser: ICurrentUser, paginationQuery: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('finished')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/task/controller/task.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    paginationQuery\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiTags } from '@nestjs/swagger';\n\nimport { ICurrentUser } from '@shared/domain';\nimport { PaginationQuery } from '@shared/controller/';\nimport { Controller, Get, Query } from '@nestjs/common';\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\n\nimport { TaskUC } from '../uc/task.uc';\nimport { TaskListResponse } from './dto';\nimport { TaskMapper } from '../mapper/task.mapper';\n\n@ApiTags('Task')\n@Authenticate('jwt')\n@Controller('tasks')\nexport class TaskController {\n\tconstructor(private readonly taskUc: TaskUC) {}\n\n\t@Get()\n\tasync findAll(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() paginationQuery: PaginationQuery\n\t): Promise {\n\t\tconst [tasksWithStatus, total] = await this.taskUc.findAll(currentUser.userId, paginationQuery);\n\t\tconst taskresponses = tasksWithStatus.map((taskWithStatus) => {\n\t\t\treturn TaskMapper.mapToResponse(taskWithStatus);\n\t\t});\n\t\tconst { skip, limit } = paginationQuery;\n\t\tconst result = new TaskListResponse(taskresponses, total, skip, limit);\n\t\treturn result;\n\t}\n\n\t@Get('finished')\n\tasync findAllFinished(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() paginationQuery: PaginationQuery\n\t): Promise {\n\t\tconst [tasksWithStatus, total] = await this.taskUc.findAllFinished(currentUser.userId, paginationQuery);\n\n\t\tconst taskresponses = tasksWithStatus.map((task) => {\n\t\t\treturn TaskMapper.mapToResponse(task);\n\t\t});\n\n\t\tconst { skip, limit } = paginationQuery;\n\t\tconst result = new TaskListResponse(taskresponses, total, skip, limit);\n\t\treturn result;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskFactory.html":{"url":"classes/TaskFactory.html","title":"class - TaskFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/testing/factory/task.factory.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseFactory\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                propsFactory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                draft\n                            \n                            \n                                finished\n                            \n                            \n                                afterBuild\n                            \n                            \n                                build\n                            \n                            \n                                buildList\n                            \n                            \n                                buildWithId\n                            \n                            \n                                    Protected\n                                clone\n                            \n                            \n                                    Static\n                                define\n                            \n                            \n                                params\n                            \n                            \n                                rewindSequence\n                            \n                            \n                                    Protected\n                                sequence\n                            \n                            \n                                transient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        propsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Factory\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFactory\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFactory:14\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        draft\n                        \n                    \n                \n            \n            \n                \ndraft()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/task.factory.ts:11\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        finished\n                        \n                    \n                \n            \n            \n                \nfinished(user: User)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/task.factory.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        afterBuild\n                        \n                    \n                \n            \n            \n                \nafterBuild(afterBuildFn: HookFn)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:85\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding a function to be called after an object is built.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    afterBuildFn\n                                    \n                                            HookFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe function to call. It accepts your object of type T. The value this function returns gets returned from \"build\"\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        build\n                        \n                    \n                \n            \n            \n                \nbuild(params?: DeepPartial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:45\n\n                \n            \n\n\n            \n                \n                    Build an entity using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildList\n                        \n                    \n                \n            \n            \n                \nbuildList(number: number, params?: DeepPartial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:71\n\n                \n            \n\n\n            \n                \n                    Build a list of entities using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    number\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        a list of entities\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildWithId\n                        \n                    \n                \n            \n            \n                \nbuildWithId(params?: DeepPartial, id?: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:58\n\n                \n            \n\n\n            \n                \n                    Build an entity using your factory and generate a id for it.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        clone\n                        \n                    \n                \n            \n            \n                \n                    \n                    clone(this: F, propsFactory: Factory)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:123\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        F\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                            F\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    propsFactory\n                                    \n                                            Factory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        define\n                        \n                    \n                \n            \n            \n                \n                    \n                    define(this, EntityClass: literal type, generator: GeneratorFn)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:30\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        U\n                        I\n                        F\n                    \n                \n            \n\n            \n                \n                    Define a factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    EntityClass\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The constructor of the entity to be built.\n\n                                    \n                                \n                                \n                                    generator\n                                    \n                                            GeneratorFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Your factory function - see Factory.define() in thoughtbot/fishery\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        params\n                        \n                    \n                \n            \n            \n                \nparams(params: DeepPartial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:97\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rewindSequence\n                        \n                    \n                \n            \n            \n                \nrewindSequence()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:119\n\n                \n            \n\n\n            \n                \n                    Set sequence back to its default value\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        sequence\n                        \n                    \n                \n            \n            \n                \n                    \n                    sequence()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:135\n\n                \n            \n\n\n            \n                \n                    Get the next sequence value\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        the next sequence value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transient\n                        \n                    \n                \n            \n            \n                \ntransient(transient: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:109\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default transient parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    transient\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ntransient params\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DeepPartial } from 'fishery';\n\nimport { Task, ITaskProperties } from '@shared/domain';\nimport type { User } from '@shared/domain/entity';\n\nimport { BaseFactory } from './base.factory';\n\nconst yesterday = new Date(Date.now() - 86400000);\n\nclass TaskFactory extends BaseFactory {\n\tdraft(): this {\n\t\tconst params: DeepPartial = { private: true };\n\t\treturn this.params(params);\n\t}\n\n\tfinished(user: User): this {\n\t\tconst params: DeepPartial = { finished: [user] };\n\t\treturn this.params(params);\n\t}\n}\n\nexport const taskFactory = TaskFactory.define(Task, ({ sequence }) => {\n\t// private is by default in constructor true, but in the most test cases we need private: false\n\treturn { name: `task #${sequence}`, private: false, availableDate: yesterday };\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskListResponse.html":{"url":"classes/TaskListResponse.html","title":"class - TaskListResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskListResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/dto/task.response.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PaginationResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: TaskResponse[], total: number, skip?: number, limit?: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        TaskResponse[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        skip\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:59\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { PaginationResponse, DecodeHtmlEntities } from '@shared/controller';\nimport { TaskStatusResponse } from './task-status.response';\n\n/**\n * DTO for returning a task document via api.\n */\nexport class TaskResponse {\n\tconstructor({ id, name, courseName, createdAt, updatedAt, status }: TaskResponse) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.courseName = courseName;\n\t\tthis.createdAt = createdAt;\n\t\tthis.updatedAt = updatedAt;\n\t\tthis.status = status;\n\t}\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\t@DecodeHtmlEntities()\n\tname: string;\n\n\t@ApiPropertyOptional()\n\tavailableDate?: Date;\n\n\t@ApiPropertyOptional()\n\tduedate?: Date;\n\n\t@ApiProperty()\n\t@DecodeHtmlEntities()\n\tcourseName: string = '' as string;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tdescription?: string;\n\n\t@ApiPropertyOptional()\n\tdisplayColor?: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\tstatus: TaskStatusResponse;\n}\n\nexport class TaskListResponse extends PaginationResponse {\n\tconstructor(data: TaskResponse[], total: number, skip?: number, limit?: number) {\n\t\tsuper(total, skip, limit);\n\t\tthis.data = data;\n\t}\n\n\t@ApiProperty({ type: [TaskResponse] })\n\tdata: TaskResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskMapper.html":{"url":"classes/TaskMapper.html","title":"class - TaskMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/mapper/task.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(taskWithStatus: TaskWithStatusVo)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/mapper/task.mapper.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskWithStatus\n                                    \n                                                TaskWithStatusVo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TaskWithStatusVo } from '@shared/domain';\nimport { TaskResponse } from '../controller/dto';\nimport { TaskStatusMapper } from './task-status.mapper';\n\nexport class TaskMapper {\n\tstatic mapToResponse(taskWithStatus: TaskWithStatusVo): TaskResponse {\n\t\tconst { task, status } = taskWithStatus;\n\t\tconst taskDesc = task.getDescriptions();\n\t\tconst statusDto = TaskStatusMapper.mapToResponse(status);\n\n\t\tconst dto = new TaskResponse({\n\t\t\tid: task.id,\n\t\t\tname: task.name,\n\t\t\tcourseName: taskDesc.name,\n\t\t\tcreatedAt: task.createdAt,\n\t\t\tupdatedAt: task.updatedAt,\n\t\t\tstatus: statusDto,\n\t\t});\n\n\t\tdto.availableDate = task.availableDate;\n\t\tdto.duedate = task.dueDate;\n\n\t\tdto.displayColor = taskDesc.color;\n\t\tdto.description = taskDesc.description;\n\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskModule.html":{"url":"modules/TaskModule.html","title":"module - TaskModule","body":"\n                   \n\n\n\n\n    Modules\n    TaskModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nCourseRepo\n\nCourseRepo\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nCourseRepo->TaskModule\n\n\n\n\n\nLessonRepo\n\nLessonRepo\n\nTaskModule -->\n\nLessonRepo->TaskModule\n\n\n\n\n\nPermissionService\n\nPermissionService\n\nTaskModule -->\n\nPermissionService->TaskModule\n\n\n\n\n\nTaskAuthorizationService\n\nTaskAuthorizationService\n\nTaskModule -->\n\nTaskAuthorizationService->TaskModule\n\n\n\n\n\nTaskRepo\n\nTaskRepo\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\nUserRepo\n\nUserRepo\n\nTaskModule -->\n\nUserRepo->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/task/task.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CourseRepo\n                        \n                        \n                            LessonRepo\n                        \n                        \n                            PermissionService\n                        \n                        \n                            TaskAuthorizationService\n                        \n                        \n                            TaskRepo\n                        \n                        \n                            TaskUC\n                        \n                        \n                            UserRepo\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TaskController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PermissionService } from '@shared/domain';\n\nimport { CourseRepo, LessonRepo, TaskRepo, UserRepo } from '@shared/repo';\n\nimport { TaskController } from './controller/task.controller';\nimport { TaskUC } from './uc';\nimport { TaskAuthorizationService } from './uc/task.authorization.service';\n\n@Module({\n\timports: [],\n\tcontrollers: [TaskController],\n\tproviders: [TaskUC, TaskRepo, TaskAuthorizationService, LessonRepo, CourseRepo, UserRepo, PermissionService],\n})\nexport class TaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskRepo.html":{"url":"injectables/TaskRepo.html","title":"injectable - TaskRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/task/task.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllByParentIds\n                            \n                            \n                                    Async\n                                findAllFinishedByParentIds\n                            \n                            \n                                    Async\n                                findBySingleParent\n                            \n                            \n                                    Private\n                                    Async\n                                findTasksAndCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/task/task.repo.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByParentIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByParentIds(parentIds: literal type, filters?: literal type, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task.repo.ts:91\n                \n            \n\n\n            \n                \n                    Find all tasks by their parents which can be any of\n\na teacher who owns the task\na list of courses\na list of lessons\n\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    parentIds\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        parentIds for teacher, courses and lesson\n\n                                    \n                                \n                                \n                                    filters\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        filters\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        pagination, sorting\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllFinishedByParentIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllFinishedByParentIds(parentIds: literal type, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task.repo.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parentIds\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findBySingleParent\n                        \n                    \n                \n            \n            \n                \n                    \n                    findBySingleParent(creatorId: EntityId, courseId: EntityId, filters?: literal type, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task.repo.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    creatorId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    courseId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filters\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findTasksAndCount\n                        \n                    \n                \n            \n            \n                \n                    \n                    findTasksAndCount(query: FilterQuery, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task.repo.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { FilterQuery, QueryOrderMap } from '@mikro-orm/core';\nimport { EntityManager } from '@mikro-orm/mongodb';\n\nimport { EntityId, IFindOptions, Task, Counted, SortOrder } from '@shared/domain';\n\nimport { TaskScope } from './task-scope';\n\n@Injectable()\nexport class TaskRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findAllFinishedByParentIds(\n\t\tparentIds: {\n\t\t\tcreatorId: EntityId;\n\t\t\topenCourseIds: EntityId[];\n\t\t\tlessonIdsOfOpenCourses: EntityId[];\n\t\t\tfinishedCourseIds: EntityId[];\n\t\t\tlessonIdsOfFinishedCourses: EntityId[];\n\t\t},\n\t\toptions?: IFindOptions\n\t): Promise> {\n\t\tconst { pagination } = options || {};\n\n\t\tconst scope = new TaskScope('$or');\n\n\t\tconst parentsOpen = new TaskScope('$or');\n\t\tparentsOpen.byCourseIds(parentIds.openCourseIds);\n\t\tparentsOpen.byLessonIds(parentIds.lessonIdsOfOpenCourses);\n\n\t\tconst parentsFinished = new TaskScope('$or');\n\t\tparentsFinished.byCourseIds(parentIds.finishedCourseIds);\n\t\tparentsFinished.byLessonIds(parentIds.lessonIdsOfFinishedCourses);\n\n\t\tconst closedForOpenCoursesAndLessons = new TaskScope();\n\t\tclosedForOpenCoursesAndLessons.addQuery(parentsOpen.query);\n\t\tclosedForOpenCoursesAndLessons.byDraft(false);\n\t\tclosedForOpenCoursesAndLessons.byFinished(parentIds.creatorId, true);\n\n\t\tconst allForFinishedCoursesAndLessons = new TaskScope();\n\t\tallForFinishedCoursesAndLessons.addQuery(parentsFinished.query);\n\t\tallForFinishedCoursesAndLessons.byDraft(false);\n\n\t\t// must find also closed without course or lesson as parent\n\t\tconst closedWithoutParentForCreator = new TaskScope();\n\t\tclosedWithoutParentForCreator.byFinished(parentIds.creatorId, true);\n\t\tclosedWithoutParentForCreator.byOnlyCreatorId(parentIds.creatorId);\n\n\t\tconst closedDraftsForCreator = new TaskScope();\n\t\tclosedDraftsForCreator.addQuery(parentsOpen.query);\n\t\tclosedDraftsForCreator.byFinished(parentIds.creatorId, true);\n\t\tclosedDraftsForCreator.byCreatorId(parentIds.creatorId);\n\n\t\tconst allForFinishedCoursesAndLessonsForCreator = new TaskScope();\n\t\tallForFinishedCoursesAndLessonsForCreator.addQuery(parentsFinished.query);\n\t\tallForFinishedCoursesAndLessonsForCreator.byCreatorId(parentIds.creatorId);\n\n\t\tconst allForCreator = new TaskScope('$or');\n\t\tallForCreator.addQuery(closedWithoutParentForCreator.query);\n\t\tallForCreator.addQuery(closedDraftsForCreator.query);\n\t\tallForCreator.addQuery(allForFinishedCoursesAndLessonsForCreator.query);\n\n\t\tscope.addQuery(closedForOpenCoursesAndLessons.query);\n\t\tscope.addQuery(allForFinishedCoursesAndLessons.query);\n\t\tscope.addQuery(allForCreator.query);\n\n\t\tconst order = { dueDate: SortOrder.desc };\n\n\t\tconst [tasks, count] = await this.em.findAndCount(Task, scope.query, {\n\t\t\toffset: pagination?.skip,\n\t\t\tlimit: pagination?.limit,\n\t\t\torderBy: order,\n\t\t});\n\n\t\tawait this.em.populate(tasks, ['course', 'lesson', 'submissions']);\n\n\t\treturn [tasks, count];\n\t}\n\n\t/**\n\t * Find all tasks by their parents which can be any of\n\t * - a teacher who owns the task\n\t * - a list of courses\n\t * - a list of lessons\n\t *\n\t * @param parentIds parentIds for teacher, courses and lesson\n\t * @param filters filters\n\t * @param options pagination, sorting\n\t * @returns\n\t */\n\tasync findAllByParentIds(\n\t\tparentIds: {\n\t\t\tcreatorId?: EntityId;\n\t\t\tcourseIds?: EntityId[];\n\t\t\tlessonIds?: EntityId[];\n\t\t},\n\t\tfilters?: {\n\t\t\tafterDueDateOrNone?: Date;\n\t\t\tfinished?: { userId: EntityId; value: boolean };\n\t\t\tavailableOn?: Date;\n\t\t},\n\t\toptions?: IFindOptions\n\t): Promise> {\n\t\tconst scope = new TaskScope();\n\n\t\tconst parentIdScope = new TaskScope('$or');\n\n\t\tif (parentIds.creatorId) {\n\t\t\tparentIdScope.byOnlyCreatorId(parentIds.creatorId);\n\t\t}\n\n\t\tif (parentIds.courseIds) {\n\t\t\tparentIdScope.byCourseIds(parentIds.courseIds);\n\t\t}\n\n\t\tif (parentIds.lessonIds) {\n\t\t\tparentIdScope.byLessonIds(parentIds.lessonIds);\n\t\t}\n\n\t\tscope.addQuery(parentIdScope.query);\n\n\t\tif (filters?.finished) {\n\t\t\tscope.byFinished(filters.finished.userId, filters.finished.value);\n\t\t}\n\n\t\tif (parentIds.creatorId) {\n\t\t\tscope.excludeDraftsOfOthers(parentIds.creatorId);\n\t\t} else {\n\t\t\tscope.byDraft(false);\n\t\t}\n\n\t\tif (filters?.afterDueDateOrNone !== undefined) {\n\t\t\tscope.afterDueDateOrNone(filters.afterDueDateOrNone);\n\t\t}\n\n\t\tif (filters?.availableOn !== undefined) {\n\t\t\tif (parentIds.creatorId) {\n\t\t\t\tscope.excludeUnavailableOfOthers(parentIds.creatorId, filters.availableOn);\n\t\t\t} else {\n\t\t\t\tscope.byAvailable(filters?.availableOn);\n\t\t\t}\n\t\t}\n\n\t\tconst countedTaskList = await this.findTasksAndCount(scope.query, options);\n\n\t\treturn countedTaskList;\n\t}\n\n\tasync findBySingleParent(\n\t\tcreatorId: EntityId,\n\t\tcourseId: EntityId,\n\t\tfilters?: { draft?: boolean; noFutureAvailableDate?: boolean },\n\t\toptions?: IFindOptions\n\t): Promise> {\n\t\tconst scope = new TaskScope();\n\t\tscope.byCourseIds([courseId]);\n\n\t\tif (filters?.draft !== undefined) {\n\t\t\tif (filters?.draft === true) {\n\t\t\t\tscope.excludeDraftsOfOthers(creatorId);\n\t\t\t} else {\n\t\t\t\tscope.byDraft(false);\n\t\t\t}\n\t\t}\n\n\t\tif (filters?.noFutureAvailableDate !== undefined) {\n\t\t\tscope.noFutureAvailableDate();\n\t\t}\n\n\t\tconst countedTaskList = await this.findTasksAndCount(scope.query, options);\n\n\t\treturn countedTaskList;\n\t}\n\n\tprivate async findTasksAndCount(query: FilterQuery, options?: IFindOptions): Promise> {\n\t\tconst { pagination, order } = options || {};\n\t\tconst [taskEntities, count] = await this.em.findAndCount(Task, query, {\n\t\t\toffset: pagination?.skip,\n\t\t\tlimit: pagination?.limit,\n\t\t\torderBy: order as QueryOrderMap,\n\t\t});\n\n\t\tawait this.em.populate(taskEntities, ['course', 'lesson', 'submissions']);\n\n\t\treturn [taskEntities, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskResponse.html":{"url":"classes/TaskResponse.html","title":"class - TaskResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/dto/task.response.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for returning a task document via api.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                availableDate\n                            \n                            \n                                courseName\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                description\n                            \n                            \n                                    Optional\n                                displayColor\n                            \n                            \n                                    Optional\n                                duedate\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: TaskResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        TaskResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        availableDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        courseName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '' as string\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@DecodeHtmlEntities()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@DecodeHtmlEntities()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        duedate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@DecodeHtmlEntities()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskStatusResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { PaginationResponse, DecodeHtmlEntities } from '@shared/controller';\nimport { TaskStatusResponse } from './task-status.response';\n\n/**\n * DTO for returning a task document via api.\n */\nexport class TaskResponse {\n\tconstructor({ id, name, courseName, createdAt, updatedAt, status }: TaskResponse) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.courseName = courseName;\n\t\tthis.createdAt = createdAt;\n\t\tthis.updatedAt = updatedAt;\n\t\tthis.status = status;\n\t}\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\t@DecodeHtmlEntities()\n\tname: string;\n\n\t@ApiPropertyOptional()\n\tavailableDate?: Date;\n\n\t@ApiPropertyOptional()\n\tduedate?: Date;\n\n\t@ApiProperty()\n\t@DecodeHtmlEntities()\n\tcourseName: string = '' as string;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tdescription?: string;\n\n\t@ApiPropertyOptional()\n\tdisplayColor?: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\tstatus: TaskStatusResponse;\n}\n\nexport class TaskListResponse extends PaginationResponse {\n\tconstructor(data: TaskResponse[], total: number, skip?: number, limit?: number) {\n\t\tsuper(total, skip, limit);\n\t\tthis.data = data;\n\t}\n\n\t@ApiProperty({ type: [TaskResponse] })\n\tdata: TaskResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskScope.html":{"url":"classes/TaskScope.html","title":"class - TaskScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/task/task-scope.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _operator\n                            \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterDueDateOrNone\n                            \n                            \n                                byAvailable\n                            \n                            \n                                byCourseIds\n                            \n                            \n                                byCreatorId\n                            \n                            \n                                byDraft\n                            \n                            \n                                byFinished\n                            \n                            \n                                byLessonIds\n                            \n                            \n                                byOnlyCreatorId\n                            \n                            \n                                excludeDraftsOfOthers\n                            \n                            \n                                excludeUnavailableOfOthers\n                            \n                            \n                                    Private\n                                getByDraftForCreatorQuery\n                            \n                            \n                                    Private\n                                getByDraftQuery\n                            \n                            \n                                noFutureAvailableDate\n                            \n                            \n                                addQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _operator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScopeOperator\n\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterDueDateOrNone\n                        \n                    \n                \n            \n            \n                \nafterDueDateOrNone(dueDate: Date)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task-scope.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dueDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byAvailable\n                        \n                    \n                \n            \n            \n                \nbyAvailable(availableDate: Date)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task-scope.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    availableDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byCourseIds\n                        \n                    \n                \n            \n            \n                \nbyCourseIds(courseIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task-scope.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byCreatorId\n                        \n                    \n                \n            \n            \n                \nbyCreatorId(creatorId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task-scope.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    creatorId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byDraft\n                        \n                    \n                \n            \n            \n                \nbyDraft(isDraft: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task-scope.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDraft\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byFinished\n                        \n                    \n                \n            \n            \n                \nbyFinished(userId: EntityId, value: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task-scope.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byLessonIds\n                        \n                    \n                \n            \n            \n                \nbyLessonIds(lessonIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task-scope.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lessonIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byOnlyCreatorId\n                        \n                    \n                \n            \n            \n                \nbyOnlyCreatorId(teacherId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task-scope.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teacherId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        excludeDraftsOfOthers\n                        \n                    \n                \n            \n            \n                \nexcludeDraftsOfOthers(creatorId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task-scope.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    creatorId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        excludeUnavailableOfOthers\n                        \n                    \n                \n            \n            \n                \nexcludeUnavailableOfOthers(creatorId: EntityId, availableOn: Date)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task-scope.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    creatorId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    availableOn\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getByDraftForCreatorQuery\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByDraftForCreatorQuery(creatorId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task-scope.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    creatorId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterQuery\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getByDraftQuery\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByDraftQuery(isDraft: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task-scope.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDraft\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterQuery\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noFutureAvailableDate\n                        \n                    \n                \n            \n            \n                \nnoFutureAvailableDate()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task-scope.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         TaskScope\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EntityId, Task } from '@shared/domain';\nimport { Scope } from '../scope';\n\nexport class TaskScope extends Scope {\n\tbyFinished(userId: EntityId, value: boolean): TaskScope {\n\t\tif (value === true) {\n\t\t\tthis.addQuery({ finished: userId });\n\t\t} else if (value === false) {\n\t\t\tthis.addQuery({ finished: { $ne: userId } });\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tbyOnlyCreatorId(teacherId: EntityId): TaskScope {\n\t\tthis.addQuery({\n\t\t\t$and: [{ creator: teacherId }, { course: null }, { lesson: null }],\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tbyCreatorId(creatorId: EntityId): TaskScope {\n\t\tthis.addQuery({ creator: creatorId });\n\n\t\treturn this;\n\t}\n\n\tbyCourseIds(courseIds: EntityId[]): TaskScope {\n\t\tthis.addQuery({\n\t\t\t$and: [{ course: { $in: courseIds } }, { lesson: null }],\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tbyLessonIds(lessonIds: EntityId[]): TaskScope {\n\t\tthis.addQuery({ lesson: { $in: lessonIds } });\n\n\t\treturn this;\n\t}\n\n\tbyDraft(isDraft: boolean): TaskScope {\n\t\tconst query = this.getByDraftQuery(isDraft);\n\t\tthis.addQuery(query);\n\n\t\treturn this;\n\t}\n\n\texcludeDraftsOfOthers(creatorId: EntityId): TaskScope {\n\t\tthis.addQuery({\n\t\t\t$or: [this.getByDraftForCreatorQuery(creatorId), this.getByDraftQuery(false)],\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tbyAvailable(availableDate: Date): TaskScope {\n\t\tthis.addQuery({ availableDate: { $lte: availableDate } });\n\n\t\treturn this;\n\t}\n\n\tnoFutureAvailableDate(): TaskScope {\n\t\tconst query = { availableDate: { $lte: new Date(Date.now()) } };\n\t\tthis.addQuery(query);\n\n\t\treturn this;\n\t}\n\n\texcludeUnavailableOfOthers(creatorId: EntityId, availableOn: Date): TaskScope {\n\t\tthis.addQuery({\n\t\t\t$or: [\n\t\t\t\t{ creator: creatorId },\n\t\t\t\t{ $and: [{ creator: { $ne: creatorId } }, { availableDate: { $lte: availableOn } }] },\n\t\t\t],\n\t\t});\n\t\treturn this;\n\t}\n\n\tafterDueDateOrNone(dueDate: Date): TaskScope {\n\t\tthis.addQuery({ $or: [{ dueDate: { $gte: dueDate } }, { dueDate: null }] });\n\n\t\treturn this;\n\t}\n\n\tprivate getByDraftQuery(isDraft: boolean): FilterQuery {\n\t\tconst query = isDraft ? { private: { $eq: true } } : { private: { $ne: true } };\n\n\t\treturn query;\n\t}\n\n\tprivate getByDraftForCreatorQuery(creatorId: EntityId): FilterQuery {\n\t\tconst query = { $and: [{ creator: creatorId }, this.getByDraftQuery(true)] };\n\n\t\treturn query;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskStatusMapper.html":{"url":"classes/TaskStatusMapper.html","title":"class - TaskStatusMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskStatusMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/mapper/task-status.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(status: ITaskStatus)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/mapper/task-status.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                ITaskStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskStatusResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ITaskStatus } from '@shared/domain';\nimport { TaskStatusResponse } from '../controller/dto/task-status.response';\n\nexport class TaskStatusMapper {\n\tstatic mapToResponse(status: ITaskStatus): TaskStatusResponse {\n\t\tconst dto = new TaskStatusResponse(status);\n\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskStatusResponse.html":{"url":"classes/TaskStatusResponse.html","title":"class - TaskStatusResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskStatusResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/dto/task-status.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                graded\n                            \n                            \n                                isDraft\n                            \n                            \n                                isFinished\n                            \n                            \n                                isSubstitutionTeacher\n                            \n                            \n                                maxSubmissions\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: TaskStatusResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/controller/dto/task-status.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        TaskStatusResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        graded\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task-status.response.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDraft\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task-status.response.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFinished\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task-status.response.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSubstitutionTeacher\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task-status.response.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maxSubmissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task-status.response.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task-status.response.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class TaskStatusResponse {\n\tconstructor({ submitted, maxSubmissions, graded, isDraft, isSubstitutionTeacher, isFinished }: TaskStatusResponse) {\n\t\tthis.submitted = submitted;\n\t\tthis.maxSubmissions = maxSubmissions;\n\t\tthis.graded = graded;\n\t\tthis.isDraft = isDraft;\n\t\tthis.isSubstitutionTeacher = isSubstitutionTeacher;\n\t\tthis.isFinished = isFinished;\n\t}\n\n\t@ApiProperty()\n\tsubmitted: number;\n\n\t@ApiProperty()\n\tmaxSubmissions: number;\n\n\t@ApiProperty()\n\tgraded: number;\n\n\t@ApiProperty()\n\tisDraft: boolean;\n\n\t@ApiProperty()\n\tisSubstitutionTeacher: boolean;\n\n\t@ApiProperty()\n\tisFinished: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskUC.html":{"url":"injectables/TaskUC.html","title":"injectable - TaskUC","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/uc/task.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAllFinished\n                            \n                            \n                                    Private\n                                    Async\n                                findAllForStudent\n                            \n                            \n                                    Private\n                                    Async\n                                findAllForTeacher\n                            \n                            \n                                    Private\n                                getDefaultMaxDueDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(taskRepo: TaskRepo, authorizationService: TaskAuthorizationService, userRepo: UserRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/uc/task.uc.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskRepo\n                                                  \n                                                        \n                                                                        TaskRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizationService\n                                                  \n                                                        \n                                                                        TaskAuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        UserRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(userId: EntityId, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllFinished\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllFinished(userId: EntityId, pagination?: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findAllForStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForStudent(user: User, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findAllForTeacher\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForTeacher(user: User, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getDefaultMaxDueDate\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultMaxDueDate()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Date\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { EntityId, IPagination, Counted, SortOrder, TaskWithStatusVo, ITaskStatus, User } from '@shared/domain';\n\nimport { TaskRepo, UserRepo } from '@shared/repo';\n\nimport { TaskAuthorizationService, TaskParentPermission, TaskDashBoardPermission } from './task.authorization.service';\n\n@Injectable()\nexport class TaskUC {\n\tconstructor(\n\t\tprivate readonly taskRepo: TaskRepo,\n\t\tprivate readonly authorizationService: TaskAuthorizationService,\n\t\tprivate readonly userRepo: UserRepo\n\t) {}\n\n\tasync findAllFinished(userId: EntityId, pagination?: IPagination): Promise> {\n\t\t// load the user including all roles\n\t\tconst user = await this.userRepo.findById(userId, true);\n\n\t\tif (\n\t\t\t!this.authorizationService.hasOneOfTaskDashboardPermissions(user, [\n\t\t\t\tTaskDashBoardPermission.teacherDashboard,\n\t\t\t\tTaskDashBoardPermission.studentDashboard,\n\t\t\t])\n\t\t) {\n\t\t\tthrow new UnauthorizedException();\n\t\t}\n\n\t\tconst courses = await this.authorizationService.getPermittedCourses(user, TaskParentPermission.read);\n\t\tconst lessons = await this.authorizationService.getPermittedLessons(user, courses);\n\n\t\tconst openCourseIds = courses.filter((c) => !c.isFinished()).map((c) => c.id);\n\t\tconst finishedCourseIds = courses.filter((c) => c.isFinished()).map((c) => c.id);\n\t\tconst lessonIdsOfOpenCourses = lessons.filter((l) => !l.course.isFinished()).map((l) => l.id);\n\t\tconst lessonIdsOfFinishedCourses = lessons.filter((l) => l.course.isFinished()).map((l) => l.id);\n\n\t\tconst [tasks, total] = await this.taskRepo.findAllFinishedByParentIds(\n\t\t\t{\n\t\t\t\tcreatorId: userId,\n\t\t\t\topenCourseIds,\n\t\t\t\tfinishedCourseIds,\n\t\t\t\tlessonIdsOfOpenCourses,\n\t\t\t\tlessonIdsOfFinishedCourses,\n\t\t\t},\n\t\t\t{ pagination }\n\t\t);\n\n\t\tconst taskWithStatusVos = tasks.map((task) => {\n\t\t\tlet status: ITaskStatus;\n\t\t\tif (this.authorizationService.hasTaskPermission(user, task, TaskParentPermission.write)) {\n\t\t\t\tstatus = task.createTeacherStatusForUser(user);\n\t\t\t} else {\n\t\t\t\t// TaskParentPermission.read check is not needed on this place\n\t\t\t\tstatus = task.createStudentStatusForUser(user);\n\t\t\t}\n\n\t\t\treturn new TaskWithStatusVo(task, status);\n\t\t});\n\n\t\treturn [taskWithStatusVos, total];\n\t}\n\n\tasync findAll(userId: EntityId, pagination: IPagination): Promise> {\n\t\tlet response: Counted;\n\n\t\t// load the user including all roles\n\t\tconst user = await this.userRepo.findById(userId, true);\n\n\t\tif (this.authorizationService.hasOneOfTaskDashboardPermissions(user, TaskDashBoardPermission.studentDashboard)) {\n\t\t\tresponse = await this.findAllForStudent(user, pagination);\n\t\t} else if (\n\t\t\tthis.authorizationService.hasOneOfTaskDashboardPermissions(user, TaskDashBoardPermission.teacherDashboard)\n\t\t) {\n\t\t\tresponse = await this.findAllForTeacher(user, pagination);\n\t\t} else {\n\t\t\tthrow new UnauthorizedException();\n\t\t}\n\n\t\treturn response;\n\t}\n\n\tprivate async findAllForStudent(user: User, pagination: IPagination): Promise> {\n\t\tconst courses = await this.authorizationService.getPermittedCourses(user, TaskParentPermission.read);\n\t\tconst openCourses = courses.filter((c) => !c.isFinished());\n\t\tconst lessons = await this.authorizationService.getPermittedLessons(user, openCourses);\n\n\t\tconst dueDate = this.getDefaultMaxDueDate();\n\t\tconst notFinished = { userId: user.id, value: false };\n\n\t\tconst [tasks, total] = await this.taskRepo.findAllByParentIds(\n\t\t\t{\n\t\t\t\tcreatorId: user.id,\n\t\t\t\tcourseIds: openCourses.map((c) => c.id),\n\t\t\t\tlessonIds: lessons.map((l) => l.id),\n\t\t\t},\n\t\t\t{ afterDueDateOrNone: dueDate, finished: notFinished, availableOn: new Date() },\n\t\t\t{\n\t\t\t\tpagination,\n\t\t\t\torder: { dueDate: SortOrder.asc },\n\t\t\t}\n\t\t);\n\n\t\tconst taskWithStatusVos = tasks.map((task) => {\n\t\t\tconst status = task.createStudentStatusForUser(user);\n\t\t\treturn new TaskWithStatusVo(task, status);\n\t\t});\n\n\t\treturn [taskWithStatusVos, total];\n\t}\n\n\tprivate async findAllForTeacher(user: User, pagination: IPagination): Promise> {\n\t\tconst courses = await this.authorizationService.getPermittedCourses(user, TaskParentPermission.write);\n\t\tconst openCourses = courses.filter((c) => !c.isFinished());\n\t\tconst lessons = await this.authorizationService.getPermittedLessons(user, openCourses);\n\n\t\tconst notFinished = { userId: user.id, value: false };\n\n\t\tconst [tasks, total] = await this.taskRepo.findAllByParentIds(\n\t\t\t{\n\t\t\t\tcreatorId: user.id,\n\t\t\t\tcourseIds: openCourses.map((c) => c.id),\n\t\t\t\tlessonIds: lessons.map((l) => l.id),\n\t\t\t},\n\t\t\t{ finished: notFinished, availableOn: new Date() },\n\t\t\t{\n\t\t\t\tpagination,\n\t\t\t\torder: { dueDate: SortOrder.desc },\n\t\t\t}\n\t\t);\n\n\t\tconst taskWithStatusVos = tasks.map((task) => {\n\t\t\tconst status = task.createTeacherStatusForUser(user);\n\t\t\treturn new TaskWithStatusVo(task, status);\n\t\t});\n\n\t\treturn [taskWithStatusVos, total];\n\t}\n\n\tprivate getDefaultMaxDueDate(): Date {\n\t\tconst oneWeekAgo = new Date();\n\t\toneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\n\t\treturn oneWeekAgo;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskWithStatusVo.html":{"url":"classes/TaskWithStatusVo.html","title":"class - TaskWithStatusVo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskWithStatusVo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/task.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                status\n                            \n                            \n                                task\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(task: Task, status: ITaskStatus)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        task\n                                                  \n                                                        \n                                                                        Task\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        ITaskStatus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ITaskStatus\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Collection, Entity, ManyToOne, OneToMany, ManyToMany, Property, Index } from '@mikro-orm/core';\nimport { EntityId } from '../types/entity-id';\n\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { Lesson } from './lesson.entity';\nimport type { Submission } from './submission.entity';\nimport type { User } from './user.entity';\n\nexport interface ITaskProperties {\n\tname: string;\n\tavailableDate?: Date;\n\tdueDate?: Date;\n\tprivate?: boolean;\n\tcreator?: User;\n\tcourse?: Course;\n\tlesson?: Lesson;\n\tsubmissions?: Submission[];\n\tfinished?: User[];\n}\n\nexport interface ITaskStatus {\n\tsubmitted: number;\n\tmaxSubmissions: number;\n\tgraded: number;\n\tisDraft: boolean;\n\tisSubstitutionTeacher: boolean;\n\tisFinished: boolean;\n}\n\nexport class TaskWithStatusVo {\n\ttask!: Task;\n\n\tstatus!: ITaskStatus;\n\n\tconstructor(task: Task, status: ITaskStatus) {\n\t\tthis.task = task;\n\t\tthis.status = status;\n\t}\n}\n\nexport type TaskParentDescriptions = { name: string; description: string; color: string };\n\n@Entity({ tableName: 'homeworks' })\n@Index({ name: 'findAllByParentIds_findAllForStudent', properties: ['private', 'dueDate', 'finished'] })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tavailableDate?: Date;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate = true;\n\n\t@ManyToOne('User', { fieldName: 'teacherId' })\n\tcreator?: User;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse?: Course;\n\n\t@ManyToOne('Lesson', { fieldName: 'lessonId' })\n\tlesson?: Lesson; // In database exist also null, but it can not set.\n\n\t@OneToMany('Submission', 'task')\n\tsubmissions = new Collection(this);\n\n\t// TODO: rename to finished\n\t@Index({ name: 'findAllByParentIds_findAllForTeacher' })\n\t@ManyToMany('User', undefined, { fieldName: 'archived' })\n\tfinished = new Collection(this);\n\n\tconstructor(props: ITaskProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.availableDate = props.availableDate;\n\t\tthis.dueDate = props.dueDate;\n\t\tif (props.private !== undefined) this.private = props.private;\n\t\tthis.creator = props.creator;\n\t\tthis.course = props.course;\n\t\tthis.lesson = props.lesson;\n\t\tthis.submissions.set(props.submissions || []);\n\t\tthis.finished.set(props.finished || []);\n\t}\n\n\tisFinishedForUser(user: User): boolean {\n\t\treturn !!(this.finished?.contains(user) || this.course?.isFinished());\n\t}\n\n\tisDraft(): boolean {\n\t\t// private can be undefined in the database\n\t\treturn !!this.private;\n\t}\n\n\tprivate getSubmissionItems(): Submission[] {\n\t\tif (!this.submissions.isInitialized(true)) {\n\t\t\tthrow new Error('Submissions items are not loaded.');\n\t\t}\n\t\tconst submissions = this.submissions.getItems();\n\t\treturn submissions;\n\t}\n\n\tgetSubmittedUserIds(): EntityId[] {\n\t\tconst submittedUserIds = this.getSubmissionItems().map((submission) => submission.student.id);\n\t\tconst uniqueSubmittedUserIds = [...new Set(submittedUserIds)];\n\n\t\treturn uniqueSubmittedUserIds;\n\t}\n\n\tgetNumberOfSubmittedUsers(): number {\n\t\tconst submittedUserIds = this.getSubmittedUserIds();\n\t\tconst count = submittedUserIds.length;\n\n\t\treturn count;\n\t}\n\n\tgetGradedUserIds(): EntityId[] {\n\t\tconst gradedUserIds = this.getSubmissionItems()\n\t\t\t.filter((submission) => submission.isGraded())\n\t\t\t.map((submission) => submission.student.id);\n\t\tconst uniqueGradedUserIds = [...new Set(gradedUserIds)];\n\n\t\treturn uniqueGradedUserIds;\n\t}\n\n\tgetNumberOfGradedUsers(): number {\n\t\tconst gradedUserIds = this.getGradedUserIds();\n\t\tconst count = gradedUserIds.length;\n\n\t\treturn count;\n\t}\n\n\t// attention based on this parent use this.getParent() instant\n\tgetMaxSubmissions(): number {\n\t\t// hack until parents are defined\n\t\tconst numberOfStudents = this.course ? this.course.getNumberOfStudents() : 0;\n\n\t\treturn numberOfStudents;\n\t}\n\n\tcreateTeacherStatusForUser(user: User): ITaskStatus {\n\t\tconst submitted = this.getNumberOfSubmittedUsers();\n\t\tconst graded = this.getNumberOfGradedUsers();\n\t\tconst maxSubmissions = this.getMaxSubmissions();\n\t\tconst isDraft = this.isDraft();\n\t\tconst isFinished = this.isFinishedForUser(user);\n\t\t// only point that need the parameter\n\t\t// const isSubstitutionTeacher = this.isSubstitutionTeacher(userId);\n\t\t// work with getParent()\n\t\tlet isSubstitutionTeacher = false;\n\t\tif (this.course) {\n\t\t\tisSubstitutionTeacher = this.course.substitutionTeachers.contains(user);\n\t\t}\n\n\t\tconst status = {\n\t\t\tsubmitted,\n\t\t\tgraded,\n\t\t\tmaxSubmissions,\n\t\t\tisDraft,\n\t\t\tisSubstitutionTeacher,\n\t\t\tisFinished,\n\t\t};\n\n\t\treturn status;\n\t}\n\n\tisSubmittedForUser(user: User): boolean {\n\t\tconst submitted = this.getSubmittedUserIds().some((uid) => uid === user.id);\n\n\t\treturn submitted;\n\t}\n\n\tisGradedForUser(user: User): boolean {\n\t\tconst graded = this.getGradedUserIds().some((uid) => uid === user.id);\n\n\t\treturn graded;\n\t}\n\n\tcreateStudentStatusForUser(user: User): ITaskStatus {\n\t\tconst isSubmitted = this.isSubmittedForUser(user);\n\t\tconst isGraded = this.isGradedForUser(user);\n\t\tconst maxSubmissions = 1;\n\t\tconst isDraft = this.isDraft();\n\t\tconst isSubstitutionTeacher = false;\n\t\tconst isFinished = this.isFinishedForUser(user);\n\n\t\tconst status = {\n\t\t\tsubmitted: isSubmitted ? 1 : 0,\n\t\t\tgraded: isGraded ? 1 : 0,\n\t\t\tmaxSubmissions,\n\t\t\tisDraft,\n\t\t\tisSubstitutionTeacher,\n\t\t\tisFinished,\n\t\t\t// TODO: visibility of parent is missed ..but isSubstitutionTeacher and this is not really a part from task,\n\t\t\t// for this we must add parent relationship\n\t\t};\n\n\t\treturn status;\n\t}\n\n\t// TODO: based on the parent relationship\n\tgetDescriptions(): TaskParentDescriptions {\n\t\tlet descriptions: TaskParentDescriptions;\n\t\tif (this.course) {\n\t\t\tdescriptions = {\n\t\t\t\tname: this.course.name,\n\t\t\t\tdescription: this.lesson ? this.lesson.name : '',\n\t\t\t\tcolor: this.course.color,\n\t\t\t};\n\t\t} else {\n\t\t\tdescriptions = {\n\t\t\t\tname: '',\n\t\t\t\tdescription: '',\n\t\t\t\tcolor: '#ACACAC',\n\t\t\t};\n\t\t}\n\n\t\treturn descriptions;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Team.html":{"url":"entities/Team.html","title":"entity - Team","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Team\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/team.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/team.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from './base.entity';\n\nexport interface ITeamProperties {\n\tname: string;\n}\n@Entity({ tableName: 'teams' })\nexport class Team extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: ITeamProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/TeamNews.html":{"url":"entities/TeamNews.html","title":"entity - TeamNews","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  TeamNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/news.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Team\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Team')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:110\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { School } from './school.entity';\nimport type { Team } from './team.entity';\nimport type { User } from './user.entity';\nimport { NewsTarget, NewsTargetModel } from '../types/news.types';\nimport { EntityId } from '../types';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId | School;\n\tcreator: EntityId | User;\n\ttarget: EntityId | NewsTarget;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: User;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTarget;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel!: NewsTargetModel;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToOne('User', { fieldName: 'creatorId' })\n\tcreator!: User;\n\n\t@ManyToOne('User', { fieldName: 'updaterId' })\n\tupdater?: User;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, updater: props.updater, target: props.target });\n\t\tthis.externalId = props.externalId;\n\t\tthis.source = props.source;\n\t\tthis.sourceDescription = props.sourceDescription;\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne('School')\n\ttarget!: School;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne('Course')\n\ttarget!: Course;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne('Team')\n\ttarget!: Team;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TeamNewsController.html":{"url":"controllers/TeamNewsController.html","title":"controller - TeamNewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TeamNewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/team-news.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                team\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllForTeam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForTeam\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForTeam(teamId: string, currentUser: ICurrentUser, scope: NewsFilterQuery, pagination: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':teamId/news')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/team-news.controller.ts:22\n                \n            \n\n\n            \n                \n                    Responds with news of a given team for a user.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, Query } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ICurrentUser } from '@shared/domain';\n\nimport { PaginationQuery, ParseObjectIdPipe } from '@shared/controller';\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\n\nimport { NewsMapper } from '../mapper/news.mapper';\nimport { NewsUc } from '../uc';\nimport { NewsFilterQuery, NewsListResponse } from './dto';\n\n@ApiTags('News')\n@Authenticate('jwt')\n@Controller('team')\nexport class TeamNewsController {\n\tconstructor(private readonly newsUc: NewsUc) {}\n\n\t/**\n\t * Responds with news of a given team for a user.\n\t */\n\t@Get(':teamId/news')\n\tasync findAllForTeam(\n\t\t@Param('teamId', ParseObjectIdPipe) teamId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() scope: NewsFilterQuery,\n\t\t@Query() pagination: PaginationQuery\n\t): Promise {\n\t\t// enforce filter by a given team, used in team tab\n\t\tscope.targetId = teamId;\n\t\tscope.targetModel = 'teams';\n\t\tconst [newsList, count] = await this.newsUc.findAllForUser(\n\t\t\tcurrentUser.userId,\n\t\t\tNewsMapper.mapNewsScopeToDomain(scope),\n\t\t\t{ pagination }\n\t\t);\n\t\tconst dtoList = newsList.map((news) => NewsMapper.mapToResponse(news));\n\t\tconst response = new NewsListResponse(dtoList, count);\n\t\treturn response;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestBootstrapConsole.html":{"url":"classes/TestBootstrapConsole.html","title":"class - TestBootstrapConsole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestBootstrapConsole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/console/test/bootstrap.console.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    AbstractBootstrapConsole\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/console/test/bootstrap.console.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Test, TestingModule } from '@nestjs/testing';\nimport { AbstractBootstrapConsole, BootstrapConsole } from 'nestjs-console';\n\nexport class TestBootstrapConsole extends AbstractBootstrapConsole {\n\tcreate(): Promise {\n\t\treturn Test.createTestingModule({\n\t\t\timports: [this.options.module],\n\t\t}).compile();\n\t}\n}\n\nexport const execute = async (bootstrap: BootstrapConsole, args: string[]): Promise => {\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tconst commandResponse = await bootstrap.boot([process.argv0, 'console', ...args]);\n\treturn Promise.resolve();\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeoutInterceptor.html":{"url":"injectables/TimeoutInterceptor.html","title":"injectable - TimeoutInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TimeoutInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/timeout.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                This interceptor leaves the request execution after a given timeout in ms.\nThis will not stop the running services behind the controller.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _timeout\n                            \n                            \n                                    Protected\n                                    Static\n                                defaultTimeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    timeout\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _timeout\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Static\n                        defaultTimeout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : REQUEST_TIMEOUT\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        timeout\n                    \n                \n\n                \n                    \n                        gettimeout()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:29\n                                \n                            \n\n                \n                    \n                        settimeout(milliseconds: number)\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:33\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            milliseconds\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler, RequestTimeoutException } from '@nestjs/common';\nimport { Observable, throwError, TimeoutError } from 'rxjs';\nimport { catchError, timeout } from 'rxjs/operators';\nimport { REQUEST_TIMEOUT } from './constants';\n\n/**\n * This interceptor leaves the request execution after a given timeout in ms.\n * This will not stop the running services behind the controller.\n */\n@Injectable()\nexport class TimeoutInterceptor implements NestInterceptor {\n\tprotected static defaultTimeout = REQUEST_TIMEOUT;\n\n\tprivate _timeout?: number;\n\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\treturn next.handle().pipe(\n\t\t\ttimeout(this.timeout),\n\t\t\tcatchError((err) => {\n\t\t\t\tif (err instanceof TimeoutError) {\n\t\t\t\t\treturn throwError(new RequestTimeoutException());\n\t\t\t\t}\n\t\t\t\treturn throwError(err);\n\t\t\t})\n\t\t);\n\t}\n\n\tget timeout(): number {\n\t\treturn this._timeout || TimeoutInterceptor.defaultTimeout;\n\t}\n\n\tset timeout(milliseconds: number) {\n\t\tthis._timeout = milliseconds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateMatchParams.html":{"url":"classes/UpdateMatchParams.html","title":"class - UpdateMatchParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateMatchParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user-import/controller/dto/update-match.params.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'updates local user reference for an import user'})@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/update-match.params.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsMongoId } from 'class-validator';\n\nexport class UpdateMatchParams {\n\t@ApiProperty({ description: 'updates local user reference for an import user' })\n\t@IsMongoId()\n\tuserId!: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateNewsParams.html":{"url":"classes/UpdateNewsParams.html","title":"class - UpdateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/update-news.params.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for Updating a news document.\nA PartialType is a halper which allows to extend an existing class by making all its properties optional.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                displayAt\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiPropertyOptional({description: 'Content of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDate()@ApiPropertyOptional({description: 'The point in time from when the News entity schould be displayed'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiPropertyOptional({description: 'Title of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsDate, IsOptional, IsString } from 'class-validator';\n\n/**\n * DTO for Updating a news document.\n * A PartialType is a halper which allows to extend an existing class by making all its properties optional.\n */\nexport class UpdateNewsParams {\n\t@IsOptional()\n\t@IsString()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle!: string;\n\n\t@IsOptional()\n\t@IsString()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent!: string;\n\n\t@IsOptional()\n\t@IsDate()\n\t@ApiPropertyOptional({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt!: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                            \n                                roles\n                            \n                            \n                                school\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()@Index({name: 'externalUserIdentifier'})@Unique()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({name: 'roleIdBasedSearches'})@ManyToMany('Role', undefined, {fieldName: 'roles'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({name: 'searchUserForSchool'})@ManyToOne('School', {fieldName: 'schoolId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:33\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Collection, Entity, ManyToMany, ManyToOne, Property, Index, Unique } from '@mikro-orm/core';\nimport type { Role } from './role.entity';\nimport type { School } from './school.entity';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface IUserProperties {\n\temail: string;\n\tfirstName?: string;\n\tlastName?: string;\n\tschool: School;\n\troles: Role[];\n}\n\n@Entity({ tableName: 'users' })\nexport class User extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'externalUserIdentifier' })\n\t@Unique()\n\temail: string;\n\n\t@Property()\n\tfirstName?: string;\n\n\t@Property()\n\tlastName?: string;\n\n\t@Index({ name: 'roleIdBasedSearches' })\n\t@ManyToMany('Role', undefined, { fieldName: 'roles' })\n\troles = new Collection(this);\n\n\t@Index({ name: 'searchUserForSchool' })\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\tconstructor(props: IUserProperties) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.email = props.email;\n\t\tthis.school = props.school;\n\t\tthis.roles.set(props.roles);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/controller/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                me\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        me\n                        \n                    \n                \n            \n            \n                \n                    \n                    me(currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('me')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/user/controller/user.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiTags } from '@nestjs/swagger';\n\nimport { Controller, Get } from '@nestjs/common';\nimport { ICurrentUser, PermissionService } from '@shared/domain';\n\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\nimport { UserRepo } from '@shared/repo';\nimport { ResolvedUser } from './dto/ResolvedUser.dto';\nimport { ResolvedUserMapper } from '../mapper';\n\n@ApiTags('User')\n@Authenticate('jwt')\n@Controller('user')\nexport class UserController {\n\tconstructor(private readonly userRepo: UserRepo, private readonly permissionService: PermissionService) {}\n\n\t@Get('me')\n\tasync me(@CurrentUser() currentUser: ICurrentUser): Promise {\n\t\tconst user = await this.userRepo.findById(currentUser.userId, true);\n\t\tconst permissions = this.permissionService.resolvePermissions(user);\n\n\t\t// only the root roles of the user get published\n\t\tconst resolvedUser = ResolvedUserMapper.mapToResponse(user, permissions, user.roles.getItems());\n\n\t\treturn resolvedUser;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoMapper.html":{"url":"classes/UserInfoMapper.html","title":"class - UserInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/user-info.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(user: User)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/user-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '@shared/domain';\nimport { UserInfoResponse } from '../controller/dto';\n\nexport class UserInfoMapper {\n\tstatic mapToResponse(user: User): UserInfoResponse {\n\t\tconst dto = new UserInfoResponse({\n\t\t\tid: user.id,\n\t\t\tfirstName: user.firstName,\n\t\t\tlastName: user.lastName,\n\t\t});\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoResponse.html":{"url":"classes/UserInfoResponse.html","title":"class - UserInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/user-info.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: UserInfoResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        UserInfoResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'First name of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the User entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Last name of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class UserInfoResponse {\n\tconstructor({ id, firstName, lastName }: UserInfoResponse) {\n\t\tthis.id = id;\n\t\tthis.firstName = firstName;\n\t\tthis.lastName = lastName;\n\t}\n\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the User entity',\n\t})\n\tid: string;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'First name of the user',\n\t})\n\tfirstName?: string;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'Last name of the user',\n\t})\n\tlastName?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserMatch.html":{"url":"classes/UserMatch.html","title":"class - UserMatch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserMatch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/import-user.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                matchedBy\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: UserMatch)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/import-user.entity.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        UserMatch\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        matchedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatchCreator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum({fieldName: 'matchedBy'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/import-user.entity.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({fieldName: 'userId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/import-user.entity.ts:69\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n\tEmbeddable,\n\tEmbedded,\n\tEntity,\n\tEnum,\n\tIdentifiedReference,\n\tManyToOne,\n\tProperty,\n\tReference,\n} from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { School } from './school.entity';\nimport { System } from './system.entity';\nimport type { User } from './user.entity';\n\nexport interface IImportUserProperties {\n\t// references\n\tschool: School;\n\tsystem: System;\n\t// external identifiers\n\tldapDn: string;\n\tldapId: string;\n\t// descriptive properties\n\tfirstName: string;\n\tlastName: string;\n\temail: string; // TODO VO\n\troleNames?: RoleName[];\n\tclassNames?: string[];\n\tmatch?: UserMatch;\n\tflagged?: boolean;\n}\n\n// class EMailVO {\n// \t_email: string;\n\n// \tset email(value: string) {\n// \t\tthis._email = value.toLowerCase();\n// \t}\n\n// \tget email(): string {\n// \t\treturn this._email;\n// \t}\n\n// \tconstructor(value: string) {\n// \t\tthis._email = value.toLowerCase();\n// \t}\n// }\n\nexport enum MatchCreator {\n\tAUTO = 'auto',\n\tMANUAL = 'admin',\n}\nexport enum RoleName {\n\tSTUDENT = 'student',\n\tTEACHER = 'teacher',\n\tADMIN = 'admin',\n}\n\n@Embeddable()\nexport class UserMatch extends BaseEntityWithTimestamps {\n\tconstructor(props: UserMatch) {\n\t\tsuper();\n\t\tthis.user = props.user;\n\t\tthis.matchedBy = props.matchedBy;\n\t}\n\n\t@Property({ fieldName: 'userId' })\n\tuser: User;\n\n\t@Enum({ fieldName: 'matchedBy' })\n\tmatchedBy: MatchCreator;\n}\n\n@Entity({ tableName: 'importUser' })\nexport class ImportUser extends BaseEntityWithTimestamps {\n\t@ManyToOne(() => 'School', { wrappedReference: true, lazy: true })\n\tschool: IdentifiedReference;\n\n\t@ManyToOne(() => 'System', { wrappedReference: true, lazy: true })\n\tsystem: IdentifiedReference;\n\n\t@Property()\n\tldapDn: string;\n\n\t@Property()\n\tldapId: string;\n\n\t@Property()\n\tfirstName: string;\n\n\t@Property()\n\tlastName: string;\n\n\t@Property()\n\t/**\n\t * Lowercase email string // TODO VO\n\t */\n\temail: string;\n\n\t@Enum({ fieldName: 'roles' })\n\troleNames: RoleName[] = [];\n\n\t@Property()\n\tclassNames: string[] = [];\n\n\t@Embedded({ entity: () => UserMatch, object: true })\n\tmatch?: UserMatch;\n\n\t@Property()\n\tflagged = false;\n\n\tconstructor(props: IImportUserProperties) {\n\t\tsuper();\n\t\tthis.school = Reference.create(props.school);\n\t\tthis.system = Reference.create(props.system);\n\t\tthis.ldapDn = props.ldapDn;\n\t\tthis.ldapId = props.ldapId;\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.email = props.email;\n\t\tif (Array.isArray(props.roleNames) && props.roleNames.length > 0) this.roleNames.push(...props.roleNames);\n\t\tif (Array.isArray(props.classNames) && props.classNames.length > 0) this.classNames.push(...props.classNames);\n\t\tif (props.match) this.match = props.match;\n\t\tif (props.flagged && props.flagged === true) this.flagged = true;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserMatchResponse.html":{"url":"classes/UserMatchResponse.html","title":"class - UserMatchResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserMatchResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user-import/controller/dto/user-match.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                loginName\n                            \n                            \n                                matchedBy\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: UserMatchResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user-import/controller/dto/user-match.response.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        UserMatchResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'firstname of local user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/user-match.response.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'lastname of local user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/user-match.response.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'login name of local user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/user-match.response.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        matchedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatchCreatorResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'match type: admin (manual) or auto (set, when names match exactly for a single user', enum: MatchCreatorResponse})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/user-match.response.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty({description: 'local user id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/user-match.response.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsMongoId } from 'class-validator';\nimport { MatchCreatorResponse } from './match-creator.response';\n\nexport class UserMatchResponse {\n\tconstructor(props: UserMatchResponse) {\n\t\tthis.userId = props.userId;\n\t\tthis.loginName = props.loginName;\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.matchedBy = props.matchedBy;\n\t}\n\n\t@IsMongoId()\n\t@ApiProperty({ description: 'local user id' })\n\tuserId: string;\n\n\t@ApiProperty({ description: 'login name of local user' })\n\tloginName: string;\n\n\t@ApiProperty({ description: 'firstname of local user' })\n\tfirstName: string;\n\n\t@ApiProperty({ description: 'lastname of local user' })\n\tlastName: string;\n\n\t@ApiProperty({\n\t\tdescription: 'match type: admin (manual) or auto (set, when names match exactly for a single user',\n\t\tenum: MatchCreatorResponse,\n\t})\n\tmatchedBy: MatchCreatorResponse;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nPermissionService\n\nPermissionService\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPermissionService->UserModule\n\n\n\n\n\nUserRepo\n\nUserRepo\n\nUserModule -->\n\nUserRepo->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PermissionService\n                        \n                        \n                            UserRepo\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PermissionService } from '@shared/domain';\nimport { UserRepo } from '@shared/repo';\nimport { UserController } from './controller';\n\n@Module({\n\tcontrollers: [UserController],\n\tproviders: [UserRepo, PermissionService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRepo.html":{"url":"injectables/UserRepo.html","title":"injectable - UserRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/user/user.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Private\n                                    Async\n                                populateRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/user/user.repo.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: EntityId, populateRoles)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/user/user.repo.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    populateRoles\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        populateRoles\n                        \n                    \n                \n            \n            \n                \n                    \n                    populateRoles(roles: Role[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/user/user.repo.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roles\n                                    \n                                                Role[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId, Role, User } from '@shared/domain';\n\n@Injectable()\nexport class UserRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findById(id: EntityId, populateRoles = false): Promise {\n\t\tconst user = await this.em.findOneOrFail(User, { id });\n\n\t\tif (populateRoles) {\n\t\t\tawait this.em.populate(user, ['roles']);\n\t\t\tawait this.populateRoles(user.roles.getItems());\n\t\t}\n\n\t\treturn user;\n\t}\n\n\tprivate async populateRoles(roles: Role[]): Promise {\n\t\tfor (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationError.html":{"url":"classes/ValidationError.html","title":"class - ValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/validation.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BusinessError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                details\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDetails\n                            \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, details?: Record)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/validation.error.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                    Record\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:12\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDetails\n                        \n                    \n                \n            \n            \n                \ngetDetails()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Record\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResponse\n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\nimport { BusinessError } from './business.error';\n\nexport class ValidationError extends BusinessError {\n\tconstructor(readonly message: string, details?: Record) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\ttype: 'VALIDATION_ERROR',\n\t\t\t\ttitle: 'Validation Error',\n\t\t\t\tdefaultMessage: message,\n\t\t\t},\n\t\t\tHttpStatus.BAD_REQUEST,\n\t\t\tdetails\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationErrorDetailResponse.html":{"url":"classes/ValidationErrorDetailResponse.html","title":"class - ValidationErrorDetailResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationErrorDetailResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/validation-error-detail.response.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(field: string, errors: string[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/validation-error-detail.response.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ValidationErrorDetailResponse {\n\tconstructor(readonly field: string, readonly errors: string[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ValidationModule.html":{"url":"modules/ValidationModule.html","title":"module - ValidationModule","body":"\n                   \n\n\n\n\n    Modules\n    ValidationModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/validation/validation.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_PIPE } from '@nestjs/core';\nimport { GlobalValidationPipe } from './pipe/global-validation.pipe';\n\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_PIPE,\n\t\t\tuseClass: GlobalValidationPipe,\n\t\t},\n\t],\n})\nexport class ValidationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @feathersjs/authentication : ^4.5.11\n        \n            @feathersjs/authentication-local : ^4.5.11\n        \n            @feathersjs/configuration : ^4.5.11\n        \n            @feathersjs/errors : ^4.5.11\n        \n            @feathersjs/express : ^4.5.11\n        \n            @feathersjs/feathers : ^4.5.11\n        \n            @feathersjs/socketio : ^4.5.11\n        \n            @golevelup/nestjs-rabbitmq : ^1.18.1\n        \n            @hpi-schul-cloud/commons : ^1.3.3\n        \n            @mikro-orm/core : ^4.5.5\n        \n            @mikro-orm/mongodb : ^4.5.5\n        \n            @mikro-orm/nestjs : ^4.3.1\n        \n            @nestjs/common : ^8.2.3\n        \n            @nestjs/core : ^8.2.3\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/microservices : ^8.2.3\n        \n            @nestjs/passport : ^8.0.1\n        \n            @nestjs/platform-express : ^8.2.3\n        \n            @nestjs/swagger : ^5.1.0\n        \n            @sentry/node : ^6.2.0\n        \n            ajv : ^8.8.2\n        \n            amqp-connection-manager : ^3.2.2\n        \n            amqplib : ^0.8.0\n        \n            arg : ^5.0.0\n        \n            args : ^5.0.1\n        \n            async : ^3.2.2\n        \n            aws-sdk : ^2.1041.0\n        \n            axios : ^0.24.0\n        \n            bbb-promise : ^1.2.0\n        \n            bcryptjs : latest\n        \n            body-parser : ^1.15.2\n        \n            bson : ^4.6.0\n        \n            chalk : ^5.0.0\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            client-oauth2 : ^4.2.5\n        \n            commander : ^8.1.0\n        \n            compression : ^1.6.2\n        \n            concurrently : ^6.0.0\n        \n            cors : ^2.8.1\n        \n            cross-env : ^7.0.0\n        \n            crypto-js : ^4.0.0\n        \n            disposable-email-domains : ^1.0.56\n        \n            es6-promisify : ^7.0.0\n        \n            eslint-plugin-react : ^7.24.0\n        \n            eslint-plugin-react-hooks : ^4.2.0\n        \n            express : ^4.14.0\n        \n            express-openapi-validator : ^4.13.2\n        \n            feathers-hooks-common : ^5.0.3\n        \n            feathers-mongoose : ^6.3.0\n        \n            feathers-swagger : ^1.1.0\n        \n            file-type : ^16.2.0\n        \n            freeport : ^1.0.5\n        \n            html-entities : ^2.3.2\n        \n            jose : ^1.28.1\n        \n            jsonwebtoken : 8.5.1\n        \n            ldapjs : git://github.com/hpi-schul-cloud/node-ldapjs.git\n        \n            lodash : ^4.17.19\n        \n            migrate-mongoose : ^4.0.0\n        \n            mixwith : ^0.1.1\n        \n            moment : ^2.19.2\n        \n            mongodb-uri : ^0.9.7\n        \n            mongoose : ^5.13.9\n        \n            mongoose-delete : ^0.5.4\n        \n            mongoose-diff-history : git://github.com/schul-cloud/mongoose-diff-history.git\n        \n            mongoose-history : ^0.8.0\n        \n            mongoose-id-validator : ^0.6.0\n        \n            mongoose-lean-virtuals : ^0.8.1\n        \n            mongoose-shortid-nodeps : git://github.com/leeroybrun/mongoose-shortid-nodeps.git\n        \n            moodle-client : ^0.5.2\n        \n            nanoid : ^3.1.20\n        \n            nestjs-console : ^7.0.0\n        \n            oauth-1.0a : ^2.2.6\n        \n            papaparse : ^5.1.1\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            prom-client : ^13.1.0\n        \n            prometheus-api-metrics : ^3.1.0\n        \n            qs : ^6.9.4\n        \n            read-chunk : ^3.0.0\n        \n            redis : ^3.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            request-promise-core : ^1.1.4\n        \n            request-promise-native : ^1.0.3\n        \n            rimraf : ^3.0.2\n        \n            rss-parser : ^3.6.2\n        \n            rxjs : ^7.3.1\n        \n            sanitize-html : ^2.1.0\n        \n            serve-favicon : ^2.3.2\n        \n            service : ^0.1.4\n        \n            socketio-file-upload : ^0.7.0\n        \n            source-map-support : ^0.5.19\n        \n            strip-bom : ^4.0.0\n        \n            swagger-ui-express : ^4.1.6\n        \n            tiny-async-pool : ^1.2.0\n        \n            universal-analytics : ^0.5.1\n        \n            urlsafe-base64 : ^1.0.0\n        \n            uuid : ^8.3.0\n        \n            wait-on : ^6.0.0\n        \n            winston : ^3.2.0\n        \n            xml2js-es6-promise : ^1.1.1\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LearnroomTypes   (apps/.../learnroom.types.ts)\n                        \n                        \n                            MatchCreator   (apps/.../import-user.entity.ts)\n                        \n                        \n                            MatchCreatorResponse   (apps/.../match-creator.response.ts)\n                        \n                        \n                            MatchFilterQuery   (apps/.../import-user-filter.query.ts)\n                        \n                        \n                            NewsTargetModel   (apps/.../news.types.ts)\n                        \n                        \n                            RoleName   (apps/.../import-user.entity.ts)\n                        \n                        \n                            RoleNameResponse   (apps/.../role-name.response.ts)\n                        \n                        \n                            SortOrder   (apps/.../find-options.ts)\n                        \n                        \n                            TaskDashBoardPermission   (apps/.../task.authorization.service.ts)\n                        \n                        \n                            TaskParentPermission   (apps/.../task.authorization.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/shared/domain/types/learnroom.types.ts\n    \n        \n            \n                \n                    \n                        \n                        LearnroomTypes\n                    \n                \n                        \n                            \n                                 Course\n                            \n                        \n                        \n                            \n                                Value : course\n                            \n                        \n            \n        \n\n    apps/server/src/shared/domain/entity/import-user.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        MatchCreator\n                    \n                \n                        \n                            \n                                 AUTO\n                            \n                        \n                        \n                            \n                                Value : auto\n                            \n                        \n                        \n                            \n                                 MANUAL\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        RoleName\n                    \n                \n                        \n                            \n                                 STUDENT\n                            \n                        \n                        \n                            \n                                Value : student\n                            \n                        \n                        \n                            \n                                 TEACHER\n                            \n                        \n                        \n                            \n                                Value : teacher\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n            \n        \n\n    apps/server/src/modules/user-import/controller/dto/match-creator.response.ts\n    \n        \n            \n                \n                    \n                        \n                        MatchCreatorResponse\n                    \n                \n                        \n                            \n                                 AUTO\n                            \n                        \n                        \n                            \n                                Value : auto\n                            \n                        \n                        \n                            \n                                 MANUAL\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n            \n        \n\n    apps/server/src/modules/user-import/controller/dto/import-user-filter.query.ts\n    \n        \n            \n                \n                    \n                        \n                        MatchFilterQuery\n                    \n                \n                        \n                            \n                                 AUTO\n                            \n                        \n                        \n                            \n                                Value : auto\n                            \n                        \n                        \n                            \n                                 MANUAL\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 NONE\n                            \n                        \n                        \n                            \n                                Value : none\n                            \n                        \n            \n        \n\n    apps/server/src/shared/domain/types/news.types.ts\n    \n        \n            \n                \n                    \n                        \n                        NewsTargetModel\n                    \n                \n                        \n                            \n                                 School\n                            \n                        \n                        \n                            \n                                Value : schools\n                            \n                        \n                        \n                            \n                                 Course\n                            \n                        \n                        \n                            \n                                Value : courses\n                            \n                        \n                        \n                            \n                                 Team\n                            \n                        \n                        \n                            \n                                Value : teams\n                            \n                        \n            \n        \n\n    apps/server/src/modules/user-import/controller/dto/role-name.response.ts\n    \n        \n            \n                \n                    \n                        \n                        RoleNameResponse\n                    \n                \n                        \n                            \n                                 STUDENT\n                            \n                        \n                        \n                            \n                                Value : student\n                            \n                        \n                        \n                            \n                                 TEACHER\n                            \n                        \n                        \n                            \n                                Value : teacher\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n            \n        \n\n    apps/server/src/shared/domain/interface/find-options.ts\n    \n        \n            \n                \n                    \n                        \n                        SortOrder\n                    \n                \n                        \n                            \n                                 asc\n                            \n                        \n                        \n                            \n                                Value : asc\n                            \n                        \n                        \n                            \n                                 desc\n                            \n                        \n                        \n                            \n                                Value : desc\n                            \n                        \n            \n        \n\n    apps/server/src/modules/task/uc/task.authorization.service.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskDashBoardPermission\n                    \n                \n                        \n                            \n                                 teacherDashboard\n                            \n                        \n                        \n                            \n                                Value : TASK_DASHBOARD_TEACHER_VIEW_V3\n                            \n                        \n                        \n                            \n                                 studentDashboard\n                            \n                        \n                        \n                            \n                                Value : TASK_DASHBOARD_VIEW_V3\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TaskParentPermission\n                    \n                \n                        \n                            \n                                 read\n                            \n                        \n                        \n                            \n                                 write\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../management.ts)\n                        \n                        \n                            createErrorResponseForBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForUnknownError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createStorageProviderClient   (apps/.../filestorage.adapter.ts)\n                        \n                        \n                            DecodeHtmlEntities   (apps/.../decode-html-entities.transformer.ts)\n                        \n                        \n                            StringToBoolean   (apps/.../string-to-boolean.transformer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/server/src/management.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createErrorResponseForBusinessError\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForBusinessError(error: BusinessError)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                BusinessError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponseForFeathersError\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForFeathersError(error: FeathersError)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                FeathersError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponseForUnknownError\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForUnknownError(error?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    apps/server/src/shared/infra/filestorage/filestorage.adapter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createStorageProviderClient\n                        \n                    \n                \n            \n            \n                \ncreateStorageProviderClient(storageProvider: StorageProvider)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storageProvider\n                                    \n                                                StorageProvider\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     S3Client\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    apps/server/src/shared/controller/transformer/decode-html-entities.transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DecodeHtmlEntities\n                        \n                    \n                \n            \n            \n                \nDecodeHtmlEntities()\n                \n            \n\n\n\n\n            \n                \n                    Decorator to transform a string value so that all contained html entities are decoded.\nThe purpose of this decorator is to revert html entity encodings that come from generic\ninput sanitization in the legacy server. We don't need this encoding in the output of our API\nbecause in common template systems (e.g handlebars and vue.js) strings are generally\nescaped for the output. That leads to wrong text output because html entities are rendered \"as is\"\nwith all characters encoded again.\nExamples:\n\nwhen text = \"X & Y\" and template is {{ text }} it is rendered as \"X &amp; Y\" => wrong\nwhen text = \"X & Y\"     and template is {{ text }} it is rendered as \"X & Y\"      => good\n\n(both for vue.js and handlebars)\nUse this decorator in your response DTO wherever redundant html encoding from the legacy server has to be reverted.\nIMPORTANT: Should be removed later when sanitization works properly\n\n\n                    \n                    \n                    \n                        Returns :     PropertyDecorator\n\n                    \n                    \n                        the string with decoded html entities\n\n                    \n                \n            \n        \n    \n    apps/server/src/shared/controller/transformer/string-to-boolean.transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        StringToBoolean\n                        \n                    \n                \n            \n            \n                \nStringToBoolean()\n                \n            \n\n\n\n\n            \n                \n                    Decorator to transform a boolish string value to a boolean.\nAccepts: '1', 'true', '0', 'false' with type string only.\n\n\n                    \n                    \n                    \n                        Returns :     PropertyDecorator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHPI Schul-Cloud Server\nDevelop: \nMaster: \nDevelop: \nMaster: \nCodacy: \n\nNestJS application\n\nFind the NestJS applications documentation of this repository at GitHub pages. It contains information about\n\n\nsetup & preconditions\nstarting the application\ntesting\ntools setup (VSCode, Git)\narchitecture\n\nBased on NestJS\nFeathers application\nThis is legacy part of the application!\nBased on Node.js and Feathers\nApplication seperation\nIn order to seperate NestJS and Feathers each application runs in its own express instance. These express instances are then mounted on seperate paths under a common root express instance.\nRoot-Express-App \n├─ api/v1/       --> Feathers-App\n├─ api/v3/       --> NestJS-AppThis ensures that each application can run its own middleware stack for authentication, error handling, logging etc.\nThe mount paths don't have any impact on the routes inside of the applications, e.g. the path /api/v3/news will translate to the inner path /news. That means that in terms of route matching each child application doesn't have to take any measures regarding the path prefix. It simply works as it was mounted to /.\nHowever note that when URLs are generated inside a child application the path prefix has to be prepended. Only then the generated URLs match the appropriate child application, e.g. the path /news has to be provided as the external path /api/v3/news.\nIt is possible (not very likely) that the server api is called with URLs that use the old schema without a path prefix. As a safety net for that we additionally mount the Feathers application as before under the paths:\n\n/ - for internal calls\n/api - for external calls\n\nWhen these paths are accessed an error with context [DEPRECATED-PATH] is logged.\nSetup\nFor more detailed setup instructions, take a look at setup.\nThe whole application setup with all dependencies can be found in System Architecture. It contains information about how different application components are connected to each other.\nDebugger Configuration in Visual Studio Code\nFor more details how to set up Visual Studio Code, read this document.\nHow to name your branch and create a pull request (PR)\n\nTake the Ticket Number from JIRA (ticketsystem.hpi-schul-cloud.org), e.g. SC-999\nName the feature branch beginning with Ticket Number, all words separated by dash \"-\", e.g. feature/SC-999-fantasy-problem\nCreate a PR on branch develop containing the Ticket Number in PR title\nKeep the WIP label as long as this PR is in development, complete PR checklist (is automatically added), keep or increase code test coverage, and pass all tests before you remove the WIP label. Reviewers will be added automatically. For more information check our Definition of Done here.\n\nCommitting\nDefault branch: develop\n\nGo into project folder\nCheckout to develop branch (or clone for the first time)\nRun git pull\nCreate a branch for your new feature named feature/SC-Ticket-ID-Description\nRun the tests (see above)\nCommit with a meaningful commit message(!) even at 4 a.m. and not stuff like \"dfsdfsf\"\nStart a pull request (see above) to branch develop to merge your changes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                GNU AFFERO GENERAL PUBLIC LICENSE\n                   Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. http://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n                        Preamble  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n                   TERMS AND CONDITIONS\nDefinitions.\n\n  \"This License\" refers to version 3 of the GNU Affero General Public License.\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n  The Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\na) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\na) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\na) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nRemote Network Interaction; Use with the GNU General Public License.\n\n  Notwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\nRevised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\n  If the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n                 END OF TERMS AND CONDITIONS\n\n        How to Apply These Terms to Your New Programs  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\nCopyright (C)   \n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see .Also add information on how to contact you by electronic and paper mail.\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\nhttp://www.gnu.org/licenses/.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthorizationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConsoleWriterModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EncryptionModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ErrorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeathersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FileSystemModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImportUserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InterceptorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LearnroomModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MongoMemoryDatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RocketChatModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServerConsoleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServerTestModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaskModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ValidationModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\ncluster_ConsoleWriterModule\n\n\n\ncluster_ConsoleWriterModule_exports\n\n\n\ncluster_ConsoleWriterModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_DatabaseManagementModule\n\n\n\ncluster_DatabaseManagementModule_imports\n\n\n\ncluster_DatabaseManagementModule_exports\n\n\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_exports\n\n\n\ncluster_FeathersModule_providers\n\n\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_FileSystemModule\n\n\n\ncluster_FileSystemModule_exports\n\n\n\ncluster_FileSystemModule_providers\n\n\n\ncluster_ImportUserModule\n\n\n\ncluster_LearnroomModule\n\n\n\ncluster_LearnroomModule_providers\n\n\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_ManagementModule\n\n\n\ncluster_ManagementModule_providers\n\n\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_exports\n\n\n\ncluster_NewsModule_providers\n\n\n\ncluster_ServerConsoleModule\n\n\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_imports\n\n\n\ncluster_ServerTestModule\n\n\n\ncluster_ServerTestModule_imports\n\n\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nUserModule->ServerModule\n\n\n\n\n\nServerTestModule\n\nServerTestModule\n\nServerTestModule -->\n\nUserModule->ServerTestModule\n\n\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\nServerTestModule -->\n\nAuthModule->ServerTestModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nJwtValidationAdapter\n\nJwtValidationAdapter\n\nAuthModule -->\n\nJwtValidationAdapter->AuthModule\n\n\n\n\n\nUserRepo\n\nUserRepo\n\nUserModule -->\n\nUserRepo->UserModule\n\n\n\nAuthModule -->\n\nUserRepo->AuthModule\n\n\n\n\n\nLearnroomModule\n\nLearnroomModule\n\nLearnroomModule -->\n\nUserRepo->LearnroomModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nUserRepo->TaskModule\n\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nImportUserModule\n\nImportUserModule\n\nImportUserModule -->\n\nAuthorizationModule->ImportUserModule\n\n\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\nConsoleWriterService \n\nConsoleWriterService \n\n\n\nConsoleWriterModule\n\nConsoleWriterModule\n\nConsoleWriterService  -->\n\nConsoleWriterModule->ConsoleWriterService \n\n\n\n\n\nServerConsoleModule\n\nServerConsoleModule\n\nServerConsoleModule -->\n\nConsoleWriterModule->ServerConsoleModule\n\n\n\n\n\nConsoleWriterService\n\nConsoleWriterService\n\nConsoleWriterModule -->\n\nConsoleWriterService->ConsoleWriterModule\n\n\n\n\n\nManagementModule\n\nManagementModule\n\nManagementModule -->\n\nConsoleWriterService->ManagementModule\n\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nLoggerModule->FilesModule\n\n\n\nImportUserModule -->\n\nLoggerModule->ImportUserModule\n\n\n\n\n\nLogger \n\nLogger \n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\nServerTestModule -->\n\nCoreModule->ServerTestModule\n\n\n\n\n\nDatabaseManagementService\n\nDatabaseManagementService\n\n\n\nDatabaseManagementModule\n\nDatabaseManagementModule\n\nDatabaseManagementModule -->\n\nDatabaseManagementService->DatabaseManagementModule\n\n\n\nManagementModule -->\n\nDatabaseManagementService->ManagementModule\n\n\n\n\n\nDatabaseManagementService \n\nDatabaseManagementService \n\nDatabaseManagementService  -->\n\nDatabaseManagementModule->DatabaseManagementService \n\n\n\nManagementModule -->\n\nDatabaseManagementModule->ManagementModule\n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\nServerConsoleModule -->\n\nFilesModule->ServerConsoleModule\n\n\n\nServerModule -->\n\nFilesModule->ServerModule\n\n\n\nServerTestModule -->\n\nFilesModule->ServerTestModule\n\n\n\n\n\nDeleteFilesUc\n\nDeleteFilesUc\n\nFilesModule -->\n\nDeleteFilesUc->FilesModule\n\n\n\n\n\nFileStorageAdapter\n\nFileStorageAdapter\n\nFilesModule -->\n\nFileStorageAdapter->FilesModule\n\n\n\n\n\nFilesRepo\n\nFilesRepo\n\nFilesModule -->\n\nFilesRepo->FilesModule\n\n\n\n\n\nStorageProviderRepo\n\nStorageProviderRepo\n\nFilesModule -->\n\nStorageProviderRepo->FilesModule\n\n\n\n\n\nFileSystemAdapter \n\nFileSystemAdapter \n\n\n\nFileSystemModule\n\nFileSystemModule\n\nFileSystemAdapter  -->\n\nFileSystemModule->FileSystemAdapter \n\n\n\nManagementModule -->\n\nFileSystemModule->ManagementModule\n\n\n\n\n\nFileSystemAdapter\n\nFileSystemAdapter\n\nFileSystemModule -->\n\nFileSystemAdapter->FileSystemModule\n\n\n\nServerModule -->\n\nImportUserModule->ServerModule\n\n\n\nServerTestModule -->\n\nImportUserModule->ServerTestModule\n\n\n\n\n\nBoardMapper\n\nBoardMapper\n\nLearnroomModule -->\n\nBoardMapper->LearnroomModule\n\n\n\n\n\nCourseRepo\n\nCourseRepo\n\nLearnroomModule -->\n\nCourseRepo->LearnroomModule\n\n\n\nTaskModule -->\n\nCourseRepo->TaskModule\n\n\n\n\n\nCourseUc\n\nCourseUc\n\nLearnroomModule -->\n\nCourseUc->LearnroomModule\n\n\n\n\n\nDashboardModelMapper\n\nDashboardModelMapper\n\nLearnroomModule -->\n\nDashboardModelMapper->LearnroomModule\n\n\n\n\n\nDashboardUc\n\nDashboardUc\n\nLearnroomModule -->\n\nDashboardUc->LearnroomModule\n\n\n\n\n\nRoomsUc\n\nRoomsUc\n\nLearnroomModule -->\n\nRoomsUc->LearnroomModule\n\n\n\n\n\nTaskRepo\n\nTaskRepo\n\nLearnroomModule -->\n\nTaskRepo->LearnroomModule\n\n\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\nServerModule -->\n\nLearnroomModule->ServerModule\n\n\n\nServerTestModule -->\n\nLearnroomModule->ServerTestModule\n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\nServerConsoleModule -->\n\nManagementModule->ServerConsoleModule\n\n\n\n\n\nBsonConverter\n\nBsonConverter\n\nManagementModule -->\n\nBsonConverter->ManagementModule\n\n\n\n\n\nDatabaseManagementUc\n\nDatabaseManagementUc\n\nManagementModule -->\n\nDatabaseManagementUc->ManagementModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\nServerModule -->\n\nNewsModule->ServerModule\n\n\n\nServerTestModule -->\n\nNewsModule->ServerTestModule\n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\nServerTestModule -->\n\nTaskModule->ServerTestModule\n\n\n\n\n\nMongoMemoryDatabaseModule\n\nMongoMemoryDatabaseModule\n\nServerTestModule -->\n\nMongoMemoryDatabaseModule->ServerTestModule\n\n\n\n\n\nLessonRepo\n\nLessonRepo\n\nTaskModule -->\n\nLessonRepo->TaskModule\n\n\n\n\n\nPermissionService\n\nPermissionService\n\nUserModule -->\n\nPermissionService->UserModule\n\n\n\nTaskModule -->\n\nPermissionService->TaskModule\n\n\n\n\n\nTaskAuthorizationService\n\nTaskAuthorizationService\n\nTaskModule -->\n\nTaskAuthorizationService->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        25 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    23 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    41 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    71 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    50 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTechnical TODO around Nest Introduction\nSUGGESTED\n\nfilter logs by request with reflect-metadata (see mikroorm em setup)\ndisable Document from window\nfind a name for base entity id type\nfind a name for base entity class\ndecide if we want to use our entity id type in all layers (also in dtos etc.)\nuse index.ts files to bundle exports - we could use path names for imports then, e.g. @shared/domain\ncheck how we can implement mandatory/optional fields in dtos\nshould we use Expose() as default in dtos?\nin the controller we have to prohibit serialization of properties that have no @EXPOSE\nfind the best way ORM entity discovery\ndecide where to put domain interfaces (directory)\nhow can we log validation errors during development?\nsanitizer\nremove non-node async library\nfix async cleanup & remove timeout in tests\ntest object creator for nest entities\nenable log only for failed tests: https://stackoverflow.com/a/61909588\nremove sentry from code\nremove mongoose history (keep one)\nremove custom npm packages (ldap, ...)\ne2e default tests to extend: auth required, fails without/succeeds with\n\nACCEPTED\n\ndocumentation\n\nentity constructor\nem to be used in repositories only (!!!)\n\n\nload/perf test\n\ndisable legacy ts support (app, tests)\n\nfix .env/config for windows\n\n\nMERGE\n\napi path prefix cleanup: remove middleware and multiple path mounts, sync with nest\nuser module stucture\nsingle domain: shared entity (main.ts), shared repository \nrequest.user.user in jwt strategy\nremove outdated sorting.ts \nremove default launch/settings json files, apply them\nfix https://github.com/hpi-schul-cloud/schulcloud-server/pull/2729#pullrequestreview-699615164\n\nSELECTED\n\ntest shared / core module \n\nasync test fixes (remove this.timeout and red promise chains)\n\ndb configuration\n\nkeep mongoose options as mongo options\npovider for mikroorm options and db url\ntest db provider\nentity discovery\ncheck indexes in mikroorm: when are they updated?\nteardown (test, server module, main.ts)\nreplikaset for test module\nentity discovery\n\n\nnews\n\nuc cleanup: 2auth, visibilities\ndocument best practices/layers/orm\n\n\ncontext: user-/request-context (see mikroorm/asynclocalstorage)\n\n\nDONE\n\ncheck build & start for production with ops\nfix jest, linter, ...\ninject APP_FILTER (exception handler) and APP_INTERCEPTOR (logger), see core module\ncustom error handling (log/response), see global-error.filter.ts\nwatch docs should hot reload on md file change\n404 error handling in feathers has to be replaced (tests too). better: have nest before feathers... but seems not to be working\nremove mongoose\npublish documentation, see https://hpi-schul-cloud.github.io/schulcloud-server/overview.html\nfix all tests (nest/legacy)\nremove legacy scripts from package json (except tests) goal: have separated tests (legacy/nest) but only execute the nest app\nusing legacy database connection string\nv3 with/-out slash: diffenrent routes should respond with different result (/v3 is a resssource, /v3/ === /v3/index)\nvscode/lauch files: we put only default files into the repo\nnaming of dtos and dto-files: api vs domain, we leave out \"dto\" suffix for simplicity (we know that they are dtos) and instead append a specific suffix:\ne.g.\napi: , , \ndomain: , \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BoardElement   (apps/.../rooms.uc.ts)\n                        \n                        \n                            ConnectionOptions   (apps/.../types.ts)\n                        \n                        \n                            Counted   (apps/.../counted.ts)\n                        \n                        \n                            DashboardProps   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            EmptyResultQueryType   (apps/.../scope.ts)\n                        \n                        \n                            EntityId   (apps/.../entity-id.ts)\n                        \n                        \n                            FeathersServiceParams   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            FeathersServiceResponse   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            GenericData   (apps/.../rocket-chat.service.ts)\n                        \n                        \n                            GridElementContent   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            GridElementWithPosition   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            GridPosition   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            GridPositionWithGroupIndex   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            IPermissionsAndRoles   (apps/.../user.ts)\n                        \n                        \n                            IUpdateNews   (apps/.../news.types.ts)\n                        \n                        \n                            LearnroomMetadata   (apps/.../learnroom.types.ts)\n                        \n                        \n                            MongoDatabaseModuleOptions   (apps/.../types.ts)\n                        \n                        \n                            NewsTarget   (apps/.../news.types.ts)\n                        \n                        \n                            Permission   (apps/.../news.uc.ts)\n                        \n                        \n                            RabbitMqModuleOptions   (apps/.../mail.module.ts)\n                        \n                        \n                            Role   (apps/.../ResolvedUser.dto.ts)\n                        \n                        \n                            ScopeOperator   (apps/.../scope.ts)\n                        \n                        \n                            SortOrderMap   (apps/.../find-options.ts)\n                        \n                        \n                            SourceType   (apps/.../news.response.ts)\n                        \n                        \n                            Strategies   (apps/.../auth.decorator.ts)\n                        \n                        \n                            TaskParentDescriptions   (apps/.../task.entity.ts)\n                        \n                        \n                            ValueOf   (apps/.../value-of.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/modules/learnroom/uc/rooms.uc.ts\n    \n    \n        \n            \n                \n                    \n                    BoardElement\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/shared/infra/database/mongo-memory-database/types.ts\n    \n    \n        \n            \n                \n                    \n                    ConnectionOptions\n                \n            \n            \n                \n                    connection options not to be used in module options for the in memory db module as it is overriding the connection\n\n                \n            \n            \n                \n                        \"type\" | \"driver\" | \"clientUrl\" | \"dbName\" | \"user\" | \"password\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MongoDatabaseModuleOptions\n                \n            \n            \n                \n                            Omit\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/counted.ts\n    \n    \n        \n            \n                \n                    \n                    Counted\n                \n            \n            \n                \n                    Counted numbers inform about total counts beside the amount of items in T.\n\n                \n            \n            \n                \n                        [T, number]\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/entity/dashboard.entity.ts\n    \n    \n        \n            \n                \n                    \n                    DashboardProps\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GridElementContent\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GridElementWithPosition\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GridPosition\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GridPositionWithGroupIndex\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/shared/repo/scope.ts\n    \n    \n        \n            \n                \n                    \n                    EmptyResultQueryType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ScopeOperator\n                \n            \n            \n                \n                        \"$and\" | \"$or\"\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/entity-id.ts\n    \n    \n        \n            \n                \n                    \n                    EntityId\n                \n            \n            \n                \n                    Entity id type\n\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    apps/server/src/shared/infra/feathers/feathers-service.provider.ts\n    \n    \n        \n            \n                \n                    \n                    FeathersServiceParams\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FeathersServiceResponse\n                \n            \n            \n                \n                        Record | any[]\n\n                \n            \n        \n    \n    apps/server/src/modules/rocketchat/rocket-chat.service.ts\n    \n    \n        \n            \n                \n                    \n                    GenericData\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/interface/user.ts\n    \n    \n        \n            \n                \n                    \n                    IPermissionsAndRoles\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/news.types.ts\n    \n    \n        \n            \n                \n                    \n                    IUpdateNews\n                \n            \n            \n                \n                    news interface for updating news\n\n                \n            \n            \n                \n                            Partial\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NewsTarget\n                \n            \n            \n                \n                            School | Team | Course\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/learnroom.types.ts\n    \n    \n        \n            \n                \n                    \n                    LearnroomMetadata\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/modules/news/uc/news.uc.ts\n    \n    \n        \n            \n                \n                    \n                    Permission\n                \n            \n            \n                \n                        \"NEWS_VIEW\" | \"NEWS_EDIT\"\n\n                \n            \n        \n    \n    apps/server/src/shared/infra/mail/mail.module.ts\n    \n    \n        \n            \n                \n                    \n                    RabbitMqModuleOptions\n                \n            \n            \n                \n                        Omit\n\n                \n            \n        \n    \n    apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts\n    \n    \n        \n            \n                \n                    \n                    Role\n                \n            \n            \n                \n                            IRole\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/interface/find-options.ts\n    \n    \n        \n            \n                \n                    \n                    SortOrderMap\n                \n            \n            \n                \n                            Partial>\n\n                \n            \n        \n    \n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n    \n        \n            \n                \n                    \n                    SourceType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n    \n        \n            \n                \n                    \n                    Strategies\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/server/src/shared/domain/entity/task.entity.ts\n    \n    \n        \n            \n                \n                    \n                    TaskParentDescriptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/value-of.ts\n    \n    \n        \n            \n                \n                    \n                    ValueOf\n                \n            \n            \n                \n                    The type of the values in T (counterpart to keyof)\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ALL_ENTITIES   (apps/.../all-entities.ts)\n                        \n                        \n                            Authenticate   (apps/.../auth.decorator.ts)\n                        \n                        \n                            bootstrap   (apps/.../console.ts)\n                        \n                        \n                            cleanupCollections   (apps/.../cleanup-collections.ts)\n                        \n                        \n                            config   (jest.config.ts)\n                        \n                        \n                            config   (apps/.../swagger.ts)\n                        \n                        \n                            courseFactory   (apps/.../course.factory.ts)\n                        \n                        \n                            courseGroupFactory   (apps/.../coursegroup.factory.ts)\n                        \n                        \n                            courseNewsFactory   (apps/.../news.factory.ts)\n                        \n                        \n                            createErrorResponse   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForHttpException   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createMikroOrmModule   (apps/.../mongo-memory-database.module.ts)\n                        \n                        \n                            createRabbitMqModule   (apps/.../mail.module.ts)\n                        \n                        \n                            createTestModule   (apps/.../create-test.module.ts)\n                        \n                        \n                            CurrentUser   (apps/.../auth.decorator.ts)\n                        \n                        \n                            DEFAULT   (apps/.../course.entity.ts)\n                        \n                        \n                            defaultColumns   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            defaultMikroOrmOptions   (apps/.../server.module.ts)\n                        \n                        \n                            delay   (apps/.../create-test.module.ts)\n                        \n                        \n                            directoryFactory   (apps/.../file.factory.ts)\n                        \n                        \n                            EmptyResultQuery   (apps/.../empty-result.query.ts)\n                        \n                        \n                            enableOpenApiDocs   (apps/.../swagger.ts)\n                        \n                        \n                            execute   (apps/.../bootstrap.console.ts)\n                        \n                        \n                            fileFactory   (apps/.../file.factory.ts)\n                        \n                        \n                            generateEmptyDashboard   (apps/.../dashboard.repo.ts)\n                        \n                        \n                            isBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isTechnicalError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            jwtConstants   (apps/.../constants.ts)\n                        \n                        \n                            lessonFactory   (apps/.../lesson.factory.ts)\n                        \n                        \n                            mapUserToCurrentUser   (apps/.../map-user-to-current-user.ts)\n                        \n                        \n                            NEWS_SOURCES   (apps/.../news.response.ts)\n                        \n                        \n                            NOT_FOUND_ERROR_TYPE   (apps/.../server-error-types.ts)\n                        \n                        \n                            oneDay   (apps/.../course.factory.ts)\n                        \n                        \n                            REQUEST_TIMEOUT   (apps/.../constants.ts)\n                        \n                        \n                            roleFactory   (apps/.../role.factory.ts)\n                        \n                        \n                            schoolFactory   (apps/.../school.factory.ts)\n                        \n                        \n                            schoolNewsFactory   (apps/.../news.factory.ts)\n                        \n                        \n                            serverErrorTypes   (apps/.../server-error-types.ts)\n                        \n                        \n                            serverModules   (apps/.../server.module.ts)\n                        \n                        \n                            setupEntities   (apps/.../setup-entities.ts)\n                        \n                        \n                            storageProviderFactory   (apps/.../storageprovider.factory.ts)\n                        \n                        \n                            STRATEGIES   (apps/.../auth.decorator.ts)\n                        \n                        \n                            submissionFactory   (apps/.../submission.factory.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../create-news.params.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../news-filter.query.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../news.response.ts)\n                        \n                        \n                            taskFactory   (apps/.../task.factory.ts)\n                        \n                        \n                            teamFactory   (apps/.../team.factory.ts)\n                        \n                        \n                            teamNewsFactory   (apps/.../news.factory.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                            usedGlobals   (apps/.../database.config.ts)\n                        \n                        \n                               (apps/.../database.config.ts)\n                        \n                        \n                               (apps/.../server-error-types.ts)\n                        \n                        \n                               (apps/.../constants.ts)\n                        \n                        \n                            writeErrorLog   (apps/.../global-error.filter.ts)\n                        \n                        \n                            writeValidationErrors   (apps/.../global-error.filter.ts)\n                        \n                        \n                               (apps/.../jwt-validation.adapter.ts)\n                        \n                        \n                               (apps/.../constants.ts)\n                        \n                        \n                               (apps/.../file-system.adapter.ts)\n                        \n                        \n                            userFactory   (apps/.../user.factory.ts)\n                        \n                        \n                            yesterday   (apps/.../task.factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/shared/domain/entity/all-entities.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ALL_ENTITIES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n\tCourse,\n\tCourseGroup,\n\tDashboardModelEntity,\n\tDashboardGridElementModel,\n\tBaseFile,\n\tFile,\n\tDirectory,\n\tStorageProvider,\n\tLesson,\n\tRole,\n\tSchool,\n\tSubmission,\n\tTask,\n\tTeam,\n\tUser,\n\tCourseNews,\n\tNews,\n\tSchoolNews,\n\tTeamNews,\n\tSystem,\n\t// TODO move import user entities?\n\tImportUser,\n\tUserMatch,\n]\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Authenticate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...strategies: Strategies) => {\n\tif (strategies.includes('jwt')) {\n\t\tconst decorators = [\n\t\t\t// apply jwt authentication\n\t\t\tUseGuards(JwtAuthGuard),\n\t\t\t// add jwt authentication to openapi spec\n\t\t\tApiBearerAuth(),\n\t\t];\n\t\treturn applyDecorators(...decorators);\n\t}\n\tthrow new ForbiddenException('jwt strategy required');\n}\n                    \n                \n\n            \n                \n                    Authentication Decorator taking care of require authentication header to be present, setting up the user context and extending openAPI spec.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((data: unknown, ctx: ExecutionContext) => {\n\tconst { user }: Request = ctx.switchToHttp().getRequest();\n\tif (!user)\n\t\tthrow new UnauthorizedException(\n\t\t\t'CurrentUser missing in request context. This route requires jwt authentication guard enabled.'\n\t\t);\n\treturn user as ICurrentUser;\n})\n                    \n                \n\n            \n                \n                    Returns the current authenticated user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STRATEGIES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ['jwt'] as const\n                    \n                \n\n\n        \n    \n\n    apps/server/src/console/console.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BootstrapConsole({\n\tmodule: ServerConsoleModule,\n\tuseDecorators: true,\n})\n                    \n                \n\n            \n                \n                    The console is starting the application wrapped into commander.\nThis allows adding console commands to execute provider methods.\n\n                \n            \n\n        \n    \n\n    apps/server/src/shared/testing/cleanup-collections.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cleanupCollections\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (em: EntityManager): Promise => {\n\tconst allCollections = await em.getConnection('write').listCollections();\n\tawait Promise.all(\n\t\tallCollections.map(async (collectionName) => {\n\t\t\tawait em.getConnection().deleteMany(collectionName, {});\n\t\t})\n\t);\n}\n                    \n                \n\n\n        \n    \n\n    jest.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Config.InitialOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n\tmoduleFileExtensions: ['js', 'json', 'ts'],\n\trootDir: '.',\n\t/* we have tests in src/...*.spec.ts and test/...*.e2e-spec.ts either we test all files via `npm run nest:test` or override the regex in npm scripts to separate the execution via `npm run nest:test:spec` or `npm run nest:test:e2e` */\n\ttestRegex: '\\\\.(e2e-)?spec\\\\.ts$',\n\t// ignore legacy mocha tests\n\ttestPathIgnorePatterns: ['^src', '^test'],\n\ttransform: {\n\t\t'^.+\\\\.(t|j)s$': 'ts-jest',\n\t},\n\tcollectCoverageFrom: ['apps/**/*.(t|j)s'],\n\tcoverageDirectory: './coverage',\n\tcoveragePathIgnorePatterns: ['.module.ts$', 'index.ts$', 'spec.ts$'],\n\tcoverageThreshold: {\n\t\tglobal: {\n\t\t\tbranches: 80,\n\t\t\tfunctions: 80,\n\t\t\tlines: 80,\n\t\t\tstatements: -10,\n\t\t},\n\t\t// add custom paths: './apps/server/path...': { branches: X, functions: ... }\n\t},\n\ttestEnvironment: 'node',\n\t// detectOpenHandles: true,\n\t// detectLeaks: true,\n\troots: ['/apps/'],\n\tmoduleNameMapper: {\n\t\t// add ts-config path's here as regex\n\t\t'^@shared/(.*)$': '/apps/server/src/shared/$1',\n\t\t'^@src/(.*)$': '/apps/server/src/$1',\n\t},\n\tmaxWorkers: 2, // limited for not taking all workers within of a single github action\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('ts-jest/utils')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('./tsconfig.json')\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/controller/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DocumentBuilder()\n\t.addServer('/api/v3/') // add default path as server to have correct urls ald let 'try out' work\n\t.setTitle('HPI Schul-Cloud Server API')\n\t.setDescription('This is v3 of HPI Schul-Cloud Server. Checkout /docs for v1.')\n\t.setVersion('3.0')\n\t/** set authentication for all routes enabled by default */\n\t.addBearerAuth({ type: 'http', scheme: 'bearer', bearerFormat: 'JWT' })\n\t.build()\n                    \n                \n\n            \n                \n                    \nOpenAPI docs setup\n\nThey will be generated by Controller routes\nand DTOs/Entities passed. Their properties\nmust use @ApiProperty\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enableOpenApiDocs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (app: INestApplication, path: string): void => {\n\tconst document = SwaggerModule.createDocument(app, config);\n\tSwaggerModule.setup(path, app, document);\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/course.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        courseFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : CourseFactory.define(Course, ({ sequence, params }) => {\n\tlet school: School;\n\tif (params?.school) {\n\t\tschool = params.school as School;\n\t} else {\n\t\tschool = schoolFactory.build();\n\t}\n\n\treturn {\n\t\tname: `course #${sequence}`,\n\t\tdescription: `course #${sequence} description`,\n\t\tcolor: '#FFFFFF',\n\t\tschool,\n\t};\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        oneDay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : 24 * 60 * 60 * 1000\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/coursegroup.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        courseGroupFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(CourseGroup, () => {\n\treturn {\n\t\tcourse: courseFactory.build(),\n\t};\n})\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/news.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        courseNewsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(CourseNews, ({ sequence }) => {\n\treturn {\n\t\ttitle: `news ${sequence}`,\n\t\tcontent: `content of news ${sequence}`,\n\t\tdisplayAt: new Date(),\n\t\tschool: schoolFactory.build(),\n\t\tcreator: userFactory.build(),\n\t\ttarget: courseFactory.build(),\n\t};\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        schoolNewsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(SchoolNews, ({ sequence }) => {\n\treturn {\n\t\ttitle: `news ${sequence}`,\n\t\tcontent: `content of news ${sequence}`,\n\t\tdisplayAt: new Date(),\n\t\tschool: schoolFactory.build(),\n\t\tcreator: userFactory.build(),\n\t\ttarget: schoolFactory.build(),\n\t};\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teamNewsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(TeamNews, ({ sequence }) => {\n\treturn {\n\t\ttitle: `news ${sequence}`,\n\t\tcontent: `content of news ${sequence}`,\n\t\tdisplayAt: new Date(),\n\t\tschool: schoolFactory.build(),\n\t\tcreator: userFactory.build(),\n\t\ttarget: teamFactory.build(),\n\t};\n})\n                    \n                \n\n\n        \n    \n\n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createErrorResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: unknown, logger: ILogger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create default response for all unknown errors\n\t\treturn createErrorResponseForUnknownError();\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponseForHttpException\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n}\n                    \n                \n\n            \n                \n                    Creates ErrorResponse from NestJS build in technical exceptions\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBusinessError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFeathersError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTechnicalError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n}\n                    \n                \n\n            \n                \n                    Compare helper to detect an error is a build in NestJS http exception.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeErrorLog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: unknown, logger: ILogger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tif (error instanceof ApiValidationError) {\n\t\t\t\twriteValidationErrors(error, logger);\n\t\t\t} else {\n\t\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t\t}\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValidationErrors\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: ApiValidationError, logger: ILogger) => {\n\tconst errorMsg = error.validationErrors.map(\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t(e) => `Wrong property ${e.property} got ${e.value} : ${JSON.stringify(e.constraints)}`\n\t);\n\tlogger.error(errorMsg, error.stack, 'API Validation Error');\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/infra/database/mongo-memory-database/mongo-memory-database.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createMikroOrmModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (options: MikroOrmModuleAsyncOptions): Promise => {\n\tconst mikroOrmModule = MikroOrmModule.forRootAsync({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: MongoMemoryServer,\n\t\t\t\tuseFactory: async () => {\n\t\t\t\t\tconst mongo = await MongoMemoryServer.create();\n\t\t\t\t\treturn mongo;\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tuseFactory: async (mongo: MongoMemoryServer) => {\n\t\t\tawait mongo.ensureInstance();\n\t\t\tconst clientUrl = mongo.getUri();\n\t\t\treturn {\n\t\t\t\t...options,\n\t\t\t\ttype: 'mongo',\n\t\t\t\tclientUrl,\n\t\t\t};\n\t\t},\n\t\tinject: [MongoMemoryServer],\n\t});\n\n\t// TODO maybe we can find a better way to export the MongoMemoryServer provider\n\t// currently we cannot specify the export otherwise because MikroOrmModuleSyncOptions doesn't provide an export option\n\tif (mikroOrmModule.imports && mikroOrmModule.imports.length > 0) {\n\t\tconst mikroOrmCoreModule = (await mikroOrmModule.imports[0]) as DynamicModule;\n\t\tmikroOrmCoreModule.exports ||= [];\n\t\tmikroOrmCoreModule.exports.push(MongoMemoryServer);\n\t}\n\n\treturn mikroOrmModule;\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/infra/mail/mail.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createRabbitMqModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (options: RabbitMqModuleOptions) => {\n\tconst rabbitMqModule = RabbitMQModule.forRoot(RabbitMQModule, {\n\t\texchanges: [\n\t\t\t{\n\t\t\t\tname: options.exchange,\n\t\t\t\ttype: 'direct',\n\t\t\t},\n\t\t],\n\t\turi: options.uri,\n\t});\n\treturn rabbitMqModule;\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/common/interceptor/test/create-test.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createTestModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (interceptor: NestInterceptor): Promise => {\n\treturn Test.createTestingModule({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\t\tuseValue: interceptor,\n\t\t\t},\n\t\t],\n\t\tcontrollers: [DelayController],\n\t}).compile();\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (ms: number) => new Promise((resolve) => setTimeout(resolve, ms))\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/domain/entity/course.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tcolor: '#ACACAC',\n\tname: 'Kurse',\n\tdescription: '',\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/domain/entity/dashboard.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n\n\n        \n    \n\n    apps/server/src/server.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultMikroOrmOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tfindOneOrFailHandler: (entityName: string, where: Dictionary | IPrimaryKey) => {\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\treturn new NotFoundException(`The requested ${entityName}: ${where} has not been found.`);\n\t},\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverModules\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n\tCoreModule,\n\tAuthModule,\n\tTaskModule,\n\tNewsModule,\n\tUserModule,\n\tImportUserModule,\n\tLearnroomModule,\n\tMailModule.forRoot({\n\t\turi: Configuration.get('RABBITMQ_URI') as string,\n\t\texchange: Configuration.get('MAIL_SEND_EXCHANGE') as string,\n\t\troutingKey: Configuration.get('MAIL_SEND_ROUTING_KEY') as string,\n\t}),\n\tFilesModule,\n\tRocketChatModule.forRoot({\n\t\turi: Configuration.get('ROCKET_CHAT_URI') as string,\n\t\tadminId: Configuration.get('ROCKET_CHAT_ADMIN_ID') as string,\n\t\tadminToken: Configuration.get('ROCKET_CHAT_ADMIN_TOKEN') as string,\n\t\tadminUser: Configuration.get('ROCKET_CHAT_ADMIN_USER') as string,\n\t\tadminPassword: Configuration.get('ROCKET_CHAT_ADMIN_PASSWORD') as string,\n\t}),\n]\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/file.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        directoryFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(Directory, ({ sequence }) => {\n\treturn {\n\t\tstorageFileName: `directory-${sequence}`,\n\t\tbucket: 'test-bucket',\n\t\tstorageProvider: storageProviderFactory.build(),\n\t\tcreator: userFactory.build(),\n\t};\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(File, ({ sequence }) => {\n\treturn {\n\t\tstorageFileName: `file-${sequence}`,\n\t\tbucket: 'test-bucket',\n\t\tstorageProvider: storageProviderFactory.build(),\n\t\tcreator: userFactory.build(),\n\t};\n})\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/repo/query/empty-result.query.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EmptyResultQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { $and: [{ _id: false }] }\n                    \n                \n\n            \n                \n                    When this query is added ($and) to an existing query,\nit should ensure an empty result\n\n                \n            \n\n        \n    \n\n    apps/server/src/console/test/bootstrap.console.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (bootstrap: BootstrapConsole, args: string[]): Promise => {\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tconst commandResponse = await bootstrap.boot([process.argv0, 'console', ...args]);\n\treturn Promise.resolve();\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/repo/dashboard/dashboard.repo.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        generateEmptyDashboard\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (userId: EntityId) => {\n\tconst gridArray: GridElementWithPosition[] = [];\n\n\tconst dashboard = new DashboardEntity(new ObjectId().toString(), { grid: gridArray, userId });\n\treturn dashboard;\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/authentication/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         JwtConstants\n\n                    \n                \n                \n                    \n                        Default value : {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : externalAuthConfig\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/lesson.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        lessonFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : LessonFactory.define(Lesson, ({ sequence, params }) => {\n\tlet course: Course;\n\tif (params.course) {\n\t\tcourse = params.course as Course;\n\t} else {\n\t\tcourse = courseFactory.build();\n\t}\n\n\treturn {\n\t\tname: `lesson #${sequence}`,\n\t\tcourse,\n\t};\n})\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/map-user-to-current-user.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mapUserToCurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (user: User): ICurrentUser =>\n\t({\n\t\tuserId: user.id,\n\t\troles: user.roles.getItems().map((r) => r.id),\n\t\tschoolId: user.school.id,\n\t\taccountId: new ObjectId().toHexString(),\n\t} as ICurrentUser)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NEWS_SOURCES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ['internal', 'rss'] as const\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TARGET_MODEL_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(NewsTargetModel)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/core/error/server-error-types.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NOT_FOUND_ERROR_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IErrorType\n\n                    \n                \n                \n                    \n                        Default value : {\n\ttype: 'NOT_FOUND_ERROR',\n\ttitle: 'Not Found',\n\tdefaultMessage: 'The requested ressource has not been found.',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverErrorTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : legacyErrorTypes\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : serverErrorTypes\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/common/interceptor/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REQUEST_TIMEOUT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Configuration.get('REQUEST_TIMEOUT') as number\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : config\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/role.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        roleFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(Role, ({ sequence }) => {\n\treturn {\n\t\tname: `role #${sequence}`,\n\t};\n})\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/school.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        schoolFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(School, ({ sequence }) => {\n\treturn { name: `school #${sequence}` };\n})\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/setup-entities.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setupEntities\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (): Promise => {\n\tconst orm = await MikroORM.init({ type: 'mongo', dbName: 'dummy', entities: ALL_ENTITIES });\n\treturn orm;\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/storageprovider.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        storageProviderFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(\n\tStorageProvider,\n\t() => {\n\t\treturn {\n\t\t\tendpointUrl: 'http://localhost',\n\t\t\taccessKeyId: 'accessKeyId',\n\t\t\tsecretAccessKey: 'secret',\n\t\t};\n\t}\n)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/submission.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        submissionFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SubmissionFactory.define(Submission, ({ sequence }) => {\n\treturn {\n\t\ttask: taskFactory.build(),\n\t\tstudent: userFactory.build(),\n\t\tcomment: `submission comment #${sequence}`,\n\t};\n})\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/news/controller/dto/create-news.params.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TARGET_MODEL_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(NewsTargetModel)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/news/controller/dto/news-filter.query.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TARGET_MODEL_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(NewsTargetModel)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/task.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        taskFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : TaskFactory.define(Task, ({ sequence }) => {\n\t// private is by default in constructor true, but in the most test cases we need private: false\n\treturn { name: `task #${sequence}`, private: false, availableDate: yesterday };\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        yesterday\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date(Date.now() - 86400000)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/team.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        teamFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(Team, ({ sequence }) => {\n\treturn {\n\t\tname: `team #${sequence}`,\n\t};\n})\n                    \n                \n\n\n        \n    \n\n    apps/server/src/config/database.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        usedGlobals\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GlobalConstants\n\n                    \n                \n                \n                    \n                        Default value : globals\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : usedGlobals\n                    \n                \n\n            \n                \n                    Database URL\n\n                \n            \n\n        \n    \n\n    apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : jwtWhitelist\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/infra/file-system/file-system.adapter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : fsp\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/user.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(User, ({ sequence }) => {\n\treturn {\n\t\tfirstName: 'John',\n\t\tlastName: `Doe ${sequence}`,\n\t\temail: `user-${sequence}@example.com`,\n\t\troles: [],\n\t\tschool: schoolFactory.build(),\n\t};\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application.html":{"url":"additional-documentation/nestjs-application.html","title":"additional-page - NestJS Application","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHPI Schul-Cloud NestJS server\nThis application extends the existing server-application based on feathers and express by introducing dependency injection supporting unit testing and modularization, the possibility to develop against interfaces, and start implementation of modules using TypeScript.\nYou find the whole documentation published as GitHub Page\nRequirements\n\nNode.js (see .nvmrc for version)\nMongoDB (4.x)\nRabbitMQ (configure using RABBITMQ_URL, see default.schema.json)\n\npreconditions\n\nHave a MongoDB started, run mongod \nHave some seed data in datase, use npm run setup to reset the db and apply seed data\nHave RabbitMQ started, run docker run -d -p 5672:5672 -p 15672:15672 --name rabbitmq rabbitmq:3.8.9-management. This starts RabbitMQ on port 5672 and a web admin console at localhost:15672 (use guest:guest to login).\n\nHow to start the application\nBeside existing scripts, for the nestJS application the following scripts have been added. Try not changing the scripts as they should match what NestJS defines by default. Execute npm run ...\n\nnest:prebuild remove existing data from previous build\nnest:build compile the applications typescript ressources from apps/server to dist folder, keeps legacy js-code where it is\nnest:build:all currently executes nest:build, could additionaly build static assets\nnest:start starts the nest application on localhost:3030\nnest:start:dev run application without build from sources in dev-mode with hot-reload\nnest:start:debug run application in dev-mode with hot-reload and debug port opened on port :9229\nnest:start:prod start applicaiton in production mode, requires nest:build to be executed beforehand\n\nHow to build and serve the documentation\n\nnest:docs:build builds code documentation and module relations into /documentation folder\nnest:docs:serve builds code documentation and module relations into /documentation folder and serves it on port :8080 with hot reload on changes\n\nHow to start the server console\nThe console offers management capabilities of the application.\n\nnest:console after nest:build in production or\nnest:console:dev for development\n\nTo run a specific command run npm run nest:console:dev -- command . The --is required for npm to send params to the console. Use --helpto get an overview about existing commands.\nHow to test the nest-application with jest\n NestJS must not use _.test.[ts|js] as filename but instead either *.spec.ts for unit-tests beside tested files or *.e2e-spec.ts in test folder for end-to-end tests. This ensures legacy/feathers/mocha tests can be separated from jest test suites.\nThe application must pass the following statement which executes separate checks:\n\nnest:test executes all jest (NestJS) tests with coverage and eslint\n\nTo test a subset, use\n\nnest:test:all execute unit and e2e tests \n\nnest:test:e2e execute e2e tests only\n\nnest:test:spec execute unit tests (without e2e) only\n\nnest:test:cov executes all jest tests with coverage check\n\nnest:test:watch executes changed tests again on save\n\nnest:test:debug executes tests with debugging\n\nnest:lint run eslint to report linter issues and apply formatting\n\nnest:lint:fix run eslint to report and auto-fix fixable linter issues and apply formatting\n\n\nQuality gates\nWith coverage on tests and static code analysis we ensure some quality gates which are all handled by running nest:test:\n\nESLint with prettier ensures formatting and static code analysis to pass, see .eslintrc.js for details.\nTests ensure functional requirements via unit & e2e tests.\nCoverage on tests ensures a coverage of 80% on NestJS code, see jest.config.ts for details.\n\nGates are part of pull request checks.\nOpenAPI documentation\nThe NestJS applicaiton serves a documentation at :3030/v3/docs. The JSON-representation can be found at /v3/docs-json to be used for generating a client application.\nLegacy/feathers Swagger UI documentation when running the server locally, it is served at :3030/docs/.\nLegacy (feathers) testing with mocha\n\nnpm run test\nTo run a single test, use npm run mocha-single -- .\n\nHow to get full documentation\nThe documentation is provided by compodoc, run npm run nest:docs:serve, check generated compodoc features, custom information can be found in additional information section. Your console will tell you, where it is served.\nThe updated documentation is published as GitHub Page\nContent\nFor further reading, browse apps/server/doc.\nNestJS CLI\nTo use the NestJS CLI, install the nest cli globally.\n$ npm i -g @nestjs/cliThen you may use features like nest g service foo within of /apps/server/src.\nDebugging\nThere are launch configurations available for VSCode in .vscode/launch.default.json\nTech Stack\nFeel free to find related documentation:\n\nhttps://nestjs.com/\nhttps://jestjs.io/\nhttps://mikro-orm.io/\nhttps://min.io/\nhttps://www.rabbitmq.com/\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/software-architecture.html":{"url":"additional-documentation/nestjs-application/software-architecture.html","title":"additional-page - Software Architecture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSoftware Architecture\nGoals\nOur architecture aims to achieve the following goals:\n\ndecouple the business logic from any protocol, framework or technology specific code\nmakes business code easier to understand and test\nmakes code easier to maintain and change\n\n\nDefine standard solutions for cross-cutting-concerns and implement them once, for example:\nerror handling\nlogging\ntransaction handling\nAPI documentation and validation\n\n\n\nPrinciples\nOur architecture is based on the following principles:\n\nComponent Oriented DesignWe follow a strictly component oriented design to address the following sub-principles:\nSeparation of Concerns\nReusability and avoiding redundant code\nInformation Hiding via component API and its exchangeable implementation treated as secret.\nDesign by Contract for self-contained, descriptive, and stable component APIs.\nLayering as well as separation of business logic from technical code for better maintenance.\nData Sovereignty (and high cohesion with low coupling) says that a component is responsible for its data and changes to this data shall only happen via the component. Otherwise maintenance problems will arise to ensure that data remains consistent. Therefore interfaces of a component that may be used by other components are designed call-by-value and not call-by-reference.\n\n\nHomogeneitySolve similar problems in similar ways and establish a uniform code-style.\n\nOverview\nThe following figure shows the general architecture approach for the HPI-Schul-Cloud. It contains two different architecture categories (business architecture and technical architecture), which are described in more detail bellow.\n\nBusiness Architecture\nThe business architecture divides the application into business components. A business component has a well-defined responsibility that it encapsulates. All aspects related to that responsibility have to be implemented within that business component. Further the business architecture defines the dependencies between the business components. These dependencies need to be free of cycles. A business component exports his functionality via well-defined interfaces as a self-contained API. A business component may use another business component via its API and compliant with the dependencies defined by the business architecture.\nThe business components in the architecture should be the output of the business architecture created and managed by the product owner and it must stay aligned with the implementation to provide actual value. If their components are hard to implement (e.g. because technically, there is a very high cohesion between two components), the business component model should be changed. The business architecture has a very high impact on the solution and should therefore (especially in a agile environment) be the result of a mix team (business and development).\nThe application might contain components, which are not part of the business architecture, but have a technical background (e.g. a complex adapter component used to connect to an external system).\nTechnical Architecture\nThe technical architecture **divides the application into technical ****layers** based on the multilayered architecture. A layer is a unit of code with the same category such as service or presentation logic. A layer is therefore often supported by a technical framework. Each business component can therefore be split into *component parts* for each layer.\nComponents\nFollowing separation-of-concerns we divide an application into components using our folder-conventions and the architecture-mapping (see Architecture Mapping to Code). Components must use the UseCase-Facade of other components to communicate with them. Never access any other code from a different component directly.\nFor the HPI Schul-Cloud, we have two major types of components\nBusiness Components\nThese usually manage one or more entities and provide the related business logic to other components and external systems.\nAdapter Components\nAdapter components encapsulate interactions with external systems:\n\nrequests to an external system like a chat system, microservices etc.\nrequests from external systems, but only if:\nthe external system needs a specific API (e.g. a public standard for user/class management)\nthere are other (non-)functional requirements, which make it reasonable to encapsulate the interface into its own component, for example:\na reporting API, which aggregates data of multiple components\nAPIs, which have different security requirements\n\n\nOtherwise, the standard API provided by business components should be used\n\n\n\nHow to use Components\nCommunication between components\nIf component B needs anything from component A, it must always access it using the UseCase Facade of A. The general rules are:\n\nOnly the logic exposed in the UseCase facade can be invoked by other components. All other logic must not be called directly. This provides a clean and defined interface, which can be tested and validated.\n\naccessing the datalayer directly would heavily impact maintainability and encapsulation\naccessing the service layer makes no sense because it contains protocol specific aspects and overhead, which is not relevant within the application\n\n\nIn some cases, it is reasonable for the service layer of component B to call the UseCase facade of component A directly\n\nfor example if component B has no business logic (like a simple adapter component)\nIn any other situation, you should only put it into the business logic\n\n\n\n\n\n\nProvide dedicated APIs for external systems\nIf external applications can't use the default REST API of the system (e.g. because they expect application specific endpoints), those endpoints are provided as a separate component. For example, if an external MyLearningApp Application want's to connect to the HPI Schul-Cloud, create a new component called \"MyLearningAppAdapter\", which maps the external requests from the app to the internal datamodel and calls the use-case facade. Additional Hints:\n\nDo not access the Service Layer, the Data-Access Layer or the actual data in the database of the target component from this adapter component. Only access the UseCase-Facade. By doing this, we ensure that there are no side-effects introduced and the logic layer has full control over the business logic/rules.\nThe adapter component can contain it's own logic layer, if there is actual logic related to providing the interface (e.g more complex mapping and validation rules).\nThe adapter component can also contain a data-access layer, which for example caches data for the responses, contains mapping rules or buffers data from requests for processing.\nDo not use any relations, constraints or other dependencies onto the target component(s) on database level and do not query the data directly. Always use the UseCase Facade\n\n\nAn adapter component can contain multiple endpoints (e.g. for users, courses and classes) and the adapter is allowed to access multiple business components (e.g. to retrieve data from users, courses and classes).\n\n The figure above shows the generic setup. As stated above, the adapter component can access additional components\nAccessing an external API / System\nUsually, access to an external system should be encapsulated in it's own component. This adapter component is responsible for the mapping between the internal and external datamodel and all the protocol and system specific logic. The guidelines are:\n\nIn many cases, external system specific logic is encapsulated in it's own adapter component\nThe component should have an abstract name, e.g. instead of \"RocketChatAdapter\", it should be \"ChatAdapter\". That way, we reduce the amount of changes in the code, if we replace the system.\n\n\nThere are cases, in which the client to an external system could be part of a business component. Thats allowed, if the following conditons are true:\nIt will not be reused/called directly by other components. All calls must go through this business components usecase facade and obviously, the logic must fit into the components responsibility.\nit's very simple or tightly related to an entity managed by the business component, e.g.\nif course content is not stored in a database but in a third party LMS. In that case, the external system is the actual \"repository\" of the data and the client for it belongs in the dataaccess layer\na component managing addresses could contain a client which calls an external application to validate addresses.\n\n\n\n\nan adapter component provides a business interface (use case oriented)\nadapter components can provide their own REST API / service layer, but don't have to\nprovided APIs should also be business oriented and not system specific\n\n\nthe actual client and protocol logic (rest client, etc.) is located in the dataaccess layer\nAn adapter component can contain multiple clients for different services (e.g. rocketchat and matrixchat)\nIf a framework encapsulates the protocol specific logic enough, the framework can be used as \"dataaccess layer\"\n\n\nThe dataaccess layer can also contain entites and db repositories. This might be the case if the adapter component caches or buffers data or needs to manage mapping master data/rules\nthe logic layer is usually rather empty and contains only mapping and data-enrichment logic\nIt can also contain logic to determine the correct dataaccess-layer-client (e.g. if bundesland=x, use rocketchat, otherwise use matrix chat)\n\n\n\nScenarios:\nWith Adapter Component\n\nWith Business Component\n\nAccess Legacy Code\nIf you need to access legacy code (not yet migrated to the new architecture), you can do it from the logic layer (preferred) or the service layer (if there is no logic layer or it is only needed for service-layer-mapping)\n\nExtract Component into external system (Microservice)\nThe component approach not only increases the maintainability and test-ability by a large amount, it also allows to extract components into separate applications without large refactorings. The components are already decoupled and the required functionality in the UseCase Facade can be pulled up into the REST-API.\n\nLayers\nUI Layer\nThe UI layer is implemented as single-page-application using the https://nuxtjs.org/ framework, which wraps the https://vuejs.org/ framework. It should contain only logic related to:\n\npresentation\nsimple form validation\nlocalization\n\nThe client architecture uses an atomic design approach. For details, please check the client-architecture documentation.\nService Layer\nThe service layer is responsible for exposing functionality made available by the logical layer to **external consumers **over a network via technical protocols. By doing this, it decouples the logic layer completely from any protocols or frameworks used to provide logic to the outside world. The service layer can actually contain multiple services for all kinds of protocols (e.g. REST, Sockets, Kafka Messages and so on), which all map protocol specific requests to the protocol-independent logic layer.\nThe service layer in the project uses the feathers/express framework to expose RESTful/socket APIs to the legacy client and NUXT client as well as any other authorized consumer.\nThe layer ensures that the API specification contract is fulfilled, but also handles a large set of cross-cutting-concerns. Its most important tasks are:\n\nEnsure authentication, authorization ((Student-,Teacher-,Admin-)Role/Permissions only)\nRequest/Response validation against the API specification\nMapping form the internal data model to the external view (e.g. remove security critical information, technical keys etc.)\nProvide old versions of an API and map to the new business logic (this is not always possible in the service layer)\nGlobal error handling i.e. translates Application Exception into protocol specific errors\nCapture trace-information (e.g. request-id, user) and provide them to the application for logging\ncollect monitoring information (e.g. number of requests, response times, error rates etc)\nRequest/response/error logging\n\nCross-cutting-concerns are actually shared across all components (hence the name), but many of them are hooked (aspect oriented programming) around the services in the service-layer und some need a service-specific configuration. For example, a hook, which does role based authorization, is implemented only once and wraps all services. But it needs to know which roles must be checked for specific services and service operations.\nLogic Layer\nThe logic layer is the heart of the application and contains the main business logic. According to our business architecture we divide an application into components, which contains use-cases. Each component provides a usecase facade, which can be used to trigger the business logic for a use case from either:\n\nthe service layer\nfrom another component.\n\nThe logic layer is responsible for the implementation of the business logic according to the specified functional demands and requirements. It therefore creates the actual value of the application. The following additional aspects are also in its responsibility:\n\nValidation based on business rules. For example:\nParents must provide their consent for students bellow 16 years of age\n\n\nAuthorization and data access rights (scope or user specific permission), for example:\nA teacher are not allowed to see courses or students from other schools\n\n\nChoreography: In general, only the logic layer is allowed to call other components or trigger a call to an external system. Exceptions are possible (e.g. if a component has no business logic and therefore no logic layer)\n\nThe service layer must be free from protocol or database specific code and does not make assumptions about which protocol or client called it or where the data is stored. For example:\n\nthe die business layer must not access any HTTP-request parameters or headers directly. It has a defined interface which contains the data independently from the caller.\nit does not throw HTTP specific errors like 404 NotFound. Instead it throws an application specific error, which is mapped to 404 by the general REST API ErrorHandler\nIt does not create SQL or mongoDB queries. Instead it calls a defined interface and the dataaccess layer transform the input parameters into a DB specific query.\n\nUsing this approach, the business layer, which contains the actual logic, is much easier to test, understand and change. For example, it is possible to write xUnit Tests with no dependencies to DBs or protocols.\nDataaccess Layer\nThe data-access layer is responsible for all outgoing connections to access and process data. This is mainly about accessing data from a persistent data-store but also about invoking external services. It provides a more or less business oriented interface - e.g. findUser(userId)- and translates it into an database or database-framework specific query. No matter which database, database framework or protocol-client you use, the interface of the dataaccess layer should be neutral. That means that your interface must also provide parameters for pagination etc.\nThis approach brings a couple of benefits:\n\nSeparation of Concerns: encapsulates DB queries/requests to external services and allows for testing it separately\nIntroduces an abstraction over DB/protocol Connector/framework\nSeparates DB-specific Query Language and Application Specific Search Criteria\nIncreases security level - the DB is not exposed via Rest API, minimizes chance for Non-SQL/SQL-Injections\n\nBatch Layer\nThe batch layer is basically a service layer, which contains code related to batch processing (bulk-oriented, non-interactive, typically long running execution of tasks). For simplicity the term batch or batch job is used for such tasks in the project.\nThe batch layer is responsible for batch processes, whereas the business logic is implemented in the logic layer. Compared to the service layer you may understand the batch layer just as a different way of accessing the business logic. Batches should invoke use cases in the logic layer for doing their work. Only \"batch specific\" technical aspects should be implemented in the batch layer. Example: For a batch, which imports user data from a CSV file, this means that all code for actually reading and parsing the CSV input file is implemented in the batch layer. The batch calls the use case \"create user\" in the logic layer for actually creating the users for each line read from the CSV input file.\nIn practice it is not always appropriate to create use cases in the logic layer for every bit of work a batch should do. Instead, the data access layer can be used directly. An example for that is a typical batch for data retention which deletes out-of-time data. Often deleting out-dated data is done by invoking a single SQL statement. It is appropriate to implement that SQL in a Repository method (provided by the dataaccess layer interface) and call this method directly from the batch. But be careful that this pattern is a simplification which could lead to business logic cluttered in different layers which reduces maintainability of the application. It is a typical design decision you have to take when designing your specific batches.\nCross Cutting Concerns\n\nError Handling\nAn important part of the layered architecture is the handling of errors. In our architecture, errors should either be:\n\nhandled directly (e.g. retry a failed REST-API-Call after a timeout error occurred)\nBubble up un-catched to the generic error handler in the cross cutting concerns layer (which , which knows how to map this error to an external error and return it to the caller.\nIn case of batch jobs, the batch layer catches the error and knows how to handle it (e.g. restart a job, skip a part of the job, stop the job completely etc).\n\n\n\nPlease check the error handling guidelines for details.\nTransaction Handling\nTransactions can span multiple layers and components. A concept is necessary to execute/rollback those transactions.\nTODO: add a link to the concept and describe how it interacts with layers.\nRequest Context\nMultiple crosscutting concerns make it necessary to introduce a \"request context\". This is a set of request specific variables accessible everywhere within the application during a request. For example:\n\neach request will contain a request-specific trace id, which must be added to log messages and audit log entries\neach request is triggered by a user or a batch job. We need to store this trigger in the audit logs\nif we introduce transactions across multiple components (e.g. users and classes), we need a way to share transaction information between components and store the transaction until a commit\n\nBecause this context is required in all layers (especially in the data access layer for audit logging) and in cross cutting hooks, we need a framework/feature, which makes this available for direct access without adding this object to every method signature as input variable. Luckily, the necessary functionality is now part of nodejs: AsyncLocalStorage.\nThe general approach for rest requests:\n\nA request is received\nA hook initializes the request context\nA hook extracts trace information (e.g. traceid and spanid) from the request and adds it to the request context\nA hook authenticates and authorizes the user and stores basic user information (e.g. user id, maybe general permissions roles) in the request context\nIf the user is not authenticated, a \"guest user\" is set in the content with only guest permissions\nFor batch jobs, a technial user must be set in the request context. For the business logic, the technology, channel and user must be hidden behind the request context.\n\n\nThe normal code is executed and can access the request context\nIf the business logic needs data from the request context, it can access it\ncross cutting logic like audit logging can extract the information. E.g. before the data access layer writes a entity change to the database, it retrieves the trace id and the user id from the request context and adds these information to the entity\nIf we make a call to another service (e.g. calendar), we retrieve the trace id from the request context and add it to the outgoing request\nOur logging abstraction retrieves the trace id from the request context and adds it to the log message before writing it to the logfile (actually the console).\n\n\nAfter the response is sent to the client, the request context is \"destroyed\"\n\nCharacteristics of the context:\n\nIt is request specific and destroyed after the request is processed\nData in it are only accessable by the processing o f a specific request, not any other request of the same user or another user!\nIt should only contain very basic information necessary for cross cutting concerns like logging and audit logging. Do not use it to transport all kinds of business data around\n\nImportant: In order to make the code (and especially the business logic) agnostic to the source of a request, the request context should be considered a \"invocation context\". That means that also batch jobs (time based triggerd requests) and anonymous rest request should work the exact same way. That means that:\n\nwe must setup the request context for batch jobs\nwe need technical users for anonymous requests and batch jobs\nsuper users (super heroes) must use the same mechanisms as normal users (no special permission checks etc)\n\nThat way, we can use the same logic for all invocations and the source of an invocation is isolated within the service layer.\nLogging and Tracing\nFor details see the corresponding logging and tracing guidelines.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{"url":"additional-documentation/nestjs-application/architecture-mapping-to-code.html","title":"additional-page - Architecture Mapping to Code","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nArchitecture mapping to Code\nConventions\nFile structure\nThe server app located in /apps/server is structured like. Beside each ts-file, a test file _.spec.ts has to be added for unit tests (hidden for simplification). Use index.ts files that combine a folders content and export all files from within of the folder using export _ from './file' where this makes sense. When there are naming conflicts, use more specific names and correct concepts. Think about not to create sub-folders, when only one concept exist.\nsrc/ // sourcecode & unit tests\n    - config/  // for global definitions\n    - modules/ // for your NestJS modules\n        - [module] // where [module] could be like user, homework, school\n            - entity/\n                - .entity.ts // (where  might be a user, news, ... owned by the module) exports entity class & document type\n                - .entity.ts // where related-info is a partial of another entity used in the entity above\n                - index.ts // exports all entities\n            - controller/ // where controllers define the api\n                - dto/ // dto's define api in/out types as a class with annotations\n                    - [param|query].ts // (like create-user-param.ts or pagination.query)\n                    - [response].ts // (like create-user-response.ts)\n                    - index.ts // exports all dto's\n                - .controller.ts // defines rest api, references main service file\n                - .controller.ts // think about a new module when require multiple controllers :)\n            - repo/ // repositories take care to load/persist/... entities\n                - schema/ // contains schema imports from legacy app or new definitions (might be replaced by OR mapper)\n                    - .schema.ts // exports (legacy-) mongoose schemas\n                - .repo.ts // where entity might be user, news, school\n            - service/ // for technical dependencies (libraries, infrastructure layer concerns)\n                - .service.ts // the modules main service file, might be exported for other modules\n                - .service.ts // use services not for features\n            - mapper/\n                - .mapper.ts // mapper for a domain entity, should contain mapDomainToResponse and mapFooToDomain\n            - uc/ // preferred for features\n                - .uc.ts // one file per single use case (use a long name)\n            - .module.ts // DI instructions to build the module\n    - shared/ // reused stuff without module ownership\n        - core/ // shared concepts (decorators, pipes, guards, errors, ...) folders might be added\n        - domain // (abstract) domain base entities which will be extended in the modules\n        - util/ // helpers, tools, utils can be located here (but find a better name)\ntest/ // e2e tests against controllers should use same folder names like controllers\nFor concepts (see https://docs.nestjs.com/first-steps) of NestJS put implementations in shared/core. You might use shared/utils for own solutions, assume TextUtils but when it contains text validators, move it better to shared/validators/text.validator.ts before merge. The core concepts of NestJS can be extended with ours (like repo).\nFile naming conventions\nIn TypeScript files: for Classes we use PascalCase (names start with uppercase letter), variables use lowercase for the first letter camelCase.\nWhen assigning names, they may end with a concept name:\n\nA Concept might be a known term which is widely used. Samples from NestJS: Controller, Provider, Module, Middleware, Exception, Pipe, Guard, Interceptor.\n\nBeside we have own concepts like comparator, validator (generic ones should not be part of a modules (and located in shared folder btw) or repo, use-case which might be owned by a module.\n\n\nIn file names, we use lowercase and minus in the beginning and end with ..ts\nSamples\n\n\n\nFile name\nClass name\nConcept\nLocation\n\n\n\n\nlogin-user.uc.ts\nLoginUserUc\nuse case\nmodule/uc\n\n\ntext.validator.ts\nTextValidator\nvalidator\nshared/validators\n\n\nuser.repo.ts\nUserRepo\nrepository\nmodule/repo\n\n\nparse-object-id.pipe.ts\nParseObjectIdPipe\npipe\nshared/pipes\n\n\n\nComponents\nComponents are defined as NestJS Modules. \nCommunication between components\nTo access other modules services, it can be injected anywhere. The usage is allowed only, when the module which owns that service has exported it in the modules definition.\n// modules/feathers/feathers-service.provider.ts\n// modules/feathers/feathers.module.ts\n@Module({\n    providers: [FeathersServiceProvider],\n    exports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\nThe feathers module is used to handle how the application is using legacy services, when access them, inject the FeathersServiceProvider but in your module definition, import the FeathersModule.\n// your module, here modules/authorization/authorization.module.ts\n@Module({\n    imports: [FeathersModule], // here import the services module\n    // providers: [AuthorizationService, FeathersAuthProvider],\n    // exports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n// inside of your service, here feathers-auth.provider.ts\n@Injectable()\nexport class FeathersAuthProvider {\n\n    // inject the service in constructor\n    constructor(private feathersServiceProvider: FeathersServiceProvider) {}\n    \n    // ...\n\n    async getUserTargetPermissions(\n        // ...\n    ): Promise {\n        const service = this.feathersServiceProvider.getService(`path`);\n        const result = await service.get(...)\n        // ...\n        return result;\n    }\nAccess legacy Code\nUse the feathers module introduced above to get access to legacy services.\nIt is important to introduce strong typing like it happened above in the FeathersAuthProvider. While the FeathersServiceProvider from the feathers module, has only an abstract implementation for all services, add a concrete service inside your module for a specific feathers-service, like above in FeathersAuthProvider.\nLayered Architecture\nThe different layers use separately defined objects that must be mapped when crossing layers.\n\nNever export entities through the service layer without DTO-mapping which is defined in the controller\nConcepts owned by a layer must not be shared with other layers\n\n\nFurther reading: https://khalilstemmler.com/articles/software-design-architecture/organizing-app-logic/\nService Layer\nA modules service layer is defined within of controllers.\nThe main responsibilities of a controller is to define the REST API interface as openAPI specification and map DTO's to match the logic layers interfaces.\n    @Post()\n    async create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n        const news = await this.newsUc.create(\n            currentUser.userId,\n            currentUser.schoolId,\n            NewsMapper.mapCreateNewsToDomain(params)\n        );\n        const dto = NewsMapper.mapToResponse(news);\n        return dto;\n    }JWT-Authentication\nFor authentication, use guards like JwtAuthGuard. It can be applied to a whole controller or a single controller method only. Then, ICurrentUser can be injected using the @CurrentUser() decorator.\nValidation\nGlobal settings of the core-module ensure request/response validation against the api definition. Simple input types might additionally use a custom pipe while for complex types injected as query/body are validated by default when parsed as DTO class.\nFile naming\nComplex input DTOs are defined like [create-news].param.ts (class-name: CreateNewsParam) or [pagination].query.ts (class-name: PaginationQuery)\nWhen DTO's are shared between multiple modules, locate them in the layer-related shared folder.\n\nSecurity: When exporting data, internal entities must be mapped to a response DTO class named like [news].response.dto. The mapping ensures which data of internal entities are exported.\n\nopenAPI specification\nDefining the request/response DTOs in a controller will define the openAPI specification automatically. Additional validation rules and openAPI definitions can be added using decorators. For simplification, openAPI decorators should define a type and if a property is required, while additional decorators can be used from class-validator to validate content.\nMapping\nIt is forbidden, to directly pass a DTO to a use-case or return an Entity (or other use-case result) via REST. In-between a mapper must transform the given data, to protect the logic layer from outside implications.\nThe use of a mapper gives us the guarantee, that\n\nno additional data beside the known properties is published.\nA plain object might contain more properties than defined in TS-interfaces.\nSample: All school properties are published while only name & id are intended to be published.\n\n\nthe API definition is complete\n\nLogic (Domain-) Layer\nThe domain layer assumes a kind of higher-level policy that everything else relies on (Source).\n\nThis means, a controller or a repository must fit this layer.\nSpecific goals of a repository, like query optimization must not be a transparent part of the repository only.\n\nData access Layer\nThe data access layer consists of repositories. A repository takes care to persist domain entities defined in the business layer. As we use decorators in entities to define how they are persisted, they are used in this layer too. The repository does not need to map entities like in the presentation layer as it maps data from/to an external system into the domain and to be used from/in the business layer.\n\nIt's not the task of the business layer to fit a repository. A respository should give the logic layer the ability to persist/make available what is defined in the logic layer. The domain model must be independent from a repository (See Clean Architecture).\n\nSpecific concepts from within of this layer must be hidden for the business layer like database queries, protocol specifics, mapping to data layer. Others like putting multiple persistence rules into transactions is part of the domain layer (while how a transaction is implemented, then is part of the data access layer).\nLogic should not be part of a repository, use logic layer instead.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/domain-driven-design.html":{"url":"additional-documentation/nestjs-application/domain-driven-design.html","title":"additional-page - Domain driven design","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDomain driven design\nWhile DDD is not enforced, we still try to follow its goals:\n\nDiscover the domain model by interacting with domain experts and agreeing upon a common set of terms to refer to processes, actors and any other phenomenon that occurs in the domain.\nTake those newly discovered terms and embed them in the code, creating a rich domain model that reflects the actual living, breathing business and it's rules.\nProtect that domain model from all the other technical intricacies involved in creating a web application.\n\nClean Architecture\n \"The Clean Architecture from the golden Uncle Bob archives\"\nFor the 3-layer architecture this means we have to protect the business layer and domain models from the outside world and infrastructure to keep it clean, fast, testable, ready for changes.\nConcepts\nEntities\nNestJS does not cover how to persist entities, the heart of our application. We need a solution that not only transfers data like mongoose, instead we want to define business rules on objects with strong typing added.\nInstead of Interface, Model and Schema which describe the view on data, now we define Entities, that get a DRY possibility to be created, loaded, and persisted using en entity manager. The definition of how an entity relates with others or how it is persisted can be added using decorators.\nSee https://github.com/mikro-orm/mikro-orm#-core-features for further details.\nDomain Services\nDomain Services are most often executed by application layer Application Services / Use Cases. Because Domain Services are a part of the Domain Layer and adhere to the dependency rule, Domain Services aren't allowed to depend on infrastructure layer concerns like Repositories to get access to the domain entities that they interact with. Application Services fetch the necessary entities, then pass them to domain services to run allow them to interact.\nSample: Within of a use case we not depend on a user context from outside while for logging, error handling or in a repository it might be used. Like we see in the clean architecture schema.\nUse Cases\nBeside Concepts NestJS introduces, own services like repositories or use-cases might be created.\nUse cases either return entities (data) to the user through a query (CRUD) or apply a command (do ... ok/err).\nFurther reading: https://khalilstemmler.com/articles/oop-design-principles/command-query-separation/\nThey focus on providing business use cases and should only contain higher logical function calls, that are well-tested and hide their implementation inside of a use-case.\n    /**\n     * Let an existing user create a new user (on same school).\n     * @throws: USER_ALREADY_EXISTS, API_VALIDATION_ERROR\n     * @throws: FORBIDDEN, BAD_REQUEST, INTERNAL_SERVER_ERROR, ...\n     */\n    async registerNewUser(creatorId: EntityId, schoolId: EntityId, props: INewUserProps): Promise {\n        this.logger.log(`create new user called by ${creatorId}`);\n\n        // check creator has permission in school to create user\n        await this.authorizationService.checkEntityPermissions(creatorId, School, schoolId, ['USER_CREATE']);\n\n        // check user not exists\n        await this.userService.checkUserNotExistByEmail(props.email)\n\n        const user = new User(props);\n        await this.userRepo.save(user);\n\n        if(enableUserActivation){\n            // call other service which creates pin and sends email\n        }\n\n        if(sendWelcomeEmailToUser){\n            await this.userEmailService.sendWelcomeMessage(user);\n        }\n\n        this.logger.log(`user ${user.id} created by user ${creatorId}`);\n\n        return user;\n    }\n\n\n    // ... userService\n\n    checkUserNotExistByEmail(email: string){\n        // todo email is not empty\n        const existingUser = await this.userRepo.findByEmail(props.email);\n        if(existingUser.length > 0) {\n            throw new UserAlreadyExistError();\n        }\n    }How to structure a use case? When creating a use case, care of\n\nthe general business goal\npreconditions\nactors, in-put & out-put data\npost conditions to be well-known\nthe normal case (step by step)\nall (handled) exception-cases (to be handled in a client application)\n\nClean Code principles\nA use case should consist only of business-rules and decisions (functional requirements), while the final implementation is part of functions that are called from the use case. There, we no more see any details about the functional requirements.\nDomain events\nEvents have to be handled very carefully or in best case not to be used. Like hooks around services might lead into separating the business logic into independend untestable workflows, the events task and data must be defined clearly and should only be used for independent tasks.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{"url":"additional-documentation/nestjs-application/cross-cutting-concerns.html","title":"additional-page - Cross-cutting concerns","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCross cutting concerns\nThe cross cutting topics are implemented within of the core-module. \nLogging\nFor logging use the logger ServerLogger, provided by the logger module. It is hooked up in the application on startup, replacing the default logger and can be transient injected into any provider by additionally define set a context into the logger.\n// add Logger module to your feature module imports or unit tests\nimport { LoggerModule } from '@src/core/logger';\n// ...\nimports: [LoggerModule],\n// within of a provider (use-case, service, ...)\n\n// import the server logger service\nimport { ServerLogger } from '@src/core/logger';\n\n@Injectable()\nexport class YourUc {\n    constructor(\n        // initialize a ServerLogger\n        private logger: ServerLogger\n    ) {\n        // set the context by this class name (here: 'YourUc')\n        this.logger.setContext(YourUc.name);\n    }\n\n    async sampleUcMethod(params) {\n        this.logger.log(`start do something...`);\n        // ...\n        this.logger.log(`finished successfully to do something...`);\n    }This produces a logging output like\n[Nest] NUMBER - TIME   [YourUc] start do something...\n[Nest] NUMBER - TIME   [YourUc] finished successfully to do something...Later we can filter the log for a single [context].\nA logger does implement the LoggerService interface:\ninterface LoggerService {\n    log(message: any, context?: string): any;\n    error(message: any, trace?: string, context?: string): any;\n    warn(message: any, context?: string): any;\n    debug?(message: any, context?: string): any;\n    verbose?(message: any, context?: string): any;\n}Only a string should be provided as a single parameter by default. Ensure not putting complex objects into a log. Think about persisting more complex results for later analysis into a database.\nOptionally in the second parameter, the context can be overridden only.\nException Handling\n\nWe separate our business exceptions from technical exceptions. While for technical exceptions, we use the predefined HTTPExceptions from NestJS, business exceptions inherit from abstract BusinessException.\nBy default, implementations of BusinessException must define\n    code: 500\n    type: \"CUSTOM_ERROR_TYPE\",\n    title: \"Custom Error Type\",\n    message: \"Human readable details\",\n    // additional: optionalDataThere is a GlobalErrorFilter provided to handle exceptions, which cares about the response format of exceptions and logging. It overrides the default NestJS APP_FILTER in the core/error-module.\nIn client applications, for technical errors, evaluate the http-error-code, then for business exceptions, the type can be used as identifier and additional data can be evaluated.\nFor business errors we use 409/conflict as default to clearly have all business errors with one error code identified.\n\nSample: For API validation errors, 409/Bad Request will be extended with validationError: ValidationError[{ field: string, error: string }] and a custom type API_VALIDATION_ERROR.\n\nPipes can be used as input validation. To get errors reported in the correct format, they can define a custom exception factory when they should produce api validation error or other exceptions, handled by clients.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/testing.html":{"url":"additional-documentation/nestjs-application/testing.html","title":"additional-page - Testing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTesting\nAutomated testing is the essential part of the software development process.\nIt improves the code quality and ensure that the code operates correctly especially after refactoring.\nThe Different Tests\n\n\nOur goal is to test each application layer mostly independent of others.\n\nRepo tests operate on data access layer.\nThey prove that the database queries are executed correctly.\nUse case tests operate on logic layer.\nThey verify the correct implementation of the business requirements.\nMapper tests operate between logic and service layer.\nThey verify the correct mapping between domain objects and objects delivered to the clients via REST API.\nEnd-to-end tests operate on all layers of the application.\nThe testing endpoint is the service layer. These tests verify the availability of the expected endpoints and checks\nthe expected status codes and the structure of the received objects.\n\nGeneral Test Conventions\nLean Tests\nThe tests should be as simple to read and understand as possible. They should be effortless to write and change, in order to not slow down development. Wherever possible:\n\navoid complex logic\ncover only one case per test\nonly use clearly named and widely used helper functions\nstick to blackbox testing: think about the unit from the outside, not its inner workings.\nits okay to duplicate code for each test\n\nNaming Convention\nWhen a test fails, the name of the test is the first hint to the developer (or any other person) to what went wrong where. (along with the \"describe\" blocks the test is in).\nThus, your describe structure and testcase names should be designed to enable a person unfamiliar with the code to identify the problem as fast as possible. It should tell him:\n\nwhat component is being tested\nunder what condition\nthe expected outcome\n\nTo facilitate this, your tests should be wrapped in at least two describe levels.\n// Name of the unit under test\ndescribe(\"Course Service\", (() => {\n    // a \"when...\" sentence\n    describe(\"When a student tries to create a course\", (() => {\n        // a \"should...\" sentence\n        it(\"should fail\", async () => {\n            ...\n        });\n    });\n});Isolation\nEach test should be able to run alone, as well as together with any other tests. To ensure this, it is important that the test does not depend on any preexisting data.\n\nEach test should generate the data it needs, and ensure that its data is deleted afterwards. (this is usually done via mocha's \"afterEach\" function.\nWhen you create objects with fields that have to be globally unique, like the account username, you must ensure the name you choose is unique. This can be done by including a timestamp.\nNever use seeddata.\n\nTest Structure\nYour test should be structured in three seperate areas, each distinguished by at least an empty line:\n\nArrange - set up your testdata\nAct - call the function you want to test\nAssert - check the result\n\nthis is known as the AAA-pattern.\nTesting Samples\nHandling of function return values\nWhen assigning a value to an expect, separate the function call from the expectation to simplify debugging. This later helps when you not know about the return value type or if it's an promise or not. This is good style not only for tests.\n    // doSomethingCrazy : retValue\n    it('bad sample', () => {\n        expect(doSomethingCrazy(x,y,z)).to...\n    })\n    it('good sample', () => {\n        const result = doSomethingCrazy(x,y,z)\n        expect(result).to... // here we can simply debug\n    })\nPromises and Timouts in tests\nWhen using asynchronous functions and/opr promises, results must be awaited within of an async test function instead of using promise chains. While for expexting error conditions it might be helpful to use catch for extracting a value from an expected error, in every case avoid writing long promise chains.\n\nInstead of using done callback, use async test functions.\nUse await instead of (long) promise chains\nnever manually set a timeout\n\n    // doSomethingCrazy : Promise\n    it('bad async sample', async function (done) => {\n        this.timeout(10000);\n        return doSomethingCrazy(x,y,z).then(result=>{\n            expect(result).to...\n            done() // expected done\n        }).catch(()=>{\n            logger.info(`Could not ... ${error}`);\n            done() // unexpected done, test will always succeed which is wrong\n        })\n    })\n    it('good async sample', async () => {\n        // no timeout set\n        const result = await doSomethingCrazy(x,y,z)\n        expect(result).to...\n    })\nTimeouts must not be used, when async handling is correctly defined!\n\nExpecting errors in tests\nWhen expecting an error, you might take values from an error, test for the error type thrown and must care of promises.\n    // doSomethingCrazy : Promise\n    it('bad async sample expecting an error', () => {\n        expect(doSomethingCrazy(x,y,z)).to...\n    })\n    it('good async sample expecting an error value', async () => {\n        const code = await doSomethingCrazy(x,y,z).catch(err => err.code)\n        expect(code).to...\n    })\n    it('good sample expecting an error type from a sync function', () => {\n        expect(() => doSomethingCrazySync(wrong, param)).toThrow(BadRequestException);\n    })\n    it('good sample expecting an error type from an async function', async () => {\n        await expect(doSomethingCrazySync(wrong, param)).rejects.toThrow(BadRequestException);\n    })Testing Utilities\nNestJS:\n\nprovides default tooling (such as test runner that builds an isolated module/application loader)\nprovides integration with Jest and Supertest out of the box\nmakes the Nest dependency injection system available in the testing environment for mocking components\n\nThe @nestjs/testing.Test class provides an execution context that mocks the full Nest runtime, but gives\nhooks that can help to manage class instances, including mocking and overriding.\nThe method Test.createTestingModule() takes module metadata as argument it returns TestingModule instance.\nThe TestingModule instance provides method compile() which bootstraps a module with its dependencies.\nEvery provider can be overwritten with custom provider implementation for testing purposes.\n  beforeAll(async () => {\n      const moduleRef = await Test.createTestingModule({\n          controllers: [SampleController],\n          providers: [SampleService],\n        }).compile();\n\n      sampleService = moduleRef.get(SampleService);\n      sampleController = moduleRef.get(CatsController);\n    });Unit Tests vs Integration Tests\nIn Unit Tests we access directly only the layer which is currently testing.\nOther layers should be mocked or are replaced with default testing implementation.\nEspecially the database access and database calls should be mocked.\nIn contrast to unit tests the integration tests use access to the database and execute\nreal queries using repositories.\nRepo Tests\nFor the data access layer, integration tests can be used to check the repositories base functionality against a database.\nFor Queries care DRY principle, they should be tested very carefully.\n\nUse a in-memory database for testing to allow parallel test execution and have isolated execution of tests.\n\n\nA test must define the before and after state of the data set clearly and cleanup the database after execution to the before state.\n\n\nInstead of using predefined data sets, all preconditions should be defined in code through fixtures.\n\nOur repository layer uses mikro-orm/EntityManager to execute the queries.\nBy testing repositories we want to verify the correct behaviour of the repository functions.\nIt includes verifying expected database state after executed repository function.\nTherefore, the *.repo.integration.spec.js should be used.\nThe basic structure of the repo integration test:\nPreconditions (beforeAll):\n\nCreate Nest JS testing module:\n1.1 with MongoMemoryDatabaseModule defining entities which are used in tests. This will wrap MikroOrmModule.forRoot() with running a MongoDB in memory.\n1.2 provide the repo which should be tested\nGet repo, orm and entityManager from testing module\n\n    import { MongoMemoryDatabaseModule } from '@src/modules/database';\n\n    let repo: NewsRepo;\n    let em: EntityManager;\n    let testModule: TestingModule;\n\n    beforeAll(async () => {\n        testModule: TestingModule = await Test.createTestingModule({    (1)\n             imports: [\n                     MongoMemoryDatabaseModule.forRoot({                 (1.1)\n                    entities: [News, CourseNews, ...],\n                }),\n              ],\n             providers: [NewsRepo],                                     (1.2)\n      }).compile();\n      repo = testModule.get(NewsRepo);                                  (2)\n      orm = testModule.get(MikroORM);\n      em = testModule.get(EntityManager);\n    })Post conditions (afterAll), Teardown\nAfter all tests are executed close the app and orm to release the resources by closing the test module.\n    afterAll(async () => {\n        await testModule.close();\n    });\nWhen Jest reports open handles that not have been closed, ensure all Promises are awaited and all application parts started are correctly closed.\n\nMapping Tests\nMapping tests are Unit Tests which verify the correct mapping between entities and Dto objects.\nThese tests should not have any external dependencies to other layers like database or use cases.\nUse Case Tests\nUse case tests are Unit Tests which verify the business logic of the application.\nThe database calls are mocked and spyied. So we can check how and with which parameters the repo functions are called.\n\nUse unit-tests to ensure a use-cases logic matches the given requirements (from a [user-]story).\n\n\nA unit test should cover preconditions, allowed input, the result, and expected exceptions defined by the story, and roughly what happens on malformed input (the execution should stop).\n\nPreconditions\n\nCreate Nest JS testing module\nUse Repo as provider reimplement the repo functions with some default implementations\nProvide other dependencies like AuthorizationService and provide default implementation for the function, which are called.\nGet repo and uc from testing module\n\n      const module: TestingModule = await Test.createTestingModule({ (1)\n            imports: [LoggerModule],\n            providers: [\n                NewsUc,\n                {\n                    provide: NewsRepo,                                  (2)\n                    useValue: {\n                        save() {\n                            ...\n                        },\n                        findAll() {\n                            ...\n                        },\n                    },\n                },\n                {\n                    provide: AuthorizationService,                      (3)\n                    useValue: {\n                        getPermittedEntities(userId, targetModel, permissions) {\n                            ...\n                        },\n                    },\n                },\n            ],\n        }).compile();\n\n        service = module.get(NewsUc);                                    (4)\n        repo = module.get(NewsRepo);Test\n\nSpy repo function which is called inside the tested use case\nCall the tested function\nVerify that the repo spy is called with the expected functions\n\n        it('should search for news by empty scope ', async () => {\n            const findAllSpy = jest.spyOn(repo, 'findAll');             (1)\n            await service.findAllForUser(userId, scope, pagination);    (2)\n            const expectedParams = [targets, false, pagination];\n            expect(findAllSpy).toHaveBeenCalledWith(...expectedParams); (3)\n        });Testing expected error\n\nExecute the function with the expected exception in expect context than define how and with which exception\nthe function should be rejected\n\n\nDon't forget to add 'await' before expect, otherwise the test will be executed successfully regardless assertions\nand throw an error in log after the test execution.\n\n        it('should throw not found exception if news was not found', async () => {\n            const anotherNewsId = new ObjectId().toHexString();\n            await expect(service.findOneByIdForUser(anotherNewsId, userId)).rejects.toThrow(NotFoundException);  (1)\n        });E2E Tests\nUnlike unit testing, which focuses on individual modules, end-to-end testing covers the interaction between classes and\nmodules at a more aggregate level. Automated end-to-end tests help us to ensure that the overall behavior of the system is correct.\nController Tests\nTo test the setup behind a controller, use e2e-tests to ensure, use cases and repositories below\nare correctly mounted and available at a specific path.\n\nA controller unit test should ensure it responds with the correct data-format and a referenced use-case is called correctly.\n\n\nAuthentication and response codes can be unit tested.\n\n\nDo not test logic (from the business layer or repository) in e2e-tests, this must be done where the logic is defined within of a unit test. A e2e test should only ensure everything is correctly initialized.\n\n\nDo not put logic (beside statements, transactions, mapping) inside a controller, use the logic layer instead.\n\n\nMappers must be unit tested.\n\nPreconditions\n\nCreate Nest testing module\nImport ServerModule as the whole\nOverride authentication using JwAuthGuard\n3.1 Override authorized user with the mocked user data\nOverride other services for example for authorization\nCreate and initialize the whole Nest Application using createNestApplication()\nGet Orm and Entity Manager from module\n\n\n    beforeAll(async () => {\n        const module: TestingModule = await Test.createTestingModule({  (1)\n            imports: [ServerModule],                                    (2)\n        })\n            .overrideGuard(JwtAuthGuard)                                (3)\n            .useValue({\n                canActivate(context: ExecutionContext) {\n                    const req: Request = context.switchToHttp().getRequest();\n                    req.user = {                                        (3.1)\n                            userId: '0000d224816abba584714c9c',\n                            roles: [],\n                            schoolId: '5f2987e020834114b8efd6f8',\n                            accountId: '0000d225816abba584714c9d',\n                    };\n                    return true;\n                },\n            })\n            .overrideProvider(AuthorizationService)                     (4)\n            .useValue({\n                checkEntityPermissions() {},\n                getEntityPermissions() {\n                    return ['NEWS_VIEW', 'NEWS_EDIT'];\n                },\n            })\n            .compile();\n\n        app = module.createNestApplication();                           (5)\n        await app.init();\n        orm = module.get(MikroORM);                                     (6)\n        em = module.get(EntityManager);\n    });Clean up\nAfter Each test delete the created data in test to have a clean database for the next test.\n    afterEach(async () => {\n        await em.nativeDelete(News, {});\n    });Post Conditions\nAfter all tests are executed close the app and orm to release the resources\n    afterAll(async () => {\n        await app.close();\n        await orm.close();\n    });Test\nAn example e2e test uses app http server to call the tested url.\nThe request() function from the supertest library simulates HTTP request.\nThe response can be verified by checking the response code or by applying some verification to the result object.\n    describe('GET /news', () => {\n      it('should get empty response if there is no news', async () => {\n        const response = await request(app.getHttpServer()).get(`/news`).expect(200);\n        const {data, total} = response.body as NewsListResponse;\n        expect(total).toBe(0);\n        expect(data.length).toBe(0);\n      });\n    });\nDon't forget to test HTTP error codes as well\n\nReferences\nThis guide is inspired by https://github.com/goldbergyoni/javascript-testing-best-practices/\n        it('should throw not found error, if news doesnt exists', async () => {\n            const newsId = new ObjectId().toHexString();\n            await request(app.getHttpServer()).delete(`/news/${newsId}`).expect(404);\n        });\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/decisions.html":{"url":"additional-documentation/nestjs-application/decisions.html","title":"additional-page - Decisions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDecisions\nArchitecture decisions\nSOLID\nSolution: NestJS\nTypeScript\nSolution: Use in schulcloud-server, extend strong typing over the api via openAPI and use it in nuxt-client.\nStrict settings: Property Initialization\nDue to different ways of how instances are generated while we focus on having strict settings enabled by default, we have the following exceptions for strict property initialization defined:\n\nreponse dtos (generated in controllers by mappers based on entities) will get constructors added for setting all or at least all required properties via constructors\nrequest dtos will use ! on properties ang do not get constructors added. The validity must be defined by and match with class validator decorators on properties. The application then will generate valid instances on input data. \nfor entity id and _id the developer must know if the values are present or not depending on persistence state of an entity\nall other classes should use complete constructors, and avoid use of ! on properties, especially all providers, and entities for application use and testing\nlegacy code might have got some ! added which should be removed and get constructors added correctly.\n\nMikro-ORM\nTypescript Support\n\nstrong typed entities\nprovide meta data through:\nclasses\ndecorators (on classes, properties)MongoDB Support\n\n\n\nfull Support for MongoDB\n(as opposed to e.g. TypeORM, Prisma)\n\nUnit of Work\n\nimplicit transactions\nmanaged entities / references\ncollect changes\nem.flush()\n\nIdentity Map\n\nalways get the same instance of one entity\ngood for:\noptimizations\ncaching\ncomparison by identity\n\n\nrequest scope in web applications\n\nDatabase agnostic\n\ncan be used with different databases (SQL/NoSQL)\n\nRelation mapping\n\n1:n, 1:1, m:n\nforeign collection relations\nembedded relations (MongoDB)\n\nPreloading\n\nnested structures can be preloaded via populate\n\nMisc\n\nuse serialized mongo-id\n\nIssues\n\nno join queries in MongoDB\nno populate in queries over relations\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/vscode.html":{"url":"additional-documentation/nestjs-application/vscode.html","title":"additional-page - VSCode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVSCode\nLaunch scripts\nIn the file ./vscode/launch.default.json you find following actions:\n\nAttach to NestJS will allow to attach VSCode debugger to an already running application\nDeubg NestJS via NPM will start the application and attach the debugger\n\nSettings\nIn the file ./vscode/settings.default.json find suggested settings.\nRecommended extensions\nSee ./vscode/extensions.json for recommendations.\nJest\nJest is used to care of unit- and end2end tests on all *.spec.ts files.\n Allows to just see failing tests in Problems tab.\n and get small icons like ✔️ or a cross beside it-definitions inside of test files.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/git.html":{"url":"additional-documentation/nestjs-application/git.html","title":"additional-page - Git","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGit\nWindows\nWe strongly recommend to let git translate line endings. Please set git config --global --add core.autocrlf input when working with windows.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
