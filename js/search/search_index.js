var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/ApiValidationError.html",[0,0.114,1,3.209]],["body/classes/ApiValidationError.html",[0,0.135,1,4.887,2,1.193,3,0.149,4,0.125,5,0.086,6,6.611,7,5.137,8,1.864,9,6.088,10,0.297,11,0.963,12,3.295,13,3.235,14,4.82,15,4.217,16,2.914,17,0.431,18,1.394,19,6.726,20,6.726,21,1.402,22,5.76,23,5.968,24,1,25,5.76,26,0.904,27,0.006,28,0.518,29,0.586,30,7.31,31,1.772,32,3.893,33,5.137,34,4.887,35,5.137,36,0.954,37,5.137,38,5.137,39,5.137,40,5.137,41,1.372,42,5.137,43,3.388,44,0.301,45,4.421,46,1.193,47,5.137,48,0.141,49,4.727,50,1.937,51,4.727,52,3.558,53,3.965,54,2.633,55,4.176,56,4.176,57,2.697,58,5.137,59,0.005,60,0.005]],["title/classes/ApiValidationErrorResponse.html",[0,0.114,61,3.736]],["body/classes/ApiValidationErrorResponse.html",[0,0.141,1,6.103,2,1.239,3,0.155,4,0.13,5,0.089,8,1.91,10,0.308,11,0.986,13,3.314,15,4.32,16,2.7,17,0.377,21,1.456,24,0.804,26,0.939,27,0.006,28,0.538,29,0.609,30,7.441,43,4.906,44,0.339,48,0.147,52,3.645,53,5.03,54,2.734,56,4.337,59,0.005,60,0.005,61,5.828,62,7.441,63,5.335,64,1.94,65,5.007,66,4.32,67,4.805,68,4.694,69,7.593,70,5.982,71,6.403,72,5.982,73,4.591,74,5.335,75,5.982,76,1.843,77,5.982,78,5.982,79,5.982,80,7.593,81,7.593,82,5.982,83,1.274,84,1.428,85,7.593,86,5.982]],["title/interfaces/AppendedAttachment.html",[87,0.457,88,2.966]],["body/interfaces/AppendedAttachment.html",[3,0.166,4,0.139,5,0.096,8,2.326,10,0.33,11,1.03,27,0.006,28,0.577,36,1.159,48,0.157,59,0.005,60,0.005,87,0.896,88,5.247,89,1.781,90,4.059,91,5.482,92,6.096,93,4.228,94,4.228,95,4.833,96,4.228,97,4.228,98,4.228,99,5.247,100,4.059,101,4.228,102,4.833,103,5.23,104,5.23,105,4.833,106,4.243,107,4.059,108,4.228,109,4.228,110,4.228]],["title/modules/AuthModule.html",[111,1.398,112,3.529]],["body/modules/AuthModule.html",[0,0.151,3,0.167,4,0.14,5,0.096,27,0.006,44,0.388,46,1.332,48,0.158,59,0.005,60,0.005,111,2.281,112,7.097,113,2.627,114,3.63,115,5.732,116,5.732,117,5.732,118,6.499,119,6.832,120,6.499,121,4.378,122,3.34,123,2.869,124,6.426,125,3.546,126,3.812,127,7.942,128,4.932,129,6.426,130,5.732,131,5.732,132,6.426,133,4.432,134,5.274,135,6.426,136,5.732,137,6.426]],["title/modules/AuthorizationModule.html",[111,1.398,138,3.357]],["body/modules/AuthorizationModule.html",[0,0.153,3,0.169,4,0.141,5,0.097,27,0.006,44,0.367,46,1.348,48,0.16,59,0.005,60,0.005,111,2.299,113,2.66,114,3.658,121,4.412,122,3.382,123,2.905,125,3.574,126,3.842,138,6.799,139,5.804,140,5.804,141,5.804,142,5.804,143,6.519,144,6.033,145,6.233,146,6.507,147,4.412,148,6.507,149,6.507,150,3.382,151,5.804]],["title/injectables/AuthorizationService.html",[144,2.966,152,1.008]],["body/injectables/AuthorizationService.html",[0,0.101,3,0.112,4,0.094,5,0.064,10,0.222,17,0.347,18,1.147,21,1.05,24,0.814,26,1.207,27,0.006,28,0.691,29,0.782,36,0.98,41,1.501,44,0.312,46,0.894,48,0.106,59,0.004,60,0.004,76,1.698,83,1.023,84,0.811,144,3.715,145,5.55,150,2.243,151,3.848,152,1.263,153,1.594,154,3.848,155,2.717,156,6.307,157,5.438,158,7.072,159,4.315,160,4.315,161,4.315,162,2.839,163,4.607,164,4.486,165,5.614,166,4.003,167,4.315,168,3.586,169,2.53,170,6.098,171,4.503,172,1.952,173,4.039,174,2.502,175,4.205,176,6.098,177,4.315,178,5.068,179,3.848,180,4.315,181,3.995,182,4.021,183,5.438,184,3.859,185,5.004,186,1.261,187,2.629,188,1.802,189,5.022,190,4.205,191,2.63,192,4.315,193,4.315,194,3.541,195,4.315,196,4.315,197,4.315,198,6.098,199,4.315,200,4.315,201,2.454,202,4.315,203,6.098,204,4.315,205,4.315]],["title/classes/BaseEntity.html",[0,0.114,206,3.08]],["body/classes/BaseEntity.html",[0,0.198,2,1.264,3,0.158,4,0.133,5,0.091,10,0.314,11,1.093,13,2.662,17,0.348,24,0.814,27,0.006,36,0.98,44,0.312,48,0.189,59,0.005,60,0.005,84,1.583,172,2.05,206,5.327,207,5.005,208,3.772,209,1.831,210,3.538,211,2.338,212,4.04,213,6.099,214,4.04,215,6.099,216,2.884,217,1.934,218,1.877,219,2.788,220,4.681,221,4.422,222,2.786,223,5.005,224,5.005,225,5.44,226,4.021,227,3.262,228,5.44,229,3.362,230,4.681,231,3.716,232,2.392,233,3.469,234,2.253,235,5.44,236,5.005,237,5.44,238,4.206,239,3.86,240,4.681,241,5.005,242,2.493,243,2.683,244,5.44,245,2.547]],["title/classes/BaseEntityWithTimestamps.html",[0,0.114,222,1.764]],["body/classes/BaseEntityWithTimestamps.html",[0,0.194,2,1.205,3,0.151,4,0.126,5,0.087,10,0.299,11,1.069,13,2.537,17,0.337,24,0.919,27,0.006,36,0.958,44,0.303,48,0.183,59,0.005,60,0.005,84,1.689,172,2.014,206,4.719,207,4.771,208,3.706,209,1.799,210,3.476,211,2.494,212,3.969,214,3.969,216,2.975,217,1.876,218,1.789,219,2.658,220,4.462,221,4.215,222,2.983,223,4.771,224,4.771,225,5.185,226,3.833,227,3.11,228,5.185,229,3.205,230,4.462,231,3.543,232,2.28,233,3.307,234,2.148,235,5.185,236,4.771,237,5.185,238,4.01,239,3.679,240,4.462,241,4.771,242,3.365,243,2.861,244,5.185,245,3.438,246,5.814,247,2.106,248,2.463,249,5.814,250,5.814,251,2.863,252,2.148,253,5.814]],["title/injectables/BaseRepo.html",[152,1.008,254,3.357]],["body/injectables/BaseRepo.html",[0,0.107,3,0.118,4,0.099,5,0.068,10,0.234,12,1.558,17,0.411,18,1.19,21,1.107,24,0.975,26,1.428,27,0.006,28,0.818,29,0.925,41,1.683,44,0.295,46,0.942,48,0.112,59,0.004,60,0.004,76,1.398,83,1.436,152,1.311,153,1.68,155,2.895,172,1.985,174,2.737,181,4.089,186,1.329,191,2.682,206,2.878,217,1.144,219,2.079,254,4.363,255,4.056,256,7.015,257,4.363,258,5.643,259,5.643,260,5.643,261,3.599,262,5.643,263,5.643,264,5.643,265,2.878,266,4.475,267,4.548,268,3.289,269,4.548,270,4.856,271,6.552,272,4.548,273,5.643,274,4.548,275,5.643,276,4.548,277,5.643,278,4.548,279,5.643,280,4.548,281,4.336,282,5.643,283,4.548,284,5.643,285,4.548,286,5.643,287,4.548,288,3.732,289,4.548,290,4.548,291,6.037,292,6.327,293,6.327,294,6.327,295,7.276,296,7.276,297,4.548,298,6.327]],["title/classes/BusinessError.html",[0,0.114,9,3.08]],["body/classes/BusinessError.html",[0,0.18,2,1.041,3,0.13,4,0.109,5,0.075,8,1.704,9,4.287,10,0.259,11,0.88,12,3.324,13,4.055,14,5.303,15,4.666,16,3.137,17,0.434,18,1.274,19,6.732,20,6.732,21,1.649,24,0.97,26,0.789,27,0.006,28,0.452,29,0.511,31,2.084,34,5.946,36,1.027,41,1.254,43,4.508,44,0.311,45,6.295,46,1.041,48,0.123,50,1.69,53,2.688,55,5.557,59,0.004,60,0.004,64,1.63,68,4.388,83,1.137,84,0.945,299,4.482,300,4.36,301,4.912,302,3.984,303,4.672,304,3.984,305,4.287,306,4.287,307,3.252,308,6.732,309,5.025,310,5.947,311,6.775,312,2.955,313,5.025,314,5.025,315,5.025,316,5.025,317,5.025,318,5.025,319,5.025,320,5.025,321,5.025,322,3.466,323,5.025,324,4.482,325,6.775,326,5.025,327,3.854,328,6.775,329,6.775,330,5.025]],["title/injectables/ConsoleWriter.html",[152,1.008,331,3.357]],["body/injectables/ConsoleWriter.html",[0,0.155,3,0.226,4,0.143,5,0.098,10,0.339,11,1.047,17,0.298,18,1.517,24,0.854,26,1.034,27,0.006,28,0.593,29,0.671,36,1.015,41,1.219,44,0.328,46,1.365,48,0.162,59,0.005,60,0.005,152,1.671,153,2.435,247,1.861,248,2.176,281,4.446,331,5.562,332,7.774,333,6.69,334,5.877,335,9.083,336,8.066,337,6.59,338,5.408,339,8.717,340,6.59,341,3.163,342,5.104,343,6.59,344,3.245,345,3.332,346,6.59,347,6.59,348,6.59]],["title/modules/CoreModule.html",[111,1.398,349,3.529]],["body/modules/CoreModule.html",[0,0.141,3,0.156,4,0.131,5,0.09,27,0.006,44,0.368,46,1.247,48,0.148,54,3.484,59,0.005,60,0.005,64,1.952,111,2.526,113,2.459,114,3.484,121,4.201,122,3.127,123,2.686,126,3.658,307,3.658,349,7.105,350,5.366,351,5.366,352,6.72,353,6.72,354,5.866,355,6.72,356,6.016,357,5.025,358,7.621,359,5.025,360,5.849,361,6.254,362,7.621,363,4.482,364,5.849,365,5.025,366,7.621,367,4.482,368,5.525,369,6.797,370,7.621,371,5.849,372,6.016,373,6.016,374,6.016,375,6.016]],["title/classes/Course.html",[0,0.114,376,1.764]],["body/classes/Course.html",[0,0.09,2,0.789,3,0.099,4,0.083,5,0.057,8,1.402,10,0.416,11,0.724,17,0.401,18,1.048,21,1.357,24,0.979,26,0.598,27,0.006,28,0.769,29,0.387,31,1.715,32,3.03,36,1.077,41,1.031,44,0.314,48,0.093,50,1.281,59,0.003,60,0.003,64,2.704,76,0.841,83,0.935,84,1.607,87,0.357,162,1.657,169,2.015,172,1.293,208,2.379,209,1.6,210,1.524,211,2.495,212,1.74,214,1.74,216,2.645,217,0.958,218,1.172,222,3.02,232,2.186,242,2.278,243,1.776,245,2.327,247,2.613,248,2.823,251,1.875,252,3.274,268,1.979,363,2.239,376,2.02,377,2.922,378,4.806,379,3.157,380,4.267,381,5.261,382,5.004,383,5.004,384,5.004,385,2.231,386,5.569,387,5.574,388,1.556,389,5.88,390,6.593,391,5.88,392,3.808,393,5.88,394,3.808,395,3.808,396,3.73,397,2.548,398,3.808,399,3.873,400,6.593,401,4.277,402,3.808,403,4.971,404,3.808,405,4.971,406,3.808,407,1.925,408,1.925,409,1.925,410,1.925,411,3.808,412,2.239,413,3.808,414,1.625,415,2.239,416,1.524,417,2.511,418,1.524,419,2.32,420,2.037,421,3.675,422,4.971,423,3.396,424,2.922,425,3.396,426,2.626,427,3.396,428,3.396,429,3.125,430,2.761,431,2.761,432,2.626,433,3.396,434,3.396,435,3.125,436,3.125,437,1.7,438,1.828,439,2.32,440,4.546,441,3.072,442,3.072,443,4.971,444,4.971,445,2.922,446,2.32,447,2.922,448,2.922,449,3.396,450,3.396,451,3.396,452,3.396,453,4.971,454,4.971,455,3.396,456,2.239]],["title/classes/CourseGroup.html",[0,0.114,457,2.863]],["body/classes/CourseGroup.html",[0,0.123,2,1.087,3,0.136,4,0.114,5,0.078,8,1.754,10,0.27,11,0.905,17,0.404,18,1.311,21,1.277,24,0.98,26,0.823,27,0.006,28,0.472,29,0.534,32,3.485,36,0.611,41,0.971,44,0.353,48,0.171,50,1.764,59,0.004,60,0.004,83,0.88,84,1.57,87,0.492,169,1.937,172,1.617,208,2.976,209,1.445,210,3.341,211,2.481,212,2.398,214,2.398,216,1.797,217,1.754,218,1.614,219,2.398,222,3.304,242,2.85,243,2.222,245,2.912,247,2.212,248,2.587,251,2.583,252,2.894,376,3.355,380,4.908,385,2.791,388,2.144,396,3.642,399,3.347,401,5.351,407,2.653,408,2.653,409,2.653,410,2.653,414,2.239,415,3.085,416,2.1,418,2.1,420,2.806,437,2.342,440,4.808,447,4.026,448,4.026,457,4.101,458,4.305,459,7.444,460,6.405,461,6.972,462,3.73,463,4.412,464,5.246,465,5.246,466,2.806,467,3.803,468,4.026,469,4.026,470,4.678]],["title/injectables/CourseGroupRepo.html",[152,1.008,471,3.995]],["body/injectables/CourseGroupRepo.html",[0,0.151,3,0.167,4,0.14,5,0.096,10,0.331,12,2.201,17,0.359,18,1.494,21,1.565,24,0.841,26,1.247,27,0.006,28,0.714,29,0.808,41,1.189,44,0.35,46,1.332,48,0.158,59,0.005,60,0.005,76,1.42,83,1.078,152,1.646,153,2.374,155,2.607,162,2.676,174,2.361,186,1.878,188,2.684,191,2.085,217,1.616,219,2.937,265,4.067,266,5.122,268,4.128,376,2.329,457,3.78,467,5.758,471,6.518,472,5.732,473,7.942,474,6.426,475,7.942,476,6.426,477,7.942,478,3.916,479,5.026,480,6.426]],["title/classes/CourseNews.html",[0,0.114,481,2.863]],["body/classes/CourseNews.html",[0,0.155,2,0.652,3,0.082,4,0.155,5,0.047,8,1.79,10,0.162,11,0.628,16,2.671,17,0.419,18,0.909,24,0.969,26,0.494,27,0.006,28,0.593,29,0.842,32,3.823,36,1.049,41,0.583,44,0.328,48,0.175,50,1.059,59,0.003,60,0.003,83,0.528,84,1.339,87,0.295,162,1.961,163,3.755,164,3.7,166,2.405,169,2.173,172,1.651,190,2.171,208,2.063,209,1.219,210,1.26,211,2.503,212,1.439,214,1.439,216,3.058,217,0.792,218,0.969,222,2.723,229,3.242,234,2.173,242,1.976,243,2.268,245,2.018,247,1.661,248,1.943,251,1.551,252,1.163,300,2.749,327,1.791,376,2.132,379,3.122,385,1.26,388,2.405,396,3.279,397,2.209,407,1.592,408,1.592,409,1.592,410,1.592,414,1.344,416,2.355,418,1.26,419,1.919,420,1.684,439,3.584,446,1.919,462,2.585,466,1.684,481,2.843,482,2.171,483,3.597,484,3.773,485,3.7,486,3.808,487,3.53,488,4.784,489,4.55,490,4.693,491,2.626,492,3.709,493,3.149,494,2.584,495,3.333,496,4.35,497,3.333,498,2.584,499,2.584,500,3.504,501,4.176,502,3.504,503,3.333,504,2.38,505,3.187,506,3.333,507,2.584,508,2.584,509,2.584,510,3.346,511,3.723,512,2.584,513,2.584,514,2.897,515,2.584,516,3.187,517,2.584,518,3.504,519,2.584,520,3.504,521,4.693,522,2.584,523,2.263,524,2.283,525,3.584,526,2.283,527,1.637,528,2.171,529,1.315,530,1.551,531,2.076,532,1.993,533,2.283,534,2.283,535,2.283,536,2.283,537,2.283,538,1.637,539,2.076,540,2.283,541,2.283,542,2.283,543,2.283,544,2.283,545,2.283,546,2.283,547,2.283,548,3.504,549,2.897,550,2.975,551,2.823,552,2.823,553,2.897,554,3.584,555,3.346,556,2.283,557,3.504,558,2.283,559,2.283,560,4.265,561,1.919,562,1.919,563,2.283]],["title/injectables/CourseRepo.html",[152,1.008,564,3.209]],["body/injectables/CourseRepo.html",[0,0.158,3,0.129,4,0.108,5,0.074,8,1.248,10,0.256,12,1.699,17,0.369,18,1.263,21,1.208,24,0.864,26,1.281,27,0.006,28,0.734,29,0.83,41,1.409,44,0.331,46,1.028,48,0.122,59,0.004,60,0.004,76,2.089,83,1.369,84,0.933,152,1.392,153,1.833,155,2.802,162,2.81,173,4.282,174,2.612,186,1.45,188,2.072,191,2.47,217,1.248,219,2.268,265,3.14,266,4.642,268,3.491,376,1.798,380,3.95,381,4.869,382,4.632,438,4.219,478,3.023,479,5.562,564,4.428,565,4.071,566,5.99,567,5.99,568,5.99,569,4.961,570,5.512,571,4.961,572,5.512,573,4.961,574,5.512,575,4.961,576,3.323,577,3.808,578,5.844,579,4.425,580,5.99,581,7.278,582,7.278,583,3.808,584,4.425,585,6.791,586,4.425,587,3.643]],["title/classes/CourseScope.html",[0,0.114,578,3.736]],["body/classes/CourseScope.html",[0,0.154,2,0.995,3,0.125,4,0.104,5,0.072,8,1.652,10,0.247,11,0.853,12,1.644,17,0.381,18,1.235,24,0.852,26,1.264,27,0.006,28,0.673,29,0.762,32,3.126,36,0.937,41,1.385,44,0.327,46,0.995,48,0.118,59,0.004,60,0.004,76,2.077,83,1.35,84,0.903,152,1.361,155,2.264,162,2.648,173,4.147,174,2.225,186,1.403,188,2.005,191,2.428,217,1.207,219,2.194,247,1.356,248,1.585,266,3.736,268,2.495,281,3.62,376,1.74,380,3.863,381,4.761,382,4.529,438,4.178,478,2.925,479,5.508,564,3.165,565,3.94,570,3.94,572,3.94,574,3.94,576,3.889,577,3.684,578,6.469,579,5.857,580,5.857,581,7.179,582,7.179,583,3.684,584,4.281,585,6.677,586,4.281,587,3.764,588,2.524,589,5.04,590,6.568,591,5.04,592,5.04,593,4.936,594,3.94,595,4.8,596,3.684,597,4.529,598,3.94,599,3.684,600,5.427,601,4.761,602,4.761,603,3.94,604,3.48]],["title/classes/CreateNewsParams.html",[0,0.114,605,3.357]],["body/classes/CreateNewsParams.html",[0,0.162,2,1.072,3,0.134,4,0.113,5,0.077,10,0.267,11,0.897,16,3.076,17,0.391,24,0.915,27,0.006,29,0.703,36,1.075,44,0.316,48,0.127,59,0.004,60,0.004,64,2.994,76,1.144,163,3.734,164,3.831,165,4.74,171,3.697,172,2.19,187,3.154,209,1.432,211,2.402,243,2.202,483,3.582,484,3.707,485,4.26,487,4.161,514,2.549,605,4.766,606,7.303,607,3.972,608,3.236,609,5.303,610,4.064,611,6.91,612,4.616,613,5.176,614,5.671,615,4.21,616,5.671,617,5.303,618,5.671,619,4.766,620,4.766,621,5.176,622,5.176,623,4.373,624,4.373,625,5.473,626,5.176,627,5.176,628,5.64,629,5.671,630,4.064,631,5.176,632,5.176,633,4.768,634,4.556,635,2.423,636,6.163,637,5.671,638,7.098,639,3.154,640,3.752,641,3.044]],["title/controllers/DashboardController.html",[642,2.124,643,3.736]],["body/controllers/DashboardController.html",[0,0.155,3,0.171,4,0.143,5,0.098,10,0.339,12,2.253,18,1.515,24,0.696,27,0.006,41,1.217,44,0.378,46,1.362,48,0.161,59,0.005,60,0.005,76,1.78,83,1.103,155,2.633,174,2.394,188,2.746,191,2.133,211,1.826,608,4.078,642,2.87,643,6.182,644,3.238,645,5.865,646,4.161,647,4.582,648,9.076,649,6.576,650,4.161,651,4.767,652,6.006,653,5.865,654,4.535,655,5.047,656,6.576,657,4.767,658,6.576,659,6.576,660,5.047,661,6.576]],["title/classes/DashboardEntity.html",[0,0.114,662,2.683]],["body/classes/DashboardEntity.html",[0,0.187,2,0.962,3,0.12,4,0.101,5,0.069,10,0.239,11,0.834,16,2.962,17,0.377,18,1.207,21,1.13,24,0.882,26,0.729,27,0.006,28,0.418,29,0.472,31,2.769,36,1.097,41,1.188,44,0.189,48,0.217,59,0.004,60,0.004,83,1.445,87,0.602,162,2.716,209,1.952,234,1.715,327,3.651,388,3.007,417,3.061,438,2.229,456,5.067,530,3.623,538,2.413,662,3.538,663,3.061,664,5.022,665,5.754,666,6.246,667,5.022,668,5.022,669,6.419,670,5.589,671,4.643,672,4.643,673,4.643,674,5.745,675,4.232,676,5.272,677,5.233,678,5.754,679,2.731,680,3.336,681,3.061,682,3.366,683,2.938,684,2.559,685,3.366,686,3.061,687,3.366,688,4.653,689,3.366,690,2.829,691,4.653,692,5.272,693,5.492,694,2.731,695,4.653,696,4.653,697,3.366,698,2.938,699,2.938,700,3.366,701,4.653,702,3.366]],["title/classes/DashboardGridElementModel.html",[0,0.114,703,3.209]],["body/classes/DashboardGridElementModel.html",[0,0.177,2,1.002,3,0.126,4,0.105,5,0.072,8,2.031,10,0.249,11,0.857,16,1.72,17,0.404,21,1.178,24,0.976,26,0.759,27,0.006,28,0.435,29,0.492,31,2.485,32,3.372,36,1.058,44,0.305,48,0.184,50,2.528,57,2.265,59,0.004,60,0.004,84,1.414,172,1.873,173,2.211,208,2.818,209,1.808,210,2.643,211,2.524,212,2.211,214,2.211,216,3.113,217,1.661,218,1.488,219,2.211,222,3.341,232,1.897,242,2.699,243,2.104,245,2.757,247,1.865,248,2.181,251,2.382,252,1.787,378,2.667,399,2.322,407,2.446,408,2.446,409,2.446,410,2.446,414,2.065,416,2.643,438,2.322,456,4.42,483,1.787,529,3.372,530,3.701,647,4.594,667,5.11,684,2.667,698,4.757,699,4.757,703,4.353,704,3.713,705,4.838,706,6.936,707,5.418,708,6.627,709,4.838,710,5.418,711,4.838,712,4.838,713,4.838,714,3.19,715,3.97,716,3.19,717,6.168,718,6.168,719,2.948,720,3.713,721,3.507,722,2.667,723,3.97,724,3.713,725,2.948,726,3.97,727,3.507,728,3.97]],["title/classes/DashboardGridElementResponse.html",[0,0.114,729,3.529]],["body/classes/DashboardGridElementResponse.html",[0,0.167,2,1.117,3,0.14,4,0.117,5,0.08,10,0.278,11,0.922,16,3.263,17,0.407,24,0.953,27,0.006,31,2.596,36,1.097,44,0.219,48,0.174,59,0.004,60,0.004,64,3.021,172,1.25,178,3.554,209,1.901,211,2.5,378,3.913,501,3.412,623,5.024,624,5.024,633,5.194,635,2.524,641,4.669,647,4.039,654,3.718,664,6.105,675,5.234,676,5.024,692,4.493,693,4.681,727,3.908,729,5.755,730,4.424,731,7.08,732,7.08,733,6.526,734,8.605,735,5.391,736,5.391,737,6.332,738,5.391,739,5.391,740,7.524,741,5.391,742,5.391,743,4.137]],["title/classes/DashboardMapper.html",[0,0.114,655,3.736]],["body/classes/DashboardMapper.html",[0,0.148,2,1.307,3,0.164,4,0.137,5,0.094,10,0.325,17,0.285,18,1.477,24,0.668,26,0.99,27,0.006,28,0.567,29,0.642,41,1.168,44,0.319,48,0.155,59,0.005,60,0.005,76,1.977,83,1.317,84,1.477,186,1.843,491,3.817,608,3.677,647,3.589,654,6.169,655,6.026,662,4.931,729,5.693,744,5.627,745,5.177,746,7.852,747,6.309,748,4.16,749,4.16,750,6.309,751,6.309,752,6.309,753,7.852,754,3.107,755,6.309,756,6.309,757,6.309,758,6.309,759,6.309,760,6.309,761,6.309,762,6.309,763,6.309,764,6.309,765,6.309,766,6.309,767,6.309,768,6.309,769,6.309]],["title/classes/DashboardModelEntity.html",[0,0.114,725,2.966]],["body/classes/DashboardModelEntity.html",[0,0.181,2,1.048,3,0.131,4,0.11,5,0.075,8,2.069,10,0.26,11,0.884,16,1.799,17,0.372,21,1.231,24,0.936,26,0.794,27,0.006,28,0.455,29,0.515,31,2.094,32,3.435,36,1.069,44,0.312,48,0.189,50,2.586,57,2.368,59,0.004,60,0.004,84,1.547,172,1.907,173,2.312,208,2.904,209,1.831,210,2.724,211,2.384,212,2.312,214,2.312,216,3.028,217,1.712,218,1.556,219,2.312,222,3.372,232,1.984,242,2.782,243,2.168,245,2.842,247,2.172,248,2.54,251,2.491,252,1.869,378,2.788,399,3.266,407,2.558,408,2.558,409,2.558,410,2.558,414,2.159,416,3.078,438,2.428,456,4.522,483,1.869,529,2.842,530,2.491,647,4.374,667,5.205,684,2.788,698,3.201,699,3.201,703,3.335,704,3.882,706,6.311,707,4.151,708,5.584,710,4.151,714,3.335,715,4.151,716,3.335,717,6.311,718,6.311,719,3.082,720,3.882,721,3.667,722,2.788,723,4.151,724,3.882,725,4.146,726,5.584,727,5.575,728,4.151,770,5.058,771,5.058]],["title/classes/DashboardModelMapper.html",[0,0.114,772,3.529]],["body/classes/DashboardModelMapper.html",[0,0.121,2,1.071,3,0.134,4,0.112,5,0.077,10,0.266,17,0.351,18,1.298,24,0.823,26,1.22,27,0.006,28,0.699,29,0.791,41,1.438,44,0.316,48,0.127,59,0.004,60,0.004,76,1.91,83,1.392,84,1.735,155,2.35,172,1.198,174,2.052,186,1.51,191,2.522,217,1.3,218,1.59,416,2.763,491,4.172,530,3.399,630,4.571,647,4.422,662,4.573,664,4.368,670,5.25,679,3.039,694,4.571,703,5.125,716,3.407,725,5.693,772,5.004,773,4.608,774,6.903,775,6.903,776,6.903,777,6.903,778,5.167,779,6.903,780,5.167,781,7.094,782,6.903,783,5.167,784,4.608,785,4.24,786,5.167,787,5.167,788,5.167,789,5.167,790,5.167,791,6.903,792,5.167,793,3.746,794,5.167,795,5.167,796,5.167,797,5.167,798,5.167,799,5.167,800,5.167,801,5.167,802,5.167,803,4.24,804,5.167,805,3.746,806,4.24,807,5.167,808,5.167,809,5.167,810,5.167,811,5.167,812,5.167,813,5.167,814,5.167,815,5.167,816,5.167,817,5.167,818,5.167]],["title/injectables/DashboardRepo.html",[152,1.008,819,3.357]],["body/injectables/DashboardRepo.html",[0,0.16,3,0.132,4,0.11,5,0.076,10,0.261,12,1.738,17,0.372,18,1.283,21,1.235,24,0.909,26,1.293,27,0.006,28,0.741,29,0.838,41,1.524,44,0.349,46,1.051,48,0.167,57,2.376,59,0.004,60,0.004,76,1.998,83,1.382,84,0.954,87,0.476,152,1.413,153,1.875,155,2.675,162,2.448,172,1.582,174,2.554,186,1.483,191,2.499,209,1.596,210,2.031,217,1.276,219,2.319,232,2.674,254,3.499,257,4.703,265,3.211,266,4.685,268,3.545,270,5.234,288,4.164,300,2.887,647,3.879,662,5.065,668,5.599,679,2.984,680,2.638,694,4.011,725,3.092,772,3.679,781,5.596,785,4.164,819,4.703,820,4.164,821,4.246,822,6.819,823,7.051,824,5.074,825,6.082,826,5.074,827,6.082,828,5.074,829,5.074,830,5.074,831,4.526,832,4.944,833,3.211,834,3.092,835,3.499,836,3.211,837,4.526,838,4.164,839,4.526,840,4.526,841,6.87,842,4.526,843,6.082,844,6.082,845,4.526,846,4.526,847,4.526,848,4.526,849,3.679,850,2.499]],["title/classes/DashboardResponse.html",[0,0.114,654,3.357]],["body/classes/DashboardResponse.html",[0,0.178,2,1.232,3,0.154,4,0.129,5,0.089,10,0.306,11,0.983,16,2.959,17,0.342,24,0.801,27,0.006,31,2.328,36,1.076,44,0.241,48,0.186,59,0.005,60,0.005,64,3.084,172,1.755,178,4.988,209,1.946,211,2.101,378,3.278,501,4.788,623,5.265,624,5.265,633,5.29,635,2.785,641,4.893,647,4.982,654,5.217,664,5.849,675,3.921,676,3.764,692,3.764,693,3.921,727,6.032,729,6.032,730,4.881,731,5.304,732,5.304,733,5.485,734,8.243,737,5.304,740,6.748,743,5.806,851,5.947,852,5.947]],["title/injectables/DashboardUc.html",[152,1.008,652,3.357]],["body/injectables/DashboardUc.html",[0,0.157,3,0.173,4,0.145,5,0.1,10,0.344,12,2.286,17,0.302,18,1.529,21,1.625,24,0.86,26,1.048,27,0.006,28,0.6,29,0.679,41,1.235,44,0.356,46,1.383,48,0.164,59,0.005,60,0.005,76,1.475,83,1.12,152,1.684,153,2.466,155,2.651,174,2.416,186,1.95,191,2.165,588,2.565,647,4.624,652,5.606,662,3.679,819,5.606,823,7.487,832,6.614,853,5.953,854,6.675,855,6.675,856,6.675,857,4.067,858,5.953,859,6.675,860,6.675]],["title/classes/DefaultGridReference.html",[0,0.114,679,2.863]],["body/classes/DefaultGridReference.html",[0,0.186,2,0.955,3,0.12,4,0.1,5,0.069,10,0.237,11,0.829,16,3.243,17,0.389,18,1.201,21,1.122,24,0.879,26,0.723,27,0.006,28,0.414,29,0.469,31,2.764,36,1.117,41,0.853,44,0.187,48,0.216,59,0.004,60,0.004,83,1.442,87,0.599,162,2.773,209,1.95,234,1.703,327,3.633,388,1.884,417,3.039,438,2.212,456,5.055,530,3.608,538,2.395,662,2.54,663,3.039,664,4.041,665,3.341,666,5.312,667,5.006,668,4.041,670,5.258,674,5.928,675,4.21,676,5.772,677,5.478,678,6.389,679,3.756,680,3.809,681,3.039,682,3.341,683,2.916,684,2.54,685,3.341,686,3.039,687,3.341,688,4.629,689,3.341,690,2.808,691,4.629,692,5.258,693,5.478,694,2.71,695,4.629,696,4.629,697,3.341,698,2.916,699,2.916,700,3.341,701,4.629,702,3.341,861,6.386,862,4.608,863,4.608,864,4.608]],["title/classes/DefaultGridReferenceModel.html",[0,0.114,716,3.209]],["body/classes/DefaultGridReferenceModel.html",[0,0.18,2,1.041,3,0.13,4,0.109,5,0.075,8,2.063,10,0.259,11,0.88,16,2.725,17,0.387,21,1.223,24,0.954,26,0.789,27,0.006,28,0.452,29,0.511,31,2.084,32,3.426,36,1.093,44,0.311,48,0.188,50,2.578,57,2.353,59,0.004,60,0.004,84,1.442,172,1.902,173,2.297,208,2.892,209,1.828,210,2.712,211,2.451,212,2.297,214,2.297,216,3.141,217,1.704,218,1.546,219,2.297,222,3.367,232,1.971,242,2.769,243,2.159,245,2.829,247,1.914,248,2.238,251,2.475,252,1.857,378,4.225,399,2.412,407,2.541,408,2.541,409,2.541,410,2.541,414,2.145,416,2.712,438,2.412,456,4.508,483,1.857,529,2.829,530,2.475,647,3.854,667,5.191,684,2.77,698,3.18,699,3.18,703,3.313,704,3.857,706,6.29,707,4.124,708,5.56,710,4.124,714,3.313,715,4.124,716,4.467,717,6.29,718,6.29,719,3.062,720,3.857,721,3.643,722,2.77,723,4.124,724,3.857,725,3.062,726,4.124,727,3.643,728,4.124,865,5.025,866,5.025,867,5.025]],["title/controllers/DelayController.html",[642,2.124,868,3.736]],["body/controllers/DelayController.html",[0,0.147,3,0.162,4,0.136,5,0.093,10,0.322,18,1.469,24,0.662,27,0.006,41,1.158,44,0.346,46,1.297,48,0.154,52,3.004,59,0.005,60,0.005,76,1.726,83,1.311,84,1.177,125,2.794,155,2.576,174,2.532,191,2.03,211,1.738,247,2.207,368,5.664,642,3.41,644,3.847,868,6.537,869,6.411,870,5.136,871,7.32,872,6.258,873,5.388,874,4.556,875,5.151,876,4.444,877,5.996,878,5.582,879,6.258,880,3.961,881,5.136,882,6.411,883,5.582,884,5.582,885,6.258,886,4.803,887,3.165,888,5.136,889,5.388,890,5.136,891,3.253,892,4.537,893,4.803]],["title/injectables/DurationLoggingInterceptor.html",[152,1.008,894,3.995]],["body/injectables/DurationLoggingInterceptor.html",[0,0.143,3,0.158,4,0.132,5,0.091,10,0.313,11,0.997,12,2.881,17,0.275,18,1.444,24,0.813,26,0.956,27,0.006,28,0.547,29,0.619,41,1.126,44,0.359,46,1.261,48,0.149,59,0.005,60,0.005,64,1.975,76,1.345,83,1.021,84,1.444,152,1.591,153,2.249,247,1.719,248,2.01,365,5.062,551,4.037,588,3.232,619,4.198,680,3.164,877,5.892,889,5.295,894,6.301,895,7.501,896,5.429,897,7.678,898,5.892,899,5.062,900,5.024,901,6.848,902,6.848,903,6.778,904,7.877,905,6.087,906,3.256,907,7.501,908,7.678,909,6.087,910,4.995,911,6.087,912,5.429,913,4.995,914,6.087,915,7.678,916,6.087,917,6.087,918,6.087]],["title/modules/ErrorModule.html",[111,1.398,352,3.529]],["body/modules/ErrorModule.html",[0,0.162,3,0.179,4,0.15,5,0.103,27,0.006,44,0.361,46,1.426,48,0.169,59,0.005,60,0.005,64,2.232,111,2.379,113,2.813,125,3.072,184,5.24,247,2.339,341,3.975,352,6.003,367,4.87,371,7.074,880,4.355,891,3.577,919,6.881,920,7.385,921,5.045,922,5.24,923,6.003,924,6.881,925,6.881,926,5.281]],["title/classes/ErrorResponse.html",[0,0.114,43,2.863]],["body/classes/ErrorResponse.html",[0,0.147,2,1.299,3,0.163,4,0.136,5,0.094,12,3.058,13,3.896,15,4.85,16,3.031,17,0.415,21,1.904,24,0.664,26,0.984,27,0.006,28,0.564,29,0.638,31,2.623,36,1.128,43,4.601,44,0.255,45,4.813,46,1.299,48,0.154,54,3.897,59,0.005,60,0.005,64,2.538,65,5.621,66,4.45,67,4.95,68,4.184,324,5.593,421,5.158,927,5.593,928,6.271,929,6.271,930,6.271,931,5.146,932,6.271,933,3.969,934,5.593,935,3.688,936,3.01,937,3.821,938,4.325,939,4.813]],["title/injectables/FeathersAuthProvider.html",[145,3.209,152,1.008]],["body/injectables/FeathersAuthProvider.html",[0,0.1,3,0.11,4,0.092,5,0.063,10,0.219,17,0.378,18,1.134,21,1.033,24,0.886,26,1.314,27,0.006,28,0.753,29,0.852,36,0.938,41,1.491,44,0.327,46,0.879,48,0.104,59,0.004,60,0.004,76,2.006,83,1.405,84,0.798,87,0.398,145,3.974,152,1.249,153,1.568,155,2.866,162,2.906,163,4.018,164,4.241,165,4.649,166,3.294,169,2.444,173,3.936,174,2.698,175,4.156,186,1.24,187,2.586,188,1.772,191,2.614,201,2.414,206,3.814,208,1.811,210,2.806,217,1.067,219,1.94,344,3.451,379,1.568,397,3.683,587,1.895,588,2.694,873,4.156,874,2.27,940,7.68,941,3.483,942,6.027,943,6.251,944,6.027,945,6.027,946,6.251,947,4.244,948,5.298,949,4.244,950,6.027,951,4.244,952,3.785,953,4.244,954,6.027,955,4.244,956,6.027,957,4.244,958,4.244,959,4.244,960,5.375,961,4.244,962,3.785,963,6.027,964,3.785,965,6.027,966,6.027,967,4.244,968,4.244,969,4.244,970,6.027,971,6.027,972,6.027,973,4.244,974,3.077,975,4.244,976,4.244,977,4.244,978,2.27,979,4.946,980,3.785,981,4.244,982,4.244,983,2.339]],["title/interfaces/FeathersError.html",[87,0.457,984,3.357]],["body/interfaces/FeathersError.html",[3,0.183,4,0.153,5,0.105,8,2.114,10,0.363,11,1.091,13,4.056,17,0.44,27,0.006,31,2.762,36,1.122,48,0.173,54,3.841,59,0.005,60,0.005,87,0.662,89,1.959,984,5.795,985,6.29,986,6.29,987,8.288]],["title/modules/FeathersModule.html",[111,1.398,143,3.357]],["body/modules/FeathersModule.html",[0,0.15,3,0.166,4,0.139,5,0.095,27,0.006,44,0.322,46,1.326,48,0.157,59,0.005,60,0.005,64,2.076,111,2.583,113,3.517,114,3.621,121,4.367,122,3.327,123,2.858,125,3.537,143,6.581,147,4.367,150,4.472,344,3.901,345,4.006,876,4.507,948,6.252,962,5.708,988,5.708,989,5.708,990,5.708,991,6.4,992,5.223,993,4.659,994,4.367,995,4.118,996,5.013,997,5.463,998,5.463,999,5.463,1000,5.463,1001,6.501]],["title/interfaces/FeathersService.html",[87,0.457,1002,3.736]],["body/interfaces/FeathersService.html",[0,0.116,3,0.128,4,0.107,5,0.073,10,0.253,17,0.368,18,1.256,24,0.803,26,1.049,27,0.006,28,0.601,29,0.68,34,4.405,36,0.573,41,1.236,44,0.345,46,1.02,48,0.2,57,2.305,59,0.004,60,0.004,67,3.115,76,1.476,83,0.826,84,0.926,87,0.462,89,1.367,111,1.414,113,2.012,150,3.942,152,1.384,162,2.417,174,2.417,186,1.438,189,4.18,201,2.8,209,1.384,239,3.115,307,3.207,312,3.929,344,4.494,345,2.489,549,3.29,550,3.378,551,3.207,552,3.207,553,3.29,554,4.07,576,2.915,588,1.892,857,2.999,876,4.837,880,3.115,948,3.115,983,2.713,992,3.245,993,5.001,994,2.713,995,4.42,996,3.115,997,3.394,998,3.394,999,3.394,1000,3.394,1001,4.039,1002,6.242,1003,5.82,1004,3.568,1005,4.228,1006,7.254,1007,5.363,1008,5.958,1009,7.361,1010,4.922,1011,5.343,1012,5.958,1013,4.922,1014,4.39,1015,3.115,1016,4.039,1017,5.127,1018,5.482,1019,4.039,1020,3.394,1021,4.39,1022,4.39,1023,4.39,1024,5.958,1025,4.39,1026,3.568,1027,4.228,1028,3.777,1029,3.245,1030,4.39,1031,4.39,1032,4.39,1033,3.777,1034,3.245,1035,2.999,1036,4.39]],["title/injectables/FeathersServiceProvider.html",[152,1.008,948,3.08]],["body/injectables/FeathersServiceProvider.html",[0,0.116,3,0.128,4,0.107,5,0.074,10,0.254,17,0.368,18,1.258,21,1.2,24,0.803,26,1.05,27,0.006,28,0.601,29,0.68,34,4.409,36,0.884,41,0.912,44,0.345,46,1.021,48,0.2,57,2.308,59,0.004,60,0.004,64,1.599,67,3.12,76,1.478,83,0.827,84,0.927,87,0.462,111,1.416,113,2.734,150,4.23,152,1.386,153,1.821,162,1.988,174,1.988,186,1.44,189,4.184,201,2.804,209,1.021,239,3.12,307,3.21,344,4.496,345,3.382,549,3.293,550,3.382,551,3.21,552,3.21,553,3.293,554,4.075,576,2.919,588,1.895,857,3.004,876,4.63,880,3.12,948,4.232,983,2.717,992,4.409,993,4.786,994,3.686,995,4.81,996,4.232,997,4.612,998,4.612,999,4.612,1000,4.612,1001,5.488,1002,6.246,1003,5.825,1004,3.574,1005,2.562,1006,5.964,1007,4.409,1008,4.397,1009,6.229,1011,4.624,1012,4.397,1014,4.397,1015,3.12,1016,4.046,1017,5.132,1018,5.488,1019,4.046,1020,4.612,1021,4.397,1022,4.397,1023,5.964,1024,5.964,1025,4.397,1026,3.574,1027,4.232,1028,3.783,1029,3.25,1030,4.397,1031,4.397,1032,4.397,1033,3.783,1034,3.25,1035,3.004,1036,4.397,1037,6.688,1038,4.93,1039,4.93,1040,4.93,1041,3.4]],["title/classes/File.html",[0,0.114,5,0.073]],["body/classes/File.html",[0,0.134,2,1.178,3,0.148,4,0.124,5,0.122,8,1.849,10,0.293,11,0.955,17,0.413,21,1.384,24,0.984,26,0.893,27,0.006,28,0.802,29,0.579,32,3.596,36,1.003,44,0.331,48,0.14,50,1.913,59,0.005,60,0.005,84,1.383,87,0.533,169,2.392,172,1.705,208,3.137,209,1.523,210,2.276,211,2.537,212,2.599,214,2.599,216,3.129,217,1.43,218,1.75,222,3.368,242,3.005,243,2.343,245,3.07,247,2.076,248,2.428,251,2.8,252,2.101,385,2.943,388,2.325,407,2.876,408,2.876,409,2.876,410,2.876,418,2.276,420,3.042,437,2.539,441,3.134,442,3.134,486,4.607,538,2.956,539,3.749,1042,4.667,1043,6.609,1044,7.351,1045,5.687,1046,3.465,1047,5.072]],["title/interfaces/GlobalConstants.html",[87,0.457,1048,3.736]],["body/interfaces/GlobalConstants.html",[3,0.175,4,0.147,5,0.101,10,0.347,11,1.063,17,0.398,27,0.006,29,0.932,36,1.142,44,0.274,48,0.166,59,0.005,60,0.005,76,1.808,87,0.633,89,1.874,1048,6.759,1049,5.537,1050,8.366,1051,8.366,1052,8.366,1053,6.715,1054,6.747,1055,6.715,1056,3.609,1057,4.891]],["title/classes/GlobalErrorFilter.html",[0,0.114,923,3.529]],["body/classes/GlobalErrorFilter.html",[0,0.119,1,4.491,2,0.694,3,0.087,4,0.073,5,0.05,9,4.311,10,0.172,11,0.658,12,2.093,13,2.973,15,2.882,16,2.172,17,0.331,18,1.149,24,0.647,26,0.795,27,0.006,28,0.549,29,0.515,41,1.26,43,5.131,44,0.334,46,0.694,48,0.082,52,1.607,53,2.71,54,4.513,59,0.003,60,0.003,61,2.57,65,2.208,66,5.031,68,1.791,73,2.57,74,2.987,76,2.112,83,1.529,84,1.447,87,0.314,150,3.176,189,2.792,216,1.147,234,1.237,247,0.946,248,1.106,252,1.237,271,5.074,281,3.368,302,2.979,308,5.59,341,2.431,345,1.693,491,2.728,549,2.494,550,2.561,551,2.431,552,2.431,553,1.649,588,2.348,680,2.633,805,2.428,821,3.368,900,4.963,913,2.748,921,4.457,923,3.672,978,1.791,984,4.697,987,2.987,994,1.846,1015,2.119,1058,5.227,1059,2.428,1060,6.109,1061,5.614,1062,5.014,1063,5.065,1064,3.349,1065,5.065,1066,6.109,1067,6.811,1068,3.349,1069,6.109,1070,3.349,1071,3.349,1072,2.987,1073,2.987,1074,3.349,1075,3.349,1076,2.748,1077,2.987,1078,2.748,1079,6.133,1080,2.748,1081,2.309,1082,2.987,1083,3.493,1084,2.748,1085,2.428,1086,4.028,1087,2.208,1088,2.748,1089,2.987,1090,4.518,1091,2.987,1092,2.748,1093,2.987,1094,2.987,1095,2.987,1096,2.987,1097,2.987,1098,3.593,1099,4.157,1100,3.349,1101,3.349,1102,4.157,1103,5.614,1104,3.349,1105,3.349,1106,3.349,1107,4.157,1108,3.349,1109,3.349,1110,5.065,1111,3.349,1112,3.349,1113,2.428,1114,4.518,1115,2.428,1116,2.987,1117,2.208,1118,2.119,1119,4.518,1120,2.748,1121,4.518,1122,2.987,1123,3.888,1124,2.987,1125,2.987,1126,2.57,1127,2.748,1128,2.987,1129,2.987,1130,2.748,1131,2.748,1132,2.748,1133,2.57,1134,2.987,1135,2.987,1136,2.987,1137,2.987,1138,6.525,1139,2.748,1140,6.525,1141,2.987,1142,2.748,1143,2.987,1144,3.349,1145,3.349,1146,3.349,1147,5.065,1148,3.349,1149,3.349]],["title/classes/GlobalValidationPipe.html",[0,0.114,1150,3.736]],["body/classes/GlobalValidationPipe.html",[0,0.195,1,3.892,2,1.223,3,0.153,4,0.128,5,0.088,8,1.894,11,0.767,17,0.375,21,2.018,23,5.192,24,0.625,27,0.006,44,0.306,46,1.223,48,0.145,50,1.985,53,4.671,59,0.005,60,0.005,64,1.915,68,3.157,73,4.53,83,0.99,84,1.11,211,2.091,234,2.782,247,2.127,261,3.358,301,5.458,367,4.428,529,3.462,587,2.635,608,3.882,633,3.253,639,4.587,754,2.907,936,2.833,978,3.157,1011,3.596,1027,3.735,1034,3.892,1150,5.778,1151,6.715,1152,5.264,1153,6.179,1154,4.587,1155,6.179,1156,6.179,1157,6.179,1158,4.765,1159,8.291,1160,5.902,1161,5.192,1162,4.844,1163,5.902,1164,4.07,1165,5.902,1166,5.902,1167,5.902,1168,5.902,1169,4.53,1170,4.279,1171,4.279,1172,5.902,1173,4.279,1174,5.902,1175,4.844,1176,3.596,1177,5.264,1178,4.279,1179,3.471,1180,5.902,1181,5.902]],["title/classes/GridElement.html",[0,0.114,694,2.863]],["body/classes/GridElement.html",[0,0.183,2,0.917,3,0.115,4,0.096,5,0.066,10,0.228,11,0.806,16,2.911,17,0.402,18,1.167,21,1.077,24,0.941,26,0.695,27,0.006,28,0.398,29,0.45,31,2.917,36,1.052,41,1.327,44,0.18,48,0.214,59,0.004,60,0.004,83,1.424,87,0.582,162,2.777,209,1.936,234,1.635,327,3.531,388,1.809,412,2.602,417,2.918,438,2.124,456,4.991,530,4.291,538,2.3,662,2.439,663,2.918,664,3.928,665,3.208,666,6.152,667,4.919,668,3.928,670,5.37,674,5.852,675,4.093,676,5.18,677,5.746,678,6.318,679,2.602,680,3.727,681,2.918,682,3.208,683,2.8,684,2.439,685,3.208,686,2.918,687,3.208,688,4.5,689,3.208,690,2.696,691,5.934,692,5.515,693,5.746,694,3.651,695,4.5,696,4.5,697,3.208,698,4.537,699,4.537,700,3.208,701,4.5,702,3.208,1182,6.207,1183,4.425,1184,4.425,1185,4.425,1186,4.425,1187,4.425,1188,4.425]],["title/interfaces/HtmlMailContent.html",[87,0.457,105,2.966]],["body/interfaces/HtmlMailContent.html",[3,0.162,4,0.136,5,0.093,8,2.308,10,0.322,11,1.013,17,0.353,27,0.006,28,0.562,29,0.794,36,1.167,48,0.153,59,0.005,60,0.005,87,0.89,88,4.754,89,1.735,90,3.953,91,5.185,92,5.145,93,4.118,94,4.118,95,4.754,96,4.118,97,4.118,98,4.118,99,5.431,100,3.953,101,4.118,102,4.754,103,6.049,104,6.049,105,5.185,106,4.174,107,3.953,108,4.118,109,4.118,110,4.118]],["title/interfaces/ICourseGroupProperties.html",[87,0.457,460,3.736]],["body/interfaces/ICourseGroupProperties.html",[0,0.145,3,0.16,4,0.134,5,0.092,8,1.549,10,0.317,11,1.005,17,0.401,27,0.006,29,0.787,44,0.371,48,0.19,50,2.072,59,0.005,60,0.005,83,1.033,84,1.158,87,0.578,89,1.711,169,2.463,172,1.794,210,3.096,217,1.946,218,1.895,219,2.815,222,2.803,252,2.276,376,3.524,380,5.374,385,2.466,396,3.376,399,2.956,401,4.727,414,2.629,415,3.622,416,2.466,418,2.466,420,3.295,437,2.75,440,4.248,447,4.727,448,4.727,457,3.622,458,5.055,459,5.493,460,6.49,462,3.295,463,3.898,466,3.295,467,4.465,468,4.727,469,4.727,470,5.493]],["title/interfaces/ICourseProperties.html",[87,0.457,386,3.736]],["body/interfaces/ICourseProperties.html",[0,0.106,3,0.117,4,0.098,5,0.067,8,1.134,10,0.44,11,0.817,17,0.41,21,1.098,27,0.006,28,0.804,29,0.954,31,1.387,36,1.119,44,0.335,48,0.111,50,1.516,59,0.004,60,0.004,64,2.899,76,0.996,83,1.055,84,1.362,87,0.423,89,1.252,162,1.869,169,2.553,172,1.458,209,1.501,216,2.684,217,1.134,218,1.387,222,2.279,232,2.466,247,2.411,252,2.676,268,2.343,363,2.651,376,1.634,377,3.46,378,5.068,379,3.397,380,4.847,381,5.975,382,5.684,383,3.109,384,3.109,385,1.805,386,5.558,389,5.609,391,5.609,393,5.609,396,3.42,397,2.061,399,3.476,401,3.46,403,4.021,405,4.021,414,1.924,415,2.651,416,1.805,417,2.973,418,1.805,419,2.747,420,2.412,421,4.146,422,5.609,423,4.021,424,3.46,425,4.021,426,3.109,427,4.021,428,4.021,429,3.7,430,3.268,431,3.268,432,3.109,433,4.021,434,4.021,435,3.7,436,3.7,437,2.013,438,2.164,439,2.747,440,4.994,441,3.466,442,3.466,443,5.609,444,5.609,445,3.46,446,2.747,447,3.46,448,3.46,449,4.021,450,4.021,451,4.021,452,4.021,453,5.609,454,5.609,455,4.021,456,2.651]],["title/interfaces/ICreateNews.html",[87,0.457,1189,3.357]],["body/interfaces/ICreateNews.html",[3,0.148,4,0.124,5,0.085,10,0.294,11,0.958,16,3.068,17,0.437,27,0.006,29,0.831,36,1.065,44,0.35,48,0.219,59,0.005,60,0.005,64,1.855,87,0.858,89,1.588,162,2.428,163,3.541,164,4.022,165,4.976,172,1.326,209,1.185,243,2.603,376,2.96,379,3.018,412,4.339,438,2.745,483,3.438,484,3.989,485,4.25,487,4.616,514,2.816,523,3.824,525,3.484,1189,5.088,1190,4.145,1191,6.58,1192,5.1,1193,5.1,1194,5.1,1195,3.943,1196,3.943,1197,4.145,1198,4.145,1199,3.619,1200,5.1,1201,3.943,1202,3.77,1203,2.745]],["title/interfaces/ICurrentUser.html",[87,0.457,1204,2.461]],["body/interfaces/ICurrentUser.html",[3,0.151,4,0.127,5,0.087,10,0.3,11,0.97,17,0.423,27,0.006,28,0.524,36,1.175,44,0.237,48,0.213,59,0.005,60,0.005,87,0.773,89,1.618,166,3.052,169,2.414,173,3.972,182,4.922,209,1.905,242,2.381,243,2.379,245,2.432,397,4.272,1204,3.775,1205,4.223,1206,5.499,1207,4.778,1208,5.149,1209,5.406,1210,4.171,1211,5.993,1212,5.149,1213,4.78,1214,4.922,1215,3.686,1216,3.686,1217,4.223]],["title/interfaces/IDashboardRepo.html",[87,0.457,832,3.529]],["body/interfaces/IDashboardRepo.html",[0,0.172,3,0.147,4,0.123,5,0.085,10,0.292,12,1.941,18,1.379,24,0.6,27,0.006,41,1.048,44,0.362,46,1.174,48,0.18,57,2.653,59,0.005,60,0.005,76,2.052,83,1.443,84,1.066,87,0.531,89,1.574,152,1.52,155,2.218,162,2.18,172,1.314,174,2.556,186,1.655,191,2.638,209,1.52,210,2.268,217,1.425,219,2.59,232,2.876,254,3.907,266,4.172,268,2.945,270,4.348,288,4.65,300,3.223,647,4.172,662,4.74,668,5.146,679,3.332,680,2.945,694,4.313,725,3.452,772,4.108,781,6.019,785,4.65,819,3.907,820,4.65,821,3.123,823,7.31,825,5.053,827,5.053,831,5.053,832,5.895,833,3.586,834,3.452,835,3.907,836,3.586,837,5.053,838,4.65,839,5.053,840,5.053,841,7.253,842,5.053,843,6.541,844,6.541,845,5.053,846,5.053,847,5.053,848,5.053,849,4.108,850,2.79,1218,5.666]],["title/interfaces/IErrorType.html",[87,0.457,310,3.529]],["body/interfaces/IErrorType.html",[3,0.183,4,0.154,5,0.105,10,0.364,11,1.093,12,3.078,16,3.307,17,0.44,27,0.006,36,1.15,48,0.173,55,6.742,59,0.005,60,0.005,87,0.663,89,1.963,310,6.101,1219,6.305,1220,6.305]],["title/interfaces/IFileProperties.html",[87,0.457,1043,3.736]],["body/interfaces/IFileProperties.html",[0,0.154,3,0.17,4,0.143,5,0.12,8,1.651,10,0.338,11,1.045,17,0.393,27,0.006,28,0.837,36,1.056,44,0.353,48,0.161,50,2.207,59,0.005,60,0.005,87,0.616,89,1.823,169,2.585,172,1.866,216,2.98,217,1.651,218,2.019,222,2.916,385,2.627,418,2.627,420,3.51,437,2.93,441,3.617,442,3.617,486,4.978,538,3.411,539,4.327,1042,5.385,1043,6.677,1046,3.998,1047,5.852]],["title/interfaces/IFindOptions.html",[87,0.457,1221,3.209]],["body/interfaces/IFindOptions.html",[3,0.177,4,0.148,5,0.102,10,0.351,11,1.068,17,0.4,27,0.006,29,0.934,31,2.531,48,0.225,59,0.005,60,0.005,87,0.772,89,1.89,514,3.352,1199,4.307,1221,5.423,1222,4.934,1223,4.934,1224,5.401,1225,5.224,1226,7.536,1227,6.658,1228,4.487,1229,4.487,1230,4.934,1231,6.75,1232,6.75]],["title/interfaces/IGridElement.html",[87,0.457,670,3.08]],["body/interfaces/IGridElement.html",[0,0.19,3,0.126,4,0.105,5,0.072,10,0.249,11,0.857,16,3.005,17,0.382,27,0.006,31,2.796,36,1.073,44,0.196,48,0.219,59,0.004,60,0.004,83,1.464,87,0.619,89,1.344,162,2.701,209,1.91,234,1.787,327,3.756,388,1.978,417,3.19,438,2.322,456,5.131,530,3.701,538,2.515,662,2.667,663,3.19,664,4.178,665,3.507,666,6.325,667,4.757,668,4.178,670,5.521,674,5.829,675,4.353,676,5.349,677,5.324,678,6.473,679,2.845,680,3.432,681,3.19,682,3.507,683,3.062,684,2.667,685,3.507,686,3.19,687,3.507,688,4.787,689,3.507,690,2.948,691,6.128,692,5.349,693,5.573,694,2.845,695,4.787,696,4.787,697,3.507,698,3.062,699,3.062,700,3.507,701,4.787,702,3.507,1098,5.131]],["title/interfaces/IGridElementReference.html",[87,0.457,677,3.209]],["body/interfaces/IGridElementReference.html",[0,0.192,3,0.128,4,0.108,5,0.074,10,0.255,11,0.87,16,3.029,17,0.344,27,0.006,31,2.811,36,1.078,44,0.201,48,0.22,59,0.004,60,0.004,83,1.473,87,0.629,89,1.374,162,2.715,209,1.919,234,1.827,327,3.813,388,2.022,417,3.261,438,2.374,456,5.164,530,3.744,538,2.571,662,2.726,663,3.261,664,4.241,665,3.585,666,5.511,667,4.811,668,4.241,670,5.39,674,5.874,675,4.419,676,5.39,677,5.616,678,6.511,679,2.908,680,3.484,681,3.261,682,3.585,683,3.13,684,2.726,685,3.585,686,3.261,687,3.585,688,4.859,689,3.585,690,3.013,691,4.859,692,5.39,693,5.616,694,2.908,695,4.859,696,4.859,697,3.585,698,3.13,699,3.13,700,3.585,701,4.859,702,3.585,1098,3.942]],["title/interfaces/ILogger.html",[87,0.457,1233,3.736]],["body/interfaces/ILogger.html",[3,0.154,4,0.129,5,0.088,10,0.305,15,5.138,17,0.408,18,1.419,24,0.956,26,1.418,27,0.006,28,0.812,29,0.976,36,1.161,41,1.671,48,0.145,54,3.45,59,0.005,60,0.005,87,0.556,89,1.646,312,5.43,906,5.294,1233,5.792,1234,5.284,1235,5.792,1236,4.976,1237,7.547,1238,7.547,1239,5.925,1240,5.925,1241,6.731,1242,6.816,1243,5.925,1244,6.731,1245,5.925,1246,5.925,1247,5.925,1248,6.731,1249,5.925,1250,5.284,1251,5.284]],["title/interfaces/INewsProperties.html",[87,0.457,521,3.209]],["body/interfaces/INewsProperties.html",[0,0.17,3,0.098,4,0.175,5,0.057,8,1.821,10,0.195,11,0.721,16,2.864,17,0.418,27,0.006,28,0.499,29,0.868,36,1.098,44,0.347,48,0.189,50,1.274,59,0.003,60,0.003,83,0.636,84,1.236,87,0.355,89,1.052,162,2.631,163,3.475,164,3.237,166,1.549,169,2.418,172,1.787,190,2.613,209,0.785,216,2.851,217,0.953,218,1.166,222,2.013,229,3.624,234,2.429,243,2.307,300,3.159,327,2.155,376,2.013,379,3.353,385,1.517,388,1.549,396,2.869,397,1.732,414,1.617,416,2.223,418,1.517,419,2.309,420,2.027,439,3.384,446,2.309,462,2.027,466,2.027,481,2.228,482,2.613,483,3.44,484,3.952,485,3.966,486,4.308,487,4.123,488,5.587,489,5.315,490,5.31,491,1.692,495,2.613,496,3.662,497,2.613,500,2.747,501,3.515,502,2.747,503,2.613,504,1.866,505,2.498,506,2.613,510,4.118,511,4.581,514,2.735,516,2.498,518,2.747,520,2.747,521,4.773,523,2.6,524,2.747,525,4.696,526,2.747,527,1.97,528,2.613,529,1.582,530,1.866,531,2.498,532,2.398,533,2.747,534,2.747,535,2.747,536,2.747,537,2.747,538,1.97,539,2.498,540,2.747,541,2.747,542,2.747,543,2.747,544,2.747,545,2.747,546,2.747,547,2.747,548,4.026,549,3.237,550,3.324,551,3.156,552,3.156,553,3.237,554,4.006,555,3.74,556,2.747,557,4.026,558,2.747,559,2.747,560,4.766,561,2.309,562,2.309,563,2.747]],["title/interfaces/INewsScope.html",[87,0.457,1201,3.357]],["body/interfaces/INewsScope.html",[3,0.151,4,0.127,5,0.087,10,0.301,11,0.971,16,2.075,17,0.432,27,0.006,29,0.936,36,0.87,44,0.353,48,0.221,59,0.005,60,0.005,64,1.893,87,0.863,89,1.621,162,2.451,163,3.588,164,4.061,165,5.298,172,1.353,209,1.209,243,1.86,376,2.989,379,3.047,412,4.396,438,2.801,483,3.398,484,4.014,485,2.874,487,3.122,514,2.874,523,3.861,525,3.556,1189,4.025,1190,4.231,1191,5.205,1192,5.205,1193,5.205,1194,5.205,1195,4.025,1196,4.025,1197,4.231,1198,4.231,1199,3.693,1200,6.667,1201,5.155,1202,5.733,1203,3.958]],["title/interfaces/IPagination.html",[87,0.457,1227,3.529]],["body/interfaces/IPagination.html",[3,0.177,4,0.148,5,0.102,10,0.351,11,1.068,17,0.4,27,0.006,29,0.934,31,2.94,48,0.225,59,0.005,60,0.005,87,0.772,89,1.89,514,3.352,1199,4.307,1221,4.487,1222,4.934,1223,4.934,1224,4.003,1225,3.872,1226,6.75,1227,6.409,1228,6.055,1229,6.055,1230,4.934,1231,6.75,1232,6.75]],["title/interfaces/IParentDescriptionsProperties.html",[87,0.457,1252,3.357]],["body/interfaces/IParentDescriptionsProperties.html",[0,0.125,3,0.138,4,0.115,5,0.079,8,1.333,10,0.273,11,0.912,17,0.413,27,0.006,28,0.806,29,0.714,31,1.63,36,1.113,44,0.364,48,0.193,50,1.782,59,0.004,60,0.004,64,2.718,84,0.997,87,0.738,89,1.472,162,2.663,172,1.628,209,1.806,216,2.87,217,1.333,218,1.63,222,2.544,243,2.237,252,1.958,376,2.853,378,4.619,383,3.654,384,3.654,385,2.121,396,3.063,399,2.544,414,2.262,416,2.121,418,2.121,437,2.366,441,2.921,442,2.921,462,2.835,463,3.354,466,2.835,527,2.754,529,2.213,588,2.698,714,3.494,983,2.921,1056,2.835,1203,3.369,1252,5.428,1253,3.842,1254,4.805,1255,4.067,1256,3.993,1257,4.067,1258,4.841,1259,4.442,1260,4.628,1261,4.277,1262,3.654,1263,4.067,1264,3.842,1265,3.134,1266,4.067,1267,4.067,1268,3.654,1269,2.68,1270,4.067,1271,4.067,1272,4.067,1273,5.387,1274,4.067,1275,4.067,1276,4.067,1277,4.067,1278,4.067,1279,4.067]],["title/interfaces/IResolvedUser.html",[87,0.457,1211,3.357]],["body/interfaces/IResolvedUser.html",[3,0.149,4,0.125,5,0.086,10,0.296,11,0.96,17,0.435,27,0.006,28,0.516,36,1.172,44,0.233,48,0.212,59,0.005,60,0.005,87,0.767,89,1.594,166,3.656,169,1.594,173,2.623,182,3.784,209,1.93,242,3.532,243,2.918,245,3.609,397,4.185,1204,2.902,1205,4.161,1206,3.632,1207,4.759,1208,3.958,1209,4.812,1210,3.927,1211,5.642,1212,3.958,1213,4.71,1214,5.698,1215,5.469,1216,5.469,1217,4.161]],["title/interfaces/IRole.html",[87,0.457,1214,3.209]],["body/interfaces/IRole.html",[3,0.161,4,0.135,5,0.093,10,0.32,11,1.011,17,0.402,27,0.006,28,0.801,36,1.169,44,0.253,48,0.218,59,0.005,60,0.005,87,0.797,89,1.728,166,3.182,169,1.728,173,2.843,182,4.102,209,1.965,242,2.543,243,2.48,245,2.598,397,3.883,1204,3.146,1205,4.51,1206,3.937,1207,4.415,1208,4.29,1209,4.996,1210,4.077,1211,5.368,1212,4.29,1213,5.105,1214,5.601,1215,3.937,1216,3.937,1217,4.51]],["title/interfaces/IRoleProperties.html",[87,0.457,1280,3.736]],["body/interfaces/IRoleProperties.html",[0,0.137,3,0.151,4,0.127,5,0.087,8,1.465,10,0.424,11,0.97,17,0.393,27,0.006,28,0.827,29,0.884,36,1.102,44,0.303,48,0.183,50,1.959,59,0.005,60,0.005,84,1.55,87,0.546,89,1.618,166,3.673,172,1.731,216,2.822,217,1.465,218,1.792,222,2.706,232,2.284,385,2.332,396,2.542,399,3.955,415,4.391,416,2.332,418,2.332,437,2.601,441,3.211,442,3.211,504,2.868,514,3.677,639,3.549,933,4.725,1098,3.426,1171,4.223,1207,5.01,1210,4.312,1280,6.324,1281,4.78,1282,5.195,1283,4.47,1284,4.223,1285,4.78,1286,4.223,1287,5.73,1288,6.659,1289,5.195,1290,5.195,1291,4.47]],["title/interfaces/ISubmissionProperties.html",[87,0.457,1292,3.736]],["body/interfaces/ISubmissionProperties.html",[0,0.104,3,0.115,4,0.096,5,0.133,8,1.113,10,0.228,11,0.806,17,0.426,27,0.006,29,0.951,31,2.518,36,1.052,44,0.345,48,0.109,50,1.488,59,0.004,60,0.004,76,1.372,83,0.742,84,1.349,87,0.415,89,1.229,169,2.47,172,1.44,216,2.663,217,1.113,218,1.361,222,2.25,252,2.872,385,1.771,388,1.809,396,3.703,399,3.442,414,1.889,415,2.602,416,1.771,418,1.771,420,2.367,437,1.976,440,3.052,457,5.495,496,2.918,538,2.3,850,3.531,983,4.512,1203,2.124,1256,2.517,1261,2.696,1265,4.089,1292,5.503,1293,3.631,1294,7.3,1295,6.717,1296,7.3,1297,7.772,1298,5.595,1299,7.772,1300,7.299,1301,3.947,1302,3.947,1303,3.947,1304,3.947,1305,3.947,1306,3.631,1307,3.947,1308,3.947,1309,5.094,1310,5.536,1311,3.947,1312,3.208,1313,3.947,1314,6.395,1315,4.764,1316,6.395,1317,5.536,1318,3.947,1319,3.947,1320,3.947,1321,3.947,1322,3.947,1323,3.947,1324,3.947,1325,3.396,1326,3.947,1327,3.947,1328,3.947]],["title/interfaces/ITaskParent.html",[87,0.457,1262,3.357]],["body/interfaces/ITaskParent.html",[0,0.122,3,0.135,4,0.113,5,0.078,8,1.308,10,0.268,11,0.9,17,0.392,18,1.304,24,0.825,26,0.817,27,0.006,28,0.748,29,0.529,31,2.133,36,1.009,41,1.443,44,0.362,48,0.191,50,1.749,59,0.004,60,0.004,64,1.687,84,0.978,87,0.732,89,1.445,162,2.747,172,1.608,173,2.378,209,1.795,216,2.849,217,1.308,218,1.6,222,2.513,243,2.21,252,1.922,376,2.826,378,2.867,383,5.736,384,5.736,385,2.082,396,3.026,399,2.497,414,2.22,416,2.082,418,2.082,437,2.323,441,2.867,442,2.867,462,2.783,463,3.292,466,2.783,527,2.704,529,2.172,588,2.665,714,3.43,983,2.867,1056,2.783,1203,3.743,1252,5.378,1253,3.771,1254,4.776,1255,3.992,1256,3.944,1257,3.992,1258,4.781,1259,4.388,1260,4.571,1261,4.225,1262,4.781,1263,5.321,1264,3.771,1265,3.096,1266,3.992,1267,3.992,1268,3.587,1269,2.63,1270,3.992,1271,3.992,1272,3.992,1273,5.321,1274,3.992,1275,3.992,1276,3.992,1277,3.992,1278,3.992,1279,3.992,1329,6.933,1330,5.202,1331,5.202,1332,5.202]],["title/interfaces/ITaskProperties.html",[87,0.457,1258,3.357]],["body/interfaces/ITaskProperties.html",[0,0.12,3,0.133,4,0.111,5,0.076,8,1.285,10,0.263,11,0.89,17,0.421,27,0.006,28,0.797,29,0.958,31,1.572,36,1.054,44,0.36,48,0.19,50,1.718,59,0.004,60,0.004,64,1.657,84,0.961,87,0.725,89,1.419,162,2.454,172,1.588,209,1.419,216,2.829,217,1.285,218,1.572,222,2.482,243,2.631,252,1.887,376,3.121,378,2.815,383,3.522,384,3.522,385,2.045,396,2.989,399,2.452,414,2.18,416,2.045,418,2.045,437,2.281,441,2.815,442,2.815,462,2.732,463,3.232,466,2.732,527,2.655,529,2.133,588,3.31,714,3.368,983,2.815,1056,2.732,1203,3.963,1252,4.724,1253,3.703,1254,5.192,1255,3.92,1256,4.697,1257,3.92,1258,5.329,1259,5.45,1260,5.678,1261,5.247,1262,3.522,1263,3.92,1264,3.703,1265,3.058,1266,3.92,1267,3.92,1268,3.522,1269,2.583,1270,3.92,1271,3.92,1272,3.92,1273,5.257,1274,3.92,1275,3.92,1276,3.92,1277,3.92,1278,3.92,1279,3.92]],["title/interfaces/ITaskStatus.html",[87,0.457,1333,3.736]],["body/interfaces/ITaskStatus.html",[0,0.158,3,0.175,4,0.146,5,0.1,10,0.347,11,1.061,17,0.398,27,0.006,31,3.016,44,0.273,48,0.165,59,0.005,60,0.005,87,0.631,89,1.87,1265,4.186,1325,5.167,1333,7.022,1334,5.525,1335,5.525,1336,6.633,1337,6.633,1338,6.633,1339,6.004,1340,4.643,1341,5.801,1342,6.004,1343,6.004]],["title/interfaces/IUserProperties.html",[87,0.457,1344,3.736]],["body/interfaces/IUserProperties.html",[0,0.132,3,0.145,4,0.122,5,0.084,8,1.41,10,0.457,11,0.946,17,0.419,27,0.006,28,0.728,29,0.871,36,1.13,44,0.348,48,0.179,50,1.885,59,0.005,60,0.005,84,1.054,87,0.526,89,1.557,169,1.557,172,1.689,216,2.934,217,1.41,218,1.724,222,2.639,252,2.071,379,3.538,385,2.244,396,3.178,397,2.562,399,2.69,414,2.392,415,3.296,416,2.244,418,2.244,419,3.415,437,2.502,439,3.415,445,4.301,446,3.415,933,4.609,1207,4.729,1209,3.296,1210,4.111,1215,5.618,1216,5.618,1287,4.301,1291,4.301,1344,6.208,1345,4.599,1346,6.122,1347,4.999,1348,4.999,1349,4.999,1350,4.999,1351,4.999,1352,4.999,1353,4.999,1354,4.999,1355,4.999,1356,4.999]],["title/interfaces/InlineAttachment.html",[87,0.457,95,2.966]],["body/interfaces/InlineAttachment.html",[3,0.164,4,0.137,5,0.094,8,2.316,10,0.326,11,1.021,17,0.286,27,0.006,28,0.569,36,1.163,48,0.155,59,0.005,60,0.005,87,0.893,88,4.79,89,1.756,90,4.001,91,5.455,92,6.071,93,4.168,94,4.168,95,5.214,96,4.168,97,5.903,98,4.168,99,5.214,100,4.001,101,4.168,102,4.79,103,5.184,104,5.184,105,4.79,106,4.206,107,4.001,108,4.168,109,4.168,110,4.168]],["title/modules/InterceptorModule.html",[111,1.398,353,3.529]],["body/modules/InterceptorModule.html",[0,0.151,3,0.167,4,0.14,5,0.096,27,0.006,44,0.35,46,1.332,48,0.158,59,0.005,60,0.005,64,2.085,73,4.932,111,2.281,113,2.627,125,2.869,231,4.839,232,2.52,261,3.656,345,4.553,353,5.758,367,4.671,368,6.249,754,3.911,834,3.916,880,4.067,889,5.477,891,4.128,926,6.095,1154,4.839,1269,4.016,1357,6.426,1358,6.518,1359,5.477,1360,6.095,1361,4.671,1362,9.004,1363,5.477,1364,6.518,1365,6.91]],["title/injectables/JwtAuthGuard.html",[152,1.008,1366,3.736]],["body/injectables/JwtAuthGuard.html",[0,0.175,3,0.193,4,0.161,5,0.111,8,1.867,27,0.006,44,0.352,46,1.538,48,0.182,59,0.005,60,0.005,128,5.697,152,1.794,153,2.743,1366,6.647,1367,6.62,1368,6.62,1369,7.423,1370,7.423]],["title/interfaces/JwtConstants.html",[87,0.457,133,3.357]],["body/interfaces/JwtConstants.html",[3,0.165,4,0.138,5,0.095,10,0.328,11,1.025,17,0.406,27,0.006,36,1.13,44,0.258,48,0.194,59,0.005,60,0.005,76,1.744,87,0.597,89,1.767,133,6.187,150,3.306,173,2.907,232,2.494,412,4.641,529,2.656,1206,4.994,1371,5.22,1372,8.227,1373,7.079,1374,7.039,1375,6.361,1376,6.361,1377,5.22,1378,4.387,1379,6.477,1380,5.22,1381,4.611,1382,4.194,1383,6.361,1384,5.673,1385,5.673,1386,5.673,1387,6.361,1388,5.673,1389,4.611,1390,4.882,1391,6.361,1392,5.22,1393,6.361,1394,5.22,1395,5.673,1396,6.361,1397,6.361,1398,5.673,1399,5.673]],["title/interfaces/JwtPayload.html",[87,0.457,1400,3.736]],["body/interfaces/JwtPayload.html",[3,0.162,4,0.136,5,0.093,8,1.965,10,0.322,11,1.015,17,0.423,27,0.006,31,2.881,36,1.147,44,0.254,48,0.154,59,0.005,60,0.005,87,0.587,89,1.738,186,1.829,232,3.498,1204,4.307,1384,7.956,1385,7.956,1386,7.956,1388,7.956,1389,6.467,1390,6.846,1394,6.411,1395,6.968,1400,5.996,1401,5.582,1402,5.582,1403,6.411]],["title/injectables/JwtStrategy.html",[119,3.529,152,1.008]],["body/injectables/JwtStrategy.html",[0,0.132,3,0.145,4,0.122,5,0.084,8,1.41,10,0.289,12,2.495,17,0.329,18,1.37,21,1.365,24,0.771,26,1.143,27,0.006,28,0.655,29,0.741,41,1.037,44,0.376,46,1.161,48,0.138,50,1.885,59,0.005,60,0.005,76,1.609,83,0.94,119,5.28,120,6.388,128,4.301,131,4.999,133,3.865,134,4.599,136,4.999,152,1.509,153,2.071,155,2.446,169,1.557,174,2.164,188,2.34,191,2.362,232,2.856,233,4.602,588,2.154,978,2.998,1158,3.547,1169,4.301,1206,3.547,1210,2.69,1360,5.589,1390,5.589,1400,6.573,1404,4.999,1405,5.605,1406,6.274,1407,5.605,1408,7.282,1409,5.605,1410,7.638,1411,5.605,1412,4.301,1413,4.999,1414,5.334,1415,5.605,1416,5.605,1417,5.605,1418,5.605,1419,5.605,1420,5.605,1421,5.605,1422,5.605,1423,5.605,1424,5.605,1425,4.999,1426,5.605,1427,4.301,1428,4.437,1429,5.605,1430,5.605,1431,4.599,1432,5.605,1433,4.999,1434,2.913,1435,4.999,1436,5.605,1437,4.999,1438,3.296]],["title/injectables/JwtValidationAdapter.html",[120,3.357,152,1.008]],["body/injectables/JwtValidationAdapter.html",[0,0.126,3,0.139,4,0.116,5,0.08,10,0.276,17,0.319,18,1.329,24,0.748,26,1.109,27,0.006,28,0.636,29,0.719,36,1.122,41,1.308,44,0.287,46,1.109,48,0.131,59,0.004,60,0.004,64,1.737,76,1.562,120,4.874,152,1.464,153,1.978,155,2.717,174,2.501,189,3.896,191,2.293,209,1.743,231,5.126,233,4.02,549,3.48,550,3.574,551,3.392,552,3.392,553,3.48,554,4.306,615,4.306,899,5.547,978,2.864,1169,5.424,1176,4.306,1206,5.325,1208,4.874,1209,4.156,1390,7.221,1403,5.8,1414,6.131,1439,6.492,1440,4.394,1441,7.067,1442,7.067,1443,7.067,1444,5.354,1445,7.067,1446,5.354,1447,7.067,1448,4.156,1449,5.8,1450,5.424,1451,5.124,1452,7.067,1453,7.067,1454,6.303,1455,6.303,1456,5.354,1457,7.067,1458,5.354,1459,5.354,1460,7.067,1461,5.354,1462,5.354,1463,5.354,1464,5.354]],["title/modules/LearnroomModule.html",[111,1.398,1465,3.529]],["body/modules/LearnroomModule.html",[0,0.159,3,0.175,4,0.147,5,0.101,27,0.006,44,0.372,46,1.398,48,0.166,59,0.005,60,0.005,111,2.35,113,2.758,114,3.74,121,4.51,122,3.507,123,3.013,125,3.653,126,3.238,643,6.759,644,4.029,652,6.575,653,6.017,819,5.643,858,6.017,891,3.507,926,5.178,1465,6.913,1466,6.017,1467,6.017,1468,6.747,1469,6.747,1470,6.747]],["title/classes/Lesson.html",[0,0.114,1254,2.683]],["body/classes/Lesson.html",[0,0.131,2,1.157,3,0.145,4,0.121,5,0.083,8,1.827,10,0.288,11,0.944,17,0.401,21,1.36,24,0.98,26,0.877,27,0.006,28,0.502,29,0.568,32,3.571,36,0.65,44,0.328,48,0.137,50,1.878,59,0.005,60,0.005,84,1.366,87,0.524,172,1.685,208,3.101,209,1.505,210,2.235,211,2.524,212,2.553,214,2.553,216,2.93,217,1.405,218,1.718,222,3.354,242,2.97,243,2.315,245,3.034,247,2.281,248,2.667,251,2.75,252,2.684,376,3.401,385,2.908,388,2.283,396,3.171,407,2.824,408,2.824,409,2.824,410,2.824,414,2.383,418,2.235,437,2.493,462,3.886,463,4.598,466,2.987,468,4.286,469,4.286,978,3.886,1203,2.681,1254,4.005,1471,4.583,1472,5.898,1473,6.564,1474,7.265,1475,5.584,1476,4.049,1477,6.48,1478,4.981]],["title/interfaces/LessonProperties.html",[87,0.457,1473,3.736]],["body/interfaces/LessonProperties.html",[0,0.151,3,0.167,4,0.14,5,0.096,8,1.62,10,0.332,11,1.033,17,0.39,27,0.006,29,0.809,44,0.35,48,0.158,50,2.166,59,0.005,60,0.005,87,0.604,89,1.789,172,1.844,216,2.724,217,1.62,218,1.981,222,2.882,252,2.379,376,3.549,385,2.578,396,2.81,414,2.748,418,2.578,437,2.875,462,3.445,463,4.075,466,3.445,468,4.942,469,4.942,978,3.445,1203,4.141,1254,3.55,1471,5.285,1472,6.384,1473,6.622,1476,4.669,1477,7.093,1478,5.743]],["title/injectables/Logger.html",[152,1.008,900,2.769]],["body/injectables/Logger.html",[0,0.15,3,0.165,4,0.138,5,0.095,8,1.985,18,1.196,27,0.006,44,0.32,46,1.318,48,0.156,59,0.005,60,0.005,152,1.635,153,2.35,184,4.025,189,4.35,234,2.35,247,1.797,307,3.053,344,3.132,576,3.444,680,4.102,754,3.886,887,3.217,900,5.348,906,4.59,937,3.876,997,4.387,1027,4.025,1158,4.025,1233,6.885,1236,5.657,1448,3.741,1479,5.673,1480,8.972,1481,6.361,1482,6.361,1483,4.387,1484,4.882,1485,5.673,1486,4.882,1487,5.673,1488,4.194,1489,4.194,1490,7.039,1491,4.611,1492,6.361,1493,6.361,1494,5.673,1495,4.611,1496,5.673,1497,4.025,1498,6.361,1499,6.361,1500,6.361]],["title/modules/LoggerModule.html",[111,1.398,354,3.08]],["body/modules/LoggerModule.html",[0,0.163,3,0.18,4,0.151,5,0.104,27,0.006,44,0.338,46,1.438,48,0.17,59,0.005,60,0.005,111,2.391,113,2.838,114,3.805,121,4.589,122,3.609,123,3.1,125,3.717,147,4.589,354,6.142,900,5.677,1501,6.192,1502,6.192,1503,6.192,1504,6.943,1505,6.943]],["title/interfaces/Mail.html",[87,0.457,106,2.604]],["body/interfaces/Mail.html",[3,0.152,4,0.127,5,0.087,8,2.19,10,0.302,11,0.973,17,0.416,27,0.006,28,0.527,29,0.964,36,1.172,48,0.144,59,0.005,60,0.005,87,0.878,88,4.565,89,1.627,90,3.707,91,5.034,92,4.94,93,3.862,94,3.862,95,4.565,96,3.862,97,3.862,98,3.862,99,5.034,100,3.707,101,3.862,102,5.306,103,4.94,104,4.94,105,5.306,106,4.924,107,5.511,108,5.742,109,5.742,110,5.742]],["title/interfaces/MailAttachment.html",[87,0.457,91,2.966]],["body/interfaces/MailAttachment.html",[3,0.161,4,0.135,5,0.093,8,2.237,10,0.32,11,1.01,17,0.384,27,0.006,28,0.8,36,1.171,48,0.152,59,0.005,60,0.005,87,0.889,88,4.736,89,1.724,90,3.929,91,5.42,92,5.125,93,5.865,94,5.865,95,4.736,96,4.093,97,4.093,98,4.093,99,5.171,100,3.929,101,4.093,102,4.736,103,5.125,104,5.125,105,4.736,106,4.158,107,3.929,108,4.093,109,4.093,110,4.093]],["title/interfaces/MailContent.html",[87,0.457,99,2.966]],["body/interfaces/MailContent.html",[3,0.161,4,0.135,5,0.093,8,2.239,10,0.32,11,1.011,17,0.352,27,0.006,28,0.559,29,0.792,36,1.161,48,0.153,59,0.005,60,0.005,87,0.89,88,5.423,89,1.728,90,3.937,91,5.176,92,5.132,93,4.102,94,4.102,95,5.423,96,4.102,97,4.102,98,4.102,99,5.423,100,5.633,101,5.869,102,4.742,103,5.132,104,5.132,105,4.742,106,4.163,107,3.937,108,4.102,109,4.102,110,4.102]],["title/modules/MailModule.html",[111,1.398,1506,3.357]],["body/modules/MailModule.html",[0,0.143,3,0.158,4,0.132,5,0.091,17,0.38,18,1.143,24,0.643,26,0.954,27,0.006,28,0.69,29,0.618,36,0.978,41,1.124,44,0.341,46,1.259,48,0.149,59,0.005,60,0.005,76,1.694,83,1.286,87,0.57,111,2.414,113,2.483,125,2.713,126,2.916,147,3.349,491,3.424,891,3.158,892,4.404,1506,5.795,1507,4.404,1508,5.418,1509,6.293,1510,6.773,1511,6.075,1512,3.986,1513,6.449,1514,6.896,1515,4.404,1516,4.006,1517,5.795,1518,5.418,1519,5.559,1520,5.559,1521,5.559,1522,5.885,1523,4.986,1524,4.662,1525,4.986,1526,4.986,1527,6.293,1528,4.662,1529,4.986,1530,5.418,1531,5.418,1532,5.418]],["title/interfaces/MailModuleOptions.html",[87,0.457,1510,3.736]],["body/interfaces/MailModuleOptions.html",[0,0.141,3,0.156,4,0.13,5,0.089,10,0.309,11,0.987,17,0.41,27,0.006,28,0.539,36,1.119,44,0.339,46,1.242,48,0.147,59,0.005,60,0.005,76,1.68,83,1.275,87,0.562,89,1.665,111,2.399,125,2.676,126,2.877,147,3.304,491,2.676,891,3.115,892,4.345,1506,5.243,1507,4.345,1509,4.918,1510,6.408,1512,3.115,1513,5.835,1514,6.853,1515,4.345,1516,3.952,1517,5.758,1518,5.345,1519,6.57,1520,6.57,1521,6.57,1522,5.835,1523,4.918,1524,4.6,1525,4.918,1526,4.918,1527,6.239,1528,4.6,1529,4.918,1530,5.345,1531,5.345,1532,5.345]],["title/injectables/MailService.html",[152,1.008,1517,3.357]],["body/injectables/MailService.html",[0,0.147,3,0.162,4,0.136,5,0.093,10,0.322,12,2.673,17,0.353,18,1.468,21,1.9,24,0.826,26,1.225,27,0.006,28,0.702,29,0.794,36,0.908,41,1.156,44,0.346,46,1.294,48,0.153,59,0.005,60,0.005,87,0.586,106,4.768,152,1.617,153,2.308,155,2.573,174,2.319,191,2.026,529,2.608,588,2.999,754,3.842,857,3.806,875,5.611,1512,4.423,1515,4.528,1516,4.118,1517,5.381,1520,4.528,1521,4.528,1533,5.126,1534,6.403,1535,6.246,1536,8.346,1537,6.841,1538,6.246,1539,6.959,1540,6.246,1541,5.571,1542,5.571,1543,5.571,1544,5.571,1545,4.793]],["title/interfaces/MailServiceOptions.html",[87,0.457,1537,3.736]],["body/interfaces/MailServiceOptions.html",[0,0.154,3,0.17,4,0.142,5,0.097,10,0.337,11,1.042,12,2.749,17,0.363,21,1.591,27,0.006,36,1.102,44,0.353,46,1.354,48,0.16,59,0.005,60,0.005,87,0.613,89,1.815,106,4.292,152,1.663,155,1.976,174,1.942,191,2.12,529,2.729,588,3.084,754,3.218,857,3.981,875,4.308,1512,3.397,1515,4.737,1516,4.308,1517,4.506,1520,6.566,1521,6.566,1533,5.363,1536,7.745,1537,6.665,1539,5.828,1541,5.828,1542,5.828,1543,5.828,1544,5.828,1545,5.015]],["title/modules/MongoMemoryDatabaseModule.html",[111,1.398,1546,3.736]],["body/modules/MongoMemoryDatabaseModule.html",[0,0.114,3,0.126,4,0.106,5,0.073,12,1.665,17,0.299,18,0.914,21,1.183,24,0.701,26,0.763,27,0.006,28,0.437,29,0.495,41,1.226,44,0.363,46,1.007,48,0.199,59,0.004,60,0.004,76,1.871,83,1.357,84,0.914,111,2.324,113,1.987,125,2.17,126,2.333,147,2.679,155,2.278,174,1.969,181,2.526,186,1.42,191,2.444,217,1.666,218,1.495,220,3.73,232,1.906,312,2.859,491,2.957,527,2.526,588,2.896,680,2.526,836,4.192,850,2.394,857,4.036,880,3.076,887,3.349,891,3.443,899,4.367,1005,2.526,1117,3.205,1451,3.524,1497,3.076,1508,4.335,1509,5.436,1512,4.206,1513,6.497,1546,5.782,1547,6.183,1548,6.165,1549,6.183,1550,3.989,1551,7.216,1552,4.86,1553,8.466,1554,4.86,1555,5.907,1556,6.64,1557,6.72,1558,3.989,1559,6.72,1560,5.083,1561,7.973,1562,3.205,1563,5.436,1564,4.335,1565,5.907,1566,5.436,1567,5.083,1568,4.335,1569,3.73,1570,3.205,1571,3.524,1572,3.352,1573,3.989,1574,3.352,1575,3.989,1576,3.73,1577,5.907,1578,4.335,1579,4.335,1580,4.335,1581,4.86,1582,3.524,1583,4.86,1584,6.624,1585,5.436,1586,3.205,1587,3.352,1588,3.524,1589,4.335,1590,4.86,1591,4.86]],["title/classes/News.html",[0,0.114,483,1.798]],["body/classes/News.html",[0,0.156,2,0.66,3,0.083,4,0.156,5,0.047,8,1.799,10,0.164,11,0.633,16,2.683,17,0.422,18,0.917,21,0.775,24,0.977,26,0.765,27,0.006,28,0.679,29,0.862,32,2.772,36,1.051,41,0.589,44,0.329,48,0.176,50,1.071,59,0.003,60,0.003,83,0.534,84,1.346,87,0.299,162,1.973,163,3.77,164,3.716,166,2.421,169,2.181,172,1.659,190,2.196,208,2.081,209,1.375,210,1.275,211,2.485,212,1.455,214,1.455,216,3.065,217,0.801,218,0.98,222,2.846,229,3.265,234,2.188,242,1.993,243,2.28,245,2.036,247,1.673,248,1.956,251,1.568,252,1.176,300,2.773,327,1.811,376,1.767,379,3.131,385,1.951,388,2.713,396,3.293,397,2.228,407,1.61,408,1.61,409,1.61,410,1.61,414,1.359,416,2.657,418,1.275,419,1.94,420,1.703,439,3.609,446,1.94,462,1.703,466,1.703,481,1.873,482,2.196,483,3.466,484,3.784,485,3.716,486,3.827,487,3.55,488,4.812,489,4.577,490,4.717,491,2.645,492,3.741,495,3.362,496,4.376,497,3.362,500,3.534,501,4.2,502,3.534,503,3.362,504,2.401,505,3.214,506,3.362,510,3.37,511,3.749,514,2.917,516,3.214,518,3.534,520,3.534,521,5.178,523,2.283,524,2.309,525,4.044,526,2.309,527,1.655,528,2.196,529,1.33,530,2.401,531,3.214,532,3.085,533,2.309,534,2.309,535,2.309,536,2.309,537,2.309,538,1.655,539,2.099,540,2.309,541,2.309,542,2.309,543,2.309,544,2.309,545,2.309,546,2.309,547,2.309,548,3.534,549,2.917,550,2.995,551,2.843,552,2.843,553,2.917,554,3.609,555,3.37,556,2.309,557,3.534,558,2.309,559,2.309,560,4.294,561,1.94,562,1.94,563,2.309,1592,4.875,1593,3.184,1594,3.184,1595,3.184,1596,3.184,1597,3.184,1598,3.184,1599,3.184,1600,3.184,1601,3.184,1602,3.184,1603,3.184,1604,3.184]],["title/controllers/NewsController.html",[642,2.124,1605,3.736]],["body/controllers/NewsController.html",[0,0.087,3,0.096,4,0.081,5,0.055,10,0.191,11,0.711,12,1.273,17,0.346,18,1.03,24,0.809,26,1.2,27,0.006,28,0.688,29,0.778,36,1.009,41,1.415,44,0.345,46,0.77,48,0.091,59,0.003,60,0.003,66,3.115,76,1.947,83,1.283,84,0.699,155,2.807,169,2.357,171,2.929,172,1.27,174,2.619,186,1.086,188,1.552,189,3.018,191,2.48,209,1.134,211,2.124,379,2.65,479,3.465,483,3.492,504,2.696,523,2.564,531,3.61,576,3.337,587,2.903,605,4.946,608,3.873,635,1.74,642,1.622,644,1.83,646,2.352,650,2.352,651,2.695,657,2.695,660,5.868,821,3.954,992,2.451,1011,4.874,1153,3.05,1204,4.725,1225,4.08,1425,4.883,1605,4.202,1606,3.315,1607,5.799,1608,4.483,1609,6.501,1610,5.544,1611,3.717,1612,4.989,1613,3.717,1614,3.61,1615,5.558,1616,3.717,1617,5.475,1618,3.717,1619,7.134,1620,3.05,1621,4.946,1622,4.729,1623,3.717,1624,4.493,1625,3.717,1626,5.475,1627,3.717,1628,4.883,1629,4.539,1630,5.475,1631,3.776,1632,3.717,1633,5.2,1634,5.475,1635,3.717,1636,4.989,1637,3.315,1638,2.852,1639,5.273,1640,2.451,1641,3.05,1642,4.114,1643,3.315,1644,2.563,1645,2.695,1646,3.315,1647,3.315,1648,3.717,1649,3.315,1650,3.315,1651,3.315,1652,3.315,1653,5.886,1654,3.05,1655,3.315,1656,3.315,1657,3.315,1658,3.315,1659,3.315,1660,3.05,1661,3.05,1662,3.717,1663,6.501,1664,3.717,1665,3.717,1666,3.717,1667,5.475,1668,3.717]],["title/classes/NewsFilterQuery.html",[0,0.114,1621,3.357]],["body/classes/NewsFilterQuery.html",[0,0.173,2,1.178,3,0.148,4,0.124,5,0.085,10,0.293,11,0.955,17,0.368,24,0.862,27,0.006,29,0.929,36,1.003,44,0.35,48,0.14,59,0.005,60,0.005,64,2.893,76,1.257,163,4.28,164,4.011,165,4.963,171,3.932,187,3.465,209,1.523,211,2.263,483,3.375,484,3.845,514,2.8,620,5.07,623,4.652,624,4.652,625,5.678,628,5.906,629,6.033,630,4.323,634,5.678,635,2.663,637,7.067,638,6.033,639,3.465,640,4.123,641,3.344,1202,5.371,1203,3.529,1621,5.07,1669,7.067,1670,4.667,1671,5.687,1672,5.329,1673,6.556,1674,5.687,1675,5.687,1676,5.687,1677,5.687,1678,6.556,1679,7.351,1680,5.687,1681,7.351,1682,5.687,1683,7.351,1684,6.033,1685,5.687,1686,5.687]],["title/classes/NewsMapper.html",[0,0.114,1645,3.529]],["body/classes/NewsMapper.html",[0,0.111,2,0.978,3,0.122,4,0.103,5,0.07,10,0.243,16,2.309,17,0.361,18,1.221,24,0.846,26,1.255,27,0.006,28,0.719,29,0.813,41,1.479,44,0.352,48,0.116,59,0.004,60,0.004,76,1.766,83,1.341,84,0.888,163,3.116,164,3.654,165,3.956,169,1.311,186,1.379,187,2.876,379,1.744,483,3.096,484,2.899,485,3.197,487,3.473,491,4.218,587,2.899,605,5.512,608,4.231,745,4.281,748,3.112,749,3.112,1011,3.956,1189,5.118,1198,5.38,1201,5.512,1202,3.112,1621,5.512,1633,5.794,1644,5.512,1645,4.707,1687,4.21,1688,6.492,1689,6.492,1690,6.492,1691,6.492,1692,4.72,1693,6.492,1694,4.72,1695,6.492,1696,4.72,1697,6.492,1698,4.72,1699,3.623,1700,7.421,1701,3.623,1702,3.623,1703,4.21,1704,4.72,1705,4.72,1706,4.72,1707,4.72,1708,4.72,1709,4.21,1710,4.72,1711,4.72,1712,4.72,1713,4.72,1714,4.72,1715,4.21,1716,4.72,1717,4.21,1718,6.492,1719,4.72,1720,4.72,1721,4.72,1722,4.72,1723,4.72,1724,4.72,1725,4.72,1726,4.72,1727,3.874,1728,4.72,1729,3.874,1730,4.72,1731,4.21,1732,4.21,1733,6.492,1734,4.72,1735,4.72,1736,4.72,1737,6.492,1738,6.492,1739,6.492,1740,4.72,1741,4.72]],["title/modules/NewsModule.html",[111,1.398,1742,3.529]],["body/modules/NewsModule.html",[0,0.139,3,0.153,4,0.128,5,0.088,27,0.006,44,0.381,46,1.223,48,0.145,59,0.005,60,0.005,111,2.163,113,2.413,114,3.441,121,4.15,122,3.068,123,2.635,125,3.362,126,3.614,138,6.361,147,4.15,227,3.157,354,5.837,644,3.708,1161,4.07,1586,3.892,1605,6.702,1610,4.279,1642,6.185,1643,5.264,1742,7.119,1743,5.264,1744,5.902,1745,5.264,1746,5.264,1747,6.082,1748,5.902,1749,6.363,1750,5.902,1751,5.902,1752,5.264,1753,5.902,1754,5.902,1755,5.902,1756,5.902,1757,3.892,1758,3.892,1759,6.715,1760,5.902,1761,5.902,1762,5.902,1763,4.07]],["title/injectables/NewsRepo.html",[152,1.008,1747,3.209]],["body/injectables/NewsRepo.html",[0,0.081,3,0.09,4,0.075,5,0.051,8,1.303,10,0.178,11,0.673,17,0.402,18,0.974,24,0.953,26,1.379,27,0.006,28,0.79,29,0.894,32,3.547,41,1.647,44,0.328,46,0.715,48,0.085,59,0.003,60,0.003,76,1.877,83,1.043,84,0.649,152,1.073,153,1.274,155,2.842,162,2.055,172,1.603,174,2.611,178,4.101,181,3.594,186,1.008,189,3.428,191,2.694,209,1.073,217,1.303,218,1.061,247,0.974,248,1.139,254,6.138,256,5.547,257,3.572,258,4.619,259,4.619,260,4.619,261,2.946,262,4.619,263,4.619,264,4.619,270,2.647,271,6.163,273,3.076,275,3.076,277,3.076,279,3.076,281,2.855,282,3.076,284,3.076,286,3.076,312,3.046,322,4.768,379,2.875,478,2.101,479,3.278,481,3.658,483,3.325,484,3.792,486,2.77,490,3.415,527,1.793,528,4.768,531,4.558,561,3.789,562,3.789,576,2.26,587,2.313,588,2.39,593,4.558,610,3.046,743,5.306,922,2.183,974,4.509,1005,2.692,1079,4.773,1202,4.558,1203,2.985,1221,5.322,1224,3.046,1225,2.946,1512,4.415,1608,4.289,1672,2.5,1747,3.415,1764,3.076,1765,6.219,1766,5.179,1767,5.179,1768,3.449,1769,4.768,1770,3.449,1771,5.179,1772,3.449,1773,6.913,1774,4.619,1775,6.913,1776,5.179,1777,3.449,1778,3.449,1779,3.449,1780,3.449,1781,3.449,1782,3.449,1783,3.449,1784,3.449,1785,3.449,1786,3.449,1787,3.449,1788,3.449,1789,4.619,1790,3.449,1791,3.975,1792,3.449,1793,3.449,1794,5.179,1795,3.449,1796,5.179,1797,3.449,1798,3.449,1799,5.179,1800,5.179,1801,3.449,1802,3.076,1803,3.449,1804,2.83,1805,3.449,1806,2.5,1807,2.028,1808,6.219,1809,3.449,1810,3.449,1811,3.449]],["title/classes/NewsResponse.html",[0,0.114,1644,3.357]],["body/classes/NewsResponse.html",[0,0.087,2,0.767,3,0.096,4,0.184,5,0.055,10,0.191,11,0.709,16,2.715,17,0.429,24,0.982,27,0.006,28,0.644,29,0.813,36,1.087,44,0.31,48,0.091,59,0.003,60,0.003,64,3.092,76,1.433,163,3.114,164,3.195,165,3.953,166,3.121,169,2.295,171,2.921,172,2.228,178,3.601,187,2.257,209,1.793,211,2.577,242,2.652,243,2.546,245,2.709,376,1.979,379,3.133,483,3.549,484,3.931,485,3.76,486,3.47,487,3.47,489,4.474,490,4.277,510,2.107,511,2.344,514,3.195,523,2.557,530,3.526,614,4.482,615,3.327,616,4.482,617,4.191,623,4.531,624,4.531,625,4.721,628,4.703,629,4.482,630,3.212,633,5.03,634,4.721,635,1.734,640,2.685,641,3.815,733,6.382,1162,4.482,1315,2.842,1489,3.601,1610,3.959,1644,3.766,1812,2.842,1813,3.703,1814,5.876,1815,3.703,1816,5.535,1817,3.703,1818,3.703,1819,3.703,1820,4.482,1821,3.703,1822,4.703,1823,4.871,1824,3.703,1825,5.786,1826,3.703,1827,5.324,1828,3.703,1829,4.871,1830,3.703,1831,4.703,1832,3.01,1833,3.703,1834,2.842,1835,3.703,1836,3.703,1837,3.703,1838,3.703,1839,3.703,1840,4.191,1841,3.703,1842,5.786,1843,3.703]],["title/classes/NewsScope.html",[0,0.114,1791,3.736]],["body/classes/NewsScope.html",[0,0.119,2,1.046,3,0.131,4,0.11,5,0.075,8,1.71,10,0.26,11,0.883,17,0.399,18,1.278,24,0.908,26,1.347,27,0.006,28,0.739,29,0.836,32,3.209,36,0.957,41,1.521,44,0.334,48,0.124,59,0.004,60,0.004,76,1.502,83,1.289,84,0.95,163,2.424,168,2.97,186,1.475,217,1.27,218,1.554,243,1.609,247,1.426,248,1.668,281,3.747,483,2.511,484,2.255,487,2.701,576,3.856,577,3.875,583,5.217,587,3.431,588,2.612,589,5.217,591,5.217,592,5.217,593,5.656,594,4.144,596,3.875,597,4.687,598,4.144,599,3.875,600,5.57,601,4.928,602,4.928,603,4.144,604,3.661,619,5.299,850,2.487,922,3.196,974,3.661,980,4.504,1202,4.482,1203,3.688,1769,5.668,1791,6.781,1844,6.305,1845,4.144,1846,6.797,1847,6.797,1848,6.797,1849,5.05,1850,6.797,1851,5.05,1852,3.875,1853,4.687,1854,5.05,1855,5.05,1856,5.05,1857,6.797,1858,5.05,1859,5.05,1860,3.482,1861,2.873,1862,5.05,1863,3.077,1864,5.05,1865,5.05,1866,5.05]],["title/interfaces/NewsTargetFilter.html",[87,0.457,1769,3.357]],["body/interfaces/NewsTargetFilter.html",[3,0.184,4,0.154,5,0.106,10,0.365,11,1.094,17,0.381,27,0.006,44,0.342,48,0.174,59,0.005,60,0.005,87,0.665,89,1.968,162,2.766,163,4.467,164,4.583,186,2.07,187,4.317,484,3.163,979,7.638,1769,5.811,1844,5.814,1867,6.319]],["title/injectables/NewsUc.html",[152,1.008,1642,3.08]],["body/injectables/NewsUc.html",[0,0.058,3,0.064,4,0.054,5,0.037,10,0.128,17,0.364,18,0.754,21,0.605,24,0.834,26,1.238,27,0.006,28,0.709,29,0.802,36,0.587,41,1.567,44,0.302,46,0.515,48,0.061,59,0.003,60,0.003,64,0.806,76,1.952,83,1.323,84,0.754,144,4.353,152,0.831,153,0.918,155,2.775,162,2.845,163,3.784,164,2.85,165,4.353,166,3.413,169,1.886,171,1.329,173,4.233,174,2.517,186,0.726,187,1.514,188,1.038,189,4.668,191,2.928,209,1.634,243,1.845,247,1.794,248,1.666,252,1.863,261,1.414,312,2.359,379,0.918,388,1.64,397,2.903,478,1.514,483,3.511,484,3.032,486,1.329,487,3.977,491,2.252,504,3.662,505,2.645,549,1.224,550,1.257,551,1.193,552,1.193,576,3.245,588,3.255,620,3.992,630,1.461,640,1.802,803,3.292,821,2.211,850,1.224,900,4.065,913,2.039,922,1.573,943,3.577,952,3.577,974,5.18,979,3.292,983,2.78,1005,2.085,1011,4.678,1103,1.907,1179,1.461,1189,3.992,1198,4.196,1201,4.927,1202,4.187,1203,2.421,1209,2.359,1221,3.816,1225,1.414,1230,1.802,1269,2.55,1438,1.461,1489,1.638,1491,2.908,1512,3.53,1607,2.908,1610,3.656,1642,2.538,1654,3.292,1703,2.216,1709,2.216,1715,5.162,1717,5.162,1732,3.577,1747,4.478,1752,2.216,1769,2.766,1868,2.039,1869,4.011,1870,4.011,1871,4.011,1872,4.011,1873,5.043,1874,2.485,1875,2.485,1876,4.011,1877,2.485,1878,4.011,1879,2.485,1880,4.011,1881,2.485,1882,4.011,1883,4.498,1884,4.498,1885,3.325,1886,4.011,1887,2.485,1888,4.011,1889,2.485,1890,2.485,1891,4.011,1892,2.485,1893,2.908,1894,2.485,1895,5.043,1896,2.485,1897,4.011,1898,2.485,1899,2.216,1900,2.485,1901,2.485,1902,3.292,1903,4.75,1904,2.485,1905,2.216,1906,2.485,1907,5.788,1908,2.485,1909,4.011,1910,2.485,1911,4.011,1912,2.485,1913,5.162,1914,2.485,1915,2.485,1916,2.485,1917,4.011,1918,2.216,1919,4.011,1920,2.485,1921,2.485,1922,4.011,1923,2.485,1924,2.485,1925,5.043,1926,2.485,1927,4.011,1928,2.485,1929,2.485,1930,2.485,1931,2.216,1932,1.802,1933,2.485,1934,2.485,1935,2.485,1936,2.485,1937,2.216,1938,4.011,1939,2.485,1940,2.485,1941,2.485,1942,4.011,1943,2.485,1944,2.485,1945,2.485,1946,2.485,1947,2.485]],["title/classes/PaginationQuery.html",[0,0.114,1622,3.209]],["body/classes/PaginationQuery.html",[0,0.184,2,1.297,3,0.162,4,0.136,5,0.093,10,0.322,11,1.015,17,0.353,24,0.827,27,0.006,29,0.908,31,2.881,44,0.317,48,0.154,59,0.005,60,0.005,64,2.534,211,2.17,247,2.207,248,2.58,618,6.411,634,5.616,635,2.93,639,3.813,743,5.996,850,3.847,1175,6.411,1228,5.616,1229,6.053,1622,5.151,1863,4.76,1948,5.582,1949,6.846,1950,6.258,1951,4.179,1952,7.813,1953,7.813,1954,7.813,1955,6.258,1956,6.258,1957,6.968,1958,6.258,1959,8.518,1960,5.582,1961,6.258,1962,6.258,1963,6.258,1964,6.258]],["title/classes/PaginationResponse.html",[0,0.114,1640,3.209]],["body/classes/PaginationResponse.html",[0,0.141,2,1.244,3,0.156,4,0.131,5,0.09,10,0.309,11,0.989,17,0.41,21,1.462,24,0.96,26,0.943,27,0.006,28,0.54,29,0.923,31,3.049,44,0.244,48,0.147,59,0.005,60,0.005,211,2.441,271,5.979,312,4.477,633,5.299,635,2.812,754,4.466,1228,6.205,1229,6.205,1640,5.019,1965,5.356,1966,6.823,1967,7.612,1968,6.005,1969,6.005,1970,6.005,1971,6.005,1972,6.005,1973,6.005,1974,6.005,1975,6.005,1976,6.005]],["title/injectables/ParseObjectIdPipe.html",[152,1.008,1639,3.357]],["body/injectables/ParseObjectIdPipe.html",[0,0.156,3,0.172,4,0.145,5,0.099,10,0.342,17,0.3,18,1.525,24,0.703,26,1.043,27,0.006,28,0.598,29,0.676,36,1.087,41,1.23,44,0.355,46,1.377,48,0.163,59,0.005,60,0.005,76,1.469,83,1.115,84,1.25,152,1.68,153,2.455,162,1.975,186,1.942,201,3.781,210,3.246,217,1.672,219,3.038,248,2.678,680,3.455,1164,5.591,1639,5.591,1832,4.469,1977,7.231,1978,5.454,1979,8.108,1980,6.646,1981,8.108,1982,6.646,1983,8.108,1984,6.646,1985,6.646]],["title/interfaces/PlainTextMailContent.html",[87,0.457,102,2.966]],["body/interfaces/PlainTextMailContent.html",[3,0.162,4,0.136,5,0.093,8,2.308,10,0.322,11,1.013,17,0.353,27,0.006,28,0.562,29,0.794,36,1.167,48,0.153,59,0.005,60,0.005,87,0.89,88,4.754,89,1.735,90,3.953,91,5.185,92,5.145,93,4.118,94,4.118,95,4.754,96,4.118,97,4.118,98,4.118,99,5.431,100,3.953,101,4.118,102,5.185,103,6.049,104,6.049,105,4.754,106,4.174,107,3.953,108,4.118,109,4.118,110,4.118]],["title/classes/ResolvedUser.html",[0,0.114,1428,2.966]],["body/classes/ResolvedUser.html",[0,0.137,2,1.209,3,0.151,4,0.127,5,0.087,10,0.301,11,0.971,17,0.432,24,1.002,27,0.006,36,1.122,44,0.304,48,0.183,59,0.005,60,0.005,166,3.371,186,1.705,209,1.709,211,2.63,242,3.371,243,2.771,245,3.444,397,3.77,633,5.478,635,2.733,680,3.885,1207,4.287,1210,3.958,1211,5.687,1214,4.928,1215,5.219,1216,5.219,1428,4.554,1986,4.789,1987,5.836,1988,5.836,1989,5.836,1990,5.836,1991,5.836,1992,5.836,1993,5.836,1994,5.836]],["title/classes/ResolvedUserMapper.html",[0,0.114,1995,3.736]],["body/classes/ResolvedUserMapper.html",[0,0.145,2,1.274,3,0.16,4,0.134,5,0.092,10,0.317,17,0.278,18,1.453,24,0.651,26,0.965,27,0.006,28,0.695,29,0.625,36,0.984,41,1.138,44,0.314,48,0.151,59,0.005,60,0.005,76,1.358,83,1.031,84,1.156,166,3.623,169,2.536,186,1.796,209,1.274,247,1.736,248,2.03,491,3.772,608,3.617,745,5.094,748,4.053,749,4.053,1207,4.391,1210,4.254,1428,5.4,1727,5.045,1729,5.045,1731,5.482,1995,5.929,1996,5.482,1997,6.89,1998,6.147,1999,4.718,2000,5.482,2001,5.482,2002,5.482,2003,5.482,2004,6.147,2005,6.147,2006,6.147,2007,6.147,2008,6.147,2009,5.482,2010,6.147,2011,5.482]],["title/classes/Role.html",[0,0.114,1210,2.336]],["body/classes/Role.html",[0,0.119,2,1.051,3,0.132,4,0.11,5,0.076,8,1.715,10,0.397,11,0.886,17,0.4,21,1.235,24,0.973,26,0.797,27,0.006,28,0.796,29,0.516,32,3.439,36,1.052,44,0.277,48,0.167,50,1.707,59,0.004,60,0.004,84,1.664,87,0.476,166,3.366,172,1.582,208,2.911,209,1.413,210,2.031,211,2.511,212,2.319,214,2.319,216,2.943,217,1.276,218,1.561,222,3.276,232,1.99,242,2.788,243,2.173,245,2.848,247,2.326,248,2.72,251,2.499,252,1.875,385,2.73,388,2.074,396,2.215,399,3.953,407,2.566,408,2.566,409,2.566,410,2.566,415,4.011,416,2.031,418,2.031,437,2.266,441,2.797,442,2.797,504,2.499,514,3.358,639,3.092,933,4.316,1098,2.984,1171,3.679,1207,4.839,1210,3.953,1280,6.32,1281,4.164,1282,4.526,1283,3.894,1284,3.679,1285,4.164,1286,3.679,1287,5.911,1288,6.082,1289,4.526,1290,4.526,1291,3.894,2012,6.819,2013,4.526,2014,5.074,2015,5.074,2016,5.074]],["title/injectables/RoleRepo.html",[152,1.008,2017,3.357]],["body/injectables/RoleRepo.html",[0,0.13,3,0.144,4,0.12,5,0.083,10,0.285,11,0.938,12,1.896,17,0.385,18,1.359,21,1.348,24,0.936,26,1.338,27,0.006,28,0.815,29,0.867,36,0.936,41,1.488,44,0.326,46,1.147,48,0.136,59,0.005,60,0.005,76,1.777,83,1.212,152,1.497,153,2.045,155,2.864,162,2.745,166,2.262,174,2.695,186,1.617,188,2.311,191,2.608,209,1.666,217,1.392,219,2.53,265,3.503,266,4.849,268,3.755,850,2.726,1210,4.433,2017,4.981,2018,4.936,2019,8.841,2020,6.442,2021,7.223,2022,7.223,2023,7.223,2024,6.442,2025,5.535,2026,7.223,2027,5.535,2028,7.223,2029,5.535,2030,5.535,2031,7.223,2032,7.223,2033,5.535]],["title/injectables/RoleUC.html",[152,1.008,2034,3.357]],["body/injectables/RoleUC.html",[0,0.148,3,0.163,4,0.137,5,0.094,10,0.324,12,2.152,17,0.354,18,1.473,21,1.53,24,0.829,26,1.23,27,0.006,28,0.704,29,0.797,36,0.732,41,1.163,44,0.346,46,1.302,48,0.154,59,0.005,60,0.005,76,1.388,83,1.054,84,1.182,152,1.623,153,2.322,155,2.58,162,2.655,166,3.757,174,2.328,182,4.143,186,1.836,188,2.624,191,2.038,1207,4.071,1217,4.556,2017,6.463,2034,5.401,2035,5.604,2036,7.832,2037,6.284,2038,6.284,2039,7.832,2040,6.284,2041,3.696,2042,6.284,2043,6.284,2044,6.284,2045,6.284,2046,6.284]],["title/classes/School.html",[0,0.114,379,1.798]],["body/classes/School.html",[0,0.149,2,1.313,3,0.164,4,0.138,5,0.094,8,1.98,10,0.326,11,1.022,17,0.425,21,1.542,24,0.948,26,0.994,27,0.006,28,0.829,29,0.645,32,3.287,36,1.043,44,0.32,48,0.155,50,2.131,59,0.005,60,0.005,172,1.826,206,5.83,208,3.36,209,1.631,210,2.536,211,2.379,212,2.896,214,2.896,216,2.934,217,1.593,218,1.949,379,2.908,385,3.151,388,2.59,412,4.63,418,2.536,437,2.829,441,3.492,442,3.492,1195,4.369,2047,5.65,2048,7.872,2049,5.65,2050,5.65]],["title/classes/SchoolInfoMapper.html",[0,0.114,1699,3.736]],["body/classes/SchoolInfoMapper.html",[0,0.16,2,1.407,3,0.176,4,0.148,5,0.101,10,0.35,17,0.307,18,1.545,24,0.719,26,1.066,27,0.006,28,0.611,29,0.691,41,1.257,44,0.334,48,0.167,59,0.005,60,0.005,76,1.501,83,1.139,84,1.277,186,1.984,379,3.39,491,3.944,608,3.846,745,5.416,748,4.478,749,4.478,1699,6.305,1822,6.653,2051,7.327,2052,5.212,2053,8.215,2054,5.573,2055,6.791,2056,6.791,2057,5.573,2058,6.791]],["title/classes/SchoolInfoResponse.html",[0,0.114,1822,3.529]],["body/classes/SchoolInfoResponse.html",[0,0.157,2,1.386,3,0.174,4,0.145,5,0.1,10,0.344,11,1.057,17,0.368,24,0.861,27,0.006,28,0.842,36,1.063,44,0.272,48,0.164,59,0.005,60,0.005,64,2.846,172,2.117,209,1.939,211,2.261,379,3.373,623,5.151,624,5.151,633,4.836,635,3.132,641,3.934,733,4.849,1822,5.901,1834,5.134,2059,7.825,2060,5.134,2061,5.489,2062,5.489]],["title/classes/SchoolNews.html",[0,0.114,561,2.966]],["body/classes/SchoolNews.html",[0,0.155,2,0.652,3,0.082,4,0.155,5,0.047,8,1.79,10,0.162,11,0.628,16,2.671,17,0.419,18,0.909,24,0.969,26,0.494,27,0.006,28,0.593,29,0.842,32,3.823,36,1.049,41,0.583,44,0.328,48,0.175,50,1.059,59,0.003,60,0.003,83,0.528,84,1.339,87,0.295,162,1.961,163,3.755,164,3.7,166,2.405,169,2.173,172,1.651,190,2.171,208,2.063,209,1.219,210,1.26,211,2.503,212,1.439,214,1.439,216,3.058,217,0.792,218,0.969,222,2.723,229,3.242,234,2.173,242,1.976,243,2.268,245,2.018,247,1.661,248,1.943,251,1.551,252,1.163,300,2.749,327,1.791,376,1.752,379,3.176,385,1.26,388,2.405,396,3.279,397,2.209,407,1.592,408,1.592,409,1.592,410,1.592,414,1.344,416,2.355,418,1.26,419,1.919,420,1.684,439,4.02,446,1.919,462,1.684,466,1.684,481,1.852,482,2.171,483,3.597,484,3.773,485,3.7,486,3.808,487,3.53,488,4.784,489,4.55,490,4.693,491,2.626,492,3.709,494,2.584,495,3.333,496,4.35,497,3.333,498,2.584,499,2.584,500,3.504,501,4.176,502,3.504,503,3.333,504,2.38,505,3.187,506,3.333,507,2.584,508,2.584,509,2.584,510,3.346,511,3.723,512,2.584,513,2.584,514,2.897,515,2.584,516,3.187,517,2.584,518,3.504,519,2.584,520,3.504,521,4.693,522,2.584,523,2.263,524,2.283,525,3.584,526,2.283,527,1.637,528,2.171,529,1.315,530,1.551,531,2.076,532,1.993,533,2.283,534,2.283,535,2.283,536,2.283,537,2.283,538,1.637,539,2.076,540,2.283,541,2.283,542,2.283,543,2.283,544,2.283,545,2.283,546,2.283,547,2.283,548,3.504,549,2.897,550,2.975,551,2.823,552,2.823,553,2.897,554,3.584,555,3.346,556,2.283,557,3.504,558,2.283,559,2.283,560,4.265,561,2.945,562,1.919,563,2.283,2063,3.149]],["title/classes/Scope.html",[0,0.114,576,2.124]],["body/classes/Scope.html",[0,0.101,2,0.888,3,0.111,4,0.093,5,0.064,10,0.221,11,0.788,17,0.39,18,1.141,24,0.811,26,1.106,27,0.006,28,0.546,29,0.617,34,2.825,36,1.045,41,1.123,44,0.246,48,0.206,59,0.004,60,0.004,76,1.856,83,1.526,208,1.829,217,1.078,218,1.318,221,3.106,232,1.68,247,1.21,248,2.327,252,2.242,271,5.052,281,4.224,576,2.648,587,3.939,588,2.708,589,5.407,591,4.657,592,4.657,593,5.998,596,4.657,597,5.792,599,4.657,600,5.863,601,6.089,602,6.089,604,3.106,850,3.47,935,2.52,983,2.362,1098,4.939,1199,2.712,1203,3.382,1286,5.108,1315,4.657,1361,4.507,1569,3.288,1570,2.825,1832,2.362,1852,6.445,1861,4.359,1863,2.611,1932,3.106,2064,3.288,2065,5.412,2066,4.285,2067,4.285,2068,4.285,2069,4.285,2070,4.285,2071,4.285,2072,4.285,2073,6.284,2074,5.782,2075,5.412,2076,3.822,2077,4.285,2078,3.822,2079,6.284,2080,4.285,2081,4.285,2082,3.822,2083,4.285,2084,3.822,2085,4.285,2086,4.285,2087,4.285,2088,5.412,2089,4.285,2090,6.068,2091,4.285,2092,4.285,2093,4.285,2094,4.285,2095,4.285,2096,4.285,2097,4.285,2098,6.068,2099,4.285,2100,6.068,2101,4.285,2102,4.285,2103,4.285,2104,4.285,2105,4.285]],["title/classes/ServerConsole.html",[0,0.114,2106,3.736]],["body/classes/ServerConsole.html",[0,0.136,2,1.196,3,0.15,4,0.125,5,0.086,10,0.297,17,0.335,18,1.396,21,1.405,24,0.868,26,1.165,27,0.006,28,0.667,29,0.755,36,0.955,41,1.373,44,0.301,48,0.142,52,2.77,59,0.005,60,0.005,64,2.906,83,1.245,123,3.314,188,2.41,211,2.061,281,4.773,331,6.324,333,4.429,341,2.77,342,6.04,871,7.107,874,5.054,887,4.148,1007,5.71,1029,5.409,1361,5.093,2106,5.696,2107,5.147,2108,7.421,2109,5.771,2110,5.771,2111,7.421,2112,6.278,2113,5.771,2114,7.421,2115,6.619,2116,5.771,2117,6.619,2118,7.037,2119,5.147,2120,5.771,2121,5.771]],["title/modules/ServerConsoleModule.html",[111,1.398,2122,3.529]],["body/modules/ServerConsoleModule.html",[0,0.153,3,0.169,4,0.142,5,0.097,27,0.006,44,0.377,46,1.351,48,0.16,59,0.005,60,0.005,111,2.302,113,2.666,114,3.663,121,4.417,122,3.389,123,2.912,125,3.874,126,3.847,331,6.522,333,5.004,341,3.13,342,5.491,994,3.594,2106,6.15,2119,5.816,2122,7.015,2123,5.816,2124,5.816,2125,5.816,2126,6.522,2127,6.521,2128,6.521,2129,8.014,2130,6.521,2131,6.521,2132,3.709]],["title/controllers/ServerController.html",[642,2.124,2133,3.736]],["body/controllers/ServerController.html",[0,0.164,3,0.181,4,0.152,5,0.104,10,0.36,18,1.572,24,0.74,27,0.006,36,0.973,41,1.293,44,0.284,46,1.448,48,0.172,52,3.355,59,0.005,60,0.005,83,1.173,211,1.941,247,2.361,642,3.648,644,3.442,871,7.604,873,5.764,874,4.471,875,5.511,876,4.755,886,5.364,887,3.534,2133,6.415,2134,6.234,2135,6.989]],["title/modules/ServerModule.html",[111,1.398,2126,3.357]],["body/modules/ServerModule.html",[0,0.118,3,0.13,4,0.109,5,0.075,17,0.226,27,0.006,36,0.953,44,0.392,46,1.036,48,0.123,57,2.342,59,0.004,60,0.004,83,0.839,84,0.941,111,1.94,112,6.387,113,2.044,114,3.087,118,6.076,121,3.722,122,2.6,123,2.233,126,3.241,169,1.389,181,2.6,186,1.461,217,1.699,218,1.539,232,1.961,234,1.848,349,6.387,529,2.088,549,2.463,550,2.529,551,2.4,552,2.4,553,2.463,644,3.325,836,4.274,960,4.46,1050,6.023,1051,6.023,1052,6.023,1130,4.104,1131,4.104,1132,4.104,1235,3.838,1465,6.387,1506,5.896,1512,3.51,1519,3.626,1520,3.626,1521,3.626,1556,4.104,1558,4.104,1560,5.183,1567,3.838,1742,6.387,2126,6.763,2132,2.845,2133,5.868,2136,4.46,2137,4.46,2138,6.387,2139,5.001,2140,6.753,2141,6.753,2142,3.626,2143,3.297,2144,3.165,2145,4.104,2146,5.001,2147,5.001,2148,3.449,2149,5.001,2150,5.001,2151,5.001,2152,5.001,2153,5.001,2154,5.001,2155,5.001,2156,5.001,2157,5.001,2158,5.001,2159,4.46,2160,3.449,2161,5.001,2162,3.838,2163,5.001,2164,6.753,2165,5.001,2166,4.104,2167,3.297,2168,4.46,2169,4.104,2170,5.001]],["title/classes/Submission.html",[0,0.114,1256,2.769]],["body/classes/Submission.html",[0,0.089,2,0.782,3,0.098,4,0.082,5,0.108,8,1.393,10,0.194,11,0.719,17,0.414,18,1.042,21,0.919,24,0.985,26,0.593,27,0.006,28,0.34,29,0.668,31,2.223,32,3.018,36,0.993,41,0.699,44,0.327,48,0.093,50,1.27,59,0.003,60,0.003,76,1.224,83,0.633,84,1.603,87,0.354,169,2.137,172,1.285,208,2.364,209,1.148,210,1.511,211,2.544,212,1.726,214,1.726,216,2.92,217,0.95,218,1.162,222,3.012,242,2.264,243,1.765,245,2.313,247,2.174,248,2.542,251,1.859,252,3.15,385,2.217,388,2.264,396,3.958,399,3.861,407,1.909,408,1.909,409,1.909,410,1.909,414,1.611,415,2.22,416,1.511,418,1.511,420,2.02,437,1.686,440,3.82,457,5.201,496,3.652,538,1.962,850,3.231,983,4.699,1203,2.659,1256,3.151,1261,2.3,1265,3.807,1292,5.546,1293,3.098,1294,6.445,1295,5.931,1296,6.445,1297,7.174,1298,5.074,1299,7.174,1300,6.997,1301,3.367,1302,3.367,1303,3.367,1304,4.94,1305,4.94,1306,4.545,1307,4.94,1308,4.94,1309,4.545,1310,6.445,1311,4.94,1312,2.737,1313,4.94,1314,7.174,1315,4.251,1316,5.851,1317,4.94,1318,3.367,1319,3.367,1320,3.367,1321,3.367,1322,3.367,1323,3.367,1324,3.367,1325,2.897,1326,3.367,1327,3.367,1328,3.367,2171,3.775,2172,3.775,2173,3.775,2174,3.775,2175,3.775,2176,3.775,2177,3.775,2178,3.775,2179,3.775,2180,3.775,2181,3.775]],["title/injectables/SubmissionRepo.html",[152,1.008,2182,3.995]],["body/injectables/SubmissionRepo.html",[0,0.125,3,0.138,4,0.115,5,0.079,10,0.273,12,1.818,17,0.379,18,1.322,21,1.292,24,0.888,26,1.316,27,0.006,28,0.754,29,0.853,41,1.458,44,0.34,46,1.1,48,0.13,59,0.004,60,0.004,76,1.853,83,1.322,152,1.456,153,1.961,155,2.841,162,2.819,173,3.987,174,2.664,186,1.551,188,2.217,191,2.72,217,1.768,218,1.633,219,2.426,232,2.082,265,3.359,266,4.77,268,3.653,380,3.122,457,4.133,478,3.234,479,4.447,566,6.268,570,5.767,576,2.317,587,3.138,588,3.028,593,3.5,1081,3.661,1256,3.02,1261,4.282,1265,2.37,1298,3.5,1300,4.356,1861,3.998,2132,3.02,2182,5.767,2183,4.734,2184,7.027,2185,7.027,2186,5.308,2187,7.027,2188,5.308,2189,7.027,2190,5.308,2191,7.027,2192,5.308,2193,7.027,2194,5.308,2195,7.027,2196,5.308]],["title/classes/TargetInfoMapper.html",[0,0.114,1701,3.736]],["body/classes/TargetInfoMapper.html",[0,0.159,2,1.404,3,0.176,4,0.147,5,0.101,10,0.349,17,0.306,18,1.543,24,0.717,26,1.064,27,0.006,28,0.609,29,0.689,41,1.254,44,0.333,48,0.166,59,0.005,60,0.005,76,1.497,83,1.137,84,1.274,187,4.129,484,3.026,491,3.94,525,5.587,608,3.841,745,5.409,749,4.468,1701,6.296,1831,6.648,1842,6.044,2052,5.201,2054,5.561,2057,5.561,2197,7.317,2198,8.204,2199,6.776,2200,6.776,2201,6.776]],["title/classes/TargetInfoResponse.html",[0,0.114,1831,3.529]],["body/classes/TargetInfoResponse.html",[0,0.157,2,1.386,3,0.174,4,0.145,5,0.1,10,0.344,11,1.057,17,0.368,24,0.861,27,0.006,28,0.842,36,1.063,44,0.272,48,0.164,59,0.005,60,0.005,64,2.846,172,2.117,209,1.939,211,2.261,484,4.076,623,5.151,624,5.151,633,4.836,635,3.132,641,3.934,733,4.849,1831,5.901,1834,5.134,2060,5.134,2061,5.489,2062,5.489,2202,7.825]],["title/classes/Task.html",[0,0.114,1265,2.173]],["body/classes/Task.html",[0,0.105,2,0.923,3,0.116,4,0.097,5,0.066,8,1.569,10,0.23,11,0.81,17,0.415,21,1.085,24,0.981,26,0.7,27,0.006,28,0.765,29,0.888,31,1.371,32,3.256,36,1.017,44,0.345,48,0.177,50,1.499,59,0.004,60,0.004,64,1.446,84,1.466,87,0.675,162,2.317,172,1.447,208,2.663,209,1.615,210,1.784,211,2.547,212,2.037,214,2.037,216,3.052,217,1.121,218,1.371,222,3.165,242,2.55,243,2.615,245,2.605,247,2.202,248,2.575,251,2.195,252,2.305,376,2.826,378,2.457,383,3.073,384,3.073,385,2.497,388,1.822,396,3.403,399,2.994,407,2.254,408,2.254,409,2.254,410,2.254,414,1.902,416,1.784,418,1.784,437,1.99,441,2.457,442,2.457,462,3.337,463,3.948,466,2.384,527,2.317,529,2.605,588,2.997,714,2.938,983,2.457,1056,2.384,1203,2.994,1252,4.302,1253,3.231,1254,4.911,1255,3.42,1256,3.549,1257,3.42,1258,5.377,1259,4.934,1260,5.141,1261,4.751,1262,3.073,1263,3.42,1264,3.231,1265,3.481,1266,4.788,1267,4.788,1268,3.073,1269,2.254,1270,4.788,1271,3.42,1272,3.42,1273,4.788,1274,3.42,1275,3.42,1276,3.42,1277,3.42,1278,3.42,1279,3.42,2203,6.238,2204,4.457,2205,4.457,2206,4.457,2207,4.457,2208,4.457]],["title/injectables/TaskAuthorizationService.html",[152,1.008,2209,3.357]],["body/injectables/TaskAuthorizationService.html",[0,0.138,3,0.152,4,0.128,5,0.088,10,0.302,12,2.01,17,0.339,18,1.411,21,1.429,24,0.794,26,1.178,27,0.006,28,0.675,29,0.763,41,1.086,44,0.336,46,1.216,48,0.184,59,0.005,60,0.005,76,1.658,83,0.985,152,1.554,153,2.168,155,2.5,162,2.59,169,2.084,173,2.683,174,2.23,186,1.715,188,2.451,191,2.434,467,4.255,504,4.291,514,2.89,564,6.073,681,4.946,683,4.747,978,3.139,1020,5.173,1026,5.439,1472,4.047,1476,4.255,1629,3.714,2209,5.173,2210,4.816,2211,7.502,2212,5.869,2213,5.869,2214,7.502,2215,7.151,2216,5.869,2217,6.691,2218,6.156,2219,5.757,2220,6.691,2221,7.502,2222,5.234,2223,4.504,2224,4.504,2225,5.869,2226,5.234,2227,5.869,2228,5.869,2229,7.502,2230,5.869,2231,5.234]],["title/controllers/TaskController.html",[642,2.124,2232,3.736]],["body/controllers/TaskController.html",[0,0.138,3,0.152,4,0.127,5,0.087,10,0.302,12,2.007,17,0.265,18,1.409,24,0.62,26,0.92,27,0.006,28,0.527,29,0.596,41,1.084,44,0.385,46,1.214,48,0.144,59,0.005,60,0.005,76,1.924,83,1.257,84,1.102,155,2.498,174,2.227,186,1.712,188,2.446,191,1.9,211,1.627,587,3.346,608,2.743,635,2.743,642,2.556,644,2.885,646,3.707,650,3.707,651,4.247,657,4.247,1204,4.403,1228,4.94,1229,4.94,1608,5.697,1615,5.121,1620,4.807,1622,6.31,1638,4.496,1640,3.862,1641,4.807,1861,4.262,1966,5.432,2232,5.75,2233,5.224,2234,4.04,2235,5.858,2236,5.697,2237,5.858,2238,4.247,2239,4.496,2240,5.858,2241,5.858,2242,5.858,2243,5.858,2244,5.858,2245,5.858,2246,5.858,2247,5.858,2248,5.858]],["title/classes/TaskMapper.html",[0,0.114,2239,3.736]],["body/classes/TaskMapper.html",[0,0.147,2,1.297,3,0.162,4,0.136,5,0.093,10,0.322,17,0.283,18,1.469,24,0.662,26,0.982,27,0.006,28,0.563,29,0.637,41,1.158,44,0.317,48,0.154,59,0.005,60,0.005,76,1.882,83,1.05,84,1.177,186,1.829,252,2.312,491,3.803,608,3.658,745,5.151,748,4.126,749,4.126,1265,2.794,1336,4.537,1337,4.537,1338,4.537,1340,6.152,1341,4.126,1727,5.136,1729,5.136,2057,5.136,2238,6.467,2239,5.996,2249,5.582,2250,7.813,2251,6.258,2252,7.813,2253,6.258,2254,6.258,2255,6.258,2256,6.258,2257,6.258,2258,6.258,2259,6.258,2260,6.258,2261,6.258,2262,6.258,2263,5.582,2264,6.258,2265,6.258,2266,6.258,2267,6.258,2268,6.258,2269,6.258]],["title/modules/TaskModule.html",[111,1.398,2138,3.529]],["body/modules/TaskModule.html",[0,0.15,3,0.166,4,0.139,5,0.095,27,0.006,44,0.382,46,1.323,48,0.157,59,0.005,60,0.005,111,2.273,113,2.611,114,3.616,121,4.361,122,3.32,123,2.852,125,3.533,126,3.066,564,6.204,644,3.896,2041,3.756,2138,7.161,2209,6.489,2222,5.696,2232,6.597,2236,6.489,2270,5.696,2271,5.696,2272,6.489,2273,6.387,2274,6.387,2275,4.042,2276,6.387]],["title/injectables/TaskRepo.html",[152,1.008,2272,3.357]],["body/injectables/TaskRepo.html",[0,0.092,3,0.102,4,0.085,5,0.058,10,0.202,12,1.342,17,0.353,18,1.07,21,0.954,24,0.862,26,1.226,27,0.006,28,0.703,29,0.795,41,1.556,44,0.317,46,0.812,48,0.096,59,0.004,60,0.004,64,1.846,76,1.997,83,1.311,84,1.26,123,1.749,152,1.179,153,1.448,155,2.762,162,2.651,174,2.56,181,3.823,182,5.373,186,1.145,188,1.636,189,4.054,191,2.728,217,0.985,218,1.205,232,2.232,243,2.344,265,2.479,266,4.184,268,2.958,312,3.941,376,1.42,478,2.387,479,3.601,576,3.21,587,2.541,588,3.375,593,4.849,978,2.096,1005,3.823,1081,2.702,1221,5.881,1224,3.941,1225,4.444,1229,2.583,1254,3.694,1259,2.479,1260,5.544,1261,2.387,1265,2.541,1298,2.583,1312,2.84,1437,5.075,1472,2.702,1476,4.126,1512,4.832,1572,3.924,1608,3.924,1789,5.075,1802,3.494,1807,2.304,1899,3.494,2041,2.304,2231,5.075,2234,5.072,2272,3.924,2275,2.479,2277,3.494,2278,5.691,2279,5.691,2280,5.691,2281,7.355,2282,3.918,2283,5.691,2284,3.918,2285,4.67,2286,6.687,2287,6.559,2288,5.691,2289,3.918,2290,5.691,2291,3.918,2292,5.691,2293,3.918,2294,3.918,2295,5.143,2296,5.691,2297,5.691,2298,5.691,2299,5.691,2300,5.691,2301,7.355,2302,5.691,2303,3.918,2304,3.918,2305,5.691,2306,3.918,2307,3.918,2308,3.918,2309,3.918,2310,3.918,2311,3.215,2312,3.918,2313,3.918,2314,2.702,2315,3.924,2316,3.007,2317,3.918,2318,3.215,2319,3.007,2320,5.691,2321,3.918,2322,3.007]],["title/classes/TaskResponse.html",[0,0.114,2238,3.529]],["body/classes/TaskResponse.html",[0,0.133,2,1.174,3,0.147,4,0.123,5,0.085,10,0.292,11,0.952,17,0.43,24,0.996,27,0.006,28,0.731,29,0.928,31,2.502,36,1.096,44,0.23,48,0.139,52,3.52,59,0.005,60,0.005,64,1.838,209,1.685,211,2.614,242,3.324,243,2.908,245,3.396,412,3.332,608,3.434,610,4.313,633,5.384,634,5.873,635,2.653,676,5.146,722,4.043,1259,5.146,1265,3.275,1336,4.108,1337,4.108,1338,4.108,1341,5.362,2238,5.317,2323,5.053,2324,6.541,2325,8.132,2326,5.666,2327,5.666,2328,5.666,2329,5.666,2330,5.666,2331,5.666,2332,5.666,2333,5.666]],["title/classes/TaskScope.html",[0,0.114,2295,3.736]],["body/classes/TaskScope.html",[0,0.119,2,1.048,3,0.131,4,0.11,5,0.075,8,1.712,10,0.26,11,0.884,17,0.408,18,1.28,24,0.956,26,1.388,27,0.006,28,0.772,29,0.873,32,3.211,36,0.958,41,1.636,44,0.276,48,0.124,59,0.004,60,0.004,83,1.38,162,2.685,186,1.478,243,2.451,247,1.429,248,1.671,281,3.751,529,2.112,576,3.858,577,3.882,583,6.312,587,2.258,588,2.955,589,5.222,591,5.222,592,5.222,593,5.07,594,4.151,596,3.882,597,4.693,598,4.151,599,3.882,600,5.575,601,4.933,602,4.933,603,4.151,604,3.667,983,3.751,1254,3.751,1259,5.205,1260,3.335,1265,2.258,1845,4.151,2286,5.584,2295,7.216,2334,7.655,2335,6.805,2336,6.805,2337,6.805,2338,8.225,2339,6.805,2340,5.058,2341,6.805,2342,5.058,2343,6.805,2344,6.805,2345,5.058,2346,5.058,2347,5.058,2348,5.058]],["title/injectables/TaskUC.html",[152,1.008,2236,3.357]],["body/injectables/TaskUC.html",[0,0.087,3,0.096,4,0.08,5,0.055,10,0.19,12,1.864,17,0.373,18,1.024,21,0.897,24,0.873,26,1.295,27,0.006,28,0.742,29,0.839,41,1.476,44,0.29,46,0.764,48,0.134,59,0.003,60,0.003,66,4.064,76,2.062,83,1.338,84,1.433,144,3.942,152,1.128,153,1.362,155,2.614,162,2.614,166,1.507,173,3.87,174,2.37,185,4.466,186,1.077,188,1.539,191,2.587,201,2.097,232,1.445,234,1.362,242,1.507,306,2.333,344,1.815,478,3.316,504,3.186,514,1.815,567,4.854,568,4.854,572,4.466,574,4.466,588,3.587,806,3.025,850,3.186,933,3.444,935,2.168,1034,2.43,1203,2.612,1204,4.171,1224,3.2,1225,5.187,1227,6.375,1230,2.672,1259,2.333,1265,3.86,1306,4.466,1336,5.179,1337,5.179,1338,5.179,1340,5.255,1608,3.753,1615,3.2,1620,4.466,1863,3.316,1918,3.287,1966,5.179,2041,2.168,2209,4.926,2215,3.025,2226,3.287,2234,3.753,2236,3.753,2263,3.287,2272,5.5,2286,4.466,2349,3.025,2350,5.442,2351,5.442,2352,5.442,2353,3.686,2354,3.686,2355,5.442,2356,3.686,2357,5.442,2358,3.686,2359,3.686,2360,3.686,2361,3.686,2362,5.442,2363,6.371,2364,3.686,2365,3.686,2366,3.287,2367,3.287,2368,3.287,2369,3.025,2370,3.025,2371,3.686,2372,2.829,2373,5.442,2374,3.686,2375,3.686,2376,3.686,2377,3.686,2378,5.442,2379,3.686,2380,3.686,2381,3.686,2382,7.144,2383,5.442,2384,3.686,2385,3.686,2386,3.686,2387,5.442,2388,3.686,2389,3.686,2390,3.686,2391,6.469,2392,3.686,2393,3.686,2394,3.686,2395,5.442,2396,3.686,2397,3.686,2398,3.686,2399,3.686,2400,3.686,2401,3.686,2402,3.686,2403,3.686,2404,3.686,2405,3.686,2406,3.686]],["title/classes/TaskWithStatusVo.html",[0,0.114,1340,3.357]],["body/classes/TaskWithStatusVo.html",[0,0.154,2,1.36,3,0.17,4,0.143,5,0.098,10,0.338,11,1.045,17,0.393,21,1.598,24,0.921,26,1.03,27,0.006,28,0.59,29,0.668,31,2.677,44,0.266,48,0.161,59,0.005,60,0.005,87,0.616,1265,4.407,1325,5.036,1333,7.269,1334,7.443,1335,5.385,1336,4.757,1337,4.757,1338,4.757,1339,5.852,1340,5.548,1341,6.325,1342,7.175,1343,5.852,2407,8.045,2408,6.562]],["title/classes/Team.html",[0,0.114,523,2.279]],["body/classes/Team.html",[0,0.149,2,1.313,3,0.164,4,0.138,5,0.094,8,1.98,10,0.326,11,1.022,17,0.425,21,1.542,24,0.948,26,0.994,27,0.006,28,0.829,29,0.645,32,3.287,36,1.043,44,0.32,48,0.155,50,2.131,59,0.005,60,0.005,172,1.826,206,5.83,208,3.36,209,1.631,210,2.536,211,2.379,212,2.896,214,2.896,216,2.934,217,1.593,218,1.949,385,3.151,388,2.59,412,4.63,418,2.536,437,2.829,441,3.492,442,3.492,523,3.686,1196,4.369,2049,5.65,2050,5.65,2409,5.65,2410,7.872]],["title/classes/TeamNews.html",[0,0.114,562,2.966]],["body/classes/TeamNews.html",[0,0.155,2,0.652,3,0.082,4,0.155,5,0.047,8,1.79,10,0.162,11,0.628,16,2.671,17,0.419,18,0.909,24,0.969,26,0.494,27,0.006,28,0.593,29,0.842,32,3.823,36,1.049,41,0.583,44,0.328,48,0.175,50,1.059,59,0.003,60,0.003,83,0.528,84,1.339,87,0.295,162,1.961,163,3.755,164,3.7,166,2.405,169,2.173,172,1.651,190,2.171,208,2.063,209,1.219,210,1.26,211,2.503,212,1.439,214,1.439,216,3.058,217,0.792,218,0.969,222,2.723,229,3.242,234,2.173,242,1.976,243,2.268,245,2.018,247,1.661,248,1.943,251,1.551,252,1.163,300,2.749,327,1.791,376,1.752,379,3.122,385,1.26,388,2.405,396,3.279,397,2.209,407,1.592,408,1.592,409,1.592,410,1.592,414,1.344,416,2.355,418,1.26,419,1.919,420,1.684,439,3.584,446,1.919,462,1.684,466,1.684,481,1.852,482,2.171,483,3.597,484,3.773,485,3.7,486,3.808,487,3.53,488,4.784,489,4.55,490,4.693,491,2.626,492,3.709,494,2.584,495,3.333,496,4.35,497,3.333,498,2.584,499,2.584,500,3.504,501,4.176,502,3.504,503,3.333,504,2.38,505,3.187,506,3.333,507,2.584,508,2.584,509,2.584,510,3.346,511,3.723,512,2.584,513,2.584,514,2.897,515,2.584,516,3.187,517,2.584,518,3.504,519,2.584,520,3.504,521,4.693,522,2.584,523,2.754,524,2.283,525,3.584,526,2.283,527,1.637,528,2.171,529,1.315,530,1.551,531,2.076,532,1.993,533,2.283,534,2.283,535,2.283,536,2.283,537,2.283,538,1.637,539,2.076,540,2.283,541,2.283,542,2.283,543,2.283,544,2.283,545,2.283,546,2.283,547,2.283,548,3.504,549,2.897,550,2.975,551,2.823,552,2.823,553,2.897,554,3.584,555,3.346,556,2.283,557,3.504,558,2.283,559,2.283,560,4.265,561,1.919,562,2.945,563,3.504,2411,3.149]],["title/controllers/TeamNewsController.html",[642,2.124,1749,3.736]],["body/controllers/TeamNewsController.html",[0,0.128,3,0.141,4,0.118,5,0.081,10,0.28,12,1.86,17,0.245,18,1.341,24,0.575,26,0.852,27,0.006,28,0.488,29,0.552,36,0.927,41,1.005,44,0.379,46,1.125,48,0.133,59,0.004,60,0.004,66,4.057,76,1.76,83,0.911,84,1.021,155,2.409,169,1.981,174,2.12,186,1.586,188,2.267,189,2.992,191,1.761,211,1.508,479,4.514,483,2.635,523,4.114,576,3.476,587,3.557,608,2.542,635,2.542,642,2.369,644,2.673,646,3.435,650,3.435,651,3.936,657,3.936,660,4.166,922,3.435,1196,3.744,1204,4.278,1225,4.812,1434,2.822,1614,5.252,1615,5.167,1621,5.834,1622,5.578,1624,5.853,1638,4.166,1639,4.918,1640,3.579,1641,4.455,1642,5.041,1644,3.744,1645,3.936,1646,4.842,1647,4.842,1653,4.455,1654,4.455,1655,4.842,1656,4.842,1657,4.842,1658,4.842,1659,4.842,1749,5.474,2275,3.435,2412,6.361,2413,4.842,2414,7.965,2415,5.429,2416,7.132,2417,5.429,2418,7.965,2419,5.429,2420,5.429,2421,4.842,2422,4.842,2423,5.429,2424,5.429]],["title/injectables/TimeoutInterceptor.html",[152,1.008,1365,3.736]],["body/injectables/TimeoutInterceptor.html",[0,0.124,3,0.137,4,0.114,5,0.079,10,0.271,11,0.908,17,0.355,18,1.314,24,0.921,26,1.097,27,0.006,28,0.628,29,0.85,31,2.751,41,1.293,44,0.339,46,1.091,48,0.129,59,0.004,60,0.004,64,1.707,83,1.402,134,4.319,152,1.448,153,1.945,247,1.487,248,1.738,281,2.901,491,3.503,549,2.592,550,2.662,551,4.011,552,2.526,553,2.592,554,3.207,588,3.015,642,3.05,680,2.736,877,5.363,882,5.735,889,4.819,901,6.232,902,6.232,903,6.414,904,7.454,906,2.815,907,6.997,910,4.319,912,4.694,994,3.852,995,3.632,1018,4.319,1079,4.039,1269,2.662,1363,6.166,1365,5.363,1588,5.066,1614,4.607,2065,6.232,2425,4.694,2426,6.988,2427,5.066,2428,4.819,2429,5.735,2430,7.845,2431,7.845,2432,7.845,2433,5.263,2434,5.263,2435,6.021,2436,5.263,2437,5.263,2438,5.263,2439,5.263,2440,5.263,2441,6.988,2442,6.988,2443,5.263,2444,6.988,2445,5.263,2446,5.263,2447,5.263,2448,5.263,2449,5.263,2450,5.263,2451,5.263,2452,6.988,2453,5.263,2454,5.263]],["title/classes/UpdateNewsParams.html",[0,0.114,1633,3.529]],["body/classes/UpdateNewsParams.html",[0,0.205,2,1.211,3,0.152,4,0.127,5,0.087,10,0.301,11,1.13,16,3.198,17,0.373,24,0.874,27,0.006,29,0.761,36,1.013,44,0.304,48,0.143,59,0.005,60,0.005,64,2.823,172,2.134,211,2.293,243,2.385,483,3.5,485,4.429,487,4.415,607,4.487,608,3.504,610,4.401,612,5.215,614,6.142,615,4.56,616,6.142,617,5.744,634,5.738,635,2.738,636,6.675,637,7.141,638,6.774,639,3.562,1158,4.736,1197,5.426,1378,5.161,1633,5.426,2455,7.761,2456,7.484,2457,7.484,2458,5.426,2459,6.675,2460,7.484,2461,5.847,2462,5.847,2463,5.847]],["title/classes/User.html",[0,0.114,169,1.352]],["body/classes/User.html",[0,0.113,2,0.996,3,0.125,4,0.105,5,0.072,8,1.654,10,0.434,11,0.854,17,0.416,21,1.171,24,0.986,26,0.755,27,0.006,28,0.724,29,0.858,32,3.363,36,1.084,44,0.327,48,0.161,50,1.617,59,0.004,60,0.004,84,1.515,87,0.451,169,1.826,172,1.525,208,2.806,209,1.362,210,1.925,211,2.557,212,2.198,214,2.198,216,3.054,217,1.209,218,1.479,222,3.231,242,2.687,243,2.095,245,2.745,247,2.116,248,2.474,251,2.368,252,2.768,379,3.353,385,2.632,388,1.965,396,3.515,397,3.005,399,3.156,407,2.431,408,2.431,409,2.431,410,2.431,414,2.052,415,2.828,416,1.925,418,1.925,419,2.929,437,2.147,439,2.929,445,3.69,446,2.929,933,4.161,1207,4.526,1209,2.828,1210,3.156,1215,5.097,1216,5.097,1287,3.69,1291,3.69,1344,6.181,1345,3.946,1346,5.554,1347,4.288,1348,4.288,1349,4.288,1350,4.288,1351,4.288,1352,4.288,1353,4.288,1354,4.288,1355,4.288,1356,4.288,2013,4.288,2464,6.575,2465,4.808,2466,4.808,2467,4.808,2468,4.808,2469,6.575,2470,4.808,2471,4.808,2472,4.808]],["title/controllers/UserController.html",[642,2.124,2473,3.736]],["body/controllers/UserController.html",[0,0.153,3,0.169,4,0.141,5,0.097,10,0.334,12,2.224,17,0.294,18,1.503,24,0.687,26,1.019,27,0.006,28,0.584,29,0.661,41,1.202,44,0.384,46,1.345,48,0.159,59,0.005,60,0.005,83,1.089,155,2.619,169,1.804,174,2.376,186,1.897,188,2.712,211,1.804,635,3.04,642,2.834,644,3.198,646,4.109,650,4.109,651,4.708,657,4.708,1204,4.57,1428,3.957,1615,5.093,1638,4.984,2275,4.109,2473,6.135,2474,5.791,2475,6.494,2476,7.993,2477,6.494,2478,5.71,2479,6.494,2480,6.494,2481,6.494,2482,6.494,2483,6.494]],["title/injectables/UserFacade.html",[152,1.008,1406,3.357]],["body/injectables/UserFacade.html",[0,0.153,3,0.169,4,0.141,5,0.097,10,0.335,12,2.229,17,0.362,18,1.505,21,1.584,24,0.847,26,1.256,27,0.006,28,0.72,29,0.814,41,1.204,44,0.367,46,1.348,48,0.16,59,0.005,60,0.005,76,1.438,83,1.092,152,1.658,153,2.404,155,2.621,174,2.379,186,1.901,188,2.717,191,2.111,748,4.29,1204,4.573,1406,5.519,1428,5.281,1615,3.827,2478,6.233,2484,5.804,2485,8.004,2486,6.507,2487,6.507,2488,8.004,2489,6.507,2490,6.507,2491,6.507]],["title/classes/UserInfoMapper.html",[0,0.114,1702,3.736]],["body/classes/UserInfoMapper.html",[0,0.159,2,1.398,3,0.175,4,0.147,5,0.101,10,0.347,17,0.305,18,1.539,24,0.714,26,1.059,27,0.006,28,0.607,29,0.687,41,1.249,44,0.332,48,0.166,59,0.005,60,0.005,76,1.491,83,1.132,84,1.269,169,2.605,186,1.971,491,3.932,608,3.831,745,5.395,748,4.449,749,4.449,1702,6.28,1816,6.638,1997,7.298,1999,5.178,2000,6.017,2001,6.017,2002,6.017,2003,6.017,2052,5.178,2054,5.537,2492,7.298]],["title/classes/UserInfoResponse.html",[0,0.114,1816,3.529]],["body/classes/UserInfoResponse.html",[0,0.149,2,1.31,3,0.164,4,0.137,5,0.094,10,0.326,11,1.021,17,0.387,24,0.906,27,0.006,28,0.805,29,0.911,36,1.093,44,0.257,48,0.155,59,0.005,60,0.005,64,2.904,169,2.607,172,1.823,209,1.908,211,2.377,623,4.975,624,4.975,633,4.334,634,5.642,635,2.96,641,3.718,1215,5.415,1216,5.415,1816,5.7,1829,7.012,1834,4.852,1885,5.184,2060,4.852,2061,5.188,2062,5.188,2493,7.984,2494,7.012,2495,6.322]],["title/modules/UserModule.html",[111,1.398,118,3.357]],["body/modules/UserModule.html",[0,0.146,3,0.161,4,0.135,5,0.093,27,0.006,44,0.372,46,1.286,48,0.152,59,0.005,60,0.005,111,2.233,113,2.538,114,3.553,118,6.86,121,4.285,122,3.227,123,2.772,125,3.471,147,4.285,642,2.71,644,3.828,1406,6.787,2017,6.444,2034,6.444,2041,3.651,2275,3.929,2473,6.513,2478,6.161,2496,5.537,2497,5.537,2498,5.537,2499,6.161,2500,6.208,2501,6.208]],["title/injectables/UserRepo.html",[152,1.008,2499,3.209]],["body/injectables/UserRepo.html",[0,0.153,3,0.169,4,0.141,5,0.097,10,0.335,12,2.229,17,0.362,18,1.505,21,1.584,24,0.847,26,1.256,27,0.006,28,0.72,29,0.814,41,1.204,44,0.352,46,1.348,48,0.16,59,0.005,60,0.005,76,1.438,83,1.092,152,1.658,153,2.404,155,2.621,162,2.688,169,2.407,174,2.379,186,1.901,188,2.717,191,2.111,209,1.658,217,1.637,219,2.974,265,4.118,266,5.144,268,4.16,2020,7.138,2024,7.138,2499,5.277,2502,5.804,2503,6.507,2504,6.507,2505,6.507]],["title/injectables/UserUC.html",[152,1.008,2478,3.209]],["body/injectables/UserUC.html",[0,0.145,3,0.16,4,0.134,5,0.092,10,0.317,12,2.646,17,0.349,18,1.453,21,1.497,24,0.818,26,1.213,27,0.006,28,0.695,29,0.786,41,1.138,44,0.378,46,1.274,48,0.151,59,0.005,60,0.005,76,1.707,83,1.031,152,1.601,153,2.271,155,2.555,169,1.707,174,2.296,186,1.796,188,2.567,191,1.994,588,2.362,803,5.045,1204,4.482,1428,5.148,1615,3.615,1995,4.718,2034,6.524,2041,3.615,2478,5.094,2499,6.145,2506,5.482,2507,7.725,2508,6.147,2509,6.147,2510,7.725,2511,6.147,2512,5.045,2513,6.147,2514,6.147,2515,5.482,2516,6.147,2517,6.147,2518,5.482,2519,6.147,2520,6.147]],["title/classes/ValidationError.html",[0,0.114,23,3.357]],["body/classes/ValidationError.html",[0,0.136,2,1.2,3,0.15,4,0.126,5,0.086,8,1.871,9,6.094,10,0.298,11,0.966,12,3.298,13,3.247,14,5.398,15,5.102,16,2.922,17,0.432,18,1.399,19,6.744,20,6.744,21,1.41,23,5.13,24,1.001,26,0.909,27,0.006,28,0.521,29,0.589,31,1.782,32,3.898,33,5.166,34,5.913,35,5.166,36,1.069,37,5.166,38,5.166,39,5.166,40,5.166,41,1.377,42,5.166,43,3.407,44,0.302,45,4.445,46,1.2,47,5.166,48,0.142,49,4.754,50,1.948,53,3.098,54,2.648,55,4.199,58,5.166,59,0.005,60,0.005,312,3.407,2521,5.166,2522,5.792,2523,5.792,2524,5.792]],["title/classes/ValidationErrorDetailResponse.html",[0,0.114,71,3.736]],["body/classes/ValidationErrorDetailResponse.html",[0,0.169,2,1.488,3,0.186,4,0.156,5,0.107,12,2.461,17,0.325,21,1.749,24,0.76,26,1.128,27,0.006,28,0.646,29,0.731,36,1.126,48,0.176,49,5.895,54,3.883,59,0.005,60,0.005,68,4.839,71,6.52,2525,7.577,2526,6.406,2527,7.183,2528,7.183,2529,6.972]],["title/modules/ValidationModule.html",[111,1.398,355,3.529]],["body/modules/ValidationModule.html",[0,0.169,3,0.187,4,0.157,5,0.107,27,0.006,44,0.368,46,1.492,48,0.177,59,0.005,60,0.005,111,2.444,113,2.943,125,3.215,355,6.167,369,7.587,880,4.556,891,3.742,926,5.525,1150,6.529,2530,7.2,2531,7.2,2532,7.2]],["title/changelog.html",[2533,3.124,2534,2.808,2535,3.631]],["body/changelog.html",[0,0.046,2,0.843,3,0.015,4,0.012,5,0.075,10,0.03,13,1.318,14,0.913,15,0.327,24,0.209,27,0.002,28,0.14,29,0.158,31,0.335,41,0.287,44,0.08,52,2.75,53,1.773,54,2.501,56,1.125,57,0.727,59,0.001,60,0.001,68,2.052,83,0.096,84,1.054,87,0.102,106,0.83,111,0.867,114,0.498,122,0.566,123,0.486,125,0.257,126,0.276,147,0.317,150,1.223,155,0.174,166,1.568,168,0.64,169,1.975,171,0.307,172,0.36,173,0.498,174,0.461,175,0.751,178,0.379,181,1.404,182,1.023,189,0.317,191,0.186,201,0.327,209,0.408,221,0.416,226,0.379,227,2.927,230,0.441,233,2.315,234,1.729,236,2.942,238,0.751,239,0.689,243,1.056,247,0.936,248,0.36,257,0.396,261,2.948,291,0.441,302,0.338,303,0.396,304,1.159,305,1.709,306,0.689,307,0.523,322,0.751,338,0.471,341,1.296,342,0.689,344,3.774,345,1.527,357,0.718,361,0.471,363,2.394,365,2.185,367,0.338,376,1.554,379,2.627,380,2.256,382,2.646,397,0.263,416,0.789,421,1.023,430,0.789,431,1.705,432,0.396,438,0.946,457,0.338,467,0.416,483,0.402,484,0.257,485,0.971,486,0.83,503,1.07,504,1.889,510,0.883,516,0.379,523,1.264,527,0.566,529,0.24,549,0.971,550,0.551,551,0.276,553,0.536,555,0.327,576,0.251,587,1.206,609,1.191,610,0.64,615,1.645,618,0.471,619,4.672,625,0.718,630,1.159,646,0.364,650,0.364,681,0.379,684,0.317,686,0.379,690,0.663,719,0.35,721,0.416,722,1.827,724,0.441,754,2.211,793,1.125,805,0.416,821,1.976,834,0.663,835,0.396,836,0.364,838,0.894,849,0.789,850,0.536,873,3.773,874,2.402,875,1.023,876,1.718,886,0.441,887,2.367,891,0.807,899,0.718,906,0.307,922,0.982,933,0.364,935,1.159,936,0.523,937,0.663,938,0.751,964,0.971,978,0.582,993,0.338,994,0.317,995,1.722,996,2.097,998,2.083,1005,1.025,1007,2.185,1011,0.35,1015,0.364,1017,0.441,1026,2.189,1027,0.982,1033,1.191,1035,0.35,1041,0.751,1046,2.019,1053,0.471,1056,1.054,1057,0.789,1061,0.441,1080,0.471,1081,0.751,1083,1.07,1085,0.416,1087,0.718,1098,0.338,1103,0.836,1113,1.429,1115,0.789,1118,0.364,1133,1.191,1142,0.471,1154,1.645,1156,0.471,1157,1.618,1158,1.489,1161,2.646,1162,3.34,1169,0.836,1171,1.958,1175,0.471,1176,0.946,1178,1.705,1179,0.64,1195,3.35,1196,1.359,1197,0.416,1199,0.364,1207,1.404,1208,2.285,1209,4.283,1210,1.129,1212,0.751,1224,0.64,1225,0.883,1228,0.379,1236,1.023,1254,0.6,1256,0.619,1260,1.781,1261,1.433,1264,1.125,1265,1.206,1268,0.396,1269,1.366,1283,0.441,1286,0.789,1295,0.894,1298,1.023,1309,0.471,1312,0.789,1341,0.718,1346,1.07,1361,0.338,1363,0.396,1364,3.148,1373,0.441,1377,0.471,1378,1.359,1381,0.416,1382,1.781,1389,1.125,1392,0.471,1394,0.471,1403,0.471,1410,1.384,1412,2.318,1414,1.991,1427,0.836,1434,1.223,1438,1.159,1448,5.089,1451,1.125,1476,1.125,1483,0.396,1484,6.393,1486,0.441,1489,1.023,1494,0.512,1497,2.097,1512,0.299,1516,1.551,1534,1.274,1545,0.441,1548,0.751,1562,0.718,1572,0.396,1574,0.396,1576,0.441,1585,0.894,1586,1.3,1587,2.285,1588,0.789,1607,2.189,1610,1.958,1614,0.718,1629,0.982,1631,1.359,1637,2.409,1660,0.471,1672,0.416,1678,3.197,1757,1.551,1758,1.023,1759,4.622,1763,0.751,1774,1.384,1804,0.471,1807,0.338,1814,0.471,1820,1.274,1832,1.087,1840,2.318,1853,0.751,1860,1.07,1861,0.327,1863,0.946,1883,1.758,1885,1.023,1893,0.789,1931,0.512,1932,1.958,1949,4.576,1951,1.054,1960,0.971,2041,0.913,2112,0.416,2118,0.441,2132,4.666,2142,2.402,2143,0.379,2144,0.982,2145,0.471,2148,2.285,2160,1.622,2162,0.836,2166,1.274,2167,0.379,2217,1.758,2218,1.93,2220,1.758,2224,3.123,2234,1.862,2285,0.894,2287,0.971,2311,2.478,2315,0.751,2316,0.441,2319,0.836,2322,0.836,2324,0.512,2369,0.894,2370,0.894,2427,1.125,2435,0.441,2458,1.958,2494,1.384,2529,0.894,2535,2.693,2536,0.574,2537,1.359,2538,0.894,2539,0.512,2540,1.429,2541,0.574,2542,0.574,2543,1.552,2544,0.751,2545,4.154,2546,6.07,2547,8.185,2548,4.124,2549,0.574,2550,7.227,2551,0.574,2552,2.364,2553,1.089,2554,0.512,2555,0.574,2556,1.125,2557,2.285,2558,5.331,2559,0.574,2560,0.574,2561,1.971,2562,1.552,2563,2.599,2564,0.574,2565,0.574,2566,8.306,2567,5.849,2568,3.02,2569,0.574,2570,0.512,2571,0.574,2572,0.574,2573,0.416,2574,0.574,2575,2.409,2576,0.574,2577,0.574,2578,0.574,2579,1.089,2580,5.025,2581,0.574,2582,0.574,2583,0.574,2584,1.089,2585,0.512,2586,0.574,2587,0.836,2588,0.574,2589,1.552,2590,3.422,2591,0.574,2592,0.574,2593,0.574,2594,0.574,2595,0.971,2596,1.552,2597,0.574,2598,0.574,2599,0.574,2600,0.574,2601,0.574,2602,2.216,2603,0.574,2604,0.574,2605,7.267,2606,1.862,2607,1.089,2608,0.574,2609,0.416,2610,1.971,2611,0.512,2612,1.429,2613,0.971,2614,0.574,2615,3.836,2616,1.552,2617,0.574,2618,5.883,2619,0.574,2620,0.574,2621,0.574,2622,0.574,2623,5.472,2624,0.574,2625,3.978,2626,0.971,2627,0.574,2628,0.574,2629,0.574,2630,3.02,2631,2.216,2632,0.574,2633,0.574,2634,0.574,2635,0.574,2636,1.552,2637,0.574,2638,1.758,2639,8.836,2640,0.574,2641,0.471,2642,1.758,2643,1.552,2644,1.089,2645,0.574,2646,0.574,2647,1.862,2648,0.574,2649,0.574,2650,1.089,2651,0.574,2652,0.574,2653,1.758,2654,0.471,2655,1.384,2656,0.574,2657,2.098,2658,0.471,2659,0.574,2660,0.574,2661,0.574,2662,0.574,2663,1.384,2664,0.574,2665,0.574,2666,0.574,2667,0.574,2668,1.93,2669,3.02,2670,2.693,2671,0.574,2672,0.574,2673,0.574,2674,0.574,2675,0.574,2676,0.574,2677,0.574,2678,0.751,2679,1.552,2680,0.574,2681,0.574,2682,0.396,2683,0.574,2684,0.574,2685,0.574,2686,5.731,2687,0.512,2688,1.552,2689,0.574,2690,5.472,2691,0.574,2692,1.089,2693,2.352,2694,0.512,2695,0.574,2696,0.574,2697,0.574,2698,0.574,2699,1.384,2700,2.352,2701,0.574,2702,2.352,2703,0.574,2704,1.971,2705,1.089,2706,2.318,2707,0.574,2708,0.574,2709,0.574,2710,1.971,2711,0.574,2712,1.971,2713,4.005,2714,0.574,2715,0.574,2716,1.089,2717,1.971,2718,3.34,2719,0.574,2720,1.089,2721,0.512,2722,0.512,2723,0.441,2724,0.512,2725,1.93,2726,0.894,2727,2.543,2728,1.429,2729,0.396,2730,1.089,2731,0.574,2732,0.574,2733,1.384,2734,0.574,2735,0.574,2736,0.574,2737,0.574,2738,1.552,2739,1.089,2740,0.574,2741,0.574,2742,5.472,2743,1.805,2744,1.089,2745,1.089,2746,1.089,2747,1.758,2748,0.574,2749,3.314,2750,0.574,2751,0.574,2752,0.574,2753,1.758,2754,1.089,2755,0.574,2756,0.574,2757,1.552,2758,0.574,2759,0.471,2760,0.751,2761,2.098,2762,0.512,2763,1.191,2764,0.574,2765,2.693,2766,0.574,2767,1.552,2768,2.478,2769,0.574,2770,0.574,2771,0.574,2772,1.089,2773,1.125,2774,0.574,2775,2.098,2776,1.089,2777,0.574,2778,0.574,2779,1.971,2780,2.352,2781,1.618,2782,0.894,2783,0.574,2784,0.574,2785,2.942,2786,0.574,2787,0.574,2788,0.574,2789,0.971,2790,0.574,2791,0.574,2792,1.552,2793,0.894,2794,0.574,2795,0.971,2796,0.574,2797,3.314,2798,3.148,2799,1.089,2800,2.352,2801,0.574,2802,0.574,2803,0.574,2804,1.758,2805,0.512,2806,1.384,2807,0.574,2808,0.574,2809,0.574,2810,0.471,2811,0.574,2812,0.574,2813,0.574,2814,0.574,2815,2.701,2816,1.971,2817,0.574,2818,0.971,2819,0.441,2820,2.693,2821,0.471,2822,1.971,2823,1.089,2824,0.971,2825,1.359,2826,0.971,2827,0.971,2828,1.247,2829,1.781,2830,0.574,2831,0.574,2832,0.512,2833,0.574,2834,0.471,2835,0.416,2836,0.574,2837,0.512,2838,0.574,2839,1.971,2840,0.574,2841,6.271,2842,0.574,2843,0.574,2844,0.574,2845,0.574,2846,0.574,2847,1.552,2848,0.574,2849,1.274,2850,0.574,2851,0.574,2852,0.574,2853,0.574,2854,1.089,2855,0.574,2856,0.574,2857,1.089,2858,0.574,2859,1.971,2860,0.894,2861,0.574,2862,0.574,2863,0.574,2864,1.958,2865,0.574,2866,0.574,2867,0.574,2868,0.416,2869,0.574,2870,1.971,2871,0.574,2872,2.955,2873,0.574,2874,0.512,2875,0.574,2876,3.34,2877,1.089,2878,1.125,2879,1.089,2880,0.574,2881,0.574,2882,3.824,2883,0.574,2884,0.574,2885,0.574,2886,0.574,2887,3.836,2888,3.314,2889,0.574,2890,4.68,2891,0.574,2892,0.574,2893,0.574,2894,2.352,2895,0.574,2896,0.574,2897,1.618,2898,0.471,2899,0.574,2900,0.512,2901,0.574,2902,1.758,2903,0.574,2904,0.574,2905,1.552,2906,0.574,2907,1.758,2908,0.574,2909,0.574,2910,1.552,2911,0.971,2912,0.971,2913,1.089,2914,1.089,2915,1.758,2916,1.089,2917,0.512,2918,0.574,2919,1.089,2920,1.089,2921,1.552,2922,1.089,2923,1.758,2924,0.574,2925,0.971,2926,0.574,2927,1.089,2928,0.971,2929,0.574,2930,2.693,2931,1.089,2932,0.574,2933,2.098,2934,0.574,2935,2.701,2936,3.02,2937,0.574,2938,0.574,2939,1.089,2940,0.574,2941,0.512,2942,0.574,2943,0.574,2944,0.574,2945,0.512,2946,0.574,2947,0.574,2948,0.574,2949,0.574,2950,0.574,2951,0.574,2952,0.574,2953,0.574,2954,0.574,2955,1.089,2956,3.197,2957,0.574,2958,1.384,2959,0.894,2960,0.574,2961,0.574,2962,1.089,2963,1.089,2964,0.574,2965,1.618,2966,0.574,2967,0.574,2968,1.07,2969,0.574,2970,0.574,2971,0.574,2972,0.574,2973,1.971,2974,3.585,2975,0.574,2976,0.574,2977,0.574,2978,1.274,2979,0.471,2980,0.574,2981,0.574,2982,0.574,2983,1.089,2984,1.089,2985,1.089,2986,0.971,2987,1.089,2988,0.574,2989,1.384,2990,0.574,2991,0.574,2992,0.574,2993,2.097,2994,0.574,2995,1.089,2996,0.574,2997,0.574,2998,0.971,2999,0.574,3000,0.574,3001,1.384,3002,1.758,3003,0.574,3004,0.574,3005,0.971,3006,0.574,3007,0.574,3008,0.574,3009,0.574,3010,0.574,3011,2.701,3012,1.089,3013,0.574,3014,0.574,3015,0.574,3016,0.574,3017,0.574,3018,0.574,3019,0.971,3020,0.574,3021,0.574,3022,2.409,3023,0.574,3024,1.384,3025,0.574,3026,0.574,3027,0.971,3028,0.574,3029,0.574,3030,2.352,3031,1.089,3032,0.574,3033,1.552,3034,1.125,3035,0.574,3036,0.574,3037,0.574,3038,1.089,3039,0.574,3040,0.574,3041,0.971,3042,0.574,3043,0.574,3044,0.836,3045,1.089,3046,2.701,3047,0.574,3048,0.574,3049,0.574,3050,0.471,3051,0.574,3052,1.089,3053,0.971,3054,0.574,3055,0.574,3056,0.574,3057,0.574,3058,2.352,3059,0.512,3060,0.574,3061,0.971,3062,0.574,3063,0.512,3064,1.971,3065,0.894,3066,0.574,3067,1.089,3068,1.552,3069,0.574,3070,0.574,3071,0.416,3072,0.574,3073,0.574,3074,1.089,3075,0.574,3076,0.471,3077,0.574,3078,0.574,3079,0.574,3080,1.552,3081,0.574,3082,0.574,3083,1.089,3084,0.574,3085,0.574,3086,0.574,3087,0.574,3088,1.089,3089,0.574,3090,1.552,3091,0.441,3092,0.574,3093,0.574,3094,1.125,3095,1.089,3096,1.429,3097,0.574,3098,0.574,3099,0.574,3100,0.574,3101,1.552,3102,1.513,3103,0.574,3104,0.512,3105,0.574,3106,1.552,3107,0.574,3108,0.574,3109,0.574,3110,1.552,3111,0.574,3112,0.574,3113,1.089,3114,0.574,3115,1.384,3116,1.089,3117,0.574,3118,0.574,3119,0.574,3120,0.574,3121,0.574,3122,0.441,3123,0.836,3124,0.441,3125,0.574,3126,0.574,3127,0.512,3128,0.971,3129,0.574,3130,0.574,3131,0.574,3132,0.574,3133,1.552,3134,0.574,3135,0.574,3136,0.574,3137,1.971,3138,0.574,3139,1.089,3140,1.089,3141,0.574,3142,0.574,3143,0.574,3144,1.089,3145,0.574,3146,0.574,3147,0.574,3148,0.512,3149,0.512,3150,0.574,3151,0.574,3152,0.574,3153,0.512,3154,0.574,3155,0.574,3156,0.574,3157,0.574,3158,0.574,3159,0.574,3160,0.574,3161,0.574,3162,0.512,3163,0.574,3164,0.574,3165,0.574,3166,0.574,3167,0.574,3168,0.574,3169,1.089,3170,0.574,3171,0.574,3172,0.512,3173,1.089,3174,0.574,3175,0.894,3176,1.359,3177,0.574,3178,1.089,3179,0.512,3180,0.574,3181,0.512,3182,0.574,3183,1.089,3184,0.574,3185,0.574,3186,0.471,3187,0.574,3188,2.352,3189,0.574,3190,0.574,3191,0.574,3192,0.574,3193,0.512,3194,0.574,3195,0.574,3196,0.574,3197,0.574,3198,0.574,3199,0.441,3200,0.574,3201,1.552,3202,0.574,3203,0.574,3204,0.574,3205,0.574,3206,0.574,3207,0.718,3208,1.089,3209,0.574,3210,1.552,3211,0.574,3212,0.574,3213,0.574,3214,0.574,3215,0.574,3216,0.574,3217,0.574,3218,0.574,3219,0.574,3220,1.089,3221,0.471,3222,1.089,3223,0.512,3224,1.274,3225,0.574,3226,0.836,3227,0.574,3228,0.471,3229,0.574,3230,8.203,3231,3.02,3232,0.574,3233,0.574,3234,0.471,3235,0.574,3236,0.574,3237,0.574,3238,0.574,3239,0.574,3240,2.701,3241,0.574,3242,1.125,3243,0.574,3244,0.574,3245,0.574,3246,0.574,3247,0.574,3248,1.971,3249,1.971,3250,1.429,3251,1.384,3252,2.352,3253,1.089,3254,1.089,3255,2.955,3256,1.513,3257,3.02,3258,0.971,3259,1.089,3260,1.089,3261,0.894,3262,1.089,3263,0.574,3264,0.574,3265,2.693,3266,0.471,3267,0.396,3268,0.894,3269,0.574,3270,0.441,3271,0.396,3272,0.441,3273,0.574,3274,0.574,3275,0.512,3276,0.574,3277,0.574,3278,0.574,3279,0.574,3280,0.574,3281,1.089,3282,0.574,3283,0.574,3284,1.089,3285,0.574,3286,0.574,3287,0.574,3288,0.512,3289,0.574,3290,0.574,3291,0.971,3292,0.471,3293,0.574,3294,1.552,3295,0.574,3296,0.512,3297,1.089,3298,0.574,3299,0.574,3300,0.512,3301,0.574,3302,1.089,3303,0.574,3304,0.574,3305,0.574,3306,0.574,3307,0.574,3308,0.971,3309,0.971,3310,1.971,3311,1.618,3312,0.574,3313,0.574,3314,0.574,3315,1.274,3316,0.574,3317,0.574,3318,0.574,3319,1.089,3320,1.552,3321,0.574,3322,0.574,3323,0.574,3324,0.574,3325,1.089,3326,0.574,3327,0.836,3328,0.512,3329,1.089,3330,0.574,3331,0.512,3332,0.574,3333,0.574,3334,0.574,3335,1.089,3336,1.089,3337,0.574,3338,0.574,3339,0.574,3340,0.574,3341,0.574,3342,1.552,3343,1.552,3344,1.513,3345,0.396,3346,1.93,3347,0.574,3348,1.089,3349,0.574,3350,0.574,3351,0.512,3352,1.089,3353,1.552,3354,0.971,3355,0.574,3356,0.574,3357,0.512,3358,0.574,3359,0.574,3360,1.622,3361,0.574,3362,0.574,3363,0.574,3364,0.574,3365,0.574,3366,0.574,3367,0.574,3368,0.574,3369,0.574,3370,0.574,3371,1.089,3372,0.512,3373,0.471,3374,0.512,3375,0.574,3376,0.471,3377,0.574,3378,0.471,3379,0.574,3380,1.274,3381,0.574,3382,0.574,3383,0.574,3384,1.089,3385,0.574,3386,0.574,3387,0.574,3388,0.894,3389,0.574,3390,0.574,3391,0.574,3392,0.574,3393,0.574,3394,0.512,3395,0.574,3396,1.089,3397,0.574,3398,0.574,3399,1.089,3400,1.089,3401,1.552,3402,1.758,3403,1.089,3404,1.274,3405,0.894,3406,0.396,3407,0.574,3408,0.471,3409,0.512,3410,0.574,3411,0.789,3412,0.574,3413,1.384,3414,0.574,3415,0.574,3416,0.574,3417,0.574,3418,0.512,3419,0.574,3420,1.089,3421,1.552,3422,0.971,3423,0.574,3424,0.574,3425,0.574,3426,1.089,3427,0.971,3428,1.089,3429,0.574,3430,0.574,3431,0.574,3432,0.574,3433,0.574,3434,0.574,3435,0.574,3436,0.574,3437,0.574,3438,0.512,3439,0.512,3440,0.574,3441,0.574,3442,1.552,3443,0.574,3444,1.089,3445,0.574,3446,0.971,3447,0.574,3448,1.089,3449,0.574,3450,1.089,3451,0.574,3452,0.894,3453,0.574,3454,0.512,3455,0.574,3456,0.574,3457,0.512,3458,1.552,3459,1.971,3460,1.089,3461,0.751,3462,0.971,3463,1.089,3464,0.971,3465,1.089,3466,0.574,3467,1.089,3468,0.512,3469,0.574,3470,1.089,3471,0.971,3472,0.574,3473,0.512,3474,0.574,3475,0.512,3476,0.574,3477,0.574,3478,1.089,3479,0.574,3480,0.574,3481,0.894,3482,0.574,3483,3.314,3484,0.574,3485,0.512,3486,0.512,3487,0.574,3488,0.574,3489,0.574,3490,0.574,3491,0.574,3492,0.574,3493,0.574,3494,0.574,3495,0.574,3496,0.574,3497,0.574,3498,0.574,3499,0.574,3500,0.574,3501,0.894,3502,0.574,3503,0.574,3504,0.574,3505,0.574,3506,0.574,3507,0.574,3508,0.574,3509,0.574,3510,0.574,3511,0.574,3512,0.471,3513,0.574,3514,0.471,3515,0.574,3516,0.574,3517,0.512,3518,0.574,3519,0.574,3520,0.574,3521,0.574,3522,0.574,3523,0.574,3524,0.574,3525,0.574,3526,0.574,3527,0.574,3528,0.471,3529,0.574,3530,0.574,3531,0.574,3532,0.574,3533,1.552,3534,0.574,3535,1.089,3536,1.552,3537,1.089,3538,1.089,3539,1.089,3540,1.089,3541,0.574,3542,0.574,3543,0.574,3544,0.574,3545,0.574,3546,0.574,3547,0.512,3548,0.574,3549,1.089,3550,0.574,3551,0.574,3552,0.441,3553,0.574,3554,0.471,3555,0.574,3556,1.089,3557,0.574,3558,0.441,3559,0.574,3560,0.574,3561,0.574,3562,0.574,3563,0.471,3564,0.574,3565,1.552,3566,1.552,3567,0.574,3568,0.971,3569,0.574,3570,0.574,3571,0.574,3572,0.574,3573,0.574,3574,0.574,3575,0.512,3576,0.574,3577,0.574,3578,1.089,3579,0.512,3580,0.512,3581,0.512,3582,0.574,3583,0.574,3584,0.574,3585,0.574,3586,0.574,3587,0.574,3588,0.574,3589,0.574,3590,0.574,3591,1.089,3592,1.089,3593,0.574,3594,0.512,3595,0.574,3596,0.574,3597,0.574,3598,1.089,3599,0.574,3600,0.574,3601,1.089,3602,0.574,3603,1.089,3604,0.574,3605,0.574,3606,1.089,3607,1.971,3608,0.574,3609,0.574,3610,0.574,3611,0.574,3612,0.574,3613,0.836,3614,0.512,3615,1.089,3616,0.574,3617,0.574,3618,0.574,3619,0.574,3620,0.574,3621,0.574,3622,0.574,3623,0.574,3624,0.574,3625,0.574,3626,0.574,3627,0.574,3628,0.574,3629,0.574,3630,1.552,3631,0.574,3632,0.574,3633,0.574,3634,0.574,3635,0.574,3636,0.574,3637,0.574,3638,1.089,3639,1.089,3640,0.574,3641,0.574,3642,0.574,3643,1.971,3644,4.287,3645,1.089,3646,0.894,3647,0.971,3648,1.089,3649,0.971,3650,1.089,3651,0.574,3652,1.089,3653,0.971,3654,1.089,3655,1.089,3656,1.089,3657,0.894,3658,1.089,3659,1.971,3660,1.089,3661,1.971,3662,1.089,3663,1.089,3664,0.971,3665,0.971,3666,1.552,3667,1.089,3668,0.574,3669,0.471,3670,0.836,3671,0.441,3672,1.089,3673,0.574,3674,2.352,3675,1.089,3676,0.574,3677,0.471,3678,0.574,3679,1.971,3680,0.574,3681,0.574,3682,0.574,3683,0.574,3684,0.512,3685,0.574,3686,0.574,3687,0.574,3688,1.089,3689,1.089,3690,1.089,3691,0.574,3692,0.574,3693,0.574,3694,0.574,3695,0.574,3696,1.089,3697,1.089,3698,0.574,3699,0.574,3700,0.574,3701,0.441,3702,0.574,3703,0.574,3704,0.574,3705,1.089,3706,0.574,3707,1.552,3708,1.384,3709,0.574,3710,0.574,3711,0.471,3712,1.089,3713,1.089,3714,0.574,3715,0.441,3716,0.574,3717,0.574,3718,1.552,3719,1.089,3720,1.089,3721,0.574,3722,1.089,3723,0.574,3724,0.574,3725,0.574,3726,1.971,3727,0.574,3728,0.574,3729,0.574,3730,0.574,3731,0.574,3732,0.574,3733,0.574,3734,1.089,3735,0.574,3736,0.574,3737,0.574,3738,0.512,3739,0.574,3740,1.089,3741,0.574,3742,0.574,3743,0.471,3744,0.574,3745,1.089,3746,0.574,3747,0.512,3748,0.574,3749,1.089,3750,1.089,3751,0.574,3752,0.574,3753,0.512,3754,1.089,3755,0.574,3756,0.574,3757,1.089,3758,1.089,3759,0.574,3760,0.574,3761,0.574,3762,1.089,3763,1.089,3764,0.574,3765,0.574,3766,1.089,3767,0.574,3768,0.574,3769,0.574,3770,1.089,3771,0.574,3772,0.574,3773,0.471,3774,0.574,3775,1.971,3776,0.471,3777,0.574,3778,0.574,3779,1.089,3780,0.512,3781,0.441,3782,1.089,3783,0.574,3784,2.352,3785,1.089,3786,0.441,3787,0.574,3788,0.574,3789,0.471,3790,0.574,3791,0.574,3792,0.574,3793,0.574,3794,0.574,3795,0.574,3796,0.574,3797,0.574,3798,0.574,3799,0.574,3800,0.574,3801,0.574,3802,0.971,3803,0.574,3804,0.574,3805,0.574,3806,0.574,3807,0.471,3808,0.574,3809,0.574,3810,0.512,3811,0.574,3812,0.512,3813,0.574,3814,0.574,3815,0.574,3816,0.471,3817,0.441,3818,0.574,3819,0.574,3820,0.512,3821,1.552,3822,0.574,3823,0.512,3824,0.512,3825,0.574,3826,0.512,3827,0.574,3828,0.574,3829,0.574,3830,0.574,3831,0.574,3832,1.971,3833,0.574,3834,0.574,3835,0.512,3836,0.574,3837,1.384,3838,0.574,3839,0.574,3840,0.574,3841,0.574,3842,0.512,3843,0.574,3844,0.574,3845,1.089,3846,0.574,3847,0.574,3848,0.574,3849,1.089,3850,0.574,3851,0.574,3852,0.574,3853,0.574,3854,1.552,3855,1.089,3856,1.089,3857,0.574,3858,0.512,3859,0.574,3860,1.089,3861,0.512,3862,1.552,3863,0.574,3864,0.574,3865,0.574,3866,0.574,3867,0.574,3868,1.089,3869,1.089,3870,1.089,3871,1.089,3872,1.384,3873,1.089,3874,0.574,3875,1.089,3876,0.574,3877,1.089,3878,0.512,3879,1.552,3880,0.574,3881,0.574,3882,0.574,3883,0.574,3884,2.352,3885,0.574,3886,0.512,3887,0.574,3888,0.574,3889,0.574,3890,0.512,3891,0.574,3892,0.894,3893,0.574,3894,0.512,3895,0.441,3896,0.574,3897,0.574,3898,0.574,3899,0.574,3900,1.089,3901,0.574,3902,0.574,3903,0.574,3904,0.574,3905,0.512,3906,0.574,3907,0.574,3908,0.471,3909,0.574,3910,0.574,3911,0.471,3912,0.574,3913,0.574,3914,0.574,3915,1.089,3916,0.512]],["title/coverage.html",[3207,4.371]],["body/coverage.html",[0,0.227,1,1.307,5,0.05,6,1.769,7,1.769,9,1.255,17,0.09,23,1.367,27,0.006,43,1.166,53,1.061,54,2.306,59,0.002,60,0.002,61,1.522,62,1.769,63,1.769,71,1.522,84,0.373,87,0.881,88,1.208,90,4.096,91,1.208,95,1.208,99,1.208,102,1.208,105,1.208,106,1.061,119,1.438,120,1.367,133,2.297,144,1.208,145,1.307,152,1.87,154,1.769,169,0.925,206,1.255,207,2.733,222,0.719,247,0.56,254,1.367,255,1.769,299,1.769,310,1.438,331,1.367,332,1.769,333,1.522,334,1.769,376,0.719,377,3.305,379,0.733,386,1.522,457,1.166,458,2.733,460,1.522,471,1.627,472,1.769,481,1.166,482,3.878,483,0.733,484,0.885,521,1.307,523,0.928,561,1.208,562,1.208,564,1.307,565,2.733,576,0.865,578,1.522,605,1.367,606,2.733,607,3.305,628,3.122,642,2.825,643,1.522,645,1.769,650,1.255,652,1.367,654,1.367,655,1.522,662,1.093,663,3.708,670,1.255,677,1.307,679,1.166,694,1.166,703,1.307,704,3.305,716,1.307,725,1.208,729,1.438,730,2.733,744,1.769,772,1.438,773,1.769,819,1.367,820,2.733,832,1.438,850,4.974,853,1.769,868,1.522,869,3.534,870,3.534,881,1.627,888,1.627,894,1.627,895,1.769,896,1.769,900,1.128,923,1.438,927,1.769,931,1.627,940,2.97,941,2.733,948,1.255,984,1.367,985,1.769,986,1.769,1002,1.522,1003,2.556,1004,2.415,1042,2.733,1043,1.522,1048,1.522,1049,3.534,1055,1.627,1058,5.757,1059,5.438,1062,1.627,1076,1.627,1078,1.627,1084,1.627,1088,1.627,1098,4.412,1126,1.522,1127,1.627,1139,1.627,1150,1.522,1151,1.769,1152,1.769,1189,1.367,1190,2.415,1201,1.367,1204,1.003,1205,3.122,1210,0.952,1211,1.367,1214,1.307,1219,1.769,1220,1.769,1221,1.307,1222,2.415,1223,2.415,1227,1.438,1233,1.522,1234,1.769,1252,1.367,1253,3.657,1254,1.093,1256,1.128,1258,1.367,1262,1.367,1265,0.885,1280,1.522,1281,2.733,1292,1.522,1293,2.733,1333,1.522,1334,2.733,1335,2.733,1340,1.367,1344,1.522,1345,2.733,1365,1.522,1366,1.522,1367,1.769,1368,1.769,1371,3.534,1400,1.522,1401,1.769,1402,1.769,1404,1.769,1406,1.367,1428,1.208,1439,2.733,1440,2.733,1471,2.733,1473,1.522,1479,1.769,1507,2.415,1510,1.522,1517,1.367,1524,1.522,1533,2.733,1537,1.522,1547,1.627,1548,2.297,1549,1.627,1550,1.627,1560,1.522,1563,1.627,1605,1.522,1606,1.769,1615,1.166,1621,1.367,1622,1.307,1633,1.438,1639,1.367,1640,1.307,1642,1.255,1644,1.367,1645,1.438,1669,2.733,1670,2.733,1684,1.627,1687,1.769,1699,1.522,1701,1.522,1702,1.522,1747,1.307,1749,1.522,1764,1.769,1769,1.367,1791,1.522,1812,3.305,1816,1.438,1822,1.438,1827,1.627,1831,1.438,1832,1.093,1844,2.733,1845,2.733,1852,1.522,1867,1.769,1868,1.627,1948,1.769,1965,1.769,1977,1.769,1978,1.627,1986,1.627,1995,1.522,1996,1.769,2017,1.367,2018,1.769,2034,1.367,2035,1.769,2047,1.769,2051,1.769,2052,3.305,2059,1.769,2060,3.305,2064,4.967,2106,1.522,2107,1.769,2133,1.522,2134,1.769,2148,2.297,2182,1.627,2183,1.769,2197,1.769,2202,1.769,2209,1.367,2210,1.627,2232,1.522,2233,1.769,2236,1.367,2238,1.438,2239,1.522,2249,1.769,2272,1.367,2277,1.769,2295,1.522,2323,1.769,2334,1.769,2349,1.627,2409,1.769,2412,1.769,2413,1.769,2425,1.769,2435,1.522,2455,1.769,2473,1.522,2474,1.769,2478,1.307,2484,1.769,2492,1.769,2493,1.769,2499,1.307,2502,1.769,2506,1.769,2521,1.769,2525,1.769,2526,1.769,2575,3.84,2595,1.769,2743,1.522,2775,1.769,2785,1.627,2864,1.438,2876,2.733,3024,2.97,3041,1.769,3061,1.769,3176,1.367,3207,1.307,3773,7.73,3917,1.627,3918,8.103,3919,9.498,3920,7.064,3921,7.064,3922,9.026,3923,1.769,3924,2.733,3925,6.089,3926,1.983,3927,6.089,3928,6.089,3929,5.623,3930,7.977,3931,1.769,3932,1.769,3933,3.84,3934,3.84,3935,1.769,3936,1.769,3937,6.792,3938,1.769,3939,3.534,3940,1.627,3941,1.769,3942,1.983,3943,1.769,3944,1.983,3945,5.623,3946,1.983,3947,3.33,3948,3.33,3949,1.983,3950,1.983,3951,7.064,3952,1.983,3953,1.983,3954,3.33,3955,6.089,3956,1.983,3957,6.472,3958,1.769,3959,1.769,3960,3.33,3961,2.97,3962,2.97,3963,1.769,3964,1.769,3965,1.769,3966,1.769,3967,1.769,3968,1.983,3969,4.306,3970,1.983,3971,4.306,3972,1.983,3973,1.769,3974,1.769,3975,1.769,3976,1.769,3977,1.769,3978,1.769,3979,1.983,3980,1.983,3981,1.983,3982,1.769,3983,1.769,3984,1.769,3985,1.769,3986,1.769,3987,1.769,3988,1.769,3989,1.769,3990,3.534,3991,1.983]],["title/dependencies.html",[114,2.674,3512,3.341]],["body/dependencies.html",[0,0.135,4,0.086,5,0.086,17,0.18,27,0.006,46,0.823,52,1.907,59,0.004,60,0.004,114,1.816,128,3.049,130,3.543,150,3.511,155,1.738,174,2.2,181,2.065,209,0.823,217,1.699,218,1.222,219,1.816,305,4.275,341,1.907,342,2.514,344,1.956,357,2.62,359,2.62,426,2.74,495,3.964,511,2.514,549,2.831,635,1.86,639,4.116,880,2.514,910,3.26,995,2.988,1015,4.685,1016,3.26,1073,3.543,1346,2.74,1382,2.62,1413,6.025,1414,2.62,1454,3.543,1515,2.88,1516,2.62,1519,2.88,1558,3.26,1562,2.62,1587,2.74,1607,2.88,1629,2.514,1636,3.049,1884,3.543,2115,3.543,2143,2.62,2144,3.638,2145,3.26,2160,6.077,2626,3.543,2642,3.543,2959,4.718,2986,3.543,3071,2.88,3127,3.543,3128,3.543,3175,4.718,3179,3.543,3288,3.543,3308,3.543,3309,3.543,3351,3.543,3357,3.543,3394,3.543,3406,2.74,3411,4.168,3422,3.543,3614,3.543,3858,3.543,3894,3.543,3992,5.749,3993,8.444,3994,3.973,3995,3.973,3996,3.973,3997,3.973,3998,3.973,3999,3.973,4000,5.749,4001,5.749,4002,3.973,4003,5.749,4004,5.749,4005,3.973,4006,3.973,4007,3.973,4008,3.973,4009,3.973,4010,3.973,4011,3.973,4012,3.973,4013,3.973,4014,3.973,4015,3.26,4016,3.973,4017,3.973,4018,5.749,4019,3.973,4020,3.973,4021,6.755,4022,3.973,4023,3.973,4024,3.973,4025,3.973,4026,5.749,4027,3.973,4028,5.749,4029,3.973,4030,3.973,4031,7.855,4032,3.973,4033,3.973,4034,3.973,4035,3.973,4036,3.543,4037,3.973,4038,3.973,4039,3.973,4040,3.973,4041,3.973,4042,5.749,4043,3.973,4044,3.973,4045,3.973,4046,5.749,4047,3.973,4048,5.749,4049,5.749,4050,3.973,4051,3.973,4052,3.973,4053,3.049,4054,3.973,4055,3.973,4056,3.973,4057,3.973,4058,3.973,4059,5.749,4060,3.973,4061,3.973,4062,3.973,4063,3.973,4064,3.973,4065,3.973,4066,3.973,4067,3.973,4068,3.973,4069,3.973,4070,3.973,4071,3.973,4072,3.973,4073,3.973,4074,3.973,4075,3.973,4076,3.973,4077,5.749,4078,5.127,4079,3.973,4080,3.973,4081,3.973,4082,3.973,4083,3.543,4084,3.973,4085,3.973,4086,5.749,4087,3.973,4088,3.973,4089,3.973,4090,3.973,4091,3.973,4092,3.973,4093,3.973,4094,3.973,4095,3.973,4096,3.973,4097,3.973,4098,3.973,4099,5.749,4100,3.973,4101,3.973,4102,3.973,4103,3.973,4104,3.973,4105,5.749,4106,3.543,4107,3.26,4108,3.973,4109,3.973,4110,3.973,4111,3.973,4112,3.973,4113,3.973,4114,3.973,4115,3.973,4116,3.543,4117,3.973,4118,3.973,4119,3.973,4120,3.973,4121,3.973,4122,3.973,4123,3.973,4124,3.973,4125,3.973,4126,3.26,4127,3.973,4128,3.973,4129,3.973,4130,3.973,4131,3.973,4132,3.973,4133,3.973,4134,3.973,4135,3.973,4136,3.973,4137,3.973,4138,3.973]],["title/miscellaneous/enumerations.html",[4139,2.576,4140,5.218]],["body/miscellaneous/enumerations.html",[10,0.359,27,0.006,59,0.005,60,0.005,164,4.11,248,3.208,376,2.527,379,2.577,438,3.347,523,3.265,1190,5.056,1195,4.809,1196,4.809,1222,5.056,1223,6.051,1230,6.051,1231,6.85,1232,6.85,1629,4.413,2210,5.723,2215,6.85,2223,5.352,2349,5.723,2363,7.445,2366,6.22,2367,6.22,2368,6.22,2369,5.723,4139,4.413,4140,6.22,4141,6.22,4142,6.22,4143,6.974,4144,6.974]],["title/miscellaneous/functions.html",[4139,2.576,4145,4.242]],["body/miscellaneous/functions.html",[9,4.478,10,0.276,17,0.426,26,1.478,27,0.006,28,0.847,29,0.958,36,1.083,41,1.742,43,4.161,54,3.619,59,0.004,60,0.004,248,1.771,271,5.926,312,3.154,529,2.24,587,3.159,597,3.699,600,5.13,601,5.13,602,5.13,604,3.888,850,2.641,978,2.869,984,4.879,1058,4.116,1059,6.104,1099,4.401,1102,4.401,1107,4.401,1126,5.43,1164,3.699,1203,4.041,1286,6.345,1361,4.657,1684,6.498,1832,2.956,1863,3.268,1932,5.13,2064,4.116,2074,4.401,2075,4.783,2076,4.783,2078,4.783,2079,7.062,2082,4.783,2084,4.783,2088,4.783,3820,4.783,3924,6.498,3931,6.31,3932,6.31,3938,4.783,3964,4.783,3965,6.31,3984,6.31,3985,6.31,3986,6.31,3987,6.31,3988,6.31,3989,6.31,4139,3.394,4145,3.888,4146,5.363,4147,7.062,4148,8.017,4149,5.363,4150,5.363,4151,4.401,4152,5.363,4153,5.363]],["title/index.html",[10,0.21,2533,3.124,2534,2.808]],["body/index.html",[13,3.082,14,2.53,15,2.448,16,1.53,27,0.006,28,0.547,31,2.173,52,2.921,54,2.782,57,2.85,59,0.004,60,0.004,64,1.396,67,2.723,84,0.809,114,1.967,150,4.21,184,2.723,209,0.891,220,3.302,226,5.062,227,3.255,230,4.671,231,2.622,233,2.448,234,1.59,238,2.967,247,1.215,261,2.448,306,3.851,307,4.499,341,3.888,363,2.53,365,2.837,432,2.967,483,2.249,506,2.967,510,2.448,555,3.462,610,2.53,615,2.622,646,4.469,821,3.892,834,2.622,835,2.967,873,2.967,874,2.302,887,3.078,906,2.302,938,4.87,939,3.302,993,2.53,995,3.163,996,3.851,1005,2.236,1015,4.858,1017,3.302,1027,3.851,1041,6.09,1118,3.851,1123,3.302,1154,5.124,1170,3.119,1224,2.53,1269,2.176,1377,3.531,1448,3.579,1575,3.531,1629,2.723,1672,3.119,1806,4.412,1807,2.53,1885,2.837,1957,3.837,2142,3.119,2143,2.837,2144,3.851,2167,2.837,2316,3.302,2537,2.967,2538,3.531,2540,4.412,2552,4.656,2554,5.428,2557,2.967,2606,2.967,2625,4.671,2639,3.837,2647,2.967,2655,7.711,2668,3.531,2678,2.967,2706,3.302,2721,5.428,2723,4.671,2726,6.3,2729,2.967,2763,3.302,2834,3.531,2993,4.469,3001,3.837,3053,6.298,3096,4.412,3176,2.967,3207,2.837,3221,4.994,3242,4.412,3250,3.119,3270,3.302,3271,5.294,3345,2.967,3360,2.967,3376,5.795,3378,4.994,3409,3.837,3558,3.302,3581,3.837,3669,3.531,3670,4.671,3671,3.302,3711,3.531,3816,3.531,3890,3.837,3892,3.531,4053,3.302,4154,3.302,4155,6.901,4156,4.412,4157,2.967,4158,3.302,4159,3.531,4160,3.302,4161,4.994,4162,4.013,4163,2.837,4164,3.837,4165,4.303,4166,5.428,4167,5.428,4168,4.303,4169,4.303,4170,4.303,4171,3.302,4172,3.837,4173,6.086,4174,3.837,4175,3.837,4176,3.119,4177,7.061,4178,4.87,4179,3.837,4180,4.303,4181,3.837,4182,4.994,4183,4.303,4184,3.531,4185,3.302,4186,4.303,4187,4.303,4188,3.531,4189,4.303,4190,4.303,4191,3.837,4192,3.302,4193,4.303,4194,3.837,4195,6.086,4196,6.086,4197,8.1,4198,7.677,4199,4.303,4200,4.303,4201,6.086,4202,3.837,4203,4.303,4204,3.531,4205,6.086,4206,4.303,4207,3.837,4208,6.086,4209,3.119,4210,3.837,4211,4.303,4212,4.303,4213,3.302,4214,4.303,4215,3.302,4216,3.837,4217,4.303,4218,3.531,4219,4.671,4220,4.303,4221,4.303,4222,3.837,4223,4.303,4224,2.837,4225,3.531]],["title/license.html",[2533,3.124,2534,2.808,4226,3.631]],["body/license.html",[0,0.022,4,0.189,5,0.026,13,3.58,14,0.548,18,0.175,24,0.099,27,0.001,31,0.526,44,0.038,57,1.376,59,0.001,60,0.001,67,1.083,83,0.156,84,0.862,87,0.398,89,0.659,100,0.59,106,0.499,107,2.444,123,0.416,166,2.108,168,1.728,169,1.722,171,1.572,172,0.397,178,1.128,183,2.115,184,3.694,216,0.319,221,3.075,234,2.589,239,5.949,243,0.297,261,0.973,281,0.514,302,0.548,304,1.006,307,0.447,322,0.643,344,0.842,345,1.486,359,0.615,364,0.715,379,0.344,421,0.615,424,1.82,429,0.765,485,0.459,501,0.59,504,2.54,505,0.615,532,2.171,551,0.447,552,0.447,576,0.407,588,0.358,610,1.394,615,1.79,617,0.715,620,2.026,630,0.548,683,0.59,690,2.09,720,0.715,721,0.676,754,1.168,805,1.24,833,1.083,849,0.676,875,5.12,876,2.606,887,2.733,891,2.007,906,0.499,935,1.728,936,2.892,938,3.159,992,1.563,996,2.444,1005,0.889,1015,1.083,1034,0.615,1035,3.294,1046,1.79,1087,1.128,1158,0.59,1161,0.643,1171,2.13,1173,1.24,1176,1.79,1179,1.006,1209,3.179,1224,1.006,1229,1.128,1284,2.799,1285,2.815,1341,0.615,1359,3.883,1379,0.765,1382,1.563,1431,0.765,1434,2.927,1438,2.271,1448,1.394,1450,0.715,1451,4.082,1483,0.643,1488,0.615,1491,0.676,1512,0.485,1570,0.615,1571,3.075,1573,0.765,1574,2.663,1576,1.82,1587,2.026,1614,1.563,1631,1.18,1636,0.715,1661,0.765,1672,4.082,1758,0.615,1806,1.24,1807,2.271,1832,3.862,1861,0.973,1863,2.09,1885,0.615,1893,0.676,1932,0.676,1949,1.82,2112,1.24,2117,0.831,2132,1.671,2162,0.715,2167,0.615,2322,1.82,2372,0.715,2421,1.526,2428,2.026,2459,4.356,2515,0.831,2539,0.831,2540,1.719,2544,1.635,2545,2.13,2547,1.526,2552,2.797,2590,0.831,2602,0.765,2606,2.365,2609,0.676,2613,3.059,2625,0.715,2653,0.831,2678,2.026,2694,2.115,2723,6.482,2725,6.612,2728,5.228,2729,1.635,2743,0.715,2759,1.404,2768,1.404,2773,0.676,2781,0.765,2785,0.765,2793,1.404,2795,1.526,2805,2.62,2810,1.404,2818,0.831,2819,0.715,2825,0.643,2832,2.115,2834,0.765,2849,2.411,2860,0.765,2864,1.24,2872,1.526,2876,1.404,2878,0.676,2898,0.765,2911,1.526,2923,0.831,2945,0.831,2959,1.404,2968,0.643,2989,0.831,2993,2.444,3002,0.831,3005,0.831,3019,0.831,3034,2.13,3044,2.632,3063,1.526,3065,0.765,3076,1.404,3091,3.256,3094,0.676,3102,0.715,3104,0.831,3122,0.715,3123,2.632,3148,0.831,3181,0.831,3199,0.715,3207,1.128,3223,1.526,3228,1.404,3234,0.765,3250,0.676,3256,3.256,3268,0.765,3270,6.009,3271,3.557,3272,1.82,3275,6.593,3292,1.404,3328,0.831,3344,3.516,3360,3.159,3373,0.765,3388,0.765,3402,0.831,3404,1.404,3405,1.404,3408,3.759,3438,0.831,3461,2.026,3462,0.831,3464,0.831,3501,0.765,3528,0.765,3552,1.313,3646,1.404,3670,2.255,3671,1.82,3677,1.404,3711,1.404,3715,1.82,3747,1.526,3781,1.82,3786,0.715,3789,3.169,3807,4.436,3810,0.831,3817,0.715,3823,5.804,3824,1.526,3826,1.526,3835,0.831,3872,0.831,3878,1.526,3895,4.149,3905,2.115,3943,0.831,4053,0.715,4155,0.765,4159,0.765,4163,3.401,4176,4.911,4178,0.643,4179,2.115,4184,3.481,4207,0.831,4209,1.719,4219,1.82,4224,0.615,4226,8.446,4227,6.508,4228,6.359,4229,0.932,4230,2.371,4231,7.699,4232,5.219,4233,5.606,4234,3.43,4235,0.932,4236,0.932,4237,1.711,4238,3.43,4239,2.371,4240,2.371,4241,5.631,4242,0.932,4243,0.932,4244,1.526,4245,3.43,4246,3.481,4247,1.711,4248,1.711,4249,5.374,4250,4.581,4251,0.932,4252,0.932,4253,3.861,4254,1.526,4255,0.831,4256,0.831,4257,4.821,4258,8.409,4259,2.371,4260,2.115,4261,0.932,4262,0.932,4263,2.938,4264,4.885,4265,0.932,4266,4.885,4267,1.313,4268,0.932,4269,3.43,4270,0.715,4271,0.765,4272,5.529,4273,0.831,4274,0.831,4275,5.158,4276,5.406,4277,3.43,4278,5.631,4279,0.932,4280,1.711,4281,0.932,4282,0.932,4283,2.115,4284,0.932,4285,0.932,4286,0.932,4287,0.932,4288,0.932,4289,0.932,4290,2.938,4291,0.932,4292,2.371,4293,0.932,4294,0.932,4295,5.56,4296,1.82,4297,0.932,4298,0.932,4299,1.946,4300,2.371,4301,0.932,4302,2.115,4303,0.715,4304,1.711,4305,1.711,4306,2.371,4307,0.932,4308,4.79,4309,3.43,4310,3.43,4311,3.861,4312,2.371,4313,1.711,4314,0.932,4315,0.932,4316,0.932,4317,2.371,4318,0.932,4319,0.932,4320,1.711,4321,0.932,4322,1.711,4323,0.932,4324,0.932,4325,2.938,4326,0.831,4327,1.711,4328,8.371,4329,2.371,4330,4.885,4331,2.62,4332,1.313,4333,0.932,4334,1.711,4335,2.371,4336,4.885,4337,5.158,4338,0.932,4339,2.938,4340,1.711,4341,2.938,4342,2.62,4343,0.932,4344,2.371,4345,7.475,4346,1.526,4347,0.932,4348,4.581,4349,0.932,4350,2.115,4351,2.663,4352,0.932,4353,6.199,4354,2.115,4355,1.711,4356,5.406,4357,3.861,4358,0.932,4359,1.711,4360,4.242,4361,0.932,4362,5.836,4363,1.711,4364,0.932,4365,0.765,4366,0.932,4367,2.371,4368,0.932,4369,0.932,4370,0.932,4371,0.765,4372,2.371,4373,2.62,4374,0.932,4375,0.932,4376,0.932,4377,1.526,4378,5.158,4379,0.831,4380,0.765,4381,2.115,4382,2.371,4383,2.371,4384,0.932,4385,3.059,4386,0.831,4387,2.115,4388,0.932,4389,0.932,4390,0.932,4391,1.526,4392,0.932,4393,6.737,4394,1.526,4395,2.115,4396,0.676,4397,1.711,4398,2.938,4399,0.932,4400,1.711,4401,2.815,4402,0.932,4403,0.932,4404,0.932,4405,1.711,4406,0.932,4407,1.404,4408,0.932,4409,2.815,4410,2.255,4411,0.932,4412,0.765,4413,4.242,4414,2.411,4415,0.932,4416,3.059,4417,0.932,4418,1.711,4419,0.932,4420,0.932,4421,0.932,4422,0.932,4423,0.932,4424,2.371,4425,0.932,4426,1.711,4427,1.711,4428,1.711,4429,0.932,4430,5.836,4431,1.526,4432,0.932,4433,0.932,4434,0.831,4435,0.932,4436,0.676,4437,0.932,4438,0.932,4439,2.371,4440,0.831,4441,0.932,4442,5.529,4443,0.715,4444,0.932,4445,0.932,4446,3.43,4447,3.444,4448,0.932,4449,0.932,4450,2.371,4451,0.932,4452,0.932,4453,2.938,4454,0.932,4455,0.932,4456,0.932,4457,0.932,4458,0.932,4459,0.932,4460,1.711,4461,0.932,4462,0.932,4463,0.932,4464,1.711,4465,0.932,4466,0.932,4467,0.932,4468,0.932,4469,0.932,4470,1.711,4471,1.24,4472,4.356,4473,0.932,4474,3.861,4475,0.932,4476,0.932,4477,2.371,4478,2.938,4479,2.938,4480,2.938,4481,0.932,4482,3.059,4483,3.059,4484,0.932,4485,2.371,4486,0.932,4487,1.711,4488,0.932,4489,1.526,4490,3.43,4491,1.711,4492,2.938,4493,2.938,4494,0.932,4495,2.371,4496,3.059,4497,0.932,4498,0.932,4499,3.481,4500,1.711,4501,0.676,4502,0.932,4503,0.831,4504,2.371,4505,0.932,4506,0.932,4507,2.115,4508,0.932,4509,0.932,4510,0.932,4511,0.932,4512,0.932,4513,2.371,4514,0.932,4515,0.831,4516,2.115,4517,1.711,4518,3.861,4519,6.249,4520,2.371,4521,1.711,4522,1.711,4523,1.711,4524,2.938,4525,0.831,4526,0.932,4527,0.932,4528,0.932,4529,3.444,4530,1.711,4531,0.932,4532,0.932,4533,0.932,4534,0.932,4535,1.711,4536,0.932,4537,1.711,4538,0.932,4539,0.932,4540,3.321,4541,0.932,4542,4.821,4543,0.932,4544,0.932,4545,0.932,4546,0.932,4547,1.711,4548,0.932,4549,2.487,4550,2.938,4551,1.711,4552,0.831,4553,0.932,4554,0.932,4555,0.932,4556,0.932,4557,1.711,4558,0.932,4559,0.932,4560,0.765,4561,2.62,4562,0.932,4563,1.711,4564,0.932,4565,0.932,4566,2.115,4567,0.932,4568,0.932,4569,0.932,4570,0.932,4571,2.938,4572,0.932,4573,0.932,4574,0.831,4575,0.831,4576,0.831,4577,0.932,4578,0.932,4579,0.932,4580,3.43,4581,0.932,4582,0.932,4583,2.938,4584,0.932,4585,0.932,4586,0.932,4587,0.932,4588,0.932,4589,0.932,4590,2.938,4591,0.932,4592,0.932,4593,2.371,4594,0.932,4595,0.765,4596,2.371,4597,0.932,4598,0.932,4599,0.932,4600,0.932,4601,0.932,4602,0.932,4603,0.932,4604,0.831,4605,1.526,4606,0.932,4607,0.676,4608,1.711,4609,0.831,4610,0.932,4611,2.938,4612,0.932,4613,0.932,4614,1.711,4615,2.371,4616,2.371,4617,0.765,4618,1.711,4619,0.932,4620,4.242,4621,0.932,4622,0.932,4623,1.711,4624,0.932,4625,0.932,4626,0.932,4627,0.932,4628,2.938,4629,2.371,4630,0.932,4631,3.43,4632,0.932,4633,0.932,4634,0.932,4635,0.932,4636,0.831,4637,0.932,4638,1.711,4639,1.711,4640,1.526,4641,2.371,4642,0.831,4643,0.932,4644,2.371,4645,0.932,4646,1.404,4647,0.932,4648,1.711,4649,0.932,4650,0.932,4651,1.711,4652,7.211,4653,2.371,4654,0.932,4655,3.43,4656,5.158,4657,2.371,4658,0.932,4659,0.932,4660,0.932,4661,2.938,4662,0.932,4663,2.371,4664,0.932,4665,0.932,4666,0.932,4667,0.932,4668,0.932,4669,0.932,4670,0.932,4671,2.938,4672,1.711,4673,0.932,4674,0.932,4675,2.371,4676,0.932,4677,1.711,4678,2.371,4679,1.711,4680,0.932,4681,0.932,4682,0.932,4683,1.711,4684,2.371,4685,0.831,4686,0.932,4687,0.932,4688,1.711,4689,0.932,4690,0.831,4691,0.932,4692,0.932,4693,0.932,4694,2.371,4695,1.711,4696,0.831,4697,0.932,4698,0.932,4699,2.938,4700,0.932,4701,2.371,4702,0.932,4703,0.932,4704,1.711,4705,0.932,4706,0.932,4707,0.932,4708,2.371,4709,1.711,4710,1.711,4711,0.932,4712,1.711,4713,4.242,4714,1.526,4715,2.371,4716,2.938,4717,0.831,4718,0.932,4719,1.711,4720,0.932,4721,2.371,4722,0.932,4723,0.932,4724,0.932,4725,0.932,4726,0.932,4727,0.932,4728,2.371,4729,1.711,4730,0.932,4731,0.831,4732,0.932,4733,0.932,4734,1.711,4735,1.711,4736,0.932,4737,1.526,4738,0.932,4739,0.932,4740,0.765,4741,0.932,4742,2.371,4743,0.932,4744,0.932,4745,0.932,4746,0.932,4747,1.711,4748,2.371,4749,0.932,4750,0.932,4751,0.932,4752,0.932,4753,1.711,4754,0.932,4755,0.932,4756,0.932,4757,0.932,4758,0.932,4759,0.932,4760,0.932,4761,0.932,4762,0.715,4763,0.932,4764,0.932,4765,0.932,4766,2.938,4767,0.932,4768,0.932,4769,1.711,4770,0.932,4771,0.932,4772,0.932,4773,0.932,4774,0.932,4775,0.932,4776,0.932,4777,0.765,4778,0.932,4779,0.932,4780,0.932,4781,0.831,4782,1.711,4783,0.932,4784,0.932,4785,0.932,4786,0.932,4787,0.831,4788,1.711,4789,0.932,4790,0.932,4791,0.831,4792,0.831,4793,0.643,4794,0.932,4795,1.711,4796,1.711,4797,0.932,4798,0.932,4799,0.932,4800,0.932,4801,2.371,4802,1.404,4803,0.932,4804,1.711,4805,1.711,4806,0.932,4807,0.765,4808,0.831,4809,0.932,4810,0.831,4811,0.932,4812,0.932,4813,1.711,4814,0.932,4815,2.371,4816,0.932,4817,0.932,4818,0.932,4819,0.932,4820,0.932,4821,0.932,4822,0.932,4823,0.932,4824,0.932,4825,0.932,4826,0.831,4827,0.932,4828,0.765,4829,0.932,4830,0.932,4831,0.932,4832,0.932,4833,0.932,4834,0.932,4835,0.932,4836,0.932,4837,0.932,4838,0.932,4839,0.932,4840,0.932,4841,0.715,4842,0.831,4843,1.711,4844,1.526,4845,0.932,4846,0.932,4847,0.932,4848,0.932,4849,0.932,4850,0.932,4851,0.831,4852,0.715,4853,0.932,4854,0.932,4855,0.765,4856,0.932,4857,0.932,4858,0.932,4859,0.932,4860,0.932]],["title/modules.html",[113,2.71]],["body/modules.html",[27,0.005,59,0.005,60,0.005,112,4.788,113,2.699,118,4.554,138,4.554,143,4.554,349,4.788,352,4.788,353,4.788,354,4.179,355,4.788,1035,5.681,1382,6.513,1465,4.788,1506,4.554,1546,5.068,1742,4.788,2122,4.788,2126,4.554,2138,4.788,4861,9.878,4862,9.878,4863,8.949,4864,9.324]],["title/overview.html",[2573,4.807]],["body/overview.html",[2,0.948,27,0.006,59,0.004,60,0.004,89,1.271,112,6.602,113,1.87,114,2.904,115,4.08,116,4.08,117,4.08,118,6.607,119,5.292,120,5.034,121,3.502,122,2.378,123,2.043,138,6.359,139,4.08,140,4.08,141,4.08,142,4.08,143,5.914,144,5.359,145,4.812,153,1.69,331,5.034,349,6.754,350,4.08,351,4.08,352,5.292,353,5.292,354,5.566,355,5.292,564,4.812,644,2.253,652,5.034,900,5.003,948,5.566,988,4.08,989,4.08,990,4.08,1406,6.066,1465,6.007,1466,4.08,1467,4.08,1501,4.08,1502,4.08,1503,4.08,1506,5.034,1642,5.566,1742,6.813,1743,4.08,1745,4.08,1746,4.08,1747,4.812,2017,5.034,2034,5.034,2122,6.217,2123,4.08,2124,4.08,2125,4.08,2126,6.669,2136,4.08,2137,4.08,2138,6.754,2209,5.034,2236,5.034,2270,4.08,2271,4.08,2272,5.034,2322,3.511,2478,4.812,2496,4.08,2497,4.08,2498,4.08,2499,4.812,2573,3.317,2743,3.511,2864,3.317,3941,4.08,4865,4.575]],["title/todo.html",[232,1.597,2533,3.124,2534,2.808]],["body/todo.html",[0,0.097,5,0.061,11,0.534,13,1.793,17,0.266,21,1,27,0.006,28,0.53,36,0.478,52,3.304,53,2.198,54,2.692,56,2.979,57,3.727,59,0.004,60,0.004,68,2.198,89,1.141,111,2.286,123,2.63,126,1.972,147,2.265,150,3.062,155,2.082,169,1.636,171,2.198,172,2.024,174,1.221,181,2.136,186,1.201,209,1.22,223,5.65,226,3.884,227,4.668,232,1.612,233,3.916,234,2.778,247,2.124,261,5.191,268,3.062,301,4.27,345,2.078,357,3.884,363,3.464,367,2.417,368,2.979,371,3.154,430,4.991,483,1.518,486,2.198,550,2.978,555,2.338,608,2.758,610,3.464,642,1.793,646,2.601,719,3.589,793,2.979,835,2.834,836,2.601,857,2.504,874,4.563,887,2.078,900,2.338,906,3.151,921,2.504,922,2.601,937,3.589,993,4.049,995,3.062,1005,3.578,1028,4.52,1041,4.748,1046,4.85,1056,2.198,1057,2.979,1059,2.979,1083,2.834,1086,2.709,1117,5.248,1118,3.727,1154,2.504,1155,6.532,1158,2.601,1161,2.834,1176,2.504,1178,2.979,1179,2.417,1236,3.884,1359,2.834,1363,2.834,1380,3.372,1382,2.709,1412,3.154,1414,2.709,1431,4.834,1433,3.665,1434,2.136,1438,2.417,1483,2.834,1497,2.601,1512,3.578,1555,6.14,1570,2.709,1571,2.979,1582,2.979,1586,4.539,1587,2.834,1631,2.834,1757,2.709,1758,2.709,1807,2.417,1832,2.265,1840,3.154,1861,2.338,2041,2.417,2142,2.979,2144,3.727,2160,4.748,2275,2.601,2314,5.185,2540,4.27,2545,2.979,2570,3.665,2605,3.665,2618,3.372,2631,3.372,2641,4.834,2682,2.834,2686,6.532,2706,3.154,2713,3.665,2760,2.834,2782,3.372,2810,3.372,2821,3.372,2825,4.748,2826,3.665,2827,3.665,2829,2.709,2849,3.372,2868,2.979,2882,3.665,3102,3.154,3176,4.062,3251,3.665,3255,3.665,3327,4.52,3344,3.154,3345,2.834,3501,3.372,3512,3.372,3514,3.372,3558,3.154,3817,3.154,3908,3.372,3911,3.372,4078,3.665,4106,3.665,4107,3.372,4157,2.834,4204,3.372,4213,3.154,4224,2.709,4225,3.372,4267,3.154,4270,3.154,4396,2.979,4434,3.665,4560,3.372,4841,4.52,4866,3.372,4867,4.109,4868,3.665,4869,3.665,4870,3.154,4871,3.372,4872,4.109,4873,4.109,4874,3.665,4875,4.109,4876,4.109,4877,4.109,4878,4.109,4879,4.109,4880,4.109,4881,4.109,4882,4.109,4883,3.372,4884,4.109,4885,4.109,4886,4.109,4887,4.109,4888,4.109,4889,4.109,4890,4.109,4891,4.109,4892,4.109,4893,4.109,4894,4.109,4895,4.109,4896,4.109,4897,4.109,4898,3.665,4899,4.109,4900,4.109,4901,4.109,4902,4.109,4903,4.109,4904,3.665,4905,4.109,4906,4.109,4907,3.665,4908,3.665,4909,3.665,4910,4.109,4911,3.665,4912,4.109,4913,4.109,4914,4.109,4915,3.372,4916,4.109,4917,6.14,4918,4.109,4919,4.109,4920,4.109,4921,4.109,4922,4.109,4923,4.109,4924,3.372,4925,4.109,4926,5.89,4927,3.665,4928,4.109]],["title/miscellaneous/typealiases.html",[4139,2.576,4929,5.851]],["body/miscellaneous/typealiases.html",[10,0.288,17,0.424,27,0.006,31,1.721,34,5.329,36,0.651,59,0.005,60,0.005,87,0.525,111,2.089,162,2.162,169,1.554,172,1.297,209,1.159,271,5.329,376,2.027,379,2.067,412,5.033,478,4.925,483,2.687,504,3.582,523,2.62,525,4.432,597,5.016,663,3.689,668,4.603,674,5.016,1003,4.294,1004,5.86,1009,5.969,1019,5.969,1190,4.056,1197,4.056,1198,5.273,1199,4.603,1205,4.056,1210,3.491,1214,3.689,1217,5.273,1222,4.056,1223,5.273,1226,5.969,1283,4.294,1434,2.908,1507,4.056,1512,3.781,1522,5.582,1523,5.969,1548,3.858,1551,6.487,1567,4.294,1586,3.689,1587,5.016,1812,4.294,1825,6.487,1868,4.591,1902,4.591,1903,4.591,1966,4.056,1986,4.591,2064,4.294,2073,6.487,2074,5.969,2162,4.294,2978,4.591,2979,4.591,3939,4.591,3940,5.969,4139,3.54,4141,6.487,4142,4.99,4148,7.209,4552,4.99,4930,5.595,4931,7.274,4932,7.274,4933,5.595,4934,7.274,4935,5.595,4936,7.274,4937,7.274,4938,5.595,4939,5.595,4940,4.99,4941,5.595,4942,4.99,4943,4.99,4944,7.274,4945,5.595,4946,7.274,4947,5.595,4948,4.99,4949,5.595,4950,5.595,4951,5.595,4952,5.595,4953,5.595,4954,3.858,4955,5.595,4956,5.595,4957,5.595,4958,5.595]],["title/miscellaneous/variables.html",[2563,4.242,4139,2.576]],["body/miscellaneous/variables.html",[1,2.073,5,0.028,9,1.989,10,0.095,11,0.241,13,1.372,16,1.456,17,0.374,18,0.348,27,0.006,28,0.593,31,0.57,36,0.828,41,0.343,43,2.409,48,0.101,52,1.509,53,0.991,54,4.248,55,1.343,59,0.002,60,0.002,64,1.566,65,2.073,66,2.746,68,0.991,76,1.981,83,1.43,84,1.495,111,0.532,125,1.404,133,2.825,150,2.129,155,0.56,166,1.674,168,1.089,169,2.323,173,1.872,174,0.55,185,1.52,191,0.601,201,1.788,208,0.79,210,1.258,211,0.514,216,0.634,227,1.682,231,1.128,232,0.726,234,0.684,247,2.657,248,3.086,252,0.684,281,1.733,302,1.849,304,1.089,307,0.889,308,3.361,310,1.343,341,1.509,342,1.989,345,0.936,367,1.089,368,1.343,376,2.271,377,1.421,378,2.258,379,2.774,380,1.089,381,1.343,382,1.277,388,2.402,397,0.846,412,1.089,426,1.277,431,1.343,435,1.52,436,1.52,457,1.089,481,1.089,483,0.684,510,1.053,511,1.172,523,0.867,529,1.711,549,0.912,550,0.936,551,0.889,552,0.889,553,0.912,561,1.128,562,1.128,587,1.404,606,1.52,607,2.413,610,1.849,628,4.26,633,1.021,640,2.97,642,0.808,644,0.912,650,1.989,690,1.128,692,1.172,703,1.221,716,1.221,722,1.733,725,1.128,805,1.343,821,2.258,836,1.172,850,0.912,857,1.128,868,1.421,869,1.52,870,3.361,873,1.277,874,1.682,877,1.421,881,2.58,882,2.58,883,1.652,884,1.652,887,1.59,888,2.58,889,2.168,890,1.52,891,2.129,892,1.343,893,1.421,900,3.564,903,1.421,906,1.682,921,2.941,937,1.128,978,1.682,984,2.168,993,1.089,994,1.021,995,1.634,1005,0.963,1026,1.343,1028,1.421,1033,1.421,1034,1.221,1041,1.277,1046,1.128,1048,1.421,1049,1.52,1053,1.52,1055,3.361,1056,0.991,1057,1.343,1058,1.421,1059,4.78,1061,1.421,1062,2.58,1076,2.58,1077,1.652,1078,2.58,1079,4.51,1080,1.52,1081,1.277,1082,1.652,1083,4.052,1084,2.58,1085,1.343,1086,2.701,1087,1.221,1088,2.58,1089,1.652,1090,2.804,1091,1.652,1092,1.52,1093,1.652,1094,1.652,1095,1.652,1096,1.652,1097,1.652,1099,1.52,1102,1.52,1103,4.149,1107,1.52,1113,1.343,1114,2.804,1115,1.343,1116,1.652,1117,1.221,1118,2.592,1119,2.804,1120,1.52,1121,2.804,1122,1.652,1123,2.413,1124,1.652,1125,1.652,1126,1.421,1127,2.58,1128,1.652,1129,1.652,1130,1.52,1131,1.52,1132,1.52,1133,1.421,1134,1.652,1135,1.652,1136,1.652,1137,1.652,1138,4.822,1139,2.58,1140,4.822,1141,1.652,1142,1.52,1143,1.652,1154,1.128,1157,2.58,1164,1.277,1176,1.128,1179,1.089,1204,2.071,1206,1.989,1207,3.257,1210,2.317,1212,1.277,1215,1.989,1216,1.989,1254,1.021,1256,1.053,1265,0.827,1269,0.936,1284,1.343,1346,2.825,1359,1.277,1371,1.52,1372,1.652,1373,1.421,1374,1.652,1378,1.277,1392,1.52,1398,1.652,1399,1.652,1412,1.421,1414,3.565,1428,1.915,1439,1.52,1440,2.58,1448,1.089,1455,1.652,1488,1.221,1497,1.989,1507,1.343,1512,2.129,1513,2.413,1514,2.58,1519,1.343,1522,1.421,1524,2.413,1525,1.52,1526,1.52,1527,1.52,1528,1.421,1529,1.52,1547,1.52,1548,2.825,1549,1.52,1550,2.58,1556,2.58,1557,2.804,1560,2.413,1561,4.822,1563,2.58,1564,1.652,1565,2.804,1566,1.52,1567,2.413,1568,1.652,1569,1.421,1570,1.221,1571,1.343,1572,1.277,1573,1.52,1574,1.277,1575,1.52,1576,1.421,1577,2.804,1578,1.652,1579,1.652,1580,1.652,1615,3.456,1669,1.52,1670,2.58,1757,1.221,1758,1.221,1812,1.421,1820,1.52,1827,2.58,1832,2.98,1852,2.413,1860,1.277,1861,1.053,1863,2.496,1949,1.421,1999,1.421,2009,1.652,2011,1.652,2122,1.343,2132,2.33,2143,1.221,2144,1.989,2148,4.321,2166,1.52,2167,2.073,2427,1.343,2435,2.413,2458,1.343,2518,1.652,2552,2.701,2557,1.277,2563,1.343,2647,4.052,2706,2.413,2722,1.652,2726,1.52,2759,1.52,2760,1.277,2761,1.652,2762,2.804,2763,1.421,2804,2.804,2825,1.277,2868,3.5,2917,1.652,3123,1.421,3207,1.221,3267,1.277,3327,1.421,3373,1.52,3380,1.52,3406,2.825,3439,2.804,3481,1.52,3575,2.804,3579,1.652,3669,1.52,3908,1.52,3917,1.52,3923,1.652,3924,2.58,3933,1.652,3934,4.305,3935,2.804,3936,3.653,3939,1.52,3940,3.962,3958,1.652,3959,2.804,3961,1.652,3962,1.652,3963,2.804,3966,1.652,3967,2.804,3973,1.652,3974,2.804,3975,1.652,3976,2.804,3977,1.652,3978,2.804,3982,1.652,3983,2.804,3990,3.962,4036,1.652,4139,1.172,4145,2.279,4147,5.588,4151,1.52,4154,2.413,4182,1.52,4216,1.652,4365,1.52,4396,1.343,4871,1.52,4883,3.361,4907,2.804,4917,1.652,4940,1.652,4942,2.804,4943,3.653,4959,1.852,4960,1.852,4961,3.144,4962,1.852,4963,1.852,4964,1.852,4965,4.096,4966,1.852,4967,1.852,4968,4.827,4969,4.096,4970,1.852,4971,1.852,4972,3.144,4973,1.852,4974,1.852,4975,1.852,4976,1.852,4977,3.144,4978,1.852,4979,1.852,4980,1.852,4981,1.852,4982,1.852,4983,1.852,4984,1.852,4985,1.652,4986,1.852,4987,1.852,4988,1.652,4989,1.852,4990,1.852,4991,1.852,4992,1.852,4993,1.852,4994,2.58,4995,1.652,4996,1.652,4997,1.652,4998,1.852,4999,1.852,5000,1.852,5001,2.804,5002,1.852,5003,1.852,5004,1.852,5005,1.852,5006,1.852,5007,1.652,5008,1.852,5009,3.653,5010,1.852,5011,1.852,5012,1.852,5013,1.852,5014,1.852,5015,1.852,5016,1.852,5017,1.852,5018,1.852,5019,1.852,5020,1.852,5021,1.852,5022,1.852,5023,1.852,5024,1.852,5025,1.852,5026,1.852,5027,1.852,5028,1.852,5029,1.852,5030,1.852,5031,1.852,5032,1.852,5033,1.852,5034,1.852,5035,1.852,5036,1.852,5037,1.852,5038,1.852,5039,4.096,5040,3.144,5041,1.652,5042,1.852,5043,3.144,5044,1.852,5045,3.144,5046,1.852,5047,1.852,5048,1.852,5049,1.852,5050,1.852,5051,1.852,5052,1.852,5053,1.852,5054,1.852]],["title/additional-documentation/nestjs-application.html",[307,1.679,341,1.679,936,1.679,1951,1.872]],["body/additional-documentation/nestjs-application.html",[8,0.887,13,3.425,14,3.098,27,0.005,28,0.317,57,3.273,59,0.003,60,0.003,89,0.98,111,1.513,113,1.442,122,1.833,150,2.738,168,3.098,171,1.887,184,2.232,227,4.881,233,2.996,234,3.089,247,0.996,261,2.006,303,2.432,304,2.074,305,2.232,307,4.239,341,4.102,342,4.734,344,1.737,345,2.663,360,2.707,424,2.707,426,2.432,485,1.737,491,2.814,549,3.443,553,2.594,620,3.632,625,2.326,722,1.944,754,3.104,833,2.232,834,3.209,874,4.198,887,3.535,893,2.707,936,1.693,937,2.149,938,3.632,939,2.707,993,3.098,995,1.833,996,2.232,1005,2.738,1011,2.149,1015,2.232,1034,2.326,1035,2.149,1046,2.149,1083,4.821,1113,2.557,1117,4.61,1123,2.707,1154,2.149,1170,3.818,1176,2.149,1179,3.098,1235,2.707,1358,2.895,1359,4.347,1378,4.821,1434,1.833,1448,2.074,1484,2.707,1486,2.707,1488,2.326,1516,4.61,1534,2.895,1562,3.473,1566,2.895,1572,2.432,1586,2.326,1757,4.932,1758,4.61,1763,2.432,1840,2.707,1951,2.817,2118,4.042,2143,2.326,2144,2.232,2167,3.473,2168,3.146,2169,4.322,2428,3.632,2534,3.632,2537,2.432,2552,6.149,2573,2.557,2587,4.042,2602,2.895,2638,4.697,2658,4.322,2686,2.895,2718,2.895,2725,2.895,2729,2.432,2753,3.146,2760,4.821,2763,4.042,2773,3.818,2781,5.173,2782,4.322,2824,3.146,2828,4.734,2829,2.326,2868,6.06,2965,2.895,2968,2.432,3034,3.818,3175,2.895,3176,6.234,3207,4.932,3224,4.322,3327,4.042,3345,2.432,3360,3.632,3376,2.895,3380,4.322,3406,2.432,3517,5.622,3580,3.146,3613,4.042,3649,4.697,3665,3.146,3990,2.895,4116,3.146,4126,2.895,4154,2.707,4155,2.895,4156,2.557,4158,2.707,4160,2.707,4163,2.326,4164,3.146,4171,4.838,4182,2.895,4204,2.895,4215,5.365,4224,4.61,4232,2.895,4365,2.895,4386,4.697,4395,3.146,4396,4.57,4442,3.146,4471,2.557,4540,2.557,4549,3.818,4607,2.557,4646,2.895,4690,3.146,4696,3.146,4807,4.322,4828,2.895,4852,2.707,4863,3.146,4904,4.697,4908,5.622,4909,5.622,4954,3.632,4994,4.322,4995,4.697,4996,3.146,4997,3.146,5009,3.146,5055,3.527,5056,2.895,5057,3.527,5058,3.527,5059,3.527,5060,3.527,5061,3.527,5062,3.527,5063,3.527,5064,3.527,5065,5.267,5066,3.527,5067,3.527,5068,3.527,5069,5.267,5070,6.991,5071,3.527,5072,3.527,5073,3.527,5074,2.895,5075,3.527,5076,6.991,5077,3.527,5078,3.146,5079,3.527,5080,3.527,5081,3.527,5082,7.847,5083,3.527,5084,3.527,5085,3.527,5086,3.527,5087,5.267,5088,3.527,5089,3.527,5090,3.527,5091,3.527,5092,5.267,5093,3.527,5094,3.527,5095,4.697,5096,5.267,5097,3.527,5098,3.527,5099,3.527,5100,3.527,5101,5.267,5102,3.527,5103,3.527,5104,3.527,5105,2.707,5106,3.527,5107,3.527,5108,3.527,5109,3.527,5110,3.527,5111,3.527,5112,3.146,5113,3.527,5114,3.527,5115,3.527,5116,3.527,5117,3.527,5118,6.303,5119,4.697,5120,3.527,5121,3.527,5122,3.527,5123,3.527,5124,3.527,5125,3.527,5126,5.267,5127,3.527,5128,5.267,5129,4.322,5130,3.146,5131,3.527,5132,6.303,5133,5.267,5134,3.527,5135,3.527,5136,3.527,5137,3.146,5138,3.527,5139,3.146,5140,3.527,5141,3.527,5142,3.527,5143,3.527,5144,3.527,5145,3.527,5146,3.527,5147,3.527]],["title/additional-documentation/nestjs-application/software-architecture.html",[936,1.679,1951,1.872,4162,2.307,4233,2.685]],["body/additional-documentation/nestjs-application/software-architecture.html",[2,0.643,4,0.05,5,0.046,13,3.206,14,1.825,15,0.734,24,0.506,26,0.487,27,0.003,28,0.207,31,0.397,50,0.772,52,3.526,53,2.307,54,2.895,56,0.936,57,1.453,59,0.001,60,0.001,65,1.514,66,1.307,68,2.012,83,0.217,84,0.583,87,0.572,89,0.638,114,1.971,123,1.025,126,0.62,147,0.712,166,0.939,168,1.825,169,1.964,171,4.374,172,0.719,175,0.89,181,0.671,184,2.381,194,1.059,201,0.734,209,1.073,226,5.297,227,0.691,229,0.712,232,0.506,233,1.307,234,2.801,238,0.89,239,1.963,247,0.365,248,1.025,261,0.734,300,0.734,302,5.383,303,0.89,304,2.213,305,4.265,307,3.585,322,0.89,342,0.817,344,3.832,345,1.902,359,3.643,360,1.763,363,3.045,364,0.991,365,4.019,367,0.759,376,0.468,380,1.351,431,0.936,438,1.489,484,1.025,485,1.131,504,1.131,510,1.765,523,0.604,527,0.671,529,0.539,530,0.636,552,0.62,555,1.307,576,0.563,587,1.68,609,0.991,615,1.399,619,0.89,625,3.151,630,1.351,641,0.759,683,0.817,686,0.851,719,0.787,722,2.634,754,4.217,821,2.074,833,1.963,834,0.787,835,3.571,874,1.66,875,0.851,876,4.426,891,3.029,898,4.678,899,3.643,906,3.995,921,0.787,935,3.045,936,1.489,938,4.204,993,1.825,994,2.854,995,4.402,996,2.729,998,1.584,1007,2.045,1020,2.139,1035,1.399,1056,3.117,1085,0.936,1086,4.176,1087,0.851,1092,1.059,1115,0.936,1118,0.817,1154,1.399,1164,0.89,1176,1.399,1178,4.005,1179,1.351,1195,0.89,1207,1.194,1209,3.045,1210,0.62,1212,0.89,1224,0.759,1225,0.734,1228,0.851,1236,2.045,1242,3.921,1269,1.902,1284,2.249,1298,0.851,1312,1.665,1360,0.991,1361,2.213,1363,0.89,1364,4.783,1373,0.991,1379,1.059,1381,3.464,1389,0.936,1434,2.872,1435,1.151,1438,0.759,1448,0.759,1449,1.059,1451,3.126,1472,0.89,1483,2.139,1484,0.991,1488,1.514,1489,0.851,1491,2.727,1495,1.665,1528,0.991,1545,0.991,1562,0.851,1569,0.991,1570,0.851,1571,3.126,1574,2.139,1586,2.843,1588,0.936,1628,2.048,1629,0.817,1763,0.89,1806,4.225,1807,2.81,1832,0.712,1853,0.89,1860,0.89,1861,0.734,1893,0.936,1951,0.691,2112,0.936,2132,1.307,2142,0.936,2143,2.045,2144,1.963,2218,1.059,2219,0.991,2223,0.991,2224,0.991,2234,2.139,2285,1.059,2315,6.25,2316,0.991,2318,1.885,2319,2.381,2370,1.059,2372,2.381,2427,0.936,2428,0.89,2429,1.059,2458,1.665,2537,1.584,2538,1.885,2544,2.594,2545,2.249,2548,2.546,2556,0.936,2557,1.584,2563,0.936,2573,0.936,2585,3.846,2587,0.991,2606,4.876,2609,2.727,2611,1.151,2612,0.936,2631,1.059,2641,1.059,2647,0.89,2654,1.059,2657,2.767,2658,1.059,2663,1.151,2668,1.059,2670,2.767,2678,2.139,2682,0.89,2687,1.151,2699,2.048,2718,1.059,2724,1.151,2728,3.464,2765,2.767,2768,1.059,2793,1.059,2798,1.885,2825,0.89,2828,0.817,2829,2.481,2835,2.727,2837,1.151,2864,0.936,2874,1.151,2878,3.126,2897,1.059,2898,1.885,2900,1.151,2902,1.151,2912,1.151,2915,1.151,2933,1.151,2968,0.89,2979,1.885,2993,2.381,3027,2.048,3034,3.754,3044,6.973,3050,1.885,3071,2.249,3094,2.727,3096,5.824,3115,1.151,3122,1.763,3153,2.048,3176,1.584,3186,3.539,3199,1.763,3221,1.059,3226,0.991,3228,1.059,3242,3.126,3250,2.249,3256,2.887,3265,3.355,3271,3.295,3272,0.991,3291,1.151,3292,1.885,3296,1.151,3311,1.885,3315,2.546,3331,5.437,3344,2.381,3345,0.89,3346,1.059,3360,1.584,3378,1.059,3405,1.059,3411,0.936,3418,3.846,3427,2.048,3457,2.767,3461,2.974,3475,2.048,3514,1.059,3528,1.059,3552,2.887,3554,1.059,3563,1.059,3613,0.991,3647,1.151,3653,1.151,3664,2.048,3684,3.846,3701,1.763,3715,1.763,3743,1.059,3773,1.059,3776,1.059,3780,3.355,3781,0.991,3786,2.381,3789,1.059,3802,1.151,3807,1.885,3837,1.151,3861,1.151,3886,1.151,3895,1.763,3916,2.048,4126,1.885,4154,2.381,4156,1.665,4157,1.584,4162,5.391,4163,2.843,4171,0.991,4172,2.048,4176,2.727,4178,0.89,4184,1.885,4185,2.887,4192,6.639,4209,0.936,4213,0.991,4215,0.991,4219,1.763,4232,1.885,4233,0.991,4244,2.048,4246,1.059,4249,1.151,4254,1.151,4257,1.151,4260,1.151,4270,0.991,4272,1.151,4283,1.151,4295,1.885,4296,3.667,4299,3.921,4302,2.048,4303,1.763,4326,1.151,4331,1.151,4332,4.678,4351,0.89,4354,1.151,4371,1.059,4373,2.767,4377,1.151,4379,1.151,4385,1.151,4393,1.151,4394,1.151,4401,5.53,4407,1.059,4409,1.059,4410,3.974,4412,1.885,4414,1.059,4416,1.151,4436,0.936,4443,2.887,4447,1.151,4471,0.936,4472,1.151,4489,1.151,4499,1.059,4501,0.936,4516,1.151,4519,1.151,4525,1.151,4529,2.048,4540,0.936,4542,1.151,4549,2.249,4561,1.151,4574,2.048,4575,3.846,4595,1.059,4604,3.355,4605,1.151,4607,0.936,4609,1.151,4617,1.059,4636,1.151,4640,1.151,4642,1.151,4646,1.059,4685,4.262,4714,1.151,4731,1.151,4740,4.249,4762,5.025,4777,1.059,4791,1.151,4792,1.151,4793,4.204,4802,1.059,4842,1.151,4855,1.059,4866,1.885,4869,1.151,4870,3.667,4911,2.048,4927,1.151,5074,1.059,5105,0.991,5148,1.291,5149,1.291,5150,5.649,5151,5.828,5152,2.297,5153,3.102,5154,2.767,5155,4.534,5156,2.297,5157,2.767,5158,5.178,5159,1.291,5160,1.291,5161,2.887,5162,3.355,5163,1.291,5164,1.291,5165,1.291,5166,1.291,5167,1.291,5168,2.297,5169,2.297,5170,1.291,5171,1.291,5172,4.312,5173,1.291,5174,1.291,5175,3.102,5176,2.297,5177,1.291,5178,1.291,5179,1.291,5180,1.291,5181,1.291,5182,1.291,5183,1.291,5184,1.151,5185,2.297,5186,4.778,5187,1.291,5188,1.291,5189,2.297,5190,2.297,5191,3.762,5192,3.102,5193,3.762,5194,1.291,5195,3.355,5196,3.355,5197,1.291,5198,1.291,5199,1.291,5200,1.291,5201,1.291,5202,1.291,5203,2.767,5204,1.291,5205,1.291,5206,1.291,5207,7.347,5208,1.291,5209,7.196,5210,1.291,5211,2.048,5212,1.291,5213,2.297,5214,1.059,5215,4.225,5216,5.828,5217,1.291,5218,2.767,5219,2.297,5220,1.291,5221,1.291,5222,1.291,5223,1.291,5224,1.291,5225,3.087,5226,2.297,5227,1.291,5228,1.291,5229,1.291,5230,1.291,5231,1.151,5232,1.291,5233,2.546,5234,1.291,5235,1.291,5236,1.151,5237,1.291,5238,1.291,5239,1.291,5240,1.151,5241,2.297,5242,1.291,5243,3.102,5244,1.291,5245,1.291,5246,1.291,5247,2.297,5248,1.291,5249,2.297,5250,3.102,5251,1.291,5252,1.291,5253,1.291,5254,2.048,5255,2.297,5256,3.102,5257,1.291,5258,1.291,5259,1.291,5260,1.291,5261,1.291,5262,1.291,5263,1.151,5264,1.291,5265,2.297,5266,1.291,5267,1.291,5268,5.828,5269,1.291,5270,1.151,5271,1.059,5272,1.291,5273,1.291,5274,1.291,5275,1.291,5276,1.291,5277,1.291,5278,1.291,5279,3.102,5280,1.291,5281,2.297,5282,3.102,5283,1.291,5284,1.291,5285,1.291,5286,1.291,5287,2.297,5288,1.291,5289,1.291,5290,1.291,5291,2.048,5292,1.291,5293,1.151,5294,1.291,5295,1.291,5296,2.297,5297,1.291,5298,1.151,5299,1.291,5300,2.297,5301,1.291,5302,1.291,5303,1.291,5304,1.291,5305,1.151,5306,1.291,5307,1.291,5308,2.297,5309,1.291,5310,1.291,5311,1.291,5312,1.291,5313,1.291,5314,1.151,5315,1.291,5316,1.291,5317,1.291,5318,1.151,5319,3.102,5320,1.291,5321,1.291,5322,1.291,5323,1.291,5324,1.291,5325,2.297,5326,1.291,5327,1.151,5328,1.291,5329,3.102,5330,1.291,5331,1.291,5332,2.297,5333,1.291,5334,2.297,5335,1.291,5336,1.291,5337,1.291,5338,1.291,5339,1.291,5340,1.291,5341,1.291,5342,2.297,5343,1.291,5344,1.291,5345,1.291,5346,1.291,5347,1.291,5348,1.291,5349,1.291,5350,1.291,5351,7.955,5352,1.291,5353,1.291,5354,1.151,5355,1.291,5356,1.291,5357,2.297,5358,1.291,5359,1.291,5360,1.291,5361,1.291,5362,1.291,5363,1.291,5364,1.151,5365,1.291,5366,1.291,5367,1.151,5368,1.291,5369,1.291,5370,1.291,5371,1.291,5372,2.297,5373,1.291,5374,1.291,5375,2.381,5376,1.291,5377,1.291,5378,1.059,5379,1.291,5380,1.291,5381,4.312,5382,1.291,5383,1.291,5384,1.291,5385,1.291,5386,1.291,5387,1.291,5388,1.291,5389,1.291,5390,1.291,5391,1.291,5392,1.291,5393,2.297,5394,1.291,5395,1.291,5396,2.297,5397,1.291,5398,1.291,5399,1.291,5400,2.297,5401,1.291,5402,1.291,5403,1.291,5404,1.291,5405,1.291,5406,1.151,5407,2.297,5408,1.291,5409,2.297,5410,1.291,5411,1.291,5412,1.291,5413,1.151,5414,2.297]],["title/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[13,1.339,936,1.472,1951,1.641,4162,2.022,5215,2.224]],["body/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[0,0.187,2,0.488,3,0.061,4,0.051,5,0.118,11,0.631,13,1.676,17,0.174,21,0.573,24,0.771,27,0.006,28,0.655,44,0.156,48,0.163,52,3.18,53,2.601,57,1.798,59,0.002,60,0.002,66,1.34,67,3.549,68,1.26,76,1.239,83,0.816,84,0.722,87,0.221,89,1.067,111,2.531,113,3.243,114,1.076,125,1.715,126,1.843,138,1.624,143,3.353,144,2.34,145,3.698,147,3.652,150,3.211,152,0.488,155,1.161,168,1.385,169,1.716,171,3,172,1.62,174,1.141,175,1.624,181,3.917,188,0.983,191,1.246,209,0.488,211,1.716,216,0.807,227,2.601,229,3.652,231,3.417,234,3.303,240,1.807,241,1.933,247,0.665,257,1.624,291,1.807,300,2.184,301,1.707,302,3.298,304,2.859,306,2.43,307,1.13,338,1.933,341,2.965,344,3.985,345,2.836,357,3.206,367,2.258,379,1.796,432,2.648,483,1.796,485,1.891,510,2.184,527,2.527,553,1.16,555,1.34,587,1.052,605,1.624,608,3.271,610,1.385,620,3.353,625,2.532,630,1.385,639,2.962,642,3.18,644,3.042,660,1.807,684,1.298,719,1.435,722,1.298,754,3.711,793,1.707,821,3.091,833,1.49,857,2.34,874,2.054,876,3.975,887,1.191,889,1.624,898,3.731,921,1.435,935,3.633,936,2.334,937,1.435,939,1.807,941,1.933,946,2.1,948,4.193,992,1.553,993,3.633,994,3.652,997,3.353,998,1.624,999,1.624,1000,1.624,1004,1.707,1005,1.224,1007,1.553,1011,1.435,1020,1.624,1029,1.553,1035,1.435,1046,2.962,1056,1.26,1072,2.1,1083,1.624,1086,1.553,1118,3.077,1153,3.99,1155,3.151,1164,1.624,1170,1.707,1173,1.707,1176,1.435,1178,3.525,1179,2.258,1199,1.49,1204,1.942,1265,1.052,1268,1.624,1360,1.807,1361,2.258,1366,1.807,1381,1.707,1389,1.707,1414,1.553,1434,3.444,1438,2.258,1448,2.859,1449,1.933,1450,2.947,1472,2.648,1495,2.784,1497,1.49,1570,2.532,1612,1.807,1614,1.553,1615,2.258,1622,1.553,1631,4.26,1636,1.807,1639,1.624,1649,2.1,1650,2.1,1651,2.1,1652,2.1,1653,1.933,1661,1.933,1757,1.553,1806,2.784,1807,1.385,1823,2.1,1832,2.117,1853,1.624,1861,2.766,1885,1.553,1978,1.933,2041,2.859,2132,1.34,2148,1.624,2160,1.624,2275,1.49,2311,1.933,2314,5.197,2315,5.024,2499,1.553,2512,5.069,2544,1.624,2548,1.933,2556,1.707,2563,1.707,2606,1.624,2612,1.707,2647,2.648,2654,3.99,2682,2.648,2729,1.624,2773,2.784,2798,4.602,2819,3.731,2825,4.569,2828,2.43,2829,1.553,2835,1.707,2878,3.525,2928,2.1,2956,2.1,2965,1.933,2993,2.43,3071,2.784,3094,2.784,3096,1.707,3123,1.807,3124,2.947,3226,1.807,3256,1.807,3261,1.933,3266,1.933,3267,2.648,3271,1.624,3272,1.807,3311,3.99,3360,2.648,3372,2.1,3374,2.1,3406,4.26,3446,2.1,3452,1.933,3454,2.1,3461,1.624,3468,2.1,3485,2.1,3486,2.1,3558,1.807,3670,1.807,3701,1.807,3753,2.1,3776,1.933,4151,1.933,4157,5.197,4159,1.933,4162,3.206,4163,4.073,4171,1.807,4176,1.707,4178,1.624,4188,1.933,4191,2.1,4192,3.731,4202,2.1,4209,1.707,4210,2.1,4215,4.304,4218,1.933,4219,4.304,4222,2.1,4224,1.553,4225,1.933,4256,2.1,4271,1.933,4273,2.1,4303,1.807,4332,1.807,4346,2.1,4351,1.624,4371,1.933,4380,1.933,4381,2.1,4407,1.933,4410,1.807,4414,1.933,4436,1.707,4443,1.807,4471,2.784,4482,2.1,4501,1.707,4540,1.707,4595,1.933,4607,1.707,4717,4.336,4762,2.947,4787,2.1,4793,1.624,4810,2.1,4855,1.933,4870,4.304,4871,3.99,4883,3.99,4924,3.99,4954,3.353,4985,2.1,5001,2.1,5007,2.1,5074,1.933,5078,2.1,5129,3.151,5150,2.1,5161,1.807,5196,2.1,5209,7.019,5211,2.1,5214,3.151,5215,4.478,5231,2.1,5233,1.933,5240,2.1,5254,2.1,5263,3.425,5270,4.336,5305,3.425,5327,3.425,5364,3.425,5367,2.1,5375,1.807,5415,1.933,5416,2.1,5417,2.355,5418,4.862,5419,2.355,5420,6.231,5421,3.151,5422,2.355,5423,3.84,5424,5.608,5425,2.355,5426,2.355,5427,2.355,5428,2.355,5429,2.355,5430,2.355,5431,2.355,5432,3.84,5433,2.355,5434,2.355,5435,2.355,5436,2.1,5437,3.84,5438,4.862,5439,2.355,5440,2.355,5441,2.355,5442,2.355,5443,2.1,5444,2.355,5445,2.355,5446,2.1,5447,3.84,5448,2.355,5449,1.933,5450,2.355,5451,2.355,5452,2.355,5453,2.355,5454,2.355,5455,2.355,5456,2.355,5457,2.355,5458,3.84,5459,3.84,5460,2.355,5461,2.1,5462,3.425,5463,2.355,5464,2.355,5465,2.355,5466,2.355,5467,2.355,5468,2.355,5469,2.355,5470,2.355,5471,2.355,5472,2.355,5473,2.355,5474,2.355,5475,2.355,5476,2.355,5477,2.355,5478,2.355,5479,2.355,5480,2.355,5481,2.355,5482,2.355,5483,2.355,5484,1.807,5485,2.355,5486,2.355,5487,2.355,5488,2.355,5489,2.355,5490,2.355,5491,2.355,5492,2.355,5493,2.355,5494,2.355,5495,2.355,5496,2.355,5497,2.1,5498,2.355,5499,2.355,5500,2.355,5501,2.1,5502,2.355,5503,2.355,5504,2.355,5505,2.355,5506,2.355,5507,2.355,5508,2.355,5509,2.355,5510,2.355,5511,2.1,5512,2.355]],["title/additional-documentation/nestjs-application/domain-driven-design.html",[936,1.472,1951,1.641,2314,2.115,5161,2.354,5513,2.736]],["body/additional-documentation/nestjs-application/domain-driven-design.html",[13,2.419,14,3.26,24,0.4,27,0.006,36,0.44,51,3.102,54,1.728,57,3.074,59,0.003,60,0.003,67,2.392,76,1.225,83,0.93,84,1.36,87,0.355,123,1.688,155,1.143,162,1.648,169,2.457,172,1.286,174,1.123,181,4.183,191,2.498,194,4.549,201,2.15,211,1.05,229,3.056,232,1.482,233,3.154,234,3.313,257,2.607,291,4.255,302,4.89,303,4.527,304,2.223,305,2.392,306,2.392,307,3.863,341,2.661,344,1.861,345,2.803,357,2.492,360,4.255,363,2.223,364,2.901,365,2.492,379,2.425,388,1.545,397,2.534,432,3.823,486,2.022,497,3.823,504,1.861,587,2.475,609,5.038,619,2.607,630,4.253,719,3.378,754,3.792,806,3.102,821,3.056,833,3.508,850,1.861,876,2.15,899,2.492,906,2.022,921,2.303,935,5.016,994,4.797,999,2.607,1000,2.607,1029,2.492,1085,2.74,1086,2.492,1098,2.223,1113,2.74,1170,2.74,1173,2.74,1265,1.688,1269,1.911,1346,3.823,1359,2.607,1378,2.607,1427,2.901,1434,3.412,1448,3.26,1489,4.328,1582,2.74,1612,2.901,1763,2.607,1860,2.607,1893,2.74,1905,3.371,1937,3.371,1999,2.901,2118,2.901,2160,2.607,2219,2.901,2234,2.607,2314,6.419,2315,2.607,2537,2.607,2540,2.74,2544,2.607,2552,2.492,2556,5.582,2609,4.019,2678,3.823,2682,3.823,2727,2.901,2728,2.74,2829,3.655,2835,2.74,2907,5.855,2930,3.371,2993,2.392,3091,2.901,3094,4.759,3122,2.901,3124,2.901,3234,3.102,3242,2.74,3267,2.607,3270,4.255,3411,2.74,3461,2.607,3552,2.901,3563,3.102,3743,3.102,3781,2.901,3895,2.901,4015,3.102,4053,2.901,4145,2.74,4157,2.607,4158,2.901,4162,4.768,4163,3.655,4176,2.74,4178,2.607,4185,2.901,4267,2.901,4271,4.549,4296,6.176,4303,2.901,4308,3.102,4351,2.607,4410,2.901,4436,4.019,4501,2.74,4540,4.019,4549,4.019,4607,2.74,4740,3.102,4762,2.901,4781,3.371,4793,2.607,4828,3.102,4841,2.901,4851,4.944,4852,2.901,4866,3.102,4915,3.102,4954,2.607,5056,3.102,5105,2.901,5129,3.102,5157,3.371,5161,4.255,5162,3.371,5209,5.909,5293,3.371,5298,3.371,5318,3.371,5354,3.371,5378,3.102,5415,3.102,5420,4.944,5436,4.944,5484,2.901,5497,3.371,5501,3.371,5513,3.371,5514,3.78,5515,3.78,5516,3.78,5517,3.78,5518,3.78,5519,3.78,5520,3.78,5521,3.78,5522,5.544,5523,3.78,5524,3.78,5525,3.78,5526,3.78,5527,3.78,5528,3.78,5529,3.78,5530,3.78,5531,3.78,5532,3.78,5533,3.78,5534,3.78,5535,3.78,5536,3.78,5537,3.371,5538,3.78,5539,3.78,5540,3.371,5541,3.78,5542,3.371,5543,3.78,5544,3.78,5545,3.78,5546,3.78,5547,3.78,5548,3.78,5549,3.78,5550,4.944,5551,3.78,5552,3.78,5553,3.78,5554,3.78,5555,3.78,5556,3.78,5557,3.78,5558,3.78,5559,3.78,5560,3.78,5561,3.78,5562,3.78,5563,3.78,5564,3.78,5565,3.78,5566,3.78,5567,3.78,5568,3.78,5569,3.78,5570,3.78,5571,3.78,5572,3.78,5573,3.78,5574,3.78,5575,3.78,5576,3.78,5577,3.78,5578,3.78,5579,5.544,5580,3.78,5581,3.102,5582,3.78,5583,3.371,5584,3.78,5585,3.78,5586,3.78,5587,3.78,5588,3.102]],["title/additional-documentation/nestjs-application/cross-cutting-concerns.html",[359,2.022,936,1.472,1951,1.641,4793,2.115,5155,2.517]],["body/additional-documentation/nestjs-application/cross-cutting-concerns.html",[0,0.15,13,3.188,14,2.694,15,2.606,16,1.629,17,0.357,21,1.115,23,4.386,27,0.006,28,0.412,31,1.957,36,1.061,44,0.297,48,0.112,51,3.76,52,3.053,53,3.907,54,3.789,59,0.005,60,0.004,65,3.021,66,2.606,68,4.435,87,0.597,111,2.381,126,3.053,152,0.949,155,1.385,168,2.694,184,4.623,224,3.76,227,2.451,229,4.026,231,2.791,234,2.915,247,2.342,300,2.606,302,4.876,303,3.159,304,3.74,305,2.899,307,2.199,341,3.053,344,3.132,354,4.025,357,3.021,359,4.193,363,2.694,365,5.203,371,3.516,421,4.193,532,2.899,588,1.761,615,3.875,754,2.256,887,2.317,900,5.103,906,4.873,920,4.086,921,3.875,922,2.899,923,3.321,931,3.76,935,2.694,936,3.053,937,4.451,995,2.381,997,3.159,1029,3.021,1056,2.451,1086,4.816,1087,5.915,1117,4.193,1120,3.76,1179,3.74,1236,4.193,1241,4.086,1242,3.76,1244,4.086,1248,4.086,1250,4.086,1251,4.086,1269,3.216,1361,2.694,1381,3.321,1434,3.306,1438,2.694,1450,3.516,1483,3.159,1485,4.086,1488,3.021,1495,4.611,1497,4.025,1660,5.219,1913,4.086,2112,3.321,2132,2.606,2529,3.76,2557,3.159,2612,3.321,2625,3.516,2828,2.899,2993,2.899,3226,3.516,3471,4.086,3657,5.219,4156,3.321,4188,3.76,4224,3.021,4391,4.086,4515,4.086,4793,3.159,5119,4.086,5155,5.219,5271,3.76,5314,4.086,5421,3.76,5446,4.086,5449,3.76,5484,3.516,5511,4.086,5588,3.76,5589,4.581,5590,7.891,5591,4.581,5592,4.581,5593,4.581,5594,7.891,5595,4.086,5596,4.581,5597,4.581,5598,7.305,5599,4.581,5600,4.581,5601,4.581,5602,4.581,5603,6.36,5604,4.581,5605,4.581,5606,4.581,5607,4.581,5608,4.086,5609,4.581,5610,6.36,5611,4.581,5612,4.581,5613,4.581,5614,4.581,5615,4.581,5616,4.581,5617,4.581,5618,4.581,5619,4.581,5620,4.581,5621,4.581,5622,4.581]],["title/additional-documentation/nestjs-application/testing.html",[834,2.481,936,1.954,1951,2.178]],["body/additional-documentation/nestjs-application/testing.html",[0,0.07,2,0.357,13,2.64,17,0.208,24,0.487,26,0.271,27,0.006,28,0.349,41,0.319,44,0.12,52,0.828,54,3.496,59,0.002,60,0.002,65,2.561,66,2.948,68,0.923,76,1.656,83,0.87,84,0.556,111,2.049,113,1.209,114,1.776,123,0.77,125,1.735,126,1.865,144,1.803,155,2.426,156,1.538,157,1.538,163,0.828,166,0.705,168,4.068,169,1.079,171,0.923,172,0.4,173,0.788,174,1.681,175,2.04,179,1.538,181,2.019,191,2.636,201,2.21,217,0.434,227,4.895,229,1.631,231,1.051,233,2.21,234,3.037,238,2.04,240,1.324,247,1.301,248,1.521,266,1.683,268,2.019,301,1.25,302,2.285,304,1.74,306,1.872,307,2.488,341,0.828,344,2.268,345,3.059,354,1.091,361,1.415,363,1.74,376,0.625,397,0.788,421,1.137,426,2.04,430,1.25,481,1.014,483,2.09,516,1.137,529,0.72,532,1.091,551,0.828,552,0.828,555,2.21,576,1.291,608,0.808,641,1.014,642,2.01,644,0.849,684,0.951,690,2.806,719,1.051,722,1.631,754,3.513,784,1.538,793,1.25,821,3.117,833,2.915,834,5.11,849,1.25,874,4.895,876,2.948,878,5.044,887,0.872,890,4.254,891,2.694,892,3.339,893,3.978,898,1.324,899,3.037,903,1.324,906,1.583,921,2.367,933,1.872,934,2.639,935,3.558,937,1.051,974,1.25,978,0.923,992,1.137,994,0.951,995,2.019,1007,1.951,1020,1.189,1027,1.872,1029,4.209,1035,1.803,1041,1.189,1056,3.816,1057,1.25,1061,2.27,1081,1.189,1087,1.137,1098,4.578,1115,1.25,1117,3.729,1118,2.915,1133,2.27,1154,1.051,1156,1.415,1161,1.189,1173,1.25,1177,1.538,1206,1.091,1207,0.896,1208,1.189,1224,1.014,1225,1.683,1235,1.324,1236,1.137,1269,2.329,1298,1.137,1341,1.137,1358,1.415,1361,1.74,1363,2.04,1380,1.415,1427,1.324,1434,2.694,1438,1.014,1486,1.324,1487,1.538,1488,1.137,1489,1.137,1490,1.538,1491,3.339,1495,1.25,1497,2.458,1546,2.27,1548,2.04,1559,1.538,1562,1.137,1572,1.189,1574,1.189,1582,4.1,1585,2.428,1588,1.25,1589,1.538,1607,1.25,1608,2.04,1612,2.27,1614,1.137,1619,1.538,1624,1.415,1629,1.091,1631,1.189,1640,1.137,1642,1.091,1673,1.538,1747,2.561,1757,3.417,1758,2.561,1763,3.574,1807,1.014,1814,1.415,1832,0.951,1853,3.176,1860,2.679,1861,2.948,1863,3.158,1885,1.137,1902,1.415,1903,1.415,1966,1.25,2041,4.498,2126,2.04,2132,0.981,2159,1.538,2167,2.561,2169,1.415,2223,1.324,2224,1.324,2275,1.091,2314,1.189,2315,4.599,2318,1.415,2372,1.324,2427,4.1,2428,1.189,2429,1.415,2512,1.415,2534,1.189,2544,1.189,2545,1.25,2552,1.137,2556,2.145,2557,2.04,2606,2.04,2609,2.145,2612,4.1,2618,1.415,2647,2.04,2678,3.574,2682,3.176,2723,2.27,2727,1.324,2728,1.25,2729,2.04,2733,1.538,2747,1.538,2760,2.04,2773,4.1,2789,1.538,2806,1.538,2820,2.639,2821,3.188,2828,4.84,2829,3.417,2835,1.25,2878,3.339,2925,2.639,2941,1.538,2958,4.623,2968,1.189,2978,2.428,2993,1.091,2998,5.395,3022,1.538,3044,1.324,3059,1.538,3065,1.415,3076,1.415,3091,2.981,3096,1.25,3102,1.324,3124,1.324,3162,1.538,3172,1.538,3186,1.415,3193,1.538,3242,2.145,3250,2.816,3258,1.538,3261,1.415,3266,1.415,3267,2.04,3268,1.415,3271,3.9,3300,1.538,3315,1.415,3345,2.04,3346,1.415,3388,3.188,3404,1.415,3408,2.428,3411,1.25,3413,1.538,3473,1.538,3481,3.188,3554,1.415,3568,1.538,3594,3.465,3613,1.324,3646,1.415,3657,1.415,3671,2.27,3677,1.415,3701,1.324,3708,5.395,3715,2.27,3786,1.324,3812,1.538,3816,1.415,3842,1.538,3892,1.415,3917,1.415,4015,1.415,4083,1.538,4107,1.415,4145,4.386,4157,3.176,4158,3.978,4163,1.137,4166,1.538,4167,1.538,4175,1.538,4178,1.189,4181,1.538,4185,1.324,4192,1.324,4209,2.145,4213,5.118,4218,1.415,4233,1.324,4246,1.415,4255,1.538,4267,2.27,4270,1.324,4274,1.538,4295,1.415,4296,2.981,4299,1.415,4308,3.188,4332,1.324,4342,1.538,4350,1.538,4351,1.189,4380,1.415,4387,1.538,4401,2.428,4409,1.415,4412,1.415,4431,1.538,4436,1.25,4440,1.538,4443,1.324,4471,1.25,4483,1.538,4496,1.538,4499,1.415,4501,1.25,4507,1.538,4549,2.145,4560,1.415,4566,1.538,4576,6.169,4617,1.415,4737,1.538,4802,1.415,4807,1.415,4808,1.538,4826,4.108,4841,1.324,4870,2.981,4874,1.538,4898,1.538,4915,1.415,4924,1.415,4948,1.538,4954,1.189,4988,1.538,5041,2.639,5056,1.415,5095,1.538,5105,4.899,5112,1.538,5130,1.538,5154,1.538,5184,1.538,5195,1.538,5203,2.639,5209,5.308,5214,1.415,5215,3.758,5218,1.538,5225,1.415,5233,1.415,5236,4.108,5271,1.415,5375,1.324,5378,3.188,5413,2.639,5415,3.78,5416,1.538,5421,1.415,5443,1.538,5449,1.415,5461,1.538,5462,1.538,5484,3.978,5537,1.538,5540,2.639,5542,1.538,5550,1.538,5583,1.538,5588,2.428,5595,1.538,5608,1.538,5623,2.958,5624,1.725,5625,1.725,5626,1.725,5627,1.725,5628,1.725,5629,1.725,5630,1.725,5631,1.725,5632,1.725,5633,1.725,5634,1.725,5635,1.725,5636,1.725,5637,2.958,5638,1.725,5639,1.725,5640,1.725,5641,1.725,5642,1.725,5643,1.725,5644,1.725,5645,1.725,5646,1.725,5647,1.725,5648,1.725,5649,1.725,5650,1.725,5651,1.725,5652,1.725,5653,1.725,5654,1.725,5655,1.725,5656,1.725,5657,1.725,5658,1.725,5659,1.725,5660,1.725,5661,1.725,5662,1.725,5663,1.725,5664,1.725,5665,1.538,5666,3.885,5667,1.725,5668,3.885,5669,2.958,5670,5.183,5671,2.958,5672,3.885,5673,4.606,5674,1.725,5675,1.725,5676,2.958,5677,1.725,5678,1.725,5679,1.725,5680,1.725,5681,1.725,5682,1.725,5683,1.725,5684,1.725,5685,5.656,5686,1.725,5687,1.725,5688,1.725,5689,1.725,5690,1.725,5691,1.725,5692,1.725,5693,1.725,5694,1.725,5695,1.725,5696,1.725,5697,1.725,5698,2.958,5699,1.725,5700,2.958,5701,1.725,5702,1.725,5703,1.725,5704,2.958,5705,1.725,5706,1.725,5707,3.885,5708,2.958,5709,2.958,5710,1.725,5711,1.725,5712,4.606,5713,1.725,5714,1.725,5715,1.725,5716,1.725,5717,1.725,5718,1.725,5719,1.725,5720,2.958,5721,2.958,5722,1.725,5723,2.958,5724,1.725,5725,1.725,5726,1.725,5727,1.725,5728,1.725,5729,2.958,5730,2.958,5731,1.725,5732,1.725,5733,2.958,5734,1.725,5735,1.725,5736,2.958,5737,1.725,5738,1.725,5739,1.725,5740,1.725,5741,1.725,5742,1.725,5743,2.958,5744,4.606,5745,1.725,5746,1.725,5747,1.725,5748,1.725,5749,1.725,5750,1.725,5751,2.958,5752,1.725,5753,1.725,5754,1.725,5755,1.725,5756,1.725,5757,1.725,5758,1.725,5759,1.725,5760,1.725,5761,1.725,5762,1.725,5763,2.958,5764,1.725,5765,1.725,5766,1.725,5767,1.725,5768,1.725,5769,1.725,5770,1.725,5771,1.725,5772,1.725,5773,1.725,5774,1.725,5775,1.725,5776,1.725,5777,1.725,5778,1.725,5779,1.725,5780,1.725,5781,1.725,5782,1.725,5783,1.725,5784,1.725,5785,1.725,5786,1.725,5787,1.725,5788,1.725,5789,1.725,5790,1.725,5791,1.725,5792,1.725,5793,1.725,5794,1.725,5795,1.725,5796,1.725]],["title/additional-documentation/nestjs-application/decisions.html",[936,1.954,1951,2.178,5581,3.341]],["body/additional-documentation/nestjs-application/decisions.html",[2,1.609,27,0.005,52,2.974,59,0.005,60,0.005,172,1.437,181,4.036,209,1.284,211,1.721,217,1.558,226,4.085,234,3.133,239,3.921,305,3.921,341,2.974,416,2.48,553,3.823,576,2.704,684,3.415,722,4.28,754,3.051,836,3.921,886,4.755,887,3.133,891,3.221,995,3.221,999,5.354,1000,4.273,1027,3.921,1056,3.314,1158,3.921,1382,5.591,1434,3.221,1438,3.644,1496,5.526,1562,5.591,1582,4.492,1804,6.371,1807,3.644,1853,5.354,2219,5.958,2319,5.958,2537,4.273,2587,6.507,2828,3.921,2897,5.085,2968,4.273,3050,5.085,3071,4.492,3149,5.526,3224,5.085,3354,5.526,3406,4.273,3461,4.273,3547,5.526,3738,5.526,4156,4.492,4162,4.085,4351,4.273,4777,5.085,4852,4.755,5215,4.492,5225,5.085,5375,4.755,5406,5.526,5581,6.371,5665,5.526,5797,6.196,5798,6.196,5799,6.196,5800,6.196,5801,6.196,5802,6.196,5803,6.196,5804,6.196,5805,6.196,5806,7.764,5807,6.196,5808,6.196,5809,6.196,5810,6.196,5811,6.196,5812,6.196,5813,6.196,5814,6.196,5815,6.196,5816,6.196,5817,6.196,5818,6.196,5819,6.196]],["title/additional-documentation/nestjs-application/vscode.html",[936,1.954,1951,2.178,4160,3.124]],["body/additional-documentation/nestjs-application/vscode.html",[5,0.123,27,0.006,57,3.862,59,0.005,60,0.005,227,4.412,306,4.326,307,3.959,322,4.714,341,3.959,359,4.507,722,3.768,874,3.657,1005,4.287,1046,5.025,1434,3.553,2422,6.097,2428,4.714,2458,4.956,2727,5.246,2760,5.688,2819,5.246,2828,4.326,2860,5.61,2868,4.956,3034,4.956,3199,5.246,3267,4.714,3452,6.768,4160,6.33,4194,7.356,4224,4.507,4396,4.956,4503,6.097,4844,7.899,4868,6.097,4954,4.714,4994,5.61,5137,6.097,5139,6.097,5820,6.836,5821,6.836,5822,6.836,5823,6.836,5824,6.836,5825,6.836,5826,6.836,5827,6.836,5828,6.836]],["title/additional-documentation/nestjs-application/git.html",[936,1.954,1951,2.178,4161,3.341]],["body/additional-documentation/nestjs-application/git.html",[27,0.005,59,0.005,60,0.005,367,4.429,552,3.615,1269,3.808,1361,4.429,2132,4.284,2148,5.193,3817,5.78,3911,7.167,4161,7.57,4174,6.717,5291,6.717,5829,7.531,5830,7.531,5831,7.531,5832,7.531]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"interfaces/LessonProperties.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["0",{"_index":850,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/ISubmissionProperties.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"injectables/RoleRepo.html":{},"classes/Scope.html":{},"classes/Submission.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["0.1.1",{"_index":4071,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":4108,"title":{},"body":{"dependencies.html":{}}}],["0.1.4",{"_index":4119,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":4034,"title":{},"body":{"dependencies.html":{}}}],["0.21.0",{"_index":4025,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":4033,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":4098,"title":{},"body":{"dependencies.html":{}}}],["0.4.17",{"_index":4131,"title":{},"body":{"dependencies.html":{}}}],["0.5.19",{"_index":4123,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":4091,"title":{},"body":{"dependencies.html":{}}}],["0.5.4",{"_index":4076,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":4082,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":4122,"title":{},"body":{"dependencies.html":{}}}],["0.8.0",{"_index":4018,"title":{},"body":{"dependencies.html":{}}}],["0.8.1",{"_index":4085,"title":{},"body":{"dependencies.html":{}}}],["0.9.7",{"_index":4074,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":3919,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":3960,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":3971,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":3972,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":3968,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":3947,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":3930,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":3922,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":3918,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":3951,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":3937,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":3945,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":3955,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":3957,"title":{},"body":{"coverage.html":{}}}],["0000d213816abba584714c0a",{"_index":845,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["0000d224816abba584714c9c",{"_index":5770,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["0000d225816abba584714c9d",{"_index":5772,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["01",{"_index":2894,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":2890,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":2623,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":2887,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":3483,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":2841,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":2742,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":2690,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":2567,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":1863,"title":{},"body":{"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/Scope.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["1.0.0",{"_index":4099,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":4111,"title":{},"body":{"dependencies.html":{}}}],["1.0.5",{"_index":4058,"title":{},"body":{"dependencies.html":{}}}],["1.0.56",{"_index":4045,"title":{},"body":{"dependencies.html":{}}}],["1.0a",{"_index":4094,"title":{},"body":{"dependencies.html":{}}}],["1.1",{"_index":5720,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["1.1.0",{"_index":4055,"title":{},"body":{"dependencies.html":{}}}],["1.1.1",{"_index":4138,"title":{},"body":{"dependencies.html":{}}}],["1.1.4",{"_index":4109,"title":{},"body":{"dependencies.html":{}}}],["1.15.2",{"_index":4029,"title":{},"body":{"dependencies.html":{}}}],["1.17.0",{"_index":3998,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":5721,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["1.2.0",{"_index":4026,"title":{},"body":{"dependencies.html":{}}}],["1.2.7",{"_index":3469,"title":{},"body":{"changelog.html":{}}}],["1.28.1",{"_index":4061,"title":{},"body":{"dependencies.html":{}}}],["1.3.3",{"_index":3999,"title":{},"body":{"dependencies.html":{}}}],["1.6.2",{"_index":4038,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":3921,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":3953,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":3929,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":3928,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":3948,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":3981,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":3946,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":3954,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1949,"title":{},"body":{"classes/PaginationQuery.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":3920,"title":{},"body":{"coverage.html":{}}}],["106",{"_index":2697,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":2876,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["110",{"_index":2676,"title":{},"body":{"changelog.html":{}}}],["112",{"_index":2628,"title":{},"body":{"changelog.html":{}}}],["119",{"_index":2671,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":3231,"title":{},"body":{"changelog.html":{}}}],["12.0.0",{"_index":4101,"title":{},"body":{"dependencies.html":{}}}],["120",{"_index":2624,"title":{},"body":{"changelog.html":{}}}],["121",{"_index":2588,"title":{},"body":{"changelog.html":{}}}],["124",{"_index":2674,"title":{},"body":{"changelog.html":{}}}],["1289",{"_index":3347,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":3005,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1316",{"_index":3556,"title":{},"body":{"changelog.html":{}}}],["137",{"_index":2692,"title":{},"body":{"changelog.html":{}}}],["138",{"_index":3385,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":2712,"title":{},"body":{"changelog.html":{}}}],["1499",{"_index":2919,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":2872,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1508",{"_index":2948,"title":{},"body":{"changelog.html":{}}}],["15672:15672",{"_index":5067,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["1589",{"_index":3382,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":2864,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["16.2.0",{"_index":4056,"title":{},"body":{"dependencies.html":{}}}],["160",{"_index":3363,"title":{},"body":{"changelog.html":{}}}],["164",{"_index":2591,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":3030,"title":{},"body":{"changelog.html":{}}}],["1735",{"_index":3254,"title":{},"body":{"changelog.html":{}}}],["179",{"_index":2586,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":2704,"title":{},"body":{"changelog.html":{}}}],["187",{"_index":2633,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":2989,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1996",{"_index":4459,"title":{},"body":{"license.html":{}}}],["1:1",{"_index":5813,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["1:n",{"_index":5812,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["2",{"_index":690,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["2.1.0",{"_index":4059,"title":{},"body":{"dependencies.html":{}}}],["2.19.2",{"_index":4073,"title":{},"body":{"dependencies.html":{}}}],["2.2.6",{"_index":4095,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":4118,"title":{},"body":{"dependencies.html":{}}}],["2.6.0",{"_index":4022,"title":{},"body":{"dependencies.html":{}}}],["2.8.1",{"_index":4041,"title":{},"body":{"dependencies.html":{}}}],["2.970.0",{"_index":4024,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":3926,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":3956,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2785,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["2007",{"_index":4230,"title":{},"body":{"license.html":{}}}],["2020",{"_index":3230,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":2566,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":2775,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["213",{"_index":2578,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":2575,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["22.10.0",{"_index":3784,"title":{},"body":{"changelog.html":{}}}],["22.10.2",{"_index":3782,"title":{},"body":{"changelog.html":{}}}],["22.10.3",{"_index":3779,"title":{},"body":{"changelog.html":{}}}],["22.7.1",{"_index":3915,"title":{},"body":{"changelog.html":{}}}],["22.8.0",{"_index":3884,"title":{},"body":{"changelog.html":{}}}],["22.9.0",{"_index":3883,"title":{},"body":{"changelog.html":{}}}],["22.9.1",{"_index":3879,"title":{},"body":{"changelog.html":{}}}],["22.9.10",{"_index":3854,"title":{},"body":{"changelog.html":{}}}],["22.9.17",{"_index":3849,"title":{},"body":{"changelog.html":{}}}],["22.9.18",{"_index":3845,"title":{},"body":{"changelog.html":{}}}],["22.9.2",{"_index":3877,"title":{},"body":{"changelog.html":{}}}],["22.9.20",{"_index":3832,"title":{},"body":{"changelog.html":{}}}],["22.9.3",{"_index":3873,"title":{},"body":{"changelog.html":{}}}],["22.9.4",{"_index":3871,"title":{},"body":{"changelog.html":{}}}],["22.9.5",{"_index":3868,"title":{},"body":{"changelog.html":{}}}],["22.9.6",{"_index":3862,"title":{},"body":{"changelog.html":{}}}],["22.9.7",{"_index":3860,"title":{},"body":{"changelog.html":{}}}],["22.9.8",{"_index":3856,"title":{},"body":{"changelog.html":{}}}],["22.9.9",{"_index":3855,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":2772,"title":{},"body":{"changelog.html":{}}}],["23.0.0",{"_index":3770,"title":{},"body":{"changelog.html":{}}}],["23.1.4",{"_index":3766,"title":{},"body":{"changelog.html":{}}}],["23.2.0",{"_index":3762,"title":{},"body":{"changelog.html":{}}}],["23.2.1",{"_index":3758,"title":{},"body":{"changelog.html":{}}}],["23.2.4",{"_index":3754,"title":{},"body":{"changelog.html":{}}}],["23.4.0",{"_index":3750,"title":{},"body":{"changelog.html":{}}}],["23.4.3",{"_index":3745,"title":{},"body":{"changelog.html":{}}}],["23.4.5",{"_index":3740,"title":{},"body":{"changelog.html":{}}}],["23.4.7",{"_index":3734,"title":{},"body":{"changelog.html":{}}}],["23.5.0",{"_index":3726,"title":{},"body":{"changelog.html":{}}}],["23.5.4",{"_index":3722,"title":{},"body":{"changelog.html":{}}}],["23.6.0",{"_index":3719,"title":{},"body":{"changelog.html":{}}}],["23.6.1",{"_index":3713,"title":{},"body":{"changelog.html":{}}}],["23.6.2",{"_index":3705,"title":{},"body":{"changelog.html":{}}}],["23.6.3",{"_index":3679,"title":{},"body":{"changelog.html":{}}}],["23.6.4",{"_index":3675,"title":{},"body":{"changelog.html":{}}}],["232",{"_index":2601,"title":{},"body":{"changelog.html":{}}}],["233",{"_index":2604,"title":{},"body":{"changelog.html":{}}}],["237",{"_index":2555,"title":{},"body":{"changelog.html":{}}}],["239",{"_index":2685,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":2857,"title":{},"body":{"changelog.html":{}}}],["24.0.1",{"_index":3672,"title":{},"body":{"changelog.html":{}}}],["24.0.2",{"_index":3667,"title":{},"body":{"changelog.html":{}}}],["24.2.2",{"_index":3643,"title":{},"body":{"changelog.html":{}}}],["24.2.3",{"_index":3642,"title":{},"body":{"changelog.html":{}}}],["24.2.4",{"_index":3641,"title":{},"body":{"changelog.html":{}}}],["24.2.5",{"_index":3636,"title":{},"body":{"changelog.html":{}}}],["24.3.0",{"_index":3635,"title":{},"body":{"changelog.html":{}}}],["24.3.1",{"_index":3631,"title":{},"body":{"changelog.html":{}}}],["24.3.2",{"_index":3624,"title":{},"body":{"changelog.html":{}}}],["24.3.3",{"_index":3621,"title":{},"body":{"changelog.html":{}}}],["24.4.0",{"_index":3615,"title":{},"body":{"changelog.html":{}}}],["24.4.1",{"_index":3607,"title":{},"body":{"changelog.html":{}}}],["24.4.2",{"_index":3603,"title":{},"body":{"changelog.html":{}}}],["24.4.3",{"_index":3601,"title":{},"body":{"changelog.html":{}}}],["24.4.4",{"_index":3598,"title":{},"body":{"changelog.html":{}}}],["24.4.5",{"_index":3592,"title":{},"body":{"changelog.html":{}}}],["24.4.6",{"_index":3589,"title":{},"body":{"changelog.html":{}}}],["24.5.0",{"_index":3578,"title":{},"body":{"changelog.html":{}}}],["24.5.1",{"_index":3576,"title":{},"body":{"changelog.html":{}}}],["2418",{"_index":2895,"title":{},"body":{"changelog.html":{}}}],["2466",{"_index":2858,"title":{},"body":{"changelog.html":{}}}],["247",{"_index":2617,"title":{},"body":{"changelog.html":{}}}],["2491",{"_index":2714,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":3024,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["25.0.0",{"_index":3574,"title":{},"body":{"changelog.html":{}}}],["25.0.1",{"_index":3571,"title":{},"body":{"changelog.html":{}}}],["25.0.10",{"_index":3541,"title":{},"body":{"changelog.html":{}}}],["25.0.11",{"_index":3538,"title":{},"body":{"changelog.html":{}}}],["25.0.12",{"_index":3535,"title":{},"body":{"changelog.html":{}}}],["25.0.2",{"_index":3570,"title":{},"body":{"changelog.html":{}}}],["25.0.3",{"_index":3564,"title":{},"body":{"changelog.html":{}}}],["25.0.4",{"_index":3562,"title":{},"body":{"changelog.html":{}}}],["25.0.5",{"_index":3560,"title":{},"body":{"changelog.html":{}}}],["25.0.6",{"_index":3559,"title":{},"body":{"changelog.html":{}}}],["25.0.7",{"_index":3555,"title":{},"body":{"changelog.html":{}}}],["25.0.8",{"_index":3548,"title":{},"body":{"changelog.html":{}}}],["25.0.9",{"_index":3544,"title":{},"body":{"changelog.html":{}}}],["25.1.0",{"_index":3515,"title":{},"body":{"changelog.html":{}}}],["25.1.1",{"_index":3510,"title":{},"body":{"changelog.html":{}}}],["25.1.10",{"_index":3482,"title":{},"body":{"changelog.html":{}}}],["25.1.11",{"_index":3479,"title":{},"body":{"changelog.html":{}}}],["25.1.12",{"_index":3477,"title":{},"body":{"changelog.html":{}}}],["25.1.13",{"_index":3476,"title":{},"body":{"changelog.html":{}}}],["25.1.2",{"_index":3506,"title":{},"body":{"changelog.html":{}}}],["25.1.3",{"_index":3505,"title":{},"body":{"changelog.html":{}}}],["25.1.4",{"_index":3502,"title":{},"body":{"changelog.html":{}}}],["25.1.5",{"_index":3499,"title":{},"body":{"changelog.html":{}}}],["25.1.6",{"_index":3496,"title":{},"body":{"changelog.html":{}}}],["25.1.7",{"_index":3492,"title":{},"body":{"changelog.html":{}}}],["25.1.8",{"_index":3490,"title":{},"body":{"changelog.html":{}}}],["25.1.9",{"_index":3488,"title":{},"body":{"changelog.html":{}}}],["25.2",{"_index":3247,"title":{},"body":{"changelog.html":{}}}],["25.2.0",{"_index":3436,"title":{},"body":{"changelog.html":{}}}],["25.2.1",{"_index":3434,"title":{},"body":{"changelog.html":{}}}],["25.2.2",{"_index":3431,"title":{},"body":{"changelog.html":{}}}],["25.2.3",{"_index":3430,"title":{},"body":{"changelog.html":{}}}],["25.2.4",{"_index":3425,"title":{},"body":{"changelog.html":{}}}],["25.2.5",{"_index":3424,"title":{},"body":{"changelog.html":{}}}],["25.2.6",{"_index":3423,"title":{},"body":{"changelog.html":{}}}],["25.3.0",{"_index":3277,"title":{},"body":{"changelog.html":{}}}],["25.3.1",{"_index":3273,"title":{},"body":{"changelog.html":{}}}],["25.3.2",{"_index":3263,"title":{},"body":{"changelog.html":{}}}],["25.3.3",{"_index":3245,"title":{},"body":{"changelog.html":{}}}],["25.3.4",{"_index":3243,"title":{},"body":{"changelog.html":{}}}],["25.3.5",{"_index":3238,"title":{},"body":{"changelog.html":{}}}],["25.3.6",{"_index":3235,"title":{},"body":{"changelog.html":{}}}],["25.3.7",{"_index":3229,"title":{},"body":{"changelog.html":{}}}],["25.3.8",{"_index":3225,"title":{},"body":{"changelog.html":{}}}],["25.3.9",{"_index":3220,"title":{},"body":{"changelog.html":{}}}],["25.4.1",{"_index":3219,"title":{},"body":{"changelog.html":{}}}],["25.5.0",{"_index":3196,"title":{},"body":{"changelog.html":{}}}],["25.5.1",{"_index":3195,"title":{},"body":{"changelog.html":{}}}],["25.5.10",{"_index":3146,"title":{},"body":{"changelog.html":{}}}],["25.5.11",{"_index":3145,"title":{},"body":{"changelog.html":{}}}],["25.5.12",{"_index":3143,"title":{},"body":{"changelog.html":{}}}],["25.5.13",{"_index":3141,"title":{},"body":{"changelog.html":{}}}],["25.5.14",{"_index":3138,"title":{},"body":{"changelog.html":{}}}],["25.5.15",{"_index":3134,"title":{},"body":{"changelog.html":{}}}],["25.5.16",{"_index":3131,"title":{},"body":{"changelog.html":{}}}],["25.5.2",{"_index":3191,"title":{},"body":{"changelog.html":{}}}],["25.5.3",{"_index":3140,"title":{},"body":{"changelog.html":{}}}],["25.5.4",{"_index":3170,"title":{},"body":{"changelog.html":{}}}],["25.5.5",{"_index":3168,"title":{},"body":{"changelog.html":{}}}],["25.5.6",{"_index":3160,"title":{},"body":{"changelog.html":{}}}],["25.5.7",{"_index":3158,"title":{},"body":{"changelog.html":{}}}],["25.5.8",{"_index":3155,"title":{},"body":{"changelog.html":{}}}],["25.5.9",{"_index":3150,"title":{},"body":{"changelog.html":{}}}],["25.6.0",{"_index":3099,"title":{},"body":{"changelog.html":{}}}],["25.6.1",{"_index":3097,"title":{},"body":{"changelog.html":{}}}],["25.6.10",{"_index":3038,"title":{},"body":{"changelog.html":{}}}],["25.6.11",{"_index":3033,"title":{},"body":{"changelog.html":{}}}],["25.6.12",{"_index":3054,"title":{},"body":{"changelog.html":{}}}],["25.6.13",{"_index":3051,"title":{},"body":{"changelog.html":{}}}],["25.6.2",{"_index":3092,"title":{},"body":{"changelog.html":{}}}],["25.6.3",{"_index":3089,"title":{},"body":{"changelog.html":{}}}],["25.6.4",{"_index":3086,"title":{},"body":{"changelog.html":{}}}],["25.6.5",{"_index":3084,"title":{},"body":{"changelog.html":{}}}],["25.6.6",{"_index":3081,"title":{},"body":{"changelog.html":{}}}],["25.6.7",{"_index":3077,"title":{},"body":{"changelog.html":{}}}],["25.6.8",{"_index":3066,"title":{},"body":{"changelog.html":{}}}],["25.6.9",{"_index":3060,"title":{},"body":{"changelog.html":{}}}],["2574",{"_index":2801,"title":{},"body":{"changelog.html":{}}}],["2579",{"_index":2807,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":3061,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["26.0",{"_index":3035,"title":{},"body":{"changelog.html":{}}}],["26.0.0",{"_index":3039,"title":{},"body":{"changelog.html":{}}}],["26.0.1",{"_index":3037,"title":{},"body":{"changelog.html":{}}}],["26.0.10",{"_index":3006,"title":{},"body":{"changelog.html":{}}}],["26.0.11",{"_index":3004,"title":{},"body":{"changelog.html":{}}}],["26.0.12",{"_index":2999,"title":{},"body":{"changelog.html":{}}}],["26.0.13",{"_index":2996,"title":{},"body":{"changelog.html":{}}}],["26.0.14",{"_index":2991,"title":{},"body":{"changelog.html":{}}}],["26.0.15",{"_index":2988,"title":{},"body":{"changelog.html":{}}}],["26.0.16",{"_index":2982,"title":{},"body":{"changelog.html":{}}}],["26.0.2",{"_index":3036,"title":{},"body":{"changelog.html":{}}}],["26.0.3",{"_index":3029,"title":{},"body":{"changelog.html":{}}}],["26.0.4",{"_index":3023,"title":{},"body":{"changelog.html":{}}}],["26.0.5",{"_index":3021,"title":{},"body":{"changelog.html":{}}}],["26.0.6",{"_index":3018,"title":{},"body":{"changelog.html":{}}}],["26.0.7",{"_index":3016,"title":{},"body":{"changelog.html":{}}}],["26.0.8",{"_index":3010,"title":{},"body":{"changelog.html":{}}}],["26.0.9",{"_index":3009,"title":{},"body":{"changelog.html":{}}}],["26.1.0",{"_index":2971,"title":{},"body":{"changelog.html":{}}}],["26.10.0",{"_index":2635,"title":{},"body":{"changelog.html":{}}}],["26.10.1",{"_index":2632,"title":{},"body":{"changelog.html":{}}}],["26.10.2",{"_index":2622,"title":{},"body":{"changelog.html":{}}}],["26.10.3",{"_index":2619,"title":{},"body":{"changelog.html":{}}}],["26.11.0",{"_index":2574,"title":{},"body":{"changelog.html":{}}}],["26.11.1",{"_index":2571,"title":{},"body":{"changelog.html":{}}}],["26.11.2",{"_index":2565,"title":{},"body":{"changelog.html":{}}}],["26.2.0",{"_index":2893,"title":{},"body":{"changelog.html":{}}}],["26.2.1",{"_index":2889,"title":{},"body":{"changelog.html":{}}}],["26.2.2",{"_index":2886,"title":{},"body":{"changelog.html":{}}}],["26.3.0",{"_index":2883,"title":{},"body":{"changelog.html":{}}}],["26.3.1",{"_index":2880,"title":{},"body":{"changelog.html":{}}}],["26.4.0",{"_index":2875,"title":{},"body":{"changelog.html":{}}}],["26.4.1",{"_index":2871,"title":{},"body":{"changelog.html":{}}}],["26.4.2",{"_index":2867,"title":{},"body":{"changelog.html":{}}}],["26.4.3",{"_index":2865,"title":{},"body":{"changelog.html":{}}}],["26.4.4",{"_index":2863,"title":{},"body":{"changelog.html":{}}}],["26.4.5",{"_index":2861,"title":{},"body":{"changelog.html":{}}}],["26.4.6",{"_index":2856,"title":{},"body":{"changelog.html":{}}}],["26.4.7",{"_index":2852,"title":{},"body":{"changelog.html":{}}}],["26.4.8",{"_index":2851,"title":{},"body":{"changelog.html":{}}}],["26.4.9",{"_index":2846,"title":{},"body":{"changelog.html":{}}}],["26.5.0",{"_index":2840,"title":{},"body":{"changelog.html":{}}}],["26.6.0",{"_index":2784,"title":{},"body":{"changelog.html":{}}}],["26.6.1",{"_index":2783,"title":{},"body":{"changelog.html":{}}}],["26.6.2",{"_index":2778,"title":{},"body":{"changelog.html":{}}}],["26.6.3",{"_index":2774,"title":{},"body":{"changelog.html":{}}}],["26.6.4",{"_index":2771,"title":{},"body":{"changelog.html":{}}}],["26.7.0",{"_index":2741,"title":{},"body":{"changelog.html":{}}}],["26.7.1",{"_index":2736,"title":{},"body":{"changelog.html":{}}}],["26.8.0",{"_index":2735,"title":{},"body":{"changelog.html":{}}}],["26.9.0",{"_index":2711,"title":{},"body":{"changelog.html":{}}}],["26.9.1",{"_index":2703,"title":{},"body":{"changelog.html":{}}}],["26.9.2",{"_index":2689,"title":{},"body":{"changelog.html":{}}}],["26.9.3",{"_index":2684,"title":{},"body":{"changelog.html":{}}}],["262",{"_index":2614,"title":{},"body":{"changelog.html":{}}}],["267",{"_index":2620,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":2691,"title":{},"body":{"changelog.html":{}}}],["2710",{"_index":3584,"title":{},"body":{"changelog.html":{}}}],["2714",{"_index":3723,"title":{},"body":{"changelog.html":{}}}],["274",{"_index":2576,"title":{},"body":{"changelog.html":{}}}],["279",{"_index":2594,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":2743,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{},"overview.html":{}}}],["29",{"_index":2568,"title":{},"body":{"changelog.html":{}}}],["2922",{"_index":3891,"title":{},"body":{"changelog.html":{}}}],["2auth",{"_index":4900,"title":{},"body":{"todo.html":{}}}],["3",{"_index":3091,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["3.0.0",{"_index":4105,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":4113,"title":{},"body":{"dependencies.html":{}}}],["3.1",{"_index":5763,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["3.1.0",{"_index":4102,"title":{},"body":{"dependencies.html":{}}}],["3.1.20",{"_index":4093,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":4136,"title":{},"body":{"dependencies.html":{}}}],["3.2.2",{"_index":4016,"title":{},"body":{"dependencies.html":{}}}],["3.6.2",{"_index":4114,"title":{},"body":{"dependencies.html":{}}}],["3/14",{"_index":3952,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":3944,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":3019,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["3030/docs",{"_index":5127,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["3030/v3/docs",{"_index":5121,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["31",{"_index":3011,"title":{},"body":{"changelog.html":{}}}],["318",{"_index":2599,"title":{},"body":{"changelog.html":{}}}],["33",{"_index":3927,"title":{},"body":{"coverage.html":{}}}],["331",{"_index":2559,"title":{},"body":{"changelog.html":{}}}],["3395",{"_index":3811,"title":{},"body":{"changelog.html":{}}}],["343",{"_index":2551,"title":{},"body":{"changelog.html":{}}}],["354",{"_index":2560,"title":{},"body":{"changelog.html":{}}}],["3607",{"_index":3792,"title":{},"body":{"changelog.html":{}}}],["365",{"_index":2572,"title":{},"body":{"changelog.html":{}}}],["3686",{"_index":3804,"title":{},"body":{"changelog.html":{}}}],["37",{"_index":2661,"title":{},"body":{"changelog.html":{}}}],["370",{"_index":2569,"title":{},"body":{"changelog.html":{}}}],["3719",{"_index":3785,"title":{},"body":{"changelog.html":{}}}],["3767",{"_index":3901,"title":{},"body":{"changelog.html":{}}}],["38",{"_index":2673,"title":{},"body":{"changelog.html":{}}}],["3821",{"_index":3912,"title":{},"body":{"changelog.html":{}}}],["3892",{"_index":3809,"title":{},"body":{"changelog.html":{}}}],["3948",{"_index":3798,"title":{},"body":{"changelog.html":{}}}],["3958",{"_index":3821,"title":{},"body":{"changelog.html":{}}}],["3994",{"_index":3880,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":3671,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["4.0.0",{"_index":4031,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":4127,"title":{},"body":{"dependencies.html":{}}}],["4.14.0",{"_index":4051,"title":{},"body":{"dependencies.html":{}}}],["4.17.19",{"_index":4068,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":4001,"title":{},"body":{"dependencies.html":{}}}],["4.2.5",{"_index":4035,"title":{},"body":{"dependencies.html":{}}}],["4.5.11",{"_index":3993,"title":{},"body":{"dependencies.html":{}}}],["4.5.5",{"_index":4000,"title":{},"body":{"dependencies.html":{}}}],["4.7.1",{"_index":4052,"title":{},"body":{"dependencies.html":{}}}],["4.8.0",{"_index":4009,"title":{},"body":{"dependencies.html":{}}}],["4.x",{"_index":5060,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["4/18",{"_index":3969,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":3980,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":3942,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":4865,"title":{},"body":{"overview.html":{}}}],["4008",{"_index":3801,"title":{},"body":{"changelog.html":{}}}],["4018",{"_index":3799,"title":{},"body":{"changelog.html":{}}}],["404",{"_index":4911,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["4042",{"_index":3833,"title":{},"body":{"changelog.html":{}}}],["4075",{"_index":3771,"title":{},"body":{"changelog.html":{}}}],["409/bad",{"_index":5620,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["409/conflict",{"_index":1120,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["4094",{"_index":3805,"title":{},"body":{"changelog.html":{}}}],["41",{"_index":2656,"title":{},"body":{"changelog.html":{}}}],["4105",{"_index":3815,"title":{},"body":{"changelog.html":{}}}],["4121",{"_index":3850,"title":{},"body":{"changelog.html":{}}}],["4142",{"_index":3720,"title":{},"body":{"changelog.html":{}}}],["4192",{"_index":3727,"title":{},"body":{"changelog.html":{}}}],["42",{"_index":2648,"title":{},"body":{"changelog.html":{}}}],["4215",{"_index":3846,"title":{},"body":{"changelog.html":{}}}],["4289",{"_index":3698,"title":{},"body":{"changelog.html":{}}}],["4385",{"_index":3437,"title":{},"body":{"changelog.html":{}}}],["44",{"_index":2644,"title":{},"body":{"changelog.html":{}}}],["4506",{"_index":3763,"title":{},"body":{"changelog.html":{}}}],["4520",{"_index":3683,"title":{},"body":{"changelog.html":{}}}],["4576",{"_index":3126,"title":{},"body":{"changelog.html":{}}}],["4577",{"_index":3751,"title":{},"body":{"changelog.html":{}}}],["4666",{"_index":3287,"title":{},"body":{"changelog.html":{}}}],["4667",{"_index":3320,"title":{},"body":{"changelog.html":{}}}],["4720",{"_index":3759,"title":{},"body":{"changelog.html":{}}}],["4749",{"_index":3767,"title":{},"body":{"changelog.html":{}}}],["4876",{"_index":3755,"title":{},"body":{"changelog.html":{}}}],["4957",{"_index":3730,"title":{},"body":{"changelog.html":{}}}],["4965",{"_index":3735,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":849,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["5.0.0",{"_index":4020,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":4021,"title":{},"body":{"dependencies.html":{}}}],["5.0.3",{"_index":4054,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":4097,"title":{},"body":{"dependencies.html":{}}}],["5.13.9",{"_index":4075,"title":{},"body":{"dependencies.html":{}}}],["5/19",{"_index":3970,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":3950,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":3925,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":5611,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["5007",{"_index":3741,"title":{},"body":{"changelog.html":{}}}],["5054",{"_index":3746,"title":{},"body":{"changelog.html":{}}}],["5202",{"_index":2955,"title":{},"body":{"changelog.html":{}}}],["5230",{"_index":3530,"title":{},"body":{"changelog.html":{}}}],["5250",{"_index":3688,"title":{},"body":{"changelog.html":{}}}],["5280",{"_index":3644,"title":{},"body":{"changelog.html":{}}}],["5287",{"_index":3178,"title":{},"body":{"changelog.html":{}}}],["54",{"_index":2662,"title":{},"body":{"changelog.html":{}}}],["5416",{"_index":3693,"title":{},"body":{"changelog.html":{}}}],["5420",{"_index":3632,"title":{},"body":{"changelog.html":{}}}],["5476",{"_index":3297,"title":{},"body":{"changelog.html":{}}}],["5542",{"_index":3695,"title":{},"body":{"changelog.html":{}}}],["5612",{"_index":3587,"title":{},"body":{"changelog.html":{}}}],["5672",{"_index":5071,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["5672:5672",{"_index":5066,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["5686",{"_index":3691,"title":{},"body":{"changelog.html":{}}}],["57",{"_index":3941,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["5733",{"_index":3714,"title":{},"body":{"changelog.html":{}}}],["5754",{"_index":3680,"title":{},"body":{"changelog.html":{}}}],["5773",{"_index":3706,"title":{},"body":{"changelog.html":{}}}],["5808",{"_index":3651,"title":{},"body":{"changelog.html":{}}}],["5835",{"_index":3668,"title":{},"body":{"changelog.html":{}}}],["5883",{"_index":3676,"title":{},"body":{"changelog.html":{}}}],["5900",{"_index":3365,"title":{},"body":{"changelog.html":{}}}],["5917",{"_index":3673,"title":{},"body":{"changelog.html":{}}}],["5987",{"_index":3610,"title":{},"body":{"changelog.html":{}}}],["5f2987e020834114b8efd6f8",{"_index":5771,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["6",{"_index":2941,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["6.0.0",{"_index":4040,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":4011,"title":{},"body":{"dependencies.html":{}}}],["6.3.0",{"_index":2986,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["6.6.6",{"_index":4115,"title":{},"body":{"dependencies.html":{}}}],["6.9.4",{"_index":4103,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":3943,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["60000",{"_index":2030,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["6060",{"_index":3358,"title":{},"body":{"changelog.html":{}}}],["6080",{"_index":3355,"title":{},"body":{"changelog.html":{}}}],["6122",{"_index":3617,"title":{},"body":{"changelog.html":{}}}],["6151",{"_index":3401,"title":{},"body":{"changelog.html":{}}}],["6172",{"_index":3612,"title":{},"body":{"changelog.html":{}}}],["6294",{"_index":2822,"title":{},"body":{"changelog.html":{}}}],["6328",{"_index":3637,"title":{},"body":{"changelog.html":{}}}],["6382",{"_index":3625,"title":{},"body":{"changelog.html":{}}}],["64",{"_index":2651,"title":{},"body":{"changelog.html":{}}}],["6469",{"_index":3622,"title":{},"body":{"changelog.html":{}}}],["6506",{"_index":3521,"title":{},"body":{"changelog.html":{}}}],["6510",{"_index":3450,"title":{},"body":{"changelog.html":{}}}],["6511",{"_index":3608,"title":{},"body":{"changelog.html":{}}}],["6533",{"_index":3602,"title":{},"body":{"changelog.html":{}}}],["6554",{"_index":3604,"title":{},"body":{"changelog.html":{}}}],["6567",{"_index":3442,"title":{},"body":{"changelog.html":{}}}],["6586",{"_index":3396,"title":{},"body":{"changelog.html":{}}}],["6596",{"_index":3349,"title":{},"body":{"changelog.html":{}}}],["66",{"_index":3979,"title":{},"body":{"coverage.html":{}}}],["6637",{"_index":3593,"title":{},"body":{"changelog.html":{}}}],["6640",{"_index":3582,"title":{},"body":{"changelog.html":{}}}],["6676",{"_index":3536,"title":{},"body":{"changelog.html":{}}}],["6679",{"_index":3040,"title":{},"body":{"changelog.html":{}}}],["6690",{"_index":3298,"title":{},"body":{"changelog.html":{}}}],["6692",{"_index":3341,"title":{},"body":{"changelog.html":{}}}],["6696",{"_index":3572,"title":{},"body":{"changelog.html":{}}}],["6697",{"_index":3599,"title":{},"body":{"changelog.html":{}}}],["6727",{"_index":3426,"title":{},"body":{"changelog.html":{}}}],["6733",{"_index":3590,"title":{},"body":{"changelog.html":{}}}],["6738",{"_index":3301,"title":{},"body":{"changelog.html":{}}}],["6743",{"_index":3519,"title":{},"body":{"changelog.html":{}}}],["6766",{"_index":3444,"title":{},"body":{"changelog.html":{}}}],["6769",{"_index":3448,"title":{},"body":{"changelog.html":{}}}],["6774",{"_index":3524,"title":{},"body":{"changelog.html":{}}}],["6784",{"_index":3516,"title":{},"body":{"changelog.html":{}}}],["68",{"_index":2582,"title":{},"body":{"changelog.html":{}}}],["6809",{"_index":3527,"title":{},"body":{"changelog.html":{}}}],["6830",{"_index":3445,"title":{},"body":{"changelog.html":{}}}],["6942",{"_index":3565,"title":{},"body":{"changelog.html":{}}}],["6950",{"_index":2939,"title":{},"body":{"changelog.html":{}}}],["6960",{"_index":3549,"title":{},"body":{"changelog.html":{}}}],["6973",{"_index":3561,"title":{},"body":{"changelog.html":{}}}],["6986",{"_index":3458,"title":{},"body":{"changelog.html":{}}}],["699615164",{"_index":4893,"title":{},"body":{"todo.html":{}}}],["6b",{"_index":4536,"title":{},"body":{"license.html":{}}}],["6d",{"_index":4555,"title":{},"body":{"license.html":{}}}],["7",{"_index":2322,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{},"overview.html":{}}}],["7.0.0",{"_index":4042,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":4007,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":4004,"title":{},"body":{"dependencies.html":{}}}],["7.24.0",{"_index":4050,"title":{},"body":{"dependencies.html":{}}}],["7.6.13",{"_index":4003,"title":{},"body":{"dependencies.html":{}}}],["7.6.15",{"_index":4002,"title":{},"body":{"dependencies.html":{}}}],["7.6.17",{"_index":4006,"title":{},"body":{"dependencies.html":{}}}],["7021",{"_index":2953,"title":{},"body":{"changelog.html":{}}}],["7028",{"_index":3338,"title":{},"body":{"changelog.html":{}}}],["7049",{"_index":3440,"title":{},"body":{"changelog.html":{}}}],["7083",{"_index":3305,"title":{},"body":{"changelog.html":{}}}],["7085",{"_index":3507,"title":{},"body":{"changelog.html":{}}}],["7091",{"_index":3474,"title":{},"body":{"changelog.html":{}}}],["7115",{"_index":3545,"title":{},"body":{"changelog.html":{}}}],["7142",{"_index":3282,"title":{},"body":{"changelog.html":{}}}],["7157",{"_index":3441,"title":{},"body":{"changelog.html":{}}}],["7165",{"_index":3511,"title":{},"body":{"changelog.html":{}}}],["7180",{"_index":3539,"title":{},"body":{"changelog.html":{}}}],["7205",{"_index":3312,"title":{},"body":{"changelog.html":{}}}],["7293",{"_index":3303,"title":{},"body":{"changelog.html":{}}}],["7331",{"_index":3350,"title":{},"body":{"changelog.html":{}}}],["7333",{"_index":3491,"title":{},"body":{"changelog.html":{}}}],["7353",{"_index":3389,"title":{},"body":{"changelog.html":{}}}],["7357",{"_index":3304,"title":{},"body":{"changelog.html":{}}}],["7370",{"_index":3316,"title":{},"body":{"changelog.html":{}}}],["7395",{"_index":3352,"title":{},"body":{"changelog.html":{}}}],["7404",{"_index":3359,"title":{},"body":{"changelog.html":{}}}],["7411",{"_index":3310,"title":{},"body":{"changelog.html":{}}}],["7413",{"_index":3420,"title":{},"body":{"changelog.html":{}}}],["7452",{"_index":3500,"title":{},"body":{"changelog.html":{}}}],["7454",{"_index":3397,"title":{},"body":{"changelog.html":{}}}],["7474",{"_index":3375,"title":{},"body":{"changelog.html":{}}}],["7476",{"_index":3339,"title":{},"body":{"changelog.html":{}}}],["7483",{"_index":3269,"title":{},"body":{"changelog.html":{}}}],["7491",{"_index":3493,"title":{},"body":{"changelog.html":{}}}],["7499",{"_index":3329,"title":{},"body":{"changelog.html":{}}}],["7517",{"_index":3393,"title":{},"body":{"changelog.html":{}}}],["7530",{"_index":3390,"title":{},"body":{"changelog.html":{}}}],["7543",{"_index":3335,"title":{},"body":{"changelog.html":{}}}],["7555",{"_index":3286,"title":{},"body":{"changelog.html":{}}}],["7571",{"_index":3333,"title":{},"body":{"changelog.html":{}}}],["7572",{"_index":3410,"title":{},"body":{"changelog.html":{}}}],["7573",{"_index":3414,"title":{},"body":{"changelog.html":{}}}],["7614",{"_index":3314,"title":{},"body":{"changelog.html":{}}}],["7615",{"_index":3295,"title":{},"body":{"changelog.html":{}}}],["7638",{"_index":3489,"title":{},"body":{"changelog.html":{}}}],["7683",{"_index":3478,"title":{},"body":{"changelog.html":{}}}],["7695",{"_index":3480,"title":{},"body":{"changelog.html":{}}}],["7714",{"_index":3435,"title":{},"body":{"changelog.html":{}}}],["7734",{"_index":3264,"title":{},"body":{"changelog.html":{}}}],["7763",{"_index":3211,"title":{},"body":{"changelog.html":{}}}],["7773",{"_index":3432,"title":{},"body":{"changelog.html":{}}}],["7825",{"_index":3116,"title":{},"body":{"changelog.html":{}}}],["7827",{"_index":3203,"title":{},"body":{"changelog.html":{}}}],["7835",{"_index":3197,"title":{},"body":{"changelog.html":{}}}],["7836",{"_index":3279,"title":{},"body":{"changelog.html":{}}}],["7838",{"_index":3280,"title":{},"body":{"changelog.html":{}}}],["7841",{"_index":3278,"title":{},"body":{"changelog.html":{}}}],["7868",{"_index":2910,"title":{},"body":{"changelog.html":{}}}],["7872",{"_index":3368,"title":{},"body":{"changelog.html":{}}}],["7884",{"_index":3417,"title":{},"body":{"changelog.html":{}}}],["7915",{"_index":3330,"title":{},"body":{"changelog.html":{}}}],["7937",{"_index":2908,"title":{},"body":{"changelog.html":{}}}],["7944",{"_index":2947,"title":{},"body":{"changelog.html":{}}}],["7998",{"_index":3244,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":3616,"title":{},"body":{"changelog.html":{}}}],["8.3.0",{"_index":4134,"title":{},"body":{"dependencies.html":{}}}],["8.3.1",{"_index":2987,"title":{},"body":{"changelog.html":{}}}],["8.5.0",{"_index":4013,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":4063,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":5009,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["8020",{"_index":3213,"title":{},"body":{"changelog.html":{}}}],["8029",{"_index":3109,"title":{},"body":{"changelog.html":{}}}],["8030",{"_index":3204,"title":{},"body":{"changelog.html":{}}}],["8060",{"_index":3206,"title":{},"body":{"changelog.html":{}}}],["8077",{"_index":3274,"title":{},"body":{"changelog.html":{}}}],["8080",{"_index":5097,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["81",{"_index":2667,"title":{},"body":{"changelog.html":{}}}],["8101",{"_index":3248,"title":{},"body":{"changelog.html":{}}}],["8149",{"_index":3239,"title":{},"body":{"changelog.html":{}}}],["8179",{"_index":3209,"title":{},"body":{"changelog.html":{}}}],["8189",{"_index":3192,"title":{},"body":{"changelog.html":{}}}],["8198",{"_index":3222,"title":{},"body":{"changelog.html":{}}}],["8206",{"_index":3114,"title":{},"body":{"changelog.html":{}}}],["8209",{"_index":3232,"title":{},"body":{"changelog.html":{}}}],["8211",{"_index":3055,"title":{},"body":{"changelog.html":{}}}],["8213",{"_index":3125,"title":{},"body":{"changelog.html":{}}}],["8229",{"_index":3200,"title":{},"body":{"changelog.html":{}}}],["8230",{"_index":3215,"title":{},"body":{"changelog.html":{}}}],["8233",{"_index":3216,"title":{},"body":{"changelog.html":{}}}],["8235",{"_index":3236,"title":{},"body":{"changelog.html":{}}}],["8250",{"_index":2901,"title":{},"body":{"changelog.html":{}}}],["8260",{"_index":3214,"title":{},"body":{"changelog.html":{}}}],["83",{"_index":3949,"title":{},"body":{"coverage.html":{}}}],["8300",{"_index":3130,"title":{},"body":{"changelog.html":{}}}],["8303",{"_index":3169,"title":{},"body":{"changelog.html":{}}}],["8313",{"_index":3184,"title":{},"body":{"changelog.html":{}}}],["8315",{"_index":3190,"title":{},"body":{"changelog.html":{}}}],["8322",{"_index":3105,"title":{},"body":{"changelog.html":{}}}],["8329",{"_index":3217,"title":{},"body":{"changelog.html":{}}}],["8341",{"_index":2904,"title":{},"body":{"changelog.html":{}}}],["8358",{"_index":3171,"title":{},"body":{"changelog.html":{}}}],["8379",{"_index":3187,"title":{},"body":{"changelog.html":{}}}],["8380",{"_index":3120,"title":{},"body":{"changelog.html":{}}}],["8390",{"_index":3103,"title":{},"body":{"changelog.html":{}}}],["8408",{"_index":2906,"title":{},"body":{"changelog.html":{}}}],["8410",{"_index":3088,"title":{},"body":{"changelog.html":{}}}],["8412",{"_index":3174,"title":{},"body":{"changelog.html":{}}}],["8420",{"_index":3139,"title":{},"body":{"changelog.html":{}}}],["8440",{"_index":2932,"title":{},"body":{"changelog.html":{}}}],["8444",{"_index":3163,"title":{},"body":{"changelog.html":{}}}],["8448",{"_index":2813,"title":{},"body":{"changelog.html":{}}}],["8462",{"_index":3142,"title":{},"body":{"changelog.html":{}}}],["8477",{"_index":3067,"title":{},"body":{"changelog.html":{}}}],["8480",{"_index":3156,"title":{},"body":{"changelog.html":{}}}],["8482",{"_index":3107,"title":{},"body":{"changelog.html":{}}}],["8489",{"_index":3159,"title":{},"body":{"changelog.html":{}}}],["8499",{"_index":3144,"title":{},"body":{"changelog.html":{}}}],["8500",{"_index":2952,"title":{},"body":{"changelog.html":{}}}],["8503",{"_index":3151,"title":{},"body":{"changelog.html":{}}}],["8506",{"_index":3147,"title":{},"body":{"changelog.html":{}}}],["8512",{"_index":3132,"title":{},"body":{"changelog.html":{}}}],["8514",{"_index":3100,"title":{},"body":{"changelog.html":{}}}],["8534",{"_index":3045,"title":{},"body":{"changelog.html":{}}}],["8541",{"_index":3117,"title":{},"body":{"changelog.html":{}}}],["8571",{"_index":3135,"title":{},"body":{"changelog.html":{}}}],["8599",{"_index":2943,"title":{},"body":{"changelog.html":{}}}],["8634",{"_index":3085,"title":{},"body":{"changelog.html":{}}}],["8655",{"_index":3078,"title":{},"body":{"changelog.html":{}}}],["8657",{"_index":3082,"title":{},"body":{"changelog.html":{}}}],["8682",{"_index":3047,"title":{},"body":{"changelog.html":{}}}],["8691",{"_index":3012,"title":{},"body":{"changelog.html":{}}}],["8714",{"_index":3062,"title":{},"body":{"changelog.html":{}}}],["8728",{"_index":2966,"title":{},"body":{"changelog.html":{}}}],["8732",{"_index":2975,"title":{},"body":{"changelog.html":{}}}],["8748",{"_index":2983,"title":{},"body":{"changelog.html":{}}}],["8768",{"_index":3017,"title":{},"body":{"changelog.html":{}}}],["8770",{"_index":3057,"title":{},"body":{"changelog.html":{}}}],["8779",{"_index":2962,"title":{},"body":{"changelog.html":{}}}],["8782",{"_index":3052,"title":{},"body":{"changelog.html":{}}}],["8829",{"_index":3025,"title":{},"body":{"changelog.html":{}}}],["8836",{"_index":3020,"title":{},"body":{"changelog.html":{}}}],["8873",{"_index":2913,"title":{},"body":{"changelog.html":{}}}],["8880",{"_index":2980,"title":{},"body":{"changelog.html":{}}}],["8887",{"_index":2811,"title":{},"body":{"changelog.html":{}}}],["8898",{"_index":2884,"title":{},"body":{"changelog.html":{}}}],["8908",{"_index":3007,"title":{},"body":{"changelog.html":{}}}],["8909",{"_index":2990,"title":{},"body":{"changelog.html":{}}}],["8910",{"_index":2972,"title":{},"body":{"changelog.html":{}}}],["8917",{"_index":2997,"title":{},"body":{"changelog.html":{}}}],["8929",{"_index":3000,"title":{},"body":{"changelog.html":{}}}],["8933",{"_index":2964,"title":{},"body":{"changelog.html":{}}}],["8934",{"_index":2992,"title":{},"body":{"changelog.html":{}}}],["8959",{"_index":2796,"title":{},"body":{"changelog.html":{}}}],["8982",{"_index":2916,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":2595,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["9003",{"_index":2787,"title":{},"body":{"changelog.html":{}}}],["9004",{"_index":2877,"title":{},"body":{"changelog.html":{}}}],["9018",{"_index":2786,"title":{},"body":{"changelog.html":{}}}],["9029",{"_index":2873,"title":{},"body":{"changelog.html":{}}}],["9053",{"_index":2766,"title":{},"body":{"changelog.html":{}}}],["9055",{"_index":2934,"title":{},"body":{"changelog.html":{}}}],["9083",{"_index":2640,"title":{},"body":{"changelog.html":{}}}],["9085",{"_index":2929,"title":{},"body":{"changelog.html":{}}}],["9092",{"_index":2776,"title":{},"body":{"changelog.html":{}}}],["9093",{"_index":2791,"title":{},"body":{"changelog.html":{}}}],["9103",{"_index":2891,"title":{},"body":{"changelog.html":{}}}],["9130",{"_index":2707,"title":{},"body":{"changelog.html":{}}}],["9134",{"_index":2881,"title":{},"body":{"changelog.html":{}}}],["9139",{"_index":2866,"title":{},"body":{"changelog.html":{}}}],["9148",{"_index":2853,"title":{},"body":{"changelog.html":{}}}],["9150",{"_index":2748,"title":{},"body":{"changelog.html":{}}}],["9156",{"_index":2862,"title":{},"body":{"changelog.html":{}}}],["9157",{"_index":2799,"title":{},"body":{"changelog.html":{}}}],["9159",{"_index":2848,"title":{},"body":{"changelog.html":{}}}],["9170",{"_index":2855,"title":{},"body":{"changelog.html":{}}}],["9177",{"_index":2755,"title":{},"body":{"changelog.html":{}}}],["9190",{"_index":2809,"title":{},"body":{"changelog.html":{}}}],["9192",{"_index":2705,"title":{},"body":{"changelog.html":{}}}],["9197",{"_index":2831,"title":{},"body":{"changelog.html":{}}}],["9202",{"_index":2838,"title":{},"body":{"changelog.html":{}}}],["9211",{"_index":2750,"title":{},"body":{"changelog.html":{}}}],["9212",{"_index":2764,"title":{},"body":{"changelog.html":{}}}],["9213",{"_index":2744,"title":{},"body":{"changelog.html":{}}}],["9219",{"_index":2758,"title":{},"body":{"changelog.html":{}}}],["9229",{"_index":5090,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["9231",{"_index":2716,"title":{},"body":{"changelog.html":{}}}],["9233",{"_index":2737,"title":{},"body":{"changelog.html":{}}}],["9269",{"_index":2719,"title":{},"body":{"changelog.html":{}}}],["9431",{"_index":2842,"title":{},"body":{"changelog.html":{}}}],["99",{"_index":1954,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["999",{"_index":4201,"title":{},"body":{"index.html":{}}}],["9]{24",{"_index":624,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["_",{"_index":1072,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_.snakecase(exceptionname).touppercase",{"_index":1095,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.snakecase(type).touppercase",{"_index":1109,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.spec.ts",{"_index":5417,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_.startcase(exceptionname",{"_index":1096,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.startcase(title",{"_index":1111,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.test.[ts|js",{"_index":5103,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["_id",{"_index":208,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/FeathersAuthProvider.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["_queries",{"_index":589,"title":{},"body":{"classes/CourseScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["_timeout",{"_index":2430,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["a.m",{"_index":4221,"title":{},"body":{"index.html":{}}}],["aaa",{"_index":5661,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["ability",{"_index":4595,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["above",{"_index":4219,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["absence",{"_index":4481,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":4835,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":300,"title":{},"body":{"classes/BusinessError.html":{},"classes/CourseNews.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["abstraction",{"_index":5342,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["acacac",{"_index":435,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"miscellaneous/variables.html":{}}}],["accept",{"_index":4672,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":4671,"title":{},"body":{"license.html":{}}}],["accepted",{"_index":4881,"title":{},"body":{"todo.html":{}}}],["accepts",{"_index":3820,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["access",{"_index":876,"title":{},"body":{"controllers/DelayController.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/ServerController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accessable",{"_index":5403,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessed",{"_index":506,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"index.html":{}}}],["accessible",{"_index":3405,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessing",{"_index":3418,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessors",{"_index":2065,"title":{},"body":{"classes/Scope.html":{},"injectables/TimeoutInterceptor.html":{}}}],["accompanied",{"_index":4520,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":4839,"title":{},"body":{"license.html":{}}}],["accomplish",{"_index":4301,"title":{},"body":{"license.html":{}}}],["accord",{"_index":4480,"title":{},"body":{"license.html":{}}}],["according",{"_index":2898,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["account",{"_index":1208,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"injectables/JwtValidationAdapter.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accountid",{"_index":1206,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accounts",{"_index":3459,"title":{},"body":{"changelog.html":{}}}],["accumulator",{"_index":2090,"title":{},"body":{"classes/Scope.html":{}}}],["accumulator.push(queryelement",{"_index":2095,"title":{},"body":{"classes/Scope.html":{}}}],["achieve",{"_index":4842,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["acknowledges",{"_index":4422,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":4719,"title":{},"body":{"license.html":{}}}],["act",{"_index":5660,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["action",{"_index":1033,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":2860,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["activate",{"_index":3897,"title":{},"body":{"changelog.html":{}}}],["activation",{"_index":3674,"title":{},"body":{"changelog.html":{}}}],["active",{"_index":1437,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/TaskRepo.html":{}}}],["activities",{"_index":4344,"title":{},"body":{"license.html":{}}}],["activity",{"_index":4758,"title":{},"body":{"license.html":{}}}],["actors",{"_index":5522,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actual",{"_index":4740,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actually",{"_index":4575,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adapt",{"_index":4323,"title":{},"body":{"license.html":{}}}],["adapter",{"_index":5207,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["add",{"_index":2132,"title":{},"body":{"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"injectables/SubmissionRepo.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["addbearerauth",{"_index":5029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["added",{"_index":1448,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"injectables/Logger.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["adding",{"_index":431,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["additional",{"_index":936,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/ErrorResponse.html":{},"classes/GlobalValidationPipe.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionally",{"_index":4188,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionaly",{"_index":5083,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["addquery",{"_index":591,"title":{},"body":{"classes/CourseScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["addquery(query",{"_index":596,"title":{},"body":{"classes/CourseScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["address",{"_index":4792,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["address/username",{"_index":3686,"title":{},"body":{"changelog.html":{}}}],["addressed",{"_index":4319,"title":{},"body":{"license.html":{}}}],["addresses",{"_index":3427,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adds",{"_index":2657,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["addtokentowhitelist",{"_index":1458,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["addtokentowhitelist(redisidentifier",{"_index":1464,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["addtowhitelist",{"_index":1441,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["addtowhitelist(accountid",{"_index":1443,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["adduser",{"_index":2967,"title":{},"body":{"changelog.html":{}}}],["adhere",{"_index":5547,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["adheres",{"_index":2541,"title":{},"body":{"changelog.html":{}}}],["adjusted",{"_index":3093,"title":{},"body":{"changelog.html":{}}}],["admin",{"_index":2718,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["administrate",{"_index":3893,"title":{},"body":{"changelog.html":{}}}],["administration",{"_index":2643,"title":{},"body":{"changelog.html":{}}}],["admins",{"_index":2757,"title":{},"body":{"changelog.html":{}}}],["admintables",{"_index":3588,"title":{},"body":{"changelog.html":{}}}],["adminusers",{"_index":2974,"title":{},"body":{"changelog.html":{}}}],["adopted",{"_index":4457,"title":{},"body":{"license.html":{}}}],["adversely",{"_index":4601,"title":{},"body":{"license.html":{}}}],["advised",{"_index":4827,"title":{},"body":{"license.html":{}}}],["affects",{"_index":4602,"title":{},"body":{"license.html":{}}}],["affero",{"_index":4228,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":4700,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":4419,"title":{},"body":{"license.html":{}}}],["afterall",{"_index":5728,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterall(async",{"_index":5730,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterduedateornone",{"_index":2335,"title":{},"body":{"classes/TaskScope.html":{}}}],["afterduedateornone(duedate",{"_index":2339,"title":{},"body":{"classes/TaskScope.html":{}}}],["aftereach",{"_index":5655,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["aftereach(async",{"_index":5778,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterwards",{"_index":5653,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["again",{"_index":3665,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["against",{"_index":4471,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["age",{"_index":5321,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aggregate",{"_index":4507,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["aggregated",{"_index":3658,"title":{},"body":{"changelog.html":{}}}],["aggregates",{"_index":5224,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aggregations",{"_index":3699,"title":{},"body":{"changelog.html":{}}}],["agile",{"_index":5204,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["agnostic",{"_index":5406,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["agpl",{"_index":4859,"title":{},"body":{"license.html":{}}}],["agree",{"_index":4775,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":4814,"title":{},"body":{"license.html":{}}}],["agreeing",{"_index":5519,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["agreement",{"_index":4728,"title":{},"body":{"license.html":{}}}],["aims",{"_index":5148,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ajv",{"_index":4012,"title":{},"body":{"dependencies.html":{}}}],["alert",{"_index":3003,"title":{},"body":{"changelog.html":{}}}],["alerts",{"_index":3387,"title":{},"body":{"changelog.html":{}}}],["algorithm",{"_index":1396,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["aliases",{"_index":4930,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aligned",{"_index":5200,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["alive",{"_index":3557,"title":{},"body":{"changelog.html":{}}}],["all_entities",{"_index":1560,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["alleging",{"_index":4707,"title":{},"body":{"license.html":{}}}],["allow",{"_index":2727,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["allowed",{"_index":2544,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["allows",{"_index":2458,"title":{},"body":{"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["alone",{"_index":5651,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["along",{"_index":4483,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["already",{"_index":322,"title":{},"body":{"classes/BusinessError.html":{},"injectables/NewsRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["alternate",{"_index":4284,"title":{},"body":{"license.html":{}}}],["alternative",{"_index":4532,"title":{},"body":{"license.html":{}}}],["always",{"_index":5225,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["amount",{"_index":2979,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["amqp",{"_index":4014,"title":{},"body":{"dependencies.html":{}}}],["amqpconnection",{"_index":1536,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["amqplib",{"_index":4017,"title":{},"body":{"dependencies.html":{}}}],["analog",{"_index":3888,"title":{},"body":{"changelog.html":{}}}],["analysis",{"_index":5119,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["analytics",{"_index":4130,"title":{},"body":{"dependencies.html":{}}}],["ancillary",{"_index":4673,"title":{},"body":{"license.html":{}}}],["and/opr",{"_index":5675,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["and/or",{"_index":4277,"title":{},"body":{"license.html":{}}}],["annotations",{"_index":5426,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anonymous",{"_index":5409,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["another",{"_index":5196,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anothernewsid",{"_index":5753,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["ansible",{"_index":2562,"title":{},"body":{"changelog.html":{}}}],["anti",{"_index":4445,"title":{},"body":{"license.html":{}}}],["antivirus",{"_index":3433,"title":{},"body":{"changelog.html":{}}}],["anymore",{"_index":2720,"title":{},"body":{"changelog.html":{}}}],["anyone",{"_index":4493,"title":{},"body":{"license.html":{}}}],["anything",{"_index":4331,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["anywhere",{"_index":5475,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["api",{"_index":52,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/DelayController.html":{},"classes/GlobalErrorFilter.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/TaskResponse.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["api/v1",{"_index":4168,"title":{},"body":{"index.html":{}}}],["api/v3",{"_index":4169,"title":{},"body":{"index.html":{}}}],["api/v3/news",{"_index":4173,"title":{},"body":{"index.html":{}}}],["api_validation_error",{"_index":51,"title":{},"body":{"classes/ApiValidationError.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["apibearerauth",{"_index":4978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":633,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/GlobalValidationPipe.html":{},"classes/NewsResponse.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/TaskResponse.html":{},"classes/UserInfoResponse.html":{},"miscellaneous/variables.html":{}}}],["apiproperty({description",{"_index":733,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{}}}],["apiproperty({enum",{"_index":1836,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apiproperty({pattern",{"_index":1834,"title":{},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["apipropertyoptional",{"_index":634,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoResponse.html":{}}}],["apipropertyoptional({description",{"_index":1829,"title":{},"body":{"classes/NewsResponse.html":{},"classes/UserInfoResponse.html":{}}}],["apipropertyoptional({type",{"_index":1826,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apis",{"_index":5172,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["apitags",{"_index":1638,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}}}],["apitags('news",{"_index":1647,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["apitags('task",{"_index":2241,"title":{},"body":{"controllers/TaskController.html":{}}}],["apitags('user",{"_index":2480,"title":{},"body":{"controllers/UserController.html":{}}}],["apivalidationerror",{"_index":1,"title":{"classes/ApiValidationError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apivalidationerror(errors",{"_index":1181,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["apivalidationerror.validationerrors.map((validationerror",{"_index":79,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["apivalidationerrorresponse",{"_index":61,"title":{"classes/ApiValidationErrorResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{}}}],["apivalidationerrorresponse(error",{"_index":1100,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["app",{"_index":1118,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["app.close",{"_index":5780,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["app.init",{"_index":5775,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["app_filter",{"_index":371,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["app_guard",{"_index":370,"title":{},"body":{"modules/CoreModule.html":{}}}],["app_interceptor",{"_index":368,"title":{},"body":{"modules/CoreModule.html":{},"controllers/DelayController.html":{},"modules/InterceptorModule.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["app_pipe",{"_index":369,"title":{},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{}}}],["appear",{"_index":3136,"title":{},"body":{"changelog.html":{}}}],["appearing",{"_index":3844,"title":{},"body":{"changelog.html":{}}}],["append",{"_index":4928,"title":{},"body":{"todo.html":{}}}],["appendedattachment",{"_index":88,"title":{"interfaces/AppendedAttachment.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["applicable",{"_index":4336,"title":{},"body":{"license.html":{}}}],["applicaiton",{"_index":5092,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["application",{"_index":307,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"classes/BusinessError.html":{},"modules/CoreModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["applications",{"_index":4156,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["applied",{"_index":5489,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["applies",{"_index":4797,"title":{},"body":{"license.html":{}}}],["apply",{"_index":1359,"title":{},"body":{"modules/InterceptorModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["applydecorators(...decorators",{"_index":4979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applying",{"_index":5784,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["approach",{"_index":5186,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriate",{"_index":4184,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriately",{"_index":4476,"title":{},"body":{"license.html":{}}}],["approximates",{"_index":4834,"title":{},"body":{"license.html":{}}}],["apps",{"_index":2722,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["apps/**/*.(t|j)s",{"_index":5004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../all",{"_index":4959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../auth.decorator.ts",{"_index":4943,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../console.ts",{"_index":4960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../constants.ts",{"_index":4968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../counted.ts",{"_index":4933,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../course.entity.ts",{"_index":4966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../course.factory.ts",{"_index":4962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../create",{"_index":4965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../createcurrenttestuser.ts",{"_index":4963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../dashboard.entity.ts",{"_index":4934,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../database.config.ts",{"_index":4972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../empty",{"_index":4967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../entity",{"_index":4935,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../feathers",{"_index":4937,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../find",{"_index":4142,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../global",{"_index":4147,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../jwt",{"_index":4974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../mail.module.ts",{"_index":4940,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":4146,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../mongo",{"_index":4964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../news",{"_index":4971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../news.response.ts",{"_index":4942,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../news.types.ts",{"_index":4141,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../news.uc.ts",{"_index":4939,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../resolveduser.dto.ts",{"_index":4941,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../school.factory.ts",{"_index":4970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../scope.ts",{"_index":4148,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../server",{"_index":4969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../string",{"_index":4149,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../swagger.ts",{"_index":4961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../task.authorization.service.ts",{"_index":4144,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../task.uc.ts",{"_index":4143,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../types.ts",{"_index":4932,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../user.factory.ts",{"_index":4973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../user.ts",{"_index":4938,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../value",{"_index":4945,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server",{"_index":5078,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["apps/server/doc",{"_index":5131,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/path",{"_index":5011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src",{"_index":5136,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/src/$1",{"_index":5019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/config/database.config.ts",{"_index":1049,"title":{},"body":{"interfaces/GlobalConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/console/console",{"_index":332,"title":{},"body":{"injectables/ConsoleWriter.html":{},"coverage.html":{}}}],["apps/server/src/console/console.ts",{"_index":3923,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/console/server",{"_index":2127,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["apps/server/src/console/server.console.ts",{"_index":2107,"title":{},"body":{"classes/ServerConsole.html":{},"coverage.html":{}}}],["apps/server/src/console/server.console.ts:11",{"_index":2113,"title":{},"body":{"classes/ServerConsole.html":{}}}],["apps/server/src/console/server.console.ts:17",{"_index":2116,"title":{},"body":{"classes/ServerConsole.html":{}}}],["apps/server/src/console/server.console.ts:6",{"_index":2110,"title":{},"body":{"classes/ServerConsole.html":{}}}],["apps/server/src/core/core.module.ts",{"_index":356,"title":{},"body":{"modules/CoreModule.html":{}}}],["apps/server/src/core/error/dto/api",{"_index":62,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/dto/error.response.ts",{"_index":927,"title":{},"body":{"classes/ErrorResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/dto/error.response.ts:6",{"_index":929,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["apps/server/src/core/error/dto/validation",{"_index":2525,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/error.module.ts",{"_index":919,"title":{},"body":{"modules/ErrorModule.html":{}}}],["apps/server/src/core/error/filter/global",{"_index":1058,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/error/interface/error",{"_index":1219,"title":{},"body":{"interfaces/IErrorType.html":{},"coverage.html":{}}}],["apps/server/src/core/error/interface/feathers",{"_index":985,"title":{},"body":{"interfaces/FeathersError.html":{},"coverage.html":{}}}],["apps/server/src/core/error/server",{"_index":3933,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/interceptor/interceptor.module.ts",{"_index":1357,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["apps/server/src/core/logger/logger.interface.ts",{"_index":1234,"title":{},"body":{"interfaces/ILogger.html":{},"coverage.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:2",{"_index":1245,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:3",{"_index":1243,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:4",{"_index":1249,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:5",{"_index":1240,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:6",{"_index":1247,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.module.ts",{"_index":1504,"title":{},"body":{"modules/LoggerModule.html":{}}}],["apps/server/src/core/logger/logger.service.ts",{"_index":1479,"title":{},"body":{"injectables/Logger.html":{},"coverage.html":{}}}],["apps/server/src/core/validation/pipe/global",{"_index":1151,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"coverage.html":{}}}],["apps/server/src/core/validation/validation.module.ts",{"_index":2530,"title":{},"body":{"modules/ValidationModule.html":{}}}],["apps/server/src/main.ts",{"_index":3938,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/server/src/modules/authentication/auth.module.ts",{"_index":124,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/server/src/modules/authentication/constants.ts",{"_index":1371,"title":{},"body":{"interfaces/JwtConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/decorator/auth.decorator.ts",{"_index":3939,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/guard/jwt",{"_index":1367,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/interface/jwt",{"_index":1401,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt",{"_index":1439,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts",{"_index":1404,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:10",{"_index":1407,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:20",{"_index":1409,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authorization/authorization.module.ts",{"_index":146,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts",{"_index":154,"title":{},"body":{"injectables/AuthorizationService.html":{},"coverage.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:17",{"_index":177,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:33",{"_index":167,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:53",{"_index":180,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:7",{"_index":160,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/feathers",{"_index":940,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"coverage.html":{}}}],["apps/server/src/modules/database/mongo",{"_index":1547,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/database/types.ts",{"_index":4947,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/feathers/feathers",{"_index":1003,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/feathers/feathers.module.ts",{"_index":991,"title":{},"body":{"modules/FeathersModule.html":{}}}],["apps/server/src/modules/learnroom/controller/dashboard.controller.ts",{"_index":645,"title":{},"body":{"controllers/DashboardController.html":{},"coverage.html":{}}}],["apps/server/src/modules/learnroom/controller/dashboard.controller.ts:14",{"_index":649,"title":{},"body":{"controllers/DashboardController.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts",{"_index":730,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:13",{"_index":739,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:18",{"_index":738,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:23",{"_index":735,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:28",{"_index":741,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:33",{"_index":742,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:41",{"_index":852,"title":{},"body":{"classes/DashboardResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:46",{"_index":851,"title":{},"body":{"classes/DashboardResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:8",{"_index":736,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/learnroom.module.ts",{"_index":1468,"title":{},"body":{"modules/LearnroomModule.html":{}}}],["apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts",{"_index":744,"title":{},"body":{"classes/DashboardMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts:5",{"_index":747,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["apps/server/src/modules/learnroom/uc/dashboard.uc.ts",{"_index":853,"title":{},"body":{"injectables/DashboardUc.html":{},"coverage.html":{}}}],["apps/server/src/modules/learnroom/uc/dashboard.uc.ts:6",{"_index":855,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/learnroom/uc/dashboard.uc.ts:9",{"_index":856,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/mail/mail.interface.ts",{"_index":90,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["apps/server/src/modules/mail/mail.module.ts",{"_index":1507,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/mail/mail.module.ts:28",{"_index":1511,"title":{},"body":{"modules/MailModule.html":{}}}],["apps/server/src/modules/mail/mail.service.ts",{"_index":1533,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"coverage.html":{}}}],["apps/server/src/modules/mail/mail.service.ts:12",{"_index":1538,"title":{},"body":{"injectables/MailService.html":{}}}],["apps/server/src/modules/mail/mail.service.ts:18",{"_index":1540,"title":{},"body":{"injectables/MailService.html":{}}}],["apps/server/src/modules/news/controller/dto/create",{"_index":606,"title":{},"body":{"classes/CreateNewsParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news",{"_index":1669,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts",{"_index":1812,"title":{},"body":{"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:16",{"_index":1819,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:21",{"_index":1838,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:26",{"_index":1813,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:31",{"_index":1818,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:38",{"_index":1828,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:43",{"_index":1830,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:50",{"_index":1837,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:56",{"_index":1835,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:61",{"_index":1833,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:66",{"_index":1824,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:71",{"_index":1817,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:76",{"_index":1841,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:81",{"_index":1815,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:86",{"_index":1839,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:91",{"_index":1821,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/school",{"_index":2059,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/target",{"_index":2202,"title":{},"body":{"classes/TargetInfoResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/update",{"_index":2455,"title":{},"body":{"classes/UpdateNewsParams.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/user",{"_index":2493,"title":{},"body":{"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts",{"_index":1606,"title":{},"body":{"controllers/NewsController.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:21",{"_index":1613,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:35",{"_index":1623,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:56",{"_index":1627,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:70",{"_index":1635,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:84",{"_index":1618,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/team",{"_index":2412,"title":{},"body":{"controllers/TeamNewsController.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts",{"_index":1687,"title":{},"body":{"classes/NewsMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:31",{"_index":1694,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:45",{"_index":1692,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:58",{"_index":1698,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:9",{"_index":1696,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/school",{"_index":2051,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/target",{"_index":2197,"title":{},"body":{"classes/TargetInfoMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/user",{"_index":2492,"title":{},"body":{"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/news.module.ts",{"_index":1748,"title":{},"body":{"modules/NewsModule.html":{}}}],["apps/server/src/modules/news/repo/news",{"_index":1844,"title":{},"body":{"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts",{"_index":1764,"title":{},"body":{"injectables/NewsRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:11",{"_index":1787,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:19",{"_index":1770,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:32",{"_index":1777,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:39",{"_index":1772,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts",{"_index":1868,"title":{},"body":{"injectables/NewsUc.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:110",{"_index":1898,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:13",{"_index":1875,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:134",{"_index":1879,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:145",{"_index":1890,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:165",{"_index":1896,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:183",{"_index":1889,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:193",{"_index":1892,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:25",{"_index":1877,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:55",{"_index":1881,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:86",{"_index":1887,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts",{"_index":2323,"title":{},"body":{"classes/TaskResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:11",{"_index":2329,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:14",{"_index":2326,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:17",{"_index":2328,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:20",{"_index":2330,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:23",{"_index":2327,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:26",{"_index":2333,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:29",{"_index":2332,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:8",{"_index":2331,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts",{"_index":2233,"title":{},"body":{"controllers/TaskController.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts:19",{"_index":2235,"title":{},"body":{"controllers/TaskController.html":{}}}],["apps/server/src/modules/task/mapper/task.mapper.ts",{"_index":2249,"title":{},"body":{"classes/TaskMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/mapper/task.mapper.ts:5",{"_index":2251,"title":{},"body":{"classes/TaskMapper.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts",{"_index":2183,"title":{},"body":{"injectables/SubmissionRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts:10",{"_index":2186,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts:13",{"_index":2190,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts:21",{"_index":2192,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts:26",{"_index":2188,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/modules/task/repo/task",{"_index":2334,"title":{},"body":{"classes/TaskScope.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts",{"_index":2277,"title":{},"body":{"injectables/TaskRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:10",{"_index":2282,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:20",{"_index":2284,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:39",{"_index":2289,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:53",{"_index":2291,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:65",{"_index":2293,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:73",{"_index":2294,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/task.module.ts",{"_index":2273,"title":{},"body":{"modules/TaskModule.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts",{"_index":2210,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts:11",{"_index":2213,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts:17",{"_index":2216,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts",{"_index":2349,"title":{},"body":{"injectables/TaskUC.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:12",{"_index":2354,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:16",{"_index":2359,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:30",{"_index":2360,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:43",{"_index":2361,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:56",{"_index":2364,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:61",{"_index":2356,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:71",{"_index":2358,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts",{"_index":1986,"title":{},"body":{"classes/ResolvedUser.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:11",{"_index":1990,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:14",{"_index":1989,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:17",{"_index":1987,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:20",{"_index":1994,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:23",{"_index":1992,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:26",{"_index":1991,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:29",{"_index":1993,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:8",{"_index":1988,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/user.controller.ts",{"_index":2474,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/controller/user.controller.ts:17",{"_index":2477,"title":{},"body":{"controllers/UserController.html":{}}}],["apps/server/src/modules/user/mapper/resolveduser.mapper.ts",{"_index":1996,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/mapper/resolveduser.mapper.ts:5",{"_index":1998,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts",{"_index":2018,"title":{},"body":{"injectables/RoleRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:11",{"_index":2027,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:16",{"_index":2025,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:21",{"_index":2029,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:7",{"_index":2023,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/user.repo.ts",{"_index":2502,"title":{},"body":{"injectables/UserRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/repo/user.repo.ts:6",{"_index":2503,"title":{},"body":{"injectables/UserRepo.html":{}}}],["apps/server/src/modules/user/repo/user.repo.ts:9",{"_index":2504,"title":{},"body":{"injectables/UserRepo.html":{}}}],["apps/server/src/modules/user/uc/role.uc.ts",{"_index":2035,"title":{},"body":{"injectables/RoleUC.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/uc/role.uc.ts:6",{"_index":2038,"title":{},"body":{"injectables/RoleUC.html":{}}}],["apps/server/src/modules/user/uc/role.uc.ts:9",{"_index":2040,"title":{},"body":{"injectables/RoleUC.html":{}}}],["apps/server/src/modules/user/uc/user.uc.ts",{"_index":2506,"title":{},"body":{"injectables/UserUC.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/uc/user.uc.ts:12",{"_index":2511,"title":{},"body":{"injectables/UserUC.html":{}}}],["apps/server/src/modules/user/uc/user.uc.ts:9",{"_index":2509,"title":{},"body":{"injectables/UserUC.html":{}}}],["apps/server/src/modules/user/user.facade.ts",{"_index":2484,"title":{},"body":{"injectables/UserFacade.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/user.facade.ts:11",{"_index":2487,"title":{},"body":{"injectables/UserFacade.html":{}}}],["apps/server/src/modules/user/user.facade.ts:14",{"_index":2489,"title":{},"body":{"injectables/UserFacade.html":{}}}],["apps/server/src/modules/user/user.module.ts",{"_index":2500,"title":{},"body":{"modules/UserModule.html":{}}}],["apps/server/src/modules/user/utils/createcurrenttestuser.ts",{"_index":3958,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/repositories/learnroom/course.repo.ts",{"_index":565,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"coverage.html":{}}}],["apps/server/src/repositories/learnroom/course.repo.ts:22",{"_index":569,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/repositories/learnroom/course.repo.ts:25",{"_index":571,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/repositories/learnroom/course.repo.ts:32",{"_index":573,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/repositories/learnroom/course.repo.ts:38",{"_index":575,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/repositories/learnroom/course.repo.ts:8",{"_index":595,"title":{},"body":{"classes/CourseScope.html":{}}}],["apps/server/src/repositories/learnroom/coursegroup.repo.ts",{"_index":472,"title":{},"body":{"injectables/CourseGroupRepo.html":{},"coverage.html":{}}}],["apps/server/src/repositories/learnroom/coursegroup.repo.ts:10",{"_index":476,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["apps/server/src/repositories/learnroom/coursegroup.repo.ts:7",{"_index":474,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts",{"_index":704,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"coverage.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:14",{"_index":867,"title":{},"body":{"classes/DefaultGridReferenceModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:17",{"_index":866,"title":{},"body":{"classes/DefaultGridReferenceModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:21",{"_index":705,"title":{},"body":{"classes/DashboardGridElementModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:29",{"_index":712,"title":{},"body":{"classes/DashboardGridElementModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:32",{"_index":713,"title":{},"body":{"classes/DashboardGridElementModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:36",{"_index":711,"title":{},"body":{"classes/DashboardGridElementModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:39",{"_index":709,"title":{},"body":{"classes/DashboardGridElementModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:43",{"_index":770,"title":{},"body":{"classes/DashboardModelEntity.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:51",{"_index":771,"title":{},"body":{"classes/DashboardModelEntity.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:6",{"_index":865,"title":{},"body":{"classes/DefaultGridReferenceModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.mapper.ts",{"_index":773,"title":{},"body":{"classes/DashboardModelMapper.html":{},"coverage.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:20",{"_index":780,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:31",{"_index":783,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:6",{"_index":778,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts",{"_index":820,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"coverage.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:12",{"_index":824,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:15",{"_index":826,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:22",{"_index":830,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:28",{"_index":828,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:34",{"_index":829,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:8",{"_index":1218,"title":{},"body":{"interfaces/IDashboardRepo.html":{}}}],["apps/server/src/server.controller.ts",{"_index":2134,"title":{},"body":{"controllers/ServerController.html":{},"coverage.html":{}}}],["apps/server/src/server.controller.ts:7",{"_index":2135,"title":{},"body":{"controllers/ServerController.html":{}}}],["apps/server/src/server.module.ts",{"_index":2139,"title":{},"body":{"modules/ServerModule.html":{}}}],["apps/server/src/shared/$1",{"_index":5018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/error/api",{"_index":6,"title":{},"body":{"classes/ApiValidationError.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/error/business.error.ts",{"_index":299,"title":{},"body":{"classes/BusinessError.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:10",{"_index":313,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:12",{"_index":316,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:14",{"_index":315,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:16",{"_index":314,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:19",{"_index":311,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:34",{"_index":317,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:38",{"_index":318,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/validation.error.ts",{"_index":2521,"title":{},"body":{"classes/ValidationError.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/error/validation.error.ts:4",{"_index":2523,"title":{},"body":{"classes/ValidationError.html":{}}}],["apps/server/src/shared/common/interceptor/constants.ts",{"_index":3961,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/interceptor/duration",{"_index":895,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/interceptor/test/create",{"_index":869,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts",{"_index":2425,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:12",{"_index":2436,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:14",{"_index":2434,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:17",{"_index":2433,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:29",{"_index":2438,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:33",{"_index":2440,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts",{"_index":1948,"title":{},"body":{"classes/PaginationQuery.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:14",{"_index":1955,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:8",{"_index":1958,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts",{"_index":1965,"title":{},"body":{"classes/PaginationResponse.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:12",{"_index":1969,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:15",{"_index":1972,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:18",{"_index":1971,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:21",{"_index":1970,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:3",{"_index":1968,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/pipe/parse",{"_index":1977,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/swagger.ts",{"_index":3962,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/controller/transformer/string",{"_index":3964,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/server/src/shared/domain/entity/all",{"_index":3966,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts",{"_index":207,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:10",{"_index":215,"title":{},"body":{"classes/BaseEntity.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:19",{"_index":246,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:22",{"_index":250,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:25",{"_index":249,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:28",{"_index":253,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:7",{"_index":213,"title":{},"body":{"classes/BaseEntity.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts",{"_index":377,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:29",{"_index":394,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:32",{"_index":392,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:36",{"_index":398,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:40",{"_index":402,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:44",{"_index":406,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:48",{"_index":404,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:52",{"_index":387,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:65",{"_index":413,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:69",{"_index":411,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/coursegroup.entity.ts",{"_index":458,"title":{},"body":{"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/entity/coursegroup.entity.ts:15",{"_index":464,"title":{},"body":{"classes/CourseGroup.html":{}}}],["apps/server/src/shared/domain/entity/coursegroup.entity.ts:18",{"_index":461,"title":{},"body":{"classes/CourseGroup.html":{}}}],["apps/server/src/shared/domain/entity/coursegroup.entity.ts:26",{"_index":465,"title":{},"body":{"classes/CourseGroup.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts",{"_index":663,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:16",{"_index":862,"title":{},"body":{"classes/DefaultGridReference.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:18",{"_index":863,"title":{},"body":{"classes/DefaultGridReference.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:20",{"_index":861,"title":{},"body":{"classes/DefaultGridReference.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:28",{"_index":864,"title":{},"body":{"classes/DefaultGridReference.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:47",{"_index":1182,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:56",{"_index":1183,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:58",{"_index":1184,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:60",{"_index":1185,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:62",{"_index":1186,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:66",{"_index":1188,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:70",{"_index":1187,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:78",{"_index":671,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:80",{"_index":669,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:88",{"_index":673,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:92",{"_index":672,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts",{"_index":1042,"title":{},"body":{"classes/File.html":{},"interfaces/IFileProperties.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts:16",{"_index":1045,"title":{},"body":{"classes/File.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts:19",{"_index":1044,"title":{},"body":{"classes/File.html":{}}}],["apps/server/src/shared/domain/entity/lesson.entity.ts",{"_index":1471,"title":{},"body":{"classes/Lesson.html":{},"interfaces/LessonProperties.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/entity/lesson.entity.ts:13",{"_index":1475,"title":{},"body":{"classes/Lesson.html":{}}}],["apps/server/src/shared/domain/entity/lesson.entity.ts:16",{"_index":1474,"title":{},"body":{"classes/Lesson.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts",{"_index":482,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:31",{"_index":1602,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:35",{"_index":1593,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:39",{"_index":1595,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:42",{"_index":1596,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:45",{"_index":1598,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:48",{"_index":1599,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:51",{"_index":1600,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:55",{"_index":1601,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:58",{"_index":1597,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:61",{"_index":1594,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:64",{"_index":1603,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:66",{"_index":1592,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:79",{"_index":1604,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/role.entity.ts",{"_index":1281,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/entity/role.entity.ts:15",{"_index":2015,"title":{},"body":{"classes/Role.html":{}}}],["apps/server/src/shared/domain/entity/role.entity.ts:19",{"_index":2016,"title":{},"body":{"classes/Role.html":{}}}],["apps/server/src/shared/domain/entity/role.entity.ts:29",{"_index":2012,"title":{},"body":{"classes/Role.html":{}}}],["apps/server/src/shared/domain/entity/school.entity.ts",{"_index":2047,"title":{},"body":{"classes/School.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/entity/school.entity.ts:7",{"_index":2048,"title":{},"body":{"classes/School.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts",{"_index":1293,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:23",{"_index":2179,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:26",{"_index":2177,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:29",{"_index":2173,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:32",{"_index":2180,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:36",{"_index":2172,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:39",{"_index":2178,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:43",{"_index":2174,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:46",{"_index":2175,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:49",{"_index":2176,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:51",{"_index":2181,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:57",{"_index":2171,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts",{"_index":1253,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:27",{"_index":1332,"title":{},"body":{"interfaces/ITaskParent.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:28",{"_index":1330,"title":{},"body":{"interfaces/ITaskParent.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:29",{"_index":1331,"title":{},"body":{"interfaces/ITaskParent.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:35",{"_index":2206,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:38",{"_index":2204,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:41",{"_index":2208,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:44",{"_index":2207,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:47",{"_index":2205,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:50",{"_index":2203,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/team.entity.ts",{"_index":2409,"title":{},"body":{"classes/Team.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/entity/team.entity.ts:7",{"_index":2410,"title":{},"body":{"classes/Team.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts",{"_index":1345,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts:19",{"_index":2466,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts:22",{"_index":2467,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts:25",{"_index":2468,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts:29",{"_index":2471,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts:33",{"_index":2464,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/shared/domain/factory/course.factory.ts",{"_index":3973,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/domain/factory/school.factory.ts",{"_index":3975,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/domain/factory/user.factory.ts",{"_index":3977,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/domain/interface/find",{"_index":1222,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/interface/user.ts",{"_index":1205,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/counted.ts",{"_index":4951,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/entity",{"_index":4955,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/news.types.ts",{"_index":1190,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/value",{"_index":4956,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/vo/task",{"_index":1334,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskWithStatusVo.html":{},"coverage.html":{}}}],["apps/server/src/shared/repo/base.repo.ts",{"_index":255,"title":{},"body":{"injectables/BaseRepo.html":{},"coverage.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:14",{"_index":278,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:19",{"_index":274,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:27",{"_index":276,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:36",{"_index":280,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:40",{"_index":287,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:44",{"_index":283,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:48",{"_index":285,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:53",{"_index":269,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:6",{"_index":267,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:9",{"_index":272,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/query/empty",{"_index":3982,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/repo/scope.ts",{"_index":2064,"title":{},"body":{"classes/Scope.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/repo/scope.ts:57",{"_index":2066,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/scope.ts:59",{"_index":2070,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/scope.ts:67",{"_index":2067,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/scope.ts:71",{"_index":2068,"title":{},"body":{"classes/Scope.html":{}}}],["appthis",{"_index":4170,"title":{},"body":{"index.html":{}}}],["arc",{"_index":3384,"title":{},"body":{"changelog.html":{}}}],["architecture",{"_index":4162,"title":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["architecture/organizing",{"_index":5487,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["archive",{"_index":4854,"title":{},"body":{"license.html":{}}}],["archives",{"_index":5536,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["areas",{"_index":5657,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["aren't",{"_index":5549,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arg",{"_index":4019,"title":{},"body":{"dependencies.html":{}}}],["args",{"_index":2115,"title":{},"body":{"classes/ServerConsole.html":{},"dependencies.html":{}}}],["argument",{"_index":5705,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["argumentshost",{"_index":1067,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["arise",{"_index":5180,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["arising",{"_index":4818,"title":{},"body":{"license.html":{}}}],["around",{"_index":4866,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arrange",{"_index":4737,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["arrangement",{"_index":4748,"title":{},"body":{"license.html":{}}}],["array",{"_index":1286,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"classes/Scope.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["array.from(modelentity.gridelements).map(async",{"_index":804,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["array.isarray(constraint",{"_index":82,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["array.isarray(input",{"_index":2083,"title":{},"body":{"classes/Scope.html":{}}}],["array.isarray(user.permissions",{"_index":967,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["arrayofobjects",{"_index":604,"title":{},"body":{"classes/CourseScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{},"miscellaneous/functions.html":{}}}],["arrayofobjects.length",{"_index":2104,"title":{},"body":{"classes/Scope.html":{}}}],["arrayofquerys",{"_index":2098,"title":{},"body":{"classes/Scope.html":{}}}],["arrays",{"_index":3447,"title":{},"body":{"changelog.html":{}}}],["article",{"_index":4454,"title":{},"body":{"license.html":{}}}],["asc",{"_index":1231,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/enumerations.html":{}}}],["asking",{"_index":3509,"title":{},"body":{"changelog.html":{}}}],["aspect",{"_index":5315,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aspects",{"_index":5193,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["assert",{"_index":4274,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["assertions",{"_index":5752,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["assets",{"_index":4690,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["assigned",{"_index":3712,"title":{},"body":{"changelog.html":{}}}],["assigning",{"_index":5461,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["assignment",{"_index":3106,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":4402,"title":{},"body":{"license.html":{}}}],["assume",{"_index":4810,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumes",{"_index":5500,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumption",{"_index":4838,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":4640,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["async",{"_index":155,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/IDashboardRepo.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["asynchronous",{"_index":3473,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["asynclocalstorage",{"_index":5386,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["atomic",{"_index":5290,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["attach",{"_index":4844,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["attachment",{"_index":98,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["attachments",{"_index":101,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["attempt",{"_index":4650,"title":{},"body":{"license.html":{}}}],["attempted",{"_index":3321,"title":{},"body":{"changelog.html":{}}}],["attribute",{"_index":2630,"title":{},"body":{"changelog.html":{}}}],["attributes",{"_index":3080,"title":{},"body":{"changelog.html":{}}}],["attributions",{"_index":4624,"title":{},"body":{"license.html":{}}}],["aud",{"_index":1386,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["audience",{"_index":1394,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{}}}],["audit",{"_index":5381,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["auth",{"_index":4879,"title":{},"body":{"todo.html":{}}}],["auth.guard.ts",{"_index":1368,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.provider",{"_index":151,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{}}}],["auth.provider.ts",{"_index":941,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["auth.provider.ts:14",{"_index":949,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:17",{"_index":957,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:27",{"_index":959,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:39",{"_index":953,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:56",{"_index":951,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:61",{"_index":955,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["authconfig",{"_index":1376,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["authconfig.jwtoptions",{"_index":1399,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authconfig.secret",{"_index":1398,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authenticate",{"_index":650,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticate('jwt",{"_index":657,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}}}],["authenticated",{"_index":1212,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authenticates",{"_index":5391,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authentication",{"_index":2647,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authguard",{"_index":1369,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":1370,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":112,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":4623,"title":{},"body":{"license.html":{}}}],["authorization",{"_index":2372,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorization.service",{"_index":149,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["authorizationmodule",{"_index":138,"title":{"modules/AuthorizationModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["authorizationservice",{"_index":144,"title":{"injectables/AuthorizationService.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/NewsUc.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorized",{"_index":4617,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorizes",{"_index":4714,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authorizing",{"_index":4752,"title":{},"body":{"license.html":{}}}],["authors",{"_index":4629,"title":{},"body":{"license.html":{}}}],["auto",{"_index":5116,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["autodeployed",{"_index":2803,"title":{},"body":{"changelog.html":{}}}],["automated",{"_index":5623,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["automatic",{"_index":2923,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["automatically",{"_index":3670,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["autosync",{"_index":2994,"title":{},"body":{"changelog.html":{}}}],["availability",{"_index":5628,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["available",{"_index":1035,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"license.html":{},"modules.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["avoid",{"_index":2820,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["avoiding",{"_index":5164,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["await",{"_index":191,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/IDashboardRepo.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["awaited",{"_index":5676,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["away",{"_index":4252,"title":{},"body":{"license.html":{}}}],["aws",{"_index":3894,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["axios",{"_index":3351,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["b",{"_index":1284,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["backend",{"_index":2710,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":5206,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["backup.js",{"_index":3813,"title":{},"body":{"changelog.html":{}}}],["backup.sh",{"_index":3907,"title":{},"body":{"changelog.html":{}}}],["backup/setup/news.json",{"_index":1762,"title":{},"body":{"modules/NewsModule.html":{}}}],["bad_request",{"_index":5559,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["badges",{"_index":3400,"title":{},"body":{"changelog.html":{}}}],["badrequestexception",{"_index":1982,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["badrequestexception('invalid",{"_index":1985,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["bar",{"_index":2696,"title":{},"body":{"changelog.html":{}}}],["base",{"_index":301,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalValidationPipe.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["base.entity",{"_index":418,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"interfaces/LessonProperties.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["base64",{"_index":4133,"title":{},"body":{"dependencies.html":{}}}],["base64content",{"_index":93,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["based",{"_index":996,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["baseentity",{"_index":206,"title":{"classes/BaseEntity.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"injectables/FeathersAuthProvider.html":{},"classes/School.html":{},"classes/Team.html":{},"coverage.html":{}}}],["baseentity:10",{"_index":2050,"title":{},"body":{"classes/School.html":{},"classes/Team.html":{}}}],["baseentity:7",{"_index":2049,"title":{},"body":{"classes/School.html":{},"classes/Team.html":{}}}],["baseentitywithtimestamps",{"_index":222,"title":{"classes/BaseEntityWithTimestamps.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"interfaces/LessonProperties.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"coverage.html":{}}}],["baseentitywithtimestamps:19",{"_index":407,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["baseentitywithtimestamps:22",{"_index":409,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["baseentitywithtimestamps:25",{"_index":408,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["baseentitywithtimestamps:28",{"_index":410,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["baserepo",{"_index":254,"title":{"injectables/BaseRepo.html":{}},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"injectables/NewsRepo.html":{},"coverage.html":{}}}],["baserepo:14",{"_index":1782,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:19",{"_index":1780,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:27",{"_index":1781,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:36",{"_index":1783,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:40",{"_index":1786,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:44",{"_index":1784,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:48",{"_index":1785,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:53",{"_index":1778,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:9",{"_index":1779,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["basic",{"_index":4412,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["basically",{"_index":5352,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batch",{"_index":5351,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batches",{"_index":5357,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bbb",{"_index":3128,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["bc",{"_index":2550,"title":{},"body":{"changelog.html":{}}}],["bcc",{"_index":109,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["bcryptjs",{"_index":4027,"title":{},"body":{"dependencies.html":{}}}],["bearer",{"_index":5031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bearerformat",{"_index":5032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["become",{"_index":4286,"title":{},"body":{"license.html":{}}}],["becomes",{"_index":4297,"title":{},"body":{"license.html":{}}}],["before",{"_index":555,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["beforeall",{"_index":5719,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["beforeall(async",{"_index":5707,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["beforehand",{"_index":5093,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["beginning",{"_index":4202,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["behalf",{"_index":4432,"title":{},"body":{"license.html":{}}}],["behavior",{"_index":5760,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["behaviour",{"_index":361,"title":{},"body":{"modules/CoreModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["behind",{"_index":2429,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["being",{"_index":3404,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["believe",{"_index":4746,"title":{},"body":{"license.html":{}}}],["bellow",{"_index":5189,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["belongs",{"_index":5267,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["below",{"_index":4440,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["benefit",{"_index":4280,"title":{},"body":{"license.html":{}}}],["benefits",{"_index":5340,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["beside",{"_index":4954,"title":{},"body":{"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["best",{"_index":4841,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["better",{"_index":1570,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"classes/Scope.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bettermark's",{"_index":3182,"title":{},"body":{"changelog.html":{}}}],["bettermarks",{"_index":3137,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":2878,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["beyond",{"_index":4509,"title":{},"body":{"license.html":{}}}],["bind",{"_index":3655,"title":{},"body":{"changelog.html":{}}}],["birth",{"_index":2688,"title":{},"body":{"changelog.html":{}}}],["birthday",{"_index":3630,"title":{},"body":{"changelog.html":{}}}],["birthdays",{"_index":3626,"title":{},"body":{"changelog.html":{}}}],["bit",{"_index":5359,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["blackbox",{"_index":5632,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["blocks",{"_index":5639,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["blue",{"_index":2695,"title":{},"body":{"changelog.html":{}}}],["bob",{"_index":5535,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["body",{"_index":1636,"title":{},"body":{"controllers/NewsController.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bom",{"_index":4125,"title":{},"body":{"dependencies.html":{}}}],["boolean",{"_index":1203,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Lesson.html":{},"interfaces/LessonProperties.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/Scope.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskUC.html":{},"miscellaneous/functions.html":{}}}],["boolean.transformer.ts",{"_index":3965,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["boolish",{"_index":4152,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":3924,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["bootstrapconsole",{"_index":4986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bootstraps",{"_index":5706,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["boss",{"_index":2701,"title":{},"body":{"changelog.html":{}}}],["bosscloud",{"_index":2675,"title":{},"body":{"changelog.html":{}}}],["both",{"_index":3464,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["box",{"_index":5699,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["branch",{"_index":2655,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["branches",{"_index":2804,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["brandenburg",{"_index":2937,"title":{},"body":{"changelog.html":{}}}],["brb",{"_index":2854,"title":{},"body":{"changelog.html":{}}}],["breathing",{"_index":5530,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["brings",{"_index":5338,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["broken",{"_index":2636,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":4863,"title":{},"body":{"modules.html":{},"additional-documentation/nestjs-application.html":{}}}],["browser",{"_index":4861,"title":{},"body":{"modules.html":{}}}],["bs",{"_index":2627,"title":{},"body":{"changelog.html":{}}}],["btw",{"_index":241,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bubble",{"_index":5369,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bucket",{"_index":2589,"title":{},"body":{"changelog.html":{}}}],["buffers",{"_index":5249,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bug",{"_index":2693,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":1083,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["buildandaddorquery",{"_index":592,"title":{},"body":{"classes/CourseScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["buildandaddorquery(arrayofobjects",{"_index":599,"title":{},"body":{"classes/CourseScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["building",{"_index":2970,"title":{},"body":{"changelog.html":{}}}],["buildpipelines",{"_index":2896,"title":{},"body":{"changelog.html":{}}}],["builds",{"_index":5095,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["bulk",{"_index":2902,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bump",{"_index":2985,"title":{},"body":{"changelog.html":{}}}],["bundesland=x",{"_index":5277,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bundle",{"_index":4872,"title":{},"body":{"todo.html":{}}}],["business",{"_index":302,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["business.error",{"_index":47,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror",{"_index":9,"title":{"classes/BusinessError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"classes/ValidationError.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["businesserror:10",{"_index":33,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:12",{"_index":39,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:14",{"_index":38,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:16",{"_index":37,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:19",{"_index":35,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:34",{"_index":40,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:38",{"_index":42,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businessexception",{"_index":5610,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["button",{"_index":3609,"title":{},"body":{"changelog.html":{}}}],["bylessonsornone",{"_index":2336,"title":{},"body":{"classes/TaskScope.html":{}}}],["bylessonsornone(lessonids",{"_index":2341,"title":{},"body":{"classes/TaskScope.html":{}}}],["byparentids",{"_index":2337,"title":{},"body":{"classes/TaskScope.html":{}}}],["byparentids(parentids",{"_index":2344,"title":{},"body":{"classes/TaskScope.html":{}}}],["bypublic",{"_index":2338,"title":{},"body":{"classes/TaskScope.html":{}}}],["bytargets",{"_index":1846,"title":{},"body":{"classes/NewsScope.html":{}}}],["bytargets(targets",{"_index":1848,"title":{},"body":{"classes/NewsScope.html":{}}}],["byunpublished",{"_index":1847,"title":{},"body":{"classes/NewsScope.html":{}}}],["byunpublished(unpublished",{"_index":1850,"title":{},"body":{"classes/NewsScope.html":{}}}],["byuseridquery",{"_index":2184,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["byuseridquery(userid",{"_index":2187,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["c",{"_index":1285,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"license.html":{}}}],["cache",{"_index":2019,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["caches",{"_index":5247,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["caching",{"_index":3547,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["calculated",{"_index":3819,"title":{},"body":{"changelog.html":{}}}],["calendar",{"_index":5397,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["call",{"_index":899,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/JwtValidationAdapter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["callback",{"_index":1589,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["called",{"_index":2678,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["caller",{"_index":5325,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["callhandler",{"_index":904,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["calling",{"_index":1116,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["calls",{"_index":3242,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["camelcase",{"_index":5460,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["can't",{"_index":5235,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["canactivate(context",{"_index":5766,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["cant",{"_index":3728,"title":{},"body":{"changelog.html":{}}}],["capabilities",{"_index":5099,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["capitalization",{"_index":3791,"title":{},"body":{"changelog.html":{}}}],["capture",{"_index":5309,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["care",{"_index":3267,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["careful",{"_index":5363,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["carefully",{"_index":5583,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cares",{"_index":5615,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["carry",{"_index":4487,"title":{},"body":{"license.html":{}}}],["case",{"_index":935,"title":{},"body":{"classes/ErrorResponse.html":{},"classes/Scope.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cases",{"_index":4296,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["catch",{"_index":1061,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["catch(error",{"_index":1065,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["catched",{"_index":5371,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["catcherror",{"_index":2445,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catcherror((err",{"_index":2448,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catches",{"_index":5373,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["categories",{"_index":5187,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["category",{"_index":5210,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cause",{"_index":3063,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["caused",{"_index":3875,"title":{},"body":{"changelog.html":{}}}],["causing",{"_index":3518,"title":{},"body":{"changelog.html":{}}}],["caution",{"_index":1492,"title":{},"body":{"injectables/Logger.html":{}}}],["cc",{"_index":108,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["cease",{"_index":4654,"title":{},"body":{"license.html":{}}}],["ceating",{"_index":1191,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["central",{"_index":3591,"title":{},"body":{"changelog.html":{}}}],["certain",{"_index":4614,"title":{},"body":{"license.html":{}}}],["cessation",{"_index":4664,"title":{},"body":{"license.html":{}}}],["chain",{"_index":3416,"title":{},"body":{"changelog.html":{}}}],["chains",{"_index":2821,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["chalk",{"_index":4030,"title":{},"body":{"dependencies.html":{}}}],["chance",{"_index":5348,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["change",{"_index":2545,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["changed",{"_index":1484,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["changelog",{"_index":2535,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":2537,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["changing",{"_index":2602,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["channel",{"_index":2874,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["channels",{"_index":3529,"title":{},"body":{"changelog.html":{}}}],["characteristics",{"_index":5401,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["characterized",{"_index":4592,"title":{},"body":{"license.html":{}}}],["charge",{"_index":4264,"title":{},"body":{"license.html":{}}}],["chat",{"_index":3027,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chatadapter",{"_index":5258,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["check",{"_index":233,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkbox",{"_index":2769,"title":{},"body":{"changelog.html":{}}}],["checked",{"_index":5317,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["checkentitypermissions",{"_index":156,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkentitypermissions(userid",{"_index":161,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["checking",{"_index":1156,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checklist",{"_index":4211,"title":{},"body":{"index.html":{}}}],["checkout",{"_index":4216,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["checks",{"_index":3613,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkusernotexistbyemail(email",{"_index":5574,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["child",{"_index":4177,"title":{},"body":{"index.html":{}}}],["children",{"_index":3276,"title":{},"body":{"changelog.html":{}}}],["choose",{"_index":3677,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["choosing",{"_index":4800,"title":{},"body":{"license.html":{}}}],["choreography",{"_index":5322,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chunk",{"_index":4104,"title":{},"body":{"dependencies.html":{}}}],["chunks",{"_index":3074,"title":{},"body":{"changelog.html":{}}}],["ci",{"_index":2920,"title":{},"body":{"changelog.html":{}}}],["circumstances",{"_index":4438,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":4446,"title":{},"body":{"license.html":{}}}],["civil",{"_index":4837,"title":{},"body":{"license.html":{}}}],["claim",{"_index":4704,"title":{},"body":{"license.html":{}}}],["claims",{"_index":4716,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/ErrorResponse.html":{},"classes/File.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/Submission.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"interfaces/LessonProperties.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/ErrorResponse.html":{},"classes/File.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/Submission.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["classname",{"_index":987,"title":{},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{}}}],["classserializerinterceptor",{"_index":1362,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["clean",{"_index":2556,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cleanup",{"_index":430,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["clear",{"_index":4543,"title":{},"body":{"license.html":{}}}],["clearly",{"_index":5588,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cli",{"_index":5132,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["clicking",{"_index":3152,"title":{},"body":{"changelog.html":{}}}],["client",{"_index":305,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["clients",{"_index":5271,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["clienturl",{"_index":1567,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["clipboard",{"_index":3885,"title":{},"body":{"changelog.html":{}}}],["clone",{"_index":4217,"title":{},"body":{"index.html":{}}}],["close",{"_index":1585,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["closed",{"_index":5733,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["closely",{"_index":4833,"title":{},"body":{"license.html":{}}}],["closing",{"_index":3258,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cloud",{"_index":4154,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cloud.github.io/schulcloud",{"_index":2827,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["cloud.org",{"_index":3890,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["cloud/commons",{"_index":2145,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{}}}],["cloud/mongoose",{"_index":4080,"title":{},"body":{"dependencies.html":{}}}],["cloud/node",{"_index":4066,"title":{},"body":{"dependencies.html":{}}}],["cloud/schulcloud",{"_index":4891,"title":{},"body":{"todo.html":{}}}],["clouds",{"_index":3640,"title":{},"body":{"changelog.html":{}}}],["cluster",{"_index":2679,"title":{},"body":{"changelog.html":{}}}],["cluster_authmodule",{"_index":115,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":117,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":116,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule",{"_index":139,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_exports",{"_index":140,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_imports",{"_index":142,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_providers",{"_index":141,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":350,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":351,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_feathersmodule",{"_index":988,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_exports",{"_index":989,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_providers",{"_index":990,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_learnroommodule",{"_index":1466,"title":{},"body":{"modules/LearnroomModule.html":{},"overview.html":{}}}],["cluster_learnroommodule_providers",{"_index":1467,"title":{},"body":{"modules/LearnroomModule.html":{},"overview.html":{}}}],["cluster_loggermodule",{"_index":1501,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_exports",{"_index":1502,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_providers",{"_index":1503,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_newsmodule",{"_index":1743,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_exports",{"_index":1746,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_imports",{"_index":1744,"title":{},"body":{"modules/NewsModule.html":{}}}],["cluster_newsmodule_providers",{"_index":1745,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_serverconsolemodule",{"_index":2123,"title":{},"body":{"modules/ServerConsoleModule.html":{},"overview.html":{}}}],["cluster_serverconsolemodule_imports",{"_index":2124,"title":{},"body":{"modules/ServerConsoleModule.html":{},"overview.html":{}}}],["cluster_serverconsolemodule_providers",{"_index":2125,"title":{},"body":{"modules/ServerConsoleModule.html":{},"overview.html":{}}}],["cluster_servermodule",{"_index":2136,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_servermodule_imports",{"_index":2137,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_taskmodule",{"_index":2270,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_taskmodule_providers",{"_index":2271,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":2496,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":2498,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":2497,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluttered",{"_index":5365,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["co",{"_index":3913,"title":{},"body":{"changelog.html":{}}}],["codacy",{"_index":3581,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["code",{"_index":13,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"classes/ValidationError.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["codes",{"_index":3594,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coersion",{"_index":1166,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["cohesion",{"_index":5176,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["collation",{"_index":3718,"title":{},"body":{"changelog.html":{}}}],["collect",{"_index":4777,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collectcoveragefrom",{"_index":5003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collection",{"_index":416,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collection(this",{"_index":399,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Role.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/User.html":{}}}],["collections",{"_index":2870,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":378,"title":{},"body":{"classes/Course.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"miscellaneous/variables.html":{}}}],["colors",{"_index":2577,"title":{},"body":{"changelog.html":{}}}],["columnnames",{"_index":3690,"title":{},"body":{"changelog.html":{}}}],["combine",{"_index":4787,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["combined",{"_index":4504,"title":{},"body":{"license.html":{}}}],["come",{"_index":4291,"title":{},"body":{"license.html":{}}}],["comes",{"_index":4494,"title":{},"body":{"license.html":{}}}],["command",{"_index":2118,"title":{},"body":{"classes/ServerConsole.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["command({command",{"_index":2111,"title":{},"body":{"classes/ServerConsole.html":{}}}],["commander",{"_index":4036,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["commands",{"_index":4365,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["comment",{"_index":1294,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["commentschema",{"_index":3831,"title":{},"body":{"changelog.html":{}}}],["commercial",{"_index":4578,"title":{},"body":{"license.html":{}}}],["commit",{"_index":3378,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["commitment",{"_index":4729,"title":{},"body":{"license.html":{}}}],["committing",{"_index":4214,"title":{},"body":{"index.html":{}}}],["common",{"_index":4053,"title":{},"body":{"dependencies.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["commons",{"_index":3348,"title":{},"body":{"changelog.html":{}}}],["communicate",{"_index":5217,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["communication",{"_index":4407,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["community",{"_index":4248,"title":{},"body":{"license.html":{}}}],["comparator",{"_index":5463,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["compare",{"_index":1080,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["compared",{"_index":5356,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comparison",{"_index":5808,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["compilation",{"_index":4500,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":4508,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":4761,"title":{},"body":{"license.html":{}}}],["compile",{"_index":893,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compiler",{"_index":4390,"title":{},"body":{"license.html":{}}}],["compiling",{"_index":3419,"title":{},"body":{"changelog.html":{}}}],["complete",{"_index":4210,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["completed",{"_index":2680,"title":{},"body":{"changelog.html":{}}}],["completely",{"_index":5296,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["complex",{"_index":1495,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compliance",{"_index":4686,"title":{},"body":{"license.html":{}}}],["compliant",{"_index":5197,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comply",{"_index":4429,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":5128,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["component",{"_index":3044,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["component(s",{"_index":5253,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["components",{"_index":4192,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compose",{"_index":2754,"title":{},"body":{"changelog.html":{}}}],["compression",{"_index":4037,"title":{},"body":{"dependencies.html":{}}}],["computedtasks",{"_index":2382,"title":{},"body":{"injectables/TaskUC.html":{}}}],["computer",{"_index":4339,"title":{},"body":{"license.html":{}}}],["computetaskstatusforstudent",{"_index":2350,"title":{},"body":{"injectables/TaskUC.html":{}}}],["computetaskstatusforstudent(task",{"_index":2355,"title":{},"body":{"injectables/TaskUC.html":{}}}],["computetaskstatusforteacher",{"_index":2351,"title":{},"body":{"injectables/TaskUC.html":{}}}],["computetaskstatusforteacher(task",{"_index":2357,"title":{},"body":{"injectables/TaskUC.html":{}}}],["concept",{"_index":2798,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concepts",{"_index":5420,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["concerns",{"_index":4793,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["concrete",{"_index":5483,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concurrency",{"_index":2817,"title":{},"body":{"changelog.html":{}}}],["concurrently",{"_index":4039,"title":{},"body":{"dependencies.html":{}}}],["condition",{"_index":5643,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["conditioned",{"_index":4755,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":4308,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["conditons",{"_index":5260,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["config",{"_index":2148,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["config.initialoptions",{"_index":4989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configs",{"_index":3336,"title":{},"body":{"changelog.html":{}}}],["configuration",{"_index":2142,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["configuration.get('mail_send_exchange",{"_index":2157,"title":{},"body":{"modules/ServerModule.html":{}}}],["configuration.get('mail_send_routing_key",{"_index":2158,"title":{},"body":{"modules/ServerModule.html":{}}}],["configuration.get('rabbitmq_uri",{"_index":2156,"title":{},"body":{"modules/ServerModule.html":{}}}],["configuration.get('request_timeout",{"_index":5051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configurations",{"_index":5138,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["configure",{"_index":5061,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["configured",{"_index":2792,"title":{},"body":{"changelog.html":{}}}],["configures",{"_index":358,"title":{},"body":{"modules/CoreModule.html":{}}}],["confirm",{"_index":3887,"title":{},"body":{"changelog.html":{}}}],["confirmed",{"_index":3685,"title":{},"body":{"changelog.html":{}}}],["conflicts",{"_index":5419,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["connect",{"_index":3664,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connected",{"_index":4193,"title":{},"body":{"index.html":{}}}],["connection",{"_index":1587,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["connectionoptions",{"_index":4931,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["connections",{"_index":2912,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connector",{"_index":3834,"title":{},"body":{"changelog.html":{}}}],["connector/framework",{"_index":5344,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consent",{"_index":2933,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consents",{"_index":3058,"title":{},"body":{"changelog.html":{}}}],["consentstatus",{"_index":3627,"title":{},"body":{"changelog.html":{}}}],["consentversion",{"_index":2812,"title":{},"body":{"changelog.html":{}}}],["consentversions",{"_index":3752,"title":{},"body":{"changelog.html":{}}}],["consequence",{"_index":4675,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":4817,"title":{},"body":{"license.html":{}}}],["consider",{"_index":2745,"title":{},"body":{"changelog.html":{}}}],["considered",{"_index":4642,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consist",{"_index":5580,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["consistency",{"_index":3166,"title":{},"body":{"changelog.html":{}}}],["consistent",{"_index":3228,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consists",{"_index":5505,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["console",{"_index":342,"title":{},"body":{"injectables/ConsoleWriter.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["console.module.ts",{"_index":2128,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["consolemodule",{"_index":2129,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["consolewriter",{"_index":331,"title":{"injectables/ConsoleWriter.html":{}},"body":{"injectables/ConsoleWriter.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"coverage.html":{},"overview.html":{}}}],["conspicuously",{"_index":4475,"title":{},"body":{"license.html":{}}}],["const",{"_index":76,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/Course.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/Scope.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["constants",{"_index":134,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/TimeoutInterceptor.html":{}}}],["constitutes",{"_index":4421,"title":{},"body":{"license.html":{}}}],["constraint",{"_index":80,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constraints",{"_index":5251,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["constructor",{"_index":21,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/ServerConsole.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/User.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["constructor(@inject('dashboard_repo",{"_index":859,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["constructor(@inject(request",{"_index":1022,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["constructor(amqpconnection",{"_index":1535,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(apivalidationerror",{"_index":69,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constructor(consolewriter",{"_index":2109,"title":{},"body":{"classes/ServerConsole.html":{}}}],["constructor(courserepo",{"_index":2212,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["constructor(dashboardrepo",{"_index":854,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["constructor(data",{"_index":1967,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["constructor(em",{"_index":265,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{}}}],["constructor(feathersauthprovider",{"_index":159,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["constructor(feathersserviceprovider",{"_index":947,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["constructor(field",{"_index":2527,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(id",{"_index":667,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["constructor(message",{"_index":2522,"title":{},"body":{"classes/ValidationError.html":{}}}],["constructor(newsrepo",{"_index":1874,"title":{},"body":{"injectables/NewsUc.html":{}}}],["constructor(private",{"_index":188,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/JwtStrategy.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/ServerConsole.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["constructor(props",{"_index":385,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"interfaces/LessonProperties.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["constructor(protected",{"_index":288,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["constructor(readonly",{"_index":49,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(request",{"_index":1038,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["constructor(rolerepo",{"_index":2037,"title":{},"body":{"injectables/RoleUC.html":{}}}],["constructor(task",{"_index":1342,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskWithStatusVo.html":{}}}],["constructor(taskrepo",{"_index":2353,"title":{},"body":{"injectables/TaskUC.html":{}}}],["constructor(type",{"_index":928,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["constructor(undefined",{"_index":309,"title":{},"body":{"classes/BusinessError.html":{}}}],["constructor(userfacade",{"_index":1405,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(userrepo",{"_index":2508,"title":{},"body":{"injectables/UserUC.html":{}}}],["constructor(useruc",{"_index":2486,"title":{},"body":{"injectables/UserFacade.html":{}}}],["constructor(validationerrors",{"_index":22,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["construed",{"_index":4765,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":4561,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consumers",{"_index":5294,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consumption",{"_index":2665,"title":{},"body":{"changelog.html":{}}}],["contact",{"_index":2945,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["contain",{"_index":4762,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["contained",{"_index":5169,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["container",{"_index":3377,"title":{},"body":{"changelog.html":{}}}],["containing",{"_index":4207,"title":{},"body":{"index.html":{},"license.html":{}}}],["contains",{"_index":1806,"title":{},"body":{"injectables/NewsRepo.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["content",{"_index":485,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["contentdisposition",{"_index":92,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["contentid",{"_index":97,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["contents",{"_index":4726,"title":{},"body":{"license.html":{}}}],["context",{"_index":906,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"interfaces/ILogger.html":{},"injectables/Logger.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["context.switchtohttp().getrequest",{"_index":5768,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["continue",{"_index":3223,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["continued",{"_index":4586,"title":{},"body":{"license.html":{}}}],["contract",{"_index":5168,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["contractual",{"_index":4639,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":4771,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":4255,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["contributor",{"_index":4713,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":4715,"title":{},"body":{"license.html":{}}}],["control",{"_index":3789,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["controlled",{"_index":4718,"title":{},"body":{"license.html":{}}}],["controller",{"_index":642,"title":{"controllers/DashboardController.html":{},"controllers/DelayController.html":{},"controllers/NewsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}},"body":{"controllers/DashboardController.html":{},"controllers/DelayController.html":{},"controllers/NewsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["controller('dashboard",{"_index":658,"title":{},"body":{"controllers/DashboardController.html":{}}}],["controller('news",{"_index":1648,"title":{},"body":{"controllers/NewsController.html":{}}}],["controller('tasks",{"_index":2242,"title":{},"body":{"controllers/TaskController.html":{}}}],["controller('team",{"_index":2419,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["controller('user",{"_index":2481,"title":{},"body":{"controllers/UserController.html":{}}}],["controller.ts",{"_index":5432,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["controller/dashboard.controller",{"_index":1469,"title":{},"body":{"modules/LearnroomModule.html":{}}}],["controller/dto",{"_index":748,"title":{},"body":{"classes/DashboardMapper.html":{},"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TaskMapper.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{}}}],["controller/dto/resolveduser.dto",{"_index":2513,"title":{},"body":{"injectables/UserUC.html":{}}}],["controller/dto/target",{"_index":2199,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["controller/news.controller",{"_index":1753,"title":{},"body":{"modules/NewsModule.html":{}}}],["controller/task.controller",{"_index":2274,"title":{},"body":{"modules/TaskModule.html":{}}}],["controller/team",{"_index":1754,"title":{},"body":{"modules/NewsModule.html":{}}}],["controllers",{"_index":644,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/DelayController.html":{},"modules/LearnroomModule.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["convenient",{"_index":4358,"title":{},"body":{"license.html":{}}}],["convention",{"_index":5635,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["conventions",{"_index":5214,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["converted",{"_index":3736,"title":{},"body":{"changelog.html":{}}}],["convey",{"_index":4345,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":4750,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":4593,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":4353,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":4638,"title":{},"body":{"license.html":{}}}],["cooperation",{"_index":4247,"title":{},"body":{"license.html":{}}}],["copies",{"_index":4241,"title":{},"body":{"license.html":{}}}],["copy",{"_index":3275,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["copying",{"_index":4309,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":4243,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":4231,"title":{},"body":{"license.html":{}}}],["copyrightable",{"_index":4316,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":4435,"title":{},"body":{"license.html":{}}}],["core",{"_index":357,"title":{},"body":{"modules/CoreModule.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core.autocrlf",{"_index":5832,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["core/core.module",{"_index":2149,"title":{},"body":{"modules/ServerModule.html":{}}}],["core/error",{"_index":5616,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core/logger/logger.module",{"_index":5592,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core/logger/logger.service",{"_index":5593,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["coremodule",{"_index":349,"title":{"modules/CoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["correct",{"_index":2612,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["correction",{"_index":4812,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":3708,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["corresponding",{"_index":4393,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cors",{"_index":2626,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["cost",{"_index":4530,"title":{},"body":{"license.html":{}}}],["count",{"_index":479,"title":{},"body":{"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"controllers/TeamNewsController.html":{}}}],["counted",{"_index":478,"title":{},"body":{"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{}}}],["countednewslist",{"_index":1794,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["countedtasklist",{"_index":2301,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["counterclaim",{"_index":4705,"title":{},"body":{"license.html":{}}}],["counterpart",{"_index":4957,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["counties",{"_index":3208,"title":{},"body":{"changelog.html":{}}}],["counties/kreise",{"_index":3283,"title":{},"body":{"changelog.html":{}}}],["countries",{"_index":4343,"title":{},"body":{"license.html":{}}}],["country",{"_index":4742,"title":{},"body":{"license.html":{}}}],["counts",{"_index":4953,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["couple",{"_index":5339,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["coupling",{"_index":5178,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["course",{"_index":376,"title":{"classes/Course.html":{}},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Lesson.html":{},"interfaces/LessonProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["course.entity",{"_index":466,"title":{},"body":{"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Lesson.html":{},"interfaces/LessonProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["coursefactory",{"_index":3974,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["coursegroup",{"_index":457,"title":{"classes/CourseGroup.html":{}},"body":{"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["coursegroup.entity",{"_index":1301,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["coursegroupid",{"_index":1308,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["coursegrouprepo",{"_index":471,"title":{"injectables/CourseGroupRepo.html":{}},"body":{"injectables/CourseGroupRepo.html":{},"coverage.html":{}}}],["coursegroups",{"_index":467,"title":{},"body":{"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"interfaces/ICourseGroupProperties.html":{},"injectables/TaskAuthorizationService.html":{},"changelog.html":{}}}],["coursegroupsofuser",{"_index":2195,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["courseid",{"_index":463,"title":{},"body":{"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Lesson.html":{},"interfaces/LessonProperties.html":{},"classes/Task.html":{}}}],["courseids",{"_index":477,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["coursename",{"_index":2325,"title":{},"body":{"classes/TaskResponse.html":{}}}],["coursenews",{"_index":481,"title":{"classes/CourseNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coursenews(props",{"_index":556,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["courserepo",{"_index":564,"title":{"injectables/CourseRepo.html":{}},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/TaskAuthorizationService.html":{},"modules/TaskModule.html":{},"coverage.html":{},"overview.html":{}}}],["courses",{"_index":438,"title":{},"body":{"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsScope.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["coursescope",{"_index":578,"title":{"classes/CourseScope.html":{}},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"coverage.html":{}}}],["court",{"_index":4770,"title":{},"body":{"license.html":{}}}],["courts",{"_index":4832,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":4732,"title":{},"body":{"license.html":{}}}],["cover",{"_index":5540,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coverage",{"_index":3207,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["coveragedirectory",{"_index":5005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coveragepathignorepatterns",{"_index":5006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coveragethreshold",{"_index":5008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["covered",{"_index":4328,"title":{},"body":{"license.html":{}}}],["covers",{"_index":5758,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["cpu",{"_index":2950,"title":{},"body":{"changelog.html":{}}}],["create",{"_index":821,"title":{},"body":{"injectables/DashboardRepo.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/IDashboardRepo.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["create(@currentuser",{"_index":1649,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["create(currentuser",{"_index":1611,"title":{},"body":{"controllers/NewsController.html":{}}}],["create(dashboardprops",{"_index":825,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["create(userid",{"_index":1876,"title":{},"body":{"injectables/NewsUc.html":{}}}],["createcurrenttestuser",{"_index":3959,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["created",{"_index":1489,"title":{},"body":{"injectables/Logger.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["createdat",{"_index":242,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["createerrorresponse",{"_index":1062,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponse(error",{"_index":1069,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforbusinesserror",{"_index":3931,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createerrorresponseforbusinesserror(error",{"_index":1099,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforfeatherserror",{"_index":3932,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createerrorresponseforfeatherserror(error",{"_index":1107,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception",{"_index":1088,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(error",{"_index":1122,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(unknownerror",{"_index":1106,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforunknownerror",{"_index":1126,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforunknownerror(error",{"_index":1102,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createinstance",{"_index":492,"title":{},"body":{"classes/CourseNews.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["createinstance(targetmodel",{"_index":520,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["createmikroormmodule",{"_index":1563,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createnestapplication",{"_index":5764,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["createnewsparam",{"_index":5493,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createnewsparams",{"_index":605,"title":{"classes/CreateNewsParams.html":{}},"body":{"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createorqueryfromlist",{"_index":3984,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createorqueryfromlist(arrayofobjects",{"_index":2088,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/functions.html":{}}}],["createparamdecorator((data",{"_index":4983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createrabbitmqmodule",{"_index":1524,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createrabbitmqmodule(options",{"_index":1530,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["createredisidentifierfromjwtdata",{"_index":1459,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["createredisidentifierfromjwtdata(accountid",{"_index":1463,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["creates",{"_index":1085,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["createspinner",{"_index":339,"title":{},"body":{"injectables/ConsoleWriter.html":{}}}],["createtestmodule",{"_index":888,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["creating",{"_index":609,"title":{},"body":{"classes/CreateNewsParams.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creating/populating",{"_index":3072,"title":{},"body":{"changelog.html":{}}}],["creation",{"_index":1162,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"classes/NewsResponse.html":{},"changelog.html":{}}}],["creator",{"_index":486,"title":{},"body":{"classes/CourseNews.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creatorid",{"_index":497,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["criteria",{"_index":5346,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["criterion",{"_index":4370,"title":{},"body":{"license.html":{}}}],["critical",{"_index":5306,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cronjob",{"_index":3487,"title":{},"body":{"changelog.html":{}}}],["cross",{"_index":359,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"modules/CoreModule.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["crosscutting",{"_index":5380,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["crossing",{"_index":5485,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["crud",{"_index":5552,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["crypto",{"_index":4043,"title":{},"body":{"dependencies.html":{}}}],["csv",{"_index":2765,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["csvsyncer",{"_index":3793,"title":{},"body":{"changelog.html":{}}}],["ctx",{"_index":1143,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getresponse",{"_index":1145,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":4984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cumbersome",{"_index":225,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["cure",{"_index":4667,"title":{},"body":{"license.html":{}}}],["curentuser",{"_index":2371,"title":{},"body":{"injectables/TaskUC.html":{}}}],["current",{"_index":1820,"title":{},"body":{"classes/NewsResponse.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["currently",{"_index":1572,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["currentschoolyear",{"_index":3694,"title":{},"body":{"changelog.html":{}}}],["currentuser",{"_index":1615,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserUC.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.schoolid",{"_index":1651,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.user.permissions.includes(permission",{"_index":2388,"title":{},"body":{"injectables/TaskUC.html":{}}}],["currentuser.userid",{"_index":660,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentvalue",{"_index":2091,"title":{},"body":{"classes/Scope.html":{}}}],["currentvalue[selectedkey",{"_index":2093,"title":{},"body":{"classes/Scope.html":{}}}],["custom",{"_index":937,"title":{},"body":{"classes/ErrorResponse.html":{},"injectables/Logger.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["custom_error_type",{"_index":5612,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["customarily",{"_index":4522,"title":{},"body":{"license.html":{}}}],["customary",{"_index":4784,"title":{},"body":{"license.html":{}}}],["customer",{"_index":4527,"title":{},"body":{"license.html":{}}}],["customizing",{"_index":362,"title":{},"body":{"modules/CoreModule.html":{}}}],["customproviderclass.name",{"_index":1499,"title":{},"body":{"injectables/Logger.html":{}}}],["cutting",{"_index":5155,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["cycle",{"_index":2649,"title":{},"body":{"changelog.html":{}}}],["cycles",{"_index":5194,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["d",{"_index":424,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["damages",{"_index":4815,"title":{},"body":{"license.html":{}}}],["dash",{"_index":3409,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dashboard",{"_index":647,"title":{},"body":{"controllers/DashboardController.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/IDashboardRepo.html":{}}}],["dashboard.getgrid().map((gridelement",{"_index":752,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["dashboard.id",{"_index":750,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["dashboard.model.entity",{"_index":785,"title":{},"body":{"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["dashboard.model.mapper",{"_index":831,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["dashboard_repo",{"_index":1470,"title":{},"body":{"modules/LearnroomModule.html":{}}}],["dashboardcontroller",{"_index":643,"title":{"controllers/DashboardController.html":{}},"body":{"controllers/DashboardController.html":{},"modules/LearnroomModule.html":{},"coverage.html":{}}}],["dashboardentity",{"_index":662,"title":{"classes/DashboardEntity.html":{}},"body":{"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"coverage.html":{}}}],["dashboardentity('thisisalsofake",{"_index":837,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["dashboardentity(modelentity.id",{"_index":814,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["dashboardgridelementmodel",{"_index":703,"title":{"classes/DashboardGridElementModel.html":{}},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DefaultGridReferenceModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dashboardgridelementmodel(gridelement.getid",{"_index":786,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["dashboardgridelementresponse",{"_index":729,"title":{"classes/DashboardGridElementResponse.html":{}},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{},"coverage.html":{}}}],["dashboardmapper",{"_index":655,"title":{"classes/DashboardMapper.html":{}},"body":{"controllers/DashboardController.html":{},"classes/DashboardMapper.html":{},"coverage.html":{}}}],["dashboardmapper.maptoresponse(dashboard",{"_index":661,"title":{},"body":{"controllers/DashboardController.html":{}}}],["dashboardmodel",{"_index":841,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["dashboardmodelentity",{"_index":725,"title":{"classes/DashboardModelEntity.html":{}},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/IDashboardRepo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dashboardmodelentity(entity.getid",{"_index":815,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["dashboardmodelmapper",{"_index":772,"title":{"classes/DashboardModelMapper.html":{}},"body":{"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"coverage.html":{}}}],["dashboardmodelmapper.mapgridelementtomodel(element",{"_index":818,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["dashboardmodelmapper.maptoentity(dashboardmodel",{"_index":843,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["dashboardmodelmapper.maptomodel(entity",{"_index":839,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["dashboardprops",{"_index":668,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"miscellaneous/typealiases.html":{}}}],["dashboardrepo",{"_index":819,"title":{"injectables/DashboardRepo.html":{}},"body":{"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"interfaces/IDashboardRepo.html":{},"modules/LearnroomModule.html":{},"coverage.html":{}}}],["dashboardresponse",{"_index":654,"title":{"classes/DashboardResponse.html":{}},"body":{"controllers/DashboardController.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{},"coverage.html":{}}}],["dashboards",{"_index":2596,"title":{},"body":{"changelog.html":{}}}],["dashboarduc",{"_index":652,"title":{"injectables/DashboardUc.html":{}},"body":{"controllers/DashboardController.html":{},"injectables/DashboardUc.html":{},"modules/LearnroomModule.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":754,"title":{},"body":{"classes/DashboardMapper.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/PaginationResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["data.displaycolor",{"_index":763,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["data.id",{"_index":757,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["data.shorttitle",{"_index":761,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["data.title",{"_index":759,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["data/rules",{"_index":5275,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dataaccess",{"_index":5268,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["database",{"_index":1056,"title":{},"body":{"interfaces/GlobalConstants.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["database.js",{"_index":2161,"title":{},"body":{"modules/ServerModule.html":{}}}],["database.module.ts",{"_index":1550,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["database.module.ts:49",{"_index":1552,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["database.module.ts:62",{"_index":1554,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["database/mongo",{"_index":1549,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["databases",{"_index":5809,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["datalayer",{"_index":5228,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["datamodel",{"_index":5241,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["datase",{"_index":5064,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["date",{"_index":243,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"changelog.html":{},"license.html":{}}}],["date.now",{"_index":915,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["date.now()@email.de",{"_index":5047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dated",{"_index":5362,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["days",{"_index":2795,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["db",{"_index":1586,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db/protocol",{"_index":5343,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db_password",{"_index":1050,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/ServerModule.html":{}}}],["db_url",{"_index":1051,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/ServerModule.html":{}}}],["db_username",{"_index":1052,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/ServerModule.html":{}}}],["dbname",{"_index":4950,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["dbs",{"_index":5331,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dd",{"_index":3795,"title":{},"body":{"changelog.html":{}}}],["dd.mm.yyyy",{"_index":3697,"title":{},"body":{"changelog.html":{}}}],["dd/mm/yyyy",{"_index":3794,"title":{},"body":{"changelog.html":{}}}],["ddd",{"_index":5514,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["deadlock",{"_index":3014,"title":{},"body":{"changelog.html":{}}}],["deata",{"_index":3748,"title":{},"body":{"changelog.html":{}}}],["debug",{"_index":1235,"title":{},"body":{"interfaces/ILogger.html":{},"modules/ServerModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["debug(message",{"_index":1239,"title":{},"body":{"interfaces/ILogger.html":{}}}],["debug?(message",{"_index":1250,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["debugger",{"_index":4194,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["debugging",{"_index":2169,"title":{},"body":{"modules/ServerModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["december",{"_index":4458,"title":{},"body":{"license.html":{}}}],["decide",{"_index":1431,"title":{},"body":{"injectables/JwtStrategy.html":{},"license.html":{},"todo.html":{}}}],["deciding",{"_index":2746,"title":{},"body":{"changelog.html":{}}}],["decision",{"_index":2900,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decisions",{"_index":5581,"title":{"additional-documentation/nestjs-application/decisions.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["declare",{"_index":3567,"title":{},"body":{"changelog.html":{}}}],["declared",{"_index":323,"title":{},"body":{"classes/BusinessError.html":{}}}],["declining",{"_index":4630,"title":{},"body":{"license.html":{}}}],["decorated",{"_index":1172,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["decorator",{"_index":4151,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["decorators",{"_index":211,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"classes/File.html":{},"classes/GlobalValidationPipe.html":{},"classes/Lesson.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskResponse.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserInfoResponse.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["decouple",{"_index":5149,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decoupled",{"_index":5284,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decouples",{"_index":5295,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decryption",{"_index":2777,"title":{},"body":{"changelog.html":{}}}],["dedicated",{"_index":2724,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deemed",{"_index":4448,"title":{},"body":{"license.html":{}}}],["default",{"_index":247,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/File.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseProperties.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskScope.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["default...what",{"_index":427,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.color",{"_index":389,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.description",{"_index":391,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.name",{"_index":393,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.schema.json",{"_index":5063,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["defaultgridreference",{"_index":679,"title":{"classes/DefaultGridReference.html":{}},"body":{"classes/DashboardEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"coverage.html":{}}}],["defaultgridreference(gridelement.getmetadata().title",{"_index":792,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["defaultgridreference(loaded.id",{"_index":811,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["defaultgridreferencemodel",{"_index":716,"title":{"classes/DefaultGridReferenceModel.html":{}},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DefaultGridReferenceModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultgridreferencemodel(gridelement.getmetadata().id",{"_index":794,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["defaultmessage",{"_index":55,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"classes/ValidationError.html":{},"miscellaneous/variables.html":{}}}],["defaultoptions",{"_index":1584,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["defaults",{"_index":618,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/PaginationQuery.html":{},"changelog.html":{}}}],["defaulttimeout",{"_index":2432,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["defective",{"_index":4809,"title":{},"body":{"license.html":{}}}],["defending",{"_index":4281,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":4767,"title":{},"body":{"license.html":{}}}],["define",{"_index":229,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["defined",{"_index":24,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/ILogger.html":{},"interfaces/ITaskParent.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["defines",{"_index":5074,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["defining",{"_index":240,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["definition",{"_index":67,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["definitions",{"_index":2819,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["delay",{"_index":881,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["delay(100",{"_index":885,"title":{},"body":{"controllers/DelayController.html":{}}}],["delaycontroller",{"_index":868,"title":{"controllers/DelayController.html":{}},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":1607,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["delete(':id",{"_index":1617,"title":{},"body":{"controllers/NewsController.html":{}}}],["delete(id",{"_index":1878,"title":{},"body":{"injectables/NewsUc.html":{}}}],["delete(newsid",{"_index":1616,"title":{},"body":{"controllers/NewsController.html":{}}}],["deleted",{"_index":2806,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["deletedid",{"_index":1667,"title":{},"body":{"controllers/NewsController.html":{}}}],["deletes",{"_index":5361,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deleting",{"_index":3115,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deletion",{"_index":2580,"title":{},"body":{"changelog.html":{}}}],["delivered",{"_index":5627,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["demands",{"_index":5320,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["denied",{"_index":4598,"title":{},"body":{"license.html":{}}}],["denominated",{"_index":4730,"title":{},"body":{"license.html":{}}}],["depend",{"_index":5550,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dependecy",{"_index":3522,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":114,"title":{"dependencies.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dependency",{"_index":5056,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dependent",{"_index":2583,"title":{},"body":{"changelog.html":{}}}],["deploy",{"_index":2924,"title":{},"body":{"changelog.html":{}}}],["deployed",{"_index":2666,"title":{},"body":{"changelog.html":{}}}],["deployment",{"_index":3777,"title":{},"body":{"changelog.html":{}}}],["deployments",{"_index":2922,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":1017,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"index.html":{}}}],["deprecates",{"_index":3370,"title":{},"body":{"changelog.html":{}}}],["deprive",{"_index":4738,"title":{},"body":{"license.html":{}}}],["depseudonymization",{"_index":3183,"title":{},"body":{"changelog.html":{}}}],["desc",{"_index":1232,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/enumerations.html":{}}}],["describe",{"_index":5378,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["describe(\"course",{"_index":5647,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["describe(\"when",{"_index":5648,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["describe('get",{"_index":5786,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["described",{"_index":5188,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["description",{"_index":64,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"modules/FeathersModule.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtValidationAdapter.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/SchoolInfoResponse.html":{},"classes/ServerConsole.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoResponse.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["descriptive",{"_index":5170,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["design",{"_index":5161,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["designated",{"_index":4538,"title":{},"body":{"license.html":{}}}],["designed",{"_index":4246,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["designing",{"_index":5366,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["designwe",{"_index":5159,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["destroyed",{"_index":5400,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail",{"_index":4791,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail.response",{"_index":75,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["detail.response.ts",{"_index":2526,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["detail.response.ts:1",{"_index":2528,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["detailed",{"_index":4190,"title":{},"body":{"index.html":{}}}],["details",{"_index":14,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ValidationError.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["detect",{"_index":1082,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["detection",{"_index":2650,"title":{},"body":{"changelog.html":{}}}],["detectleaks",{"_index":5014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detectopenhandles",{"_index":5013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["determine",{"_index":3291,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["determining",{"_index":4570,"title":{},"body":{"license.html":{}}}],["deubg",{"_index":5820,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["dev",{"_index":5087,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["develop",{"_index":4155,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["developer",{"_index":5636,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["developers",{"_index":2805,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["development",{"_index":3345,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["device",{"_index":2963,"title":{},"body":{"changelog.html":{}}}],["dfsdfsf",{"_index":4223,"title":{},"body":{"index.html":{}}}],["di",{"_index":5444,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["diagonalsize",{"_index":848,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["dictionary",{"_index":2140,"title":{},"body":{"modules/ServerModule.html":{}}}],["die",{"_index":2837,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["diff",{"_index":4077,"title":{},"body":{"dependencies.html":{}}}],["diffenrent",{"_index":4919,"title":{},"body":{"todo.html":{}}}],["differ",{"_index":4790,"title":{},"body":{"license.html":{}}}],["different",{"_index":1807,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["differently",{"_index":4621,"title":{},"body":{"license.html":{}}}],["digits",{"_index":2942,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":1528,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["direction",{"_index":4433,"title":{},"body":{"license.html":{}}}],["directions",{"_index":4544,"title":{},"body":{"license.html":{}}}],["directly",{"_index":4332,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["directory",{"_index":2570,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["disable",{"_index":550,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["disabled",{"_index":3343,"title":{},"body":{"changelog.html":{}}}],["disablestudentteamcreation",{"_index":3866,"title":{},"body":{"changelog.html":{}}}],["disclaim",{"_index":4468,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":4801,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":4619,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":3839,"title":{},"body":{"changelog.html":{}}}],["disconnected",{"_index":3662,"title":{},"body":{"changelog.html":{}}}],["discover",{"_index":5517,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovered",{"_index":5525,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovery",{"_index":223,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"todo.html":{}}}],["discriminatorcolumn",{"_index":528,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["discriminatorvalue",{"_index":560,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["discriminatory",{"_index":4753,"title":{},"body":{"license.html":{}}}],["display",{"_index":2694,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["displayat",{"_index":487,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{}}}],["displaycolor",{"_index":676,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"classes/TaskResponse.html":{}}}],["displayed",{"_index":617,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{},"license.html":{}}}],["displays",{"_index":4355,"title":{},"body":{"license.html":{}}}],["disposable",{"_index":3614,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["dist",{"_index":5079,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["distinguished",{"_index":5658,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["distinguishing",{"_index":4794,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":4239,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":4848,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":4756,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":4310,"title":{},"body":{"license.html":{}}}],["divide",{"_index":5213,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["divides",{"_index":5190,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dn",{"_index":3202,"title":{},"body":{"changelog.html":{}}}],["docker",{"_index":2753,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["docs",{"_index":4907,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["docu",{"_index":3403,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":610,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/NewsRepo.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["documentation",{"_index":3176,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["documentbuilder",{"_index":5024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documented",{"_index":2539,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["documents",{"_index":1774,"title":{},"body":{"injectables/NewsRepo.html":{},"changelog.html":{}}}],["doe",{"_index":5053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["doesn't",{"_index":1575,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["doesnt",{"_index":5795,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["doing",{"_index":5243,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["domain",{"_index":2314,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"injectables/TaskRepo.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["domains",{"_index":4044,"title":{},"body":{"dependencies.html":{}}}],["don't",{"_index":238,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["done",{"_index":4213,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dos",{"_index":3386,"title":{},"body":{"changelog.html":{}}}],["dosomethingcrazy",{"_index":5666,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy(x,y,z",{"_index":5671,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy(x,y,z).catch(err",{"_index":5686,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy(x,y,z).then(result",{"_index":5681,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazysync(wrong",{"_index":5689,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["doubtful",{"_index":4572,"title":{},"body":{"license.html":{}}}],["down",{"_index":5630,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["downstream",{"_index":4683,"title":{},"body":{"license.html":{}}}],["driven",{"_index":5513,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["driver",{"_index":4949,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["dropdown",{"_index":2946,"title":{},"body":{"changelog.html":{}}}],["dry",{"_index":5542,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dto",{"_index":608,"title":{},"body":{"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardMapper.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoMapper.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dto's",{"_index":5424,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dto.content",{"_index":1706,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.coursename",{"_index":2266,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.createdat",{"_index":1727,"title":{},"body":{"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.creator",{"_index":1722,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.displayat",{"_index":1708,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.displaycolor",{"_index":2268,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.duedate",{"_index":2255,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.firstname",{"_index":2000,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{}}}],["dto.gridelements",{"_index":751,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["dto.id",{"_index":749,"title":{},"body":{"classes/DashboardMapper.html":{},"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/UserInfoMapper.html":{}}}],["dto.lastname",{"_index":2002,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{}}}],["dto.name",{"_index":2057,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.permissions",{"_index":1731,"title":{},"body":{"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{}}}],["dto.roles",{"_index":2008,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["dto.school",{"_index":1720,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.schoolid",{"_index":2006,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["dto.source",{"_index":1710,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.sourcedescription",{"_index":1712,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.status",{"_index":2259,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.target",{"_index":1718,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.targetid",{"_index":1714,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.targetmodel",{"_index":1716,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.title",{"_index":1704,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.unpublished",{"_index":1735,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.updatedat",{"_index":1729,"title":{},"body":{"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.updater",{"_index":1725,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto/api",{"_index":1075,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["dto/error.response",{"_index":1074,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["dto/resolveduser.dto",{"_index":2479,"title":{},"body":{"controllers/UserController.html":{}}}],["dtolist",{"_index":1657,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["dtos",{"_index":1155,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dtos/entities",{"_index":5033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["due",{"_index":3717,"title":{},"body":{"changelog.html":{}}}],["duedate",{"_index":1259,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{}}}],["dummy",{"_index":2598,"title":{},"body":{"changelog.html":{}}}],["duplicate",{"_index":3193,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["duplicated",{"_index":3133,"title":{},"body":{"changelog.html":{}}}],["duplicating",{"_index":3744,"title":{},"body":{"changelog.html":{}}}],["duplication",{"_index":237,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["duplications",{"_index":3056,"title":{},"body":{"changelog.html":{}}}],["durable",{"_index":4521,"title":{},"body":{"license.html":{}}}],["duration",{"_index":897,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["durationlogginginterceptor",{"_index":894,"title":{"injectables/DurationLoggingInterceptor.html":{}},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["during",{"_index":2631,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dwelling",{"_index":4569,"title":{},"body":{"license.html":{}}}],["dynamically",{"_index":4403,"title":{},"body":{"license.html":{}}}],["dynamicmodule",{"_index":1513,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["e",{"_index":805,"title":{},"body":{"classes/DashboardModelMapper.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["e.g",{"_index":226,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["e.property",{"_index":1134,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["e.reference.load",{"_index":807,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["e.value",{"_index":1135,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["e.xpos",{"_index":809,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["e.ypos",{"_index":810,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["e2e",{"_index":1757,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["each",{"_index":3271,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["earlier",{"_index":4327,"title":{},"body":{"license.html":{}}}],["easier",{"_index":5153,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["eathers",{"_index":1006,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["edit",{"_index":503,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{}}}],["editable",{"_index":3048,"title":{},"body":{"changelog.html":{}}}],["editor",{"_index":3757,"title":{},"body":{"changelog.html":{}}}],["edu",{"_index":2935,"title":{},"body":{"changelog.html":{}}}],["edusharing",{"_index":2779,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":4830,"title":{},"body":{"license.html":{}}}],["effected",{"_index":4465,"title":{},"body":{"license.html":{}}}],["effective",{"_index":4449,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":4846,"title":{},"body":{"license.html":{}}}],["effects",{"_index":5245,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["effortless",{"_index":5629,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["efforts",{"_index":4698,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":4849,"title":{},"body":{"license.html":{}}}],["element",{"_index":734,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["elementdto",{"_index":753,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.displaycolor",{"_index":762,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.id",{"_index":756,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.shorttitle",{"_index":760,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.title",{"_index":758,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.xposition",{"_index":766,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.yposition",{"_index":768,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elements",{"_index":743,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"injectables/NewsRepo.html":{},"classes/PaginationQuery.html":{}}}],["eligible",{"_index":3764,"title":{},"body":{"changelog.html":{}}}],["em",{"_index":268,"title":{},"body":{"injectables/BaseRepo.html":{},"classes/Course.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/DashboardRepo.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["em.flush",{"_index":5805,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["em.nativedelete(news",{"_index":5779,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["email",{"_index":1346,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["email/username",{"_index":3687,"title":{},"body":{"changelog.html":{}}}],["emails",{"_index":2931,"title":{},"body":{"changelog.html":{}}}],["embed",{"_index":5526,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["embedded",{"_index":5816,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["embodied",{"_index":4517,"title":{},"body":{"license.html":{}}}],["employer",{"_index":4856,"title":{},"body":{"license.html":{}}}],["empty",{"_index":1860,"title":{},"body":{"classes/NewsScope.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["emptyresultquery",{"_index":1852,"title":{},"body":{"classes/NewsScope.html":{},"classes/Scope.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["emptyresultquerytype",{"_index":597,"title":{},"body":{"classes/CourseScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["en",{"_index":5543,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enable",{"_index":1161,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/NewsModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["enabled",{"_index":1157,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["enabled/disabled",{"_index":3778,"title":{},"body":{"changelog.html":{}}}],["enableimplicitconversion",{"_index":1168,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["enableopenapidocs",{"_index":3963,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["enables",{"_index":4347,"title":{},"body":{"license.html":{}}}],["enabling",{"_index":3546,"title":{},"body":{"changelog.html":{}}}],["encapsulate",{"_index":5219,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulated",{"_index":5255,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulates",{"_index":5192,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulation",{"_index":5230,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encouraged",{"_index":4289,"title":{},"body":{"license.html":{}}}],["encryption",{"_index":3900,"title":{},"body":{"changelog.html":{}}}],["end",{"_index":2773,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["end2end",{"_index":5825,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["endings",{"_index":5831,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["endpoint",{"_index":2789,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["endpoints",{"_index":3315,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["enforce",{"_index":2421,"title":{},"body":{"controllers/TeamNewsController.html":{},"license.html":{}}}],["enforced",{"_index":5515,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enforcing",{"_index":4470,"title":{},"body":{"license.html":{}}}],["enough",{"_index":5273,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["enqueuing",{"_index":3853,"title":{},"body":{"changelog.html":{}}}],["enrichment",{"_index":5276,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ensure",{"_index":168,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/NewsScope.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ensures",{"_index":4171,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["ensuretokeniswhitelisted",{"_index":1457,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["entered",{"_index":4763,"title":{},"body":{"license.html":{}}}],["entire",{"_index":4492,"title":{},"body":{"license.html":{}}}],["entirely",{"_index":4779,"title":{},"body":{"license.html":{}}}],["entites",{"_index":5274,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entities",{"_index":181,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"modules/ServerModule.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entities.foreach((entity",{"_index":298,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["entities.map((n",{"_index":292,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["entities.ts",{"_index":3967,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["entitiyids",{"_index":203,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entity",{"_index":172,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"interfaces/LessonProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfoResponse.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entity.grid.map((element",{"_index":817,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["entity.ts",{"_index":5423,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["entity/course.entity",{"_index":1192,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["entity/role.entity",{"_index":1213,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{}}}],["entity/school.entity",{"_index":1193,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["entity/task.entity",{"_index":1339,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskWithStatusVo.html":{}}}],["entity/team.entity",{"_index":1194,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["entityid",{"_index":162,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/Course.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReference.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolNews.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"injectables/UserRepo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["entityids",{"_index":2229,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["entitymanager",{"_index":266,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["entityname",{"_index":2164,"title":{},"body":{"modules/ServerModule.html":{}}}],["entitypermissions",{"_index":196,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entitypermissions.includes(p",{"_index":200,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entityschema",{"_index":235,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["entries",{"_index":2611,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entry",{"_index":1425,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/NewsController.html":{}}}],["enum",{"_index":514,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/IFindOptions.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{}}}],["enumeration",{"_index":3772,"title":{},"body":{"changelog.html":{}}}],["enumerations",{"_index":4140,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumname",{"_index":629,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{}}}],["env",{"_index":2642,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["env/config",{"_index":4884,"title":{},"body":{"todo.html":{}}}],["environment",{"_index":3346,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["environments",{"_index":2960,"title":{},"body":{"changelog.html":{}}}],["equal",{"_index":3904,"title":{},"body":{"changelog.html":{}}}],["equivalent",{"_index":4424,"title":{},"body":{"license.html":{}}}],["err",{"_index":2449,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["err.code",{"_index":5687,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["error",{"_index":54,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/CoreModule.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["error(message",{"_index":1241,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["error.filter",{"_index":925,"title":{},"body":{"modules/ErrorModule.html":{}}}],["error.filter.ts",{"_index":1059,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["error.filter.ts:119",{"_index":1064,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:122",{"_index":1068,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:130",{"_index":1070,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.getresponse",{"_index":1101,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.interface.ts",{"_index":986,"title":{},"body":{"interfaces/FeathersError.html":{},"coverage.html":{}}}],["error.response",{"_index":74,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{}}}],["error.response.ts",{"_index":63,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["error.response.ts:23",{"_index":72,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.response.ts:8",{"_index":70,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.stack",{"_index":1138,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["error.validationerrors.map",{"_index":1129,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["error/error.module",{"_index":372,"title":{},"body":{"modules/CoreModule.html":{}}}],["errorhandler",{"_index":5328,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["errormodule",{"_index":352,"title":{"modules/ErrorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules.html":{},"overview.html":{}}}],["errormsg",{"_index":1128,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errorresponse",{"_index":43,"title":{"classes/ErrorResponse.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/ValidationError.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["errorresponse(snaketype",{"_index":1112,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["errorresponse(this.type",{"_index":330,"title":{},"body":{"classes/BusinessError.html":{}}}],["errorresponse(type",{"_index":1097,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":68,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["errros",{"_index":3443,"title":{},"body":{"changelog.html":{}}}],["es6",{"_index":4046,"title":{},"body":{"dependencies.html":{}}}],["eslint",{"_index":549,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["eslint/no",{"_index":554,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{}}}],["eslint/restrict",{"_index":1130,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["eslintrc.js",{"_index":5120,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["especially",{"_index":5203,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["essential",{"_index":4387,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["establish",{"_index":5182,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["established",{"_index":2220,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"changelog.html":{}}}],["etc",{"_index":835,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["evaluate",{"_index":5617,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["evaluated",{"_index":5618,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["even",{"_index":3711,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["event",{"_index":2653,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["events",{"_index":2907,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["eventual",{"_index":3165,"title":{},"body":{"changelog.html":{}}}],["eventually",{"_index":3227,"title":{},"body":{"changelog.html":{}}}],["everyone",{"_index":4237,"title":{},"body":{"license.html":{}}}],["everything",{"_index":3261,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["everywhere",{"_index":1435,"title":{},"body":{"injectables/JwtStrategy.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exact",{"_index":4326,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["example",{"_index":4401,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exceeds",{"_index":3597,"title":{},"body":{"changelog.html":{}}}],["except",{"_index":2849,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["exception",{"_index":921,"title":{},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exception.constructor.name.replace('exception",{"_index":1094,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.getstatus",{"_index":1089,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.message",{"_index":1091,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.stack",{"_index":1124,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptionfactory",{"_index":1180,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["exceptionfilter",{"_index":1060,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["exceptionname",{"_index":1093,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptions",{"_index":1087,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exchange",{"_index":1520,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ServerModule.html":{}}}],["exchangeable",{"_index":5167,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exchanges",{"_index":1526,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["excluded",{"_index":4559,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":3104,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["exclusion",{"_index":3438,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["exclusive",{"_index":4723,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":4427,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":4772,"title":{},"body":{"license.html":{}}}],["executable",{"_index":4382,"title":{},"body":{"license.html":{}}}],["execute",{"_index":1758,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["execute/rollback",{"_index":5377,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["executed",{"_index":1763,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["executes",{"_index":5082,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["executing",{"_index":4338,"title":{},"body":{"license.html":{}}}],["execution",{"_index":2427,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["executioncontext",{"_index":903,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exercise",{"_index":4699,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":4466,"title":{},"body":{"license.html":{}}}],["exist",{"_index":1268,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["existing",{"_index":1378,"title":{},"body":{"interfaces/JwtConstants.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["existinguser",{"_index":5575,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["exists",{"_index":1427,"title":{},"body":{"injectables/JwtStrategy.html":{},"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exit",{"_index":2698,"title":{},"body":{"changelog.html":{}}}],["exp",{"_index":1385,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["expect",{"_index":5236,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["expect(code).to",{"_index":5688,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(data.length).tobe(0",{"_index":5790,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(dosomethingcrazy(x,y,z)).to",{"_index":5669,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(dosomethingcrazysync(wrong",{"_index":5691,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(findallspy).tohavebeencalledwith(...expectedparams",{"_index":5749,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(result).to",{"_index":5672,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(service.findonebyidforuser(anothernewsid",{"_index":5754,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(total).tobe(0",{"_index":5789,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expectation",{"_index":5662,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expected",{"_index":4576,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["expectedparams",{"_index":5748,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expecting",{"_index":5685,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expects",{"_index":3462,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["expert",{"_index":3848,"title":{},"body":{"changelog.html":{}}}],["experts",{"_index":5518,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["expexting",{"_index":5677,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expiration",{"_index":1403,"title":{},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtValidationAdapter.html":{},"changelog.html":{}}}],["expiresin",{"_index":1397,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["explicit",{"_index":1018,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TimeoutInterceptor.html":{}}}],["explicitly",{"_index":4418,"title":{},"body":{"license.html":{}}}],["export",{"_index":48,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"interfaces/LessonProperties.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["exported",{"_index":5438,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exporting",{"_index":3468,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exports",{"_index":147,"title":{},"body":{"modules/AuthorizationModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/UserModule.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["expose",{"_index":2641,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposed",{"_index":5226,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposing",{"_index":5292,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["express",{"_index":1015,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["expressed",{"_index":4803,"title":{},"body":{"license.html":{}}}],["expressions",{"_index":1132,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["expressly",{"_index":4649,"title":{},"body":{"license.html":{}}}],["extend",{"_index":1158,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["extended",{"_index":1450,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["extending",{"_index":4982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extends",{"_index":8,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/FeathersError.html":{},"classes/File.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"interfaces/LessonProperties.html":{},"injectables/Logger.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"interfaces/PlainTextMailContent.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskScope.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/ValidationError.html":{},"additional-documentation/nestjs-application.html":{}}}],["extensions",{"_index":4503,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["extent",{"_index":4357,"title":{},"body":{"license.html":{}}}],["external",{"_index":3096,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["externalauthconfig",{"_index":1374,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["externalid",{"_index":488,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["externally",{"_index":3049,"title":{},"body":{"changelog.html":{}}}],["externaluseridentifier",{"_index":1348,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["externaluseridentifier'})@unique",{"_index":2465,"title":{},"body":{"classes/User.html":{}}}],["extract",{"_index":5279,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["extracting",{"_index":1177,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["extractjwt",{"_index":1411,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":1419,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extracts",{"_index":5388,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["extremely",{"_index":3412,"title":{},"body":{"changelog.html":{}}}],["f",{"_index":4636,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["f0",{"_index":623,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["f23f76",{"_index":687,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["facade",{"_index":3331,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["facilitate",{"_index":5645,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["facilitating",{"_index":4785,"title":{},"body":{"license.html":{}}}],["facilities",{"_index":4428,"title":{},"body":{"license.html":{}}}],["factory",{"_index":5622,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["fail",{"_index":3065,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["failed",{"_index":56,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["failing",{"_index":5826,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["fails",{"_index":3102,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["failure",{"_index":4825,"title":{},"body":{"license.html":{}}}],["fair",{"_index":4423,"title":{},"body":{"license.html":{}}}],["fake",{"_index":682,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["fallback",{"_index":3325,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":978,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"interfaces/LessonProperties.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["family",{"_index":4564,"title":{},"body":{"license.html":{}}}],["fantasy",{"_index":4206,"title":{},"body":{"index.html":{}}}],["fashion",{"_index":4324,"title":{},"body":{"license.html":{}}}],["fast",{"_index":5537,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["favicon",{"_index":4117,"title":{},"body":{"dependencies.html":{}}}],["favor",{"_index":4573,"title":{},"body":{"license.html":{}}}],["feathers",{"_index":150,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/JwtConstants.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathers/express",{"_index":5301,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["feathers/feathers",{"_index":961,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["feathers/feathers.module",{"_index":148,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["feathersapp",{"_index":1024,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["feathersapp.service(path",{"_index":1036,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["feathersauthprovider",{"_index":145,"title":{"injectables/FeathersAuthProvider.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["featherserror",{"_index":984,"title":{"interfaces/FeathersError.html":{}},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["featherserror)?.type",{"_index":1077,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["feathersexpress",{"_index":1031,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["feathersjs/authentication",{"_index":3992,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/configuration",{"_index":3994,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/errors",{"_index":3995,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/express",{"_index":1016,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"dependencies.html":{}}}],["feathersjs/feathers",{"_index":3996,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/socketio",{"_index":3997,"title":{},"body":{"dependencies.html":{}}}],["feathersmodule",{"_index":143,"title":{"modules/FeathersModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/FeathersModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersservice",{"_index":1002,"title":{"interfaces/FeathersService.html":{}},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{}}}],["feathersserviceparams",{"_index":1009,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feathersserviceprovider",{"_index":948,"title":{"injectables/FeathersServiceProvider.html":{}},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersserviceresponse",{"_index":1019,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feature",{"_index":2625,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["feature/sc",{"_index":4205,"title":{},"body":{"index.html":{}}}],["feature_multiple_s3_providers_enabled=true",{"_index":3896,"title":{},"body":{"changelog.html":{}}}],["feature_prometheus_enabled",{"_index":3307,"title":{},"body":{"changelog.html":{}}}],["feature_show_version_enabled",{"_index":3392,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":5129,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["federal",{"_index":3284,"title":{},"body":{"changelog.html":{}}}],["fee",{"_index":4485,"title":{},"body":{"license.html":{}}}],["feedback",{"_index":3806,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":5141,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["fetch",{"_index":5551,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["fetching",{"_index":3353,"title":{},"body":{"changelog.html":{}}}],["ffffff",{"_index":5038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["field",{"_index":2529,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["fieldname",{"_index":396,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"interfaces/LessonProperties.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["fields",{"_index":4874,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["figure",{"_index":5185,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["file",{"_index":5,"title":{"classes/File.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"interfaces/LessonProperties.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["file.entity",{"_index":1302,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["fileids",{"_index":1311,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["filename",{"_index":5104,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["filenames",{"_index":2709,"title":{},"body":{"changelog.html":{}}}],["files",{"_index":1046,"title":{},"body":{"classes/File.html":{},"interfaces/IFileProperties.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["filestorage",{"_index":2957,"title":{},"body":{"changelog.html":{}}}],["filestorage/security",{"_index":2677,"title":{},"body":{"changelog.html":{}}}],["filter",{"_index":922,"title":{},"body":{"modules/ErrorModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["filter((submission",{"_index":2402,"title":{},"body":{"injectables/TaskUC.html":{}}}],["filter.query.ts",{"_index":1670,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filter.query.ts:17",{"_index":1676,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:25",{"_index":1674,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:33",{"_index":1680,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.ts",{"_index":1867,"title":{},"body":{"interfaces/NewsTargetFilter.html":{},"coverage.html":{}}}],["filter/global",{"_index":924,"title":{},"body":{"modules/ErrorModule.html":{}}}],["filtered",{"_index":3859,"title":{},"body":{"changelog.html":{}}}],["filterquery",{"_index":593,"title":{},"body":{"classes/CourseScope.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{}}}],["filters",{"_index":1679,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["final",{"_index":5582,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["finally",{"_index":4659,"title":{},"body":{"license.html":{}}}],["find",{"_index":1005,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["find(params",{"_index":1008,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["findall",{"_index":1608,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["findall(currentuser",{"_index":1620,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{}}}],["findall(parentids",{"_index":2283,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findall(targets",{"_index":1768,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findallbytaskids",{"_index":2185,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["findallbytaskids(taskids",{"_index":2189,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["findallbyuserid",{"_index":566,"title":{},"body":{"injectables/CourseRepo.html":{},"injectables/SubmissionRepo.html":{}}}],["findallbyuserid(userid",{"_index":570,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/SubmissionRepo.html":{}}}],["findallcurrent",{"_index":2278,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallcurrent(parentids",{"_index":2288,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallforstudent",{"_index":567,"title":{},"body":{"injectables/CourseRepo.html":{},"injectables/TaskUC.html":{}}}],["findallforstudent(userid",{"_index":572,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/TaskUC.html":{}}}],["findallforteacher",{"_index":568,"title":{},"body":{"injectables/CourseRepo.html":{},"injectables/TaskUC.html":{}}}],["findallforteacher(userid",{"_index":574,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/TaskUC.html":{}}}],["findallforteam",{"_index":2414,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["findallforteam(teamid",{"_index":2415,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["findallforuser",{"_index":1869,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallforuser(userid",{"_index":1880,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallspy",{"_index":5745,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["findbycourseids",{"_index":473,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["findbycourseids(courseids",{"_index":475,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["findbyid",{"_index":2020,"title":{},"body":{"injectables/RoleRepo.html":{},"injectables/UserRepo.html":{}}}],["findbyid(id",{"_index":2024,"title":{},"body":{"injectables/RoleRepo.html":{},"injectables/UserRepo.html":{}}}],["findbyname",{"_index":2021,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["findbyname(name",{"_index":2026,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["findforuser",{"_index":648,"title":{},"body":{"controllers/DashboardController.html":{}}}],["finding",{"_index":1200,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["findnewsandcount",{"_index":1766,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findnewsandcount(query",{"_index":1771,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findone",{"_index":1609,"title":{},"body":{"controllers/NewsController.html":{}}}],["findone(newsid",{"_index":1625,"title":{},"body":{"controllers/NewsController.html":{}}}],["findoneandupdate",{"_index":3194,"title":{},"body":{"changelog.html":{}}}],["findonebyid",{"_index":1767,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findonebyid(id",{"_index":1776,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findonebyidforuser",{"_index":1870,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findonebyidforuser(id",{"_index":1886,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findoneorfailhandler",{"_index":2163,"title":{},"body":{"modules/ServerModule.html":{}}}],["findtasksandcount",{"_index":2279,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findtasksandcount(query",{"_index":2290,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["finduser(userid",{"_index":5335,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["findvisiblelessons",{"_index":2280,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findvisiblelessons(parentids",{"_index":2292,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["finished",{"_index":5601,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["first",{"_index":1885,"title":{},"body":{"injectables/NewsUc.html":{},"classes/UserInfoResponse.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["firstname",{"_index":1215,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"classes/ResolvedUser.html":{},"classes/User.html":{},"classes/UserInfoResponse.html":{},"miscellaneous/variables.html":{}}}],["fit",{"_index":5263,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["fitness",{"_index":4805,"title":{},"body":{"license.html":{}}}],["fix",{"_index":2686,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["fixable",{"_index":5117,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["fixed",{"_index":2547,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["fixes",{"_index":3255,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["fixtures",{"_index":5715,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["flag",{"_index":1678,"title":{},"body":{"classes/NewsFilterQuery.html":{},"changelog.html":{}}}],["flow",{"_index":4408,"title":{},"body":{"license.html":{}}}],["flush",{"_index":256,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["fly",{"_index":2969,"title":{},"body":{"changelog.html":{}}}],["focus",{"_index":5556,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["focuses",{"_index":5757,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["folder",{"_index":4215,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["folders",{"_index":5418,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["follow",{"_index":3781,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["following",{"_index":3034,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["foo",{"_index":5135,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["forallgrouptypes",{"_index":590,"title":{},"body":{"classes/CourseScope.html":{}}}],["forallgrouptypes(userid",{"_index":579,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["forbid",{"_index":4464,"title":{},"body":{"license.html":{}}}],["forbidden",{"_index":5497,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["forbiddenexception('jwt",{"_index":4980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forbidnonwhitelisted",{"_index":1174,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["force",{"_index":3328,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["forcearray",{"_index":3985,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["forcearray(arrayofobjects).reduce(reducer",{"_index":2099,"title":{},"body":{"classes/Scope.html":{}}}],["forcearray(input",{"_index":2082,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/functions.html":{}}}],["forcefullsync",{"_index":3326,"title":{},"body":{"changelog.html":{}}}],["foreign",{"_index":5815,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["forget",{"_index":5751,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["form",{"_index":3807,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["format",{"_index":421,"title":{},"body":{"classes/Course.html":{},"classes/ErrorResponse.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["formats",{"_index":3696,"title":{},"body":{"changelog.html":{}}}],["formatting",{"_index":3517,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["forms",{"_index":4512,"title":{},"body":{"license.html":{}}}],["forroot",{"_index":1508,"title":{},"body":{"modules/MailModule.html":{},"modules/MongoMemoryDatabaseModule.html":{}}}],["forroot(options",{"_index":1509,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{}}}],["forwarding",{"_index":2847,"title":{},"body":{"changelog.html":{}}}],["found",{"_index":2167,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["foundation",{"_index":4234,"title":{},"body":{"license.html":{}}}],["framework",{"_index":5151,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["framework/feature",{"_index":5382,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["frameworks",{"_index":5297,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["free",{"_index":4232,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["freedom",{"_index":4253,"title":{},"body":{"license.html":{}}}],["freeport",{"_index":4057,"title":{},"body":{"dependencies.html":{}}}],["from/in",{"_index":5507,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["from/to",{"_index":5506,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["frontend",{"_index":2879,"title":{},"body":{"changelog.html":{}}}],["fulfilled",{"_index":5303,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["fulfilling",{"_index":4452,"title":{},"body":{"license.html":{}}}],["full",{"_index":2968,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["fully",{"_index":685,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["function",{"_index":1098,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"classes/Scope.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["functional",{"_index":360,"title":{},"body":{"modules/CoreModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["functionality",{"_index":5195,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["functioning",{"_index":4587,"title":{},"body":{"license.html":{}}}],["functions",{"_index":4145,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["further",{"_index":4540,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["future",{"_index":505,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{}}}],["g",{"_index":5133,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["gate",{"_index":2976,"title":{},"body":{"changelog.html":{}}}],["gates",{"_index":5118,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["general",{"_index":2728,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["generalerror",{"_index":3157,"title":{},"body":{"changelog.html":{}}}],["generally",{"_index":4399,"title":{},"body":{"license.html":{}}}],["generate",{"_index":3268,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["generated",{"_index":4182,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["generateregistrationlink",{"_index":3803,"title":{},"body":{"changelog.html":{}}}],["generating",{"_index":5124,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["generation",{"_index":3046,"title":{},"body":{"changelog.html":{}}}],["generator",{"_index":3451,"title":{},"body":{"changelog.html":{}}}],["generic",{"_index":5254,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["get(':id",{"_index":1626,"title":{},"body":{"controllers/NewsController.html":{}}}],["get(':teamid/news",{"_index":2416,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["get('me",{"_index":2476,"title":{},"body":{"controllers/UserController.html":{}}}],["get(id",{"_index":1012,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["getdashboardbyid",{"_index":822,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["getdashboardbyid(id",{"_index":827,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["getdefaultmaxduedate",{"_index":2281,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["getdescriptions",{"_index":383,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["getdetails",{"_index":19,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ValidationError.html":{}}}],["getentitypermissions",{"_index":157,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["getentitypermissions(userid",{"_index":176,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["getgrid",{"_index":665,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["gethello",{"_index":871,"title":{},"body":{"controllers/DelayController.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{}}}],["getid",{"_index":666,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["getinout",{"_index":2108,"title":{},"body":{"classes/ServerConsole.html":{}}}],["getinout(whatever",{"_index":2114,"title":{},"body":{"classes/ServerConsole.html":{}}}],["getitems",{"_index":2401,"title":{},"body":{"injectables/TaskUC.html":{}}}],["getmetadata",{"_index":678,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["getnewspermissions",{"_index":1871,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getnewspermissions(userid",{"_index":1888,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getnumberofstudents",{"_index":384,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["getparentid",{"_index":459,"title":{},"body":{"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{}}}],["getpermittedcourses",{"_index":2211,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["getpermittedcourses(userid",{"_index":2214,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["getpermittedentities",{"_index":158,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["getpermittedentities(userid",{"_index":179,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["getpermittedschools",{"_index":942,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getpermittedschools(userid",{"_index":950,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getpermittedtargets",{"_index":943,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{}}}],["getpermittedtargets(userid",{"_index":952,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{}}}],["getposition",{"_index":691,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["getquery",{"_index":2069,"title":{},"body":{"classes/Scope.html":{}}}],["getrequiredpermissions",{"_index":1872,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getrequiredpermissions(unpublished",{"_index":1891,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getresponse",{"_index":20,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ValidationError.html":{}}}],["getservice",{"_index":1037,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["getservice(path",{"_index":1023,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["gettargetfilters",{"_index":1873,"title":{},"body":{"injectables/NewsUc.html":{}}}],["gettargetfilters(userid",{"_index":1894,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getter",{"_index":425,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["gettimeout",{"_index":2437,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["getting",{"_index":2533,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["getuser",{"_index":944,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuser(userid",{"_index":954,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserschoolpermissions",{"_index":945,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserschoolpermissions(userid",{"_index":956,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getusersdashboard",{"_index":823,"title":{},"body":{"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"interfaces/IDashboardRepo.html":{}}}],["getusertargetpermissions",{"_index":946,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["getusertargetpermissions(userid",{"_index":958,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserwithpermissions",{"_index":2507,"title":{},"body":{"injectables/UserUC.html":{}}}],["getuserwithpermissions(currentuser",{"_index":2510,"title":{},"body":{"injectables/UserUC.html":{}}}],["git",{"_index":4161,"title":{"additional-documentation/nestjs-application/git.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["git+https://github.com/hpi",{"_index":4065,"title":{},"body":{"dependencies.html":{}}}],["git+https://github.com/leeroybrun/mongoose",{"_index":4088,"title":{},"body":{"dependencies.html":{}}}],["git+https://github.com/schul",{"_index":4079,"title":{},"body":{"dependencies.html":{}}}],["github",{"_index":2763,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["give",{"_index":4482,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["given",{"_index":1614,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["gives",{"_index":992,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["giving",{"_index":4488,"title":{},"body":{"license.html":{}}}],["global",{"_index":367,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["globalconstants",{"_index":1048,"title":{"interfaces/GlobalConstants.html":{}},"body":{"interfaces/GlobalConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["globalerrorfilter",{"_index":923,"title":{"classes/GlobalErrorFilter.html":{}},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["globalerrorfilter.logger",{"_index":1147,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["globally",{"_index":1358,"title":{},"body":{"modules/InterceptorModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["globals",{"_index":1053,"title":{},"body":{"interfaces/GlobalConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["globals.js",{"_index":3902,"title":{},"body":{"changelog.html":{}}}],["globalvalidationpipe",{"_index":1150,"title":{"classes/GlobalValidationPipe.html":{}},"body":{"classes/GlobalValidationPipe.html":{},"modules/ValidationModule.html":{},"coverage.html":{}}}],["gnu",{"_index":4227,"title":{},"body":{"license.html":{}}}],["go",{"_index":2316,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["goal",{"_index":4915,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["goals",{"_index":4303,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["golden",{"_index":5533,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["golevelup/nestjs",{"_index":1515,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"dependencies.html":{}}}],["good",{"_index":5665,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["governed",{"_index":4611,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":4304,"title":{},"body":{"license.html":{}}}],["gracefully",{"_index":3654,"title":{},"body":{"changelog.html":{}}}],["grade",{"_index":1295,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"changelog.html":{}}}],["gradecomment",{"_index":1296,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["graded",{"_index":1336,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{}}}],["gradedstudentids",{"_index":2399,"title":{},"body":{"injectables/TaskUC.html":{}}}],["gradefileids",{"_index":1313,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["gradefiles",{"_index":1297,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["grant",{"_index":4631,"title":{},"body":{"license.html":{}}}],["granted",{"_index":4413,"title":{},"body":{"license.html":{}}}],["grants",{"_index":4678,"title":{},"body":{"license.html":{}}}],["graph",{"_index":4864,"title":{},"body":{"modules.html":{}}}],["gratis",{"_index":4539,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":4840,"title":{},"body":{"license.html":{}}}],["grid",{"_index":664,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardModelMapper.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["gridarray",{"_index":847,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["gridelement",{"_index":694,"title":{"classes/GridElement.html":{}},"body":{"classes/DashboardEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"coverage.html":{}}}],["gridelement(e.id",{"_index":808,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["gridelement.getmetadata",{"_index":755,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["gridelement.getmetadata().displaycolor",{"_index":796,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["gridelement.getmetadata().title",{"_index":798,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["gridelement.getposition",{"_index":765,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["gridelement.getposition().x",{"_index":788,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["gridelement.getposition().y",{"_index":790,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["gridelementreferencemetadata",{"_index":674,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"miscellaneous/typealiases.html":{}}}],["gridelements",{"_index":727,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["group",{"_index":2217,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"changelog.html":{}}}],["grouping",{"_index":3073,"title":{},"body":{"changelog.html":{}}}],["groups",{"_index":2221,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["gt",{"_index":1865,"title":{},"body":{"classes/NewsScope.html":{}}}],["gte",{"_index":2348,"title":{},"body":{"classes/TaskScope.html":{}}}],["guarantee",{"_index":1661,"title":{},"body":{"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guard",{"_index":4985,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guards",{"_index":5447,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guest",{"_index":5393,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["guest:guest",{"_index":5073,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["guide",{"_index":5791,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["guidelines",{"_index":5256,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["halper",{"_index":2457,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["handle",{"_index":3226,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handled",{"_index":303,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handler",{"_index":3514,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["handles",{"_index":1115,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["handling",{"_index":363,"title":{},"body":{"modules/CoreModule.html":{},"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["happen",{"_index":5179,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["happened",{"_index":5482,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["happens",{"_index":5738,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["hard",{"_index":5201,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hardcodedtestdashboardid",{"_index":844,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["hash",{"_index":3340,"title":{},"body":{"changelog.html":{}}}],["haspermission",{"_index":2387,"title":{},"body":{"injectables/TaskUC.html":{}}}],["haspermissions",{"_index":198,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["hastaskdashboardpermission",{"_index":2352,"title":{},"body":{"injectables/TaskUC.html":{}}}],["hastaskdashboardpermission(currentuser",{"_index":2362,"title":{},"body":{"injectables/TaskUC.html":{}}}],["haswritepermission",{"_index":1329,"title":{},"body":{"interfaces/ITaskParent.html":{}}}],["haswritepermission(userid",{"_index":1263,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["having",{"_index":4426,"title":{},"body":{"license.html":{}}}],["header",{"_index":1392,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["headers",{"_index":5323,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["heart",{"_index":5318,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["heartened",{"_index":4288,"title":{},"body":{"license.html":{}}}],["heavily",{"_index":5229,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hell",{"_index":428,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["help",{"_index":5704,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helparea",{"_index":2944,"title":{},"body":{"changelog.html":{}}}],["helpdesk",{"_index":3198,"title":{},"body":{"changelog.html":{}}}],["helper",{"_index":1081,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["helpers",{"_index":3372,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["helpful",{"_index":5678,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helps",{"_index":5664,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helpto",{"_index":5102,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["hence",{"_index":5313,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["here",{"_index":231,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/InterceptorModule.html":{},"injectables/JwtValidationAdapter.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hereafter",{"_index":4720,"title":{},"body":{"license.html":{}}}],["heroes",{"_index":5410,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hidden",{"_index":1472,"title":{},"body":{"classes/Lesson.html":{},"interfaces/LessonProperties.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["hide",{"_index":5557,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hiding",{"_index":5166,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hidrive",{"_index":2660,"title":{},"body":{"changelog.html":{}}}],["hierarchical",{"_index":3472,"title":{},"body":{"changelog.html":{}}}],["high",{"_index":5175,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["higher",{"_index":5501,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hint",{"_index":3172,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hints",{"_index":5242,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["history",{"_index":4078,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["history.git",{"_index":4081,"title":{},"body":{"dependencies.html":{}}}],["holder",{"_index":4656,"title":{},"body":{"license.html":{}}}],["holders",{"_index":4618,"title":{},"body":{"license.html":{}}}],["holding",{"_index":3069,"title":{},"body":{"changelog.html":{}}}],["homework",{"_index":2956,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["homeworkid",{"_index":1305,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["homeworks",{"_index":1264,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"changelog.html":{}}}],["homogeneitysolve",{"_index":5181,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hook",{"_index":3265,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hooked",{"_index":5314,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["hooks",{"_index":3411,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hope",{"_index":429,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"license.html":{}}}],["host",{"_index":1066,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["host.switchtohttp",{"_index":1144,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["hosts",{"_index":4546,"title":{},"body":{"license.html":{}}}],["hot",{"_index":4908,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["hotfix",{"_index":3533,"title":{},"body":{"changelog.html":{}}}],["hotfixes",{"_index":3032,"title":{},"body":{"changelog.html":{}}}],["household",{"_index":4565,"title":{},"body":{"license.html":{}}}],["hpi",{"_index":2143,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["html",{"_index":495,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"dependencies.html":{}}}],["htmlcontent",{"_index":103,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["htmlmailcontent",{"_index":105,"title":{"interfaces/HtmlMailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["http",{"_index":65,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["http://fsf.org",{"_index":4236,"title":{},"body":{"license.html":{}}}],["http://www.gnu.org/licenses",{"_index":4860,"title":{},"body":{"license.html":{}}}],["httpexception",{"_index":308,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["httpexceptions",{"_index":5609,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["https://docs.nestjs.com/first",{"_index":5448,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://github.com/goldbergyoni/javascript",{"_index":5793,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["https://github.com/hpi",{"_index":4890,"title":{},"body":{"todo.html":{}}}],["https://github.com/mikro",{"_index":5545,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://hpi",{"_index":2826,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["https://jestjs.io",{"_index":5143,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://khalilstemmler.com/articles/oop",{"_index":5554,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://khalilstemmler.com/articles/software",{"_index":5486,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://mikro",{"_index":5144,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://min.io",{"_index":5146,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nestjs.com",{"_index":5142,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nuxtjs.org",{"_index":5286,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["https://stackoverflow.com/a/61909588",{"_index":4877,"title":{},"body":{"todo.html":{}}}],["https://vuejs.org",{"_index":5288,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["https://www.rabbitmq.com",{"_index":5147,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["httpstatus",{"_index":45,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/ValidationError.html":{}}}],["httpstatus.bad_request",{"_index":58,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["httpstatus.conflict",{"_index":324,"title":{},"body":{"classes/BusinessError.html":{},"classes/ErrorResponse.html":{}}}],["hub",{"_index":3379,"title":{},"body":{"changelog.html":{}}}],["human",{"_index":5613,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["hydra",{"_index":2715,"title":{},"body":{"changelog.html":{}}}],["i...properties",{"_index":434,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["i.e",{"_index":5307,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["iat",{"_index":1384,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["icons",{"_index":5828,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["icoursegroupproperties",{"_index":460,"title":{"interfaces/ICourseGroupProperties.html":{}},"body":{"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"coverage.html":{}}}],["icourseproperties",{"_index":386,"title":{"interfaces/ICourseProperties.html":{}},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"coverage.html":{}}}],["icreatenews",{"_index":1189,"title":{"interfaces/ICreateNews.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["icurrentuser",{"_index":1204,"title":{"interfaces/ICurrentUser.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/JwtPayload.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserUC.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id",{"_index":209,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"classes/School.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["id.pipe.ts",{"_index":1978,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id.pipe.ts:7",{"_index":1980,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["id.ts",{"_index":4936,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["idashboardrepo",{"_index":832,"title":{"interfaces/IDashboardRepo.html":{}},"body":{"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"interfaces/IDashboardRepo.html":{},"coverage.html":{}}}],["identical",{"_index":1453,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["identifiable",{"_index":4744,"title":{},"body":{"license.html":{}}}],["identified",{"_index":5619,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identifiedreference",{"_index":706,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["identifier",{"_index":931,"title":{},"body":{"classes/ErrorResponse.html":{},"coverage.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identifiers",{"_index":1452,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["identify",{"_index":5642,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["identity",{"_index":5806,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["idm",{"_index":3319,"title":{},"body":{"changelog.html":{}}}],["ids",{"_index":182,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"injectables/RoleUC.html":{},"injectables/TaskRepo.html":{},"changelog.html":{}}}],["ierrortype",{"_index":310,"title":{"interfaces/IErrorType.html":{}},"body":{"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["if(enableuseractivation",{"_index":5568,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(existinguser.length",{"_index":5577,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(sendwelcomeemailtouser",{"_index":5570,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ifileproperties",{"_index":1043,"title":{"interfaces/IFileProperties.html":{}},"body":{"classes/File.html":{},"interfaces/IFileProperties.html":{},"coverage.html":{}}}],["ifindoptions",{"_index":1221,"title":{"interfaces/IFindOptions.html":{}},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"coverage.html":{}}}],["iframe",{"_index":3185,"title":{},"body":{"changelog.html":{}}}],["ignore",{"_index":3579,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["ignoreexpiration",{"_index":1420,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ignoring",{"_index":3716,"title":{},"body":{"changelog.html":{}}}],["igridelement",{"_index":670,"title":{"interfaces/IGridElement.html":{}},"body":{"classes/DashboardEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"coverage.html":{}}}],["igridelementreference",{"_index":677,"title":{"interfaces/IGridElementReference.html":{}},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"coverage.html":{}}}],["ilogger",{"_index":1233,"title":{"interfaces/ILogger.html":{}},"body":{"interfaces/ILogger.html":{},"injectables/Logger.html":{},"coverage.html":{}}}],["image",{"_index":2584,"title":{},"body":{"changelog.html":{}}}],["imateapotexception",{"_index":1014,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["imateapotexception('this",{"_index":1032,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["immediately",{"_index":1001,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["immutable",{"_index":3079,"title":{},"body":{"changelog.html":{}}}],["imp",{"_index":3362,"title":{},"body":{"changelog.html":{}}}],["impact",{"_index":4172,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["implement",{"_index":1483,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implementation",{"_index":833,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["implementations",{"_index":5449,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["implemented",{"_index":1381,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implements",{"_index":680,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReference.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"injectables/TimeoutInterceptor.html":{}}}],["implications",{"_index":5498,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["implicit",{"_index":5804,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["implied",{"_index":4766,"title":{},"body":{"license.html":{}}}],["import",{"_index":44,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"interfaces/LessonProperties.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["important",{"_index":1020,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TaskAuthorizationService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["importer",{"_index":3605,"title":{},"body":{"changelog.html":{}}}],["importhash",{"_index":3508,"title":{},"body":{"changelog.html":{}}}],["importhashes",{"_index":3760,"title":{},"body":{"changelog.html":{}}}],["importing",{"_index":4711,"title":{},"body":{"license.html":{}}}],["imports",{"_index":126,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/LearnroomModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["impose",{"_index":4641,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":4769,"title":{},"body":{"license.html":{}}}],["impossile",{"_index":1859,"title":{},"body":{"classes/NewsScope.html":{}}}],["improve",{"_index":2800,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":4282,"title":{},"body":{"license.html":{}}}],["improves",{"_index":5624,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["in/out",{"_index":5425,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["inability",{"_index":4819,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":4822,"title":{},"body":{"license.html":{}}}],["inc",{"_index":4235,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":4816,"title":{},"body":{"license.html":{}}}],["include",{"_index":221,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Scope.html":{},"changelog.html":{},"license.html":{}}}],["included",{"_index":4383,"title":{},"body":{"license.html":{}}}],["includes",{"_index":4342,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["including",{"_index":3408,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["inclusion",{"_index":4511,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":1163,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["incomingmessage",{"_index":3455,"title":{},"body":{"changelog.html":{}}}],["incomplete",{"_index":3876,"title":{},"body":{"changelog.html":{}}}],["incorporate",{"_index":4287,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":4786,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":4568,"title":{},"body":{"license.html":{}}}],["increase",{"_index":3001,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["increased",{"_index":3869,"title":{},"body":{"changelog.html":{}}}],["increases",{"_index":5281,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["indemnification",{"_index":4637,"title":{},"body":{"license.html":{}}}],["independant",{"_index":3910,"title":{},"body":{"changelog.html":{}}}],["independend",{"_index":5585,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["independent",{"_index":4501,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["independently",{"_index":5324,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"interfaces/LessonProperties.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index()@manytomany('user",{"_index":400,"title":{},"body":{"classes/Course.html":{}}}],["index()@manytoone('school",{"_index":395,"title":{},"body":{"classes/Course.html":{}}}],["index({name",{"_index":2469,"title":{},"body":{"classes/User.html":{}}}],["index.ts",{"_index":4871,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["indexed",{"_index":3733,"title":{},"body":{"changelog.html":{}}}],["indexes",{"_index":2882,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["indicate",{"_index":4681,"title":{},"body":{"license.html":{}}}],["indicating",{"_index":4647,"title":{},"body":{"license.html":{}}}],["individual",{"_index":3076,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["individuals",{"_index":4321,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":4579,"title":{},"body":{"license.html":{}}}],["inestapplication",{"_index":5035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inewsproperties",{"_index":521,"title":{"interfaces/INewsProperties.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["inewsscope",{"_index":1201,"title":{"interfaces/INewsScope.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["inewuserprops",{"_index":5562,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["infinity",{"_index":2836,"title":{},"body":{"changelog.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"interfaces/LessonProperties.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["info(text",{"_index":336,"title":{},"body":{"injectables/ConsoleWriter.html":{}}}],["info.mapper",{"_index":1700,"title":{},"body":{"classes/NewsMapper.html":{}}}],["info.mapper.ts",{"_index":2052,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["info.mapper.ts:5",{"_index":2054,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/UserInfoMapper.html":{}}}],["info.response",{"_index":1842,"title":{},"body":{"classes/NewsResponse.html":{},"classes/TargetInfoMapper.html":{}}}],["info.response.ts",{"_index":2060,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["info.response.ts:13",{"_index":2062,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["info.response.ts:18",{"_index":2495,"title":{},"body":{"classes/UserInfoResponse.html":{}}}],["info.response.ts:8",{"_index":2061,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["inform",{"_index":4552,"title":{},"body":{"license.html":{},"miscellaneous/typealiases.html":{}}}],["information",{"_index":938,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["infrastructure",{"_index":5436,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["infringe",{"_index":4679,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":4708,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":4335,"title":{},"body":{"license.html":{}}}],["inherit",{"_index":224,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["inheritance",{"_index":724,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"changelog.html":{}}}],["inheritances",{"_index":1805,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["inherited",{"_index":32,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskScope.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/ValidationError.html":{}}}],["inital",{"_index":2730,"title":{},"body":{"changelog.html":{}}}],["initialize",{"_index":5595,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["initialized",{"_index":1490,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["initializes",{"_index":5387,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["initiate",{"_index":4702,"title":{},"body":{"license.html":{}}}],["initpermissions",{"_index":5040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject",{"_index":857,"title":{},"body":{"injectables/DashboardUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["inject('mail_service_options",{"_index":1542,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["inject(mikroorm",{"_index":1581,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["inject(mongomemoryserver",{"_index":1583,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["injectable",{"_index":152,"title":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/ConsoleWriter.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{}},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/ConsoleWriter.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/IDashboardRepo.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injectables",{"_index":153,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/ConsoleWriter.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"overview.html":{}}}],["injected",{"_index":997,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injection",{"_index":1486,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["injections",{"_index":5350,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["injectusername",{"_index":3569,"title":{},"body":{"changelog.html":{}}}],["inline",{"_index":96,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["inlineattachment",{"_index":95,"title":{"interfaces/InlineAttachment.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["inner",{"_index":4175,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["input",{"_index":1361,"title":{},"body":{"modules/InterceptorModule.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["insensitive",{"_index":3583,"title":{},"body":{"changelog.html":{}}}],["insert",{"_index":2629,"title":{},"body":{"changelog.html":{}}}],["inside",{"_index":306,"title":{},"body":{"classes/BusinessError.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["inspired",{"_index":5792,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["install",{"_index":4395,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["installation",{"_index":4583,"title":{},"body":{"license.html":{}}}],["installed",{"_index":4596,"title":{},"body":{"license.html":{}}}],["instance",{"_index":1027,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"injectables/Logger.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["instanceof",{"_index":1079,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"injectables/NewsRepo.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["instances",{"_index":3892,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["instant",{"_index":433,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["instead",{"_index":2829,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["instructions",{"_index":4191,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intact",{"_index":4477,"title":{},"body":{"license.html":{}}}],["integrate",{"_index":2646,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":2958,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["intended",{"_index":4256,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intention",{"_index":4469,"title":{},"body":{"license.html":{}}}],["interact",{"_index":4851,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interacting",{"_index":4781,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interaction",{"_index":4350,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["interactions",{"_index":5220,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interactive",{"_index":4354,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interacts",{"_index":5379,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["intercept",{"_index":901,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["intercept(context",{"_index":902,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["interceptor",{"_index":889,"title":{},"body":{"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interceptor/interceptor.module",{"_index":375,"title":{},"body":{"modules/CoreModule.html":{}}}],["interceptormodule",{"_index":353,"title":{"modules/InterceptorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/InterceptorModule.html":{},"modules.html":{},"overview.html":{}}}],["interchange",{"_index":4523,"title":{},"body":{"license.html":{}}}],["interest",{"_index":4695,"title":{},"body":{"license.html":{}}}],["interface",{"_index":87,"title":{"interfaces/AppendedAttachment.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/GlobalConstants.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/LessonProperties.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"interfaces/MailServiceOptions.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/PlainTextMailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReference.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/Lesson.html":{},"interfaces/LessonProperties.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/News.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/PlainTextMailContent.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["interface/jwt",{"_index":1416,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["interfaces",{"_index":89,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/GlobalConstants.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/LessonProperties.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"interfaces/MailServiceOptions.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/PlainTextMailContent.html":{},"license.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interfered",{"_index":4588,"title":{},"body":{"license.html":{}}}],["internal",{"_index":510,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["internal_server_error",{"_index":5560,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["internally",{"_index":347,"title":{},"body":{"injectables/ConsoleWriter.html":{}}}],["internalservererrorexception",{"_index":1071,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["internalservererrorexception(error",{"_index":1105,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["internationale",{"_index":3724,"title":{},"body":{"changelog.html":{}}}],["internationalisation",{"_index":3611,"title":{},"body":{"changelog.html":{}}}],["interpretation",{"_index":4829,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":4392,"title":{},"body":{"license.html":{}}}],["intimate",{"_index":4406,"title":{},"body":{"license.html":{}}}],["intricacies",{"_index":5531,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introduce",{"_index":998,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduced",{"_index":3776,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduces",{"_index":3743,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introducing",{"_index":5055,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["introduction",{"_index":4867,"title":{},"body":{"todo.html":{}}}],["invalid",{"_index":3201,"title":{},"body":{"changelog.html":{}}}],["invalidate",{"_index":4498,"title":{},"body":{"license.html":{}}}],["invocation",{"_index":5407,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invocations",{"_index":5412,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoke",{"_index":5358,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoked",{"_index":5227,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoking",{"_index":5334,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["involved",{"_index":5532,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ipagination",{"_index":1227,"title":{"interfaces/IPagination.html":{}},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/TaskUC.html":{},"coverage.html":{}}}],["iparentdescriptionsproperties",{"_index":1252,"title":{"interfaces/IParentDescriptionsProperties.html":{}},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"coverage.html":{}}}],["ipermissionsandroles",{"_index":1217,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"injectables/RoleUC.html":{},"miscellaneous/typealiases.html":{}}}],["iprimarykey",{"_index":2141,"title":{},"body":{"modules/ServerModule.html":{}}}],["iresolveduser",{"_index":1211,"title":{"interfaces/IResolvedUser.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/ResolvedUser.html":{},"coverage.html":{}}}],["irole",{"_index":1214,"title":{"interfaces/IRole.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/ResolvedUser.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["iroleproperties",{"_index":1280,"title":{"interfaces/IRoleProperties.html":{}},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"coverage.html":{}}}],["irrevocable",{"_index":4415,"title":{},"body":{"license.html":{}}}],["isboolean",{"_index":1681,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isbusinesserror",{"_index":1078,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isbusinesserror(error",{"_index":1119,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isdate",{"_index":636,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{}}}],["isdate()@isoptional()@apipropertyoptional({description",{"_index":613,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isdefined",{"_index":3986,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isdefined(input",{"_index":2075,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/functions.html":{}}}],["isdefined(key",{"_index":2086,"title":{},"body":{"classes/Scope.html":{}}}],["isdefined(object",{"_index":2085,"title":{},"body":{"classes/Scope.html":{}}}],["isdefined(object[key",{"_index":2087,"title":{},"body":{"classes/Scope.html":{}}}],["isdefined(selectedkey",{"_index":2096,"title":{},"body":{"classes/Scope.html":{}}}],["isdefined(targetkey",{"_index":2097,"title":{},"body":{"classes/Scope.html":{}}}],["isdefined(testeddefinedvalue",{"_index":2080,"title":{},"body":{"classes/Scope.html":{}}}],["isdefinedobjectvalue",{"_index":3987,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isdefinedobjectvalue(currentvalue",{"_index":2092,"title":{},"body":{"classes/Scope.html":{}}}],["isdefinedobjectvalue(object",{"_index":2084,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/functions.html":{}}}],["isdefinedquery",{"_index":3988,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isdefinedquery(input",{"_index":2076,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/functions.html":{}}}],["isdefinedquery(query",{"_index":2081,"title":{},"body":{"classes/Scope.html":{}}}],["iserv",{"_index":3064,"title":{},"body":{"changelog.html":{}}}],["isexternal",{"_index":2973,"title":{},"body":{"changelog.html":{}}}],["isfeatherserror",{"_index":1076,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isfeatherserror(error",{"_index":1114,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isgraded",{"_index":1314,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["isin",{"_index":1682,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isin(target_model_values",{"_index":1686,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isint",{"_index":1959,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(0)@apipropertyoptional({description",{"_index":1956,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(1)@max(100)@apipropertyoptional({description",{"_index":1950,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["ismongoid",{"_index":1683,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isolated",{"_index":5413,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["isolation",{"_index":5650,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["isoptional",{"_index":637,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["isoptional()@isboolean()@stringtoboolean()@apipropertyoptional({description",{"_index":1677,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isoptional()@isdate()@apipropertyoptional({description",{"_index":2461,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["isoptional()@ismongoid()@apipropertyoptional({pattern",{"_index":1671,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isoptional()@isstring()@apipropertyoptional({description",{"_index":2460,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["isoptional()@isstring()@isin(target_model_values)@apipropertyoptional({enum",{"_index":1675,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["ispublished",{"_index":1926,"title":{},"body":{"injectables/NewsUc.html":{}}}],["iss",{"_index":1388,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["isstring",{"_index":638,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["isstring()@apiproperty({description",{"_index":611,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstring()@apiproperty({enum",{"_index":627,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstring()@apiproperty({pattern",{"_index":622,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstudent",{"_index":580,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["issubstitutionteacher",{"_index":582,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["issue",{"_index":2888,"title":{},"body":{"changelog.html":{}}}],["issued",{"_index":3656,"title":{},"body":{"changelog.html":{}}}],["issuer",{"_index":1395,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["issues",{"_index":3224,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["isteacher",{"_index":581,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["istechnicalerror",{"_index":1084,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["istechnicalerror(error",{"_index":1121,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["istimestampenabled",{"_index":1500,"title":{},"body":{"injectables/Logger.html":{}}}],["isubmissionproperties",{"_index":1292,"title":{"interfaces/ISubmissionProperties.html":{}},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"coverage.html":{}}}],["iswhitelisted",{"_index":1442,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["iswhitelisted(accountid",{"_index":1445,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["it's",{"_index":2835,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["it(\"should",{"_index":5649,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('bad",{"_index":5668,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('good",{"_index":5670,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('should",{"_index":5744,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["itaskparent",{"_index":1262,"title":{"interfaces/ITaskParent.html":{}},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"coverage.html":{}}}],["itaskproperties",{"_index":1258,"title":{"interfaces/ITaskProperties.html":{}},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"coverage.html":{}}}],["itaskstatus",{"_index":1333,"title":{"interfaces/ITaskStatus.html":{}},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskWithStatusVo.html":{},"coverage.html":{}}}],["item",{"_index":4368,"title":{},"body":{"license.html":{}}}],["items",{"_index":1283,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["iteration",{"_index":2734,"title":{},"body":{"changelog.html":{}}}],["itself",{"_index":4599,"title":{},"body":{"license.html":{}}}],["iupdatenews",{"_index":1198,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{}}}],["iuserproperties",{"_index":1344,"title":{"interfaces/IUserProperties.html":{}},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{},"coverage.html":{}}}],["jest",{"_index":2760,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["jest.config.ts",{"_index":3990,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["jest.spyon(repo",{"_index":5746,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["jest/utils",{"_index":5022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jira",{"_index":4199,"title":{},"body":{"index.html":{}}}],["job",{"_index":2585,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["jobs",{"_index":3684,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["john",{"_index":5052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":3149,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["jose",{"_index":4060,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":426,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["json",{"_index":3327,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["json.stringify(e.constraints",{"_index":1136,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["jsonwebtoken",{"_index":4062,"title":{},"body":{"dependencies.html":{}}}],["jti",{"_index":1390,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{}}}],["jwauthguard",{"_index":5762,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["jwt",{"_index":1414,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwt_whitelist_accept_all",{"_index":2645,"title":{},"body":{"changelog.html":{}}}],["jwtauthguard",{"_index":1366,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwtconstants",{"_index":133,"title":{"interfaces/JwtConstants.html":{}},"body":{"modules/AuthModule.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.jwtoptions",{"_index":1423,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtconstants.secret",{"_index":1422,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":1418,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":129,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register(jwtconstants",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtoptions",{"_index":1372,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["jwtpayload",{"_index":1400,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["jwtstrategy",{"_index":119,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtvalidationadapter",{"_index":120,"title":{"injectables/JwtValidationAdapter.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"coverage.html":{},"overview.html":{}}}],["jwtwhitelist",{"_index":1455,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"miscellaneous/variables.html":{}}}],["kafka",{"_index":5299,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["keep",{"_index":2540,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["keeps",{"_index":5080,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["kernel",{"_index":4388,"title":{},"body":{"license.html":{}}}],["key",{"_index":1932,"title":{},"body":{"injectables/NewsUc.html":{},"classes/Scope.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["keyof",{"_index":4958,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["keys",{"_index":1379,"title":{},"body":{"interfaces/JwtConstants.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kind",{"_index":4346,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["kinds",{"_index":4244,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["klara.fall@schul",{"_index":3889,"title":{},"body":{"changelog.html":{}}}],["know",{"_index":4270,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["knowingly",{"_index":4734,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":4741,"title":{},"body":{"license.html":{}}}],["known",{"_index":3124,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["knows",{"_index":5372,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kreisid",{"_index":3112,"title":{},"body":{"changelog.html":{}}}],["kurse",{"_index":436,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":2554,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["language",{"_index":2793,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["large",{"_index":5282,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["larger",{"_index":4505,"title":{},"body":{"license.html":{}}}],["last",{"_index":2494,"title":{},"body":{"classes/UserInfoResponse.html":{},"changelog.html":{}}}],["lastldapsync",{"_index":2608,"title":{},"body":{"changelog.html":{}}}],["lastname",{"_index":1216,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"classes/ResolvedUser.html":{},"classes/User.html":{},"classes/UserInfoResponse.html":{},"miscellaneous/variables.html":{}}}],["later",{"_index":532,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["latest",{"_index":1884,"title":{},"body":{"injectables/NewsUc.html":{},"dependencies.html":{}}}],["launch",{"_index":5137,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["launch/settings",{"_index":4889,"title":{},"body":{"todo.html":{}}}],["law",{"_index":4337,"title":{},"body":{"license.html":{}}}],["laws",{"_index":4313,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":4706,"title":{},"body":{"license.html":{}}}],["layer",{"_index":5209,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["layered",{"_index":5367,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["layering",{"_index":5173,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["layers",{"_index":4870,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ldap",{"_index":2605,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["ldap/:id",{"_index":3371,"title":{},"body":{"changelog.html":{}}}],["ldap_school_syncer_pool_size",{"_index":3290,"title":{},"body":{"changelog.html":{}}}],["ldap_system_syncer_pool_size",{"_index":3289,"title":{},"body":{"changelog.html":{}}}],["ldapjs",{"_index":4064,"title":{},"body":{"dependencies.html":{}}}],["ldapjs.git",{"_index":4067,"title":{},"body":{"dependencies.html":{}}}],["ldapschoolidentifier",{"_index":2607,"title":{},"body":{"changelog.html":{}}}],["ldapschoolsyncer",{"_index":3707,"title":{},"body":{"changelog.html":{}}}],["ldapsystemsyncers",{"_index":3840,"title":{},"body":{"changelog.html":{}}}],["lead",{"_index":3563,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["leads",{"_index":4853,"title":{},"body":{"license.html":{}}}],["lean",{"_index":4083,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["learnroom",{"_index":2731,"title":{},"body":{"changelog.html":{}}}],["learnroommodule",{"_index":1465,"title":{"modules/LearnroomModule.html":{}},"body":{"modules/LearnroomModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["leave",{"_index":4925,"title":{},"body":{"todo.html":{}}}],["leaves",{"_index":2426,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["legacy",{"_index":993,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["legacy/feathers",{"_index":5125,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["legacy/feathers/mocha",{"_index":5106,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["legacy/nest",{"_index":4916,"title":{},"body":{"todo.html":{}}}],["legacyerrortypes",{"_index":5050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legal",{"_index":4276,"title":{},"body":{"license.html":{}}}],["lern",{"_index":2669,"title":{},"body":{"changelog.html":{}}}],["lernstore",{"_index":2780,"title":{},"body":{"changelog.html":{}}}],["less",{"_index":3837,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lesson",{"_index":1254,"title":{"classes/Lesson.html":{}},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Lesson.html":{},"interfaces/LessonProperties.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lesson.entity",{"_index":1255,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["lessonid",{"_index":1267,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["lessonids",{"_index":2343,"title":{},"body":{"classes/TaskScope.html":{}}}],["lessonproperties",{"_index":1473,"title":{"interfaces/LessonProperties.html":{}},"body":{"classes/Lesson.html":{},"interfaces/LessonProperties.html":{},"coverage.html":{}}}],["lessons",{"_index":1476,"title":{},"body":{"classes/Lesson.html":{},"interfaces/LessonProperties.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"changelog.html":{}}}],["letter",{"_index":5458,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["letting",{"_index":4293,"title":{},"body":{"license.html":{}}}],["level",{"_index":3701,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["levels",{"_index":5646,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["liability",{"_index":4620,"title":{},"body":{"license.html":{}}}],["liable",{"_index":4334,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":4381,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["library",{"_index":4560,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["license",{"_index":4226,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":4317,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":4318,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":4320,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":4250,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":4682,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":4628,"title":{},"body":{"license.html":{}}}],["lifecycle",{"_index":2616,"title":{},"body":{"changelog.html":{}}}],["likewise",{"_index":4676,"title":{},"body":{"license.html":{}}}],["limit",{"_index":1229,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"license.html":{}}}],["limitation",{"_index":4813,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2759,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["limiting",{"_index":2832,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["limits",{"_index":2949,"title":{},"body":{"changelog.html":{}}}],["line",{"_index":552,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["lines",{"_index":5010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["link",{"_index":2768,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["linked",{"_index":4404,"title":{},"body":{"license.html":{}}}],["links",{"_index":2816,"title":{},"body":{"changelog.html":{}}}],["linter",{"_index":4904,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["list",{"_index":178,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"changelog.html":{},"license.html":{}}}],["listener",{"_index":3497,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":412,"title":{},"body":{"classes/Course.html":{},"classes/GridElement.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/JwtConstants.html":{},"classes/School.html":{},"classes/TaskResponse.html":{},"classes/Team.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["litigation",{"_index":4703,"title":{},"body":{"license.html":{}}}],["living",{"_index":5529,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["lms",{"_index":5266,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["load",{"_index":2739,"title":{},"body":{"changelog.html":{}}}],["load/perf",{"_index":4882,"title":{},"body":{"todo.html":{}}}],["load/persist",{"_index":5433,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["loaded",{"_index":806,"title":{},"body":{"classes/DashboardModelMapper.html":{},"injectables/TaskUC.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["loaded.color",{"_index":813,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["loaded.title",{"_index":812,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["loader",{"_index":5697,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["loadind",{"_index":3015,"title":{},"body":{"changelog.html":{}}}],["loading",{"_index":3075,"title":{},"body":{"changelog.html":{}}}],["local",{"_index":2959,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"license.html":{}}}],["localhost:15672",{"_index":5072,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["localhost:3030",{"_index":5085,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["localization",{"_index":5289,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["locally",{"_index":2168,"title":{},"body":{"modules/ServerModule.html":{},"additional-documentation/nestjs-application.html":{}}}],["locate",{"_index":5495,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["located",{"_index":5270,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["location",{"_index":3374,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["locator",{"_index":3332,"title":{},"body":{"changelog.html":{}}}],["lock",{"_index":3008,"title":{},"body":{"changelog.html":{}}}],["lodash",{"_index":1073,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"dependencies.html":{}}}],["log",{"_index":1236,"title":{},"body":{"interfaces/ILogger.html":{},"injectables/Logger.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["log(message",{"_index":1244,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["log/response",{"_index":4905,"title":{},"body":{"todo.html":{}}}],["logfile",{"_index":5398,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logged",{"_index":4189,"title":{},"body":{"index.html":{}}}],["logger",{"_index":900,"title":{"injectables/Logger.html":{}},"body":{"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logger('error",{"_index":1063,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["logger(durationlogginginterceptor.name",{"_index":908,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logger.error(error",{"_index":1140,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(errormsg",{"_index":1137,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(exception",{"_index":1125,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.info(`could",{"_index":5682,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["logger.interface",{"_index":1481,"title":{},"body":{"injectables/Logger.html":{}}}],["logger.service",{"_index":1505,"title":{},"body":{"modules/LoggerModule.html":{}}}],["logger/logger.module",{"_index":373,"title":{},"body":{"modules/CoreModule.html":{}}}],["loggermodule",{"_index":354,"title":{"modules/LoggerModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["loggerservice",{"_index":5603,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging",{"_index":365,"title":{},"body":{"modules/CoreModule.html":{},"injectables/DurationLoggingInterceptor.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging.interceptor.ts",{"_index":896,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["logging.interceptor.ts:11",{"_index":909,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logging.interceptor.ts:13",{"_index":905,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logic",{"_index":2315,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["logic/rules",{"_index":5246,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logical",{"_index":5293,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["login",{"_index":2965,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["loginuseruc",{"_index":5467,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["logs",{"_index":4869,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["long",{"_index":4209,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["longer",{"_index":3240,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":1377,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"index.html":{}}}],["loop",{"_index":3525,"title":{},"body":{"changelog.html":{}}}],["loss",{"_index":4820,"title":{},"body":{"license.html":{}}}],["losses",{"_index":4823,"title":{},"body":{"license.html":{}}}],["lost",{"_index":3648,"title":{},"body":{"changelog.html":{}}}],["lot",{"_index":3838,"title":{},"body":{"changelog.html":{}}}],["low",{"_index":5177,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lowercase",{"_index":5459,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["lte",{"_index":1866,"title":{},"body":{"classes/NewsScope.html":{}}}],["ltitools",{"_index":3189,"title":{},"body":{"changelog.html":{}}}],["luckily",{"_index":5384,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["m:n",{"_index":5814,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["machine",{"_index":4514,"title":{},"body":{"license.html":{}}}],["made",{"_index":4283,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mail",{"_index":106,"title":{"interfaces/Mail.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"interfaces/PlainTextMailContent.html":{},"changelog.html":{},"coverage.html":{},"license.html":{}}}],["mail.interface",{"_index":1541,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["mail.service",{"_index":1518,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["mail_service_options",{"_index":1531,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["mailattachment",{"_index":91,"title":{"interfaces/MailAttachment.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["mailcatcher",{"_index":2752,"title":{},"body":{"changelog.html":{}}}],["mailcontent",{"_index":99,"title":{"interfaces/MailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["maildrop",{"_index":2751,"title":{},"body":{"changelog.html":{}}}],["mailmodule",{"_index":1506,"title":{"modules/MailModule.html":{}},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["mailmodule.forroot",{"_index":2155,"title":{},"body":{"modules/ServerModule.html":{}}}],["mailmoduleoptions",{"_index":1510,"title":{"interfaces/MailModuleOptions.html":{}},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"coverage.html":{}}}],["mails",{"_index":2839,"title":{},"body":{"changelog.html":{}}}],["mailservice",{"_index":1517,"title":{"injectables/MailService.html":{}},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"coverage.html":{}}}],["mailserviceoptions",{"_index":1537,"title":{"interfaces/MailServiceOptions.html":{}},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"coverage.html":{}}}],["main",{"_index":2654,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["main.ts",{"_index":1028,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["mainly",{"_index":5333,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintain",{"_index":3528,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintainability",{"_index":3457,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintenance",{"_index":2699,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["major",{"_index":4385,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["make",{"_index":1451,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["makes",{"_index":4443,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["making",{"_index":2459,"title":{},"body":{"classes/UpdateNewsParams.html":{},"license.html":{}}}],["malformed",{"_index":5739,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["malfunction",{"_index":2672,"title":{},"body":{"changelog.html":{}}}],["manage",{"_index":2318,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["managed",{"_index":3050,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["management",{"_index":2658,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["manager",{"_index":4015,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["managing",{"_index":5269,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mandatory/optional",{"_index":4873,"title":{},"body":{"todo.html":{}}}],["manipulated",{"_index":3729,"title":{},"body":{"changelog.html":{}}}],["manner",{"_index":4721,"title":{},"body":{"license.html":{}}}],["manual",{"_index":2921,"title":{},"body":{"changelog.html":{}}}],["manually",{"_index":5679,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["many",{"_index":3292,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["manytomany",{"_index":415,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Role.html":{},"classes/Submission.html":{},"classes/User.html":{}}}],["manytomany('file",{"_index":1310,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["manytomany('role",{"_index":1287,"title":{},"body":{"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["manytomany('user",{"_index":440,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["manytoone",{"_index":414,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"interfaces/LessonProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["manytoone('course",{"_index":462,"title":{},"body":{"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Lesson.html":{},"interfaces/LessonProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["manytoone('coursegroup",{"_index":1307,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["manytoone('dashboardmodelentity",{"_index":707,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["manytoone('defaultgridreferencemodel",{"_index":710,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["manytoone('lesson",{"_index":1266,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["manytoone('school",{"_index":439,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/ICourseProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["manytoone('task",{"_index":1304,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["manytoone('team",{"_index":563,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["manytoone('user",{"_index":496,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/TeamNews.html":{}}}],["map",{"_index":3071,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["map((submission",{"_index":2404,"title":{},"body":{"injectables/TaskUC.html":{}}}],["mapcreatenewstodomain",{"_index":1688,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapcreatenewstodomain(params",{"_index":1691,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapdomaintoresponse",{"_index":5440,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapfootodomain",{"_index":5441,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapgridelementtomodel",{"_index":774,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["mapgridelementtomodel(gridelement",{"_index":777,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["mapnewsscopetodomain",{"_index":1689,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapnewsscopetodomain(query",{"_index":1693,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapped",{"_index":5327,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapper",{"_index":2512,"title":{},"body":{"injectables/UserUC.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mapper.ts",{"_index":5439,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapper/dashboard.mapper",{"_index":656,"title":{},"body":{"controllers/DashboardController.html":{}}}],["mapper/news.mapper",{"_index":1646,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["mapper/task.mapper",{"_index":2240,"title":{},"body":{"controllers/TaskController.html":{}}}],["mappers",{"_index":5761,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mapping",{"_index":5215,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["maps",{"_index":5240,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["maptoentity",{"_index":775,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["maptoentity(modelentity",{"_index":779,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["maptomodel",{"_index":776,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["maptomodel(entity",{"_index":782,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["maptoresponse",{"_index":745,"title":{},"body":{"classes/DashboardMapper.html":{},"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/UserInfoMapper.html":{}}}],["maptoresponse(dashboard",{"_index":746,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["maptoresponse(news",{"_index":1695,"title":{},"body":{"classes/NewsMapper.html":{}}}],["maptoresponse(schoolinfo",{"_index":2053,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["maptoresponse(target",{"_index":2198,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["maptoresponse(taskwithstatus",{"_index":2250,"title":{},"body":{"classes/TaskMapper.html":{}}}],["maptoresponse(user",{"_index":1997,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{}}}],["mapupdatenewstodomain",{"_index":1690,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapupdatenewstodomain(params",{"_index":1697,"title":{},"body":{"classes/NewsMapper.html":{}}}],["march",{"_index":4764,"title":{},"body":{"license.html":{}}}],["marked",{"_index":4626,"title":{},"body":{"license.html":{}}}],["marker",{"_index":2581,"title":{},"body":{"changelog.html":{}}}],["marks",{"_index":4635,"title":{},"body":{"license.html":{}}}],["masks",{"_index":4315,"title":{},"body":{"license.html":{}}}],["master",{"_index":3221,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["match",{"_index":939,"title":{},"body":{"classes/ErrorResponse.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["matched",{"_index":321,"title":{},"body":{"classes/BusinessError.html":{}}}],["matches",{"_index":5735,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["matching",{"_index":60,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"interfaces/LessonProperties.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["material",{"_index":4430,"title":{},"body":{"license.html":{}}}],["materially",{"_index":4600,"title":{},"body":{"license.html":{}}}],["materials",{"_index":2909,"title":{},"body":{"changelog.html":{}}}],["matrix",{"_index":2915,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matrixchat",{"_index":5272,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matter",{"_index":5336,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["max",{"_index":1960,"title":{},"body":{"classes/PaginationQuery.html":{},"changelog.html":{}}}],["max(100",{"_index":1964,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["maximum",{"_index":1953,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["maxsubmissions",{"_index":1337,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{}}}],["maxworkers",{"_index":5020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maybe",{"_index":1569,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"classes/Scope.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["md",{"_index":4910,"title":{},"body":{"todo.html":{}}}],["me(@currentuser",{"_index":2482,"title":{},"body":{"controllers/UserController.html":{}}}],["me(currentuser",{"_index":2475,"title":{},"body":{"controllers/UserController.html":{}}}],["meaning",{"_index":4643,"title":{},"body":{"license.html":{}}}],["meaningful",{"_index":4220,"title":{},"body":{"index.html":{}}}],["means",{"_index":4176,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["measure",{"_index":4451,"title":{},"body":{"license.html":{}}}],["measures",{"_index":4179,"title":{},"body":{"index.html":{},"license.html":{}}}],["mechanism",{"_index":2833,"title":{},"body":{"changelog.html":{}}}],["mechanisms",{"_index":5411,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["medium",{"_index":4474,"title":{},"body":{"license.html":{}}}],["meet",{"_index":4486,"title":{},"body":{"license.html":{}}}],["meets",{"_index":4369,"title":{},"body":{"license.html":{}}}],["member",{"_index":964,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"changelog.html":{}}}],["members",{"_index":3095,"title":{},"body":{"changelog.html":{}}}],["membership",{"_index":3573,"title":{},"body":{"changelog.html":{}}}],["memory",{"_index":1548,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["menu",{"_index":4366,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":4804,"title":{},"body":{"license.html":{}}}],["mere",{"_index":4349,"title":{},"body":{"license.html":{}}}],["merge",{"_index":4225,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["merged",{"_index":3031,"title":{},"body":{"changelog.html":{}}}],["merges",{"_index":3534,"title":{},"body":{"changelog.html":{}}}],["mergify",{"_index":3822,"title":{},"body":{"changelog.html":{}}}],["merging",{"_index":4692,"title":{},"body":{"license.html":{}}}],["merlin",{"_index":2815,"title":{},"body":{"changelog.html":{}}}],["message",{"_index":15,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"classes/ValidationError.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["messages",{"_index":5300,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["messenger",{"_index":2797,"title":{},"body":{"changelog.html":{}}}],["messuring",{"_index":2918,"title":{},"body":{"changelog.html":{}}}],["met",{"_index":4417,"title":{},"body":{"license.html":{}}}],["meta",{"_index":5799,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["metadata",{"_index":4107,"title":{},"body":{"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["method",{"_index":1007,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/ServerConsole.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["methods",{"_index":18,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/ILogger.html":{},"interfaces/ITaskParent.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/Logger.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["metic",{"_index":3484,"title":{},"body":{"changelog.html":{}}}],["metrics",{"_index":3309,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["microservice",{"_index":5280,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["microservices",{"_index":5221,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["middleware",{"_index":3558,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["migrate",{"_index":4069,"title":{},"body":{"dependencies.html":{}}}],["migrated",{"_index":3802,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["migration",{"_index":1759,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{}}}],["migrations",{"_index":2995,"title":{},"body":{"changelog.html":{}}}],["migrations/scheduled",{"_index":1761,"title":{},"body":{"modules/NewsModule.html":{}}}],["mikro",{"_index":217,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/FeathersAuthProvider.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"interfaces/LessonProperties.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"injectables/UserRepo.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mikroorm",{"_index":1555,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{}}}],["mikroorm/asynclocalstorage",{"_index":4903,"title":{},"body":{"todo.html":{}}}],["mikroormcoremodule",{"_index":1577,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormcoremodule.exports",{"_index":1579,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormcoremodule.exports.push(mongomemoryserver",{"_index":1580,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule",{"_index":1556,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.forroot",{"_index":2159,"title":{},"body":{"modules/ServerModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mikroormmodule.forrootasync",{"_index":1564,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.imports",{"_index":1578,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodulesyncoptions",{"_index":1557,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["milliseconds",{"_index":2441,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["mimetype",{"_index":94,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["min",{"_index":1961,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["min(0",{"_index":1962,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["min(1",{"_index":1963,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["minimizes",{"_index":5347,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["minimum",{"_index":1952,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["minio",{"_index":2961,"title":{},"body":{"changelog.html":{}}}],["minor",{"_index":3467,"title":{},"body":{"changelog.html":{}}}],["minus",{"_index":5465,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["misc",{"_index":5819,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["miscellaneous",{"_index":4139,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["misconfigured",{"_index":3852,"title":{},"body":{"changelog.html":{}}}],["misrepresentation",{"_index":4625,"title":{},"body":{"license.html":{}}}],["missing",{"_index":1026,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TaskAuthorizationService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["mission",{"_index":1858,"title":{},"body":{"classes/NewsScope.html":{}}}],["mix",{"_index":5205,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mixwith",{"_index":4070,"title":{},"body":{"dependencies.html":{}}}],["mm",{"_index":3796,"title":{},"body":{"changelog.html":{}}}],["mocha",{"_index":3380,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["mocha's",{"_index":5654,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocked",{"_index":5712,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocking",{"_index":5700,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocks",{"_index":5702,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mode",{"_index":2781,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["model",{"_index":630,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/DashboardModelMapper.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["model.dashboard",{"_index":800,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["model.reference",{"_index":791,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["model.xpos",{"_index":787,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["model.ypos",{"_index":789,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["modelentity",{"_index":781,"title":{},"body":{"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["modelentity.gridelements",{"_index":816,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["modelentity.gridelements.init",{"_index":802,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["models",{"_index":1937,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["modification",{"_index":4311,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":4372,"title":{},"body":{"license.html":{}}}],["modified",{"_index":3823,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["modifier",{"_index":3318,"title":{},"body":{"changelog.html":{}}}],["modifies",{"_index":4491,"title":{},"body":{"license.html":{}}}],["modifing",{"_index":3119,"title":{},"body":{"changelog.html":{}}}],["modify",{"_index":4278,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":4340,"title":{},"body":{"license.html":{}}}],["modifytimestamp",{"_index":3324,"title":{},"body":{"changelog.html":{}}}],["modularization",{"_index":5058,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["module",{"_index":111,"title":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["module.createnestapplication",{"_index":5774,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(entitymanager",{"_index":5777,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(mikroorm",{"_index":5776,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(newsrepo);test",{"_index":5742,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(newsuc",{"_index":5741,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.ts",{"_index":5007,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/application",{"_index":5696,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module/repo",{"_index":5473,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/uc",{"_index":5468,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modulefileextensions",{"_index":4990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modulenamemapper",{"_index":5016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moduleref",{"_index":1559,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["moduleref.get(catscontroller",{"_index":5711,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["moduleref.get(sampleservice",{"_index":5710,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["modules",{"_index":113,"title":{"modules.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["modules/authentication/auth.module",{"_index":2146,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/authorization/authorization.module.ts",{"_index":5479,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers",{"_index":5477,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers.module.ts",{"_index":5478,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/learnroom/learnroom.module",{"_index":2154,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/mail/mail.module",{"_index":2153,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/news/news.module",{"_index":2152,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/task/task.module",{"_index":2150,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/user/user.module",{"_index":2151,"title":{},"body":{"modules/ServerModule.html":{}}}],["moment",{"_index":4072,"title":{},"body":{"dependencies.html":{}}}],["mongo",{"_index":836,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongod",{"_index":1566,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["mongod.geturi",{"_index":1568,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongodatabasemoduleoptions",{"_index":1551,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/typealiases.html":{}}}],["mongodb",{"_index":1562,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongomemorydatabasemodule",{"_index":1546,"title":{"modules/MongoMemoryDatabaseModule.html":{}},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mongomemorydatabasemodule.forroot",{"_index":5724,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mongomemoryserver",{"_index":1561,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongoose",{"_index":2160,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["monitoring",{"_index":5310,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["moodle",{"_index":4090,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":2993,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["moreover",{"_index":4665,"title":{},"body":{"license.html":{}}}],["mostly",{"_index":5626,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mount",{"_index":2721,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["mounted",{"_index":4167,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mounts",{"_index":4885,"title":{},"body":{"todo.html":{}}}],["move",{"_index":2311,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["moved",{"_index":2610,"title":{},"body":{"changelog.html":{}}}],["ms",{"_index":882,"title":{},"body":{"controllers/DelayController.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["msg",{"_index":1090,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["much",{"_index":3653,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multilayered",{"_index":5208,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multiple",{"_index":1178,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mylearningapp",{"_index":5237,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mylearningappadapter",{"_index":5239,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["n",{"_index":294,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["n21",{"_index":3639,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":28,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["named",{"_index":4218,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["names",{"_index":1631,"title":{},"body":{"controllers/NewsController.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["naming",{"_index":4924,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nanoid",{"_index":4092,"title":{},"body":{"dependencies.html":{}}}],["nat",{"_index":2981,"title":{},"body":{"changelog.html":{}}}],["native",{"_index":4110,"title":{},"body":{"dependencies.html":{}}}],["nature",{"_index":4502,"title":{},"body":{"license.html":{}}}],["nbc",{"_index":2702,"title":{},"body":{"changelog.html":{}}}],["nbc_importpassword",{"_index":3829,"title":{},"body":{"changelog.html":{}}}],["nbc_importurl",{"_index":3827,"title":{},"body":{"changelog.html":{}}}],["nbc_importuser",{"_index":3828,"title":{},"body":{"changelog.html":{}}}],["ne",{"_index":2347,"title":{},"body":{"classes/TaskScope.html":{}}}],["necessary",{"_index":3552,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["need",{"_index":4410,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["needed",{"_index":4394,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["needs",{"_index":3186,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nest",{"_index":1117,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nest/legacy",{"_index":4914,"title":{},"body":{"todo.html":{}}}],["nest:build",{"_index":5076,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:build:all",{"_index":5081,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:console",{"_index":5100,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:console:dev",{"_index":5101,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:docs:build",{"_index":5094,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:docs:serve",{"_index":5096,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:lint",{"_index":5114,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:lint:fix",{"_index":5115,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:prebuild",{"_index":5075,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start",{"_index":5084,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:debug",{"_index":5088,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:dev",{"_index":5086,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:prod",{"_index":5091,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test",{"_index":4995,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:all",{"_index":5109,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:cov",{"_index":5110,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:debug",{"_index":5113,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:e2e",{"_index":4997,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:spec",{"_index":4996,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:watch",{"_index":5111,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nested",{"_index":3738,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["nestexpress.set('feathersapp",{"_index":1030,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["nestinterceptor",{"_index":877,"title":{},"body":{"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["nestjs",{"_index":341,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"injectables/ConsoleWriter.html":{},"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["nestjs/clithen",{"_index":5134,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nestjs/common",{"_index":46,"title":{},"body":{"classes/ApiValidationError.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"modules/CoreModule.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/IDashboardRepo.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":880,"title":{},"body":{"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/InterceptorModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":130,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":4005,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":128,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":4008,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":635,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"controllers/TaskController.html":{},"classes/TaskResponse.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"controllers/UserController.html":{},"classes/UserInfoResponse.html":{},"dependencies.html":{}}}],["nestjs/testing",{"_index":879,"title":{},"body":{"controllers/DelayController.html":{}}}],["nestjs/testing.test",{"_index":5701,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["nestlogger",{"_index":1480,"title":{},"body":{"injectables/Logger.html":{}}}],["net",{"_index":4187,"title":{},"body":{"index.html":{}}}],["network",{"_index":4249,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["neutral",{"_index":5337,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["never",{"_index":175,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["new",{"_index":84,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/User.html":{},"classes/UserInfoMapper.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newly",{"_index":5524,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["news",{"_index":483,"title":{"classes/News.html":{}},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["news.content",{"_index":1707,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.controller",{"_index":1755,"title":{},"body":{"modules/NewsModule.html":{}}}],["news.controller.ts",{"_index":2413,"title":{},"body":{"controllers/TeamNewsController.html":{},"coverage.html":{}}}],["news.controller.ts:22",{"_index":2417,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["news.createdat",{"_index":1728,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.createinstance(targetmodel",{"_index":1910,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news.displayat",{"_index":1709,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.id",{"_index":1703,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.params.ts",{"_index":607,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["news.params.ts:14",{"_index":2463,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:15",{"_index":632,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:21",{"_index":612,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{}}}],["news.params.ts:28",{"_index":2462,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:29",{"_index":621,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:37",{"_index":631,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:44",{"_index":626,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.permissions",{"_index":1732,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.source",{"_index":1711,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.sourcedescription",{"_index":1713,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.target.id",{"_index":1715,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.targetmodel",{"_index":1717,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.title",{"_index":1705,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.updatedat",{"_index":1730,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.updater",{"_index":1724,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news:104",{"_index":493,"title":{},"body":{"classes/CourseNews.html":{}}}],["news:110",{"_index":2411,"title":{},"body":{"classes/TeamNews.html":{}}}],["news:31",{"_index":517,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:35",{"_index":494,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:39",{"_index":499,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:42",{"_index":507,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:45",{"_index":512,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:48",{"_index":513,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:55",{"_index":515,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:58",{"_index":509,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:61",{"_index":498,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:64",{"_index":519,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:66",{"_index":508,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:79",{"_index":522,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:98",{"_index":2063,"title":{},"body":{"classes/SchoolNews.html":{}}}],["news[key",{"_index":1934,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news].param.ts",{"_index":5492,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news].response.dto",{"_index":5496,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news_add_target_schools",{"_index":1760,"title":{},"body":{"modules/NewsModule.html":{}}}],["news_create",{"_index":1908,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news_edit",{"_index":1903,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["news_sources",{"_index":1827,"title":{},"body":{"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["news_sources[number",{"_index":1843,"title":{},"body":{"classes/NewsResponse.html":{}}}],["news_view",{"_index":1902,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newscontroller",{"_index":1605,"title":{"controllers/NewsController.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"coverage.html":{}}}],["newscount",{"_index":1919,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsentities",{"_index":1800,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["newsentities.filter((news",{"_index":1808,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["newsentity",{"_index":1796,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["newsfilterquery",{"_index":1621,"title":{"classes/NewsFilterQuery.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{}}}],["newsid",{"_index":1619,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newslist",{"_index":1654,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"controllers/TeamNewsController.html":{}}}],["newslist.length",{"_index":1924,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newslist.map((news",{"_index":1658,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["newslist.map(async",{"_index":1921,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsmapper",{"_index":1645,"title":{"classes/NewsMapper.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{}}}],["newsmapper.mapcreatenewstodomain(params",{"_index":1652,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapnewsscopetodomain(scope",{"_index":1656,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["newsmapper.maptoresponse(news",{"_index":1653,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapupdatenewstodomain(params",{"_index":1666,"title":{},"body":{"controllers/NewsController.html":{}}}],["newsmodule",{"_index":1742,"title":{"modules/NewsModule.html":{}},"body":{"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["newsrepo",{"_index":1747,"title":{"injectables/NewsRepo.html":{}},"body":{"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newsresponse",{"_index":1644,"title":{"classes/NewsResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{}}}],["newsscope",{"_index":1791,"title":{"classes/NewsScope.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"coverage.html":{}}}],["newstarget",{"_index":525,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TargetInfoMapper.html":{},"classes/TeamNews.html":{},"miscellaneous/typealiases.html":{}}}],["newstargetfilter",{"_index":1769,"title":{"interfaces/NewsTargetFilter.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["newstargetmodel",{"_index":164,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"miscellaneous/enumerations.html":{}}}],["newstargetmodel.course",{"_index":548,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodel.school",{"_index":190,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodel.team",{"_index":557,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newsuc",{"_index":1642,"title":{"injectables/NewsUc.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsUc.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newsuc.getrequiredpermissions(ispublished",{"_index":1928,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsuc.getrequiredpermissions(unpublished",{"_index":1915,"title":{},"body":{"injectables/NewsUc.html":{}}}],["nexboard",{"_index":3800,"title":{},"body":{"changelog.html":{}}}],["next",{"_index":551,"title":{},"body":{"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["next.handle().pipe",{"_index":2446,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["next.handle().pipe(tap",{"_index":916,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["niedersachsen",{"_index":3342,"title":{},"body":{"changelog.html":{}}}],["node",{"_index":3908,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":4164,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{}}}],["node_env",{"_index":3903,"title":{},"body":{"changelog.html":{}}}],["nodejs",{"_index":5385,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["nodeps",{"_index":4087,"title":{},"body":{"dependencies.html":{}}}],["nodeps.git",{"_index":4089,"title":{},"body":{"dependencies.html":{}}}],["non",{"_index":3344,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["noncommercially",{"_index":4534,"title":{},"body":{"license.html":{}}}],["none",{"_index":3681,"title":{},"body":{"changelog.html":{}}}],["nonemptytargets",{"_index":1942,"title":{},"body":{"injectables/NewsUc.html":{}}}],["normal",{"_index":3122,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["normally",{"_index":4563,"title":{},"body":{"license.html":{}}}],["not_found_error",{"_index":5049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["not_found_error_type",{"_index":3935,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["notable",{"_index":2536,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":220,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/MongoMemoryDatabaseModule.html":{},"index.html":{}}}],["notfound",{"_index":5326,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["notfoundexception",{"_index":960,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/ServerModule.html":{}}}],["notfoundexception(`the",{"_index":2165,"title":{},"body":{"modules/ServerModule.html":{}}}],["nothing",{"_index":4677,"title":{},"body":{"license.html":{}}}],["notice",{"_index":4360,"title":{},"body":{"license.html":{}}}],["notices",{"_index":4356,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":4666,"title":{},"body":{"license.html":{}}}],["notify",{"_index":4662,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":4615,"title":{},"body":{"license.html":{}}}],["november",{"_index":4229,"title":{},"body":{"license.html":{}}}],["now",{"_index":619,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/NewsScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["now}ms",{"_index":918,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["npm",{"_index":2868,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["null",{"_index":983,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"injectables/NewsUc.html":{},"classes/Scope.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskScope.html":{}}}],["number",{"_index":31,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/JwtPayload.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/TaskWithStatusVo.html":{},"injectables/TimeoutInterceptor.html":{},"classes/ValidationError.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["numbered",{"_index":4796,"title":{},"body":{"license.html":{}}}],["numbers",{"_index":4952,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["numeric",{"_index":3703,"title":{},"body":{"changelog.html":{}}}],["nuxt",{"_index":2897,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["nvmrc",{"_index":5059,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["o",{"_index":5404,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["o.id",{"_index":2231,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{}}}],["oauth",{"_index":3394,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["oauth2",{"_index":3179,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["object",{"_index":1832,"title":{},"body":{"classes/NewsResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Scope.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["object.assign(this",{"_index":538,"title":{},"body":{"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/File.html":{},"classes/GridElement.html":{},"interfaces/IFileProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/TeamNews.html":{}}}],["object.entries(params",{"_index":1933,"title":{},"body":{"injectables/NewsUc.html":{}}}],["object.keys(input).length",{"_index":2077,"title":{},"body":{"classes/Scope.html":{}}}],["object.values(constraint",{"_index":86,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["object.values(newstargetmodel",{"_index":640,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"miscellaneous/variables.html":{}}}],["objectid",{"_index":210,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/FeathersAuthProvider.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/IDashboardRepo.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["objectid().tohexstring",{"_index":5041,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["objectid.createfromhexstring(id",{"_index":718,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["objectid.isvalid(value",{"_index":1984,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["objects",{"_index":5484,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["obligate",{"_index":4776,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":4548,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":4453,"title":{},"body":{"license.html":{}}}],["observable",{"_index":907,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["obsolete",{"_index":3830,"title":{},"body":{"changelog.html":{}}}],["obviously",{"_index":5262,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occasionally",{"_index":4533,"title":{},"body":{"license.html":{}}}],["occurred",{"_index":1092,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occurring",{"_index":4674,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":3234,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["odered",{"_index":1882,"title":{},"body":{"injectables/NewsUc.html":{}}}],["of.ts",{"_index":4946,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["offer",{"_index":4275,"title":{},"body":{"license.html":{}}}],["offered",{"_index":4554,"title":{},"body":{"license.html":{}}}],["offering",{"_index":4537,"title":{},"body":{"license.html":{}}}],["offers",{"_index":5098,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["official",{"_index":4374,"title":{},"body":{"license.html":{}}}],["officialschoolnumber",{"_index":3113,"title":{},"body":{"changelog.html":{}}}],["officialschoonnumber",{"_index":2940,"title":{},"body":{"changelog.html":{}}}],["offline",{"_index":3028,"title":{},"body":{"changelog.html":{}}}],["offset",{"_index":2307,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["ok",{"_index":3628,"title":{},"body":{"changelog.html":{}}}],["ok/err",{"_index":5553,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["okay",{"_index":5634,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["old",{"_index":2668,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["older",{"_index":3810,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["omit",{"_index":1523,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["once",{"_index":5156,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["one",{"_index":1438,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["onepassword",{"_index":2564,"title":{},"body":{"changelog.html":{}}}],["onerror",{"_index":3769,"title":{},"body":{"changelog.html":{}}}],["ones",{"_index":5464,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["onetomany",{"_index":714,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["onetomany('dashboardgridelementmodel",{"_index":726,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["onetomany('submission",{"_index":1270,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["oneweekago",{"_index":2320,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["oneweekago.setdate(oneweekago.getdate",{"_index":2321,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["onload",{"_index":3513,"title":{},"body":{"changelog.html":{}}}],["onmoduledestroy",{"_index":1553,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["onto",{"_index":5252,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["onupdate",{"_index":244,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["open",{"_index":2747,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["openapi",{"_index":3406,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["opened",{"_index":5089,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["operate",{"_index":4826,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["operated",{"_index":4541,"title":{},"body":{"license.html":{}}}],["operates",{"_index":5625,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["operating",{"_index":4389,"title":{},"body":{"license.html":{}}}],["operation",{"_index":3878,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["operational",{"_index":3323,"title":{},"body":{"changelog.html":{}}}],["operations",{"_index":2218,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["operator",{"_index":4298,"title":{},"body":{"license.html":{}}}],["opportunity",{"_index":4783,"title":{},"body":{"license.html":{}}}],["opposed",{"_index":5801,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["ops",{"_index":2713,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["opt",{"_index":3775,"title":{},"body":{"changelog.html":{}}}],["optimization",{"_index":5503,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["optimizations",{"_index":5807,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["option",{"_index":1576,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["optional",{"_index":29,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IFindOptions.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"interfaces/LessonProperties.html":{},"interfaces/Mail.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["optionaldatathere",{"_index":5614,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["optionally",{"_index":5605,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["options",{"_index":1512,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"modules/ServerModule.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["options.exchange",{"_index":1527,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["options.order",{"_index":1917,"title":{},"body":{"injectables/NewsUc.html":{}}}],["options.routingkey",{"_index":1532,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["options.ts",{"_index":1223,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["options.uri",{"_index":1529,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["ora",{"_index":346,"title":{},"body":{"injectables/ConsoleWriter.html":{}}}],["orchestration",{"_index":3108,"title":{},"body":{"changelog.html":{}}}],["orchestrator",{"_index":3205,"title":{},"body":{"changelog.html":{}}}],["order",{"_index":1224,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["orderby",{"_index":1802,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["ordering",{"_index":3704,"title":{},"body":{"changelog.html":{}}}],["organisation",{"_index":3369,"title":{},"body":{"changelog.html":{}}}],["organization",{"_index":4688,"title":{},"body":{"license.html":{}}}],["organizations",{"_index":4322,"title":{},"body":{"license.html":{}}}],["oriented",{"_index":5158,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["origin",{"_index":3148,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["original",{"_index":3826,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["orm",{"_index":1582,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["orm.close",{"_index":5781,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["orm.io",{"_index":5145,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["orm/core",{"_index":218,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"interfaces/LessonProperties.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"dependencies.html":{}}}],["orm/core/enums",{"_index":1790,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["orm/entitymanager",{"_index":5716,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["orm/mikro",{"_index":5546,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["orm/mongodb",{"_index":219,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/IDashboardRepo.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/UserRepo.html":{},"dependencies.html":{}}}],["orm/nestjs",{"_index":1558,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"dependencies.html":{}}}],["orquery",{"_index":2074,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["others",{"_index":1173,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["otherwise",{"_index":1574,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ours",{"_index":5455,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["out",{"_index":123,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"modules/UserModule.html":{},"changelog.html":{},"license.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["outcome",{"_index":5644,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["outdated",{"_index":4887,"title":{},"body":{"todo.html":{}}}],["outgoing",{"_index":5332,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["output",{"_index":2112,"title":{},"body":{"classes/ServerConsole.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["outputs",{"_index":3814,"title":{},"body":{"changelog.html":{}}}],["outside",{"_index":4436,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["over",{"_index":2319,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["overall",{"_index":5759,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overhead",{"_index":5232,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overridden",{"_index":5607,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["override",{"_index":3481,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["overrideguard(jwtauthguard",{"_index":5765,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overrideprovider(authorizationservice",{"_index":5773,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overrides",{"_index":920,"title":{},"body":{"modules/ErrorModule.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["overrides/configures",{"_index":366,"title":{},"body":{"modules/CoreModule.html":{}}}],["overriding",{"_index":4948,"title":{},"body":{"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["overview",{"_index":2573,"title":{"overview.html":{}},"body":{"changelog.html":{},"overview.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overwritten",{"_index":3059,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["owned",{"_index":4717,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owner",{"_index":5198,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ownership",{"_index":1823,"title":{},"body":{"classes/NewsResponse.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owns",{"_index":5476,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["p",{"_index":5065,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["package",{"_index":3512,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"todo.html":{}}}],["packaged",{"_index":4497,"title":{},"body":{"license.html":{}}}],["packages",{"_index":4878,"title":{},"body":{"todo.html":{}}}],["packaging",{"_index":4384,"title":{},"body":{"license.html":{}}}],["page",{"_index":1951,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/PaginationQuery.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["pages",{"_index":1957,"title":{},"body":{"classes/PaginationQuery.html":{},"index.html":{}}}],["paginate",{"_index":977,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["pagination",{"_index":1225,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["pagination.query",{"_index":5429,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pagination?.limit",{"_index":2309,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["pagination?.skip",{"_index":2308,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["pagination].query.ts",{"_index":5494,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationquery",{"_index":1622,"title":{"classes/PaginationQuery.html":{}},"body":{"controllers/NewsController.html":{},"classes/PaginationQuery.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationresponse",{"_index":1640,"title":{"classes/PaginationResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["paginationresponse(dtolist",{"_index":1659,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["paginationresponse(taskresponses",{"_index":2248,"title":{},"body":{"controllers/TaskController.html":{}}}],["paging",{"_index":3836,"title":{},"body":{"changelog.html":{}}}],["papaparse",{"_index":4096,"title":{},"body":{"dependencies.html":{}}}],["paper",{"_index":4850,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":4653,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":4727,"title":{},"body":{"license.html":{}}}],["parallel",{"_index":3022,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["parallelize",{"_index":2885,"title":{},"body":{"changelog.html":{}}}],["param",{"_index":189,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{}}}],["param('id",{"_index":1663,"title":{},"body":{"controllers/NewsController.html":{}}}],["param('teamid",{"_index":2420,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["param)).rejects.tothrow(badrequestexception",{"_index":5692,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["param)).tothrow(badrequestexception",{"_index":5690,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["param.ts",{"_index":5428,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paramdisplayat",{"_index":1909,"title":{},"body":{"injectables/NewsUc.html":{}}}],["parameter",{"_index":1660,"title":{},"body":{"controllers/NewsController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["parameters",{"_index":26,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ILogger.html":{},"interfaces/ITaskParent.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["params",{"_index":1011,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["params.content",{"_index":1738,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.displayat",{"_index":1739,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.target",{"_index":1906,"title":{},"body":{"injectables/NewsUc.html":{}}}],["params.targetid",{"_index":1741,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.targetmodel",{"_index":1740,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.title",{"_index":1737,"title":{},"body":{"classes/NewsMapper.html":{}}}],["param|query].ts",{"_index":5427,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parent",{"_index":1260,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"changelog.html":{}}}],["parentdata",{"_index":2264,"title":{},"body":{"classes/TaskMapper.html":{}}}],["parentdata.color",{"_index":2269,"title":{},"body":{"classes/TaskMapper.html":{}}}],["parentdata.name",{"_index":2267,"title":{},"body":{"classes/TaskMapper.html":{}}}],["parentids",{"_index":2286,"title":{},"body":{"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{}}}],["parents",{"_index":2285,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["parse",{"_index":3446,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parsed",{"_index":5491,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parseobjectidpipe",{"_index":1639,"title":{"injectables/ParseObjectIdPipe.html":{}},"body":{"controllers/NewsController.html":{},"injectables/ParseObjectIdPipe.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parser",{"_index":4028,"title":{},"body":{"dependencies.html":{}}}],["parsing",{"_index":2687,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["part",{"_index":4163,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["partial",{"_index":1199,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/IFindOptions.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"classes/Scope.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["partialtype",{"_index":2456,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["particular",{"_index":4378,"title":{},"body":{"license.html":{}}}],["parties",{"_index":4348,"title":{},"body":{"license.html":{}}}],["parts",{"_index":4409,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["party",{"_index":4542,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["party's",{"_index":4693,"title":{},"body":{"license.html":{}}}],["pascalcase",{"_index":5456,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pass",{"_index":1170,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["passed",{"_index":5034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passport",{"_index":1413,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":127,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":1415,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":1417,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":2162,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["passwordrecovery",{"_index":3098,"title":{},"body":{"changelog.html":{}}}],["past",{"_index":500,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["patch",{"_index":1637,"title":{},"body":{"controllers/NewsController.html":{},"changelog.html":{}}}],["patch(':id",{"_index":1634,"title":{},"body":{"controllers/NewsController.html":{}}}],["patching",{"_index":3606,"title":{},"body":{"changelog.html":{}}}],["patent",{"_index":4652,"title":{},"body":{"license.html":{}}}],["patents",{"_index":4712,"title":{},"body":{"license.html":{}}}],["path",{"_index":1041,"title":{},"body":{"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["path's",{"_index":5017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paths",{"_index":2726,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["pattern",{"_index":641,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["payload",{"_index":1410,"title":{},"body":{"injectables/JwtStrategy.html":{},"changelog.html":{}}}],["payload.ts",{"_index":1402,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["payload.user",{"_index":1430,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payment",{"_index":4757,"title":{},"body":{"license.html":{}}}],["peer",{"_index":4550,"title":{},"body":{"license.html":{}}}],["peers",{"_index":4553,"title":{},"body":{"license.html":{}}}],["pencil",{"_index":3154,"title":{},"body":{"changelog.html":{}}}],["per",{"_index":5443,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["performance",{"_index":3002,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["performing",{"_index":4400,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":4661,"title":{},"body":{"license.html":{}}}],["permission",{"_index":504,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"changelog.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["permission.includes('news",{"_index":1947,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permissions",{"_index":166,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolNews.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["permissions.every((p",{"_index":199,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["permissions.filter((permission",{"_index":1946,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permissions.refid",{"_index":3787,"title":{},"body":{"changelog.html":{}}}],["permissions.refpermmodel",{"_index":3788,"title":{},"body":{"changelog.html":{}}}],["permissive",{"_index":4479,"title":{},"body":{"license.html":{}}}],["permit",{"_index":4510,"title":{},"body":{"license.html":{}}}],["permits",{"_index":4292,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":4238,"title":{},"body":{"license.html":{}}}],["permittedcourses",{"_index":2225,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["permittedcourses.map((o",{"_index":2230,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["perpetuity",{"_index":4591,"title":{},"body":{"license.html":{}}}],["persist",{"_index":257,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/NewsRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persist(entity",{"_index":270,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"injectables/NewsRepo.html":{}}}],["persist/make",{"_index":5509,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["persistall",{"_index":258,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["persistall(entities",{"_index":273,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["persistallandflush",{"_index":259,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["persistallandflush(entities",{"_index":275,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["persistance",{"_index":2600,"title":{},"body":{"changelog.html":{}}}],["persistandflush",{"_index":260,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["persistandflush(entity",{"_index":277,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["persisted",{"_index":291,"title":{},"body":{"injectables/BaseRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persistence",{"_index":5512,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["persistent",{"_index":1545,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["persisting",{"_index":5604,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["person",{"_index":5637,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["personal",{"_index":2911,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["pertinent",{"_index":4774,"title":{},"body":{"license.html":{}}}],["phenomenon",{"_index":5523,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["physical",{"_index":4518,"title":{},"body":{"license.html":{}}}],["physically",{"_index":4531,"title":{},"body":{"license.html":{}}}],["pick",{"_index":3246,"title":{},"body":{"changelog.html":{}}}],["pieces",{"_index":4268,"title":{},"body":{"license.html":{}}}],["pin",{"_index":2930,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["pins",{"_index":3111,"title":{},"body":{"changelog.html":{}}}],["pipe",{"_index":1153,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pipe/global",{"_index":2531,"title":{},"body":{"modules/ValidationModule.html":{}}}],["pipeline",{"_index":2859,"title":{},"body":{"changelog.html":{}}}],["pipes",{"_index":5446,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["pipetransform",{"_index":1981,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["pipline",{"_index":3466,"title":{},"body":{"changelog.html":{}}}],["place",{"_index":2613,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["plain",{"_index":5499,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["plainsecrets",{"_index":3306,"title":{},"body":{"changelog.html":{}}}],["plaintextcontent",{"_index":104,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["plaintextmailcontent",{"_index":102,"title":{"interfaces/PlainTextMailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["platform",{"_index":3909,"title":{},"body":{"changelog.html":{}}}],["please",{"_index":5291,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["plugin",{"_index":4048,"title":{},"body":{"dependencies.html":{}}}],["plus",{"_index":4697,"title":{},"body":{"license.html":{}}}],["point",{"_index":614,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{}}}],["pointer",{"_index":4847,"title":{},"body":{"license.html":{}}}],["policy",{"_index":3753,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["polymorphic",{"_index":723,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["pool",{"_index":3288,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["populate",{"_index":1804,"title":{},"body":{"injectables/NewsRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["populated",{"_index":531,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["populates",{"_index":3709,"title":{},"body":{"changelog.html":{}}}],["port",{"_index":5070,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["portion",{"_index":4557,"title":{},"body":{"license.html":{}}}],["pos",{"_index":764,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["pos.x",{"_index":767,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["pos.y",{"_index":769,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["position",{"_index":740,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["possesses",{"_index":4528,"title":{},"body":{"license.html":{}}}],["possession",{"_index":4495,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":4828,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["possible",{"_index":3250,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["post",{"_index":1612,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["potential",{"_index":3013,"title":{},"body":{"changelog.html":{}}}],["povider",{"_index":4897,"title":{},"body":{"todo.html":{}}}],["power",{"_index":4463,"title":{},"body":{"license.html":{}}}],["pr",{"_index":4197,"title":{},"body":{"index.html":{}}}],["practical",{"_index":4251,"title":{},"body":{"license.html":{}}}],["practice",{"_index":4731,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["practices",{"_index":5794,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["practices/layers/orm",{"_index":4902,"title":{},"body":{"todo.html":{}}}],["preamble",{"_index":4242,"title":{},"body":{"license.html":{}}}],["precise",{"_index":4307,"title":{},"body":{"license.html":{}}}],["preconditions",{"_index":4158,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["predecessor",{"_index":4694,"title":{},"body":{"license.html":{}}}],["predefined",{"_index":5608,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["preexisting",{"_index":5652,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["preferred",{"_index":4371,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["prefix",{"_index":646,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["preload",{"_index":3618,"title":{},"body":{"changelog.html":{}}}],["preloaded",{"_index":5818,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["preloading",{"_index":5817,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["prematurely",{"_index":3663,"title":{},"body":{"changelog.html":{}}}],["prepare",{"_index":1493,"title":{},"body":{"injectables/Logger.html":{}}}],["preparing",{"_index":2732,"title":{},"body":{"changelog.html":{}}}],["prepended",{"_index":4183,"title":{},"body":{"index.html":{}}}],["present",{"_index":3373,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["presentation",{"_index":5211,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["presents",{"_index":4364,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":4622,"title":{},"body":{"license.html":{}}}],["prettier",{"_index":3580,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["prevent",{"_index":236,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{}}}],["prevented",{"_index":3402,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["previous",{"_index":4696,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["price",{"_index":4263,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":4759,"title":{},"body":{"license.html":{}}}],["primary",{"_index":3262,"title":{},"body":{"changelog.html":{}}}],["primarykey",{"_index":212,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["primaryrolesearchoperation",{"_index":1282,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["primaryrolesearchoperation'})@unique",{"_index":2014,"title":{},"body":{"classes/Role.html":{}}}],["principle",{"_index":5714,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["principles",{"_index":5157,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["principles/command",{"_index":5555,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["print",{"_index":3470,"title":{},"body":{"changelog.html":{}}}],["prior",{"_index":4663,"title":{},"body":{"license.html":{}}}],["prioritization",{"_index":2914,"title":{},"body":{"changelog.html":{}}}],["prisma",{"_index":5803,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["privacy",{"_index":3749,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":588,"title":{},"body":{"classes/CourseScope.html":{},"injectables/DashboardUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserUC.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["privatedevice",{"_index":1461,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["problem",{"_index":3816,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["problems",{"_index":3199,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["procedures",{"_index":4584,"title":{},"body":{"license.html":{}}}],["process",{"_index":3554,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["processed",{"_index":5402,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["processes",{"_index":5354,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["processing",{"_index":5250,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["procuring",{"_index":4749,"title":{},"body":{"license.html":{}}}],["produce",{"_index":4391,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["produces",{"_index":5600,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["product",{"_index":4519,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["production",{"_index":2782,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["products",{"_index":4760,"title":{},"body":{"license.html":{}}}],["program",{"_index":4258,"title":{},"body":{"license.html":{}}}],["program's",{"_index":4473,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":4857,"title":{},"body":{"license.html":{}}}],["programming",{"_index":4379,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["programs",{"_index":4269,"title":{},"body":{"license.html":{}}}],["prohibit",{"_index":4434,"title":{},"body":{"license.html":{},"todo.html":{}}}],["prohibiting",{"_index":4460,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":4754,"title":{},"body":{"license.html":{}}}],["project",{"_index":2538,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prom",{"_index":4100,"title":{},"body":{"dependencies.html":{}}}],["prometheus",{"_index":3308,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["prominent",{"_index":4367,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":4359,"title":{},"body":{"license.html":{}}}],["promise",{"_index":174,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/IDashboardRepo.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["promise((resolve",{"_index":883,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["promise.all",{"_index":803,"title":{},"body":{"classes/DashboardModelMapper.html":{},"injectables/NewsUc.html":{},"injectables/UserUC.html":{}}}],["promise.all(ids.map((id",{"_index":2042,"title":{},"body":{"injectables/RoleUC.html":{}}}],["promise.resolve(currentuser.user",{"_index":2483,"title":{},"body":{"controllers/UserController.html":{}}}],["promises",{"_index":5673,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["promisify",{"_index":4047,"title":{},"body":{"dependencies.html":{}}}],["propagate",{"_index":4330,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":4680,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":4341,"title":{},"body":{"license.html":{}}}],["proper",{"_index":3857,"title":{},"body":{"changelog.html":{}}}],["properly",{"_index":3257,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":11,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/FeathersError.html":{},"classes/File.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/Lesson.html":{},"interfaces/LessonProperties.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"interfaces/MailServiceOptions.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"classes/School.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/Submission.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationError.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["properties)mongodb",{"_index":5800,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["propertiestopopulate",{"_index":1765,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["property",{"_index":216,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"interfaces/LessonProperties.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["property()@index({name",{"_index":2013,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["property({default",{"_index":390,"title":{},"body":{"classes/Course.html":{}}}],["property({onupdate",{"_index":251,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["propertydecorator",{"_index":4153,"title":{},"body":{"miscellaneous/functions.html":{}}}],["props",{"_index":388,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/File.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["props.color",{"_index":453,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.comment",{"_index":1324,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["props.content",{"_index":535,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.course",{"_index":469,"title":{},"body":{"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"classes/Lesson.html":{},"interfaces/LessonProperties.html":{}}}],["props.creator",{"_index":539,"title":{},"body":{"classes/CourseNews.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.description",{"_index":443,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.displayat",{"_index":537,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.duedate",{"_index":1272,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["props.email",{"_index":1356,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["props.externalid",{"_index":543,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.firstname",{"_index":1352,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["props.grade",{"_index":1327,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["props.gradecomment",{"_index":1328,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["props.grid",{"_index":702,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["props.hidden",{"_index":1477,"title":{},"body":{"classes/Lesson.html":{},"interfaces/LessonProperties.html":{}}}],["props.lastname",{"_index":1354,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["props.lesson",{"_index":1278,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["props.name",{"_index":441,"title":{},"body":{"classes/Course.html":{},"classes/File.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/Task.html":{},"classes/Team.html":{}}}],["props.parent",{"_index":1276,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["props.permissions",{"_index":1288,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["props.private",{"_index":1273,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["props.roles",{"_index":1290,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["props.school",{"_index":446,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/ICourseProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["props.source",{"_index":545,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.sourcedescription",{"_index":547,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.student",{"_index":1322,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["props.students",{"_index":447,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{}}}],["props.substitutionteachers",{"_index":451,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.target",{"_index":541,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.task",{"_index":1326,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["props.teachers",{"_index":449,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.title",{"_index":533,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.updater",{"_index":540,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["protect",{"_index":4271,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["protected",{"_index":2431,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["protecting",{"_index":4444,"title":{},"body":{"license.html":{}}}],["protection",{"_index":4484,"title":{},"body":{"license.html":{}}}],["protocol",{"_index":5150,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["protocols",{"_index":4604,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prove",{"_index":4808,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["provide",{"_index":891,"title":{},"body":{"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["provided",{"_index":184,"title":{},"body":{"injectables/AuthorizationService.html":{},"modules/ErrorModule.html":{},"injectables/Logger.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["provider",{"_index":1497,"title":{},"body":{"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["providers",{"_index":125,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["provides",{"_index":1491,"title":{},"body":{"injectables/Logger.html":{},"injectables/NewsUc.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["providing",{"_index":364,"title":{},"body":{"modules/CoreModule.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["provision",{"_index":4616,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":4658,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":4798,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":4799,"title":{},"body":{"license.html":{}}}],["pseudonym/roster/ltitools",{"_index":3177,"title":{},"body":{"changelog.html":{}}}],["pseudonyms",{"_index":3110,"title":{},"body":{"changelog.html":{}}}],["public",{"_index":875,"title":{},"body":{"controllers/DelayController.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"controllers/ServerController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["publicity",{"_index":4627,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":4300,"title":{},"body":{"license.html":{}}}],["publicteachers",{"_index":3870,"title":{},"body":{"changelog.html":{}}}],["publish",{"_index":2810,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["published",{"_index":620,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsUc.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pull",{"_index":3376,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{}}}],["pulled",{"_index":5285,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["purpose",{"_index":4398,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":4566,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["pursuant",{"_index":4747,"title":{},"body":{"license.html":{}}}],["push",{"_index":2652,"title":{},"body":{"changelog.html":{}}}],["put",{"_index":719,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["putting",{"_index":5511,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["qa",{"_index":3313,"title":{},"body":{"changelog.html":{}}}],["qf",{"_index":2899,"title":{},"body":{"changelog.html":{}}}],["qr",{"_index":3101,"title":{},"body":{"changelog.html":{}}}],["qs",{"_index":3357,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["qualify",{"_index":4670,"title":{},"body":{"license.html":{}}}],["quality",{"_index":4807,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["queries",{"_index":1853,"title":{},"body":{"classes/NewsScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["queries.length",{"_index":1857,"title":{},"body":{"classes/NewsScope.html":{}}}],["queries/requests",{"_index":5341,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["query",{"_index":587,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/FeathersAuthProvider.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["query.targetid",{"_index":1734,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.targetmodel",{"_index":1733,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.unpublished",{"_index":1736,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query/body",{"_index":5490,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["query/empty",{"_index":2071,"title":{},"body":{"classes/Scope.html":{}}}],["queryelement",{"_index":2094,"title":{},"body":{"classes/Scope.html":{}}}],["queryobject",{"_index":2073,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/typealiases.html":{}}}],["queryordermap",{"_index":1789,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["querys",{"_index":2170,"title":{},"body":{"modules/ServerModule.html":{}}}],["querystring",{"_index":3356,"title":{},"body":{"changelog.html":{}}}],["rabbitmq",{"_index":1516,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{}}}],["rabbitmq:3.8.9",{"_index":5068,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["rabbitmq_url",{"_index":5062,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["rabbitmqmodule",{"_index":1514,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["rabbitmqmodule.forroot(rabbitmqmodule",{"_index":1525,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["rabbitmqmoduleoptions",{"_index":1522,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["raise",{"_index":3553,"title":{},"body":{"changelog.html":{}}}],["ram",{"_index":2951,"title":{},"body":{"changelog.html":{}}}],["rates",{"_index":5311,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["re",{"_index":3742,"title":{},"body":{"changelog.html":{}}}],["react",{"_index":4049,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":1629,"title":{},"body":{"controllers/NewsController.html":{},"injectables/TaskAuthorizationService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["readable",{"_index":4515,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["readily",{"_index":4736,"title":{},"body":{"license.html":{}}}],["reading",{"_index":4607,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["readme",{"_index":3399,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":12,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["readpreference",{"_index":3260,"title":{},"body":{"changelog.html":{}}}],["reads",{"_index":3161,"title":{},"body":{"changelog.html":{}}}],["ready",{"_index":5539,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["real",{"_index":5713,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["really",{"_index":422,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["reason",{"_index":4745,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":4529,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["receipt",{"_index":4668,"title":{},"body":{"license.html":{}}}],["receive",{"_index":4266,"title":{},"body":{"license.html":{}}}],["received",{"_index":4499,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["receives",{"_index":4684,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":4751,"title":{},"body":{"license.html":{}}}],["recent",{"_index":3818,"title":{},"body":{"changelog.html":{}}}],["recieve",{"_index":2597,"title":{},"body":{"changelog.html":{}}}],["recipient",{"_index":4590,"title":{},"body":{"license.html":{}}}],["recipient's",{"_index":4743,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":107,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"license.html":{}}}],["recognized",{"_index":4375,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":5830,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["recommendations",{"_index":5824,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["recommended",{"_index":5822,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["reconnect",{"_index":3645,"title":{},"body":{"changelog.html":{}}}],["record",{"_index":34,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/Scope.html":{},"classes/ValidationError.html":{},"miscellaneous/typealiases.html":{}}}],["recreate",{"_index":3083,"title":{},"body":{"changelog.html":{}}}],["recreating",{"_index":3550,"title":{},"body":{"changelog.html":{}}}],["red",{"_index":4896,"title":{},"body":{"todo.html":{}}}],["redis",{"_index":1454,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"dependencies.html":{}}}],["redisidentifier",{"_index":1462,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["redistribute",{"_index":4843,"title":{},"body":{"license.html":{}}}],["reduce",{"_index":2663,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reducer",{"_index":2089,"title":{},"body":{"classes/Scope.html":{}}}],["reduces",{"_index":3296,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["redundant",{"_index":5165,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refactor",{"_index":838,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"changelog.html":{}}}],["refactored",{"_index":2592,"title":{},"body":{"changelog.html":{}}}],["refactoring",{"_index":2733,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["refactorings",{"_index":5283,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refactors",{"_index":3299,"title":{},"body":{"changelog.html":{}}}],["refer",{"_index":5521,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["reference",{"_index":530,"title":{},"body":{"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reference.color",{"_index":795,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["reference.title",{"_index":797,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["referenced",{"_index":516,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["references",{"_index":684,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["referring",{"_index":4262,"title":{},"body":{"license.html":{}}}],["refers",{"_index":4312,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":4106,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["reflects",{"_index":5528,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["refrain",{"_index":4778,"title":{},"body":{"license.html":{}}}],["regard",{"_index":4612,"title":{},"body":{"license.html":{}}}],["regarding",{"_index":4180,"title":{},"body":{"index.html":{}}}],["regardless",{"_index":4496,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["regards",{"_index":3790,"title":{},"body":{"changelog.html":{}}}],["regenerate",{"_index":4411,"title":{},"body":{"license.html":{}}}],["regex",{"_index":3439,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["registered",{"_index":2927,"title":{},"body":{"changelog.html":{}}}],["registernewuser(creatorid",{"_index":5561,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["registration",{"_index":2558,"title":{},"body":{"changelog.html":{}}}],["registrationlink",{"_index":3495,"title":{},"body":{"changelog.html":{}}}],["registrationlinks",{"_index":3761,"title":{},"body":{"changelog.html":{}}}],["registrationpin",{"_index":3241,"title":{},"body":{"changelog.html":{}}}],["regression",{"_index":3874,"title":{},"body":{"changelog.html":{}}}],["reigstration",{"_index":3237,"title":{},"body":{"changelog.html":{}}}],["reimplement",{"_index":5740,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reinstated",{"_index":4657,"title":{},"body":{"license.html":{}}}],["rejected",{"_index":5750,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["rejections",{"_index":3498,"title":{},"body":{"changelog.html":{}}}],["related",{"_index":625,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["relates",{"_index":5544,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["relation",{"_index":5811,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["relations",{"_index":2587,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["relationship",{"_index":4437,"title":{},"body":{"license.html":{}}}],["release",{"_index":2925,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["released",{"_index":4305,"title":{},"body":{"license.html":{}}}],["releasing",{"_index":4294,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":4489,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["relicensing",{"_index":4306,"title":{},"body":{"license.html":{}}}],["relies",{"_index":5502,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reload",{"_index":4909,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["relying",{"_index":4735,"title":{},"body":{"license.html":{}}}],["remain",{"_index":4547,"title":{},"body":{"license.html":{}}}],["remains",{"_index":4260,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["remote",{"_index":4780,"title":{},"body":{"license.html":{}}}],["remotely",{"_index":4782,"title":{},"body":{"license.html":{}}}],["removal",{"_index":4613,"title":{},"body":{"license.html":{}}}],["remove",{"_index":261,"title":{},"body":{"injectables/BaseRepo.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["remove(entity",{"_index":279,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removeall",{"_index":262,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removeall(entities",{"_index":282,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removeallandflush",{"_index":263,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removeallandflush(entities",{"_index":284,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removeandflush",{"_index":264,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removeandflush(entity",{"_index":286,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removed",{"_index":2546,"title":{},"body":{"changelog.html":{}}}],["removeing",{"_index":2802,"title":{},"body":{"changelog.html":{}}}],["removing",{"_index":3252,"title":{},"body":{"changelog.html":{}}}],["rename",{"_index":2561,"title":{},"body":{"changelog.html":{}}}],["rename_team",{"_index":3692,"title":{},"body":{"changelog.html":{}}}],["renamed",{"_index":3364,"title":{},"body":{"changelog.html":{}}}],["rendered",{"_index":4821,"title":{},"body":{"license.html":{}}}],["repair",{"_index":3181,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["repaired",{"_index":3210,"title":{},"body":{"changelog.html":{}}}],["replace",{"_index":2370,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["replaced",{"_index":793,"title":{},"body":{"classes/DashboardModelMapper.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["replaces",{"_index":3337,"title":{},"body":{"changelog.html":{}}}],["replacing",{"_index":5591,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["replikaset",{"_index":4899,"title":{},"body":{"todo.html":{}}}],["replyto",{"_index":110,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["repo",{"_index":2041,"title":{},"body":{"injectables/RoleUC.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"modules/UserModule.html":{},"injectables/UserUC.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repo.integration.spec.js",{"_index":5718,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["repo.ts",{"_index":5435,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["repo/news",{"_index":1901,"title":{},"body":{"injectables/NewsUc.html":{}}}],["repo/news.repo",{"_index":1752,"title":{},"body":{"modules/NewsModule.html":{},"injectables/NewsUc.html":{}}}],["report",{"_index":3649,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["reported",{"_index":5621,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["reporting",{"_index":5223,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reports",{"_index":5732,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["repositories",{"_index":2682,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repository",{"_index":4157,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["represent",{"_index":4581,"title":{},"body":{"license.html":{}}}],["representation",{"_index":5122,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["req",{"_index":5767,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["req.user",{"_index":5769,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reqlib",{"_index":3121,"title":{},"body":{"changelog.html":{}}}],["request",{"_index":995,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["request(app.gethttpserver()).delete(`/news/${newsid}`).expect(404",{"_index":5796,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["request(app.gethttpserver()).get(`/news`).expect(200",{"_index":5787,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["request.user",{"_index":1432,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["request.user.user",{"_index":1433,"title":{},"body":{"injectables/JwtStrategy.html":{},"todo.html":{}}}],["request/response",{"_index":5305,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["request/response/error",{"_index":5312,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["request_timeout",{"_index":2435,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requested",{"_index":2166,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["requester",{"_index":3465,"title":{},"body":{"changelog.html":{}}}],["requests",{"_index":1364,"title":{},"body":{"modules/InterceptorModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["requesttimeoutexception",{"_index":2442,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["require",{"_index":3123,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["require('../../../../../../src/services/authentication/logic/whitelist",{"_index":1456,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["require('../../../../../src/services/authentication/configuration",{"_index":1375,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["require('../../../../config/globals",{"_index":1054,"title":{},"body":{"interfaces/GlobalConstants.html":{}}}],["require('./tsconfig.json",{"_index":5023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('ts",{"_index":5021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1176,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/JwtValidationAdapter.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["requiredpermissions",{"_index":1927,"title":{},"body":{"injectables/NewsUc.html":{}}}],["requirement",{"_index":4490,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":4549,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["requires",{"_index":1034,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"injectables/TaskUC.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["requiring",{"_index":4325,"title":{},"body":{"license.html":{}}}],["reset",{"_index":122,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/nestjs-application.html":{}}}],["resolve",{"_index":3164,"title":{},"body":{"changelog.html":{}}}],["resolved",{"_index":2515,"title":{},"body":{"injectables/UserUC.html":{},"license.html":{}}}],["resolved.permissions",{"_index":2519,"title":{},"body":{"injectables/UserUC.html":{}}}],["resolved.roles",{"_index":2520,"title":{},"body":{"injectables/UserUC.html":{}}}],["resolveduser",{"_index":1428,"title":{"classes/ResolvedUser.html":{}},"body":{"injectables/JwtStrategy.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserUC.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resolvedusermapper",{"_index":1995,"title":{"classes/ResolvedUserMapper.html":{}},"body":{"classes/ResolvedUserMapper.html":{},"injectables/UserUC.html":{},"coverage.html":{}}}],["resolvedusermapper.maptoresponse(user",{"_index":2518,"title":{},"body":{"injectables/UserUC.html":{},"miscellaneous/variables.html":{}}}],["resolvepermissionsbyidlist",{"_index":2036,"title":{},"body":{"injectables/RoleUC.html":{}}}],["resolvepermissionsbyidlist(ids",{"_index":2039,"title":{},"body":{"injectables/RoleUC.html":{}}}],["resolvepermissionsfromsubrolesbyid",{"_index":2022,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["resolvepermissionsfromsubrolesbyid(id",{"_index":2028,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["resolves",{"_index":1773,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["resolveuser",{"_index":2485,"title":{},"body":{"injectables/UserFacade.html":{}}}],["resolveuser(currentuser",{"_index":2488,"title":{},"body":{"injectables/UserFacade.html":{}}}],["resort",{"_index":2681,"title":{},"body":{"changelog.html":{}}}],["resource",{"_index":2664,"title":{},"body":{"changelog.html":{}}}],["resources",{"_index":5729,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["respect",{"_index":4467,"title":{},"body":{"license.html":{}}}],["respond",{"_index":4920,"title":{},"body":{"todo.html":{}}}],["responds",{"_index":1624,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["response",{"_index":66,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"controllers/NewsController.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["response.body",{"_index":5788,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["response.status(errorresponse.code).json(errorresponse",{"_index":1149,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["response.ts",{"_index":5431,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["response].ts",{"_index":5430,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responses",{"_index":5248,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsibilities",{"_index":5488,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responsibility",{"_index":5191,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsible",{"_index":4685,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["respository",{"_index":5508,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["ressource",{"_index":2917,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["ressources",{"_index":5077,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["resssource",{"_index":4921,"title":{},"body":{"todo.html":{}}}],["rest",{"_index":898,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["restart",{"_index":5374,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restful/socket",{"_index":5302,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restored",{"_index":3398,"title":{},"body":{"changelog.html":{}}}],["restrict",{"_index":3118,"title":{},"body":{"changelog.html":{}}}],["restricted",{"_index":1930,"title":{},"body":{"injectables/NewsUc.html":{}}}],["restricting",{"_index":4461,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":4644,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":3747,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["restricts",{"_index":3460,"title":{},"body":{"changelog.html":{}}}],["restructure",{"_index":2823,"title":{},"body":{"changelog.html":{}}}],["result",{"_index":1861,"title":{},"body":{"classes/NewsScope.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["result.query",{"_index":2072,"title":{},"body":{"classes/Scope.html":{}}}],["result.query.ts",{"_index":3983,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["resulted",{"_index":3739,"title":{},"body":{"changelog.html":{}}}],["resulting",{"_index":4290,"title":{},"body":{"license.html":{}}}],["results",{"_index":59,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"interfaces/LessonProperties.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["retains",{"_index":4594,"title":{},"body":{"license.html":{}}}],["retention",{"_index":5360,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieve",{"_index":1628,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieves",{"_index":5396,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retry",{"_index":5368,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["return",{"_index":83,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["returned",{"_index":3629,"title":{},"body":{"changelog.html":{}}}],["returning",{"_index":2324,"title":{},"body":{"classes/TaskResponse.html":{},"changelog.html":{}}}],["returns",{"_index":41,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/ILogger.html":{},"interfaces/ITaskParent.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["retvalue",{"_index":5667,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reusability",{"_index":5163,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reused",{"_index":5445,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reused/called",{"_index":5261,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["revert",{"_index":2984,"title":{},"body":{"changelog.html":{}}}],["reverted",{"_index":3087,"title":{},"body":{"changelog.html":{}}}],["review",{"_index":3429,"title":{},"body":{"changelog.html":{}}}],["reviewers",{"_index":4212,"title":{},"body":{"index.html":{}}}],["reviewing",{"_index":4831,"title":{},"body":{"license.html":{}}}],["revised",{"_index":4788,"title":{},"body":{"license.html":{}}}],["rewrite",{"_index":2579,"title":{},"body":{"changelog.html":{}}}],["rich",{"_index":5527,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["right",{"_index":3905,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["rights",{"_index":4272,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rimraf",{"_index":4112,"title":{},"body":{"dependencies.html":{}}}],["risk",{"_index":4806,"title":{},"body":{"license.html":{}}}],["rocket",{"_index":3026,"title":{},"body":{"changelog.html":{}}}],["rocketchat",{"_index":3475,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rocketchatadapter",{"_index":5257,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["role",{"_index":1210,"title":{"classes/Role.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"injectables/JwtStrategy.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"classes/User.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["role.entity",{"_index":1347,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["role.id",{"_index":2011,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"miscellaneous/variables.html":{}}}],["role.name",{"_index":2010,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["role.permissions",{"_index":2045,"title":{},"body":{"injectables/RoleUC.html":{}}}],["role.uc",{"_index":2514,"title":{},"body":{"injectables/UserUC.html":{}}}],["role/permissions",{"_index":5304,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["roleidbasedsearches",{"_index":1349,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["roleidbasedsearches'})@manytomany('role",{"_index":2470,"title":{},"body":{"classes/User.html":{}}}],["roleids",{"_index":3575,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["rolerepo",{"_index":2017,"title":{"injectables/RoleRepo.html":{}},"body":{"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["roles",{"_index":1207,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleUC.html":{},"classes/User.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["roles.foreach((role",{"_index":2044,"title":{},"body":{"injectables/RoleUC.html":{}}}],["roles.map((role",{"_index":2009,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"miscellaneous/variables.html":{}}}],["roleuc",{"_index":2034,"title":{"injectables/RoleUC.html":{}},"body":{"injectables/RoleUC.html":{},"modules/UserModule.html":{},"injectables/UserUC.html":{},"coverage.html":{},"overview.html":{}}}],["rollback",{"_index":3551,"title":{},"body":{"changelog.html":{}}}],["rom",{"_index":4597,"title":{},"body":{"license.html":{}}}],["room",{"_index":3129,"title":{},"body":{"changelog.html":{}}}],["rooms",{"_index":3453,"title":{},"body":{"changelog.html":{}}}],["root",{"_index":230,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"index.html":{}}}],["rootdir",{"_index":4991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rootpath",{"_index":3317,"title":{},"body":{"changelog.html":{}}}],["roots",{"_index":5015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rostering",{"_index":3180,"title":{},"body":{"changelog.html":{}}}],["roughly",{"_index":5737,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["route",{"_index":873,"title":{},"body":{"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"controllers/ServerController.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["route/hash",{"_index":3415,"title":{},"body":{"changelog.html":{}}}],["routes",{"_index":2706,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["routes.test.js",{"_index":3523,"title":{},"body":{"changelog.html":{}}}],["routingkey",{"_index":1521,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ServerModule.html":{}}}],["royalty",{"_index":4701,"title":{},"body":{"license.html":{}}}],["rss",{"_index":511,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["rule",{"_index":5548,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["rules",{"_index":3094,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["run",{"_index":2552,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["runner",{"_index":5695,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["running",{"_index":2428,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["runs",{"_index":2834,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["runtime",{"_index":5703,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["rxjs",{"_index":910,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":912,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["s3",{"_index":2615,"title":{},"body":{"changelog.html":{}}}],["s3_key",{"_index":3898,"title":{},"body":{"changelog.html":{}}}],["safari",{"_index":3173,"title":{},"body":{"changelog.html":{}}}],["safest",{"_index":4845,"title":{},"body":{"license.html":{}}}],["safety",{"_index":4186,"title":{},"body":{"index.html":{}}}],["sale",{"_index":4710,"title":{},"body":{"license.html":{}}}],["same",{"_index":3461,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["sameschool",{"_index":965,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["sample",{"_index":1029,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/ServerConsole.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["samplecontroller",{"_index":5708,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["samples",{"_index":5462,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sampleservice",{"_index":5709,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sampleucmethod(params",{"_index":5597,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sanitization",{"_index":3249,"title":{},"body":{"changelog.html":{}}}],["sanitize",{"_index":3127,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["sanitizer",{"_index":4876,"title":{},"body":{"todo.html":{}}}],["satisfied",{"_index":195,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["satisfy",{"_index":183,"title":{},"body":{"injectables/AuthorizationService.html":{},"license.html":{}}}],["save",{"_index":5112,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["saying",{"_index":4545,"title":{},"body":{"license.html":{}}}],["sc",{"_index":2639,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["scan",{"_index":3851,"title":{},"body":{"changelog.html":{}}}],["scenarios",{"_index":5278,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schema",{"_index":432,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["schema.ts",{"_index":5434,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["schemas",{"_index":2928,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["scheme",{"_index":5030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["school",{"_index":379,"title":{"classes/School.html":{}},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["school's",{"_index":3070,"title":{},"body":{"changelog.html":{}}}],["school._id",{"_index":5042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["school._id.tohexstring",{"_index":5044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["school.entity",{"_index":419,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/ICourseProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["school.id",{"_index":5043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["school_edit",{"_index":3863,"title":{},"body":{"changelog.html":{}}}],["school_student_team_manage",{"_index":3864,"title":{},"body":{"changelog.html":{}}}],["schoolfactory",{"_index":3976,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["schoolfactory.build",{"_index":5039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schoolid",{"_index":397,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["schoolids",{"_index":3463,"title":{},"body":{"changelog.html":{}}}],["schoolinfo",{"_index":2055,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfo.id",{"_index":2056,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfo.name",{"_index":2058,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfomapper",{"_index":1699,"title":{"classes/SchoolInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"coverage.html":{}}}],["schoolinfomapper.maptoresponse(news.school",{"_index":1721,"title":{},"body":{"classes/NewsMapper.html":{}}}],["schoolinforesponse",{"_index":1822,"title":{"classes/SchoolInfoResponse.html":{}},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"coverage.html":{}}}],["schoolnews",{"_index":561,"title":{"classes/SchoolNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["schoolnews(props",{"_index":559,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["schools",{"_index":1195,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/School.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schoolslist",{"_index":2788,"title":{},"body":{"changelog.html":{}}}],["schoolyear",{"_index":3678,"title":{},"body":{"changelog.html":{}}}],["schoolyears",{"_index":2603,"title":{},"body":{"changelog.html":{}}}],["schould",{"_index":616,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{}}}],["schul",{"_index":2144,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schulcloud",{"_index":886,"title":{},"body":{"controllers/DelayController.html":{},"controllers/ServerController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["schule",{"_index":3725,"title":{},"body":{"changelog.html":{}}}],["schuljahreswechsel",{"_index":3634,"title":{},"body":{"changelog.html":{}}}],["scope",{"_index":576,"title":{"classes/Scope.html":{}},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["scope.afterduedateornone(duedate",{"_index":2304,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.bylessonsornone(visiblelessons.map((o",{"_index":2300,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.byparentids(parentids",{"_index":2298,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.bypublic",{"_index":2299,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.bytargets(targets",{"_index":1792,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.byunpublished(unpublished",{"_index":1793,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.forallgrouptypes(userid",{"_index":584,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["scope.query",{"_index":586,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["scope.request",{"_index":1021,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["scope.target",{"_index":1939,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope.targetid",{"_index":2423,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["scope.targetmodel",{"_index":2424,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["scope.transient",{"_index":1482,"title":{},"body":{"injectables/Logger.html":{}}}],["scope.ts",{"_index":1845,"title":{},"body":{"classes/NewsScope.html":{},"classes/TaskScope.html":{},"coverage.html":{}}}],["scope.ts:10",{"_index":2346,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:15",{"_index":2342,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:20",{"_index":2340,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:22",{"_index":1851,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:5",{"_index":2345,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:7",{"_index":1849,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope:57",{"_index":594,"title":{},"body":{"classes/CourseScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["scope:67",{"_index":598,"title":{},"body":{"classes/CourseScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["scope:71",{"_index":603,"title":{},"body":{"classes/CourseScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["scope?.target",{"_index":1936,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope?.unpublished",{"_index":1914,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scopeid",{"_index":972,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["scopes",{"_index":1630,"title":{},"body":{"controllers/NewsController.html":{}}}],["script",{"_index":2749,"title":{},"body":{"changelog.html":{}}}],["scripts",{"_index":4396,"title":{},"body":{"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["sdk",{"_index":4023,"title":{},"body":{"dependencies.html":{}}}],["search",{"_index":2224,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["searchable",{"_index":3212,"title":{},"body":{"changelog.html":{}}}],["searching",{"_index":3407,"title":{},"body":{"changelog.html":{}}}],["searchuserforschool",{"_index":1350,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["searchuserforschool'})@manytoone('school",{"_index":2472,"title":{},"body":{"classes/User.html":{}}}],["second",{"_index":5606,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["secondarily",{"_index":4333,"title":{},"body":{"license.html":{}}}],["secondary",{"_index":4279,"title":{},"body":{"license.html":{}}}],["secret",{"_index":1373,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["secretorkey",{"_index":1421,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secrutiy",{"_index":3577,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":4442,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["sections",{"_index":4513,"title":{},"body":{"license.html":{}}}],["secure",{"_index":3188,"title":{},"body":{"changelog.html":{}}}],["secured",{"_index":2790,"title":{},"body":{"changelog.html":{}}}],["secures",{"_index":2634,"title":{},"body":{"changelog.html":{}}}],["securing",{"_index":3532,"title":{},"body":{"changelog.html":{}}}],["security",{"_index":2548,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["see",{"_index":57,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/IDashboardRepo.html":{},"modules/ServerModule.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["seed",{"_index":2638,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["seeddata",{"_index":5656,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["seems",{"_index":4912,"title":{},"body":{"todo.html":{}}}],["selected",{"_index":4894,"title":{},"body":{"todo.html":{}}}],["selectedkey",{"_index":601,"title":{},"body":{"classes/CourseScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{},"miscellaneous/functions.html":{}}}],["selection",{"_index":3906,"title":{},"body":{"changelog.html":{}}}],["self",{"_index":3916,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sell",{"_index":4725,"title":{},"body":{"license.html":{}}}],["selling",{"_index":4709,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":2542,"title":{},"body":{"changelog.html":{}}}],["semiconductor",{"_index":4314,"title":{},"body":{"license.html":{}}}],["send",{"_index":1534,"title":{},"body":{"injectables/MailService.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["send(data",{"_index":1539,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["sending",{"_index":2767,"title":{},"body":{"changelog.html":{}}}],["sends",{"_index":5569,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["sense",{"_index":5231,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sent",{"_index":5399,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sentence",{"_index":934,"title":{},"body":{"classes/ErrorResponse.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sentry",{"_index":3251,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["sentry/node",{"_index":4010,"title":{},"body":{"dependencies.html":{}}}],["sentry_dsn",{"_index":3253,"title":{},"body":{"changelog.html":{}}}],["separable",{"_index":4556,"title":{},"body":{"license.html":{}}}],["separate",{"_index":1488,"title":{},"body":{"injectables/Logger.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["separated",{"_index":4204,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["separately",{"_index":3272,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["separates",{"_index":5345,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["separating",{"_index":5584,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["separation",{"_index":5162,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["seperate",{"_index":4166,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["seperation",{"_index":4165,"title":{},"body":{"index.html":{}}}],["serialization",{"_index":4875,"title":{},"body":{"todo.html":{}}}],["serialized",{"_index":3354,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["serializedprimarykey",{"_index":214,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["serve",{"_index":4116,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application.html":{}}}],["served",{"_index":5126,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["server",{"_index":887,"title":{},"body":{"controllers/DelayController.html":{},"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["server.console",{"_index":2131,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["server.controller",{"_index":2147,"title":{},"body":{"modules/ServerModule.html":{}}}],["server/overview.html",{"_index":4913,"title":{},"body":{"todo.html":{}}}],["server/pull/2729#pullrequestreview",{"_index":4892,"title":{},"body":{"todo.html":{}}}],["serverconsole",{"_index":2106,"title":{"classes/ServerConsole.html":{}},"body":{"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"coverage.html":{}}}],["serverconsolemodule",{"_index":2122,"title":{"modules/ServerConsoleModule.html":{}},"body":{"modules/ServerConsoleModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["servercontroller",{"_index":2133,"title":{"controllers/ServerController.html":{}},"body":{"controllers/ServerController.html":{},"modules/ServerModule.html":{},"coverage.html":{}}}],["servererrortypes",{"_index":3936,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverlogger",{"_index":5590,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["servermodule",{"_index":2126,"title":{"modules/ServerModule.html":{}},"body":{"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["servers",{"_index":3835,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["serves",{"_index":4386,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["service",{"_index":344,"title":{},"body":{"injectables/ConsoleWriter.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["service.find",{"_index":975,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["service.findallforuser(userid",{"_index":5747,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["service.get",{"_index":5481,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.get(userid",{"_index":971,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["service.provider",{"_index":962,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{}}}],["service.provider.ts",{"_index":1004,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.provider.ts:14",{"_index":1013,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:20",{"_index":1010,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:34",{"_index":1039,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.provider.ts:37",{"_index":1040,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.ts",{"_index":5437,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["services",{"_index":994,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"modules/ServerConsoleModule.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["servicing",{"_index":4811,"title":{},"body":{"license.html":{}}}],["session",{"_index":3259,"title":{},"body":{"changelog.html":{}}}],["set",{"_index":1269,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"modules/InterceptorModule.html":{},"injectables/NewsUc.html":{},"classes/Task.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["set(gradedstudentids)].length",{"_index":2405,"title":{},"body":{"injectables/TaskUC.html":{}}}],["set(permissions",{"_index":2046,"title":{},"body":{"injectables/RoleUC.html":{}}}],["set(submittedstudentids)].length",{"_index":2398,"title":{},"body":{"injectables/TaskUC.html":{}}}],["setcontext",{"_index":1498,"title":{},"body":{"injectables/Logger.html":{}}}],["setdescription('this",{"_index":5026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sets",{"_index":3300,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["settimeout(milliseconds",{"_index":2439,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["settimeout(resolve",{"_index":884,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["setting",{"_index":4981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settings",{"_index":3452,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["settitle('hpi",{"_index":5025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":1154,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["setversion('3.0",{"_index":5028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":4447,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["share",{"_index":4254,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["shared",{"_index":2825,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/common",{"_index":73,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{}}}],["shared/controller",{"_index":1641,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{}}}],["shared/controller/transformer",{"_index":1685,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["shared/core",{"_index":5450,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/domain",{"_index":186,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/JwtPayload.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"modules/ServerModule.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"todo.html":{}}}],["shared/domain/entity/base.entity",{"_index":715,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["shared/domain/types",{"_index":1899,"title":{},"body":{"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{}}}],["shared/domain/types/news.types",{"_index":187,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/TargetInfoMapper.html":{}}}],["shared/pipes",{"_index":5474,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/repo",{"_index":577,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["shared/repo/base.repo",{"_index":1788,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["shared/utils",{"_index":5451,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators",{"_index":5471,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators/text.validator.ts",{"_index":5454,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sharetoken",{"_index":3167,"title":{},"body":{"changelog.html":{}}}],["sharing",{"_index":2936,"title":{},"body":{"changelog.html":{}}}],["sheets",{"_index":3595,"title":{},"body":{"changelog.html":{}}}],["shit",{"_index":423,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["short",{"_index":737,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["shortid",{"_index":4086,"title":{},"body":{"dependencies.html":{}}}],["shorttitle",{"_index":675,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["shouldnt",{"_index":3623,"title":{},"body":{"changelog.html":{}}}],["show",{"_index":1883,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{}}}],["show_version",{"_index":3391,"title":{},"body":{"changelog.html":{}}}],["shows",{"_index":3153,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["side",{"_index":5244,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sign",{"_index":4858,"title":{},"body":{"license.html":{}}}],["signature",{"_index":5383,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["significant",{"_index":4582,"title":{},"body":{"license.html":{}}}],["similar",{"_index":4302,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simple",{"_index":5233,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["simplicity",{"_index":4927,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simplification",{"_index":5364,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["simplify",{"_index":5663,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["simply",{"_index":4181,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["simulates",{"_index":5782,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["simultaneously",{"_index":4773,"title":{},"body":{"license.html":{}}}],["single",{"_index":1179,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["situation",{"_index":5234,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["size",{"_index":3596,"title":{},"body":{"changelog.html":{}}}],["sizes",{"_index":3542,"title":{},"body":{"changelog.html":{}}}],["sizetype",{"_index":728,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["skip",{"_index":1228,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["skipped",{"_index":1175,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"classes/PaginationQuery.html":{},"changelog.html":{}}}],["slash",{"_index":4918,"title":{},"body":{"todo.html":{}}}],["slow",{"_index":3413,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["small",{"_index":5827,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["snaketype",{"_index":1108,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["socketio",{"_index":4120,"title":{},"body":{"dependencies.html":{}}}],["sockets",{"_index":3886,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["soften",{"_index":3756,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":4233,"title":{"additional-documentation/nestjs-application/software-architecture.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sold",{"_index":4567,"title":{},"body":{"license.html":{}}}],["sole",{"_index":4425,"title":{},"body":{"license.html":{}}}],["solely",{"_index":4439,"title":{},"body":{"license.html":{}}}],["solid",{"_index":5797,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["solution",{"_index":2219,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["solutions",{"_index":4855,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["solved",{"_index":3334,"title":{},"body":{"changelog.html":{}}}],["solving",{"_index":2844,"title":{},"body":{"changelog.html":{}}}],["something",{"_index":5598,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["something...later",{"_index":5602,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sorted",{"_index":3702,"title":{},"body":{"changelog.html":{}}}],["sorting",{"_index":2287,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{}}}],["sorting.ts",{"_index":4888,"title":{},"body":{"todo.html":{}}}],["sortorder",{"_index":1230,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/NewsUc.html":{},"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["sortorder.asc",{"_index":2381,"title":{},"body":{"injectables/TaskUC.html":{}}}],["sortorder.desc",{"_index":1918,"title":{},"body":{"injectables/NewsUc.html":{},"injectables/TaskUC.html":{}}}],["sortordermap",{"_index":1226,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/typealiases.html":{}}}],["sound",{"_index":2317,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["sounds",{"_index":2313,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"interfaces/LessonProperties.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcecode",{"_index":5422,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcedescription",{"_index":489,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["sources",{"_index":2824,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["sourcetype",{"_index":1825,"title":{},"body":{"classes/NewsResponse.html":{},"miscellaneous/typealiases.html":{}}}],["sovereignty",{"_index":5174,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["span",{"_index":5376,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spanid",{"_index":5390,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spare",{"_index":4526,"title":{},"body":{"license.html":{}}}],["speak",{"_index":4261,"title":{},"body":{"license.html":{}}}],["spec",{"_index":4977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spec.ts",{"_index":4994,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["spec\\\\.ts",{"_index":4999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":4605,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specific",{"_index":171,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["specifically",{"_index":4245,"title":{},"body":{"license.html":{}}}],["specification",{"_index":3311,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specifics",{"_index":5510,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specified",{"_index":4377,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specifies",{"_index":4795,"title":{},"body":{"license.html":{}}}],["specify",{"_index":1573,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["speed",{"_index":3068,"title":{},"body":{"changelog.html":{}}}],["spinner",{"_index":335,"title":{},"body":{"injectables/ConsoleWriter.html":{}}}],["spirit",{"_index":4789,"title":{},"body":{"license.html":{}}}],["split",{"_index":5212,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sportinhalt",{"_index":2938,"title":{},"body":{"changelog.html":{}}}],["spy",{"_index":5743,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["spyied",{"_index":5734,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sql",{"_index":5329,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sql/nosql",{"_index":5810,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["sql/sql",{"_index":5349,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["src",{"_index":5001,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["src/...*.spec.ts",{"_index":4992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/core/error/dto/error.response",{"_index":319,"title":{},"body":{"classes/BusinessError.html":{}}}],["src/core/error/interface",{"_index":320,"title":{},"body":{"classes/BusinessError.html":{}}}],["src/core/logger/logger.module",{"_index":1750,"title":{},"body":{"modules/NewsModule.html":{}}}],["src/core/logger/logger.service",{"_index":913,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"injectables/NewsUc.html":{}}}],["src/modules/authentication/decorator/auth.decorator",{"_index":651,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}}}],["src/modules/authorization/authorization.module",{"_index":1751,"title":{},"body":{"modules/NewsModule.html":{}}}],["src/modules/authorization/authorization.service",{"_index":1900,"title":{},"body":{"injectables/NewsUc.html":{}}}],["src/modules/database",{"_index":5722,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["src/modules/user",{"_index":131,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["src/repositories",{"_index":2222,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"modules/TaskModule.html":{}}}],["src/repositories/learnroom/dashboard.repo",{"_index":858,"title":{},"body":{"injectables/DashboardUc.html":{},"modules/LearnroomModule.html":{}}}],["src/server.module",{"_index":2130,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["st",{"_index":2079,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/functions.html":{}}}],["stabilisation",{"_index":3620,"title":{},"body":{"changelog.html":{}}}],["stability",{"_index":3395,"title":{},"body":{"changelog.html":{}}}],["stable",{"_index":5171,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stack",{"_index":1123,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["stacks",{"_index":3456,"title":{},"body":{"changelog.html":{}}}],["staging",{"_index":2926,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":4373,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["standards",{"_index":4376,"title":{},"body":{"license.html":{}}}],["start",{"_index":4224,"title":{},"body":{"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["started",{"_index":2534,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["starting",{"_index":3669,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["starts",{"_index":5069,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["starttitle",{"_index":1110,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["startup",{"_index":3471,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["state",{"_index":3388,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["stated",{"_index":4416,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statement",{"_index":4646,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statements",{"_index":3917,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["states",{"_index":3285,"title":{},"body":{"changelog.html":{}}}],["static",{"_index":491,"title":{},"body":{"classes/CourseNews.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelMapper.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/TargetInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfoMapper.html":{},"additional-documentation/nestjs-application.html":{}}}],["stating",{"_index":4478,"title":{},"body":{"license.html":{}}}],["statistic",{"_index":3526,"title":{},"body":{"changelog.html":{}}}],["statistics",{"_index":3659,"title":{},"body":{"changelog.html":{}}}],["stats",{"_index":3650,"title":{},"body":{"changelog.html":{}}}],["status",{"_index":1341,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TaskWithStatusVo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["status.graded",{"_index":2262,"title":{},"body":{"classes/TaskMapper.html":{}}}],["status.maxsubmissions",{"_index":2261,"title":{},"body":{"classes/TaskMapper.html":{}}}],["status.submitted",{"_index":2260,"title":{},"body":{"classes/TaskMapper.html":{}}}],["status.vo.ts",{"_index":1335,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskWithStatusVo.html":{},"coverage.html":{}}}],["status.vo.ts:10",{"_index":2408,"title":{},"body":{"classes/TaskWithStatusVo.html":{}}}],["status.vo.ts:12",{"_index":2407,"title":{},"body":{"classes/TaskWithStatusVo.html":{}}}],["stay",{"_index":5199,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["step",{"_index":5579,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["steps",{"_index":4273,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["stick",{"_index":5631,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["still",{"_index":5516,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["stop",{"_index":1588,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["stopping",{"_index":3233,"title":{},"body":{"changelog.html":{}}}],["storage",{"_index":2590,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["store",{"_index":2670,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stored",{"_index":5265,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stores",{"_index":5392,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["storing",{"_index":2814,"title":{},"body":{"changelog.html":{}}}],["story",{"_index":5736,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["strategies",{"_index":3940,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["strategies.includes('jwt",{"_index":4975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strategy",{"_index":1412,"title":{},"body":{"injectables/JwtStrategy.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["strategy/jwt",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/jwt.strategy",{"_index":132,"title":{},"body":{"modules/AuthModule.html":{}}}],["strato",{"_index":2659,"title":{},"body":{"changelog.html":{}}}],["strictly",{"_index":5160,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["string",{"_index":36,"title":{},"body":{"classes/ApiValidationError.html":{},"interfaces/AppendedAttachment.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"interfaces/GlobalConstants.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["strings",{"_index":1494,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{}}}],["stringtoboolean",{"_index":1684,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["strip",{"_index":4124,"title":{},"body":{"dependencies.html":{}}}],["strong",{"_index":999,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["strongly",{"_index":5829,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["structure",{"_index":5415,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["structured",{"_index":5416,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["structures",{"_index":1496,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["stucture",{"_index":4886,"title":{},"body":{"todo.html":{}}}],["student",{"_index":1298,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["student/teacher",{"_index":2770,"title":{},"body":{"changelog.html":{}}}],["student_create",{"_index":3503,"title":{},"body":{"changelog.html":{}}}],["student_edit",{"_index":3504,"title":{},"body":{"changelog.html":{}}}],["student_list",{"_index":3638,"title":{},"body":{"changelog.html":{}}}],["student_team_creation",{"_index":3774,"title":{},"body":{"changelog.html":{}}}],["studentdashboard",{"_index":2368,"title":{},"body":{"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["studentfiles",{"_index":1299,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["studentid",{"_index":1306,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"injectables/TaskUC.html":{}}}],["students",{"_index":380,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"injectables/SubmissionRepo.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["students/teacher",{"_index":3783,"title":{},"body":{"changelog.html":{}}}],["studentsubmissions",{"_index":2389,"title":{},"body":{"injectables/TaskUC.html":{}}}],["studentsubmissions.filter((submission",{"_index":2393,"title":{},"body":{"injectables/TaskUC.html":{}}}],["studentsubmissions.length",{"_index":2392,"title":{},"body":{"injectables/TaskUC.html":{}}}],["studio",{"_index":4196,"title":{},"body":{"index.html":{}}}],["stuff",{"_index":4222,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["style",{"_index":5184,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["styling",{"_index":3042,"title":{},"body":{"changelog.html":{}}}],["sub",{"_index":1389,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["subdividing",{"_index":4691,"title":{},"body":{"license.html":{}}}],["subdocument",{"_index":3737,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":100,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"license.html":{}}}],["sublicenses",{"_index":4722,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":4441,"title":{},"body":{"license.html":{}}}],["submission",{"_index":1256,"title":{"classes/Submission.html":{}},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["submission.entity",{"_index":1257,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["submission.isgraded",{"_index":2403,"title":{},"body":{"injectables/TaskUC.html":{}}}],["submission.isgraded()).length",{"_index":2394,"title":{},"body":{"injectables/TaskUC.html":{}}}],["submission.student.id",{"_index":2391,"title":{},"body":{"injectables/TaskUC.html":{}}}],["submissionrepo",{"_index":2182,"title":{"injectables/SubmissionRepo.html":{}},"body":{"injectables/SubmissionRepo.html":{},"coverage.html":{}}}],["submissions",{"_index":1261,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"changelog.html":{}}}],["submitted",{"_index":1338,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{}}}],["submittedstudentids",{"_index":2396,"title":{},"body":{"injectables/TaskUC.html":{}}}],["subprograms",{"_index":4405,"title":{},"body":{"license.html":{}}}],["subsection",{"_index":4535,"title":{},"body":{"license.html":{}}}],["subset",{"_index":5108,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["substantial",{"_index":4577,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":4689,"title":{},"body":{"license.html":{}}}],["substitution",{"_index":3914,"title":{},"body":{"changelog.html":{}}}],["substitutionids",{"_index":403,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["substitutionteachers",{"_index":381,"title":{},"body":{"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseProperties.html":{},"miscellaneous/variables.html":{}}}],["succeed",{"_index":5684,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["succesful",{"_index":3660,"title":{},"body":{"changelog.html":{}}}],["successful",{"_index":3322,"title":{},"body":{"changelog.html":{}}}],["successfully",{"_index":3657,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["such",{"_index":4295,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sue",{"_index":4733,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":4585,"title":{},"body":{"license.html":{}}}],["sufficient",{"_index":170,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["suffix",{"_index":4926,"title":{},"body":{"todo.html":{}}}],["suggested",{"_index":4868,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["suites",{"_index":5107,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["summarize",{"_index":3381,"title":{},"body":{"changelog.html":{}}}],["super",{"_index":50,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"interfaces/LessonProperties.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/ValidationError.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["super(type",{"_index":77,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["superhero",{"_index":2717,"title":{},"body":{"changelog.html":{}}}],["superheros",{"_index":2756,"title":{},"body":{"changelog.html":{}}}],["supertest",{"_index":5698,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["supplement",{"_index":4608,"title":{},"body":{"license.html":{}}}],["support",{"_index":1382,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"modules.html":{},"todo.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["support_${objectid",{"_index":1391,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["supported",{"_index":686,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["supporting",{"_index":5057,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["supportjwtservice",{"_index":2593,"title":{},"body":{"changelog.html":{}}}],["supports",{"_index":3824,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["supportuserid",{"_index":1383,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["sure",{"_index":4259,"title":{},"body":{"license.html":{}}}],["surrender",{"_index":4768,"title":{},"body":{"license.html":{}}}],["survive",{"_index":4645,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":4824,"title":{},"body":{"license.html":{}}}],["svg",{"_index":4862,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":3175,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{}}}],["swaggermodule.createdocument(app",{"_index":5036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggermodule.setup(path",{"_index":5037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symmetric",{"_index":3899,"title":{},"body":{"changelog.html":{}}}],["synapse",{"_index":3366,"title":{},"body":{"changelog.html":{}}}],["sync",{"_index":2618,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["synced",{"_index":3710,"title":{},"body":{"changelog.html":{}}}],["syncers",{"_index":3294,"title":{},"body":{"changelog.html":{}}}],["synchronization",{"_index":3367,"title":{},"body":{"changelog.html":{}}}],["synchronizing",{"_index":3825,"title":{},"body":{"changelog.html":{}}}],["syncindex",{"_index":2869,"title":{},"body":{"changelog.html":{}}}],["syncindexes",{"_index":2892,"title":{},"body":{"changelog.html":{}}}],["syncing",{"_index":3841,"title":{},"body":{"changelog.html":{}}}],["syncs",{"_index":3661,"title":{},"body":{"changelog.html":{}}}],["syntax",{"_index":1931,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{}}}],["system",{"_index":2606,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["system/school",{"_index":3293,"title":{},"body":{"changelog.html":{}}}],["systemid",{"_index":2637,"title":{},"body":{"changelog.html":{}}}],["systems",{"_index":3780,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["t",{"_index":271,"title":{},"body":{"injectables/BaseRepo.html":{},"classes/GlobalErrorFilter.html":{},"injectables/NewsRepo.html":{},"classes/PaginationResponse.html":{},"classes/Scope.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["tab",{"_index":2422,"title":{},"body":{"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["table",{"_index":3041,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["tablename",{"_index":437,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"interfaces/LessonProperties.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/User.html":{}}}],["tables",{"_index":3302,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":3991,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":4178,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["taken",{"_index":3700,"title":{},"body":{"changelog.html":{}}}],["takes",{"_index":3266,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["taking",{"_index":2762,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["tangible",{"_index":4562,"title":{},"body":{"license.html":{}}}],["tap",{"_index":911,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["target",{"_index":484,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/TeamNews.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["target._id.tostring",{"_index":981,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["target.id",{"_index":2200,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["target.name",{"_index":2201,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["target.targetids",{"_index":1856,"title":{},"body":{"classes/NewsScope.html":{}}}],["target.targetids.length",{"_index":1944,"title":{},"body":{"injectables/NewsUc.html":{}}}],["target.targetmodel",{"_index":1854,"title":{},"body":{"classes/NewsScope.html":{}}}],["target:in",{"_index":1855,"title":{},"body":{"classes/NewsScope.html":{}}}],["target_model_values",{"_index":628,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["targetid",{"_index":165,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{}}}],["targetids",{"_index":979,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{}}}],["targetinfomapper",{"_index":1701,"title":{"classes/TargetInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/TargetInfoMapper.html":{},"coverage.html":{}}}],["targetinfomapper.maptoresponse(news.target",{"_index":1719,"title":{},"body":{"classes/NewsMapper.html":{}}}],["targetinforesponse",{"_index":1831,"title":{"classes/TargetInfoResponse.html":{}},"body":{"classes/NewsResponse.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"coverage.html":{}}}],["targetkey",{"_index":602,"title":{},"body":{"classes/CourseScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{},"miscellaneous/functions.html":{}}}],["targetmodel",{"_index":163,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["targetmodels",{"_index":1895,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetmodels.map(async",{"_index":1940,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetpermissions",{"_index":970,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["targets",{"_index":974,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["targets.filter((target",{"_index":1943,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targets.map((target",{"_index":980,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/NewsScope.html":{}}}],["task",{"_index":1265,"title":{"classes/Task.html":{}},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["task.authorization.service",{"_index":2365,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.createdat",{"_index":2257,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.duedate",{"_index":2256,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.entity",{"_index":1303,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["task.id",{"_index":2253,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.name",{"_index":2254,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.parent",{"_index":2263,"title":{},"body":{"classes/TaskMapper.html":{},"injectables/TaskUC.html":{}}}],["task.parent.getdescriptions",{"_index":2265,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.parent.getnumberofstudents",{"_index":2406,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.submissions",{"_index":2400,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.submissions.getitems().filter((submission",{"_index":2390,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.submissions.getitems().map((submission",{"_index":2397,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.updatedat",{"_index":2258,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task/open",{"_index":2843,"title":{},"body":{"changelog.html":{}}}],["task_dashboard_teacher_view_v3",{"_index":2367,"title":{},"body":{"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["task_dashboard_view_v3",{"_index":2369,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["taskauthorizationservice",{"_index":2209,"title":{"injectables/TaskAuthorizationService.html":{}},"body":{"injectables/TaskAuthorizationService.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["taskcontroller",{"_index":2232,"title":{"controllers/TaskController.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"coverage.html":{}}}],["taskdashboardpermission",{"_index":2363,"title":{},"body":{"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["taskdashboardpermission.studentdashboard",{"_index":2374,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskdashboardpermission.teacherdashboard",{"_index":2376,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskentities",{"_index":2305,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["taskids",{"_index":2191,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["taskmapper",{"_index":2239,"title":{"classes/TaskMapper.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"coverage.html":{}}}],["taskmapper.maptoresponse(taskwithstatus",{"_index":2247,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskmodule",{"_index":2138,"title":{"modules/TaskModule.html":{}},"body":{"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["taskparentpermission",{"_index":2215,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["taskparentpermission.read",{"_index":2379,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskparentpermission.write",{"_index":2226,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{}}}],["taskrepo",{"_index":2272,"title":{"injectables/TaskRepo.html":{}},"body":{"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["taskresponse",{"_index":2238,"title":{"classes/TaskResponse.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"coverage.html":{}}}],["taskresponses",{"_index":2245,"title":{},"body":{"controllers/TaskController.html":{}}}],["tasks",{"_index":2234,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["tasks.map((task",{"_index":2383,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskscope",{"_index":2295,"title":{"classes/TaskScope.html":{}},"body":{"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"coverage.html":{}}}],["taskswithstatus",{"_index":2243,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskswithstatus.map((taskwithstatus",{"_index":2246,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskuc",{"_index":2236,"title":{"injectables/TaskUC.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["taskwithstatus",{"_index":2252,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskwithstatusvo",{"_index":1340,"title":{"classes/TaskWithStatusVo.html":{}},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskMapper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"coverage.html":{}}}],["taskwithstatusvo(task",{"_index":2395,"title":{},"body":{"injectables/TaskUC.html":{}}}],["teacher",{"_index":1312,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["teacher/student",{"_index":3537,"title":{},"body":{"changelog.html":{}}}],["teacher_list",{"_index":3765,"title":{},"body":{"changelog.html":{}}}],["teacherdashboard",{"_index":2366,"title":{},"body":{"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["teacherids",{"_index":405,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["teachers",{"_index":382,"title":{},"body":{"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["team",{"_index":523,"title":{"classes/Team.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["team.entity",{"_index":524,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["teamid",{"_index":2418,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["teammembers",{"_index":1300,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{}}}],["teamnews",{"_index":562,"title":{"classes/TeamNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["teamnews(props",{"_index":558,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["teamnewscontroller",{"_index":1749,"title":{"controllers/TeamNewsController.html":{}},"body":{"modules/NewsModule.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{}}}],["teams",{"_index":1196,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/Team.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["teardown",{"_index":4898,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["tech",{"_index":5140,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["technial",{"_index":5394,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technical",{"_index":1086,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["technically",{"_index":5202,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technological",{"_index":4450,"title":{},"body":{"license.html":{}}}],["technology",{"_index":5152,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tell",{"_index":5130,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["tells",{"_index":4361,"title":{},"body":{"license.html":{}}}],["template",{"_index":1131,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["templates",{"_index":2808,"title":{},"body":{"changelog.html":{}}}],["temporary",{"_index":681,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"injectables/TaskAuthorizationService.html":{},"changelog.html":{}}}],["term",{"_index":4414,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["terminate",{"_index":4651,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":4669,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":4660,"title":{},"body":{"license.html":{}}}],["termination",{"_index":4648,"title":{},"body":{"license.html":{}}}],["terms",{"_index":3270,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["test",{"_index":874,"title":{},"body":{"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["test.createtestingmodule",{"_index":890,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["test.module.ts",{"_index":870,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["test.module.ts:12",{"_index":872,"title":{},"body":{"controllers/DelayController.html":{}}}],["test/...*.e2e",{"_index":4993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testable",{"_index":5538,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["testcase",{"_index":5640,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testdata",{"_index":5659,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tested",{"_index":5105,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testeddefinedvalue",{"_index":4150,"title":{},"body":{"miscellaneous/functions.html":{}}}],["testenvironment",{"_index":5012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testhelpers",{"_index":2683,"title":{},"body":{"changelog.html":{}}}],["testing",{"_index":834,"title":{"additional-documentation/nestjs-application/testing.html":{}},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"modules/InterceptorModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testingmodule",{"_index":878,"title":{},"body":{"controllers/DelayController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule",{"_index":5723,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.close",{"_index":5731,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(entitymanager",{"_index":5727,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(mikroorm",{"_index":5726,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(newsrepo",{"_index":5725,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testpathignorepatterns",{"_index":5000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testregex",{"_index":4998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tests",{"_index":227,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/NewsModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["text",{"_index":338,"title":{},"body":{"injectables/ConsoleWriter.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["text.validator.ts",{"_index":5469,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textutils",{"_index":5452,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textvalidator",{"_index":5470,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["that's",{"_index":228,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["thats",{"_index":5259,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["theme",{"_index":3586,"title":{},"body":{"changelog.html":{}}}],["therefore",{"_index":4299,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["things",{"_index":721,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"changelog.html":{},"license.html":{}}}],["think",{"_index":5421,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["third",{"_index":4472,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["this._id",{"_index":717,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["this._queries",{"_index":2101,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries.length",{"_index":2100,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries.push(query",{"_index":2103,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries[0",{"_index":2102,"title":{},"body":{"classes/Scope.html":{}}}],["this._timeout",{"_index":2452,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["this.addquery",{"_index":583,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["this.addquery(emptyresultquery",{"_index":1862,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery(orquery",{"_index":2105,"title":{},"body":{"classes/Scope.html":{}}}],["this.addquery(queries[0",{"_index":1864,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.amqpconnection.publish(this.options.exchange",{"_index":1543,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["this.aud",{"_index":1387,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["this.authorizationservice.checkentitypermissions",{"_index":1929,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.checkentitypermissions(creatorid",{"_index":5563,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.authorizationservice.checkentitypermissions(userid",{"_index":1907,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getentitypermissions(userid",{"_index":1945,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getpermittedcourses(userid",{"_index":2378,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.authorizationservice.getpermittedentities(userid",{"_index":1941,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.byuseridquery(userid",{"_index":2194,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["this.cache",{"_index":2032,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["this.code",{"_index":325,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.color",{"_index":454,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.comment",{"_index":1323,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.computetaskstatusforstudent(task",{"_index":2384,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.computetaskstatusforteacher(task",{"_index":2386,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.consolewriter.info('schulcloud",{"_index":2120,"title":{},"body":{"classes/ServerConsole.html":{}}}],["this.consolewriter.info(`input",{"_index":2121,"title":{},"body":{"classes/ServerConsole.html":{}}}],["this.content",{"_index":534,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.course",{"_index":468,"title":{},"body":{"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"classes/Lesson.html":{},"interfaces/LessonProperties.html":{}}}],["this.course._id",{"_index":470,"title":{},"body":{"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{}}}],["this.courserepo.findallforstudent(userid",{"_index":2228,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["this.courserepo.findallforteacher(userid",{"_index":2227,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["this.createerrorresponse(error",{"_index":1148,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["this.creator",{"_index":1047,"title":{},"body":{"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["this.dashboardrepo.getusersdashboard",{"_index":860,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["this.dashboarduc.getusersdashboard",{"_index":659,"title":{},"body":{"controllers/DashboardController.html":{}}}],["this.data",{"_index":1973,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.description",{"_index":444,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.details",{"_index":329,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.displayat",{"_index":536,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.displaycolor",{"_index":688,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.duedate",{"_index":1271,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.em.find(coursegroup",{"_index":2196,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["this.em.find(lesson",{"_index":2312,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.findandcount(course",{"_index":585,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["this.em.findandcount(coursegroup",{"_index":480,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["this.em.findandcount(news",{"_index":1801,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.findandcount(submission",{"_index":2193,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["this.em.findandcount(task",{"_index":2306,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.findone(dashboardmodelentity",{"_index":846,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.em.findoneorfail(dashboardmodelentity",{"_index":842,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.em.findoneorfail(news",{"_index":1797,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.findoneorfail(role",{"_index":2031,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["this.em.findoneorfail(user",{"_index":2505,"title":{},"body":{"injectables/UserRepo.html":{}}}],["this.em.flush",{"_index":295,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.persist(entity",{"_index":289,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.persist(modelentity",{"_index":840,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.em.persist(n",{"_index":293,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.persistandflush(entity",{"_index":290,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.populate(coursenews",{"_index":1811,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(newsentities",{"_index":1803,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(newsentity",{"_index":1798,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(schoolnews",{"_index":1809,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(taskentities",{"_index":2310,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.populate(teamnews",{"_index":1810,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.remove(entity",{"_index":296,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.removeandflush(entity",{"_index":297,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.email",{"_index":1355,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["this.externalid",{"_index":542,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.feathersauthprovider.getpermittedschools(userid",{"_index":204,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getpermittedtargets(userid",{"_index":205,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getuserschoolpermissions(userid",{"_index":192,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getusertargetpermissions(userid",{"_index":193,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersserviceprovider.getservice('users",{"_index":982,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`${targetmodel}/:scopeid/userpermissions",{"_index":969,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`/users/:scopeid/${targetmodel",{"_index":973,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`path",{"_index":5480,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.findallforstudent(currentuser.userid",{"_index":2375,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.findallforteacher(currentuser.userid",{"_index":2377,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.findbyid(id",{"_index":2033,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["this.findnewsandcount(scope.query",{"_index":1795,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.findtasksandcount(scope.query",{"_index":2302,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.findvisiblelessons(parentids",{"_index":2297,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.firstname",{"_index":1351,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["this.getdefaultmaxduedate",{"_index":2303,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.getentitypermissions(userid",{"_index":197,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.getnewspermissions(userid",{"_index":1922,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getpermittedtargets(userid",{"_index":1916,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.gettargetfilters(userid",{"_index":1938,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getuser(userid",{"_index":963,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.grade",{"_index":1316,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.gradecomment",{"_index":1317,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.gradecomment.length",{"_index":1318,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.gradefiles",{"_index":1319,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.gradefiles.length",{"_index":1320,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.grid",{"_index":701,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.hastaskdashboardpermission(currentuser",{"_index":2373,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.hidden",{"_index":1478,"title":{},"body":{"classes/Lesson.html":{},"interfaces/LessonProperties.html":{}}}],["this.id",{"_index":456,"title":{},"body":{"classes/Course.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.jwtvalidationadapter.iswhitelisted(accountid",{"_index":1426,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.lastname",{"_index":1353,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["this.lesson",{"_index":1277,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.limit",{"_index":1976,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.logger.log(`create",{"_index":1905,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.log(`finished",{"_index":5599,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`news",{"_index":1912,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`return",{"_index":1923,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`start",{"_index":1913,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`user",{"_index":5572,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.setcontext(newsuc.name",{"_index":1904,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.setcontext(youruc.name",{"_index":5596,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.verbose('before",{"_index":914,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.logger.verbose(`after",{"_index":917,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.message",{"_index":328,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.mongod.stop",{"_index":1591,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["this.name",{"_index":442,"title":{},"body":{"classes/Course.html":{},"classes/File.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/Task.html":{},"classes/Team.html":{}}}],["this.newsrepo.findall(targets",{"_index":1920,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.findonebyid(id",{"_index":1925,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.persistandflush(news",{"_index":1911,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.removeandflush(news",{"_index":1935,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsuc.create",{"_index":1650,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.newsuc.delete(newsid",{"_index":1668,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.findallforuser",{"_index":1655,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["this.newsuc.findonebyidforuser(newsid",{"_index":1664,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.update(newsid",{"_index":1665,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.options.routingkey",{"_index":1544,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["this.orm.close",{"_index":1590,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["this.parent",{"_index":1275,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.permissions",{"_index":1289,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["this.private",{"_index":1274,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.propertiestopopulate",{"_index":1799,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.reference",{"_index":697,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.reference.getmetadata",{"_index":700,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.request.app.get('feathersapp",{"_index":1025,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["this.rolerepo.resolvepermissionsfromsubrolesbyid(id",{"_index":2043,"title":{},"body":{"injectables/RoleUC.html":{}}}],["this.roles.set(props.roles",{"_index":1291,"title":{},"body":{"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["this.roleuc.resolvepermissionsbyidlist(currentuser.roles",{"_index":2517,"title":{},"body":{"injectables/UserUC.html":{}}}],["this.school",{"_index":445,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["this.skip",{"_index":1975,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.source",{"_index":544,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.sourcedescription",{"_index":546,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.spinner.info(text",{"_index":348,"title":{},"body":{"injectables/ConsoleWriter.html":{}}}],["this.status",{"_index":1343,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.student",{"_index":1321,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.students.length",{"_index":455,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.students.set(props.students",{"_index":448,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{}}}],["this.submissions.set(props.submissions",{"_index":1279,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.substitutionteachers.set(props.substitutionteachers",{"_index":452,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.task",{"_index":1325,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Submission.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.taskrepo.findall(parentids",{"_index":2385,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.taskrepo.findallcurrent(parentids",{"_index":2380,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.taskuc.findall(currentuser",{"_index":2244,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.teachers.set(props.teachers",{"_index":450,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.timeout",{"_index":4895,"title":{},"body":{"todo.html":{}}}],["this.timeout(10000",{"_index":5680,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["this.title",{"_index":327,"title":{},"body":{"classes/BusinessError.html":{},"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.title.substr(0",{"_index":689,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.total",{"_index":1974,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.type",{"_index":326,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.useremailservice.sendwelcomemessage(user",{"_index":5571,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userfacade.resolveuser(payload",{"_index":1429,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.userrepo.findbyemail(props.email",{"_index":5576,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userrepo.findbyid(currentuser.userid",{"_index":2516,"title":{},"body":{"injectables/UserUC.html":{}}}],["this.userrepo.save(user",{"_index":5567,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userservice.checkusernotexistbyemail(props.email",{"_index":5565,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.useruc.getuserwithpermissions(currentuser",{"_index":2491,"title":{},"body":{"injectables/UserFacade.html":{}}}],["this.validationerrors",{"_index":78,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["this.xpos",{"_index":695,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.ypos",{"_index":696,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["those",{"_index":3895,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["though",{"_index":4610,"title":{},"body":{"license.html":{}}}],["thr",{"_index":2738,"title":{},"body":{"changelog.html":{}}}],["three",{"_index":3646,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["through",{"_index":4351,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["throw",{"_index":201,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["throwerror",{"_index":2443,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(err",{"_index":2451,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(new",{"_index":2450,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["thrown",{"_index":3812,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["throws",{"_index":194,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["thumbnails",{"_index":3619,"title":{},"body":{"changelog.html":{}}}],["thuringia",{"_index":3867,"title":{},"body":{"changelog.html":{}}}],["thus",{"_index":4431,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ticket",{"_index":4198,"title":{},"body":{"index.html":{}}}],["tickets",{"_index":3428,"title":{},"body":{"changelog.html":{}}}],["ticketsystem.hpi",{"_index":4200,"title":{},"body":{"index.html":{}}}],["tightly",{"_index":5264,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["time",{"_index":615,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/JwtValidationAdapter.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["timeout",{"_index":1363,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["timeout(milliseconds",{"_index":2454,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout(this.timeout",{"_index":2447,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout/firewall",{"_index":3652,"title":{},"body":{"changelog.html":{}}}],["timeouterror",{"_index":2444,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeoutinterceptor",{"_index":1365,"title":{"injectables/TimeoutInterceptor.html":{}},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["timeoutinterceptor.defaulttimeout",{"_index":2453,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeouts",{"_index":3162,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["times",{"_index":3647,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["timestamp",{"_index":1814,"title":{},"body":{"classes/NewsResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["timezone",{"_index":2794,"title":{},"body":{"changelog.html":{}}}],["timouts",{"_index":5674,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tiny",{"_index":4128,"title":{},"body":{"dependencies.html":{}}}],["title",{"_index":16,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ICreateNews.html":{},"interfaces/IErrorType.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/ValidationError.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["todo",{"_index":232,"title":{"todo.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IRoleProperties.html":{},"modules/InterceptorModule.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/Role.html":{},"classes/Scope.html":{},"modules/ServerModule.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["together",{"_index":1673,"title":{},"body":{"classes/NewsFilterQuery.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["toggle",{"_index":3865,"title":{},"body":{"changelog.html":{}}}],["tombstone",{"_index":2905,"title":{},"body":{"changelog.html":{}}}],["tooling",{"_index":5694,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tools",{"_index":4159,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["topic",{"_index":3043,"title":{},"body":{"changelog.html":{}}}],["topics",{"_index":5589,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["total",{"_index":1966,"title":{},"body":{"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["trace",{"_index":1242,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["traceid",{"_index":5389,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tracing",{"_index":5414,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trade",{"_index":4633,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":4632,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":4634,"title":{},"body":{"license.html":{}}}],["transaction",{"_index":3256,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transactions",{"_index":5375,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["transfer",{"_index":4352,"title":{},"body":{"license.html":{}}}],["transferred",{"_index":4589,"title":{},"body":{"license.html":{}}}],["transferring",{"_index":4687,"title":{},"body":{"license.html":{}}}],["transfers",{"_index":5541,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["transform",{"_index":1164,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/ParseObjectIdPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transform(value",{"_index":1979,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["transform:true",{"_index":1167,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transformer",{"_index":4032,"title":{},"body":{"dependencies.html":{}}}],["transformoptions",{"_index":1165,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transient",{"_index":1485,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["translate",{"_index":4174,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["translates",{"_index":5308,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["transmission",{"_index":4551,"title":{},"body":{"license.html":{}}}],["transparent",{"_index":5504,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transport",{"_index":5405,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trashbin",{"_index":3281,"title":{},"body":{"changelog.html":{}}}],["trashbins",{"_index":2954,"title":{},"body":{"changelog.html":{}}}],["travis",{"_index":2830,"title":{},"body":{"changelog.html":{}}}],["treated",{"_index":4609,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["treaty",{"_index":4456,"title":{},"body":{"license.html":{}}}],["tries",{"_index":3842,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["trigger",{"_index":5319,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggerd",{"_index":5408,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggered",{"_index":3861,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trim",{"_index":3383,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":529,"title":{},"body":{"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/JwtConstants.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Task.html":{},"classes/TaskScope.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["try",{"_index":1113,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ts",{"_index":4883,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["tsc",{"_index":3633,"title":{},"body":{"changelog.html":{}}}],["tsp",{"_index":3566,"title":{},"body":{"changelog.html":{}}}],["tt",{"_index":600,"title":{},"body":{"classes/CourseScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{},"miscellaneous/functions.html":{}}}],["two",{"_index":3786,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["typ",{"_index":1393,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["type",{"_index":17,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"interfaces/LessonProperties.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["type.interface.ts",{"_index":1220,"title":{},"body":{"interfaces/IErrorType.html":{},"coverage.html":{}}}],["typealiases",{"_index":4929,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":5798,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["typeof",{"_index":1315,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/NewsResponse.html":{},"classes/Scope.html":{},"classes/Submission.html":{}}}],["typeorm",{"_index":5802,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["types",{"_index":527,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["types.ts",{"_index":3934,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["types/entity",{"_index":417,"title":{},"body":{"classes/Course.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["types/news.types",{"_index":526,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["typesafety",{"_index":1662,"title":{},"body":{"controllers/NewsController.html":{}}}],["typescript",{"_index":553,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["typical",{"_index":4574,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typically",{"_index":5353,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typing",{"_index":1000,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["t|j)s",{"_index":5002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uc",{"_index":2275,"title":{},"body":{"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["uc.ts",{"_index":5442,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uc/dashboard.uc",{"_index":653,"title":{},"body":{"controllers/DashboardController.html":{},"modules/LearnroomModule.html":{}}}],["uc/news.uc",{"_index":1643,"title":{},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{}}}],["uc/task.authorization.service",{"_index":2276,"title":{},"body":{"modules/TaskModule.html":{}}}],["uc/task.uc",{"_index":2237,"title":{},"body":{"controllers/TaskController.html":{}}}],["uc/user.uc",{"_index":2490,"title":{},"body":{"injectables/UserFacade.html":{}}}],["ui",{"_index":4126,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["un",{"_index":5370,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unambigious",{"_index":930,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["unauthorizedexception",{"_index":185,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/TaskUC.html":{},"miscellaneous/variables.html":{}}}],["unauthorizedexception('insufficient",{"_index":202,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["unbind",{"_index":3666,"title":{},"body":{"changelog.html":{}}}],["unblock",{"_index":3531,"title":{},"body":{"changelog.html":{}}}],["unchanged",{"_index":3721,"title":{},"body":{"changelog.html":{}}}],["uncle",{"_index":5534,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["und",{"_index":5316,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["undefined",{"_index":252,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"interfaces/LessonProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskMapper.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":2723,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["understand",{"_index":5154,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["unexpected",{"_index":5683,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unfamiliar",{"_index":5641,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unhandled",{"_index":1142,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["unhandledexception",{"_index":3543,"title":{},"body":{"changelog.html":{}}}],["unhandledrejection",{"_index":3421,"title":{},"body":{"changelog.html":{}}}],["uniform",{"_index":5183,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unique",{"_index":933,"title":{},"body":{"classes/ErrorResponse.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Role.html":{},"injectables/TaskUC.html":{},"classes/User.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["unit",{"_index":2828,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["universal",{"_index":4129,"title":{},"body":{"dependencies.html":{}}}],["unknown",{"_index":1103,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["unknownerror",{"_index":1104,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["unless",{"_index":4580,"title":{},"body":{"license.html":{}}}],["unlike",{"_index":5756,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unlimited",{"_index":4420,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":4329,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":2818,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["unpacking",{"_index":4606,"title":{},"body":{"license.html":{}}}],["unprivileged",{"_index":3847,"title":{},"body":{"changelog.html":{}}}],["unpublished",{"_index":1202,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{}}}],["unreleased",{"_index":2549,"title":{},"body":{"changelog.html":{}}}],["unsafe",{"_index":1460,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["unskip",{"_index":1756,"title":{},"body":{"modules/NewsModule.html":{}}}],["unstable",{"_index":2553,"title":{},"body":{"changelog.html":{}}}],["untestable",{"_index":5586,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["until",{"_index":683,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"injectables/TaskAuthorizationService.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["up",{"_index":2557,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["update",{"_index":1610,"title":{},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{}}}],["update(id",{"_index":1897,"title":{},"body":{"injectables/NewsUc.html":{}}}],["update(newsid",{"_index":1632,"title":{},"body":{"controllers/NewsController.html":{}}}],["updated",{"_index":1840,"title":{},"body":{"classes/NewsResponse.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["updatedat",{"_index":245,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/File.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["updatenewsparams",{"_index":1633,"title":{"classes/UpdateNewsParams.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{}}}],["updater",{"_index":490,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["updaterid",{"_index":518,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["updates",{"_index":3872,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["updates/sync",{"_index":3600,"title":{},"body":{"changelog.html":{}}}],["updating",{"_index":1197,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["updator/creator",{"_index":1775,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["upload",{"_index":4121,"title":{},"body":{"dependencies.html":{}}}],["uploaded",{"_index":3808,"title":{},"body":{"changelog.html":{}}}],["uploads",{"_index":1309,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"changelog.html":{}}}],["upon",{"_index":5520,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["uppercase",{"_index":5457,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uppercase_snake_case",{"_index":932,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["uri",{"_index":1519,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ServerModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":1057,"title":{},"body":{"interfaces/GlobalConstants.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["urls",{"_index":3053,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["urlsafe",{"_index":4132,"title":{},"body":{"dependencies.html":{}}}],["usage",{"_index":3485,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["use",{"_index":234,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"injectables/Logger.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["usecase",{"_index":5216,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["useclass",{"_index":926,"title":{},"body":{"modules/ErrorModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/ValidationModule.html":{}}}],["used",{"_index":1434,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["usedecorators",{"_index":4987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usedglobals",{"_index":1055,"title":{},"body":{"interfaces/GlobalConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":1565,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["useful",{"_index":720,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"license.html":{}}}],["useguards(jwtauthguard",{"_index":4976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usequeryifvalueisdefined",{"_index":3989,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["usequeryifvalueisdefined(testeddefinedvalue",{"_index":2078,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/functions.html":{}}}],["user",{"_index":169,"title":{"classes/User.html":{}},"body":{"injectables/AuthorizationService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/IUserProperties.html":{},"injectables/JwtStrategy.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["user(props",{"_index":5566,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user.${date.now()}@example.com",{"_index":5054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user._id",{"_index":5048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.createdat",{"_index":2004,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user.entity",{"_index":420,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/TeamNews.html":{}}}],["user.facade",{"_index":2501,"title":{},"body":{"modules/UserModule.html":{}}}],["user.firstname",{"_index":2001,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{}}}],["user.id",{"_index":1999,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user.lastname",{"_index":2003,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{}}}],["user.ldapdn",{"_index":3732,"title":{},"body":{"changelog.html":{}}}],["user.ldapid",{"_index":3731,"title":{},"body":{"changelog.html":{}}}],["user.permissions",{"_index":968,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["user.repo.ts",{"_index":5472,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user.school.tostring",{"_index":2007,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user.schoolid.tostring",{"_index":966,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["user.uc.ts",{"_index":5466,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user.updatedat",{"_index":2005,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user/account",{"_index":1436,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["user/class",{"_index":5222,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["user_already_exists",{"_index":5558,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user_create",{"_index":5564,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["useralreadyexisterror",{"_index":5578,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["usercontroller",{"_index":2473,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userfacade",{"_index":1406,"title":{"injectables/UserFacade.html":{}},"body":{"injectables/JwtStrategy.html":{},"injectables/UserFacade.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["userfactory",{"_index":3978,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["userid",{"_index":173,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/ITaskParent.html":{},"interfaces/JwtConstants.html":{},"injectables/NewsUc.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["userid)).rejects.tothrow(notfoundexception",{"_index":5755,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["userid.tostring",{"_index":976,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["useridobject",{"_index":5045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useridobject.tohexstring",{"_index":5046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userids",{"_index":401,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{}}}],["userinfomapper",{"_index":1702,"title":{"classes/UserInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["userinfomapper.maptoresponse(news.creator",{"_index":1723,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinfomapper.maptoresponse(news.updater",{"_index":1726,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinforesponse",{"_index":1816,"title":{"classes/UserInfoResponse.html":{}},"body":{"classes/NewsResponse.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["usermodule",{"_index":118,"title":{"modules/UserModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ServerModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":3568,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["userrepo",{"_index":2499,"title":{"injectables/UserRepo.html":{}},"body":{"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["users",{"_index":1209,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/NewsUc.html":{},"classes/User.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["users.email",{"_index":3494,"title":{},"body":{"changelog.html":{}}}],["users/admin",{"_index":3449,"title":{},"body":{"changelog.html":{}}}],["users/admin/students",{"_index":3882,"title":{},"body":{"changelog.html":{}}}],["users/admin/teachers",{"_index":3881,"title":{},"body":{"changelog.html":{}}}],["userservice",{"_index":5573,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["usersforconsent",{"_index":3520,"title":{},"body":{"changelog.html":{}}}],["useruc",{"_index":2478,"title":{"injectables/UserUC.html":{}},"body":{"controllers/UserController.html":{},"injectables/UserFacade.html":{},"modules/UserModule.html":{},"injectables/UserUC.html":{},"coverage.html":{},"overview.html":{}}}],["uses",{"_index":3715,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["usevalue",{"_index":892,"title":{},"body":{"controllers/DelayController.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["using",{"_index":345,"title":{},"body":{"injectables/ConsoleWriter.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"modules/InterceptorModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["usually",{"_index":5218,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["util",{"_index":3486,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["utilities",{"_index":5693,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["utils",{"_index":3454,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uuid",{"_index":3858,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["v1",{"_index":5027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v2",{"_index":2903,"title":{},"body":{"changelog.html":{}}}],["v3",{"_index":4917,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["v3/docs",{"_index":5123,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["v3/index",{"_index":4922,"title":{},"body":{"todo.html":{}}}],["v3/news",{"_index":2850,"title":{},"body":{"changelog.html":{}}}],["v3/user/me",{"_index":2845,"title":{},"body":{"changelog.html":{}}}],["valid",{"_index":1171,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"changelog.html":{},"license.html":{}}}],["validate",{"_index":1360,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/JwtStrategy.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validate(payload",{"_index":1408,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validated",{"_index":1449,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validates",{"_index":3540,"title":{},"body":{"changelog.html":{}}}],["validating",{"_index":1447,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["validation",{"_index":53,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/ValidationError.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validation.adapter",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["validation.adapter.ts",{"_index":1440,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validation.adapter.ts:15",{"_index":1446,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["validation.adapter.ts:20",{"_index":1444,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["validation.error.ts",{"_index":7,"title":{},"body":{"classes/ApiValidationError.html":{},"coverage.html":{}}}],["validation.error.ts:4",{"_index":25,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["validation.pipe",{"_index":2532,"title":{},"body":{"modules/ValidationModule.html":{}}}],["validation.pipe.ts",{"_index":1152,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"coverage.html":{}}}],["validation.pipe.ts:12",{"_index":1160,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validation/validation.module",{"_index":374,"title":{},"body":{"modules/CoreModule.html":{}}}],["validation_error",{"_index":2524,"title":{},"body":{"classes/ValidationError.html":{}}}],["validationerror",{"_index":23,"title":{"classes/ValidationError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/GlobalValidationPipe.html":{},"classes/ValidationError.html":{},"coverage.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validationerror.constraints",{"_index":81,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrordetailresponse",{"_index":71,"title":{"classes/ValidationErrorDetailResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["validationerrordetailresponse(validationerror.property",{"_index":85,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrors",{"_index":30,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{}}}],["validationmodule",{"_index":355,"title":{"modules/ValidationModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{}}}],["validationpipe",{"_index":1159,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validator",{"_index":639,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/IRoleProperties.html":{},"classes/NewsFilterQuery.html":{},"classes/PaginationQuery.html":{},"classes/Role.html":{},"classes/UpdateNewsParams.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validators",{"_index":5453,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validobjectid",{"_index":1983,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["value",{"_index":248,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/File.html":{},"classes/GlobalErrorFilter.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskScope.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["valueof",{"_index":4944,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["values",{"_index":2978,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["variable",{"_index":3773,"title":{},"body":{"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["variables",{"_index":2563,"title":{"miscellaneous/variables.html":{}},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["verbatim",{"_index":4240,"title":{},"body":{"license.html":{}}}],["verbose",{"_index":1237,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose(message",{"_index":1246,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose?(message",{"_index":1251,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["verification",{"_index":5785,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verified",{"_index":5783,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verify",{"_index":2998,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["verifying",{"_index":5717,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verison",{"_index":3218,"title":{},"body":{"changelog.html":{}}}],["version",{"_index":2725,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["versioning",{"_index":2543,"title":{},"body":{"changelog.html":{}}}],["versionnumber",{"_index":3361,"title":{},"body":{"changelog.html":{}}}],["versions",{"_index":4257,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["very",{"_index":4185,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["via",{"_index":722,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/TaskResponse.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["view",{"_index":1893,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["viewers",{"_index":502,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["violates",{"_index":4603,"title":{},"body":{"license.html":{}}}],["violation",{"_index":4655,"title":{},"body":{"license.html":{}}}],["virtuals",{"_index":4084,"title":{},"body":{"dependencies.html":{}}}],["visibilities",{"_index":4901,"title":{},"body":{"todo.html":{}}}],["visible",{"_index":501,"title":{},"body":{"classes/CourseNews.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{}}}],["visiblelessons",{"_index":2296,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["visual",{"_index":4195,"title":{},"body":{"index.html":{}}}],["void",{"_index":281,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/ConsoleWriter.html":{},"classes/CourseScope.html":{},"classes/GlobalErrorFilter.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/TaskScope.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["volume",{"_index":4506,"title":{},"body":{"license.html":{}}}],["vor",{"_index":3090,"title":{},"body":{"changelog.html":{}}}],["vs",{"_index":1380,"title":{},"body":{"interfaces/JwtConstants.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["vscode",{"_index":4160,"title":{"additional-documentation/nestjs-application/vscode.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/extensions.json",{"_index":5823,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/lauch",{"_index":4923,"title":{},"body":{"todo.html":{}}}],["vscode/launch.default.json",{"_index":5139,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/settings.default.json",{"_index":5821,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["wait",{"_index":4135,"title":{},"body":{"dependencies.html":{}}}],["waive",{"_index":4462,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":4836,"title":{},"body":{"license.html":{}}}],["want",{"_index":4267,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["want's",{"_index":5238,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["warn",{"_index":1238,"title":{},"body":{"interfaces/ILogger.html":{}}}],["warn(message",{"_index":1248,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["warning",{"_index":3843,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":4363,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":4362,"title":{},"body":{"license.html":{}}}],["watch",{"_index":4906,"title":{},"body":{"todo.html":{}}}],["way",{"_index":1571,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ways",{"_index":4516,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["web",{"_index":4852,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["weight",{"_index":2977,"title":{},"body":{"changelog.html":{}}}],["well",{"_index":2609,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["went",{"_index":5638,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["whatever",{"_index":2117,"title":{},"body":{"classes/ServerConsole.html":{},"license.html":{}}}],["whereas",{"_index":5355,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["wherever",{"_index":1487,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["whether",{"_index":4571,"title":{},"body":{"license.html":{}}}],["whiltelisted",{"_index":2708,"title":{},"body":{"changelog.html":{}}}],["whitelist",{"_index":1169,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"changelog.html":{}}}],["whitelisted",{"_index":1424,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["whitespaces",{"_index":3689,"title":{},"body":{"changelog.html":{}}}],["whole",{"_index":2729,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["whose",{"_index":4558,"title":{},"body":{"license.html":{}}}],["widely",{"_index":4380,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["widespread",{"_index":4285,"title":{},"body":{"license.html":{}}}],["wil",{"_index":3682,"title":{},"body":{"changelog.html":{}}}],["window",{"_index":3501,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["windows",{"_index":3911,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["winston",{"_index":3422,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["wip",{"_index":4208,"title":{},"body":{"index.html":{}}}],["wipo",{"_index":4455,"title":{},"body":{"license.html":{}}}],["wish",{"_index":4265,"title":{},"body":{"license.html":{}}}],["within",{"_index":304,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["without",{"_index":3360,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["without/succeeds",{"_index":4880,"title":{},"body":{"todo.html":{}}}],["wlo",{"_index":2740,"title":{},"body":{"changelog.html":{}}}],["wopi",{"_index":2621,"title":{},"body":{"changelog.html":{}}}],["words",{"_index":4203,"title":{},"body":{"index.html":{}}}],["work",{"_index":239,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["work's",{"_index":4397,"title":{},"body":{"license.html":{}}}],["workers",{"_index":2761,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["workflows",{"_index":5587,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["working",{"_index":3817,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["workings",{"_index":5633,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["works",{"_index":1672,"title":{},"body":{"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["world",{"_index":5298,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["worldwide",{"_index":4724,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":784,"title":{},"body":{"classes/DashboardModelMapper.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["wrap(dashboard).toreference",{"_index":801,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["wrap(reference).toreference",{"_index":799,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["wrapped",{"_index":4988,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["wrappedreference",{"_index":708,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["wraps",{"_index":5287,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["write",{"_index":2223,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["writeerrorlog",{"_index":1139,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["writeerrorlog(error",{"_index":1146,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["writer",{"_index":343,"title":{},"body":{"injectables/ConsoleWriter.html":{}}}],["writer.service",{"_index":2119,"title":{},"body":{"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{}}}],["writer.service.ts",{"_index":334,"title":{},"body":{"injectables/ConsoleWriter.html":{},"coverage.html":{}}}],["writer.service.ts:11",{"_index":337,"title":{},"body":{"injectables/ConsoleWriter.html":{}}}],["writer.service.ts:9",{"_index":340,"title":{},"body":{"injectables/ConsoleWriter.html":{}}}],["writer/console",{"_index":333,"title":{},"body":{"injectables/ConsoleWriter.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"coverage.html":{}}}],["writes",{"_index":5395,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["writevalidationerrors",{"_index":1127,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["writevalidationerrors(error",{"_index":1141,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["writing",{"_index":4802,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["written",{"_index":4524,"title":{},"body":{"license.html":{}}}],["wrong",{"_index":1133,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["x",{"_index":692,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"miscellaneous/variables.html":{}}}],["xml2js",{"_index":4137,"title":{},"body":{"dependencies.html":{}}}],["xpos",{"_index":698,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["xposition",{"_index":731,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["xss",{"_index":3768,"title":{},"body":{"changelog.html":{}}}],["xunit",{"_index":5330,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["y",{"_index":693,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["year",{"_index":2700,"title":{},"body":{"changelog.html":{}}}],["years",{"_index":4525,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["yes",{"_index":312,"title":{},"body":{"classes/BusinessError.html":{},"interfaces/FeathersService.html":{},"interfaces/ILogger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/TaskRepo.html":{},"classes/ValidationError.html":{},"miscellaneous/functions.html":{}}}],["yourself",{"_index":4739,"title":{},"body":{"license.html":{}}}],["youruc",{"_index":5594,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["ypos",{"_index":699,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["yposition",{"_index":732,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["yyyy",{"_index":3797,"title":{},"body":{"changelog.html":{}}}],["zones",{"_index":3585,"title":{},"body":{"changelog.html":{}}}],["zoom",{"_index":121,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/ApiValidationError.html":{"url":"classes/ApiValidationError.html","title":"class - ApiValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/api-validation.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BusinessError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                details\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDetails\n                            \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(validationErrors: ValidationError[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/api-validation.error.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validationErrors\n                                                  \n                                                        \n                                                                        ValidationError[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:12\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDetails\n                        \n                    \n                \n            \n            \n                \ngetDetails()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Record\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResponse\n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus, ValidationError } from '@nestjs/common';\nimport { BusinessError } from './business.error';\n\nexport class ApiValidationError extends BusinessError {\n\tconstructor(readonly validationErrors: ValidationError[] = []) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\ttype: 'API_VALIDATION_ERROR',\n\t\t\t\ttitle: 'API Validation Error',\n\t\t\t\tdefaultMessage: 'API validation failed, see validationErrors for details',\n\t\t\t},\n\t\t\tHttpStatus.BAD_REQUEST\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiValidationErrorResponse.html":{"url":"classes/ApiValidationErrorResponse.html","title":"class - ApiValidationErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/api-validation-error.response.ts\n        \n\n\n            \n                Description\n            \n            \n                HTTP response definition for api validation errors.\n\n            \n\n            \n                Extends\n            \n            \n                        ErrorResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                validationErrors\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiValidationError: ApiValidationError)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiValidationError\n                                                  \n                                                        \n                                                                        ApiValidationError\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        validationErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ValidationErrorDetailResponse[]\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiValidationError } from '@shared/common';\nimport { ErrorResponse } from './error.response';\nimport { ValidationErrorDetailResponse } from './validation-error-detail.response';\n\n/**\n * HTTP response definition for api validation errors.\n */\nexport class ApiValidationErrorResponse extends ErrorResponse {\n\tconstructor(apiValidationError: ApiValidationError) {\n\t\tconst { type, title, message, code } = apiValidationError;\n\t\tsuper(type, title, message, code);\n\n\t\tthis.validationErrors = apiValidationError.validationErrors.map((validationError) => {\n\t\t\tconst constraint = validationError.constraints ? validationError.constraints : ['validation failed'];\n\t\t\tif (Array.isArray(constraint)) {\n\t\t\t\treturn new ValidationErrorDetailResponse(validationError.property, constraint);\n\t\t\t}\n\t\t\tconst errors = Object.values(constraint);\n\t\t\treturn new ValidationErrorDetailResponse(validationError.property, errors);\n\t\t});\n\t}\n\n\tvalidationErrors: ValidationErrorDetailResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppendedAttachment.html":{"url":"interfaces/AppendedAttachment.html","title":"interface - AppendedAttachment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppendedAttachment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailAttachment\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contentDisposition\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contentDisposition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentDisposition:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nJwtValidationAdapter\n\nJwtValidationAdapter\n\nAuthModule -->\n\nJwtValidationAdapter->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authentication/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStrategy\n                        \n                        \n                            JwtValidationAdapter\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { UserModule } from '@src/modules/user';\nimport { JwtStrategy } from './strategy/jwt.strategy';\nimport { jwtConstants } from './constants';\nimport { JwtValidationAdapter } from './strategy/jwt-validation.adapter';\n\n@Module({\n\timports: [PassportModule, JwtModule.register(jwtConstants), UserModule],\n\tproviders: [JwtStrategy, JwtValidationAdapter],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthorizationModule.html":{"url":"modules/AuthorizationModule.html","title":"module - AuthorizationModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthorizationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthorizationService\n                        \n                        \n                            FeathersAuthProvider\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeathersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthorizationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersModule } from '../feathers/feathers.module';\nimport { AuthorizationService } from './authorization.service';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Module({\n\timports: [FeathersModule],\n\tproviders: [AuthorizationService, FeathersAuthProvider],\n\texports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizationService.html":{"url":"injectables/AuthorizationService.html","title":"injectable - AuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkEntityPermissions\n                            \n                            \n                                    Async\n                                getEntityPermissions\n                            \n                            \n                                    Async\n                                getPermittedEntities\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersAuthProvider: FeathersAuthProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/authorization.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersAuthProvider\n                                                  \n                                                        \n                                                                        FeathersAuthProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkEntityPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkEntityPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:33\n                \n            \n\n\n            \n                \n                    Ensure that a user has sufficient permissions for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getEntityPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getEntityPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:17\n                \n            \n\n\n            \n                \n                    Get all permissions a user has for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The list of entity permissions for the user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedEntities\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedEntities(userId: EntityId, targetModel: NewsTargetModel, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:53\n                \n            \n\n\n            \n                \n                    Get all entities for which a user has specific permissions\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The list of ids of all entities that satisfy the provided permissions for the user\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { NewsTargetModel } from '@shared/domain/types/news.types';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Injectable()\nexport class AuthorizationService {\n\tconstructor(private feathersAuthProvider: FeathersAuthProvider) {}\n\n\t/**\n\t * Get all permissions a user has for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @returns The list of entity permissions for the user\n\t */\n\tasync getEntityPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId): Promise {\n\t\tconst permissions =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getUserSchoolPermissions(userId, targetId)\n\t\t\t\t: await this.feathersAuthProvider.getUserTargetPermissions(userId, targetModel, targetId);\n\t\treturn permissions;\n\t}\n\n\t/**\n\t * Ensure that a user has sufficient permissions for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @param permissions\n\t * @throws UnauthorizedException if the permissions are not satisfied\n\t */\n\tasync checkEntityPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\ttargetId: EntityId,\n\t\tpermissions: string[]\n\t): Promise | never {\n\t\tconst entityPermissions = await this.getEntityPermissions(userId, targetModel, targetId);\n\t\tconst hasPermissions = permissions.every((p) => entityPermissions.includes(p));\n\t\tif (!hasPermissions) {\n\t\t\tthrow new UnauthorizedException('Insufficient permissions');\n\t\t}\n\t}\n\n\t/**\n\t * Get all entities for which a user has specific permissions\n\t * @param userId\n\t * @param targetModel\n\t * @param permissions\n\t * @returns The list of ids of all entities that satisfy the provided permissions for the user\n\t */\n\tasync getPermittedEntities(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst entitiyIds =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getPermittedSchools(userId)\n\t\t\t\t: await this.feathersAuthProvider.getPermittedTargets(userId, targetModel, permissions);\n\n\t\treturn entitiyIds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntityWithTimestamps.html":{"url":"classes/BaseEntityWithTimestamps.html","title":"class - BaseEntityWithTimestamps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntityWithTimestamps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseRepo.html":{"url":"injectables/BaseRepo.html","title":"injectable - BaseRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BaseRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/base.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                flush\n                            \n                            \n                                persist\n                            \n                            \n                                persistAll\n                            \n                            \n                                    Async\n                                persistAllAndFlush\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                    Async\n                                removeAllAndFlush\n                            \n                            \n                                    Async\n                                removeAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/base.repo.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                    \n                    flush()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persist\n                        \n                    \n                \n            \n            \n                \npersist(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAll\n                        \n                    \n                \n            \n            \n                \npersistAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAll\n                        \n                    \n                \n            \n            \n                \nremoveAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { BaseEntity } from '@shared/domain';\nimport { EntityManager } from '@mikro-orm/mongodb';\n\n@Injectable()\nexport class BaseRepo {\n\tconstructor(protected readonly em: EntityManager) {}\n\n\tpersist(entity: T): T {\n\t\tthis.em.persist(entity);\n\t\treturn entity;\n\t}\n\n\tasync persistAndFlush(entity: T): Promise {\n\t\tawait this.em.persistAndFlush(entity);\n\t\treturn entity;\n\t}\n\n\tpersistAll(entities: T[]): T[] {\n\t\tconst persisted = entities.map((n) => {\n\t\t\tthis.em.persist(n);\n\t\t\treturn n;\n\t\t});\n\t\treturn persisted;\n\t}\n\n\tasync persistAllAndFlush(entities: T[]): Promise {\n\t\tconst persisted = entities.map((n) => {\n\t\t\tthis.em.persist(n);\n\t\t\treturn n;\n\t\t});\n\t\tawait this.em.flush();\n\t\treturn persisted;\n\t}\n\n\tremove(entity: T): void {\n\t\tthis.em.remove(entity);\n\t}\n\n\tasync removeAndFlush(entity: T): Promise {\n\t\tawait this.em.removeAndFlush(entity);\n\t}\n\n\tremoveAll(entities: T[]): void {\n\t\tentities.forEach((entity) => this.em.remove(entity));\n\t}\n\n\tasync removeAllAndFlush(entities: T[]): Promise {\n\t\tentities.forEach((entity) => this.em.remove(entity));\n\t\tawait this.em.flush();\n\t}\n\n\tasync flush(): Promise {\n\t\tawait this.em.flush();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BusinessError.html":{"url":"classes/BusinessError.html","title":"class - BusinessError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BusinessError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/business.error.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract base class for business errors, errors that are handled\nwithin of a client or inside of the application.\n\n            \n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                details\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDetails\n                            \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: IErrorType, code: HttpStatus, details?: Record)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/business.error.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        IErrorType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                    HttpStatus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                    Record\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDetails\n                        \n                    \n                \n            \n            \n                \ngetDetails()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/error/business.error.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Record\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResponse\n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/error/business.error.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\nimport { ErrorResponse } from '@src/core/error/dto/error.response';\nimport { IErrorType } from '@src/core/error/interface';\n\n/**\n * Abstract base class for business errors, errors that are handled\n * within of a client or inside of the application.\n */\nexport abstract class BusinessError extends HttpException {\n\treadonly code: number;\n\n\treadonly type: string;\n\n\treadonly title: string;\n\n\treadonly message: string;\n\n\t// Is not matched by type validation because HttpException is already declared\n\treadonly details: Record;\n\n\tconstructor(\n\t\t{ type, title, defaultMessage }: IErrorType,\n\t\tcode: HttpStatus = HttpStatus.CONFLICT,\n\t\tdetails?: Record\n\t) {\n\t\tsuper({ code, type, title, message: defaultMessage }, code);\n\t\tthis.code = code;\n\t\tthis.type = type;\n\t\tthis.title = title;\n\t\tthis.message = defaultMessage;\n\t\tthis.details = details || {};\n\t}\n\n\tgetDetails(): Record {\n\t\treturn this.details;\n\t}\n\n\tgetResponse(): ErrorResponse {\n\t\treturn new ErrorResponse(this.type, this.title, this.message, this.code);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsoleWriter.html":{"url":"injectables/ConsoleWriter.html","title":"injectable - ConsoleWriter","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConsoleWriter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/console/console-writer/console-writer.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                spinner\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                info\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        info\n                        \n                    \n                \n            \n            \n                \ninfo(text: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/console/console-writer/console-writer.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        spinner\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSpinner()\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/console/console-writer/console-writer.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { createSpinner } from 'nestjs-console';\n\n@Injectable()\n/**\n * Console writer service using ora spinner internally.\n */\nexport class ConsoleWriter {\n\tspinner = createSpinner();\n\n\tinfo(text: string): void {\n\t\tthis.spinner.info(text);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/core.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\nOverrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ErrorModule\n                        \n                        \n                            InterceptorModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            ValidationModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ErrorModule } from './error/error.module';\nimport { LoggerModule } from './logger/logger.module';\nimport { ValidationModule } from './validation/validation.module';\nimport { InterceptorModule } from './interceptor/interceptor.module';\n\n/**\n * The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\n * Overrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n */\n@Module({\n\timports: [LoggerModule, ErrorModule, ValidationModule, InterceptorModule],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Course.html":{"url":"classes/Course.html","title":"class - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/course.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                school\n                            \n                            \n                                students\n                            \n                            \n                                substitutionTeachers\n                            \n                            \n                                teachers\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDescriptions\n                            \n                            \n                                getNumberOfStudents\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ICourseProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ICourseProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT.color\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT.description\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT.name\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@ManyToOne('School', {fieldName: 'schoolId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        students\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@ManyToMany('User', undefined, {fieldName: 'userIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        substitutionTeachers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@ManyToMany('User', undefined, {fieldName: 'substitutionIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teachers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@ManyToMany('User', undefined, {fieldName: 'teacherIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDescriptions\n                        \n                    \n                \n            \n            \n                \ngetDescriptions()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/course.entity.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     literal type\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNumberOfStudents\n                        \n                    \n                \n            \n            \n                \ngetNumberOfStudents()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/course.entity.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, Index, ManyToOne, ManyToMany, Collection } from '@mikro-orm/core';\nimport { EntityId } from '../types/entity-id';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { School } from './school.entity';\nimport type { User } from './user.entity';\n\ninterface ICourseProperties {\n\tname?: string;\n\tdescription?: string;\n\tschool: School;\n\tstudents?: User[];\n\tteachers?: User[];\n\tsubstitutionTeachers?: User[];\n\t// TODO: color format\n\tcolor?: string;\n}\n\n// that is really really shit default handling :D constructor, getter, js default, em default...what the hell\n// i hope it can cleanup with adding schema instant of I...Properties.\nconst DEFAULT = {\n\tcolor: '#ACACAC',\n\tname: 'Kurse',\n\tdescription: '',\n};\n\n@Entity({ tableName: 'courses' })\nexport class Course extends BaseEntityWithTimestamps {\n\t@Property({ default: DEFAULT.name })\n\tname: string = DEFAULT.name;\n\n\t@Property({ default: DEFAULT.description })\n\tdescription: string = DEFAULT.description;\n\n\t@Index()\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@Index()\n\t@ManyToMany('User', undefined, { fieldName: 'userIds' })\n\tstudents = new Collection(this);\n\n\t@Index()\n\t@ManyToMany('User', undefined, { fieldName: 'teacherIds' })\n\tteachers = new Collection(this);\n\n\t@Index()\n\t@ManyToMany('User', undefined, { fieldName: 'substitutionIds' })\n\tsubstitutionTeachers = new Collection(this);\n\n\t// TODO: string color format\n\t@Property({ default: DEFAULT.color })\n\tcolor: string = DEFAULT.color;\n\n\tconstructor(props: ICourseProperties) {\n\t\tsuper();\n\t\tif (props.name) this.name = props.name;\n\t\tif (props.description) this.description = props.description;\n\t\tthis.school = props.school;\n\t\tif (props.students) this.students.set(props.students);\n\t\tif (props.teachers) this.teachers.set(props.teachers);\n\t\tif (props.substitutionTeachers) this.substitutionTeachers.set(props.substitutionTeachers);\n\t\tif (props.color) this.color = props.color;\n\t}\n\n\tgetNumberOfStudents(): number {\n\t\treturn this.students.length;\n\t}\n\n\tgetDescriptions(): { color: string; id: EntityId; name: string; description: string } {\n\t\treturn {\n\t\t\tid: this.id,\n\t\t\tname: this.name,\n\t\t\tdescription: this.description,\n\t\t\tcolor: this.color,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseGroup.html":{"url":"classes/CourseGroup.html","title":"class - CourseGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/coursegroup.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                            \n                                students\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getParentId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ICourseGroupProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/coursegroup.entity.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ICourseGroupProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        course\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Course', {fieldName: 'courseId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/coursegroup.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        students\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('User', undefined, {fieldName: 'userIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/coursegroup.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getParentId\n                        \n                    \n                \n            \n            \n                \ngetParentId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/coursegroup.entity.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ObjectId\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Collection, ManyToMany, ManyToOne } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { User } from './user.entity';\nimport type { Course } from './course.entity';\n\nexport interface ICourseGroupProperties {\n\tcourse: Course;\n\tstudents?: User[];\n}\n\n@Entity({ tableName: 'coursegroups' })\nexport class CourseGroup extends BaseEntityWithTimestamps {\n\t@ManyToMany('User', undefined, { fieldName: 'userIds' })\n\tstudents = new Collection(this);\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse: Course;\n\n\tconstructor(props: ICourseGroupProperties) {\n\t\tsuper();\n\t\tthis.course = props.course;\n\t\tif (props.students) this.students.set(props.students);\n\t}\n\n\tgetParentId(): ObjectId {\n\t\treturn this.course._id;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseGroupRepo.html":{"url":"injectables/CourseGroupRepo.html","title":"injectable - CourseGroupRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CourseGroupRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/coursegroup.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findByCourseIds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/repositories/learnroom/coursegroup.repo.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByCourseIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByCourseIds(courseIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/coursegroup.repo.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\n\nimport { Counted, EntityId, CourseGroup } from '@shared/domain';\n\n@Injectable()\nexport class CourseGroupRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findByCourseIds(courseIds: EntityId[]): Promise> {\n\t\tconst [courseGroups, count] = await this.em.findAndCount(CourseGroup, {\n\t\t\tcourse: { $in: courseIds },\n\t\t});\n\t\treturn [courseGroups, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseNews.html":{"url":"classes/CourseNews.html","title":"class - CourseNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/news.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Course')\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:104\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:35\n\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'creatorId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:61\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:39\n\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:42\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:66\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('School', {fieldName: 'schoolId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:58\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:45\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:48\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:55\n\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:31\n\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'updaterId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:64\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModel, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { School } from './school.entity';\nimport type { Team } from './team.entity';\nimport type { User } from './user.entity';\nimport { NewsTarget, NewsTargetModel } from '../types/news.types';\nimport { EntityId } from '../types';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId | School;\n\tcreator: EntityId | User;\n\ttarget: EntityId | NewsTarget;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: User;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTarget;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToOne('User', { fieldName: 'creatorId' })\n\tcreator!: User;\n\n\t@ManyToOne('User', { fieldName: 'updaterId' })\n\tupdater?: User;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, updater: props.updater, target: props.target });\n\t\tthis.externalId = props.externalId;\n\t\tthis.source = props.source;\n\t\tthis.sourceDescription = props.sourceDescription;\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne('School')\n\ttarget: School;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne('Course')\n\ttarget: Course;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne('Team')\n\ttarget: Team;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseRepo.html":{"url":"injectables/CourseRepo.html","title":"injectable - CourseRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CourseRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/course.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllByUserId\n                            \n                            \n                                    Async\n                                findAllForStudent\n                            \n                            \n                                    Async\n                                findAllForTeacher\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/repositories/learnroom/course.repo.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByUserId(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/course.repo.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForStudent(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/course.repo.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForTeacher\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForTeacher(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/course.repo.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\n\nimport { EntityId, Course, Counted } from '@shared/domain';\nimport { Scope } from '@shared/repo';\n\nclass CourseScope extends Scope {\n\tforAllGroupTypes(userId: EntityId): CourseScope {\n\t\tconst isStudent = { students: userId };\n\t\tconst isTeacher = { teachers: userId };\n\t\tconst isSubstitutionTeacher = { substitutionTeachers: userId };\n\n\t\tif (userId) {\n\t\t\tthis.addQuery({ $or: [isStudent, isTeacher, isSubstitutionTeacher] });\n\t\t}\n\n\t\treturn this;\n\t}\n}\n\n@Injectable()\nexport class CourseRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findAllByUserId(userId: EntityId): Promise> {\n\t\tconst scope = new CourseScope();\n\t\tscope.forAllGroupTypes(userId);\n\t\tconst [courses, count] = await this.em.findAndCount(Course, scope.query);\n\t\treturn [courses, count];\n\t}\n\n\tasync findAllForStudent(userId: EntityId): Promise> {\n\t\tconst query = { students: userId };\n\t\tconst [courses, count] = await this.em.findAndCount(Course, query);\n\t\treturn [courses, count];\n\t}\n\n\tasync findAllForTeacher(userId: EntityId): Promise> {\n\t\tconst isTeacher = { teachers: userId };\n\t\tconst isSubstitutionTeacher = { substitutionTeachers: userId };\n\t\tconst query = { $or: [isTeacher, isSubstitutionTeacher] };\n\t\tconst [courses, count] = await this.em.findAndCount(Course, query);\n\t\treturn [courses, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseScope.html":{"url":"classes/CourseScope.html","title":"class - CourseScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/course.repo.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                forAllGroupTypes\n                            \n                            \n                                addQuery\n                            \n                            \n                                buildAndAddOrQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:57\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        forAllGroupTypes\n                        \n                    \n                \n            \n            \n                \nforAllGroupTypes(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/course.repo.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CourseScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:67\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildAndAddOrQuery\n                        \n                    \n                \n            \n            \n                \nbuildAndAddOrQuery(arrayOfObjects: TT[], selectedKey: string, targetKey: string)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:71\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        TT\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arrayOfObjects\n                                    \n                                            TT[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selectedKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\n\nimport { EntityId, Course, Counted } from '@shared/domain';\nimport { Scope } from '@shared/repo';\n\nclass CourseScope extends Scope {\n\tforAllGroupTypes(userId: EntityId): CourseScope {\n\t\tconst isStudent = { students: userId };\n\t\tconst isTeacher = { teachers: userId };\n\t\tconst isSubstitutionTeacher = { substitutionTeachers: userId };\n\n\t\tif (userId) {\n\t\t\tthis.addQuery({ $or: [isStudent, isTeacher, isSubstitutionTeacher] });\n\t\t}\n\n\t\treturn this;\n\t}\n}\n\n@Injectable()\nexport class CourseRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findAllByUserId(userId: EntityId): Promise> {\n\t\tconst scope = new CourseScope();\n\t\tscope.forAllGroupTypes(userId);\n\t\tconst [courses, count] = await this.em.findAndCount(Course, scope.query);\n\t\treturn [courses, count];\n\t}\n\n\tasync findAllForStudent(userId: EntityId): Promise> {\n\t\tconst query = { students: userId };\n\t\tconst [courses, count] = await this.em.findAndCount(Course, query);\n\t\treturn [courses, count];\n\t}\n\n\tasync findAllForTeacher(userId: EntityId): Promise> {\n\t\tconst isTeacher = { teachers: userId };\n\t\tconst isSubstitutionTeacher = { substitutionTeachers: userId };\n\t\tconst query = { $or: [isTeacher, isSubstitutionTeacher] };\n\t\tconst [courses, count] = await this.em.findAndCount(Course, query);\n\t\treturn [courses, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNewsParams.html":{"url":"classes/CreateNewsParams.html","title":"class - CreateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/create-news.params.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for creating a news document.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                    Optional\n                                displayAt\n                            \n                            \n                                targetId\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Content of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiPropertyOptional({description: 'The point in time from when the News entity schould be displayed. Defaults to now so that the news is published'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Title of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsDate, IsOptional, IsString } from 'class-validator';\nimport { NewsTargetModel } from '@shared/domain/types/news.types';\n\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\n/**\n * DTO for creating a news document.\n */\nexport class CreateNewsParams {\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@IsDate()\n\t@IsOptional()\n\t@ApiPropertyOptional({\n\t\tdescription:\n\t\t\t'The point in time from when the News entity schould be displayed. Defaults to now so that the news is published',\n\t})\n\tdisplayAt?: Date;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DashboardController.html":{"url":"controllers/DashboardController.html","title":"controller - DashboardController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DashboardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dashboard.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                dashboard\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findForUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findForUser()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/controller/dashboard.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { Authenticate } from '@src/modules/authentication/decorator/auth.decorator';\nimport { DashboardUc } from '../uc/dashboard.uc';\n\nimport { DashboardResponse } from './dto';\nimport { DashboardMapper } from '../mapper/dashboard.mapper';\n\n@Authenticate('jwt')\n@Controller('dashboard')\nexport class DashboardController {\n\tconstructor(private readonly dashboardUc: DashboardUc) {}\n\n\t@Get()\n\tasync findForUser(): Promise {\n\t\tconst dashboard = await this.dashboardUc.getUsersDashboard(/* currentUser.userId */);\n\t\tconst dto = DashboardMapper.mapToResponse(dashboard);\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardEntity.html":{"url":"classes/DashboardEntity.html","title":"class - DashboardEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                grid\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getGrid\n                            \n                            \n                                getId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, props: DashboardProps)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:80\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        DashboardProps\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        grid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IGridElement[]\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:78\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getGrid\n                        \n                    \n                \n            \n            \n                \ngetGrid()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         IGridElement[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getId\n                        \n                    \n                \n            \n            \n                \ngetId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityId } from '../types/entity-id';\n\nexport type GridElementReferenceMetadata = {\n\tid: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n};\n\nexport interface IGridElementReference {\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class DefaultGridReference implements IGridElementReference {\n\t// This is only a temporary fake class, for use until other references, like courses, are fully supported.\n\tid: EntityId;\n\n\ttitle: string;\n\n\tdisplayColor: string;\n\n\tconstructor(id: EntityId, title: string, displayColor = '#f23f76') {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.displayColor = displayColor;\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn {\n\t\t\tid: this.id,\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: this.title.substr(0, 2),\n\t\t\tdisplayColor: this.displayColor,\n\t\t};\n\t}\n}\n\nexport interface IGridElement {\n\tgetId: () => EntityId;\n\n\tgetPosition: () => { x: number; y: number };\n\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class GridElement implements IGridElement {\n\tid: EntityId;\n\n\tconstructor(id: EntityId, x: number, y: number, reference: IGridElementReference) {\n\t\tthis.id = id;\n\t\tthis.xPos = x;\n\t\tthis.yPos = y;\n\t\tthis.reference = reference;\n\t}\n\n\treference: IGridElementReference;\n\n\txPos: number;\n\n\tyPos: number;\n\n\tgetId(): EntityId {\n\t\treturn this.id;\n\t}\n\n\tgetPosition(): { x: number; y: number } {\n\t\treturn { x: this.xPos, y: this.yPos };\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn this.reference.getMetadata();\n\t}\n}\n\nexport type DashboardProps = { grid: IGridElement[] };\n\nexport class DashboardEntity {\n\tid: EntityId;\n\n\tgrid: IGridElement[];\n\n\tconstructor(id: string, props: DashboardProps) {\n\t\tthis.grid = props.grid || [];\n\t\tthis.id = id;\n\t\tObject.assign(this, {});\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetGrid(): IGridElement[] {\n\t\treturn this.grid;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardGridElementModel.html":{"url":"classes/DashboardGridElementModel.html","title":"class - DashboardGridElementModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardGridElementModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/dashboard.model.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dashboard\n                            \n                            \n                                reference\n                            \n                            \n                                xPos\n                            \n                            \n                                yPos\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dashboard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentifiedReference\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('DashboardModelEntity', {wrappedReference: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reference\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IdentifiedReference\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('DefaultGridReferenceModel', {wrappedReference: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        xPos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        yPos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, ManyToOne, OneToMany, Collection, IdentifiedReference } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from '@shared/domain/entity/base.entity';\n\n@Entity()\nexport class DefaultGridReferenceModel extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@Property()\n\ttitle: string;\n\n\t@Property()\n\tcolor: string;\n}\n\n@Entity()\nexport class DashboardGridElementModel extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@Property()\n\txPos: number;\n\n\t@Property()\n\tyPos: number;\n\n\t// todo: put in references to useful things like courses via polymorphic inheritance (see news)\n\t@ManyToOne('DefaultGridReferenceModel', { wrappedReference: true })\n\treference: IdentifiedReference;\n\n\t@ManyToOne('DashboardModelEntity', { wrappedReference: true })\n\tdashboard: IdentifiedReference;\n}\n\n@Entity()\nexport class DashboardModelEntity extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@OneToMany('DashboardGridElementModel', 'dashboard')\n\tgridElements: Collection = new Collection(this);\n\n\t// userId\n\n\t// sizetype\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardGridElementResponse.html":{"url":"classes/DashboardGridElementResponse.html","title":"class - DashboardGridElementResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardGridElementResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayColor\n                            \n                            \n                                id\n                            \n                            \n                                shortTitle\n                            \n                            \n                                title\n                            \n                            \n                                xPosition\n                            \n                            \n                                yPosition\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Color of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the Grid element', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shortTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Short title of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Title of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        xPosition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'X position of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        yPosition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Y position of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class DashboardGridElementResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\tdescription: 'X position of the Grid element',\n\t})\n\txPosition: number;\n\n\t@ApiProperty({\n\t\tdescription: 'Y position of the Grid element',\n\t})\n\tyPosition: number;\n}\n\nexport class DashboardResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Dashboard entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'List of all elements visible on the dashboard',\n\t})\n\tgridElements: DashboardGridElementResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardMapper.html":{"url":"classes/DashboardMapper.html","title":"class - DashboardMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(dashboard: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dashboard\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DashboardResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DashboardEntity } from '@shared/domain';\nimport { DashboardResponse, DashboardGridElementResponse } from '../controller/dto';\n\nexport class DashboardMapper {\n\tstatic mapToResponse(dashboard: DashboardEntity): DashboardResponse {\n\t\tconst dto = new DashboardResponse();\n\n\t\tdto.id = dashboard.id;\n\n\t\tdto.gridElements = dashboard.getGrid().map((gridElement) => {\n\t\t\tconst elementDTO = new DashboardGridElementResponse();\n\n\t\t\tconst data = gridElement.getMetadata();\n\t\t\telementDTO.id = data.id;\n\t\t\telementDTO.title = data.title;\n\t\t\telementDTO.shortTitle = data.shortTitle;\n\t\t\telementDTO.displayColor = data.displayColor;\n\n\t\t\tconst pos = gridElement.getPosition();\n\t\t\telementDTO.xPosition = pos.x;\n\t\t\telementDTO.yPosition = pos.y;\n\n\t\t\treturn elementDTO;\n\t\t});\n\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardModelEntity.html":{"url":"classes/DashboardModelEntity.html","title":"class - DashboardModelEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardModelEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/dashboard.model.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                gridElements\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        gridElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Collection\n\n                    \n                \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany('DashboardGridElementModel', 'dashboard')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, ManyToOne, OneToMany, Collection, IdentifiedReference } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from '@shared/domain/entity/base.entity';\n\n@Entity()\nexport class DefaultGridReferenceModel extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@Property()\n\ttitle: string;\n\n\t@Property()\n\tcolor: string;\n}\n\n@Entity()\nexport class DashboardGridElementModel extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@Property()\n\txPos: number;\n\n\t@Property()\n\tyPos: number;\n\n\t// todo: put in references to useful things like courses via polymorphic inheritance (see news)\n\t@ManyToOne('DefaultGridReferenceModel', { wrappedReference: true })\n\treference: IdentifiedReference;\n\n\t@ManyToOne('DashboardModelEntity', { wrappedReference: true })\n\tdashboard: IdentifiedReference;\n}\n\n@Entity()\nexport class DashboardModelEntity extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@OneToMany('DashboardGridElementModel', 'dashboard')\n\tgridElements: Collection = new Collection(this);\n\n\t// userId\n\n\t// sizetype\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardModelMapper.html":{"url":"classes/DashboardModelMapper.html","title":"class - DashboardModelMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardModelMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/dashboard.model.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapGridElementToModel\n                            \n                            \n                                    Static\n                                    Async\n                                mapToEntity\n                            \n                            \n                                    Static\n                                mapToModel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapGridElementToModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapGridElementToModel(gridElement: IGridElement, dashboard: DashboardModelEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    gridElement\n                                    \n                                                IGridElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dashboard\n                                    \n                                                DashboardModelEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DashboardGridElementModel\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        mapToEntity\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToEntity(modelEntity: DashboardModelEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modelEntity\n                                    \n                                                DashboardModelEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToModel(entity: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DashboardModelEntity\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Collection, wrap } from '@mikro-orm/core';\nimport { DashboardEntity, GridElement, IGridElement, DefaultGridReference } from '@shared/domain';\nimport { DashboardGridElementModel, DashboardModelEntity, DefaultGridReferenceModel } from './dashboard.model.entity';\n\nexport class DashboardModelMapper {\n\tstatic mapGridElementToModel(gridElement: IGridElement, dashboard: DashboardModelEntity): DashboardGridElementModel {\n\t\tconst model = new DashboardGridElementModel(gridElement.getId());\n\t\tmodel.xPos = gridElement.getPosition().x;\n\t\tmodel.yPos = gridElement.getPosition().y;\n\t\t// model.reference = new DefaultGridReference(gridElement.getMetadata().title); // should be replaced with model reference\n\t\tconst reference = new DefaultGridReferenceModel(gridElement.getMetadata().id);\n\t\treference.color = gridElement.getMetadata().displayColor;\n\t\treference.title = gridElement.getMetadata().title;\n\t\tmodel.reference = wrap(reference).toReference();\n\n\t\tmodel.dashboard = wrap(dashboard).toReference();\n\t\treturn model;\n\t}\n\n\tstatic async mapToEntity(modelEntity: DashboardModelEntity): Promise {\n\t\tawait modelEntity.gridElements.init();\n\t\tconst grid: GridElement[] = await Promise.all(\n\t\t\tArray.from(modelEntity.gridElements).map(async (e) => {\n\t\t\t\tconst loaded = await e.reference.load();\n\t\t\t\treturn new GridElement(e.id, e.xPos, e.yPos, new DefaultGridReference(loaded.id, loaded.title, loaded.color));\n\t\t\t})\n\t\t);\n\t\treturn new DashboardEntity(modelEntity.id, { grid });\n\t}\n\n\tstatic mapToModel(entity: DashboardEntity): DashboardModelEntity {\n\t\tconst modelEntity = new DashboardModelEntity(entity.getId());\n\t\tmodelEntity.gridElements = new Collection(\n\t\t\tmodelEntity,\n\t\t\tentity.grid.map((element) => DashboardModelMapper.mapGridElementToModel(element, modelEntity))\n\t\t);\n\t\treturn modelEntity;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DashboardRepo.html":{"url":"injectables/DashboardRepo.html","title":"injectable - DashboardRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DashboardRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/dashboard.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                getDashboardById\n                            \n                            \n                                    Async\n                                getUsersDashboard\n                            \n                            \n                                persist\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dashboardProps: DashboardProps)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dashboardProps\n                                    \n                                                DashboardProps\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DashboardEntity\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getDashboardById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDashboardById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUsersDashboard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsersDashboard()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persist\n                        \n                    \n                \n            \n            \n                \npersist(entity: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DashboardEntity\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, DashboardEntity, DefaultGridReference, GridElement, DashboardProps } from '@shared/domain';\nimport { EntityManager, ObjectId } from '@mikro-orm/mongodb';\nimport { DashboardModelEntity } from './dashboard.model.entity';\nimport { DashboardModelMapper } from './dashboard.model.mapper';\n\nexport interface IDashboardRepo {\n\tgetUsersDashboard(): Promise;\n}\n\n@Injectable()\nexport class DashboardRepo implements IDashboardRepo {\n\tconstructor(protected readonly em: EntityManager) {}\n\n\tcreate(dashboardProps: DashboardProps): DashboardEntity {\n\t\t// todo: implementation, testing, etc\n\t\t// this should create a modelentity and get an id from mongo\n\t\treturn new DashboardEntity('thisisalsofake', dashboardProps);\n\t}\n\n\t// ToDo: refactor this to be in an abstract class (see baseRepo)\n\tpersist(entity: DashboardEntity): DashboardEntity {\n\t\tconst modelEntity = DashboardModelMapper.mapToModel(entity);\n\t\tthis.em.persist(modelEntity);\n\t\treturn entity;\n\t}\n\n\tasync getDashboardById(id: EntityId): Promise {\n\t\tconst dashboardModel = await this.em.findOneOrFail(DashboardModelEntity, id);\n\t\tconst dashboard = await DashboardModelMapper.mapToEntity(dashboardModel);\n\t\treturn dashboard;\n\t}\n\n\tasync getUsersDashboard(): Promise {\n\t\tconst hardcodedTestDashboardId = '0000d213816abba584714c0a';\n\t\tconst dashboardModel = await this.em.findOne(DashboardModelEntity, hardcodedTestDashboardId);\n\t\tif (dashboardModel) {\n\t\t\treturn DashboardModelMapper.mapToEntity(dashboardModel);\n\t\t}\n\t\tconst gridArray: GridElement[] = [];\n\t\tconst diagonalSize = 5;\n\t\tfor (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardResponse.html":{"url":"classes/DashboardResponse.html","title":"class - DashboardResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                gridElements\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        gridElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DashboardGridElementResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'List of all elements visible on the dashboard'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the Dashboard entity', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class DashboardGridElementResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\tdescription: 'X position of the Grid element',\n\t})\n\txPosition: number;\n\n\t@ApiProperty({\n\t\tdescription: 'Y position of the Grid element',\n\t})\n\tyPosition: number;\n}\n\nexport class DashboardResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Dashboard entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'List of all elements visible on the dashboard',\n\t})\n\tgridElements: DashboardGridElementResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DashboardUc.html":{"url":"injectables/DashboardUc.html","title":"injectable - DashboardUc","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DashboardUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/uc/dashboard.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUsersDashboard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dashboardRepo: IDashboardRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/uc/dashboard.uc.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dashboardRepo\n                                                  \n                                                        \n                                                                        IDashboardRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUsersDashboard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsersDashboard()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/dashboard.uc.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { DashboardEntity } from '@shared/domain';\nimport { IDashboardRepo } from '@src/repositories/learnroom/dashboard.repo';\n\n@Injectable()\nexport class DashboardUc {\n\tconstructor(@Inject('DASHBOARD_REPO') private readonly dashboardRepo: IDashboardRepo) {}\n\n\tasync getUsersDashboard(): Promise {\n\t\tconst dashboard = await this.dashboardRepo.getUsersDashboard();\n\t\treturn dashboard;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DefaultGridReference.html":{"url":"classes/DefaultGridReference.html","title":"class - DefaultGridReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DefaultGridReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IGridElementReference\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayColor\n                            \n                            \n                                id\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMetadata\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: EntityId, title: string, displayColor: string)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        EntityId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        displayColor\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:18\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMetadata\n                        \n                    \n                \n            \n            \n                \ngetMetadata()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         GridElementReferenceMetadata\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityId } from '../types/entity-id';\n\nexport type GridElementReferenceMetadata = {\n\tid: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n};\n\nexport interface IGridElementReference {\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class DefaultGridReference implements IGridElementReference {\n\t// This is only a temporary fake class, for use until other references, like courses, are fully supported.\n\tid: EntityId;\n\n\ttitle: string;\n\n\tdisplayColor: string;\n\n\tconstructor(id: EntityId, title: string, displayColor = '#f23f76') {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.displayColor = displayColor;\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn {\n\t\t\tid: this.id,\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: this.title.substr(0, 2),\n\t\t\tdisplayColor: this.displayColor,\n\t\t};\n\t}\n}\n\nexport interface IGridElement {\n\tgetId: () => EntityId;\n\n\tgetPosition: () => { x: number; y: number };\n\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class GridElement implements IGridElement {\n\tid: EntityId;\n\n\tconstructor(id: EntityId, x: number, y: number, reference: IGridElementReference) {\n\t\tthis.id = id;\n\t\tthis.xPos = x;\n\t\tthis.yPos = y;\n\t\tthis.reference = reference;\n\t}\n\n\treference: IGridElementReference;\n\n\txPos: number;\n\n\tyPos: number;\n\n\tgetId(): EntityId {\n\t\treturn this.id;\n\t}\n\n\tgetPosition(): { x: number; y: number } {\n\t\treturn { x: this.xPos, y: this.yPos };\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn this.reference.getMetadata();\n\t}\n}\n\nexport type DashboardProps = { grid: IGridElement[] };\n\nexport class DashboardEntity {\n\tid: EntityId;\n\n\tgrid: IGridElement[];\n\n\tconstructor(id: string, props: DashboardProps) {\n\t\tthis.grid = props.grid || [];\n\t\tthis.id = id;\n\t\tObject.assign(this, {});\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetGrid(): IGridElement[] {\n\t\treturn this.grid;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DefaultGridReferenceModel.html":{"url":"classes/DefaultGridReferenceModel.html","title":"class - DefaultGridReferenceModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DefaultGridReferenceModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/dashboard.model.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                title\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, ManyToOne, OneToMany, Collection, IdentifiedReference } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from '@shared/domain/entity/base.entity';\n\n@Entity()\nexport class DefaultGridReferenceModel extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@Property()\n\ttitle: string;\n\n\t@Property()\n\tcolor: string;\n}\n\n@Entity()\nexport class DashboardGridElementModel extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@Property()\n\txPos: number;\n\n\t@Property()\n\tyPos: number;\n\n\t// todo: put in references to useful things like courses via polymorphic inheritance (see news)\n\t@ManyToOne('DefaultGridReferenceModel', { wrappedReference: true })\n\treference: IdentifiedReference;\n\n\t@ManyToOne('DashboardModelEntity', { wrappedReference: true })\n\tdashboard: IdentifiedReference;\n}\n\n@Entity()\nexport class DashboardModelEntity extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@OneToMany('DashboardGridElementModel', 'dashboard')\n\tgridElements: Collection = new Collection(this);\n\n\t// userId\n\n\t// sizetype\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DelayController.html":{"url":"controllers/DelayController.html","title":"controller - DelayController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DelayController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/test/create-test.module.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/test/create-test.module.ts:12\n                \n            \n\n\n            \n                \n                    default route to test public access\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, NestInterceptor } from '@nestjs/common';\n\nimport { Test, TestingModule } from '@nestjs/testing';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\n\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\n@Controller()\nclass DelayController {\n\t/** default route to test public access */\n\t@Get()\n\tasync getHello(): Promise {\n\t\tawait delay(100);\n\t\treturn 'Schulcloud Server API';\n\t}\n}\n\nexport const createTestModule = (interceptor: NestInterceptor): Promise => {\n\treturn Test.createTestingModule({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\t\tuseValue: interceptor,\n\t\t\t},\n\t\t],\n\t\tcontrollers: [DelayController],\n\t}).compile();\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DurationLoggingInterceptor.html":{"url":"injectables/DurationLoggingInterceptor.html","title":"injectable - DurationLoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DurationLoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                This interceptor is logging the duration of a REST call.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(DurationLoggingInterceptor.name)\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Logger } from '@src/core/logger/logger.service';\n\n/**\n * This interceptor is logging the duration of a REST call.\n */\n@Injectable()\nexport class DurationLoggingInterceptor implements NestInterceptor {\n\tprivate readonly logger = new Logger(DurationLoggingInterceptor.name);\n\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\tthis.logger.verbose('Before...');\n\t\tconst now = Date.now();\n\t\treturn next.handle().pipe(tap(() => this.logger.verbose(`After... ${Date.now() - now}ms`)));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ErrorModule.html":{"url":"modules/ErrorModule.html","title":"module - ErrorModule","body":"\n                   \n\n\n\n\n    Modules\n    ErrorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/error/error.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_FILTER } from '@nestjs/core';\nimport { GlobalErrorFilter } from './filter/global-error.filter';\n\n/**\n * Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_FILTER,\n\t\t\tuseClass: GlobalErrorFilter,\n\t\t},\n\t],\n})\nexport class ErrorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorResponse.html":{"url":"classes/ErrorResponse.html","title":"class - ErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/error.response.ts\n        \n\n\n            \n                Description\n            \n            \n                HTTP response definition for errors.\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: string, title: string, message: string, code: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/error.response.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\n/**\n * HTTP response definition for errors.\n */\nexport class ErrorResponse {\n\tconstructor(\n\t\t/**\n\t\t * Unambigious error identifier, format: UPPERCASE_SNAKE_CASE\n\t\t */\n\t\treadonly type: string,\n\t\t/**\n\t\t * Description about the type, unique by type, format: Sentence case\n\t\t */\n\t\treadonly title: string,\n\t\t/**\n\t\t * additional custom information about the error\n\t\t */\n\t\treadonly message: string,\n\t\t/**\n\t\t * Must match HTTP error code\n\t\t */\n\t\treadonly code: number = HttpStatus.CONFLICT\n\t) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersAuthProvider.html":{"url":"injectables/FeathersAuthProvider.html","title":"injectable - FeathersAuthProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeathersAuthProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/feathers-auth.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getPermittedSchools\n                            \n                            \n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                getUserSchoolPermissions\n                            \n                            \n                                    Async\n                                getUserTargetPermissions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersServiceProvider: FeathersServiceProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersServiceProvider\n                                                  \n                                                        \n                                                                        FeathersServiceProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedSchools\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedSchools(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedTargets\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, targetModel: NewsTargetModel, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserSchoolPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserSchoolPermissions(userId: EntityId, schoolId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserTargetPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserTargetPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { BaseEntity, EntityId } from '@shared/domain';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { NewsTargetModel } from '@shared/domain/types/news.types';\nimport { FeathersServiceProvider } from '../feathers/feathers-service.provider';\n\ninterface User {\n\t_id: ObjectId;\n\tschoolId: ObjectId;\n\tpermissions: string[];\n}\n\n@Injectable()\nexport class FeathersAuthProvider {\n\tconstructor(private feathersServiceProvider: FeathersServiceProvider) {}\n\n\tasync getUserSchoolPermissions(userId: EntityId, schoolId: EntityId): Promise | never {\n\t\tconst user = await this.getUser(userId);\n\t\t// test user is school member\n\t\tconst sameSchool = user.schoolId.toString() === schoolId;\n\t\tif (sameSchool && Array.isArray(user.permissions)) {\n\t\t\treturn user.permissions;\n\t\t}\n\t\treturn [];\n\t}\n\n\tasync getUserTargetPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\ttargetId: EntityId\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`${targetModel}/:scopeId/userPermissions/`);\n\t\tconst targetPermissions = (await service.get(userId, {\n\t\t\troute: { scopeId: targetId },\n\t\t})) as string[];\n\t\treturn targetPermissions;\n\t}\n\n\tasync getPermittedTargets(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`/users/:scopeId/${targetModel}`);\n\t\tconst targets = (await service.find({\n\t\t\troute: { scopeId: userId.toString() },\n\t\t\tquery: {\n\t\t\t\tpermissions,\n\t\t\t},\n\t\t\tpaginate: false,\n\t\t})) as BaseEntity[];\n\t\tconst targetIds = targets.map((target) => target._id.toString());\n\t\treturn targetIds;\n\t}\n\n\tasync getPermittedSchools(userId: EntityId): Promise {\n\t\tconst user = await this.getUser(userId);\n\t\treturn [user.schoolId.toString()] as EntityId[];\n\t}\n\n\tprivate async getUser(userId: EntityId): Promise {\n\t\tconst service = this.feathersServiceProvider.getService('users');\n\t\tconst user = (await service.get(userId)) as User;\n\t\tif (user == null) throw new NotFoundException();\n\t\treturn user;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersError.html":{"url":"interfaces/FeathersError.html","title":"interface - FeathersError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FeathersError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/feathers-error.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            className\n                                        \n                                \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        className\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        className:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FeathersError extends Error {\n\tcode: number;\n\tclassName: string;\n\ttype: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeathersModule.html":{"url":"modules/FeathersModule.html","title":"module - FeathersModule","body":"\n                   \n\n\n\n\n    Modules\n    FeathersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_exports\n\n\n\ncluster_FeathersModule_providers\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\n\n\nFeathersModule\n\nFeathersModule\n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            This Module gives access to legacy feathers services. It is request based injected.\nIntroduce strong typing immediately when using this modules service.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersServiceProvider } from './feathers-service.provider';\n\n/**\n * This Module gives access to legacy feathers services. It is request based injected.\n * Introduce strong typing immediately when using this modules service.\n */\n@Module({\n\tproviders: [FeathersServiceProvider],\n\texports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersService.html":{"url":"interfaces/FeathersService.html","title":"interface - FeathersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FeathersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers-service.provider.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        find\n                                    \n                                \n                                \n                                    \n                                        get\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \n                    Access legacy eathers service find method\n                \n            \n            \n                \nfind(params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \n                    Access legacy eathers service get method\n                \n            \n            \n                \nget(id: EntityId, params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject, ImATeapotException } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\nimport { EntityId } from '@shared/domain';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: EntityId, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst feathersApp = this.request.app.get('feathersApp') as Application;\n\t\tif (feathersApp == null) {\n\t\t\t// missing a feathers instance defined in module definition\n\t\t\t// see main.ts how it might work\n\t\t\t// sample: nestExpress.set('feathersApp', feathersExpress);\n\t\t\tthrow new ImATeapotException('this action requires a feathers instance available');\n\t\t}\n\t\tconst service = feathersApp.service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersServiceProvider.html":{"url":"injectables/FeathersServiceProvider.html","title":"injectable - FeathersServiceProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeathersServiceProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers-service.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                This Service gives access to legacy feathers services. It is request based injected.\nIMPORTANT: Introduce strong typing immediately when using this modules service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(request: Request)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getService\n                        \n                    \n                \n            \n            \n                \ngetService(path: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FeathersService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject, ImATeapotException } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\nimport { EntityId } from '@shared/domain';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: EntityId, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst feathersApp = this.request.app.get('feathersApp') as Application;\n\t\tif (feathersApp == null) {\n\t\t\t// missing a feathers instance defined in module definition\n\t\t\t// see main.ts how it might work\n\t\t\t// sample: nestExpress.set('feathersApp', feathersExpress);\n\t\t\tthrow new ImATeapotException('this action requires a feathers instance available');\n\t\t}\n\t\tconst service = feathersApp.service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/File.html":{"url":"classes/File.html","title":"class - File","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/file.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                creator\n                            \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: IFileProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        IFileProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { User } from './user.entity';\n\ninterface IFileProperties {\n\tname: string;\n\tcreator: User;\n}\n\n@Entity({ tableName: 'files' })\nexport class File extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tcreator: User;\n\n\tconstructor(props: IFileProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.creator = props.creator;\n\t\tObject.assign(this, {});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GlobalConstants.html":{"url":"interfaces/GlobalConstants.html","title":"interface - GlobalConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GlobalConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/config/database.config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            DB_PASSWORD\n                                        \n                                \n                                \n                                        \n                                            DB_URL\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            DB_USERNAME\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        DB_PASSWORD\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_PASSWORD:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DB_URL\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_URL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DB_USERNAME\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_USERNAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import globals = require('../../../../config/globals');\n\ninterface GlobalConstants {\n\tDB_URL: string;\n\tDB_PASSWORD?: string;\n\tDB_USERNAME?: string;\n}\n\nconst usedGlobals: GlobalConstants = globals;\n\n/** Database URL */\nexport const { DB_URL, DB_PASSWORD, DB_USERNAME } = usedGlobals;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalErrorFilter.html":{"url":"classes/GlobalErrorFilter.html","title":"class - GlobalErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/filter/global-error.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                            \n                                createErrorResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('Error')\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/core/error/filter/global-error.filter.ts:119\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(error: T, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponse\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponse(error: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, InternalServerErrorException } from '@nestjs/common';\nimport * as _ from 'lodash';\nimport { Response } from 'express';\nimport { BusinessError, ApiValidationError } from '@shared/common';\nimport { Logger } from '@src/core/logger/logger.service';\nimport { ErrorResponse } from '../dto/error.response';\nimport { FeathersError } from '../interface';\nimport { ApiValidationErrorResponse } from '../dto/api-validation-error.response';\n\nconst isFeathersError = (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n};\n\nconst isBusinessError = (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n};\n\n/**\n * Compare helper to detect an error is a build in NestJS http exception.\n * @param error\n * @returns\n */\nconst isTechnicalError = (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n};\n\n/**\n * Creates ErrorResponse from NestJS build in technical exceptions\n * @param exception\n * @returns {ErrorResponse}\n */\nconst createErrorResponseForHttpException = (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n};\n\nfunction createErrorResponseForBusinessError(error: BusinessError): ErrorResponse {\n\tif (error instanceof ApiValidationError) {\n\t\tconst response = new ApiValidationErrorResponse(error);\n\t\treturn response;\n\t}\n\tconst response = error.getResponse();\n\treturn response;\n}\n\nfunction createErrorResponseForUnknownError(error?: unknown): ErrorResponse {\n\tconst unknownError = new InternalServerErrorException(error);\n\tconst response = createErrorResponseForHttpException(unknownError);\n\treturn response;\n}\n\nfunction createErrorResponseForFeathersError(error: FeathersError) {\n\tconst { code, className: type, name: title, message } = error;\n\tconst snakeType = _.snakeCase(type).toUpperCase();\n\tconst startTitle = _.startCase(title);\n\treturn new ErrorResponse(snakeType, startTitle, message, code);\n}\n\nconst createErrorResponse = (error: unknown, logger: Logger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create response from unknown error\n\t\treturn createErrorResponseForUnknownError(error);\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n};\n\nconst writeValidationErrors = (error: ApiValidationError, logger: Logger) => {\n\tconst errorMsg = error.validationErrors.map(\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t(e) => `Wrong property ${e.property} got ${e.value} : ${JSON.stringify(e.constraints)}`\n\t);\n\tlogger.error(errorMsg, error.stack, 'API Validation Error');\n};\n\nconst writeErrorLog = (error: unknown, logger: Logger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tif (error instanceof ApiValidationError) {\n\t\t\t\twriteValidationErrors(error, logger);\n\t\t\t} else {\n\t\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t\t}\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n};\n\n@Catch()\nexport class GlobalErrorFilter implements ExceptionFilter {\n\tprivate static readonly logger = new Logger('Error');\n\n\t// eslint-disable-next-line class-methods-use-this\n\tcatch(error: T, host: ArgumentsHost): void {\n\t\tconst ctx = host.switchToHttp();\n\t\tconst response = ctx.getResponse();\n\t\twriteErrorLog(error, GlobalErrorFilter.logger);\n\t\tconst errorResponse: ErrorResponse = this.createErrorResponse(error);\n\t\tresponse.status(errorResponse.code).json(errorResponse);\n\t}\n\n\tcreateErrorResponse(error: T): ErrorResponse {\n\t\treturn createErrorResponse(error, GlobalErrorFilter.logger);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalValidationPipe.html":{"url":"classes/GlobalValidationPipe.html","title":"class - GlobalValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/validation/pipe/global-validation.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                \nGlobal Pipe setup\n\nValidation of DTOs will base on type-checking\nwhich is enabled by default. To you might use\nthe class-validator decorators to extend\nvalidation.\n\n            \n\n            \n                Extends\n            \n            \n                    ValidationPipe\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/validation/pipe/global-validation.pipe.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ValidationError, ValidationPipe } from '@nestjs/common';\nimport { ApiValidationError } from '@shared/common';\n\n/** *********************************************\n * Global Pipe setup\n * **********************************************\n * Validation of DTOs will base on type-checking\n * which is enabled by default. To you might use\n * the class-validator decorators to extend\n * validation.\n */\nexport class GlobalValidationPipe extends ValidationPipe {\n\tconstructor() {\n\t\tsuper({\n\t\t\t// enable DTO instance creation for incoming data\n\t\t\ttransform: true,\n\t\t\ttransformOptions: {\n\t\t\t\t// enable type coersion, requires transform:true\n\t\t\t\tenableImplicitConversion: true,\n\t\t\t},\n\t\t\twhitelist: true, // only pass valid @ApiProperty-decorated DTO properties, remove others\n\t\t\tforbidNonWhitelisted: false, // additional params are just skipped (required when extracting multiple DTO from single query)\n\t\t\texceptionFactory: (errors: ValidationError[]) => {\n\t\t\t\treturn new ApiValidationError(errors);\n\t\t\t},\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GridElement.html":{"url":"classes/GridElement.html","title":"class - GridElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GridElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IGridElement\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                reference\n                            \n                            \n                                xPos\n                            \n                            \n                                yPos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getId\n                            \n                            \n                                getMetadata\n                            \n                            \n                                getPosition\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: EntityId, x: number, y: number, reference: IGridElementReference)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        EntityId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        x\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        y\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reference\n                                                  \n                                                        \n                                                                        IGridElementReference\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reference\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IGridElementReference\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        xPos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        yPos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:60\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getId\n                        \n                    \n                \n            \n            \n                \ngetId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityId\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMetadata\n                        \n                    \n                \n            \n            \n                \ngetMetadata()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         GridElementReferenceMetadata\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPosition\n                        \n                    \n                \n            \n            \n                \ngetPosition()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     literal type\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityId } from '../types/entity-id';\n\nexport type GridElementReferenceMetadata = {\n\tid: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n};\n\nexport interface IGridElementReference {\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class DefaultGridReference implements IGridElementReference {\n\t// This is only a temporary fake class, for use until other references, like courses, are fully supported.\n\tid: EntityId;\n\n\ttitle: string;\n\n\tdisplayColor: string;\n\n\tconstructor(id: EntityId, title: string, displayColor = '#f23f76') {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.displayColor = displayColor;\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn {\n\t\t\tid: this.id,\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: this.title.substr(0, 2),\n\t\t\tdisplayColor: this.displayColor,\n\t\t};\n\t}\n}\n\nexport interface IGridElement {\n\tgetId: () => EntityId;\n\n\tgetPosition: () => { x: number; y: number };\n\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class GridElement implements IGridElement {\n\tid: EntityId;\n\n\tconstructor(id: EntityId, x: number, y: number, reference: IGridElementReference) {\n\t\tthis.id = id;\n\t\tthis.xPos = x;\n\t\tthis.yPos = y;\n\t\tthis.reference = reference;\n\t}\n\n\treference: IGridElementReference;\n\n\txPos: number;\n\n\tyPos: number;\n\n\tgetId(): EntityId {\n\t\treturn this.id;\n\t}\n\n\tgetPosition(): { x: number; y: number } {\n\t\treturn { x: this.xPos, y: this.yPos };\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn this.reference.getMetadata();\n\t}\n}\n\nexport type DashboardProps = { grid: IGridElement[] };\n\nexport class DashboardEntity {\n\tid: EntityId;\n\n\tgrid: IGridElement[];\n\n\tconstructor(id: string, props: DashboardProps) {\n\t\tthis.grid = props.grid || [];\n\t\tthis.id = id;\n\t\tObject.assign(this, {});\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetGrid(): IGridElement[] {\n\t\treturn this.grid;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HtmlMailContent.html":{"url":"interfaces/HtmlMailContent.html","title":"interface - HtmlMailContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HtmlMailContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailContent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            htmlContent\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            plainTextContent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        htmlContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        htmlContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plainTextContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        plainTextContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICourseGroupProperties.html":{"url":"interfaces/ICourseGroupProperties.html","title":"interface - ICourseGroupProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICourseGroupProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/coursegroup.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            course\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            students\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        course\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        course:         Course\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Course\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        students\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        students:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Collection, ManyToMany, ManyToOne } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { User } from './user.entity';\nimport type { Course } from './course.entity';\n\nexport interface ICourseGroupProperties {\n\tcourse: Course;\n\tstudents?: User[];\n}\n\n@Entity({ tableName: 'coursegroups' })\nexport class CourseGroup extends BaseEntityWithTimestamps {\n\t@ManyToMany('User', undefined, { fieldName: 'userIds' })\n\tstudents = new Collection(this);\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse: Course;\n\n\tconstructor(props: ICourseGroupProperties) {\n\t\tsuper();\n\t\tthis.course = props.course;\n\t\tif (props.students) this.students.set(props.students);\n\t}\n\n\tgetParentId(): ObjectId {\n\t\treturn this.course._id;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICourseProperties.html":{"url":"interfaces/ICourseProperties.html","title":"interface - ICourseProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICourseProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/course.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            school\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            students\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            substitutionTeachers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            teachers\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        school:         School\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         School\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        students\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        students:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        substitutionTeachers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        substitutionTeachers:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teachers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teachers:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, Index, ManyToOne, ManyToMany, Collection } from '@mikro-orm/core';\nimport { EntityId } from '../types/entity-id';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { School } from './school.entity';\nimport type { User } from './user.entity';\n\ninterface ICourseProperties {\n\tname?: string;\n\tdescription?: string;\n\tschool: School;\n\tstudents?: User[];\n\tteachers?: User[];\n\tsubstitutionTeachers?: User[];\n\t// TODO: color format\n\tcolor?: string;\n}\n\n// that is really really shit default handling :D constructor, getter, js default, em default...what the hell\n// i hope it can cleanup with adding schema instant of I...Properties.\nconst DEFAULT = {\n\tcolor: '#ACACAC',\n\tname: 'Kurse',\n\tdescription: '',\n};\n\n@Entity({ tableName: 'courses' })\nexport class Course extends BaseEntityWithTimestamps {\n\t@Property({ default: DEFAULT.name })\n\tname: string = DEFAULT.name;\n\n\t@Property({ default: DEFAULT.description })\n\tdescription: string = DEFAULT.description;\n\n\t@Index()\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@Index()\n\t@ManyToMany('User', undefined, { fieldName: 'userIds' })\n\tstudents = new Collection(this);\n\n\t@Index()\n\t@ManyToMany('User', undefined, { fieldName: 'teacherIds' })\n\tteachers = new Collection(this);\n\n\t@Index()\n\t@ManyToMany('User', undefined, { fieldName: 'substitutionIds' })\n\tsubstitutionTeachers = new Collection(this);\n\n\t// TODO: string color format\n\t@Property({ default: DEFAULT.color })\n\tcolor: string = DEFAULT.color;\n\n\tconstructor(props: ICourseProperties) {\n\t\tsuper();\n\t\tif (props.name) this.name = props.name;\n\t\tif (props.description) this.description = props.description;\n\t\tthis.school = props.school;\n\t\tif (props.students) this.students.set(props.students);\n\t\tif (props.teachers) this.teachers.set(props.teachers);\n\t\tif (props.substitutionTeachers) this.substitutionTeachers.set(props.substitutionTeachers);\n\t\tif (props.color) this.color = props.color;\n\t}\n\n\tgetNumberOfStudents(): number {\n\t\treturn this.students.length;\n\t}\n\n\tgetDescriptions(): { color: string; id: EntityId; name: string; description: string } {\n\t\treturn {\n\t\t\tid: this.id,\n\t\t\tname: this.name,\n\t\t\tdescription: this.description,\n\t\t\tcolor: this.color,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICreateNews.html":{"url":"interfaces/ICreateNews.html","title":"interface - ICreateNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICreateNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/types/news.types.ts\n        \n\n\n            \n                Description\n            \n            \n                news interface for ceating news\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            displayAt\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from './entity-id';\nimport type { Course } from '../entity/course.entity';\nimport type { School } from '../entity/school.entity';\nimport type { Team } from '../entity/team.entity';\n\nexport enum NewsTargetModel {\n\t'School' = 'schools',\n\t'Course' = 'courses',\n\t'Team' = 'teams',\n}\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt?: Date;\n\ttarget: { targetModel: NewsTargetModel; targetId: EntityId };\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** interface for finding news with optional targetId */\nexport interface INewsScope {\n\ttarget?: { targetModel: NewsTargetModel; targetId?: EntityId };\n\tunpublished?: boolean;\n}\n\nexport type NewsTarget = School | Team | Course;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICurrentUser.html":{"url":"interfaces/ICurrentUser.html","title":"interface - ICurrentUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICurrentUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accountId\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            schoolId\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accountId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accountId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    account id as string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users role ids as string[]\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        schoolId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users schoolId as string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         IResolvedUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IResolvedUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    authenticated users id\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import type { Role } from '../entity/role.entity';\n\nexport interface IRole {\n\tname: string;\n\n\tid: string;\n}\n\nexport interface IResolvedUser {\n\tfirstName: string;\n\n\tlastName: string;\n\n\tid: string;\n\n\tcreatedAt: Date;\n\n\tupdatedAt: Date;\n\n\troles: IRole[];\n\n\tpermissions: string[];\n\n\tschoolId: string;\n}\n\nexport interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n\n\tuser: IResolvedUser;\n}\n\nexport type IPermissionsAndRoles = {\n\tpermissions: string[];\n\troles: Role[];\n};\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDashboardRepo.html":{"url":"interfaces/IDashboardRepo.html","title":"interface - IDashboardRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDashboardRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/dashboard.repo.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getUsersDashboard\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUsersDashboard\n                        \n                    \n                \n            \n            \n                \ngetUsersDashboard()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, DashboardEntity, DefaultGridReference, GridElement, DashboardProps } from '@shared/domain';\nimport { EntityManager, ObjectId } from '@mikro-orm/mongodb';\nimport { DashboardModelEntity } from './dashboard.model.entity';\nimport { DashboardModelMapper } from './dashboard.model.mapper';\n\nexport interface IDashboardRepo {\n\tgetUsersDashboard(): Promise;\n}\n\n@Injectable()\nexport class DashboardRepo implements IDashboardRepo {\n\tconstructor(protected readonly em: EntityManager) {}\n\n\tcreate(dashboardProps: DashboardProps): DashboardEntity {\n\t\t// todo: implementation, testing, etc\n\t\t// this should create a modelentity and get an id from mongo\n\t\treturn new DashboardEntity('thisisalsofake', dashboardProps);\n\t}\n\n\t// ToDo: refactor this to be in an abstract class (see baseRepo)\n\tpersist(entity: DashboardEntity): DashboardEntity {\n\t\tconst modelEntity = DashboardModelMapper.mapToModel(entity);\n\t\tthis.em.persist(modelEntity);\n\t\treturn entity;\n\t}\n\n\tasync getDashboardById(id: EntityId): Promise {\n\t\tconst dashboardModel = await this.em.findOneOrFail(DashboardModelEntity, id);\n\t\tconst dashboard = await DashboardModelMapper.mapToEntity(dashboardModel);\n\t\treturn dashboard;\n\t}\n\n\tasync getUsersDashboard(): Promise {\n\t\tconst hardcodedTestDashboardId = '0000d213816abba584714c0a';\n\t\tconst dashboardModel = await this.em.findOne(DashboardModelEntity, hardcodedTestDashboardId);\n\t\tif (dashboardModel) {\n\t\t\treturn DashboardModelMapper.mapToEntity(dashboardModel);\n\t\t}\n\t\tconst gridArray: GridElement[] = [];\n\t\tconst diagonalSize = 5;\n\t\tfor (let i = 0; i \n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IErrorType.html":{"url":"interfaces/IErrorType.html","title":"interface - IErrorType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IErrorType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/error-type.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            defaultMessage\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        defaultMessage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IErrorType {\n\treadonly type: string;\n\treadonly title: string;\n\treadonly defaultMessage: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFileProperties.html":{"url":"interfaces/IFileProperties.html","title":"interface - IFileProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFileProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/file.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            creator\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { User } from './user.entity';\n\ninterface IFileProperties {\n\tname: string;\n\tcreator: User;\n}\n\n@Entity({ tableName: 'files' })\nexport class File extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tcreator: User;\n\n\tconstructor(props: IFileProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.creator = props.creator;\n\t\tObject.assign(this, {});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFindOptions.html":{"url":"interfaces/IFindOptions.html","title":"interface - IFindOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFindOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/find-options.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            order\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pagination\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        order:         SortOrderMap\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SortOrderMap\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pagination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pagination:         IPagination\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IPagination\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPagination {\n\tskip?: number;\n\tlimit?: number;\n}\n\nexport enum SortOrder {\n\tasc = 'asc',\n\tdesc = 'desc',\n}\n\nexport type SortOrderMap = Partial>;\n\nexport interface IFindOptions {\n\tpagination?: IPagination;\n\torder?: SortOrderMap;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGridElement.html":{"url":"interfaces/IGridElement.html","title":"interface - IGridElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IGridElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            getId\n                                        \n                                \n                                \n                                        \n                                            getMetadata\n                                        \n                                \n                                \n                                        \n                                            getPosition\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        getId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getId:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getMetadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getMetadata:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getPosition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getPosition:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from '../types/entity-id';\n\nexport type GridElementReferenceMetadata = {\n\tid: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n};\n\nexport interface IGridElementReference {\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class DefaultGridReference implements IGridElementReference {\n\t// This is only a temporary fake class, for use until other references, like courses, are fully supported.\n\tid: EntityId;\n\n\ttitle: string;\n\n\tdisplayColor: string;\n\n\tconstructor(id: EntityId, title: string, displayColor = '#f23f76') {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.displayColor = displayColor;\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn {\n\t\t\tid: this.id,\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: this.title.substr(0, 2),\n\t\t\tdisplayColor: this.displayColor,\n\t\t};\n\t}\n}\n\nexport interface IGridElement {\n\tgetId: () => EntityId;\n\n\tgetPosition: () => { x: number; y: number };\n\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class GridElement implements IGridElement {\n\tid: EntityId;\n\n\tconstructor(id: EntityId, x: number, y: number, reference: IGridElementReference) {\n\t\tthis.id = id;\n\t\tthis.xPos = x;\n\t\tthis.yPos = y;\n\t\tthis.reference = reference;\n\t}\n\n\treference: IGridElementReference;\n\n\txPos: number;\n\n\tyPos: number;\n\n\tgetId(): EntityId {\n\t\treturn this.id;\n\t}\n\n\tgetPosition(): { x: number; y: number } {\n\t\treturn { x: this.xPos, y: this.yPos };\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn this.reference.getMetadata();\n\t}\n}\n\nexport type DashboardProps = { grid: IGridElement[] };\n\nexport class DashboardEntity {\n\tid: EntityId;\n\n\tgrid: IGridElement[];\n\n\tconstructor(id: string, props: DashboardProps) {\n\t\tthis.grid = props.grid || [];\n\t\tthis.id = id;\n\t\tObject.assign(this, {});\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetGrid(): IGridElement[] {\n\t\treturn this.grid;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGridElementReference.html":{"url":"interfaces/IGridElementReference.html","title":"interface - IGridElementReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IGridElementReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            getMetadata\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        getMetadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getMetadata:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from '../types/entity-id';\n\nexport type GridElementReferenceMetadata = {\n\tid: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n};\n\nexport interface IGridElementReference {\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class DefaultGridReference implements IGridElementReference {\n\t// This is only a temporary fake class, for use until other references, like courses, are fully supported.\n\tid: EntityId;\n\n\ttitle: string;\n\n\tdisplayColor: string;\n\n\tconstructor(id: EntityId, title: string, displayColor = '#f23f76') {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.displayColor = displayColor;\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn {\n\t\t\tid: this.id,\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: this.title.substr(0, 2),\n\t\t\tdisplayColor: this.displayColor,\n\t\t};\n\t}\n}\n\nexport interface IGridElement {\n\tgetId: () => EntityId;\n\n\tgetPosition: () => { x: number; y: number };\n\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class GridElement implements IGridElement {\n\tid: EntityId;\n\n\tconstructor(id: EntityId, x: number, y: number, reference: IGridElementReference) {\n\t\tthis.id = id;\n\t\tthis.xPos = x;\n\t\tthis.yPos = y;\n\t\tthis.reference = reference;\n\t}\n\n\treference: IGridElementReference;\n\n\txPos: number;\n\n\tyPos: number;\n\n\tgetId(): EntityId {\n\t\treturn this.id;\n\t}\n\n\tgetPosition(): { x: number; y: number } {\n\t\treturn { x: this.xPos, y: this.yPos };\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn this.reference.getMetadata();\n\t}\n}\n\nexport type DashboardProps = { grid: IGridElement[] };\n\nexport class DashboardEntity {\n\tid: EntityId;\n\n\tgrid: IGridElement[];\n\n\tconstructor(id: string, props: DashboardProps) {\n\t\tthis.grid = props.grid || [];\n\t\tthis.id = id;\n\t\tObject.assign(this, {});\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetGrid(): IGridElement[] {\n\t\treturn this.grid;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILogger.html":{"url":"interfaces/ILogger.html","title":"interface - ILogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Optional\n                                    \n                                        debug\n                                    \n                                \n                                \n                                    \n                                        error\n                                    \n                                \n                                \n                                    \n                                        log\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        verbose\n                                    \n                                \n                                \n                                    \n                                        warn\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: any, trace?: string, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    trace\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        verbose\n                        \n                    \n                \n            \n            \n                \nverbose(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface ILogger {\n\tlog(message: any, context?: string): any;\n\terror(message: any, trace?: string, context?: string): any;\n\twarn(message: any, context?: string): any;\n\tdebug?(message: any, context?: string): any;\n\tverbose?(message: any, context?: string): any;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsProperties.html":{"url":"interfaces/INewsProperties.html","title":"interface - INewsProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  INewsProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/news.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            creator\n                                        \n                                \n                                \n                                        \n                                            displayAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            externalId\n                                        \n                                \n                                \n                                        \n                                            school\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            source\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sourceDescription\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updater\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator:         EntityId | User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId | User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        externalId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        externalId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        school:         EntityId | School\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId | School\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source:     \"internal\" | \"rss\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"internal\" | \"rss\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sourceDescription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sourceDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         EntityId | NewsTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId | NewsTarget\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updater\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updater:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { School } from './school.entity';\nimport type { Team } from './team.entity';\nimport type { User } from './user.entity';\nimport { NewsTarget, NewsTargetModel } from '../types/news.types';\nimport { EntityId } from '../types';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId | School;\n\tcreator: EntityId | User;\n\ttarget: EntityId | NewsTarget;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: User;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTarget;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToOne('User', { fieldName: 'creatorId' })\n\tcreator!: User;\n\n\t@ManyToOne('User', { fieldName: 'updaterId' })\n\tupdater?: User;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, updater: props.updater, target: props.target });\n\t\tthis.externalId = props.externalId;\n\t\tthis.source = props.source;\n\t\tthis.sourceDescription = props.sourceDescription;\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne('School')\n\ttarget: School;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne('Course')\n\ttarget: Course;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne('Team')\n\ttarget: Team;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsScope.html":{"url":"interfaces/INewsScope.html","title":"interface - INewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  INewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/types/news.types.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for finding news with optional targetId\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            target\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            unpublished\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unpublished\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unpublished:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from './entity-id';\nimport type { Course } from '../entity/course.entity';\nimport type { School } from '../entity/school.entity';\nimport type { Team } from '../entity/team.entity';\n\nexport enum NewsTargetModel {\n\t'School' = 'schools',\n\t'Course' = 'courses',\n\t'Team' = 'teams',\n}\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt?: Date;\n\ttarget: { targetModel: NewsTargetModel; targetId: EntityId };\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** interface for finding news with optional targetId */\nexport interface INewsScope {\n\ttarget?: { targetModel: NewsTargetModel; targetId?: EntityId };\n\tunpublished?: boolean;\n}\n\nexport type NewsTarget = School | Team | Course;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPagination.html":{"url":"interfaces/IPagination.html","title":"interface - IPagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/find-options.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            limit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            skip\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPagination {\n\tskip?: number;\n\tlimit?: number;\n}\n\nexport enum SortOrder {\n\tasc = 'asc',\n\tdesc = 'desc',\n}\n\nexport type SortOrderMap = Partial>;\n\nexport interface IFindOptions {\n\tpagination?: IPagination;\n\torder?: SortOrderMap;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IParentDescriptionsProperties.html":{"url":"interfaces/IParentDescriptionsProperties.html","title":"interface - IParentDescriptionsProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IParentDescriptionsProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/task.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Collection, Entity, ManyToOne, OneToMany, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport { EntityId } from '../types';\nimport type { Course } from './course.entity';\nimport type { Lesson } from './lesson.entity';\nimport type { Submission } from './submission.entity';\n\ninterface ITaskProperties {\n\tname: string;\n\tdueDate?: Date;\n\tprivate?: boolean;\n\tparent?: Course;\n\tlesson?: Lesson;\n\tsubmissions?: Submission[];\n}\n\nexport interface IParentDescriptionsProperties {\n\tid: EntityId;\n\tname: string;\n\tcolor: string;\n\tdescription?: string;\n}\n\nexport interface ITaskParent {\n\tid: EntityId;\n\n\thasWritePermission(userId: EntityId): boolean;\n\tgetDescriptions(): IParentDescriptionsProperties;\n\tgetNumberOfStudents(): number;\n}\n\n@Entity({ tableName: 'homeworks' })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate = true;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tparent?: Course;\n\n\t@ManyToOne('Lesson', { fieldName: 'lessonId' })\n\tlesson?: Lesson; // In database exist also null, but it can not set.\n\n\t@OneToMany('Submission', 'task')\n\tsubmissions = new Collection(this);\n\n\tconstructor(props: ITaskProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.dueDate = props.dueDate;\n\t\tif (props.private !== undefined) this.private = props.private;\n\t\tthis.parent = props.parent;\n\t\tthis.lesson = props.lesson;\n\t\tthis.submissions.set(props.submissions || []);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IResolvedUser.html":{"url":"interfaces/IResolvedUser.html","title":"interface - IResolvedUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IResolvedUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            schoolId\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         IRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IRole[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        schoolId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { Role } from '../entity/role.entity';\n\nexport interface IRole {\n\tname: string;\n\n\tid: string;\n}\n\nexport interface IResolvedUser {\n\tfirstName: string;\n\n\tlastName: string;\n\n\tid: string;\n\n\tcreatedAt: Date;\n\n\tupdatedAt: Date;\n\n\troles: IRole[];\n\n\tpermissions: string[];\n\n\tschoolId: string;\n}\n\nexport interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n\n\tuser: IResolvedUser;\n}\n\nexport type IPermissionsAndRoles = {\n\tpermissions: string[];\n\troles: Role[];\n};\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRole.html":{"url":"interfaces/IRole.html","title":"interface - IRole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { Role } from '../entity/role.entity';\n\nexport interface IRole {\n\tname: string;\n\n\tid: string;\n}\n\nexport interface IResolvedUser {\n\tfirstName: string;\n\n\tlastName: string;\n\n\tid: string;\n\n\tcreatedAt: Date;\n\n\tupdatedAt: Date;\n\n\troles: IRole[];\n\n\tpermissions: string[];\n\n\tschoolId: string;\n}\n\nexport interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n\n\tuser: IResolvedUser;\n}\n\nexport type IPermissionsAndRoles = {\n\tpermissions: string[];\n\troles: Role[];\n};\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRoleProperties.html":{"url":"interfaces/IRoleProperties.html","title":"interface - IRoleProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRoleProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/role.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            permissions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            roles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         Role[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, Unique, Index, ManyToMany, Collection } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface IRoleProperties {\n\tpermissions?: string[];\n\troles?: Role[];\n\tname: string;\n}\n\n@Entity({ tableName: 'roles' })\nexport class Role extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'primaryRoleSearchOperation' })\n\t@Unique()\n\tname: string;\n\n\t// @Enum({ items: ['a', 'b', 'c'] }) in array with no permission is valid => validator function\n\t@Property()\n\tpermissions: string[] = [];\n\t// TODO: enum\n\n\t// @ManyToMany('Role', 'roles')\n\t// roles = new Collection(this);\n\n\t// @ManyToMany({ fieldName: 'roles', type: Role })\n\t// roles = new Collection(this);\n\n\t@ManyToMany('Role')\n\troles = new Collection(this);\n\n\tconstructor(props: IRoleProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tif (props.permissions) this.permissions = props.permissions;\n\t\tif (props.roles) this.roles.set(props.roles);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISubmissionProperties.html":{"url":"interfaces/ISubmissionProperties.html","title":"interface - ISubmissionProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISubmissionProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/submission.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            comment\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            courseGroup\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            grade\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            gradeComment\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            gradeFiles\n                                        \n                                \n                                \n                                        \n                                            student\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            studentFiles\n                                        \n                                \n                                \n                                        \n                                            task\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            teamMembers\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        courseGroup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        courseGroup:     CourseGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CourseGroup[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        grade\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        grade:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gradeComment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gradeComment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gradeFiles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gradeFiles:         File[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         File[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        student\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        student:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        studentFiles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        studentFiles:         File[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         File[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task:         Task\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Task\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teamMembers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teamMembers:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, ManyToOne, Collection, Property, ManyToMany } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { CourseGroup } from './coursegroup.entity';\nimport type { User } from './user.entity';\nimport type { File } from './file.entity';\nimport type { Task } from './task.entity';\n\ninterface ISubmissionProperties {\n\ttask: Task;\n\tstudent: User;\n\tcourseGroup?: CourseGroup[];\n\tteamMembers?: User[];\n\tcomment: string;\n\tstudentFiles?: File[];\n\tgrade?: number;\n\tgradeComment?: string;\n\tgradeFiles?: File[];\n}\n\n@Entity({ tableName: 'submissions' })\nexport class Submission extends BaseEntityWithTimestamps {\n\t@ManyToOne('Task', { fieldName: 'homeworkId' })\n\ttask: Task;\n\n\t@ManyToOne('User', { fieldName: 'studentId' })\n\tstudent: User;\n\n\t@ManyToOne('CourseGroup', { fieldName: 'courseGroupId' })\n\tcourseGroup?: CourseGroup;\n\n\t@ManyToMany('User', undefined, { fieldName: 'teamMembers' })\n\tteamMembers = new Collection(this);\n\n\t/* ***** student uploads ***** */\n\t@Property()\n\tcomment: string | null;\n\n\t@ManyToMany('File', undefined, { fieldName: 'fileIds' })\n\tstudentFiles = new Collection(this);\n\n\t/* ***** teacher uploads ***** */\n\t@Property()\n\tgrade: number | null;\n\n\t@Property()\n\tgradeComment: string | null;\n\n\t@ManyToMany('File', undefined, { fieldName: 'gradeFileIds' })\n\tgradeFiles = new Collection(this);\n\n\tisGraded(): boolean {\n\t\tconst isGraded =\n\t\t\t(typeof this.grade === 'number' && this.grade >= 0) ||\n\t\t\t(typeof this.gradeComment === 'string' && this.gradeComment.length > 0) ||\n\t\t\t(this.gradeFiles !== undefined && this.gradeFiles.length > 0);\n\t\treturn isGraded;\n\t}\n\n\tconstructor(props: ISubmissionProperties) {\n\t\tsuper();\n\t\tthis.student = props.student;\n\t\tthis.comment = props.comment;\n\t\tthis.task = props.task;\n\n\t\tthis.grade = props.grade || null;\n\t\tthis.gradeComment = props.gradeComment || null;\n\n\t\tconst { courseGroup, teamMembers, studentFiles, gradeFiles } = props;\n\t\tObject.assign(this, { courseGroup, teamMembers, studentFiles, gradeFiles });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITaskParent.html":{"url":"interfaces/ITaskParent.html","title":"interface - ITaskParent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITaskParent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/task.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getDescriptions\n                                    \n                                \n                                \n                                    \n                                        getNumberOfStudents\n                                    \n                                \n                                \n                                    \n                                        hasWritePermission\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDescriptions\n                        \n                    \n                \n            \n            \n                \ngetDescriptions()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/task.entity.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         IParentDescriptionsProperties\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNumberOfStudents\n                        \n                    \n                \n            \n            \n                \ngetNumberOfStudents()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/task.entity.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasWritePermission\n                        \n                    \n                \n            \n            \n                \nhasWritePermission(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/task.entity.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Collection, Entity, ManyToOne, OneToMany, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport { EntityId } from '../types';\nimport type { Course } from './course.entity';\nimport type { Lesson } from './lesson.entity';\nimport type { Submission } from './submission.entity';\n\ninterface ITaskProperties {\n\tname: string;\n\tdueDate?: Date;\n\tprivate?: boolean;\n\tparent?: Course;\n\tlesson?: Lesson;\n\tsubmissions?: Submission[];\n}\n\nexport interface IParentDescriptionsProperties {\n\tid: EntityId;\n\tname: string;\n\tcolor: string;\n\tdescription?: string;\n}\n\nexport interface ITaskParent {\n\tid: EntityId;\n\n\thasWritePermission(userId: EntityId): boolean;\n\tgetDescriptions(): IParentDescriptionsProperties;\n\tgetNumberOfStudents(): number;\n}\n\n@Entity({ tableName: 'homeworks' })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate = true;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tparent?: Course;\n\n\t@ManyToOne('Lesson', { fieldName: 'lessonId' })\n\tlesson?: Lesson; // In database exist also null, but it can not set.\n\n\t@OneToMany('Submission', 'task')\n\tsubmissions = new Collection(this);\n\n\tconstructor(props: ITaskProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.dueDate = props.dueDate;\n\t\tif (props.private !== undefined) this.private = props.private;\n\t\tthis.parent = props.parent;\n\t\tthis.lesson = props.lesson;\n\t\tthis.submissions.set(props.submissions || []);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITaskProperties.html":{"url":"interfaces/ITaskProperties.html","title":"interface - ITaskProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITaskProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/task.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            dueDate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lesson\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            parent\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            private\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            submissions\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dueDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dueDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lesson\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lesson:         Lesson\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Lesson\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parent:         Course\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Course\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        private\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        private:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        submissions:         Submission[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Submission[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Collection, Entity, ManyToOne, OneToMany, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport { EntityId } from '../types';\nimport type { Course } from './course.entity';\nimport type { Lesson } from './lesson.entity';\nimport type { Submission } from './submission.entity';\n\ninterface ITaskProperties {\n\tname: string;\n\tdueDate?: Date;\n\tprivate?: boolean;\n\tparent?: Course;\n\tlesson?: Lesson;\n\tsubmissions?: Submission[];\n}\n\nexport interface IParentDescriptionsProperties {\n\tid: EntityId;\n\tname: string;\n\tcolor: string;\n\tdescription?: string;\n}\n\nexport interface ITaskParent {\n\tid: EntityId;\n\n\thasWritePermission(userId: EntityId): boolean;\n\tgetDescriptions(): IParentDescriptionsProperties;\n\tgetNumberOfStudents(): number;\n}\n\n@Entity({ tableName: 'homeworks' })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate = true;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tparent?: Course;\n\n\t@ManyToOne('Lesson', { fieldName: 'lessonId' })\n\tlesson?: Lesson; // In database exist also null, but it can not set.\n\n\t@OneToMany('Submission', 'task')\n\tsubmissions = new Collection(this);\n\n\tconstructor(props: ITaskProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.dueDate = props.dueDate;\n\t\tif (props.private !== undefined) this.private = props.private;\n\t\tthis.parent = props.parent;\n\t\tthis.lesson = props.lesson;\n\t\tthis.submissions.set(props.submissions || []);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITaskStatus.html":{"url":"interfaces/ITaskStatus.html","title":"interface - ITaskStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITaskStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/vo/task-with-status.vo.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            graded\n                                        \n                                \n                                \n                                        \n                                            maxSubmissions\n                                        \n                                \n                                \n                                        \n                                            submitted\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        graded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        graded:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxSubmissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxSubmissions:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submitted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        submitted:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Task } from '../entity/task.entity';\n\ninterface ITaskStatus {\n\tsubmitted: number;\n\tmaxSubmissions: number;\n\tgraded: number;\n}\n\nexport class TaskWithStatusVo {\n\ttask!: Task;\n\n\tstatus!: ITaskStatus;\n\n\tconstructor(task: Task, status: ITaskStatus) {\n\t\tthis.task = task;\n\t\tthis.status = status;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserProperties.html":{"url":"interfaces/IUserProperties.html","title":"interface - IUserProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/user.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            firstName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            school\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         Role[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        school:         School\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         School\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Collection, Entity, ManyToMany, ManyToOne, Property, Index, Unique } from '@mikro-orm/core';\nimport type { Role } from './role.entity';\nimport type { School } from './school.entity';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface IUserProperties {\n\temail: string;\n\tfirstName?: string;\n\tlastName?: string;\n\tschool: School;\n\troles: Role[];\n}\n\n@Entity({ tableName: 'users' })\nexport class User extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'externalUserIdentifier' })\n\t@Unique()\n\temail: string;\n\n\t@Property()\n\tfirstName?: string;\n\n\t@Property()\n\tlastName?: string;\n\n\t@Index({ name: 'roleIdBasedSearches' })\n\t@ManyToMany('Role', undefined, { fieldName: 'roles' })\n\troles = new Collection(this);\n\n\t@Index({ name: 'searchUserForSchool' })\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\tconstructor(props: IUserProperties) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.email = props.email;\n\t\tthis.school = props.school;\n\t\tthis.roles.set(props.roles);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InlineAttachment.html":{"url":"interfaces/InlineAttachment.html","title":"interface - InlineAttachment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InlineAttachment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailAttachment\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contentDisposition\n                                        \n                                \n                                \n                                        \n                                            contentId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contentDisposition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentDisposition:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contentId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InterceptorModule.html":{"url":"modules/InterceptorModule.html","title":"module - InterceptorModule","body":"\n                   \n\n\n\n\n    Modules\n    InterceptorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/interceptor/interceptor.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            \nGlobal Interceptor setup\n\nHere, we globally apply\n\nvalidate input data using @ClassSerializerInterceptor\nset a timeout for requests using @TimeoutInterceptor\n\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ClassSerializerInterceptor, Module } from '@nestjs/common';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\nimport { TimeoutInterceptor } from '@shared/common';\n\n/** *********************************************\n * Global Interceptor setup\n * **********************************************\n * Here, we globally apply\n * - validate input data using @ClassSerializerInterceptor\n * - set a timeout for requests using @TimeoutInterceptor\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\tuseClass: ClassSerializerInterceptor,\n\t\t},\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR, // TODO remove (for testing)\n\t\t\tuseClass: TimeoutInterceptor,\n\t\t},\n\t],\n})\nexport class InterceptorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/guard/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtConstants.html":{"url":"interfaces/JwtConstants.html","title":"interface - JwtConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/constants.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            jwtOptions\n                                        \n                                \n                                \n                                        \n                                            secret\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        jwtOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jwtOptions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secret\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import externalAuthConfig = require('../../../../../src/services/authentication/configuration');\n\nconst { authConfig } = externalAuthConfig;\n\n/*\n\tTODO: look at existing keys, vs implemented keys\n\tsupport: true,\n\tsupportUserId,\n\taccountId,\n\tuserId,\n\tiat,\n\texp,\n\taud: this.aud,\n\tiss: 'feathers',\n\tsub: accountId,\n\tjti: `support_${ObjectId()}`,\n*/\nexport interface JwtConstants {\n\tsecret: string;\n\tjwtOptions: {\n\t\theader: { typ: string };\n\t\taudience: string;\n\t\tissuer: string;\n\t\talgorithm: string;\n\t\texpiresIn: string;\n\t};\n}\n\nexport const jwtConstants: JwtConstants = {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n};\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/interface/jwt-payload.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ICurrentUser\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            aud\n                                        \n                                \n                                \n                                        \n                                            exp\n                                        \n                                \n                                \n                                        \n                                            iat\n                                        \n                                \n                                \n                                        \n                                            iss\n                                        \n                                \n                                \n                                        \n                                            jti\n                                        \n                                \n                                \n                                        \n                                            sub\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aud\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        aud:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    audience\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    expiration in // TODO\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iss\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iss:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    issuer\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jti\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jti:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    // TODO\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ICurrentUser } from '@shared/domain';\n\nexport interface JwtPayload extends ICurrentUser {\n\t/** audience */\n\taud: string;\n\t/** expiration in // TODO\n\t *\n\t */\n\texp: number;\n\tiat: number;\n\t/** issuer */\n\tiss: string;\n\tjti: string;\n\n\t/** // TODO\n\t *\n\t */\n\tsub: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/strategy/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userFacade: UserFacade, jwtValidationAdapter: JwtValidationAdapter)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userFacade\n                                                  \n                                                        \n                                                                        UserFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtValidationAdapter\n                                                  \n                                                        \n                                                                        JwtValidationAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { UserFacade } from '@src/modules/user';\nimport { jwtConstants } from '../constants';\nimport { JwtPayload } from '../interface/jwt-payload';\nimport { JwtValidationAdapter } from './jwt-validation.adapter';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n\tconstructor(private readonly userFacade: UserFacade, private readonly jwtValidationAdapter: JwtValidationAdapter) {\n\t\tsuper({\n\t\t\tjwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n\t\t\tignoreExpiration: false,\n\t\t\tsecretOrKey: jwtConstants.secret,\n\t\t\t...jwtConstants.jwtOptions,\n\t\t});\n\t}\n\n\tasync validate(payload: JwtPayload): Promise {\n\t\t// check jwt is whitelisted and extend whitelist entry\n\t\tconst { accountId, jti } = payload;\n\t\tawait this.jwtValidationAdapter.isWhitelisted(accountId, jti);\n\t\t// check user exists\n\t\tconst resolvedUser = await this.userFacade.resolveUser(payload);\n\t\tpayload.user = resolvedUser; // todo decide request.user or request.user.user to be used everywhere\n\t\t// TODO: check user/account is active and has one role\n\t\treturn payload;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtValidationAdapter.html":{"url":"injectables/JwtValidationAdapter.html","title":"injectable - JwtValidationAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtValidationAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addToWhitelist\n                            \n                            \n                                    Async\n                                isWhitelisted\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addToWhitelist\n                        \n                    \n                \n            \n            \n                \n                    \n                    addToWhitelist(accountId: string, jti: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accountId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    jti\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isWhitelisted\n                        \n                    \n                \n            \n            \n                \n                    \n                    isWhitelisted(accountId: string, jti: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts:15\n                \n            \n\n\n            \n                \n                    When validating a jwt it must be added to a whitelist, here we check this.\nWhen the jwt is validated, the expiration time will be extended with this call.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    accountId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        users account id\n\n                                    \n                                \n                                \n                                    jti\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        jwt id (here required to make jwt identifiers identical in redis)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport jwtWhitelist = require('../../../../../../src/services/authentication/logic/whitelist');\n\nconst { ensureTokenIsWhitelisted, addTokenToWhitelist, createRedisIdentifierFromJwtData } = jwtWhitelist;\n\n@Injectable()\nexport class JwtValidationAdapter {\n\t/**\n\t * When validating a jwt it must be added to a whitelist, here we check this.\n\t * When the jwt is validated, the expiration time will be extended with this call.\n\t * @param accountId users account id\n\t * @param jti jwt id (here required to make jwt identifiers identical in redis)\n\t */\n\tasync isWhitelisted(accountId: string, jti: string): Promise {\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n\t\tawait ensureTokenIsWhitelisted({ accountId, jti, privateDevice: false });\n\t}\n\n\tasync addToWhitelist(accountId: string, jti: string): Promise {\n\t\tconst redisIdentifier = createRedisIdentifierFromJwtData(accountId, jti);\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n\t\tawait addTokenToWhitelist(redisIdentifier);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LearnroomModule.html":{"url":"modules/LearnroomModule.html","title":"module - LearnroomModule","body":"\n                   \n\n\n\n\n    Modules\n    LearnroomModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LearnroomModule\n\n\n\ncluster_LearnroomModule_providers\n\n\n\n\nDashboardUc\n\nDashboardUc\n\n\n\nLearnroomModule\n\nLearnroomModule\n\nLearnroomModule -->\n\nDashboardUc->LearnroomModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/learnroom.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DashboardUc\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DashboardController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { DashboardRepo } from '@src/repositories/learnroom/dashboard.repo';\n\nimport { DashboardController } from './controller/dashboard.controller';\nimport { DashboardUc } from './uc/dashboard.uc';\n\n@Module({\n\timports: [],\n\tcontrollers: [DashboardController],\n\tproviders: [\n\t\tDashboardUc,\n\t\t{\n\t\t\tprovide: 'DASHBOARD_REPO',\n\t\t\tuseClass: DashboardRepo,\n\t\t},\n\t],\n})\nexport class LearnroomModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Lesson.html":{"url":"classes/Lesson.html","title":"class - Lesson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Lesson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/lesson.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                            \n                                hidden\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: LessonProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/lesson.entity.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        LessonProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        course\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Course', {fieldName: 'courseId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/lesson.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hidden\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/lesson.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\n\ninterface LessonProperties {\n\thidden?: boolean;\n\tcourse: Course;\n}\n\n@Entity({ tableName: 'lessons' })\nexport class Lesson extends BaseEntityWithTimestamps {\n\t@Property()\n\thidden = false;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse: Course;\n\n\tconstructor(props: LessonProperties) {\n\t\tsuper();\n\t\tif (props.hidden !== undefined) this.hidden = props.hidden;\n\t\tthis.course = props.course;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LessonProperties.html":{"url":"interfaces/LessonProperties.html","title":"interface - LessonProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LessonProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/lesson.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            course\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hidden\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        course\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        course:         Course\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Course\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\n\ninterface LessonProperties {\n\thidden?: boolean;\n\tcourse: Course;\n}\n\n@Entity({ tableName: 'lessons' })\nexport class Lesson extends BaseEntityWithTimestamps {\n\t@Property()\n\thidden = false;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse: Course;\n\n\tconstructor(props: LessonProperties) {\n\t\tsuper();\n\t\tif (props.hidden !== undefined) this.hidden = props.hidden;\n\t\tthis.course = props.course;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Logger.html":{"url":"injectables/Logger.html","title":"injectable - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        NestLogger\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Scope, Logger as NestLogger } from '@nestjs/common';\nimport { ILogger } from './logger.interface';\n\n@Injectable({ scope: Scope.TRANSIENT })\n/**\n * Default logger for server application.\n * Must implement ILogger but must not extend NestLogger (this can be changed).\n * Transient injection: Wherever injected, a separate instance will be created, that can be provided with a custom context.\n */\nexport class Logger extends NestLogger implements ILogger {\n\t/**\n\t * This Logger Service can be initialized with a context, that will be added to every log.\n\t * It implements @ILogger which provides the logger methods.\n\t * CAUTION: PREPARE STRINGS AS LOG DATA, DO NOT LOG COMPLEX DATA STRUCTURES\n\t * @param context when initialized in a provider, use setContext with CustomProviderClass.name\n\t * @param isTimestampEnabled\n\t */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\n\nLogger \n\nLogger \n\n\n\nLoggerModule\n\nLoggerModule\n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            Logger\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Logger\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Logger } from './logger.service';\n\n@Module({\n\tproviders: [Logger],\n\texports: [Logger],\n})\nexport class LoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Mail.html":{"url":"interfaces/Mail.html","title":"interface - Mail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Mail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            bcc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            from\n                                        \n                                \n                                \n                                        \n                                            mail\n                                        \n                                \n                                \n                                        \n                                            recipients\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            replyTo\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bcc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bcc:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cc:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        from:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mail:     PlainTextMailContent | HtmlMailContent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PlainTextMailContent | HtmlMailContent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recipients\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        recipients:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        replyTo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        replyTo:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailAttachment.html":{"url":"interfaces/MailAttachment.html","title":"interface - MailAttachment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailAttachment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            base64Content\n                                        \n                                \n                                \n                                        \n                                            mimeType\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        base64Content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        base64Content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mimeType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mimeType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailContent.html":{"url":"interfaces/MailContent.html","title":"interface - MailContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            attachments\n                                        \n                                \n                                \n                                        \n                                            subject\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attachments\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attachments:     (InlineAttachment | AppendedAttachment)[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     (InlineAttachment | AppendedAttachment)[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: MailModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/mail/mail.module.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MailModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, DynamicModule } from '@nestjs/common';\nimport { RabbitMQModule } from '@golevelup/nestjs-rabbitmq';\nimport { MailService } from './mail.service';\n\ninterface MailModuleOptions {\n\turi: string;\n\texchange: string;\n\troutingKey: string;\n}\n\ntype RabbitMqModuleOptions = Omit;\n\nconst createRabbitMqModule = (options: RabbitMqModuleOptions) => {\n\tconst rabbitMqModule = RabbitMQModule.forRoot(RabbitMQModule, {\n\t\texchanges: [\n\t\t\t{\n\t\t\t\tname: options.exchange,\n\t\t\t\ttype: 'direct',\n\t\t\t},\n\t\t],\n\t\turi: options.uri,\n\t});\n\treturn rabbitMqModule;\n};\n\n@Module({})\nexport class MailModule {\n\tstatic forRoot(options: MailModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: MailModule,\n\t\t\timports: [createRabbitMqModule(options)],\n\t\t\tproviders: [\n\t\t\t\tMailService,\n\t\t\t\t{\n\t\t\t\t\tprovide: 'MAIL_SERVICE_OPTIONS',\n\t\t\t\t\tuseValue: { exchange: options.exchange, routingKey: options.routingKey },\n\t\t\t\t},\n\t\t\t],\n\t\t\texports: [MailService],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailModuleOptions.html":{"url":"interfaces/MailModuleOptions.html","title":"interface - MailModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            exchange\n                                        \n                                \n                                \n                                        \n                                            routingKey\n                                        \n                                \n                                \n                                        \n                                            uri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exchange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exchange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routingKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routingKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Module, DynamicModule } from '@nestjs/common';\nimport { RabbitMQModule } from '@golevelup/nestjs-rabbitmq';\nimport { MailService } from './mail.service';\n\ninterface MailModuleOptions {\n\turi: string;\n\texchange: string;\n\troutingKey: string;\n}\n\ntype RabbitMqModuleOptions = Omit;\n\nconst createRabbitMqModule = (options: RabbitMqModuleOptions) => {\n\tconst rabbitMqModule = RabbitMQModule.forRoot(RabbitMQModule, {\n\t\texchanges: [\n\t\t\t{\n\t\t\t\tname: options.exchange,\n\t\t\t\ttype: 'direct',\n\t\t\t},\n\t\t],\n\t\turi: options.uri,\n\t});\n\treturn rabbitMqModule;\n};\n\n@Module({})\nexport class MailModule {\n\tstatic forRoot(options: MailModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: MailModule,\n\t\t\timports: [createRabbitMqModule(options)],\n\t\t\tproviders: [\n\t\t\t\tMailService,\n\t\t\t\t{\n\t\t\t\t\tprovide: 'MAIL_SERVICE_OPTIONS',\n\t\t\t\t\tuseValue: { exchange: options.exchange, routingKey: options.routingKey },\n\t\t\t\t},\n\t\t\t],\n\t\t\texports: [MailService],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(amqpConnection: AmqpConnection, options: MailServiceOptions)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/mail/mail.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        amqpConnection\n                                                  \n                                                        \n                                                                    AmqpConnection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        MailServiceOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        send\n                        \n                    \n                \n            \n            \n                \n                    \n                    send(data: Mail)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/mail/mail.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Mail\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { AmqpConnection } from '@golevelup/nestjs-rabbitmq';\n\nimport { Mail } from './mail.interface';\n\ninterface MailServiceOptions {\n\texchange: string;\n\troutingKey: string;\n}\n\n@Injectable()\nexport class MailService {\n\tconstructor(\n\t\tprivate readonly amqpConnection: AmqpConnection,\n\t\t@Inject('MAIL_SERVICE_OPTIONS') private readonly options: MailServiceOptions\n\t) {}\n\n\tpublic async send(data: Mail): Promise {\n\t\tawait this.amqpConnection.publish(this.options.exchange, this.options.routingKey, data, { persistent: true });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailServiceOptions.html":{"url":"interfaces/MailServiceOptions.html","title":"interface - MailServiceOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailServiceOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            exchange\n                                        \n                                \n                                \n                                        \n                                            routingKey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exchange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exchange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routingKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routingKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { AmqpConnection } from '@golevelup/nestjs-rabbitmq';\n\nimport { Mail } from './mail.interface';\n\ninterface MailServiceOptions {\n\texchange: string;\n\troutingKey: string;\n}\n\n@Injectable()\nexport class MailService {\n\tconstructor(\n\t\tprivate readonly amqpConnection: AmqpConnection,\n\t\t@Inject('MAIL_SERVICE_OPTIONS') private readonly options: MailServiceOptions\n\t) {}\n\n\tpublic async send(data: Mail): Promise {\n\t\tawait this.amqpConnection.publish(this.options.exchange, this.options.routingKey, data, { persistent: true });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MongoMemoryDatabaseModule.html":{"url":"modules/MongoMemoryDatabaseModule.html","title":"module - MongoMemoryDatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    MongoMemoryDatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options?: MongoDatabaseModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MongoDatabaseModuleOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleDestroy()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MikroORM } from '@mikro-orm/core';\nimport { MikroOrmModule, MikroOrmModuleSyncOptions } from '@mikro-orm/nestjs';\nimport { DynamicModule, Inject, Module, OnModuleDestroy } from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport { ALL_ENTITIES } from '@shared/domain';\nimport { MongoMemoryServer } from 'mongodb-memory-server';\nimport { MongoDatabaseModuleOptions } from '../types';\n\nconst createMikroOrmModule = (options: MikroOrmModuleSyncOptions): DynamicModule => {\n\tconst mikroOrmModule = MikroOrmModule.forRootAsync({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: MongoMemoryServer,\n\t\t\t\tuseFactory: () => {\n\t\t\t\t\treturn new MongoMemoryServer();\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tuseFactory: async (mongod: MongoMemoryServer) => {\n\t\t\tconst clientUrl = await mongod.getUri();\n\t\t\treturn {\n\t\t\t\t...options,\n\t\t\t\ttype: 'mongo',\n\t\t\t\tclientUrl,\n\t\t\t};\n\t\t},\n\t\tinject: [MongoMemoryServer],\n\t});\n\n\t// TODO maybe we can find a better way to export the MongoMemoryServer provider\n\t// currently we cannot specify the export otherwise because MikroOrmModuleSyncOptions doesn't provide an export option\n\tconst mikroOrmCoreModule = (mikroOrmModule.imports || [])[0] as DynamicModule;\n\tif (mikroOrmCoreModule) {\n\t\tmikroOrmCoreModule.exports ||= [];\n\t\tmikroOrmCoreModule.exports.push(MongoMemoryServer);\n\t}\n\n\treturn mikroOrmModule;\n};\n\n@Module({})\nexport class MongoMemoryDatabaseModule implements OnModuleDestroy {\n\tconstructor(\n\t\t@Inject(MikroORM) private orm: MikroORM,\n\t\t@Inject(MongoMemoryServer) private mongod: MongoMemoryServer,\n\t\tprivate readonly moduleRef: ModuleRef\n\t) {}\n\n\tstatic forRoot(options?: MongoDatabaseModuleOptions): DynamicModule {\n\t\tconst defaultOptions = {\n\t\t\tentities: ALL_ENTITIES,\n\t\t};\n\t\treturn {\n\t\t\tmodule: MongoMemoryDatabaseModule,\n\t\t\timports: [createMikroOrmModule({ ...defaultOptions, ...options })],\n\t\t\texports: [MikroOrmModule],\n\t\t};\n\t}\n\n\t// close db connection and stop mongo server\n\t// NOTE: we have to call close() on this module to make nest call this callback\n\tasync onModuleDestroy(): Promise {\n\t\tawait this.orm.close();\n\t\tawait this.mongod.stop();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/News.html":{"url":"classes/News.html","title":"class - News","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  News\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/news.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: INewsProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        INewsProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:35\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'creatorId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:39\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('School', {fieldName: 'schoolId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTarget\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:51\n                        \n                    \n\n            \n                \n                    id reference to a collection populated later with name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:55\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:31\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'updaterId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModel, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/news.entity.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { School } from './school.entity';\nimport type { Team } from './team.entity';\nimport type { User } from './user.entity';\nimport { NewsTarget, NewsTargetModel } from '../types/news.types';\nimport { EntityId } from '../types';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId | School;\n\tcreator: EntityId | User;\n\ttarget: EntityId | NewsTarget;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: User;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTarget;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToOne('User', { fieldName: 'creatorId' })\n\tcreator!: User;\n\n\t@ManyToOne('User', { fieldName: 'updaterId' })\n\tupdater?: User;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, updater: props.updater, target: props.target });\n\t\tthis.externalId = props.externalId;\n\t\tthis.source = props.source;\n\t\tthis.sourceDescription = props.sourceDescription;\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne('School')\n\ttarget: School;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne('Course')\n\ttarget: Course;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne('Team')\n\ttarget: Team;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NewsController.html":{"url":"controllers/NewsController.html","title":"controller - NewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/news.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                news\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(currentUser: ICurrentUser, params: CreateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:21\n                \n            \n\n\n            \n                \n                    Create a news by a user in a given scope (school or team).\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:84\n                \n            \n\n\n            \n                \n                    Delete a news.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, scope: NewsFilterQuery, pagination: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:35\n                \n            \n\n\n            \n                \n                    Responds with all news for a user.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:56\n                \n            \n\n\n            \n                \n                    Retrieve a specific news entry by id.\nA user may only read news of scopes he has the read permission.\nThe news entity has school and user names populated.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(newsId: string, currentUser: ICurrentUser, params: UpdateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:70\n                \n            \n\n\n            \n                \n                    Update properties of a news.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Query, Patch, Delete } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ICurrentUser } from '@shared/domain';\nimport { ParseObjectIdPipe, PaginationQuery, PaginationResponse } from '@shared/controller';\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\nimport { NewsUc } from '../uc/news.uc';\n\nimport { CreateNewsParams, NewsFilterQuery, NewsResponse, UpdateNewsParams } from './dto';\nimport { NewsMapper } from '../mapper/news.mapper';\n\n@ApiTags('News')\n@Authenticate('jwt')\n@Controller('news')\nexport class NewsController {\n\tconstructor(private readonly newsUc: NewsUc) {}\n\n\t/**\n\t * Create a news by a user in a given scope (school or team).\n\t */\n\t@Post()\n\tasync create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n\t\tconst news = await this.newsUc.create(\n\t\t\tcurrentUser.userId,\n\t\t\tcurrentUser.schoolId,\n\t\t\tNewsMapper.mapCreateNewsToDomain(params)\n\t\t);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t/**\n\t * Responds with all news for a user.\n\t */\n\t@Get()\n\tasync findAll(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() scope: NewsFilterQuery,\n\t\t@Query() pagination: PaginationQuery\n\t): Promise> {\n\t\tconst [newsList, count] = await this.newsUc.findAllForUser(\n\t\t\tcurrentUser.userId,\n\t\t\tNewsMapper.mapNewsScopeToDomain(scope),\n\t\t\t{ pagination }\n\t\t);\n\t\tconst dtoList = newsList.map((news) => NewsMapper.mapToResponse(news));\n\t\tconst response = new PaginationResponse(dtoList, count);\n\t\treturn response;\n\t}\n\n\t/**\n\t * Retrieve a specific news entry by id.\n\t * A user may only read news of scopes he has the read permission.\n\t * The news entity has school and user names populated.\n\t */\n\t@Get(':id')\n\tasync findOne(\n\t\t// A parameter pipe like ParseObjectIdPipe gives us the guarantee of typesafety for @Param\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst news = await this.newsUc.findOneByIdForUser(newsId, currentUser.userId);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t/**\n\t * Update properties of a news.\n\t */\n\t@Patch(':id')\n\tasync update(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Body() params: UpdateNewsParams\n\t): Promise {\n\t\tconst news = await this.newsUc.update(newsId, currentUser.userId, NewsMapper.mapUpdateNewsToDomain(params));\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t/**\n\t * Delete a news.\n\t */\n\t@Delete(':id')\n\tasync delete(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst deletedId = await this.newsUc.delete(newsId, currentUser.userId);\n\t\treturn deletedId;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsFilterQuery.html":{"url":"classes/NewsFilterQuery.html","title":"class - NewsFilterQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsFilterQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news-filter.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                targetId\n                            \n                            \n                                    Optional\n                                targetModel\n                            \n                            \n                                    Optional\n                                unpublished\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        targetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()@ApiPropertyOptional({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the news are related (works only together with targetModel)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@IsIn(TARGET_MODEL_VALUES)@ApiPropertyOptional({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the news are related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        unpublished\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()@StringToBoolean()@ApiPropertyOptional({description: 'Flag that filters if the news should be published or not'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsBoolean, IsIn, IsMongoId, IsOptional, IsString } from 'class-validator';\nimport { StringToBoolean } from '@shared/controller/transformer';\nimport { NewsTargetModel } from '@shared/domain/types/news.types';\n\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\nexport class NewsFilterQuery {\n\t@IsOptional()\n\t@IsString()\n\t@IsIn(TARGET_MODEL_VALUES)\n\t@ApiPropertyOptional({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the news are related',\n\t})\n\ttargetModel?: string;\n\n\t@IsOptional()\n\t@IsMongoId()\n\t@ApiPropertyOptional({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the news are related (works only together with targetModel)',\n\t})\n\ttargetId?: string;\n\n\t@IsOptional()\n\t@IsBoolean()\n\t@StringToBoolean()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Flag that filters if the news should be published or not',\n\t})\n\tunpublished?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsMapper.html":{"url":"classes/NewsMapper.html","title":"class - NewsMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/news.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapCreateNewsToDomain\n                            \n                            \n                                    Static\n                                mapNewsScopeToDomain\n                            \n                            \n                                    Static\n                                mapToResponse\n                            \n                            \n                                    Static\n                                mapUpdateNewsToDomain\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapCreateNewsToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapCreateNewsToDomain(params: CreateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ICreateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapNewsScopeToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapNewsScopeToDomain(query: NewsFilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         INewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapUpdateNewsToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapUpdateNewsToDomain(params: UpdateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IUpdateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { News } from '@shared/domain';\nimport { ICreateNews, INewsScope, IUpdateNews, NewsTargetModel } from '@shared/domain/types/news.types';\nimport { CreateNewsParams, NewsFilterQuery, NewsResponse, UpdateNewsParams } from '../controller/dto';\nimport { SchoolInfoMapper } from './school-info.mapper';\nimport { TargetInfoMapper } from './target-info.mapper';\nimport { UserInfoMapper } from './user-info.mapper';\n\nexport class NewsMapper {\n\tstatic mapToResponse(news: News): NewsResponse {\n\t\tconst dto = new NewsResponse();\n\t\tdto.id = news.id;\n\t\tdto.title = news.title;\n\t\tdto.content = news.content;\n\t\tdto.displayAt = news.displayAt;\n\t\tdto.source = news.source;\n\t\tdto.sourceDescription = news.sourceDescription;\n\t\tdto.targetId = news.target.id;\n\t\tdto.targetModel = news.targetModel;\n\t\tdto.target = TargetInfoMapper.mapToResponse(news.target);\n\t\tdto.school = SchoolInfoMapper.mapToResponse(news.school);\n\t\tdto.creator = UserInfoMapper.mapToResponse(news.creator);\n\t\tif (news.updater) {\n\t\t\tdto.updater = UserInfoMapper.mapToResponse(news.updater);\n\t\t}\n\t\tdto.createdAt = news.createdAt;\n\t\tdto.updatedAt = news.updatedAt;\n\t\tdto.permissions = news.permissions;\n\t\treturn dto;\n\t}\n\n\tstatic mapNewsScopeToDomain(query: NewsFilterQuery): INewsScope {\n\t\tconst dto: INewsScope = {};\n\t\tif (query.targetModel) {\n\t\t\tdto.target = {\n\t\t\t\ttargetModel: query.targetModel as NewsTargetModel,\n\t\t\t\ttargetId: query.targetId,\n\t\t\t};\n\t\t}\n\t\tif ('unpublished' in query) {\n\t\t\tdto.unpublished = query.unpublished;\n\t\t}\n\t\treturn dto;\n\t}\n\n\tstatic mapCreateNewsToDomain(params: CreateNewsParams): ICreateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.content,\n\t\t\tdisplayAt: params.displayAt,\n\t\t\ttarget: {\n\t\t\t\ttargetModel: params.targetModel as NewsTargetModel,\n\t\t\t\ttargetId: params.targetId,\n\t\t\t},\n\t\t};\n\t\treturn dto;\n\t}\n\n\tstatic mapUpdateNewsToDomain(params: UpdateNewsParams): IUpdateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.content,\n\t\t\tdisplayAt: params.displayAt,\n\t\t};\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewsModule.html":{"url":"modules/NewsModule.html","title":"module - NewsModule","body":"\n                   \n\n\n\n\n    Modules\n    NewsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_imports\n\n\n\ncluster_NewsModule_providers\n\n\n\ncluster_NewsModule_exports\n\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/news/news.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NewsRepo\n                        \n                        \n                            NewsUc\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NewsController\n                        \n                        \n                            TeamNewsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthorizationModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NewsUc\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LoggerModule } from '@src/core/logger/logger.module';\nimport { AuthorizationModule } from '@src/modules/authorization/authorization.module';\nimport { NewsUc } from './uc/news.uc';\nimport { NewsRepo } from './repo/news.repo';\nimport { NewsController } from './controller/news.controller';\nimport { TeamNewsController } from './controller/team-news.controller';\n\n/* NewsController\n * to enable:\n * - unskip e2e tests\n * - execute migration news_add_target_schools (in migrations/scheduled)\n * - update backup/setup/news.json from db after migration has been executed\n */\n@Module({\n\timports: [AuthorizationModule, LoggerModule],\n\tcontrollers: [NewsController, TeamNewsController],\n\tproviders: [NewsUc, NewsRepo],\n\texports: [NewsUc],\n})\nexport class NewsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsRepo.html":{"url":"injectables/NewsRepo.html","title":"injectable - NewsRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NewsRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news.repo.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseRepo\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                propertiesToPopulate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Private\n                                    Async\n                                findNewsAndCount\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                persist\n                            \n                            \n                                persistAll\n                            \n                            \n                                    Async\n                                persistAllAndFlush\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                    Async\n                                removeAllAndFlush\n                            \n                            \n                                    Async\n                                removeAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(targets: NewsTargetFilter[], unpublished: boolean, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:19\n                \n            \n\n\n            \n                \n                    Find news\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findNewsAndCount\n                        \n                    \n                \n            \n            \n                \n                    \n                    findNewsAndCount(query: FilterQuery, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:39\n                \n            \n\n\n            \n                \n                    resolves a news documents list with some elements (school, target, and updator/creator) populated already\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:32\n                \n            \n\n\n            \n                \n                    resolves a news document with some elements (school, target, and updator/creator) populated already\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                    \n                    flush()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persist\n                        \n                    \n                \n            \n            \n                \npersist(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:9\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAll\n                        \n                    \n                \n            \n            \n                \npersistAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAll\n                        \n                    \n                \n            \n            \n                \nremoveAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        propertiesToPopulate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['school', 'target', 'creator', 'updater']\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/repo/news.repo.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { FilterQuery } from '@mikro-orm/core';\nimport { BaseRepo } from '@shared/repo/base.repo';\nimport { QueryOrderMap } from '@mikro-orm/core/enums';\nimport { Counted, CourseNews, EntityId, IFindOptions, News, SchoolNews, TeamNews } from '@shared/domain';\nimport { NewsScope } from './news-scope';\nimport { NewsTargetFilter } from './news-target-filter';\n\n@Injectable()\nexport class NewsRepo extends BaseRepo {\n\tpropertiesToPopulate = ['school', 'target', 'creator', 'updater'];\n\n\t/**\n\t * Find news\n\t * @param targets\n\t * @param unpublished\n\t * @param options\n\t */\n\tasync findAll(\n\t\ttargets: NewsTargetFilter[],\n\t\tunpublished: boolean,\n\t\toptions?: IFindOptions\n\t): Promise> {\n\t\tconst scope = new NewsScope();\n\t\tscope.byTargets(targets);\n\t\tscope.byUnpublished(unpublished);\n\t\tconst countedNewsList = await this.findNewsAndCount(scope.query, options);\n\t\treturn countedNewsList;\n\t}\n\n\t/** resolves a news document with some elements (school, target, and updator/creator) populated already */\n\tasync findOneById(id: EntityId): Promise {\n\t\tconst newsEntity = await this.em.findOneOrFail(News, id);\n\t\tawait this.em.populate(newsEntity, this.propertiesToPopulate);\n\t\treturn newsEntity;\n\t}\n\n\t/** resolves a news documents list with some elements (school, target, and updator/creator) populated already */\n\tprivate async findNewsAndCount(query: FilterQuery, options?: IFindOptions): Promise> {\n\t\tconst { pagination, order } = options || {};\n\t\tconst [newsEntities, count] = await this.em.findAndCount(News, query, {\n\t\t\t...pagination,\n\t\t\torderBy: order as QueryOrderMap,\n\t\t});\n\t\tawait this.em.populate(newsEntities, this.propertiesToPopulate);\n\t\t// populate target for all inheritances of news which not works when the list contains different types\n\t\tconst discriminatorColumn = 'target';\n\t\tconst schoolNews = newsEntities.filter((news) => news instanceof SchoolNews);\n\t\tawait this.em.populate(schoolNews, discriminatorColumn);\n\t\tconst teamNews = newsEntities.filter((news) => news instanceof TeamNews);\n\t\tawait this.em.populate(teamNews, discriminatorColumn);\n\t\tconst courseNews = newsEntities.filter((news) => news instanceof CourseNews);\n\t\tawait this.em.populate(courseNews, discriminatorColumn);\n\t\treturn [newsEntities, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsResponse.html":{"url":"classes/NewsResponse.html","title":"class - NewsResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                createdAt\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                id\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetId\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                updater\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Content of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The creation timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Reference to the User that created the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The point in time from when the News entity schould be displayed'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the News entity', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'List of permissions the current user has for the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SchoolInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The School ownership'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SourceType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'string', enum: NEWS_SOURCES, description: 'The type of source of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The source description of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TargetInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The target object with id and name, could be the school, team, or course name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Title of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The update timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Reference to the User that updated the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:76\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { NewsTargetModel } from '@shared/domain/types/news.types';\nimport { SchoolInfoResponse } from './school-info.response';\nimport { TargetInfoResponse } from './target-info.response';\nimport { UserInfoResponse } from './user-info.response';\n\nconst NEWS_SOURCES = ['internal', 'rss'] as const;\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\ntype SourceType = typeof NEWS_SOURCES[number];\nexport class NewsResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the News entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n\n\t@ApiPropertyOptional({\n\t\ttype: 'string',\n\t\tenum: NEWS_SOURCES,\n\t\tdescription: 'The type of source of the News entity',\n\t})\n\tsource?: SourceType;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'The source description of the News entity',\n\t})\n\tsourceDescription?: string;\n\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel: string;\n\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The target object with id and name, could be the school, team, or course name',\n\t})\n\ttarget: TargetInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The School ownership',\n\t})\n\tschool: SchoolInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'Reference to the User that created the News entity',\n\t})\n\tcreator: UserInfoResponse;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'Reference to the User that updated the News entity',\n\t})\n\tupdater?: UserInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The creation timestamp',\n\t})\n\tcreatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'The update timestamp',\n\t})\n\tupdatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'List of permissions the current user has for the News entity',\n\t})\n\tpermissions: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsScope.html":{"url":"classes/NewsScope.html","title":"class - NewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news-scope.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                byTargets\n                            \n                            \n                                byUnpublished\n                            \n                            \n                                addQuery\n                            \n                            \n                                buildAndAddOrQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:57\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        byTargets\n                        \n                    \n                \n            \n            \n                \nbyTargets(targets: NewsTargetFilter[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byUnpublished\n                        \n                    \n                \n            \n            \n                \nbyUnpublished(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:67\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildAndAddOrQuery\n                        \n                    \n                \n            \n            \n                \nbuildAndAddOrQuery(arrayOfObjects: TT[], selectedKey: string, targetKey: string)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:71\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        TT\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arrayOfObjects\n                                    \n                                            TT[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selectedKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EmptyResultQuery, Scope } from '@shared/repo';\nimport { News } from '@shared/domain';\nimport { NewsTargetFilter } from './news-target-filter';\n\nexport class NewsScope extends Scope {\n\tbyTargets(targets: NewsTargetFilter[]): NewsScope {\n\t\tconst queries: FilterQuery[] = targets.map((target) => {\n\t\t\treturn { $and: [{ targetModel: target.targetModel }, { 'target:in': target.targetIds }] };\n\t\t});\n\t\tif (queries.length === 0) {\n\t\t\t// mission impossile query to ensure empty query result\n\t\t\tthis.addQuery(EmptyResultQuery);\n\t\t} else if (queries.length === 1) {\n\t\t\tthis.addQuery(queries[0]);\n\t\t} else {\n\t\t\tthis.addQuery({ $or: queries });\n\t\t}\n\t\treturn this;\n\t}\n\n\tbyUnpublished(unpublished: boolean): NewsScope {\n\t\tconst now = new Date();\n\t\tthis.addQuery({ displayAt: unpublished ? { $gt: now } : { $lte: now } });\n\t\treturn this;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NewsTargetFilter.html":{"url":"interfaces/NewsTargetFilter.html","title":"interface - NewsTargetFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NewsTargetFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news-target-filter.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            targetIds\n                                        \n                                \n                                \n                                        \n                                            targetModel\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        targetIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        targetIds:         EntityId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        targetModel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        targetModel:         NewsTargetModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NewsTargetModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from '@shared/domain';\nimport { NewsTargetModel } from '@shared/domain/types/news.types';\n\nexport interface NewsTargetFilter {\n\ttargetModel: NewsTargetModel;\n\ttargetIds: EntityId[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsUc.html":{"url":"injectables/NewsUc.html","title":"injectable - NewsUc","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NewsUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/uc/news.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAllForUser\n                            \n                            \n                                    Async\n                                findOneByIdForUser\n                            \n                            \n                                    Private\n                                    Async\n                                getNewsPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Static\n                                getRequiredPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getTargetFilters\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(newsRepo: NewsRepo, authorizationService: AuthorizationService, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/uc/news.uc.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newsRepo\n                                                  \n                                                        \n                                                                        NewsRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizationService\n                                                  \n                                                        \n                                                                        AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userId: EntityId, schoolId: EntityId, params: ICreateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                ICreateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForUser(userId: EntityId, scope?: INewsScope, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:55\n                \n            \n\n\n            \n                \n                    Provides news for a user, by default odered by displayAt to show latest news first.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByIdForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByIdForUser(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getNewsPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNewsPermissions(userId: EntityId, news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getPermittedTargets\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                                Permission[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        getRequiredPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequiredPermissions(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:193\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        news with displayAt set to future date are not published for users with view permission\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getTargetFilters\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTargetFilters(userId: EntityId, targetModels: NewsTargetModel[], permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModels\n                                    \n                                                NewsTargetModel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: EntityId, userId: EntityId, params: IUpdateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                IUpdateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, IFindOptions, News, SortOrder } from '@shared/domain';\nimport { Counted } from '@shared/domain/types';\nimport { Logger } from '@src/core/logger/logger.service';\nimport { AuthorizationService } from '@src/modules/authorization/authorization.service';\nimport { NewsTargetModel, ICreateNews, INewsScope, IUpdateNews } from '@shared/domain/types/news.types';\nimport { NewsRepo } from '../repo/news.repo';\nimport { NewsTargetFilter } from '../repo/news-target-filter';\n\ntype Permission = 'NEWS_VIEW' | 'NEWS_EDIT';\n\n@Injectable()\nexport class NewsUc {\n\tconstructor(private newsRepo: NewsRepo, private authorizationService: AuthorizationService, private logger: Logger) {\n\t\tthis.logger.setContext(NewsUc.name);\n\t}\n\n\t/**\n\t *\n\t * @param userId\n\t * @param schoolId\n\t * @param params\n\t * @returns\n\t */\n\tasync create(userId: EntityId, schoolId: EntityId, params: ICreateNews): Promise {\n\t\tthis.logger.log(`create news as user ${userId}`);\n\n\t\tconst { targetModel, targetId } = params.target;\n\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, ['NEWS_CREATE']);\n\n\t\tconst { target, displayAt: paramDisplayAt, ...props } = params;\n\t\t// set news as published by default\n\t\tconst displayAt = paramDisplayAt || new Date();\n\t\tconst news = News.createInstance(targetModel, {\n\t\t\t...props,\n\t\t\tdisplayAt,\n\t\t\tschool: schoolId,\n\t\t\tcreator: userId,\n\t\t\ttarget: targetId,\n\t\t});\n\t\tawait this.newsRepo.persistAndFlush(news);\n\n\t\tthis.logger.log(`news ${news.id} created by user ${userId}`);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t * Provides news for a user, by default odered by displayAt to show latest news first.\n\t * @param userId\n\t * @param scope\n\t * @param pagination\n\t * @returns\n\t */\n\tasync findAllForUser(userId: EntityId, scope?: INewsScope, options?: IFindOptions): Promise> {\n\t\tthis.logger.log(`start find all news for user ${userId}`);\n\n\t\tconst unpublished = !!scope?.unpublished; // default is only published news\n\t\tconst permissions: [Permission] = NewsUc.getRequiredPermissions(unpublished);\n\n\t\tconst targets = await this.getPermittedTargets(userId, scope, permissions);\n\n\t\tif (options == null) options = {};\n\t\t// by default show latest news first\n\t\tif (options.order == null) options.order = { displayAt: SortOrder.desc };\n\n\t\tconst [newsList, newsCount] = await this.newsRepo.findAll(targets, unpublished, options);\n\n\t\tawait Promise.all(\n\t\t\tnewsList.map(async (news: News) => {\n\t\t\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\t\t\t})\n\t\t);\n\n\t\tthis.logger.log(`return ${newsList.length} news for user ${userId}`);\n\n\t\treturn [newsList, newsCount];\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync findOneByIdForUser(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start find one news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tconst isPublished = news.displayAt > new Date();\n\t\tconst requiredPermissions = NewsUc.getRequiredPermissions(isPublished);\n\t\tawait this.authorizationService.checkEntityPermissions(\n\t\t\tuserId,\n\t\t\tnews.targetModel,\n\t\t\tnews.target.id,\n\t\t\trequiredPermissions\n\t\t);\n\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @param params\n\t * @returns\n\t */\n\tasync update(id: EntityId, userId: EntityId, params: IUpdateNews): Promise {\n\t\tthis.logger.log(`start update news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\t// eslint-disable-next-line no-restricted-syntax\n\t\tfor (const [key, value] of Object.entries(params)) {\n\t\t\tif (value) {\n\t\t\t\tnews[key] = value;\n\t\t\t}\n\t\t}\n\n\t\tawait this.newsRepo.persistAndFlush(news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync delete(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start remove news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\tawait this.newsRepo.removeAndFlush(news);\n\n\t\treturn id;\n\t}\n\n\tprivate async getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[]) {\n\t\tlet targets: NewsTargetFilter[];\n\n\t\tif (scope?.target == null) {\n\t\t\t// for all target models\n\t\t\ttargets = await this.getTargetFilters(userId, Object.values(NewsTargetModel), permissions);\n\t\t} else {\n\t\t\tconst { targetModel, targetId } = scope.target;\n\t\t\tif (targetModel && targetId) {\n\t\t\t\t// for specific news target\n\t\t\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, permissions);\n\t\t\t\ttargets = [{ targetModel, targetIds: [targetId] }];\n\t\t\t} else {\n\t\t\t\t// for single target model\n\t\t\t\ttargets = await this.getTargetFilters(userId, [targetModel], permissions);\n\t\t\t}\n\t\t}\n\t\treturn targets;\n\t}\n\n\tprivate async getTargetFilters(\n\t\tuserId: EntityId,\n\t\ttargetModels: NewsTargetModel[],\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst targets = await Promise.all(\n\t\t\ttargetModels.map(async (targetModel) => {\n\t\t\t\treturn {\n\t\t\t\t\ttargetModel,\n\t\t\t\t\ttargetIds: await this.authorizationService.getPermittedEntities(userId, targetModel, permissions),\n\t\t\t\t};\n\t\t\t})\n\t\t);\n\t\tconst nonEmptyTargets = targets.filter((target) => target.targetIds.length > 0);\n\n\t\treturn nonEmptyTargets;\n\t}\n\n\tprivate async getNewsPermissions(userId: EntityId, news: News): Promise {\n\t\tconst permissions = await this.authorizationService.getEntityPermissions(userId, news.targetModel, news.target.id);\n\t\treturn permissions.filter((permission) => permission.includes('NEWS'));\n\t}\n\n\t/**\n\t *\n\t * @param unpublished news with displayAt set to future date are not published for users with view permission\n\t * @returns\n\t */\n\tprivate static getRequiredPermissions(unpublished: boolean): [Permission] {\n\t\treturn unpublished ? ['NEWS_EDIT'] : ['NEWS_VIEW'];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationQuery.html":{"url":"classes/PaginationQuery.html","title":"class - PaginationQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(1)@Max(100)@ApiPropertyOptional({description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.query.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(0)@ApiPropertyOptional({description: 'Number of elements (not pages) to be skipped'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.query.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, Max, Min } from 'class-validator';\nimport { ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class PaginationQuery {\n\t@IsInt()\n\t@Min(0)\n\t@ApiPropertyOptional({ description: 'Number of elements (not pages) to be skipped' })\n\tskip?: number = 0;\n\n\t@IsInt()\n\t@Min(1)\n\t@Max(100)\n\t@ApiPropertyOptional({ description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99 })\n\tlimit?: number = 10;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationResponse.html":{"url":"classes/PaginationResponse.html","title":"class - PaginationResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: T, total: number, skip?: number, limit?: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        skip\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class PaginationResponse {\n\tconstructor(data: T, total: number, skip?: number, limit?: number) {\n\t\tthis.data = data;\n\t\tthis.total = total;\n\t\tthis.skip = skip;\n\t\tthis.limit = limit;\n\t}\n\n\t@ApiProperty()\n\tdata: T;\n\n\t@ApiProperty()\n\ttotal: number;\n\n\t@ApiProperty()\n\tskip?: number;\n\n\t@ApiProperty()\n\tlimit?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ParseObjectIdPipe.html":{"url":"injectables/ParseObjectIdPipe.html","title":"injectable - ParseObjectIdPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ParseObjectIdPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, BadRequestException } from '@nestjs/common';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { EntityId } from '@shared/domain';\n\n@Injectable()\nexport class ParseObjectIdPipe implements PipeTransform {\n\ttransform(value: string): string {\n\t\tconst validObjectId = ObjectId.isValid(value);\n\n\t\tif (!validObjectId) {\n\t\t\tthrow new BadRequestException('Invalid ObjectId');\n\t\t}\n\n\t\treturn value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlainTextMailContent.html":{"url":"interfaces/PlainTextMailContent.html","title":"interface - PlainTextMailContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlainTextMailContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailContent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            htmlContent\n                                        \n                                \n                                \n                                        \n                                            plainTextContent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        htmlContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        htmlContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plainTextContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        plainTextContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResolvedUser.html":{"url":"classes/ResolvedUser.html","title":"class - ResolvedUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResolvedUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IResolvedUser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                permissions\n                            \n                            \n                                roles\n                            \n                            \n                                schoolId\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        schoolId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IResolvedUser, IRole } from '@shared/domain';\n\nexport type Role = IRole;\n\nexport class ResolvedUser implements IResolvedUser {\n\t@ApiProperty()\n\tfirstName: string;\n\n\t@ApiProperty()\n\tlastName: string;\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\troles: Role[];\n\n\t@ApiProperty()\n\tpermissions: string[];\n\n\t@ApiProperty()\n\tschoolId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResolvedUserMapper.html":{"url":"classes/ResolvedUserMapper.html","title":"class - ResolvedUserMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResolvedUserMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/mapper/ResolvedUser.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(user: User, permissions: string[], roles: Role[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/mapper/ResolvedUser.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                                \n                                    roles\n                                    \n                                                Role[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ResolvedUser\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User, Role } from '@shared/domain';\nimport { ResolvedUser } from '../controller/dto';\n\nexport class ResolvedUserMapper {\n\tstatic mapToResponse(user: User, permissions: string[] = [], roles: Role[] = []): ResolvedUser {\n\t\tconst dto = new ResolvedUser();\n\t\tdto.id = user.id;\n\t\tdto.firstName = user.firstName || '';\n\t\tdto.lastName = user.lastName || '';\n\t\tdto.createdAt = user.createdAt;\n\t\tdto.updatedAt = user.updatedAt;\n\t\tdto.schoolId = user.school.toString();\n\t\tdto.roles = roles.map((role) => ({ name: role.name, id: role.id }));\n\n\t\tdto.permissions = permissions;\n\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/role.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                permissions\n                            \n                            \n                                roles\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: IRoleProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/role.entity.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        IRoleProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()@Index({name: 'primaryRoleSearchOperation'})@Unique()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/role.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/role.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('Role')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/role.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, Unique, Index, ManyToMany, Collection } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface IRoleProperties {\n\tpermissions?: string[];\n\troles?: Role[];\n\tname: string;\n}\n\n@Entity({ tableName: 'roles' })\nexport class Role extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'primaryRoleSearchOperation' })\n\t@Unique()\n\tname: string;\n\n\t// @Enum({ items: ['a', 'b', 'c'] }) in array with no permission is valid => validator function\n\t@Property()\n\tpermissions: string[] = [];\n\t// TODO: enum\n\n\t// @ManyToMany('Role', 'roles')\n\t// roles = new Collection(this);\n\n\t// @ManyToMany({ fieldName: 'roles', type: Role })\n\t// roles = new Collection(this);\n\n\t@ManyToMany('Role')\n\troles = new Collection(this);\n\n\tconstructor(props: IRoleProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tif (props.permissions) this.permissions = props.permissions;\n\t\tif (props.roles) this.roles.set(props.roles);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleRepo.html":{"url":"injectables/RoleRepo.html","title":"injectable - RoleRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RoleRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/repo/role.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByName\n                            \n                            \n                                    Async\n                                resolvePermissionsFromSubRolesById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/repo/role.repo.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/role.repo.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/role.repo.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        resolvePermissionsFromSubRolesById\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolvePermissionsFromSubRolesById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/role.repo.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cache\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in apps/server/src/modules/user/repo/role.repo.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId, Role } from '@shared/domain';\n\n@Injectable()\nexport class RoleRepo {\n\tcache: 60000;\n\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findByName(name: string): Promise {\n\t\tconst role = await this.em.findOneOrFail(Role, { name }, { cache: this.cache });\n\t\treturn role;\n\t}\n\n\tasync findById(id: EntityId): Promise {\n\t\tconst role = await this.em.findOneOrFail(Role, { id }, { cache: this.cache });\n\t\treturn role;\n\t}\n\n\tasync resolvePermissionsFromSubRolesById(id: EntityId): Promise {\n\t\tconst role = await this.findById(id);\n\t\tlet { permissions } = role;\n\n\t\tfor (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleUC.html":{"url":"injectables/RoleUC.html","title":"injectable - RoleUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RoleUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/uc/role.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                resolvePermissionsByIdList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleRepo: RoleRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/uc/role.uc.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleRepo\n                                                  \n                                                        \n                                                                        RoleRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        resolvePermissionsByIdList\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolvePermissionsByIdList(ids: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/uc/role.uc.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, IPermissionsAndRoles } from '@shared/domain';\nimport { RoleRepo } from '../repo';\n\n@Injectable()\nexport class RoleUC {\n\tconstructor(private readonly roleRepo: RoleRepo) {}\n\n\tasync resolvePermissionsByIdList(ids: EntityId[]): Promise {\n\t\tconst roles = await Promise.all(ids.map((id) => this.roleRepo.resolvePermissionsFromSubRolesById(id)));\n\n\t\tlet permissions: string[] = [];\n\t\troles.forEach((role) => {\n\t\t\tpermissions = [...permissions, ...role.permissions];\n\t\t});\n\t\tpermissions = [...new Set(permissions)];\n\n\t\treturn { roles, permissions };\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/School.html":{"url":"classes/School.html","title":"class - School","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  School\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/school.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/school.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/school.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from './base.entity';\n\n@Entity({ tableName: 'schools' })\nexport class School extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoMapper.html":{"url":"classes/SchoolInfoMapper.html","title":"class - SchoolInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/school-info.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(schoolInfo: School)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/school-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    schoolInfo\n                                    \n                                                School\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SchoolInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { School } from '@shared/domain';\nimport { SchoolInfoResponse } from '../controller/dto';\n\nexport class SchoolInfoMapper {\n\tstatic mapToResponse(schoolInfo: School): SchoolInfoResponse {\n\t\tconst dto = new SchoolInfoResponse();\n\t\tdto.id = schoolInfo.id;\n\t\tdto.name = schoolInfo.name;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoResponse.html":{"url":"classes/SchoolInfoResponse.html","title":"class - SchoolInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/school-info.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the School entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the School entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class SchoolInfoResponse {\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the School entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The name of the School entity',\n\t})\n\tname: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolNews.html":{"url":"classes/SchoolNews.html","title":"class - SchoolNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/news.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('School')\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:98\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:35\n\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'creatorId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:61\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:39\n\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:42\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:66\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('School', {fieldName: 'schoolId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:58\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:45\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:48\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:55\n\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:31\n\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'updaterId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:64\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModel, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { School } from './school.entity';\nimport type { Team } from './team.entity';\nimport type { User } from './user.entity';\nimport { NewsTarget, NewsTargetModel } from '../types/news.types';\nimport { EntityId } from '../types';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId | School;\n\tcreator: EntityId | User;\n\ttarget: EntityId | NewsTarget;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: User;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTarget;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToOne('User', { fieldName: 'creatorId' })\n\tcreator!: User;\n\n\t@ManyToOne('User', { fieldName: 'updaterId' })\n\tupdater?: User;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, updater: props.updater, target: props.target });\n\t\tthis.externalId = props.externalId;\n\t\tthis.source = props.source;\n\t\tthis.sourceDescription = props.sourceDescription;\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne('School')\n\ttarget: School;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne('Course')\n\ttarget: Course;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne('Team')\n\ttarget: Team;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Scope.html":{"url":"classes/Scope.html","title":"class - Scope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Scope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/scope.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addQuery\n                            \n                            \n                                buildAndAddOrQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    query\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/repo/scope.ts:57\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/scope.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildAndAddOrQuery\n                        \n                    \n                \n            \n            \n                \nbuildAndAddOrQuery(arrayOfObjects: TT[], selectedKey: string, targetKey: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/scope.ts:71\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        TT\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arrayOfObjects\n                                    \n                                            TT[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selectedKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        query\n                    \n                \n\n                \n                    \n                        getquery()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/repo/scope.ts:59\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EmptyResultQuery } from './query/empty-result.query';\n\ntype EmptyResultQueryType = typeof EmptyResultQuery;\ntype QueryObject = Record>;\ntype OrQuery = { $or: QueryObject[] };\n\nexport function isDefined(input: T): boolean {\n\treturn input !== null && input !== undefined;\n}\n\nexport function isDefinedQuery(input: T): boolean {\n\treturn isDefined(input) && typeof input === 'object' && Object.keys(input).length > 0;\n}\n\n// TODO: EmptyResultQuery only include _id maybe undefined is better in this case\nexport function useQueryIfValueIsDefined(testedDefinedvalue: TT, query: ST): ST | EmptyResultQueryType {\n\tlet result: ST | EmptyResultQueryType = query;\n\n\tif (!isDefined(testedDefinedvalue)) {\n\t\tresult = EmptyResultQuery;\n\t}\n\n\tif (!isDefinedQuery(query)) {\n\t\tresult = EmptyResultQuery;\n\t}\n\n\treturn result;\n}\n\nexport function forceArray(input: Array): Array {\n\treturn Array.isArray(input) ? input : [];\n}\n\nfunction isDefinedObjectValue(object: T, key: string): boolean {\n\treturn isDefined(object) && isDefined(key) && isDefined(object[key]);\n}\n\nexport function createOrQueryFromList(arrayOfObjects: Array, selectedKey: string, targetKey: string): OrQuery {\n\tconst reducer = (accumulator: QueryObject[], currentValue: T) => {\n\t\tif (isDefinedObjectValue(currentValue, selectedKey)) {\n\t\t\tconst value = currentValue[selectedKey] as Partial;\n\t\t\tconst queryElement = { [targetKey]: value };\n\t\t\taccumulator.push(queryElement);\n\t\t}\n\t\treturn accumulator;\n\t};\n\n\tif (isDefined(selectedKey) && isDefined(targetKey)) {\n\t\tconst arrayOfQuerys = forceArray(arrayOfObjects).reduce(reducer, []);\n\t\treturn { $or: arrayOfQuerys };\n\t}\n\treturn { $or: [] };\n}\n\nexport class Scope {\n\tprivate _queries: FilterQuery[] = [];\n\n\tget query(): FilterQuery {\n\t\tif (this._queries.length === 0) {\n\t\t\treturn EmptyResultQuery as FilterQuery;\n\t\t}\n\t\tconst query = this._queries.length > 1 ? { $and: this._queries } : this._queries[0];\n\t\treturn query as FilterQuery;\n\t}\n\n\taddQuery(query: FilterQuery | EmptyResultQueryType): void {\n\t\tthis._queries.push(query);\n\t}\n\n\tbuildAndAddOrQuery(arrayOfObjects: TT[], selectedKey: string, targetKey: string): void {\n\t\tif (arrayOfObjects.length > 0) {\n\t\t\tconst orQuery = createOrQueryFromList(arrayOfObjects, selectedKey, targetKey) as FilterQuery;\n\t\t\tthis.addQuery(orQuery);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServerConsole.html":{"url":"classes/ServerConsole.html","title":"class - ServerConsole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServerConsole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/console/server.console.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                            \n                                getInOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(consoleWriter: ConsoleWriter)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/console/server.console.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        consoleWriter\n                                                  \n                                                        \n                                                                        ConsoleWriter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'test', description: 'sample test output'})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/console/server.console.ts:11\n                \n            \n\n\n            \n                \n                    test method for console output\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInOut\n                        \n                    \n                \n            \n            \n                \ngetInOut(whatever: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'out ', description: 'return input args'})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/console/server.console.ts:17\n                \n            \n\n\n            \n                \n                    test method for console input\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    whatever\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Command, Console } from 'nestjs-console';\nimport { ConsoleWriter } from './console-writer/console-writer.service';\n\n@Console({ command: 'server', description: 'sample server console' })\nexport class ServerConsole {\n\tconstructor(private consoleWriter: ConsoleWriter) {}\n\n\t/** test method for console output */\n\t@Command({ command: 'test', description: 'sample test output' })\n\tgetHello(): void {\n\t\tthis.consoleWriter.info('Schulcloud Server API');\n\t}\n\n\t/** test method for console input */\n\t@Command({ command: 'out ', description: 'return input args' })\n\tgetInOut(whatever: string): void {\n\t\tthis.consoleWriter.info(`input was: ${whatever}`);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServerConsoleModule.html":{"url":"modules/ServerConsoleModule.html","title":"module - ServerConsoleModule","body":"\n                   \n\n\n\n\n    Modules\n    ServerConsoleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ServerConsoleModule\n\n\n\ncluster_ServerConsoleModule_imports\n\n\n\ncluster_ServerConsoleModule_providers\n\n\n\n\nServerModule\n\nServerModule\n\n\n\nServerConsoleModule\n\nServerConsoleModule\n\nServerConsoleModule -->\n\nServerModule->ServerConsoleModule\n\n\n\n\n\nConsoleWriter\n\nConsoleWriter\n\nServerConsoleModule -->\n\nConsoleWriter->ServerConsoleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/console/server-console.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ConsoleWriter\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ServerModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConsoleModule } from 'nestjs-console';\nimport { ServerModule } from '@src/server.module';\nimport { ServerConsole } from './server.console';\nimport { ConsoleWriter } from './console-writer/console-writer.service';\n\n@Module({\n\timports: [ServerModule, ConsoleModule],\n\tproviders: [\n\t\tConsoleWriter,\n\t\t/** add console services as providers */\n\t\tServerConsole,\n\t],\n})\nexport class ServerConsoleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ServerController.html":{"url":"controllers/ServerController.html","title":"controller - ServerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ServerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/server.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/server.controller.ts:7\n                \n            \n\n\n            \n                \n                    default route to test public access\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\n\n@Controller()\nexport class ServerController {\n\t/** default route to test public access */\n\t@Get()\n\tgetHello(): string {\n\t\treturn 'Schulcloud Server API';\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServerModule.html":{"url":"modules/ServerModule.html","title":"module - ServerModule","body":"\n                   \n\n\n\n\n    Modules\n    ServerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\n\n\nLearnroomModule\n\nLearnroomModule\n\nServerModule -->\n\nLearnroomModule->ServerModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nServerModule -->\n\nMailModule->ServerModule\n\n\n\n\n\nNewsModule\n\nNewsModule\n\nServerModule -->\n\nNewsModule->ServerModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nServerModule -->\n\nUserModule->ServerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/server.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            ServerController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            LearnroomModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            NewsModule\n                        \n                        \n                            TaskModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, NotFoundException } from '@nestjs/common';\nimport { MikroOrmModule } from '@mikro-orm/nestjs';\nimport { Dictionary, IPrimaryKey } from '@mikro-orm/core';\nimport { Configuration } from '@hpi-schul-cloud/commons';\nimport { ALL_ENTITIES } from '@shared/domain';\nimport { AuthModule } from './modules/authentication/auth.module';\nimport { ServerController } from './server.controller';\nimport { DB_URL, DB_USERNAME, DB_PASSWORD } from './config';\n\nimport { CoreModule } from './core/core.module';\nimport { TaskModule } from './modules/task/task.module';\nimport { UserModule } from './modules/user/user.module';\nimport { NewsModule } from './modules/news/news.module';\nimport { MailModule } from './modules/mail/mail.module';\nimport { LearnroomModule } from './modules/learnroom/learnroom.module';\n\n@Module({\n\timports: [\n\t\tAuthModule,\n\t\tTaskModule,\n\t\tNewsModule,\n\t\tUserModule,\n\t\tLearnroomModule,\n\t\tMailModule.forRoot({\n\t\t\turi: Configuration.get('RABBITMQ_URI') as string,\n\t\t\texchange: Configuration.get('MAIL_SEND_EXCHANGE') as string,\n\t\t\troutingKey: Configuration.get('MAIL_SEND_ROUTING_KEY') as string,\n\t\t}),\n\n\t\tMikroOrmModule.forRoot({\n\t\t\ttype: 'mongo',\n\t\t\t// TODO add mongoose options as mongo options (see database.js)\n\t\t\tclientUrl: DB_URL,\n\t\t\tpassword: DB_PASSWORD,\n\t\t\tuser: DB_USERNAME,\n\t\t\tentities: ALL_ENTITIES,\n\t\t\tfindOneOrFailHandler: (entityName: string, where: Dictionary | IPrimaryKey) => {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t\treturn new NotFoundException(`The requested ${entityName}: ${where} has not been found.`);\n\t\t\t},\n\t\t\t// debug: true, // use it for locally debugging of querys\n\t\t}),\n\t\tCoreModule,\n\t],\n\tcontrollers: [ServerController],\n})\nexport class ServerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Submission.html":{"url":"classes/Submission.html","title":"class - Submission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Submission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/submission.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                comment\n                            \n                            \n                                    Optional\n                                courseGroup\n                            \n                            \n                                grade\n                            \n                            \n                                gradeComment\n                            \n                            \n                                gradeFiles\n                            \n                            \n                                student\n                            \n                            \n                                studentFiles\n                            \n                            \n                                task\n                            \n                            \n                                teamMembers\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isGraded\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ISubmissionProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ISubmissionProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        courseGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CourseGroup\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('CourseGroup', {fieldName: 'courseGroupId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        grade\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gradeComment\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gradeFiles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('File', undefined, {fieldName: 'gradeFileIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        student\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'studentId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentFiles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('File', undefined, {fieldName: 'fileIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Task', {fieldName: 'homeworkId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teamMembers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('User', undefined, {fieldName: 'teamMembers'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isGraded\n                        \n                    \n                \n            \n            \n                \nisGraded()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/submission.entity.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Collection, Property, ManyToMany } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { CourseGroup } from './coursegroup.entity';\nimport type { User } from './user.entity';\nimport type { File } from './file.entity';\nimport type { Task } from './task.entity';\n\ninterface ISubmissionProperties {\n\ttask: Task;\n\tstudent: User;\n\tcourseGroup?: CourseGroup[];\n\tteamMembers?: User[];\n\tcomment: string;\n\tstudentFiles?: File[];\n\tgrade?: number;\n\tgradeComment?: string;\n\tgradeFiles?: File[];\n}\n\n@Entity({ tableName: 'submissions' })\nexport class Submission extends BaseEntityWithTimestamps {\n\t@ManyToOne('Task', { fieldName: 'homeworkId' })\n\ttask: Task;\n\n\t@ManyToOne('User', { fieldName: 'studentId' })\n\tstudent: User;\n\n\t@ManyToOne('CourseGroup', { fieldName: 'courseGroupId' })\n\tcourseGroup?: CourseGroup;\n\n\t@ManyToMany('User', undefined, { fieldName: 'teamMembers' })\n\tteamMembers = new Collection(this);\n\n\t/* ***** student uploads ***** */\n\t@Property()\n\tcomment: string | null;\n\n\t@ManyToMany('File', undefined, { fieldName: 'fileIds' })\n\tstudentFiles = new Collection(this);\n\n\t/* ***** teacher uploads ***** */\n\t@Property()\n\tgrade: number | null;\n\n\t@Property()\n\tgradeComment: string | null;\n\n\t@ManyToMany('File', undefined, { fieldName: 'gradeFileIds' })\n\tgradeFiles = new Collection(this);\n\n\tisGraded(): boolean {\n\t\tconst isGraded =\n\t\t\t(typeof this.grade === 'number' && this.grade >= 0) ||\n\t\t\t(typeof this.gradeComment === 'string' && this.gradeComment.length > 0) ||\n\t\t\t(this.gradeFiles !== undefined && this.gradeFiles.length > 0);\n\t\treturn isGraded;\n\t}\n\n\tconstructor(props: ISubmissionProperties) {\n\t\tsuper();\n\t\tthis.student = props.student;\n\t\tthis.comment = props.comment;\n\t\tthis.task = props.task;\n\n\t\tthis.grade = props.grade || null;\n\t\tthis.gradeComment = props.gradeComment || null;\n\n\t\tconst { courseGroup, teamMembers, studentFiles, gradeFiles } = props;\n\t\tObject.assign(this, { courseGroup, teamMembers, studentFiles, gradeFiles });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubmissionRepo.html":{"url":"injectables/SubmissionRepo.html","title":"injectable - SubmissionRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SubmissionRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/repo/submission.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                byUserIdQuery\n                            \n                            \n                                    Async\n                                findAllByTaskIds\n                            \n                            \n                                    Async\n                                findAllByUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/repo/submission.repo.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        byUserIdQuery\n                        \n                    \n                \n            \n            \n                \n                    \n                    byUserIdQuery(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/submission.repo.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByTaskIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByTaskIds(taskIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/submission.repo.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByUserId(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/submission.repo.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\n\nimport { Counted, EntityId, CourseGroup, Submission } from '@shared/domain';\n\n// TODO: add scope helper\n\n@Injectable()\nexport class SubmissionRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findAllByTaskIds(taskIds: EntityId[]): Promise> {\n\t\tconst [submissions, count] = await this.em.findAndCount(Submission, {\n\t\t\ttask: { $in: taskIds },\n\t\t});\n\n\t\treturn [submissions, count];\n\t}\n\n\tasync findAllByUserId(userId: EntityId): Promise> {\n\t\tconst result = await this.em.findAndCount(Submission, await this.byUserIdQuery(userId));\n\t\treturn result;\n\t}\n\n\tprivate async byUserIdQuery(userId: EntityId): Promise> {\n\t\tconst courseGroupsOfUser = await this.em.find(CourseGroup, { students: userId });\n\t\tconst query = { $or: [{ student: userId }, { teamMembers: userId }, { courseGroup: { $in: courseGroupsOfUser } }] };\n\t\treturn query;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TargetInfoMapper.html":{"url":"classes/TargetInfoMapper.html","title":"class - TargetInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TargetInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/target-info.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(target: NewsTarget)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/target-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                NewsTarget\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TargetInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NewsTarget } from '@shared/domain/types/news.types';\nimport { TargetInfoResponse } from '../controller/dto/target-info.response';\n\nexport class TargetInfoMapper {\n\tstatic mapToResponse(target: NewsTarget): TargetInfoResponse {\n\t\tconst dto = new TargetInfoResponse();\n\t\tdto.id = target.id;\n\t\tdto.name = target.name;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TargetInfoResponse.html":{"url":"classes/TargetInfoResponse.html","title":"class - TargetInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TargetInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/target-info.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the Target entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/target-info.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the Target entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/target-info.response.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class TargetInfoResponse {\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the Target entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The name of the Target entity',\n\t})\n\tname: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Task.html":{"url":"classes/Task.html","title":"class - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/task.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                dueDate\n                            \n                            \n                                    Optional\n                                lesson\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                parent\n                            \n                            \n                                private\n                            \n                            \n                                submissions\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ITaskProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ITaskProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        dueDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lesson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Lesson\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Lesson', {fieldName: 'lessonId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        parent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Course', {fieldName: 'courseId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        private\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submissions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany('Submission', 'task')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Collection, Entity, ManyToOne, OneToMany, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport { EntityId } from '../types';\nimport type { Course } from './course.entity';\nimport type { Lesson } from './lesson.entity';\nimport type { Submission } from './submission.entity';\n\ninterface ITaskProperties {\n\tname: string;\n\tdueDate?: Date;\n\tprivate?: boolean;\n\tparent?: Course;\n\tlesson?: Lesson;\n\tsubmissions?: Submission[];\n}\n\nexport interface IParentDescriptionsProperties {\n\tid: EntityId;\n\tname: string;\n\tcolor: string;\n\tdescription?: string;\n}\n\nexport interface ITaskParent {\n\tid: EntityId;\n\n\thasWritePermission(userId: EntityId): boolean;\n\tgetDescriptions(): IParentDescriptionsProperties;\n\tgetNumberOfStudents(): number;\n}\n\n@Entity({ tableName: 'homeworks' })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate = true;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tparent?: Course;\n\n\t@ManyToOne('Lesson', { fieldName: 'lessonId' })\n\tlesson?: Lesson; // In database exist also null, but it can not set.\n\n\t@OneToMany('Submission', 'task')\n\tsubmissions = new Collection(this);\n\n\tconstructor(props: ITaskProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.dueDate = props.dueDate;\n\t\tif (props.private !== undefined) this.private = props.private;\n\t\tthis.parent = props.parent;\n\t\tthis.lesson = props.lesson;\n\t\tthis.submissions.set(props.submissions || []);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskAuthorizationService.html":{"url":"injectables/TaskAuthorizationService.html","title":"injectable - TaskAuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskAuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/uc/task.authorization.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getPermittedCourses\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(courseRepo: CourseRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/uc/task.authorization.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseRepo\n                                                  \n                                                        \n                                                                        CourseRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedCourses\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedCourses(userId: EntityId, permission: TaskParentPermission)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.authorization.service.ts:17\n                \n            \n\n\n            \n                \n                    Important user group operations are only a temporary solution until we have established groups\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permission\n                                    \n                                                TaskParentPermission\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { CourseRepo } from '@src/repositories';\n\nexport enum TaskParentPermission {\n\tread,\n\twrite,\n}\n\n@Injectable()\nexport class TaskAuthorizationService {\n\tconstructor(private readonly courseRepo: CourseRepo) {}\n\n\t/**\n\t * Important user group operations are only a temporary solution until we have established groups\n\t */\n\tasync getPermittedCourses(userId: EntityId, permission: TaskParentPermission): Promise {\n\t\t// courseGroups are missing\n\t\t// lessons are missing -> only search for hidden: false,\n\t\tconst [permittedCourses] =\n\t\t\tpermission === TaskParentPermission.write\n\t\t\t\t? await this.courseRepo.findAllForTeacher(userId)\n\t\t\t\t: await this.courseRepo.findAllForStudent(userId);\n\n\t\tconst entityIds = permittedCourses.map((o) => o.id);\n\t\treturn entityIds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TaskController.html":{"url":"controllers/TaskController.html","title":"controller - TaskController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TaskController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/task.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tasks\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, paginationQuery: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/task/controller/task.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    paginationQuery\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiTags } from '@nestjs/swagger';\n\nimport { ICurrentUser } from '@shared/domain';\nimport { PaginationResponse, PaginationQuery } from '@shared/controller/';\nimport { Controller, Get, Query } from '@nestjs/common';\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\n\nimport { TaskUC } from '../uc/task.uc';\nimport { TaskResponse } from './dto';\nimport { TaskMapper } from '../mapper/task.mapper';\n\n@ApiTags('Task')\n@Authenticate('jwt')\n@Controller('tasks')\nexport class TaskController {\n\tconstructor(private readonly taskUc: TaskUC) {}\n\n\t@Get()\n\tasync findAll(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() paginationQuery: PaginationQuery\n\t): Promise> {\n\t\tconst [tasksWithStatus, total] = await this.taskUc.findAll(currentUser, paginationQuery);\n\t\tconst taskresponses = tasksWithStatus.map((taskWithStatus) => {\n\t\t\treturn TaskMapper.mapToResponse(taskWithStatus);\n\t\t});\n\t\tconst { skip, limit } = paginationQuery;\n\t\tconst result = new PaginationResponse(taskresponses, total, skip, limit);\n\t\treturn result;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskMapper.html":{"url":"classes/TaskMapper.html","title":"class - TaskMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/mapper/task.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(taskWithStatus: TaskWithStatusVo)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/mapper/task.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskWithStatus\n                                    \n                                                TaskWithStatusVo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TaskWithStatusVo } from '@shared/domain';\nimport { TaskResponse } from '../controller/dto';\n\nexport class TaskMapper {\n\tstatic mapToResponse(taskWithStatus: TaskWithStatusVo): TaskResponse {\n\t\tconst { task, status } = taskWithStatus;\n\t\tconst dto = new TaskResponse();\n\n\t\tdto.id = task.id;\n\t\tdto.name = task.name;\n\t\tdto.duedate = task.dueDate;\n\t\tdto.createdAt = task.createdAt;\n\t\tdto.updatedAt = task.updatedAt;\n\t\tdto.status = {\n\t\t\tsubmitted: status.submitted,\n\t\t\tmaxSubmissions: status.maxSubmissions,\n\t\t\tgraded: status.graded,\n\t\t};\n\n\t\tif (task.parent !== undefined) {\n\t\t\tconst parentData = task.parent.getDescriptions();\n\t\t\tdto.courseName = parentData.name;\n\t\t\tdto.displayColor = parentData.color;\n\t\t}\n\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskModule.html":{"url":"modules/TaskModule.html","title":"module - TaskModule","body":"\n                   \n\n\n\n\n    Modules\n    TaskModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nCourseRepo\n\nCourseRepo\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nCourseRepo->TaskModule\n\n\n\n\n\nTaskAuthorizationService\n\nTaskAuthorizationService\n\nTaskModule -->\n\nTaskAuthorizationService->TaskModule\n\n\n\n\n\nTaskRepo\n\nTaskRepo\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/task/task.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CourseRepo\n                        \n                        \n                            TaskAuthorizationService\n                        \n                        \n                            TaskRepo\n                        \n                        \n                            TaskUC\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TaskController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { CourseRepo } from '@src/repositories';\n\nimport { TaskController } from './controller/task.controller';\nimport { TaskUC } from './uc';\nimport { TaskRepo } from './repo';\nimport { TaskAuthorizationService } from './uc/task.authorization.service';\n\n@Module({\n\timports: [],\n\tcontrollers: [TaskController],\n\tproviders: [TaskUC, TaskRepo, TaskAuthorizationService, CourseRepo],\n})\nexport class TaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskRepo.html":{"url":"injectables/TaskRepo.html","title":"injectable - TaskRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/repo/task.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAllCurrent\n                            \n                            \n                                    Private\n                                    Async\n                                findTasksAndCount\n                            \n                            \n                                    Private\n                                    Async\n                                findVisibleLessons\n                            \n                            \n                                    Private\n                                getDefaultMaxDueDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/repo/task.repo.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(parentIds: EntityId[], options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:20\n                \n            \n\n\n            \n                \n                    Find all tasks by their parents.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    parentIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ids of parent entities\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        pagination, sorting\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllCurrent\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllCurrent(parentIds: EntityId[], options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:39\n                \n            \n\n\n            \n                \n                    Find all currently active tasks by their parent ids.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    parentIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ids of parent entities\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        pagination, sorting\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findTasksAndCount\n                        \n                    \n                \n            \n            \n                \n                    \n                    findTasksAndCount(query: FilterQuery, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findVisibleLessons\n                        \n                    \n                \n            \n            \n                \n                    \n                    findVisibleLessons(parentIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parentIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getDefaultMaxDueDate\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultMaxDueDate()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Date\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityManager, FilterQuery, QueryOrderMap } from '@mikro-orm/core';\n\nimport { EntityId, IFindOptions, Lesson, Task } from '@shared/domain';\nimport { Counted } from '@shared/domain/types';\n\nimport { TaskScope } from './task-scope';\n\n@Injectable()\nexport class TaskRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\t/**\n\t * Find all tasks by their parents.\n\t *\n\t * @param parentIds ids of parent entities\n\t * @param options pagination, sorting\n\t * @returns\n\t */\n\tasync findAll(parentIds: EntityId[], options?: IFindOptions): Promise> {\n\t\tconst visibleLessons = await this.findVisibleLessons(parentIds);\n\n\t\tconst scope = new TaskScope();\n\t\tscope.byParentIds(parentIds);\n\t\tscope.byPublic();\n\t\tscope.byLessonsOrNone(visibleLessons.map((o) => o.id));\n\n\t\tconst countedTaskList = await this.findTasksAndCount(scope.query, options);\n\t\treturn countedTaskList;\n\t}\n\n\t/**\n\t * Find all currently active tasks by their parent ids.\n\t *\n\t * @param parentIds ids of parent entities\n\t * @param options pagination, sorting\n\t * @returns\n\t */\n\tasync findAllCurrent(parentIds: EntityId[], options?: IFindOptions): Promise> {\n\t\tconst visibleLessons = await this.findVisibleLessons(parentIds);\n\t\tconst dueDate = this.getDefaultMaxDueDate();\n\n\t\tconst scope = new TaskScope();\n\t\tscope.byParentIds(parentIds);\n\t\tscope.byPublic();\n\t\tscope.byLessonsOrNone(visibleLessons.map((o) => o.id));\n\t\tscope.afterDueDateOrNone(dueDate);\n\n\t\tconst countedTaskList = await this.findTasksAndCount(scope.query, options);\n\t\treturn countedTaskList;\n\t}\n\n\tprivate async findTasksAndCount(query: FilterQuery, options?: IFindOptions): Promise> {\n\t\tconst { pagination, order } = options || {};\n\t\tconst [taskEntities, count] = await this.em.findAndCount(Task, query, {\n\t\t\toffset: pagination?.skip,\n\t\t\tlimit: pagination?.limit,\n\t\t\torderBy: order as QueryOrderMap,\n\t\t});\n\t\tawait this.em.populate(taskEntities, ['parent', 'lesson', 'submissions']);\n\t\treturn [taskEntities, count];\n\t}\n\n\t// TODO move to lesson repo\n\tprivate async findVisibleLessons(parentIds: EntityId[]): Promise {\n\t\tconst lessons = await this.em.find(Lesson, {\n\t\t\tcourse: { $in: parentIds },\n\t\t\thidden: false,\n\t\t});\n\t\treturn lessons;\n\t}\n\n\tprivate getDefaultMaxDueDate(): Date {\n\t\t// TODO: date sounds like domain logic if this go out, after it student and teacher has only different order logic\n\t\t// that also sound like it should manage over scope helper in uc.\n\t\tconst oneWeekAgo = new Date();\n\t\toneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\t\treturn oneWeekAgo;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskResponse.html":{"url":"classes/TaskResponse.html","title":"class - TaskResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/dto/task.response.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for returning a task document via api.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                courseName\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                displayColor\n                            \n                            \n                                    Optional\n                                duedate\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        courseName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        duedate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\n/**\n * DTO for returning a task document via api.\n */\nexport class TaskResponse {\n\t@ApiProperty()\n\tname: string;\n\n\t@ApiProperty()\n\tduedate?: Date;\n\n\t@ApiPropertyOptional()\n\tcourseName?: string;\n\n\t@ApiPropertyOptional()\n\tdisplayColor?: string;\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\tstatus: {\n\t\tsubmitted?: number;\n\t\tmaxSubmissions?: number;\n\t\tgraded?: number;\n\t};\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskScope.html":{"url":"classes/TaskScope.html","title":"class - TaskScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/repo/task-scope.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterDueDateOrNone\n                            \n                            \n                                byLessonsOrNone\n                            \n                            \n                                byParentIds\n                            \n                            \n                                byPublic\n                            \n                            \n                                addQuery\n                            \n                            \n                                buildAndAddOrQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:57\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterDueDateOrNone\n                        \n                    \n                \n            \n            \n                \nafterDueDateOrNone(dueDate: Date)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task-scope.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dueDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byLessonsOrNone\n                        \n                    \n                \n            \n            \n                \nbyLessonsOrNone(lessonIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task-scope.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lessonIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byParentIds\n                        \n                    \n                \n            \n            \n                \nbyParentIds(parentIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task-scope.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parentIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byPublic\n                        \n                    \n                \n            \n            \n                \nbyPublic()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task-scope.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         TaskScope\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:67\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildAndAddOrQuery\n                        \n                    \n                \n            \n            \n                \nbuildAndAddOrQuery(arrayOfObjects: TT[], selectedKey: string, targetKey: string)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:71\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        TT\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arrayOfObjects\n                                    \n                                            TT[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selectedKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityId, Task } from '@shared/domain';\nimport { Scope } from '@shared/repo';\n\nexport class TaskScope extends Scope {\n\tbyParentIds(parentIds: EntityId[]): TaskScope {\n\t\tthis.addQuery({ parent: { $in: parentIds } });\n\t\treturn this;\n\t}\n\n\tbyPublic(): TaskScope {\n\t\tthis.addQuery({ private: { $ne: true } });\n\t\treturn this;\n\t}\n\n\tbyLessonsOrNone(lessonIds: EntityId[]): TaskScope {\n\t\tthis.addQuery({ $or: [{ lesson: { $in: lessonIds } }, { lesson: null }] });\n\t\treturn this;\n\t}\n\n\tafterDueDateOrNone(dueDate: Date): TaskScope {\n\t\tthis.addQuery({ $or: [{ dueDate: { $gte: dueDate } }, { dueDate: null }] });\n\t\treturn this;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskUC.html":{"url":"injectables/TaskUC.html","title":"injectable - TaskUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/uc/task.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                computeTaskStatusForStudent\n                            \n                            \n                                    Private\n                                computeTaskStatusForTeacher\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Private\n                                    Async\n                                findAllForStudent\n                            \n                            \n                                    Private\n                                    Async\n                                findAllForTeacher\n                            \n                            \n                                    Private\n                                hasTaskDashboardPermission\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(taskRepo: TaskRepo, authorizationService: TaskAuthorizationService)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/uc/task.uc.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskRepo\n                                                  \n                                                        \n                                                                        TaskRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizationService\n                                                  \n                                                        \n                                                                        TaskAuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        computeTaskStatusForStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    computeTaskStatusForStudent(task: Task, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskWithStatusVo\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        computeTaskStatusForTeacher\n                        \n                    \n                \n            \n            \n                \n                    \n                    computeTaskStatusForTeacher(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskWithStatusVo\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findAllForStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForStudent(userId: EntityId, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findAllForTeacher\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForTeacher(userId: EntityId, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        hasTaskDashboardPermission\n                        \n                    \n                \n            \n            \n                \n                    \n                    hasTaskDashboardPermission(currentUser: ICurrentUser, permission: TaskDashBoardPermission)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permission\n                                    \n                                                TaskDashBoardPermission\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { EntityId, IPagination, Counted, ICurrentUser, SortOrder, Task, TaskWithStatusVo } from '@shared/domain';\n\nimport { TaskRepo } from '../repo';\nimport { TaskAuthorizationService, TaskParentPermission } from './task.authorization.service';\n\nexport enum TaskDashBoardPermission {\n\tteacherDashboard = 'TASK_DASHBOARD_TEACHER_VIEW_V3',\n\tstudentDashboard = 'TASK_DASHBOARD_VIEW_V3',\n}\n@Injectable()\nexport class TaskUC {\n\tconstructor(private readonly taskRepo: TaskRepo, private readonly authorizationService: TaskAuthorizationService) {}\n\n\t// TODO replace curentUser with userId. this requires that permissions are loaded inside the use case by authorization service\n\tasync findAll(currentUser: ICurrentUser, pagination: IPagination): Promise> {\n\t\tlet response: Counted;\n\n\t\tif (this.hasTaskDashboardPermission(currentUser, TaskDashBoardPermission.studentDashboard)) {\n\t\t\tresponse = await this.findAllForStudent(currentUser.userId, pagination);\n\t\t} else if (this.hasTaskDashboardPermission(currentUser, TaskDashBoardPermission.teacherDashboard)) {\n\t\t\tresponse = await this.findAllForTeacher(currentUser.userId, pagination);\n\t\t} else {\n\t\t\tthrow new UnauthorizedException();\n\t\t}\n\n\t\treturn response;\n\t}\n\n\tprivate async findAllForStudent(userId: EntityId, pagination: IPagination): Promise> {\n\t\tconst parentIds = await this.authorizationService.getPermittedCourses(userId, TaskParentPermission.read);\n\n\t\tconst [tasks, total] = await this.taskRepo.findAllCurrent(parentIds, {\n\t\t\tpagination,\n\t\t\torder: { dueDate: SortOrder.asc },\n\t\t});\n\n\t\tconst computedTasks = tasks.map((task) => this.computeTaskStatusForStudent(task, userId));\n\n\t\treturn [computedTasks, total];\n\t}\n\n\tprivate async findAllForTeacher(userId: EntityId, pagination: IPagination): Promise> {\n\t\tconst parentIds = await this.authorizationService.getPermittedCourses(userId, TaskParentPermission.write);\n\n\t\tconst [tasks, total] = await this.taskRepo.findAll(parentIds, {\n\t\t\tpagination,\n\t\t\torder: { createdAt: SortOrder.desc },\n\t\t});\n\n\t\tconst computedTasks = tasks.map((task) => this.computeTaskStatusForTeacher(task));\n\n\t\treturn [computedTasks, total];\n\t}\n\n\tprivate hasTaskDashboardPermission(currentUser: ICurrentUser, permission: TaskDashBoardPermission): boolean {\n\t\tconst hasPermission = currentUser.user.permissions.includes(permission);\n\t\treturn hasPermission;\n\t}\n\n\tprivate computeTaskStatusForStudent(task: Task, userId: EntityId): TaskWithStatusVo {\n\t\tconst studentSubmissions = task.submissions.getItems().filter((submission) => submission.student.id === userId);\n\n\t\tconst submitted = studentSubmissions.length > 0 ? 1 : 0;\n\t\tconst graded = studentSubmissions.filter((submission) => submission.isGraded()).length;\n\t\tconst maxSubmissions = 1;\n\n\t\treturn new TaskWithStatusVo(task, { submitted, maxSubmissions, graded });\n\t}\n\n\tprivate computeTaskStatusForTeacher(task: Task): TaskWithStatusVo {\n\t\tconst submittedStudentIds = task.submissions.getItems().map((submission) => submission.student.id);\n\n\t\t// unique by studentId\n\t\tconst submitted = [...new Set(submittedStudentIds)].length;\n\n\t\tconst gradedStudentIds = task.submissions\n\t\t\t.getItems()\n\t\t\t.filter((submission) => submission.isGraded())\n\t\t\t.map((submission) => submission.student.id);\n\n\t\t// unique by studentId\n\t\tconst graded = [...new Set(gradedStudentIds)].length;\n\n\t\tconst maxSubmissions = task.parent ? task.parent.getNumberOfStudents() : 0;\n\n\t\treturn new TaskWithStatusVo(task, { submitted, maxSubmissions, graded });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskWithStatusVo.html":{"url":"classes/TaskWithStatusVo.html","title":"class - TaskWithStatusVo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskWithStatusVo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/vo/task-with-status.vo.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                status\n                            \n                            \n                                task\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(task: Task, status: ITaskStatus)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/vo/task-with-status.vo.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        task\n                                                  \n                                                        \n                                                                        Task\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        ITaskStatus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ITaskStatus\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/vo/task-with-status.vo.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/vo/task-with-status.vo.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Task } from '../entity/task.entity';\n\ninterface ITaskStatus {\n\tsubmitted: number;\n\tmaxSubmissions: number;\n\tgraded: number;\n}\n\nexport class TaskWithStatusVo {\n\ttask!: Task;\n\n\tstatus!: ITaskStatus;\n\n\tconstructor(task: Task, status: ITaskStatus) {\n\t\tthis.task = task;\n\t\tthis.status = status;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Team.html":{"url":"classes/Team.html","title":"class - Team","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Team\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/team.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/team.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/team.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from './base.entity';\n\n@Entity({ tableName: 'teams' })\nexport class Team extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TeamNews.html":{"url":"classes/TeamNews.html","title":"class - TeamNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TeamNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/news.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Team\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Team')\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:110\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:35\n\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'creatorId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:61\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:39\n\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:42\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:66\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('School', {fieldName: 'schoolId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:58\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:45\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:48\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:55\n\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:31\n\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'updaterId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:64\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModel, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { School } from './school.entity';\nimport type { Team } from './team.entity';\nimport type { User } from './user.entity';\nimport { NewsTarget, NewsTargetModel } from '../types/news.types';\nimport { EntityId } from '../types';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId | School;\n\tcreator: EntityId | User;\n\ttarget: EntityId | NewsTarget;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: User;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTarget;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToOne('User', { fieldName: 'creatorId' })\n\tcreator!: User;\n\n\t@ManyToOne('User', { fieldName: 'updaterId' })\n\tupdater?: User;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, updater: props.updater, target: props.target });\n\t\tthis.externalId = props.externalId;\n\t\tthis.source = props.source;\n\t\tthis.sourceDescription = props.sourceDescription;\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne('School')\n\ttarget: School;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne('Course')\n\ttarget: Course;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne('Team')\n\ttarget: Team;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TeamNewsController.html":{"url":"controllers/TeamNewsController.html","title":"controller - TeamNewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TeamNewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/team-news.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                team\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllForTeam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForTeam\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForTeam(teamId: string, currentUser: ICurrentUser, scope: NewsFilterQuery, pagination: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':teamId/news')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/team-news.controller.ts:22\n                \n            \n\n\n            \n                \n                    Responds with news of a given team for a user.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, Query } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ICurrentUser } from '@shared/domain';\n\nimport { PaginationQuery, PaginationResponse, ParseObjectIdPipe } from '@shared/controller';\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\n\nimport { NewsMapper } from '../mapper/news.mapper';\nimport { NewsUc } from '../uc';\nimport { NewsFilterQuery, NewsResponse } from './dto';\n\n@ApiTags('News')\n@Authenticate('jwt')\n@Controller('team')\nexport class TeamNewsController {\n\tconstructor(private readonly newsUc: NewsUc) {}\n\n\t/**\n\t * Responds with news of a given team for a user.\n\t */\n\t@Get(':teamId/news')\n\tasync findAllForTeam(\n\t\t@Param('teamId', ParseObjectIdPipe) teamId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() scope: NewsFilterQuery,\n\t\t@Query() pagination: PaginationQuery\n\t): Promise> {\n\t\t// enforce filter by a given team, used in team tab\n\t\tscope.targetId = teamId;\n\t\tscope.targetModel = 'teams';\n\t\tconst [newsList, count] = await this.newsUc.findAllForUser(\n\t\t\tcurrentUser.userId,\n\t\t\tNewsMapper.mapNewsScopeToDomain(scope),\n\t\t\t{ pagination }\n\t\t);\n\t\tconst dtoList = newsList.map((news) => NewsMapper.mapToResponse(news));\n\t\tconst response = new PaginationResponse(dtoList, count);\n\t\treturn response;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeoutInterceptor.html":{"url":"injectables/TimeoutInterceptor.html","title":"injectable - TimeoutInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimeoutInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/timeout.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                This interceptor leaves the request execution after a given timeout in ms.\nThis will not stop the running services behind the controller.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _timeout\n                            \n                            \n                                    Protected\n                                    Static\n                                defaultTimeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    timeout\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _timeout\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Static\n                        defaultTimeout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : REQUEST_TIMEOUT\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        timeout\n                    \n                \n\n                \n                    \n                        gettimeout()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:29\n                                \n                            \n\n                \n                    \n                        settimeout(milliseconds: number)\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:33\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            milliseconds\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler, RequestTimeoutException } from '@nestjs/common';\nimport { Observable, throwError, TimeoutError } from 'rxjs';\nimport { catchError, timeout } from 'rxjs/operators';\nimport { REQUEST_TIMEOUT } from './constants';\n\n/**\n * This interceptor leaves the request execution after a given timeout in ms.\n * This will not stop the running services behind the controller.\n */\n@Injectable()\nexport class TimeoutInterceptor implements NestInterceptor {\n\tprotected static defaultTimeout = REQUEST_TIMEOUT;\n\n\tprivate _timeout?: number;\n\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\treturn next.handle().pipe(\n\t\t\ttimeout(this.timeout),\n\t\t\tcatchError((err) => {\n\t\t\t\tif (err instanceof TimeoutError) {\n\t\t\t\t\treturn throwError(new RequestTimeoutException());\n\t\t\t\t}\n\t\t\t\treturn throwError(err);\n\t\t\t})\n\t\t);\n\t}\n\n\tget timeout(): number {\n\t\treturn this._timeout || TimeoutInterceptor.defaultTimeout;\n\t}\n\n\tset timeout(milliseconds: number) {\n\t\tthis._timeout = milliseconds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateNewsParams.html":{"url":"classes/UpdateNewsParams.html","title":"class - UpdateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/update-news.params.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for Updating a news document.\nA PartialType is a halper which allows to extend an existing class by making all its properties optional.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                displayAt\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiPropertyOptional({description: 'Content of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDate()@ApiPropertyOptional({description: 'The point in time from when the News entity schould be displayed'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiPropertyOptional({description: 'Title of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsDate, IsOptional, IsString } from 'class-validator';\n\n/**\n * DTO for Updating a news document.\n * A PartialType is a halper which allows to extend an existing class by making all its properties optional.\n */\nexport class UpdateNewsParams {\n\t@IsOptional()\n\t@IsString()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@IsOptional()\n\t@IsString()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@IsOptional()\n\t@IsDate()\n\t@ApiPropertyOptional({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/user.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                            \n                                roles\n                            \n                            \n                                school\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: IUserProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        IUserProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()@Index({name: 'externalUserIdentifier'})@Unique()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({name: 'roleIdBasedSearches'})@ManyToMany('Role', undefined, {fieldName: 'roles'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({name: 'searchUserForSchool'})@ManyToOne('School', {fieldName: 'schoolId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Collection, Entity, ManyToMany, ManyToOne, Property, Index, Unique } from '@mikro-orm/core';\nimport type { Role } from './role.entity';\nimport type { School } from './school.entity';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface IUserProperties {\n\temail: string;\n\tfirstName?: string;\n\tlastName?: string;\n\tschool: School;\n\troles: Role[];\n}\n\n@Entity({ tableName: 'users' })\nexport class User extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'externalUserIdentifier' })\n\t@Unique()\n\temail: string;\n\n\t@Property()\n\tfirstName?: string;\n\n\t@Property()\n\tlastName?: string;\n\n\t@Index({ name: 'roleIdBasedSearches' })\n\t@ManyToMany('Role', undefined, { fieldName: 'roles' })\n\troles = new Collection(this);\n\n\t@Index({ name: 'searchUserForSchool' })\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\tconstructor(props: IUserProperties) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.email = props.email;\n\t\tthis.school = props.school;\n\t\tthis.roles.set(props.roles);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/controller/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                me\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        me\n                        \n                    \n                \n            \n            \n                \n                    \n                    me(currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('me')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/user/controller/user.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiTags } from '@nestjs/swagger';\n\nimport { Controller, Get } from '@nestjs/common';\nimport { ICurrentUser } from '@shared/domain';\n\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\nimport { UserUC } from '../uc';\nimport { ResolvedUser } from './dto/ResolvedUser.dto';\n\n@ApiTags('User')\n@Authenticate('jwt')\n@Controller('user')\nexport class UserController {\n\tconstructor(private readonly userUc: UserUC) {}\n\n\t@Get('me')\n\tasync me(@CurrentUser() currentUser: ICurrentUser): Promise {\n\t\treturn Promise.resolve(currentUser.user);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserFacade.html":{"url":"injectables/UserFacade.html","title":"injectable - UserFacade","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/user.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                resolveUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userUC: UserUC)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/user.facade.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userUC\n                                                  \n                                                        \n                                                                        UserUC\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        resolveUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolveUser(currentUser: ICurrentUser)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/user.facade.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ICurrentUser } from '@shared/domain';\n\nimport { UserUC } from './uc/user.uc';\nimport { ResolvedUser } from './controller/dto';\n\n@Injectable()\nexport class UserFacade {\n\tconstructor(private readonly userUC: UserUC) {}\n\n\tasync resolveUser(currentUser: ICurrentUser): Promise {\n\t\tconst resolvedUser = await this.userUC.getUserWithPermissions(currentUser);\n\t\treturn resolvedUser;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoMapper.html":{"url":"classes/UserInfoMapper.html","title":"class - UserInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/user-info.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(user: User)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/user-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '@shared/domain';\nimport { UserInfoResponse } from '../controller/dto';\n\nexport class UserInfoMapper {\n\tstatic mapToResponse(user: User): UserInfoResponse {\n\t\tconst dto = new UserInfoResponse();\n\t\tdto.id = user.id;\n\t\tdto.firstName = user.firstName;\n\t\tdto.lastName = user.lastName;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoResponse.html":{"url":"classes/UserInfoResponse.html","title":"class - UserInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/user-info.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'First name of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the User entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Last name of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class UserInfoResponse {\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the User entity',\n\t})\n\tid: string;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'First name of the user',\n\t})\n\tfirstName?: string;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'Last name of the user',\n\t})\n\tlastName?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_exports\n\n\n\n\nUserFacade \n\nUserFacade \n\n\n\nUserModule\n\nUserModule\n\nUserFacade  -->\n\nUserModule->UserFacade \n\n\n\n\n\nRoleRepo\n\nRoleRepo\n\nUserModule -->\n\nRoleRepo->UserModule\n\n\n\n\n\nRoleUC\n\nRoleUC\n\nUserModule -->\n\nRoleUC->UserModule\n\n\n\n\n\nUserFacade\n\nUserFacade\n\nUserModule -->\n\nUserFacade->UserModule\n\n\n\n\n\nUserRepo\n\nUserRepo\n\nUserModule -->\n\nUserRepo->UserModule\n\n\n\n\n\nUserUC\n\nUserUC\n\nUserModule -->\n\nUserUC->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoleRepo\n                        \n                        \n                            RoleUC\n                        \n                        \n                            UserFacade\n                        \n                        \n                            UserRepo\n                        \n                        \n                            UserUC\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserFacade\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserController } from './controller';\nimport { UserUC, RoleUC } from './uc';\nimport { RoleRepo, UserRepo } from './repo';\nimport { UserFacade } from './user.facade';\n\n@Module({\n\tcontrollers: [UserController],\n\tproviders: [RoleRepo, UserRepo, UserUC, RoleUC, UserFacade],\n\texports: [UserFacade],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRepo.html":{"url":"injectables/UserRepo.html","title":"injectable - UserRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/repo/user.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/repo/user.repo.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/user.repo.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId, User } from '@shared/domain';\n\n@Injectable()\nexport class UserRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findById(id: EntityId): Promise {\n\t\tconst user = await this.em.findOneOrFail(User, { id });\n\t\treturn user;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserUC.html":{"url":"injectables/UserUC.html","title":"injectable - UserUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/uc/user.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUserWithPermissions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepo: UserRepo, roleUC: RoleUC)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/uc/user.uc.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        UserRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleUC\n                                                  \n                                                        \n                                                                        RoleUC\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserWithPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserWithPermissions(currentUser: ICurrentUser)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/uc/user.uc.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ICurrentUser } from '@shared/domain';\nimport { ResolvedUserMapper } from '../mapper';\nimport { ResolvedUser } from '../controller/dto/ResolvedUser.dto';\nimport { RoleUC } from './role.uc';\nimport { UserRepo } from '../repo';\n\n@Injectable()\nexport class UserUC {\n\tconstructor(private readonly userRepo: UserRepo, private readonly roleUC: RoleUC) {}\n\n\tasync getUserWithPermissions(currentUser: ICurrentUser): Promise {\n\t\tconst [user, resolved] = await Promise.all([\n\t\t\tthis.userRepo.findById(currentUser.userId),\n\t\t\tthis.roleUC.resolvePermissionsByIdList(currentUser.roles),\n\t\t]);\n\n\t\tconst resolvedUser = ResolvedUserMapper.mapToResponse(user, resolved.permissions, resolved.roles);\n\t\treturn resolvedUser;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationError.html":{"url":"classes/ValidationError.html","title":"class - ValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/validation.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BusinessError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                details\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDetails\n                            \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, details?: Record)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/validation.error.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                    Record\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:12\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDetails\n                        \n                    \n                \n            \n            \n                \ngetDetails()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Record\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResponse\n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\nimport { BusinessError } from './business.error';\n\nexport class ValidationError extends BusinessError {\n\tconstructor(readonly message: string, details?: Record) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\ttype: 'VALIDATION_ERROR',\n\t\t\t\ttitle: 'Validation Error',\n\t\t\t\tdefaultMessage: message,\n\t\t\t},\n\t\t\tHttpStatus.BAD_REQUEST,\n\t\t\tdetails\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationErrorDetailResponse.html":{"url":"classes/ValidationErrorDetailResponse.html","title":"class - ValidationErrorDetailResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationErrorDetailResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/validation-error-detail.response.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(field: string, errors: string[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/validation-error-detail.response.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ValidationErrorDetailResponse {\n\tconstructor(readonly field: string, readonly errors: string[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ValidationModule.html":{"url":"modules/ValidationModule.html","title":"module - ValidationModule","body":"\n                   \n\n\n\n\n    Modules\n    ValidationModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/validation/validation.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_PIPE } from '@nestjs/core';\nimport { GlobalValidationPipe } from './pipe/global-validation.pipe';\n\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_PIPE,\n\t\t\tuseClass: GlobalValidationPipe,\n\t\t},\n\t],\n})\nexport class ValidationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\nAllowed Types of change: Added, Changed, Deprecated, Removed, Fixed, Security\n[Unreleased]\nAdded\n\nBC-343 - run unstable e2e tests on label run unstable tests\n\nChanged\n\nBC-237 - Clean up global entity registration\nBC-331 - BC-354 - rename ansible variables for OnePassword\n\nFixed\n[26.11.2] - 2021-09-29\nFixed\n\nBC-370 - fixed file directory creation\n\n[26.11.1] - 2021-09-29\nFixed\n\nBC-365 - fixed task overview pagination\n\n[26.11.0] - 2021-09-22\nChanged\n\nBC-274 Change Course Colors\nBC-213 - rewrite file deletion with deletion marker\nBC-68 - e2e run dependent on build image job\nBC-179 - refactor task and entity and relations\n\nAdded\n\nBC-121 add bucket and storage provider to file documents\nBC-164 - refactored the supportJWTservice and added roles information to its jwt data\nBC-279 - introduce console application interface to call providers via console command\nBC-9 add entity and repo for course dashboards\nBC-9 add a route to recieve dummy data for course dashboards\nBC-318 implement persistance for course dashboards\n\nFixed\n\nBC-232 prevent users from changing schoolyears\nBC-233 - when an LDAP system is removed from a school, the ldapschoolidentifier and lastLdapSync are removed as well\nmoved some changelog entries into their correct place\n\nRemoved\n\nBC-262 - remove S3 lifecycle configuration code\nBC-247 - remove timestamp from LDAP search Query for sync\n\n[26.10.3] - 2021-09-09\nFixed\n\nBC-267 - skip whitelist-check for api requests on /wopi\n\n[26.10.2] - 2021-09-03\nAdded\n\nBC-120 - add feature flag for S3 CORS\nBS-112 - insert missing attribute during school creation\n\n[26.10.1] - 2021-09-03\nFixed\n\nBC-187 - secures the system route\n\n[26.10.0] - 2021-09-03\nFixed\n\nremove broken systemid from seed data\nSC-9083 - expose env variables for school administration\nBC-44 - remove JWT_WHITELIST_ACCEPT_ALL feature flag\nBC-44 - integrate jwt whitelist check in nestjs jwt authentication\nBC-42 - cycle detection in role inheritance\nBC-64 - enable e2e test execution for push event on main branch\nBC-41 - adds feature flag for S3 storage lifecycle management (currently not supported by Strato Hidrive)\nBC-37 - BC-54 - reduce resource consumption for deployed server\nBC-81 - remove old Lern-Store\nBC-119 - remove malfunction S3 lifecycle migration\nBC-38 - BC-124 - Add ansible files for Bosscloud (default)\nBC-110 - fileStorage/security should only be called from within the cluster\n\nAdded\n\nBC-5 - Show completed tasks for students\n\nChanged\n\nRefactor nestjs task module and resort imports for course and coursegroup entities and repositories. Add testHelpers.\n\n[26.9.3] - 2021-09-10\nFixed\n\nBC-239 - fix date parsing for students birth date\n\n[26.9.2] - 2021-08-27\nChanged\n\nBC-137 - fix bug with display of Blue Bar\nBC-106 - exit maintenance & change school year for LDAP schools on Boss and NBC\n\n[26.9.1] - 2021-08-18\nChanged\n\nSC-9192 - enable cors for nestjs app routes\nSC-9130 - use whiltelisted filenames at the s3 file storage backend\n\n[26.9.0] - 2021-08-14\nChanged\n\nOPS-2491 - Change the hydra service url\nSC-9231 - add permissions to SuperHero to edit admin role\nSC-9269 - let eslint ensure no tests with .only exist anymore\nSC-9192 - mount feathers and nestjs apps under dedicated version paths and allow general path prefix for the whole server\n\nAdded\n\nadd inital learnroom module with support of course and coursegroups for preparing the next refactoring iteration in tasks module\nSC-9231 - add permissions to SuperHero to edit admin role\n\n[26.8.0] - 2021-08-10\n[26.7.1] - 2021-08-03\n\nSC-9233 - fix Lern-Store on THR to load also WLO content\n\n[26.7.0] - 2021-07-28\nAdded\n\nSC-9213 - Consider group submissions when deciding what open tasks a student has\nSC-9150 - add script to change school year\nSC-9211 - enable maildrop and mailcatcher for e2e tests (see docker-compose)\nSC-9177 - allow superheros to delete admins\n\nChanged\n\nSC-9219 - limited jest workers for not taking all workers within of a single github action\n\nFixed\n\nSC-9212 - fix changing classes via CSV import\nSC-9053 - fix sending registration link via checkbox for student/teacher creation\n\n[26.6.4] - 2021-07-23\nChanged\n\nmove S3 expiration migration to the end\n\n[26.6.3] - 2021-07-21\nFixed\n\nSC-9092 - add missing S3 key decryption in migration\n\n[26.6.2] - 2021-07-21\nChanged\n\nuse edusharing lernstore mode on production\n\n[26.6.1] - 2021-07-21\nChanged\n\nchange default lernstore mode to edusharing\n\n[26.6.0] - 2021-07-20\nAdded\n\nSC-9018; SC-9003 - created schoolsList public endpoint, and jwt secured /schools endpoint\nSC-9093 - make configured default language and timezone available in config service\nSC-9092 - delete S3 files after 7 days from user deletion\nSC-8959 - Add messenger to deletion concept\nSC-9157 - Add RabbitMQ connection to new mail service\nSC-9157 - Improve config handling for RabbitMQ\nSC-9213 - Consider group submissions when deciding what open tasks a student has\nOPS-2574 - Removeing autodeployed branches for developers if branch deleted\nOPS-2579 - Add Ansible task and templates for adding storage\n\nChanged\n\nSC-9190 - publish news target names\nSC-8887 - allow public access to consentVersion service\nSC-8448 - Not storing temporary Merlin links and fixed concurrency bug\nremove unnecessary timeout definitions from tests and avoid promise chains\nSC-6294 Restructure NestJS Sources: Testing, Core Module, Entities, Shared. See details in https://hpi-schul-cloud.github.io/schulcloud-server/\nexecute unit tests via github action instead of using travis\n\nFixed\n\nSC-9197 - Limiting the max workers for jest to 2 workers, if the default mechanism runs it's go up to infinity workers and if one die the test never stop\nSC-9202 - fix sending of registration link mails\n\n[26.5.0] - 2021-06-28\nAdded\n\nSC-9431 - add teacher view to task/open over permission TASK_DASHBOARD_VIEW_V3, solving permissions after authenticate and add v3/user/me route.\n\nChanged\n\nSC-6294 Restructure NestJS Sources: Testing, Core Module, Entities, Shared. See details in https://hpi-schul-cloud.github.io/schulcloud-server/\n\n[26.4.9] - 2021-06-29\nFixed\n\napi route forwarding\n\nRemoved\n\nSC-9159 removed news from feathers except remove team event, which already is replaced by v3/news\n\n[26.4.8] - 2021-06-29\nFixed\n\nroute forwarding\n\n[26.4.7] - 2021-06-22\nAdded\n\nSC-9148 - Add migration for change of school year on BRB\n\nFixed\n\nSC-9170 - let superhero delete other users\n\n[26.4.6] - 2021-06-24\nChanged\n\nOPS-2466 - changes build pipeline to github actions\n\n[26.4.5] - 2021-06-21\nAdded\n\nSC-9156 - Add maintenance mode for LDAP rewrite\n\n[26.4.4] - 2021-06-16\nChange\n\nrename permission TASK_DASHBOARD_VIEW_V3\n\n[26.4.3] - 2021-06-16\nChange\n\nSC-9139 - Add a check if user roles should be updated or not to the repo\n\n[26.4.2] - 2021-06-16\nFixed\n\nnpm run syncIndex work for not existing collections in the db\n\n[26.4.1] - 2021-06-15\nChange\n\nSC-9029 - Change place of the channel creation for RabbitMQ\n\n[26.4.0] - 2021-06-11\n\nSC-9004 - Sync env variables between backend and frontend\n\n[26.3.1] - 2021-06-14\nAdded\n\nSC-9134 - Add missing mongo indexes for LDAP Sync\n\n[26.3.0] - 2021-06-07\nChanged\n\nSC-8898 - parallelize LDAP sync using RabbitMQ\n\n[26.2.2] - 2021-06-04\nFixed\n\nFixed dependencies issue\n\n[26.2.1] - 2021-06-02\nAdded\n\nSC-9103 - add logging for syncIndexes script\n\n[26.2.0] - 2021-06-01\nAdded\n\nOPS-2418 - Change buildpipelines (Server, Client, Nuxt) to execute E2E tests according QF decision\nSC-8250 - add bulk deletion to user service v2\nSC-8341 - add tombstone school to tombstone user\nSC-8408 - added delete events by scope Id route\nSC-7937 - Allow adding multiple materials to lesson\nSC-7868 - Deletion concept for personal file connections\nSC-8873 - Add prioritization for Matrix messenger tasks\nSC-8982 - add inital service ressource messuring test setup\nOPS-1499 - Add feature to CI Pipeline and provide manual deployments of branches and automatic deploy of release to staging\nAdd run script for sync indexes based on existing and registered schemas.\nSC-9085 - add registration pin deletion for parent emails\nSC-9004 - Sync env variables between backend and frontend\nOPS-1499 - Add feature to CI Pipeline and provide manual deployments of branches\nAdd run script for sync indexes based on existing and registered schemas.\n\nChanged\n\nSC-8440 - fixed open api validation for manual consent\nSC-9055 - changed Edu-Sharing permissions for Brandenburg Sportinhalt content\nSC-6950 - validation for officialSchoonNumber now allows 5 or 6 digits\nSC-8599 - added helparea contact dropdown and send value\nSC-7944 - use persistent ids for Lern-Store content items\nOPS-1508 - added limits for cpu and ram to the docker compose files\nSC-8500 - refactoring in error handling\nSC-7021 - automatic deletion documents in the trashbins collection after 7 days.\nSC-5202 - homework tests refactoring\nSC-7868 - filestorage integration tests are skipped on local test environments if minio is not setup\nSC-8779 - messenger: use user-based fixed device ids\n\nFixed\n\nSC-8933 - fix date format on first login\nSC-8728 - fix configuration reset in tests\nSC-8873 - fix addUser prioritization for full school Matrix messenger sync\nSC-8982 - fix test setup for on the fly building test like routes jwt\n\n[26.1.0]\nAdded\n\nSC-8910 - added an isExternal check to the adminUsers service remove method\n\nChanged\n\nSC-8732 - change search filter gate and weight of values in indexes. Will reduce amount of results\nSC-8880 - changed the validation for search queries in NAT, now it allows empty\n\n[26.0.16] - 2021-04-20\nRemoved\n\n\nSC-8748 - revert: bump feathers-mongoose from 6.3.0 to 8.3.1\n\n\n\n[26.0.15] - 2021-04-19\nChanged\n\nSC-8909 - messenger: use user-based fixed device ids\n\n[26.0.14] - 2021-04-16\nChanged\n\nSC-8934 - no more autosync for the migrations for the mongodb\n\n[26.0.13] - 2021-04-15\nFixed\n\nSC-8917 - verify configuration missing school\n\n[26.0.12] - 2021-04-14\nChanged\n\nSC-8929 - increase performance for alert requests\n\n[26.0.11] - 2021-04-13\nChanged\n\nSC-8748 - bump feathers-mongoose from 6.3.0 to 8.3.1\n\n[26.0.10] - 2021-04-09\nFixed\n\nSC-8908 ldap sync: fix lock\n\n[26.0.9] - 2021-04-06\n\nSC-8779 - fix partial LDAP sync\n\n[26.0.8] - 2021-03-31\nFixed\n\nSC-8691 ldap sync: fix potential deadlock while loadind ldap data\n\n[26.0.7] - 2021-03-31\nFixed\n\nSC-8768 ldap sync: in user search include current school\n\n[26.0.6] - 2021-03-30\nFixed\n\nSC-8836 - teachers can add classes from other teachers to their courses\n\n[26.0.5] - 2021-03-29\nFixed\n\nSC-8691 - LDAP sync can be run with multiple school in parallel\n\n[26.0.4] - 2021-03-25\nChanged\n\nSC-8829 - status of logging in rocket chat user is set to offline\n\n[26.0.3] - 2021-03-17\nChanged\n\nmerged hotfixes 25.6.11 and following into 26.0 branch\n\n[26.0.2] - 2021-03-10\nFixed\n\nSC-5202 - fixed an issue with internal pagination in homework-submissions\n\n[26.0.1] - 2021-03-09\nChanged\n\nmerged 25.6.10 into new version\n\n[26.0.0]\nFixed\n\nSC-6679 - fixed table styling in topic text-component\nSC-8534 - fix registration link generation\nSC-8682 - fix students are editable in externally managed schools\nSC-8534 fix registration link generation\nAllow sorting after search\n\n[25.6.11] - 2021-03-17\n[25.6.13] - 2021-03-16\n\nSC-8782 Migration for changing urls\n\n[25.6.12] - 2021-03-15\n\nSC-8782 Fixed lesson context Query\n\n[25.6.11] - 2021-03-15\nFixed\n\nSC-8211 - Fixed course events duplications\n\n[25.6.10] - 2021-03-09\n\nSC-8770 Fixed issue where parent consents were overwritten\n\n[25.6.9] - 2021-02-26\nFixed\n\nSC-8714 Fixed an issue in school creation that could cause the iserv-sync to fail\n\n[25.6.8] - 2021-02-19\nChanged\n\nSC-8477 LDAP-Sync: Speed up class sync by holding all the school's users in map while creating/populating classes\nSC-8477 LDAP-Sync: Speed up user sync by grouping users into chunks and loading the chunks from DB instead of individual users\n\n[25.6.7] - 2021-02-18\nSecurity\n\nSC-8655 - prevent changes to immutable user attributes\n\n[25.6.6] - 2021-02-18\nFixed\n\nSC-8657 - Recreate shared links for homework\n\n[25.6.5] - 2021-02-17\nFixed\n\nSC-8634 - Recreate shared links for homework\n\n[25.6.4] - 2021-02-17\nChanged\n\nReverted Changes for SC-8410\n\n[25.6.3] - 2021-02-15\nSecurity\n\nVOR-3 - Enable and replace old file links.\n\n[25.6.2] - 2021-02-11\nChanged\n\nVOR-2 - Adjusted business rules for adding team members from external school.\n\n[25.6.1] - 2021-02-11\nFixed\n\nVOR-1 - Fix passwordRecovery id validation.\n\n[25.6.0] - 2021-02-09\nFixed\n\nSC-8514 - QR Code generation fails\nSC-8390 - Lern-Store collections feature flag was not excluding collections in search\nSC-8322 prevent wrong assignment from school to storage provider\n\nAdded\n\nSC-8482 - Deletion concept orchestration integration\nSC-8029 - Add deletion concept handling for pseudonyms and registration pins\nSC-6950 - Add access for superhero to change kreisid and officialSchoolNumber\nSC-8206 - Add school tombstone for deleting concept\nSC-7825 - Deletion concept for user data in tasks\n\nChanged\n\nSC-8541 - restrict class modifing requests to the teachers, who are inside these classes\nSC-8380 removed reqlib, replaced by normal require to keep referenced types known\nSC-8213 error handling concept\nSC-4576 - sanitize bbb room and member names\nSC-8300 Added user information to LDAP Sync in case of errors\n\n[25.5.16] - 2021-02-08\nAdded\n\nSC-8512 - Creating a migration for duplicated events\n\n[25.5.15]\nFixed\n\nSC-8571 - New courses does not appear in bettermarks\n\n[25.5.14] - 2021-02-02\nChanged\n\nSC-8420 - Fix old missing indexes that migration for new indexes can executed. 25.5.3\n\n[25.5.13]\nChanged\n\nSC-8462 - Add logging for homework deletion\n\n[25.5.12]\nFixed\n\nSC-8499 - Change order of migrations\n\n[25.5.11]\nFixed\n\nSC-8499 - Prevent duplicated pseudonyms\n\n[25.5.10]\n\nSC-8506 - add origin server name to bbb create and join requests\n\n[25.5.9]\nFixed\n\nSC-8503 - Clicking on task in BRB and THR shows pencil page\n\n[25.5.8]\nChanged\n\nSC-8480 - Return GeneralError if unknown error code is given to error pipeline\n\n[25.5.7]\nAdded\n\nSC-8489 - Added permission check for homework deletion\n\n[25.5.6]\nFixed\n\nSC-8410 - Verify ldap connection reads the first page of users only to avoid timeouts\nSC-8444 - resolve eventual consistency in course shareToken generation\n\n[25.5.5]\nFixed\n\nSC-8303 - fix wrong assignment from school to storage provider\n\n[25.5.4]\nAdded\n\nSC-8358 - bettermarks: show hint for safari users\nSC-8412 - update swagger documentation of pseudonym/roster/ltitools\n\nFixed\n\nSC-5287 - Fixed OAuth2 rostering\nSC-5287 - Repair Bettermark's depseudonymization\nSC-8313 - Bettermarks: depseudonymization iframe needs to use Storage Access API in Safari\nSC-8379 - Secure ltiTools route\nSC-8315 - bettermarks: security check and production configuration\n\n[25.5.3]\nAdded\n\nSC-8420 - Migration for sync new indexes.\n\n[25.5.2]\nFixed\n\nSC-8189 - fix duplicate events by returning updated object at findOneAndUpdate\n\n[25.5.1]\nFixed\n\nSC-8303 - fix wrong assignment from school to storage provider\n\n[25.5.0]\nAdded\n\nSC-7835 - Add deletion concept handling for helpdesk problems\nSC-8229 - Added invalid DN error to ldap-config service error handling\nSC-7825 - Remove user relations from courses\nSC-7827 - Add deletion concept handling for file permissions.\nSC-8030 - Setup orchestrator for deleting concept\nSC-8060 - increase unit test coverage for lernstore counties\nSC-8179 - repaired unit test\nSC-7763 - adds searchable feature flag for lernstore.\nSC-8020 - adds collections filter to edu-sharing service\nSC-8260 - new team indexes and migration to add this\n\nFixed\n\nSC-8230 - fix deletion of teachers via new route\n\nRemoved\n\nSC-8233 - Removed attribute and member as required attributes for the LDAP-config service\n\nFixed\n\nSC-8329 - Cluster returns old verison of Pin object after patch\n\n[25.4.1]\n\nUpdate from 25.3.9 into master\n\n[25.3.9]\n\nSC-8198 continue school sync on user issues\n\n[25.3.8]\nChanged\n\nSC-8198 - handle eventually consistent database in THR sync\n\n[25.3.7] - 2020-12-18\nChanged\n\nSC-8209 - prevent sync from stopping if error occurs for a single student\n\n[25.3.6]\nFixed\n\nSC-8235 - repaired reigstration link for students\n\n[25.3.5]\nChanged\n\nSC-8149 - no longer require a registrationPin for internal calls\n\n[25.3.4]\nChanged\n\nSC-7998 - use default service setup for /version\n\n[25.3.3] (pick from 25.2)\nRemoved\n\nSC-8101 - Sanitization for read operations\n\nFixed\n\nSC-8101 - Make it possible to disable sentry by removing SENTRY_DSN\nOPS-1735 - Fixes transaction handling in file service by using the mongoose transaction helper,\nproperly closing the session, and using the correct readPreference (everything except primary fails)\n\n[25.3.2]\nAdded\n\nSC-7734 - Added a hook that takes care of merlin content to generate valid urls for users\nSC-7483 - Updating terms of use for all users for each instance separately\n\n[25.3.1]\nFixed\nSC-8077 - the migration copy-parents-data-into-children-entities-and-delete-parent-users is broken\n[25.3.0]\nAdded\n\nSC-7841 - remove deleted user from classes\nSC-7836 - Removing registration pin by removing the user\nSC-7838 - move pseudonyms to trashbin\nSC-7142 - Counties/Kreise added to federal states.\nSC-7555 - move user and account to trashbin\nSC-4666 - Added a pool based LDAP system and school sync. LDAP_SYSTEM_SYNCER_POOL_SIZE and LDAP_SCHOOL_SYNCER_POOL_SIZE variables\ndetermine how many system/school syncers will be run in parallel (at most) during the LDAP sync.\nSC-7615 - reduces the errors in lernstore\nSC-5476 - Extend tests for Matrix messenger config and permission service\nSC-6690 - refactors edu-sharing service and sets defaults\nSC-6738 - Extend search input field in new admin tables to search for full name\nSC-7293 - added Lern-Store view permission and a feature flag\nSC-7357 - Add config service\nSC-7083 - Added officialSchoolNumber to school-model\nIntroduce plainSecrets in Configuration\nIntroduce FEATURE_PROMETHEUS_ENABLED to have a flag for enable prometheus api metrics\nSC-7411 - add API Specification and validation for /me service\nSC-7411 - add API Specification and validation for /version service\nSC-7205 - create new data seed for QA\nSC-7614 - creates documentation for edu sharing endpoints\nSC-7370 - Add optional rootPath attribute modifier to iserv-idm strategy\nSC-4667 - persist time of last attempted and last successful LDAP sync to database (based on system)\nSC-4667 - Only request and compare LDAP entities that have changed since the last sync (using operational attribute modifyTimestamp with fallback)\nSC-4667 - Add optional forceFullSync option (as get param or json payload) to force a full LDAP sync\nSC-7499 - add API Specification for public services\nSC-7915 - facade locator\nSC-7571 - solved performance issues - bulk QR-code generation\nSC-6294 - Introduce Typescript in schulcloud-server\nSC-7543 - Adds ldap-config service to create, load, and patch LDAP-configs (replaces /ldap endpoints for new client)\nSC-7028 - Add Course Component API Specification document\nSC-7476 - Prevent hash generation if user has account\nSC-6692 - Added Lern-Store counties support for Niedersachsen (Merlin)\n\nChanged\n\nrequest logging disabled for non development environment\nOPS-1289 - moved and updated commons (to hpi-schul-cloud/commons)\nSC-6596 - Changed route for messenger permissions service\nSC-7331 - introduce axios for external requests, implemented in status api\nSC-7395 - Changed ldap general strategy fetching of users from parallel to serialized\nSC-6080 - move REQUEST_TIMEOUT from globals to Configuration\nDependencies: querystring replaced by qs\nSC-6060 - Updated error handling\nSC-7404 - automatic forwarding for requests without versionnumber if no matching route is found\nSC-7411 - api versioning for /me service\nSC-7411 - api versioning for /version service\nIMP-160 - integration-tests repo renamed to end-to-end-tests\nSC-5900 - Move Synapse synchronization logic into server\nSC-7499 - Fixes documentation for edu sharing endpoints\nSC-7872 - Fix audience of the jwt to new organisation name.\nSC-7543 - deprecates GET /ldap/:id and PATCH /ldap/:id routes\nSC-7868 - Move external request helpers to more present file location\nSC-7474 pull docker container for tests if commit id exists on docker hub\n\nFixed\n\nSC-6294 fix mocha test execution and build, summarize coverage results\nSC-1589 Trim strings to avoid empty team names\nARC-138 fix changelog action\nARC-137 avoid DoS on alerts in error state\nSC-7353 course sharing between teachers\nSC-7530 rename SHOW_VERSION to FEATURE_SHOW_VERSION_ENABLED\nSC-7517 improve oauth test stability\nSC-6586 Repaired migration script\nSC-7454 - Restored invalid birth date fix in adminUsers service\nfixed README badges\nFix mocha tests\nSC-6151 fixed a bug that prevented api docu from being accessible\nSC-6151 fixed paths to openapi documentation\nFixed searching for names including a dash\nSC-7572 - Find /users route after hooks - extremely slow\nSC-7573 - Route/hash-broken promise chain\nSC-7884 - Authentication error when accessing any nuxt page in the client.\nFix typescript compiling error\n\nRemoved\n\nSC-7413 - Cleanup UnhandledRejection code that is handled from winston now\n\n[25.2.6]\nRemoved\n\nSC-8101 - Sanitization for read operations\n\nFixed\n\nSC-8101 - Make it possible to disable sentry by removing SENTRY_DSN\n\n[25.2.5]\nFixed\n\nOPS-1735 - Fixes transaction handling in file service by using the mongoose transaction helper,\nproperly closing the session, and using the correct readPreference (everything except primary fails)\n\n[25.2.4]\nChanged\n\nSC-6727 - Change email addresses for tickets for Niedersachsen - fixed after review\n\n[25.2.3]\nChanged\n\nSC-6727 - Change email addresses for tickets for Niedersachsen\n\n[25.2.2]\nChanged\n\nSC-7773 - moved config values for antivirus file service\n\n[25.2.1]\nFixed\n\nSC-7714 - Fixes script injection issue\n\n[25.2.0]\nAdded\n\nSC-4385 - Added a user exclusion regex to IServ strategy\nSC-7049 - Added unit tests for Merlin Service\nSC-7157 - add feature flag for Merlin feature with fallback\nSC-6567 - add new application errros\nSC-6766 - Added ESLint rules with Promise rules\nSC-6830 - Added hook to parse request to arrays when > 20 users are requested in adminUsers service\nSC-6769 - Introduce API validation module\nSC-6769 - API validation for users/admin routes\nSC-6510 - Added Merlin Url Generator for Lern Store / Edu-sharing\nSC-5476 - Added school settings to enable students to open own chat rooms\nSC-6567 - Add utils to cleanup incomingMessage stacks by logging errors\n\nRemoved\n\nSC-6586- Remove parents from users collection to improve maintainability\n\nChanged\n\nSC-6986 - Changed a hook in the accounts service that restricts get requests to the same school, it expects a valid userID and matching schoolIds for both the requester and requested users\nSC-6567 - clean up error pipline\nSC-6510, fix a minor syntax error when exporting module\nUpdate commons to 1.2.7: print configuration on startup, introduce hierarchical configuration file setup\nSupport asynchronous calls during server startup\nSC-7091 - Migration to enable the Matrix Messenger for all schools that had RocketChat enabled before\n\nFixed\n\nfixed README badges\nSC-6151 - fixed a bug that prevented api docu from being accessible\nFix mocha tests\n\n[25.1.13] - 2020-11-12\nChanged\n\nSC-7395 - Changed ldap general strategy fetching of users from parallel to serialized\n\n[25.1.12] - 2020-11-09\nAdded\n\nSC-7683 - add request logging options\n\n[25.1.11] - 2020-11-06\nSecurity\n\nSC-7695 - prevent csv user override operations on other schools\n\n[25.1.10] - 2020-11-05\nAdded\n\nSC-7683 - Add log metic for memory usage, add async error logging util, catch one unhandledRejection error and remove cronjob task from server.\n\n[25.1.9] - 2020-11-03\nFixed\n\nSC-7638 - fixed pin creation for users with accounts\n\n[25.1.8] - 2020-10-22\nFixed\n\nSC-7333 - fixed creation of homeworks within lessons\n\n[25.1.7] - 2020-10-28\nAdded\n\nSC-7491 - Add missing index on users.email to speed up slow query in registrationLink service\n\n[25.1.6] - 2020-10-23\nChanged\n\nSC-7413 - Remove event listener for unhandled rejections and move this to winston\n\n[25.1.5] - 2020-10-22\nFixed\n\nSC-7452 - fixed time window check for LDAP users\n\n[25.1.4] - 2020-10-20\nChanged\n\nSC-6986 - Changed permission check for PATCH method in the account service from STUDENT_CREATE to STUDENT_EDIT to allow teachers to change students' password\n\n[25.1.3] - 2020-10-20\nFixed\n\nSC-6986 - Changed a hook in the accounts service that restricts get requests to the same school, it expects a valid userID and matching schoolIds for both the requester and requested users\n\n[25.1.2] - 2020-10-15\nFixed\n\nSC-7085 - fixed importHash error when asking parent consent\n\nAdded\nRemoved\n[25.1.1] - 2020-10-12\nSecurity\n\nSC-7165 package update for sanitization and add onload handler\n\n[25.1.0] - 2020-10-12\nAdded\nRemoved\n\nSC-6784 - Removed duplicated birth date formatting code in adminUsers service, which was causing an \"Invalid date\" output\nSC-6743 - Removed usersForConsent related things in adminUsers service because the client does not send that parameter anymore\nSC-6506 - Remove dependecy to feathers-swagger in routes.test.js\n\nChanged\n\nSC-6774 remove no-await-in-loop from eslint exceptions\nRename statistic mails route, secure it over sync api key now\nSC-6809 - Maintain RabbitMQ connection and channels\nSC-5230 - Unblock Account-Page in Nuxt (securing /accounts and /users routes)\n\nSecurity\n\nAdded hotfix merges\n\n[25.0.12] - 2020-10-12\nFixed\n\nSC-6676 allows only following roles for registration: teacher/student…\n\n[25.0.11] - 2020-10-07\nFixed\n\nSC-7180 homework create now validates data properly\n\n[25.0.12] - 2020-10-12\nFixed\n\nSC-6676 allows only following roles for registration: teacher/student…\n\n[25.0.11] - 2020-10-07\nFixed\n\nSC-7180 homework create now validates data properly\n\n[25.0.10] - 2020-10-07\nAdded\n\nconfigured prometheus metrics - bucket sizes\nSC-6766 log unhandledRejection and unhandledException\n\n[25.0.9] - 2020-10-07\nAdded\n\nSC-7115 - Reduce mongoose DB role request by enabling minor caching\n\n[25.0.8] - 2020-10-06\nFixed\n\nSC-6676 - Registration: User with role parent should not be able to log-in\nSC-6960 - instead of deleting and recreating users during the rollback of a failed registration, use replace if necessary\nSC-6960 - properly raise exceptions during the registration process\n\n[25.0.7] - 2020-10-01\nRemoved\n\nOPS-1316 - removed custom keep-alive header creation in express middleware\n\n[25.0.6] - 2020-10-01\nAdded\n\nOPS-1316 - add indexes for slow files and submission queries\n\n[25.0.5] - 2020-10-01\nAdded\n\nSC-6973 - add time window for pin creation\n\n[25.0.4] - 2020-09-30\nAdded\n\nAdded lead time detection\n\n[25.0.3]\nAdded\n\nSC-6942 - add parse method to TSP strategy to declare it can handle the request and to keep authentication params clean\n\nFixed\n\nSC-6942 - don't override payload defined by authentication method\nSC-6942 - don't search for account to populate if no username is given in injectUsername\n\n[25.0.2]\nChanged\n\nsend mail for registration pin after add pin to db\n\n[25.0.1]\nFixed\n\nSC-6696 - Fixed query used to determine course membership when checking permissions for course group lessons\n\n[25.0.0]\nChanged\n\nExtend JWT payload by schoolId and roleIds\n\n[24.5.1] - 2020-09-16\nSecrutiy\n\nSecure admin routes (update, patch, create)\n\n[24.5.0] - 2020-09-14\n\nIgnore database seed data with prettier, eslint, and codacy\nSC-6640 - Fixed email check within registration (case insensitive)\nSC-2710 - Adding time zones, default for school and theme\n\nAdded - 24.5.0\n\nTest changelog has been updated for feature or hotfix branches\nSC-5612 - Adding search feature to the admintables for nuxt-client.\n\n[24.4.6] - 2020-09-11\nChanged\n\nSC-6733: central personal data does not get updated via CSV import\n\n[24.4.5] - 2020-09-10\nFixed in 24.4.5\n\nSC-6637: generate QR codes for consent print sheets if group size exceeds 20\n\n[24.4.4] - 2020-09-08\nFixed in 24.4.4]\n\nSC-6697: updates/sync account username when user is updated\n\n[24.4.3] - 2020-09-09\nFixed in 24.4.3\n\nSC-6533 - Login not possible if admin reset password\n\n[24.4.2] - 2020-08-31\nFixed in 24.4.2\n\nSC-6554: CSV-Importer no longer allows patching users with different roles\n\n[24.4.1] - 2020-08-31\nFixed in 24.4.1\n\nSC-6511 - LDAP edit button missing.\n\nChanged in 24.4.1\n\nSC-5987 Internationalisation: extend user and school model with default language\n\nAdded 24.4.1\n\nSC-6172: added hooks and checks to look for unique and not disposable emails in adminUsers service\n\n[24.4.0] - 2020-8-31\nFixed in 24.4.0\n\nSC-6122 - Edusharing preload thumbnails in parallel. Edusharing authentication stabilisation.\n\n[24.3.3] - 2020-08-28\n\nSC-6469: prevent admin access to lessons admins shouldnt have access to.\n\n[24.3.2] - 2020-08-26\n\nSC-6382: fix handling of consents for users with unknown birthdays. consentStatus: 'ok' will be returned for valid consents without birthday.\n\n[24.3.1] - 2020-08-25\n\nSC-5420: TSC Schuljahreswechsel\n\n[24.3.0] - 2020-08-25\n[24.2.5] - 2020-08-24\n\nSC-6328 add migration to set student_list settings in all non n21 clouds schools to false.\n\n[24.2.4] - 2020-08-20\n[24.2.3] - 2020-08-20\n[24.2.2] - 2020-08-20\nAdded in 24.2.2\n\nSC-5280: the LDAP service will try to reconnect up to three times if the connection was lost or could not be established\nSC-5280: the LDAP service and LDAP syncers now report more errors to the stats object\nSC-5808: added an isExternal check to the create method of AdminUsers service, only users from not external schools can create users\n\nFixed in 24.2.2\n\nSC-5280: the LDAP sync now handles (timeout/firewall) errors much more gracefully\nSC-5280: LDAP bind operations will only be issued if the connection was established successfully\nSC-5280: aggregated LDAP statistics will now show the number of succesful and failed sub-syncs instead of just 1 or 0\n\nChanged in 24.2.2\n\nSC-5280: if disconnected prematurely, the LDAP service will not try to connect again just to unbind from the server\n\n[24.0.2] - 2020-08-05\nFixed in 24.0.2\n\nSC-5835: Starting the new school year automatically - Cluster 4\n\n[24.0.1] - 2020-07-31\nFixed in 24.0.1\n\nSC-5917 Fix activation of LDAP system\n\n[23.6.4] - 2020-07-29\nFixed in 23.6.4\n\nSC-5883: Choose current schoolyear based on the school instead of the date for creating classes.\n\n[23.6.3] - 2020-07-28\nAdded in 23.6.3\n\nSC-5754 Added isExternal attribute to school model. If ldapSchoolIdentifier or source is defined, isExternal will be set to true\notherwise, if none of them are defined it wil be set to false.\nSC-4520 created a new Service called Activation Service; with which jobs can be defined and are\nonly executed when an activation link (activation code) is confirmed (e.g.: change of e-mail address/username)\nAlso added a sub-service for changing email/username in Activation Service\nSC-5280: the LDAP service will try to reconnect up to three times if the connection was lost or could not be established\nSC-5280: the LDAP service and LDAP syncers now report more errors to the stats object\n\nFixed in 23.6.3\n\nSC-5250: Fixes the CSV-Import, if there are whitespaces in the columnnames\nSC-5686: only users with the team permission \"RENAME_TEAM\" can execute the patch method in teams route\nSC-5280: the LDAP sync now handles (timeout/firewall) errors much more gracefully\nSC-5280: LDAP bind operations will only be issued if the connection was established successfully\nSC-5280: aggregated LDAP statistics will now show the number of succesful and failed sub-syncs instead of just 1 or 0\nSC-5416: Enable maintenance Mode for LDAP Schools and change the currentSchoolYear for non-LDAP Schools\n\nChanged in 23.6.3\n\nSC-5542: Added an after hook for AdminUsers find method which formats birthday date to DD.MM.YYYY format.\nSC-4289 Changed aggregations in admin tables, classes are now taken only from current year or max grade level, and are sorted\nby numeric ordering.\nSC-5280: if disconnected prematurely, the LDAP service will not try to connect again just to unbind from the server\n\n[23.6.2] - 2020-07-22\nFixed in 23.6.2\n\nSC-5773: LDAPSchoolSyncer now correctly populates classes synced from an LDAP server, even if only students or only teachers are assigned to the class.\nSC-5250: Fixes the CSV-Import, if there are whitespaces in the columnnames\n\n[23.6.1] - 2020-07-22\nFixed in 23.6.1\n\nSC-5733: LDAPSchoolSyncer now uses the Users model service to avoid ignoring indexes due to automatic collation\n\n[23.6.0] - 2020-07-21\nAdded in 23.6.0\n\nSC-4142: Added indexes on TSP sync related attributes in user and school schema.\nSC-4142: Adds info about unchanged entities to TSP sync statistics\n\n[23.5.4] - 2020-07-08\nAdded in 23.5.4\n\nSC-2714 Added the federal state \"Internationale Schule\"\n\n[23.5.0] - 2020-06-15\nAdded in 23.5.0\n\nSC-4192 add tests that ensure classes on other schools cant be manipulated\n\nFixed in 23.5.0\nChanged in 23.5.0\n\nSC-4957 user.ldapId and user.ldapDn are now indexed to improve performance\n\n[23.4.7] - 2020-07-01\nFixed in 23.4.7\n\nSC-4965 Converted \"consent\" subdocument in \"users\" to a nested document to fix changing consents in administration and removing a bug in registration that resulted in deleted users.\n\n[23.4.5] - 2020-06-17\nFixed in 23.4.5\n\nSC-5007 re-introduces ldap system root path to API result to fix issue with duplicating schools\n\n[23.4.3-nbc] - 2020-06-15\nFixed in 23.4.3-nbc\n\nSC-5054 Revert hook restrictions that prevented registration with custom deata privacy documents enabled\n\n[23.4.0-nbc] - 2020-06-11\nAdded in 23.4.0-nbc\n\nSC-4577 extend consentversions with school specific privacy policy, which can be added by the school admin\n\n[23.2.4] - 2020-06-05\nFixed in 23.2.4\n\nSC-4876 soften sanitization to allow editor actions to be persisted correctly\n\n[23.2.1] - 2020-06-04\nSecurity - 23.2.1\n\nSC-4720 improve importhashes for registrationlinks\n\n[23.2.0] - 2020-06-03\nSecurity - 23.2.0\n\nSC-4506 Secure Find User Route. Access user list by students is allowed only if they are eligible to create teams.\nSC-4506 Secure Get User Route. Read user details may only users with STUDENT_LIST or TEACHER_LIST permissions\n\n[23.1.4] - 2020-05-29\nFixed in 23.1.4\n\nSC-4749 avoid xss in image onerror event attribute for submissions\n\n[23.0.0] - 2020-05-19\nChanged in 23.0.0\n\nSC-4075 Teams creation by students logic was changed. New environment enumeration variable STUDENT_TEAM_CREATION\nwith possible values disabled, enabled, opt-in, opt-out was introduced. The feature value is set by instance deployment.\nIn case of disabled, enabled it is valid for all schools of the instance and cannot be changed by the admin.\nIn case of opt-in and opt-out the feature should be enabled/disabled by the school admin.\n\n[22.10.3] - 2020-05-13\nFixed in 22.10.3\n\nUnbind errors no longer stop the LDAP sync if more systems follow\n\n[22.10.2] - 2020-05-12\nFixed in 22.10.2\n\nfixed pagination for students/teacher table\n\n[22.10.0] - 2020-05-11\nAdded in 22.10.0\n\nSC-3719 Files now have a creator attribute that references the ID of the user that created the file.\nFor old files, it is set to the first user permission inside the permissions array (legacy creator check).\nSC-3719 The files collection now has two additional indexes: {creator} and {permissions.refId, permissions.refPermModel}.\nadd MongoDB Collation Support to control sorting behaviour in regards to capitalization.\nSC-3607 CSVSyncer now allows the optional birthday field (formats: dd/mm/yyyy, dd.mm.yyyy, dd-mm-yyyy) in CSV data\nSC-3948 support users query in adminusers routes\nSC-4018 Add additional nexboard permissions\nSC-4008 Migrated generateRegistrationLink Hook from SC-Client into Server\nSC-3686 Added new Registration Link Service for sending mails\nSC-4094 Teachers can now provide feedback in the form of uploaded files\n\nFixed in 22.10.0\n\nSC-3892 Update Filter of submission in order to work with older submissions\nSC-3395 if fetching the release fails, a error will be thrown\nbackup.js now outputs valid json exports\nSC-4105 fixed a problem with new users tests not working with recent hotfix.\nChecks of user consent calculated correct now\n\nChanged in 22.10.0\n\nUser delete now accepts bulk delete requests\nSC-3958: the \"general\" LDAP strategy now returns an empty array if classes are not configured properly\nIncrease performance - error logging in sentry\nMergify: add and modified some configs\n\nRemoved in 22.10.0\n\nSC-3958: the LDAP strategy interface no longer supports synchronizing team members to the never-used original N21-IDM\nSC-3958: the environment variables NBC_IMPORTURL, NBC_IMPORTUSER, and NBC_IMPORTPASSWORD are no longer used and have been removed\nRemoved the obsolete commentSchema from the homework service. It was not in use.\n\n[22.9.20]\nAdded in 22.9.20\n\nSC-4042: Added support for a central IServ-Connector\n\nChanged in 22.9.20\n\nLDAP syncs on servers with multiple schools now only sync one school at a time to avoid issues when paging search requests\nLDAP syncs use less memory (because they do a lot less in parallel)\nLDAPSchoolSyncer now returns user and class statistics\n\nFixed in 22.9.20\n\nFixed LDAP-Service disconnect method\nLDAPSystemSyncers now properly close their connections after syncing\nAuthentication via LDAP now tries to close the connection after login\nFixed a warning message appearing when patching users via internal request\n\n[22.9.18]\nFixed in 22.9.18\n\nSC-4215: Do not allow unprivileged users to find users with non-school roles (expert, parent, etc.)\n\n[22.9.17]\nFixed in 22.9.17\n\nSC-4121: File uploads no longer fail if the security scan is misconfigured or errors during enqueuing\n\n[22.9.10]\nAdded in 22.9.10\n\nenable API key for /mails route\n\nFixed in 22.9.10\n\nfixed an issue that prevented api-key authenticated calls to function with query.\n\n[22.9.9]\nAdded in 22.9.9\n\nSync can now be authenticated with an api-key.\n\n[22.9.8]\nFixed in 22.9.8\n\nFixed an error where ldap users without proper uuid where not filtered correctly.\n\n[22.9.7]\nSecurity in 22.9.7\n\nthe /ldap route can now only be triggered for the users own school.\n\n[22.9.6]\nAdded in 22.9.6\n\nusers without SCHOOL_EDIT permission, but with SCHOOL_STUDENT_TEAM_MANAGE permission can now toggle the school feature disableStudentTeamCreation.\n\nFixed in 22.9.6\n\nAdmins in Thuringia can now prevent students from creating teams\n\n[22.9.5]\nSecurity in 22.9.5\n\nincreased security for the publicTeachers route.\n\n[22.9.4]\nFixed in 22.9.4\n\nfixes an issue with LDAP account updates if more than one account exists for the user (migration from local login to LDAP)\n\n[22.9.3]\nFixed in 22.9.3\n\nfixes regression in LDAP sync, that caused incomplete user updates\n\n[22.9.2]\nSecurity in 22.9.2\n\nincreased security for user PUT operation\n\n[22.9.1]\nFixed in 22.9.1\n\nSC-3994: remove unnecessary bucket creation call that caused school administration and LDAP Sync to throw errors\n\nChanged in 22.9.1\n\nuse collation for /homeworks, /users, /publicTeachers, /users/admin/teachers, /users/admin/students, /classes, and /courses.\n\n[22.9.0]\n\nSecurity updates\n\n[22.8.0]\nAdded in 22.8.0\n\nThis changelog has been added\n\nRemoved in 22.8.0\n\nClipboard sockets\nThis changelog has been added\nBackend route to confirm analog consents in bulk\nChanged Seed Data + Migration Script: Added feature flag for new Editor to klara.fall@schul-cloud.org\nSC-2922: Enable use of multiple S3 instances as file storage provider\nA new collection is added to administrate multiple S3 instances\nA migration will automatically use the AWS environment variables to add those as default provider for all existing schools\nFor new schools the less used provider is assigned as storage provider\nEnvironment Variables:\nFEATURE_MULTIPLE_S3_PROVIDERS_ENABLED=true will activate the feature\nS3_KEY, used for symmetric encryption, already required for the migration because of the secret access key encryption\n\n\n\n\n\nChanged in 22.8.0\n\nSC-3767: moved env variables to globals.js, NODE_ENV required to equal 'test' for test execution and right database selection\nmigrated backup.sh script to node, so it can run platform independant and works on windows.\n\nFixed in 22.8.0\n\nSC-3821: Fix Co-Teachers and Substitution teachers not being able to Grade Homeworks\n\n22.7.1\nFixed in 22.7.1\n\nAdmin and teacher user could change other users without changing them self\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/server/src/config/database.config.ts\n            \n            interface\n            GlobalConstants\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/config/database.config.ts\n            \n            variable\n            usedGlobals\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/config/database.config.ts\n            \n            variable\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/console/console-writer/console-writer.service.ts\n            \n            injectable\n            ConsoleWriter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/console/console.ts\n            \n            variable\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/console/server.console.ts\n            \n            class\n            ServerConsole\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/api-validation-error.response.ts\n            \n            class\n            ApiValidationErrorResponse\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/error.response.ts\n            \n            class\n            ErrorResponse\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/validation-error-detail.response.ts\n            \n            class\n            ValidationErrorDetailResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            class\n            GlobalErrorFilter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForBusinessError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForFeathersError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForUnknownError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            createErrorResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            createErrorResponseForHttpException\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isBusinessError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isFeathersError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isTechnicalError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            writeErrorLog\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            writeValidationErrors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/interface/error-type.interface.ts\n            \n            interface\n            IErrorType\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/interface/feathers-error.interface.ts\n            \n            interface\n            FeathersError\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            NOT_FOUND_ERROR_TYPE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            serverErrorTypes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/logger/logger.interface.ts\n            \n            interface\n            ILogger\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/core/logger/logger.service.ts\n            \n            injectable\n            Logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/validation/pipe/global-validation.pipe.ts\n            \n            class\n            GlobalValidationPipe\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            interface\n            JwtConstants\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            Authenticate\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            STRATEGIES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/guard/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/interface/jwt-payload.ts\n            \n            interface\n            JwtPayload\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts\n            \n            injectable\n            JwtValidationAdapter\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/authorization.service.ts\n            \n            injectable\n            AuthorizationService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/feathers-auth.provider.ts\n            \n            injectable\n            FeathersAuthProvider\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/feathers-auth.provider.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n            \n            variable\n            createMikroOrmModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/feathers/feathers-service.provider.ts\n            \n            injectable\n            FeathersServiceProvider\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/feathers/feathers-service.provider.ts\n            \n            interface\n            FeathersService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/learnroom/controller/dashboard.controller.ts\n            \n            controller\n            DashboardController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts\n            \n            class\n            DashboardGridElementResponse\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts\n            \n            class\n            DashboardResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts\n            \n            class\n            DashboardMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/learnroom/uc/dashboard.uc.ts\n            \n            injectable\n            DashboardUc\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            AppendedAttachment\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            HtmlMailContent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            InlineAttachment\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            Mail\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            MailAttachment\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            MailContent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            PlainTextMailContent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.module.ts\n            \n            interface\n            MailModuleOptions\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.module.ts\n            \n            variable\n            createRabbitMqModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.service.ts\n            \n            interface\n            MailServiceOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/create-news.params.ts\n            \n            class\n            CreateNewsParams\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/create-news.params.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news-filter.query.ts\n            \n            class\n            NewsFilterQuery\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news-filter.query.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            class\n            NewsResponse\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            variable\n            NEWS_SOURCES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/school-info.response.ts\n            \n            class\n            SchoolInfoResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/target-info.response.ts\n            \n            class\n            TargetInfoResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/update-news.params.ts\n            \n            class\n            UpdateNewsParams\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/user-info.response.ts\n            \n            class\n            UserInfoResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/news.controller.ts\n            \n            controller\n            NewsController\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/team-news.controller.ts\n            \n            controller\n            TeamNewsController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/news.mapper.ts\n            \n            class\n            NewsMapper\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/school-info.mapper.ts\n            \n            class\n            SchoolInfoMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/target-info.mapper.ts\n            \n            class\n            TargetInfoMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/user-info.mapper.ts\n            \n            class\n            UserInfoMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news-scope.ts\n            \n            class\n            NewsScope\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news-target-filter.ts\n            \n            interface\n            NewsTargetFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news.repo.ts\n            \n            injectable\n            NewsRepo\n            \n                21 %\n                (3/14)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/uc/news.uc.ts\n            \n            injectable\n            NewsUc\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/controller/dto/task.response.ts\n            \n            class\n            TaskResponse\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/controller/task.controller.ts\n            \n            controller\n            TaskController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/mapper/task.mapper.ts\n            \n            class\n            TaskMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/submission.repo.ts\n            \n            injectable\n            SubmissionRepo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task-scope.ts\n            \n            class\n            TaskScope\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.repo.ts\n            \n            injectable\n            TaskRepo\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/uc/task.authorization.service.ts\n            \n            injectable\n            TaskAuthorizationService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/uc/task.uc.ts\n            \n            injectable\n            TaskUC\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts\n            \n            class\n            ResolvedUser\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/controller/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/mapper/ResolvedUser.mapper.ts\n            \n            class\n            ResolvedUserMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/repo/role.repo.ts\n            \n            injectable\n            RoleRepo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/repo/user.repo.ts\n            \n            injectable\n            UserRepo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/uc/role.uc.ts\n            \n            injectable\n            RoleUC\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/uc/user.uc.ts\n            \n            injectable\n            UserUC\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/user.facade.ts\n            \n            injectable\n            UserFacade\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/utils/createCurrentTestUser.ts\n            \n            variable\n            createCurrentTestUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/course.repo.ts\n            \n            class\n            CourseScope\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/course.repo.ts\n            \n            injectable\n            CourseRepo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/coursegroup.repo.ts\n            \n            injectable\n            CourseGroupRepo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/dashboard.model.entity.ts\n            \n            class\n            DashboardGridElementModel\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/dashboard.model.entity.ts\n            \n            class\n            DashboardModelEntity\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/dashboard.model.entity.ts\n            \n            class\n            DefaultGridReferenceModel\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/dashboard.model.mapper.ts\n            \n            class\n            DashboardModelMapper\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/dashboard.repo.ts\n            \n            injectable\n            DashboardRepo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/dashboard.repo.ts\n            \n            interface\n            IDashboardRepo\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/server.controller.ts\n            \n            controller\n            ServerController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/error/api-validation.error.ts\n            \n            class\n            ApiValidationError\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/error/business.error.ts\n            \n            class\n            BusinessError\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/error/validation.error.ts\n            \n            class\n            ValidationError\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/constants.ts\n            \n            variable\n            REQUEST_TIMEOUT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/constants.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts\n            \n            injectable\n            DurationLoggingInterceptor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/test/create-test.module.ts\n            \n            controller\n            DelayController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/test/create-test.module.ts\n            \n            variable\n            createTestModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/test/create-test.module.ts\n            \n            variable\n            delay\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/timeout.interceptor.ts\n            \n            injectable\n            TimeoutInterceptor\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/dto/pagination.query.ts\n            \n            class\n            PaginationQuery\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/dto/pagination.response.ts\n            \n            class\n            PaginationResponse\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts\n            \n            injectable\n            ParseObjectIdPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/swagger.ts\n            \n            variable\n            config\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/swagger.ts\n            \n            variable\n            enableOpenApiDocs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/transformer/string-to-boolean.transformer.ts\n            \n            function\n            StringToBoolean\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/all-entities.ts\n            \n            variable\n            ALL_ENTITIES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/base.entity.ts\n            \n            class\n            BaseEntityWithTimestamps\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/course.entity.ts\n            \n            class\n            Course\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/course.entity.ts\n            \n            interface\n            ICourseProperties\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/course.entity.ts\n            \n            variable\n            DEFAULT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/coursegroup.entity.ts\n            \n            class\n            CourseGroup\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/coursegroup.entity.ts\n            \n            interface\n            ICourseGroupProperties\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/dashboard.entity.ts\n            \n            class\n            DashboardEntity\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/dashboard.entity.ts\n            \n            class\n            DefaultGridReference\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/dashboard.entity.ts\n            \n            class\n            GridElement\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/dashboard.entity.ts\n            \n            interface\n            IGridElement\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/dashboard.entity.ts\n            \n            interface\n            IGridElementReference\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/file.entity.ts\n            \n            class\n            File\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/file.entity.ts\n            \n            interface\n            IFileProperties\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/lesson.entity.ts\n            \n            class\n            Lesson\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/lesson.entity.ts\n            \n            interface\n            LessonProperties\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/news.entity.ts\n            \n            class\n            CourseNews\n            \n                22 %\n                (4/18)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/news.entity.ts\n            \n            class\n            News\n            \n                26 %\n                (5/19)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/news.entity.ts\n            \n            class\n            SchoolNews\n            \n                22 %\n                (4/18)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/news.entity.ts\n            \n            class\n            TeamNews\n            \n                22 %\n                (4/18)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/news.entity.ts\n            \n            interface\n            INewsProperties\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/role.entity.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/role.entity.ts\n            \n            interface\n            IRoleProperties\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/school.entity.ts\n            \n            class\n            School\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/submission.entity.ts\n            \n            class\n            Submission\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/submission.entity.ts\n            \n            interface\n            ISubmissionProperties\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/task.entity.ts\n            \n            class\n            Task\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/task.entity.ts\n            \n            interface\n            IParentDescriptionsProperties\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/task.entity.ts\n            \n            interface\n            ITaskParent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/task.entity.ts\n            \n            interface\n            ITaskProperties\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/team.entity.ts\n            \n            class\n            Team\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/user.entity.ts\n            \n            interface\n            IUserProperties\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/factory/course.factory.ts\n            \n            variable\n            courseFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/factory/school.factory.ts\n            \n            variable\n            schoolFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/factory/user.factory.ts\n            \n            variable\n            userFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/find-options.ts\n            \n            interface\n            IFindOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/find-options.ts\n            \n            interface\n            IPagination\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/user.ts\n            \n            interface\n            ICurrentUser\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/user.ts\n            \n            interface\n            IResolvedUser\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/user.ts\n            \n            interface\n            IRole\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/types/news.types.ts\n            \n            interface\n            ICreateNews\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/types/news.types.ts\n            \n            interface\n            INewsScope\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/vo/task-with-status.vo.ts\n            \n            class\n            TaskWithStatusVo\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/vo/task-with-status.vo.ts\n            \n            interface\n            ITaskStatus\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/base.repo.ts\n            \n            injectable\n            BaseRepo\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/query/empty-result.query.ts\n            \n            variable\n            EmptyResultQuery\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/scope.ts\n            \n            class\n            Scope\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/scope.ts\n            \n            function\n            createOrQueryFromList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/scope.ts\n            \n            function\n            forceArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/scope.ts\n            \n            function\n            isDefined\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/scope.ts\n            \n            function\n            isDefinedObjectValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/scope.ts\n            \n            function\n            isDefinedQuery\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/scope.ts\n            \n            function\n            useQueryIfValueIsDefined\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @feathersjs/authentication : ^4.5.11\n        \n            @feathersjs/authentication-local : ^4.5.11\n        \n            @feathersjs/configuration : ^4.5.11\n        \n            @feathersjs/errors : ^4.5.11\n        \n            @feathersjs/express : ^4.5.11\n        \n            @feathersjs/feathers : ^4.5.11\n        \n            @feathersjs/socketio : ^4.5.11\n        \n            @golevelup/nestjs-rabbitmq : ^1.17.0\n        \n            @hpi-schul-cloud/commons : ^1.3.3\n        \n            @mikro-orm/core : ^4.5.5\n        \n            @mikro-orm/mongodb : ^4.5.5\n        \n            @mikro-orm/nestjs : ^4.2.0\n        \n            @nestjs/common : ^7.6.15\n        \n            @nestjs/core : ^7.6.13\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/microservices : ^7.6.17\n        \n            @nestjs/passport : ^7.1.5\n        \n            @nestjs/platform-express : ^7.6.13\n        \n            @nestjs/swagger : ^4.8.0\n        \n            @sentry/node : ^6.2.0\n        \n            ajv : ^8.5.0\n        \n            amqp-connection-manager : ^3.2.2\n        \n            amqplib : ^0.8.0\n        \n            arg : ^5.0.0\n        \n            args : ^5.0.1\n        \n            async : ^2.6.0\n        \n            aws-sdk : ^2.970.0\n        \n            axios : ^0.21.0\n        \n            bbb-promise : ^1.2.0\n        \n            bcryptjs : latest\n        \n            body-parser : ^1.15.2\n        \n            chalk : ^4.0.0\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            client-oauth2 : ^4.2.5\n        \n            commander : ^7.2.0\n        \n            compression : ^1.6.2\n        \n            concurrently : ^6.0.0\n        \n            cors : ^2.8.1\n        \n            cross-env : ^7.0.0\n        \n            crypto-js : ^4.0.0\n        \n            disposable-email-domains : ^1.0.56\n        \n            es6-promisify : ^7.0.0\n        \n            eslint-plugin-react : ^7.24.0\n        \n            eslint-plugin-react-hooks : ^4.2.0\n        \n            express : ^4.14.0\n        \n            express-openapi-validator : 4.7.1\n        \n            feathers-hooks-common : ^5.0.3\n        \n            feathers-mongoose : ^6.3.0\n        \n            feathers-swagger : ^1.1.0\n        \n            file-type : ^16.2.0\n        \n            freeport : ^1.0.5\n        \n            html-entities : ^2.1.0\n        \n            jose : ^1.28.1\n        \n            jsonwebtoken : 8.5.1\n        \n            ldapjs : git+https://github.com/hpi-schul-cloud/node-ldapjs.git\n        \n            lodash : ^4.17.19\n        \n            migrate-mongoose : ^4.0.0\n        \n            mixwith : ^0.1.1\n        \n            moment : ^2.19.2\n        \n            mongodb-uri : ^0.9.7\n        \n            mongoose : ^5.13.9\n        \n            mongoose-delete : ^0.5.4\n        \n            mongoose-diff-history : git+https://github.com/schul-cloud/mongoose-diff-history.git\n        \n            mongoose-history : ^0.8.0\n        \n            mongoose-id-validator : ^0.6.0\n        \n            mongoose-lean-virtuals : ^0.8.1\n        \n            mongoose-shortid-nodeps : git+https://github.com/leeroybrun/mongoose-shortid-nodeps.git\n        \n            moodle-client : ^0.5.2\n        \n            nanoid : ^3.1.20\n        \n            nestjs-console : ^5.0.1\n        \n            oauth-1.0a : ^2.2.6\n        \n            papaparse : ^5.1.1\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            prom-client : ^12.0.0\n        \n            prometheus-api-metrics : ^3.1.0\n        \n            qs : ^6.9.4\n        \n            read-chunk : ^3.0.0\n        \n            redis : ^3.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            request-promise-core : ^1.1.4\n        \n            request-promise-native : ^1.0.3\n        \n            rimraf : ^3.0.2\n        \n            rss-parser : ^3.6.2\n        \n            rxjs : ^6.6.6\n        \n            sanitize-html : ^2.1.0\n        \n            serve-favicon : ^2.3.2\n        \n            service : ^0.1.4\n        \n            socketio-file-upload : ^0.7.0\n        \n            source-map-support : ^0.5.19\n        \n            strip-bom : ^4.0.0\n        \n            swagger-ui-express : ^4.1.6\n        \n            tiny-async-pool : ^1.2.0\n        \n            universal-analytics : ^0.4.17\n        \n            urlsafe-base64 : ^1.0.0\n        \n            uuid : ^8.3.0\n        \n            wait-on : ^5.0.1\n        \n            winston : ^3.2.0\n        \n            xml2js-es6-promise : ^1.1.1\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NewsTargetModel   (apps/.../news.types.ts)\n                        \n                        \n                            SortOrder   (apps/.../find-options.ts)\n                        \n                        \n                            TaskDashBoardPermission   (apps/.../task.uc.ts)\n                        \n                        \n                            TaskParentPermission   (apps/.../task.authorization.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/shared/domain/types/news.types.ts\n    \n        \n            \n                \n                    \n                        \n                        NewsTargetModel\n                    \n                \n                        \n                            \n                                 School\n                            \n                        \n                        \n                            \n                                Value : schools\n                            \n                        \n                        \n                            \n                                 Course\n                            \n                        \n                        \n                            \n                                Value : courses\n                            \n                        \n                        \n                            \n                                 Team\n                            \n                        \n                        \n                            \n                                Value : teams\n                            \n                        \n            \n        \n\n    apps/server/src/shared/domain/interface/find-options.ts\n    \n        \n            \n                \n                    \n                        \n                        SortOrder\n                    \n                \n                        \n                            \n                                 asc\n                            \n                        \n                        \n                            \n                                Value : asc\n                            \n                        \n                        \n                            \n                                 desc\n                            \n                        \n                        \n                            \n                                Value : desc\n                            \n                        \n            \n        \n\n    apps/server/src/modules/task/uc/task.uc.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskDashBoardPermission\n                    \n                \n                        \n                            \n                                 teacherDashboard\n                            \n                        \n                        \n                            \n                                Value : TASK_DASHBOARD_TEACHER_VIEW_V3\n                            \n                        \n                        \n                            \n                                 studentDashboard\n                            \n                        \n                        \n                            \n                                Value : TASK_DASHBOARD_VIEW_V3\n                            \n                        \n            \n        \n\n    apps/server/src/modules/task/uc/task.authorization.service.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskParentPermission\n                    \n                \n                        \n                            \n                                 read\n                            \n                        \n                        \n                            \n                                 write\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            createErrorResponseForBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForUnknownError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createOrQueryFromList   (apps/.../scope.ts)\n                        \n                        \n                            forceArray   (apps/.../scope.ts)\n                        \n                        \n                            isDefined   (apps/.../scope.ts)\n                        \n                        \n                            isDefinedObjectValue   (apps/.../scope.ts)\n                        \n                        \n                            isDefinedQuery   (apps/.../scope.ts)\n                        \n                        \n                            StringToBoolean   (apps/.../string-to-boolean.transformer.ts)\n                        \n                        \n                            useQueryIfValueIsDefined   (apps/.../scope.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createErrorResponseForBusinessError\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForBusinessError(error: BusinessError)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                BusinessError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponseForFeathersError\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForFeathersError(error: FeathersError)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                FeathersError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponseForUnknownError\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForUnknownError(error?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    apps/server/src/shared/repo/scope.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createOrQueryFromList\n                        \n                    \n                \n            \n            \n                \ncreateOrQueryFromList(arrayOfObjects: Array, selectedKey: string, targetKey: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arrayOfObjects\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selectedKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         OrQuery\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forceArray\n                        \n                    \n                \n            \n            \n                \nforceArray(input: Array)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDefined\n                        \n                    \n                \n            \n            \n                \nisDefined(input: T)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDefinedObjectValue\n                        \n                    \n                \n            \n            \n                \nisDefinedObjectValue(object: T, key: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDefinedQuery\n                        \n                    \n                \n            \n            \n                \nisDefinedQuery(input: T)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useQueryIfValueIsDefined\n                        \n                    \n                \n            \n            \n                \nuseQueryIfValueIsDefined(testedDefinedvalue: TT, query: ST)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    testedDefinedvalue\n                                    \n                                            TT\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                            ST\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ST | EmptyResultQueryType\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    apps/server/src/shared/controller/transformer/string-to-boolean.transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        StringToBoolean\n                        \n                    \n                \n            \n            \n                \nStringToBoolean()\n                \n            \n\n\n\n\n            \n                \n                    Decorator to transform a boolish string value to a boolean.\nAccepts: '1', 'true', '0', 'false' with type string only.\n\n\n                    \n                    \n                    \n                        Returns :     PropertyDecorator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHPI Schul-Cloud Server\nDevelop: \nMaster: \nDevelop: \nMaster: \nCodacy: \n\nNestJS application\n\nFind the NestJS applications documentation of this repository at GitHub pages. It contains information about\n\n\nsetup & preconditions\nstarting the application\ntesting\ntools setup (VSCode, Git)\narchitecture\n\nBased on NestJS\nFeathers application\nThis is legacy part of the application!\nBased on Node.js and Feathers\nApplication seperation\nIn order to seperate NestJS and Feathers each application runs in its own express instance. These express instances are then mounted on seperate paths under a common root express instance.\nRoot-Express-App \n├─ api/v1/       --> Feathers-App\n├─ api/v3/       --> NestJS-AppThis ensures that each application can run its own middleware stack for authentication, error handling, logging etc.\nThe mount paths don't have any impact on the routes inside of the applications, e.g. the path /api/v3/news will translate to the inner path /news. That means that in terms of route matching each child application doesn't have to take any measures regarding the path prefix. It simply works as it was mounted to /.\nHowever note that when URLs are generated inside a child application the path prefix has to be prepended. Only then the generated URLs match the appropriate child application, e.g. the path /news has to be provided as the external path /api/v3/news.\nIt is possible (not very likely) that the server api is called with URLs that use the old schema without a path prefix. As a safety net for that we additionally mount the Feathers application as before under the paths:\n\n/ - for internal calls\n/api - for external calls\n\nWhen these paths are accessed an error with context [DEPRECATED-PATH] is logged.\nSetup\nFor more detailed setup instructions, take a look at setup.\nThe whole application setup with all dependencies can be found in System Architecture. It contains information about how different application components are connected to each other.\nDebugger Configuration in Visual Studio Code\nFor more details how to set up Visual Studio Code, read this document.\nHow to name your branch and create a pull request (PR)\n\nTake the Ticket Number from JIRA (ticketsystem.hpi-schul-cloud.org), e.g. SC-999\nName the feature branch beginning with Ticket Number, all words separated by dash \"-\", e.g. feature/SC-999-fantasy-problem\nCreate a PR on branch develop containing the Ticket Number in PR title\nKeep the WIP label as long as this PR is in development, complete PR checklist (is automatically added), keep or increase code test coverage, and pass all tests before you remove the WIP label. Reviewers will be added automatically. For more information check our Definition of Done here.\n\nCommitting\nDefault branch: develop\n\nGo into project folder\nCheckout to develop branch (or clone for the first time)\nRun git pull\nCreate a branch for your new feature named feature/SC-Ticket-ID-Description\nRun the tests (see above)\nCommit with a meaningful commit message(!) even at 4 a.m. and not stuff like \"dfsdfsf\"\nStart a pull request (see above) to branch develop to merge your changes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                GNU AFFERO GENERAL PUBLIC LICENSE\n                   Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. http://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n                        Preamble  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n                   TERMS AND CONDITIONS\nDefinitions.\n\n  \"This License\" refers to version 3 of the GNU Affero General Public License.\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n  The Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\na) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\na) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\na) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nRemote Network Interaction; Use with the GNU General Public License.\n\n  Notwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\nRevised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\n  If the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n                 END OF TERMS AND CONDITIONS\n\n        How to Apply These Terms to Your New Programs  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\nCopyright (C)   \n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see .Also add information on how to contact you by electronic and paper mail.\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\nhttp://www.gnu.org/licenses/.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthorizationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ErrorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeathersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InterceptorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LearnroomModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MongoMemoryDatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServerConsoleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaskModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ValidationModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_exports\n\n\n\ncluster_FeathersModule_providers\n\n\n\ncluster_LearnroomModule\n\n\n\ncluster_LearnroomModule_providers\n\n\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_exports\n\n\n\ncluster_NewsModule_providers\n\n\n\ncluster_ServerConsoleModule\n\n\n\ncluster_ServerConsoleModule_imports\n\n\n\ncluster_ServerConsoleModule_providers\n\n\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_imports\n\n\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nUserModule->ServerModule\n\n\n\n\n\nUserFacade \n\nUserFacade \n\nUserFacade  -->\n\nUserModule->UserFacade \n\n\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nJwtValidationAdapter\n\nJwtValidationAdapter\n\nAuthModule -->\n\nJwtValidationAdapter->AuthModule\n\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nLogger \n\nLogger \n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\n\n\nDashboardUc\n\nDashboardUc\n\n\n\nLearnroomModule\n\nLearnroomModule\n\nLearnroomModule -->\n\nDashboardUc->LearnroomModule\n\n\n\nServerModule -->\n\nLearnroomModule->ServerModule\n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\nServerModule -->\n\nNewsModule->ServerModule\n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\n\n\nServerConsoleModule\n\nServerConsoleModule\n\nServerConsoleModule -->\n\nServerModule->ServerConsoleModule\n\n\n\n\n\nConsoleWriter\n\nConsoleWriter\n\nServerConsoleModule -->\n\nConsoleWriter->ServerConsoleModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nServerModule -->\n\nMailModule->ServerModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\n\n\nCourseRepo\n\nCourseRepo\n\nTaskModule -->\n\nCourseRepo->TaskModule\n\n\n\n\n\nTaskAuthorizationService\n\nTaskAuthorizationService\n\nTaskModule -->\n\nTaskAuthorizationService->TaskModule\n\n\n\n\n\nTaskRepo\n\nTaskRepo\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\nRoleRepo\n\nRoleRepo\n\nUserModule -->\n\nRoleRepo->UserModule\n\n\n\n\n\nRoleUC\n\nRoleUC\n\nUserModule -->\n\nRoleUC->UserModule\n\n\n\n\n\nUserFacade\n\nUserFacade\n\nUserModule -->\n\nUserFacade->UserModule\n\n\n\n\n\nUserRepo\n\nUserRepo\n\nUserModule -->\n\nUserRepo->UserModule\n\n\n\n\n\nUserUC\n\nUserUC\n\nUserModule -->\n\nUserUC->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        16 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    28 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    57 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    40 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTechnical TODO around Nest Introduction\nSUGGESTED\n\nfilter logs by request with reflect-metadata (see mikroorm em setup)\ndisable Document from window\nfind a name for base entity id type\nfind a name for base entity class\ndecide if we want to use our entity id type in all layers (also in dtos etc.)\nuse index.ts files to bundle exports - we could use path names for imports then, e.g. @shared/domain\ncheck how we can implement mandatory/optional fields in dtos\nshould we use Expose() as default in dtos?\nin the controller we have to prohibit serialization of properties that have no @EXPOSE\nfind the best way ORM entity discovery\ndecide where to put domain interfaces (directory)\nhow can we log validation errors during development?\nsanitizer\nremove non-node async library\nfix async cleanup & remove timeout in tests\ntest object creator for nest entities\nenable log only for failed tests: https://stackoverflow.com/a/61909588\nremove sentry from code\nremove mongoose history (keep one)\nremove custom npm packages (ldap, ...)\ne2e default tests to extend: auth required, fails without/succeeds with\n\nACCEPTED\n\ndocumentation\n\nentity constructor\nem to be used in repositories only (!!!)\n\n\nload/perf test\n\ndisable legacy ts support (app, tests)\n\nfix .env/config for windows\n\n\nMERGE\n\napi path prefix cleanup: remove middleware and multiple path mounts, sync with nest\nuser module stucture\nsingle domain: shared entity (main.ts), shared repository \nrequest.user.user in jwt strategy\nremove outdated sorting.ts \nremove default launch/settings json files, apply them\nfix https://github.com/hpi-schul-cloud/schulcloud-server/pull/2729#pullrequestreview-699615164\n\nSELECTED\n\ntest shared / core module \n\nasync test fixes (remove this.timeout and red promise chains)\n\ndb configuration\n\nkeep mongoose options as mongo options\npovider for mikroorm options and db url\ntest db provider\nentity discovery\ncheck indexes in mikroorm: when are they updated?\nteardown (test, server module, main.ts)\nreplikaset for test module\nentity discovery\n\n\nnews\n\nuc cleanup: 2auth, visibilities\ndocument best practices/layers/orm\n\n\ncontext: user-/request-context (see mikroorm/asynclocalstorage)\n\n\nDONE\n\ncheck build & start for production with ops\nfix jest, linter, ...\ninject APP_FILTER (exception handler) and APP_INTERCEPTOR (logger), see core module\ncustom error handling (log/response), see global-error.filter.ts\nwatch docs should hot reload on md file change\n404 error handling in feathers has to be replaced (tests too). better: have nest before feathers... but seems not to be working\nremove mongoose\npublish documentation, see https://hpi-schul-cloud.github.io/schulcloud-server/overview.html\nfix all tests (nest/legacy)\nremove legacy scripts from package json (except tests) goal: have separated tests (legacy/nest) but only execute the nest app\nusing legacy database connection string\nv3 with/-out slash: diffenrent routes should respond with different result (/v3 is a resssource, /v3/ === /v3/index)\nvscode/lauch files: we put only default files into the repo\nnaming of dtos and dto-files: api vs domain, we leave out \"dto\" suffix for simplicity (we know that they are dtos) and instead append a specific suffix:\ne.g.\napi: , , \ndomain: , \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConnectionOptions   (apps/.../types.ts)\n                        \n                        \n                            Counted   (apps/.../counted.ts)\n                        \n                        \n                            DashboardProps   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            EmptyResultQueryType   (apps/.../scope.ts)\n                        \n                        \n                            EntityId   (apps/.../entity-id.ts)\n                        \n                        \n                            FeathersServiceParams   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            FeathersServiceResponse   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            GridElementReferenceMetadata   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            IPermissionsAndRoles   (apps/.../user.ts)\n                        \n                        \n                            IUpdateNews   (apps/.../news.types.ts)\n                        \n                        \n                            MongoDatabaseModuleOptions   (apps/.../types.ts)\n                        \n                        \n                            NewsTarget   (apps/.../news.types.ts)\n                        \n                        \n                            OrQuery   (apps/.../scope.ts)\n                        \n                        \n                            Permission   (apps/.../news.uc.ts)\n                        \n                        \n                            QueryObject   (apps/.../scope.ts)\n                        \n                        \n                            RabbitMqModuleOptions   (apps/.../mail.module.ts)\n                        \n                        \n                            Role   (apps/.../ResolvedUser.dto.ts)\n                        \n                        \n                            SortOrderMap   (apps/.../find-options.ts)\n                        \n                        \n                            SourceType   (apps/.../news.response.ts)\n                        \n                        \n                            Strategies   (apps/.../auth.decorator.ts)\n                        \n                        \n                            ValueOf   (apps/.../value-of.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/modules/database/types.ts\n    \n    \n        \n            \n                \n                    \n                    ConnectionOptions\n                \n            \n            \n                \n                    connection options not to be used in module options for the in memory db module as it is overriding the connection\n\n                \n            \n            \n                \n                        \"type\" | \"driver\" | \"clientUrl\" | \"dbName\" | \"user\" | \"password\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MongoDatabaseModuleOptions\n                \n            \n            \n                \n                            Omit\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/counted.ts\n    \n    \n        \n            \n                \n                    \n                    Counted\n                \n            \n            \n                \n                    Counted numbers inform about total counts beside the amount of items in T.\n\n                \n            \n            \n                \n                        [T, number]\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/entity/dashboard.entity.ts\n    \n    \n        \n            \n                \n                    \n                    DashboardProps\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GridElementReferenceMetadata\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/shared/repo/scope.ts\n    \n    \n        \n            \n                \n                    \n                    EmptyResultQueryType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OrQuery\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QueryObject\n                \n            \n            \n                \n                        Record>\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/entity-id.ts\n    \n    \n        \n            \n                \n                    \n                    EntityId\n                \n            \n            \n                \n                    Entity id type\n\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    apps/server/src/modules/feathers/feathers-service.provider.ts\n    \n    \n        \n            \n                \n                    \n                    FeathersServiceParams\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FeathersServiceResponse\n                \n            \n            \n                \n                        Record | any[]\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/interface/user.ts\n    \n    \n        \n            \n                \n                    \n                    IPermissionsAndRoles\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/news.types.ts\n    \n    \n        \n            \n                \n                    \n                    IUpdateNews\n                \n            \n            \n                \n                    news interface for updating news\n\n                \n            \n            \n                \n                            Partial\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NewsTarget\n                \n            \n            \n                \n                        School | Team | Course\n\n                \n            \n        \n    \n    apps/server/src/modules/news/uc/news.uc.ts\n    \n    \n        \n            \n                \n                    \n                    Permission\n                \n            \n            \n                \n                        \"NEWS_VIEW\" | \"NEWS_EDIT\"\n\n                \n            \n        \n    \n    apps/server/src/modules/mail/mail.module.ts\n    \n    \n        \n            \n                \n                    \n                    RabbitMqModuleOptions\n                \n            \n            \n                \n                        Omit\n\n                \n            \n        \n    \n    apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts\n    \n    \n        \n            \n                \n                    \n                    Role\n                \n            \n            \n                \n                            IRole\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/interface/find-options.ts\n    \n    \n        \n            \n                \n                    \n                    SortOrderMap\n                \n            \n            \n                \n                            Partial>\n\n                \n            \n        \n    \n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n    \n        \n            \n                \n                    \n                    SourceType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n    \n        \n            \n                \n                    \n                    Strategies\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/value-of.ts\n    \n    \n        \n            \n                \n                    \n                    ValueOf\n                \n            \n            \n                \n                    The type of the values in T (counterpart to keyof)\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ALL_ENTITIES   (apps/.../all-entities.ts)\n                        \n                        \n                            Authenticate   (apps/.../auth.decorator.ts)\n                        \n                        \n                            bootstrap   (apps/.../console.ts)\n                        \n                        \n                            config   (jest.config.ts)\n                        \n                        \n                            config   (apps/.../swagger.ts)\n                        \n                        \n                            courseFactory   (apps/.../course.factory.ts)\n                        \n                        \n                            createCurrentTestUser   (apps/.../createCurrentTestUser.ts)\n                        \n                        \n                            createErrorResponse   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForHttpException   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createMikroOrmModule   (apps/.../mongo-memory-database.module.ts)\n                        \n                        \n                            createRabbitMqModule   (apps/.../mail.module.ts)\n                        \n                        \n                            createTestModule   (apps/.../create-test.module.ts)\n                        \n                        \n                            CurrentUser   (apps/.../auth.decorator.ts)\n                        \n                        \n                            DEFAULT   (apps/.../course.entity.ts)\n                        \n                        \n                            delay   (apps/.../create-test.module.ts)\n                        \n                        \n                            EmptyResultQuery   (apps/.../empty-result.query.ts)\n                        \n                        \n                            enableOpenApiDocs   (apps/.../swagger.ts)\n                        \n                        \n                            isBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isTechnicalError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            jwtConstants   (apps/.../constants.ts)\n                        \n                        \n                            NEWS_SOURCES   (apps/.../news.response.ts)\n                        \n                        \n                            NOT_FOUND_ERROR_TYPE   (apps/.../server-error-types.ts)\n                        \n                        \n                            REQUEST_TIMEOUT   (apps/.../constants.ts)\n                        \n                        \n                            schoolFactory   (apps/.../school.factory.ts)\n                        \n                        \n                            serverErrorTypes   (apps/.../server-error-types.ts)\n                        \n                        \n                            STRATEGIES   (apps/.../auth.decorator.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../create-news.params.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../news-filter.query.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../news.response.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                            usedGlobals   (apps/.../database.config.ts)\n                        \n                        \n                               (apps/.../database.config.ts)\n                        \n                        \n                               (apps/.../server-error-types.ts)\n                        \n                        \n                               (apps/.../constants.ts)\n                        \n                        \n                            userFactory   (apps/.../user.factory.ts)\n                        \n                        \n                            writeErrorLog   (apps/.../global-error.filter.ts)\n                        \n                        \n                            writeValidationErrors   (apps/.../global-error.filter.ts)\n                        \n                        \n                               (apps/.../jwt-validation.adapter.ts)\n                        \n                        \n                               (apps/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/shared/domain/entity/all-entities.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ALL_ENTITIES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n\tCourse,\n\tCourseGroup,\n\tDashboardModelEntity,\n\tDashboardGridElementModel,\n\tDefaultGridReferenceModel,\n\tFile,\n\tLesson,\n\tRole,\n\tSchool,\n\tSubmission,\n\tTask,\n\tTeam,\n\tUser,\n\tCourseNews,\n\tNews,\n\tSchoolNews,\n\tTeamNews,\n]\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Authenticate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...strategies: Strategies) => {\n\tif (strategies.includes('jwt')) {\n\t\tconst decorators = [\n\t\t\t// apply jwt authentication\n\t\t\tUseGuards(JwtAuthGuard),\n\t\t\t// add jwt authentication to openapi spec\n\t\t\tApiBearerAuth(),\n\t\t];\n\t\treturn applyDecorators(...decorators);\n\t}\n\tthrow new ForbiddenException('jwt strategy required');\n}\n                    \n                \n\n            \n                \n                    Authentication Decorator taking care of require authentication header to be present, setting up the user context and extending openAPI spec.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((data: unknown, ctx: ExecutionContext) => {\n\tconst { user }: Request = ctx.switchToHttp().getRequest();\n\tif (!user)\n\t\tthrow new UnauthorizedException(\n\t\t\t'CurrentUser missing in request context. This route requires jwt authentication guard enabled.'\n\t\t);\n\treturn user as ICurrentUser;\n})\n                    \n                \n\n            \n                \n                    Returns the current authenticated user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STRATEGIES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ['jwt'] as const\n                    \n                \n\n\n        \n    \n\n    apps/server/src/console/console.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BootstrapConsole({\n\tmodule: ServerConsoleModule,\n\tuseDecorators: true,\n})\n                    \n                \n\n            \n                \n                    The console is starting the application wrapped into commander.\nThis allows adding console commands to execute provider methods.\n\n                \n            \n\n        \n    \n\n    jest.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Config.InitialOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n\tmoduleFileExtensions: ['js', 'json', 'ts'],\n\trootDir: '.',\n\t/* we have tests in src/...*.spec.ts and test/...*.e2e-spec.ts either we test all files via `npm run nest:test` or override the regex in npm scripts to separate the execution via `npm run nest:test:spec` or `npm run nest:test:e2e` */\n\ttestRegex: '\\\\.(e2e-)?spec\\\\.ts$',\n\t// ignore legacy mocha tests\n\ttestPathIgnorePatterns: ['^src', '^test'],\n\ttransform: {\n\t\t'^.+\\\\.(t|j)s$': 'ts-jest',\n\t},\n\tcollectCoverageFrom: ['apps/**/*.(t|j)s'],\n\tcoverageDirectory: './coverage',\n\tcoveragePathIgnorePatterns: ['.module.ts$', 'index.ts$', 'spec.ts$', 'main.ts$'],\n\tcoverageThreshold: {\n\t\tglobal: {\n\t\t\tbranches: 80,\n\t\t\tfunctions: 80,\n\t\t\tlines: 80,\n\t\t\tstatements: -10,\n\t\t},\n\t\t// add custom paths: './apps/server/path...': { branches: X, functions: ... }\n\t},\n\ttestEnvironment: 'node',\n\t// detectOpenHandles: true,\n\t// detectLeaks: true,\n\troots: ['/apps/'],\n\tmoduleNameMapper: {\n\t\t// add ts-config path's here as regex\n\t\t'^@shared/(.*)$': '/apps/server/src/shared/$1',\n\t\t'^@src/(.*)$': '/apps/server/src/$1',\n\t},\n\tmaxWorkers: 2, // limited for not taking all workers within of a single github action\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('ts-jest/utils')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('./tsconfig.json')\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/controller/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DocumentBuilder()\n\t.setTitle('HPI Schul-Cloud Server API')\n\t.setDescription('This is v3 of HPI Schul-Cloud Server. Checkout /docs for v1.')\n\t.setVersion('3.0')\n\t/** set authentication for all routes enabled by default */\n\t.addBearerAuth({ type: 'http', scheme: 'bearer', bearerFormat: 'JWT' })\n\t.build()\n                    \n                \n\n            \n                \n                    \nOpenAPI docs setup\n\nThey will be generated by Controller routes\nand DTOs/Entities passed. Their properties\nmust use @ApiProperty\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enableOpenApiDocs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (app: INestApplication, path: string): void => {\n\tconst document = SwaggerModule.createDocument(app, config);\n\tSwaggerModule.setup(path, app, document);\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/domain/factory/course.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        courseFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tbuild: (props?: {\n\t\tname?: string;\n\t\tdescription?: string;\n\t\tcolor?: string;\n\t\tschool?: School;\n\t\tstudents?: User[];\n\t\tteachers?: User[];\n\t\tsubstitutionTeachers?: User[];\n\t}): Course => {\n\t\tconst course = new Course({\n\t\t\tname: 'course #1',\n\t\t\tdescription: 'course #1 description',\n\t\t\tcolor: '#FFFFFF',\n\t\t\tschool: schoolFactory.build(),\n\t\t\t...(props || {}),\n\t\t});\n\t\treturn course;\n\t},\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/user/utils/createCurrentTestUser.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createCurrentTestUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n\tinitPermissions?: string[]\n): {\n\tcurrentUser: ICurrentUser;\n\tuser: User;\n\troles: Role[];\n} => {\n\tconst accountId = new ObjectId().toHexString();\n\tconst school = schoolFactory.build();\n\tschool._id = new ObjectId();\n\tschool.id = school._id.toHexString();\n\tconst userIdObject = new ObjectId();\n\tconst userId = userIdObject.toHexString();\n\n\tconst permissions = initPermissions || ['A', 'B'];\n\tconst roles = [new Role({ name: 'name', permissions })] as Role[];\n\tconst roleIds = roles.map((role) => role.id);\n\n\tconst user = new User({ email: `Date.now()@email.de`, roles, school });\n\tuser._id = userIdObject;\n\tuser.id = userId;\n\tconst resolvedUser = ResolvedUserMapper.mapToResponse(user, permissions, roles);\n\n\tconst currentUser = { userId, roles: roleIds, schoolId: school.id, accountId, user: resolvedUser } as ICurrentUser;\n\treturn { currentUser, user, roles };\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createErrorResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: unknown, logger: Logger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create response from unknown error\n\t\treturn createErrorResponseForUnknownError(error);\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponseForHttpException\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n}\n                    \n                \n\n            \n                \n                    Creates ErrorResponse from NestJS build in technical exceptions\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBusinessError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFeathersError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTechnicalError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n}\n                    \n                \n\n            \n                \n                    Compare helper to detect an error is a build in NestJS http exception.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeErrorLog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: unknown, logger: Logger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tif (error instanceof ApiValidationError) {\n\t\t\t\twriteValidationErrors(error, logger);\n\t\t\t} else {\n\t\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t\t}\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValidationErrors\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: ApiValidationError, logger: Logger) => {\n\tconst errorMsg = error.validationErrors.map(\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t(e) => `Wrong property ${e.property} got ${e.value} : ${JSON.stringify(e.constraints)}`\n\t);\n\tlogger.error(errorMsg, error.stack, 'API Validation Error');\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createMikroOrmModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (options: MikroOrmModuleSyncOptions): DynamicModule => {\n\tconst mikroOrmModule = MikroOrmModule.forRootAsync({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: MongoMemoryServer,\n\t\t\t\tuseFactory: () => {\n\t\t\t\t\treturn new MongoMemoryServer();\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tuseFactory: async (mongod: MongoMemoryServer) => {\n\t\t\tconst clientUrl = await mongod.getUri();\n\t\t\treturn {\n\t\t\t\t...options,\n\t\t\t\ttype: 'mongo',\n\t\t\t\tclientUrl,\n\t\t\t};\n\t\t},\n\t\tinject: [MongoMemoryServer],\n\t});\n\n\t// TODO maybe we can find a better way to export the MongoMemoryServer provider\n\t// currently we cannot specify the export otherwise because MikroOrmModuleSyncOptions doesn't provide an export option\n\tconst mikroOrmCoreModule = (mikroOrmModule.imports || [])[0] as DynamicModule;\n\tif (mikroOrmCoreModule) {\n\t\tmikroOrmCoreModule.exports ||= [];\n\t\tmikroOrmCoreModule.exports.push(MongoMemoryServer);\n\t}\n\n\treturn mikroOrmModule;\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/mail/mail.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createRabbitMqModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (options: RabbitMqModuleOptions) => {\n\tconst rabbitMqModule = RabbitMQModule.forRoot(RabbitMQModule, {\n\t\texchanges: [\n\t\t\t{\n\t\t\t\tname: options.exchange,\n\t\t\t\ttype: 'direct',\n\t\t\t},\n\t\t],\n\t\turi: options.uri,\n\t});\n\treturn rabbitMqModule;\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/common/interceptor/test/create-test.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createTestModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (interceptor: NestInterceptor): Promise => {\n\treturn Test.createTestingModule({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\t\tuseValue: interceptor,\n\t\t\t},\n\t\t],\n\t\tcontrollers: [DelayController],\n\t}).compile();\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (ms) => new Promise((resolve) => setTimeout(resolve, ms))\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/domain/entity/course.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tcolor: '#ACACAC',\n\tname: 'Kurse',\n\tdescription: '',\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/repo/query/empty-result.query.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EmptyResultQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { $and: [{ _id: false }] }\n                    \n                \n\n            \n                \n                    When this query is added ($and) to an existing query,\nit should ensure an empty result\n\n                \n            \n\n        \n    \n\n    apps/server/src/modules/authentication/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         JwtConstants\n\n                    \n                \n                \n                    \n                        Default value : {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : externalAuthConfig\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NEWS_SOURCES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ['internal', 'rss'] as const\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TARGET_MODEL_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(NewsTargetModel)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/core/error/server-error-types.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NOT_FOUND_ERROR_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IErrorType\n\n                    \n                \n                \n                    \n                        Default value : {\n\ttype: 'NOT_FOUND_ERROR',\n\ttitle: 'Not Found',\n\tdefaultMessage: 'The requested ressource has not been found.',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverErrorTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : legacyErrorTypes\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : serverErrorTypes\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/common/interceptor/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REQUEST_TIMEOUT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Configuration.get('REQUEST_TIMEOUT') as number\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : config\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/domain/factory/school.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        schoolFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tbuild: (props?: { name?: string }): School => {\n\t\tconst school = new School({\n\t\t\tname: 'school #1',\n\t\t\t...props,\n\t\t});\n\t\treturn school;\n\t},\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/news/controller/dto/create-news.params.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TARGET_MODEL_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(NewsTargetModel)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/news/controller/dto/news-filter.query.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TARGET_MODEL_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(NewsTargetModel)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/config/database.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        usedGlobals\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GlobalConstants\n\n                    \n                \n                \n                    \n                        Default value : globals\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : usedGlobals\n                    \n                \n\n            \n                \n                    Database URL\n\n                \n            \n\n        \n    \n\n    apps/server/src/shared/domain/factory/user.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tbuild: (props?: { firstName?: string; lastName?: string; email?: string }): User => {\n\t\tconst user = new User({\n\t\t\tfirstName: 'John',\n\t\t\tlastName: 'Doe',\n\t\t\temail: `user.${Date.now()}@example.com`,\n\t\t\troles: [],\n\t\t\tschool: schoolFactory.build(),\n\t\t\t...props,\n\t\t});\n\t\treturn user;\n\t},\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : jwtWhitelist\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application.html":{"url":"additional-documentation/nestjs-application.html","title":"additional-page - NestJS Application","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHPI Schul-Cloud NestJS server\nThis application extends the existing server-application based on feathers and express by introducing dependency injection supporting unit testing and modularization, the possibility to develop against interfaces, and start implementation of modules using TypeScript.\nYou find the whole documentation published as GitHub Page\nRequirements\n\nNode.js (see .nvmrc for version)\nMongoDB (4.x)\nRabbitMQ (configure using RABBITMQ_URL, see default.schema.json)\n\npreconditions\n\nHave a MongoDB started, run mongod \nHave some seed data in datase, use npm run setup to reset the db and apply seed data\nHave RabbitMQ started, run docker run -d -p 5672:5672 -p 15672:15672 --name rabbitmq rabbitmq:3.8.9-management. This starts RabbitMQ on port 5672 and a web admin console at localhost:15672 (use guest:guest to login).\n\nHow to start the application\nBeside existing scripts, for the nestJS application the following scripts have been added. Try not changing the scripts as they should match what NestJS defines by default. Execute npm run ...\n\nnest:prebuild remove existing data from previous build\nnest:build compile the applications typescript ressources from apps/server to dist folder, keeps legacy js-code where it is\nnest:build:all currently executes nest:build, could additionaly build static assets\nnest:start starts the nest application on localhost:3030\nnest:start:dev run application without build from sources in dev-mode with hot-reload\nnest:start:debug run application in dev-mode with hot-reload and debug port opened on port :9229\nnest:start:prod start applicaiton in production mode, requires nest:build to be executed beforehand\n\nHow to build and serve the documentation\n\nnest:docs:build builds code documentation and module relations into /documentation folder\nnest:docs:serve builds code documentation and module relations into /documentation folder and serves it on port :8080 with hot reload on changes\n\nHow to start the server console\nThe console offers management capabilities of the application.\n\nnest:console after nest:build in production or\nnest:console:dev for development\n\nTo run a specific command run npm run nest:console:dev -- command . The --is required for npm to send params to the console. Use --helpto get an overview about existing commands.\nHow to test the nest-application with jest\n NestJS must not use _.test.[ts|js] as filename but instead either *.spec.ts for unit-tests beside tested files or *.e2e-spec.ts in test folder for end-to-end tests. This ensures legacy/feathers/mocha tests can be separated from jest test suites.\nThe application must pass the following statement which executes separate checks:\n\nnest:test executes all jest (NestJS) tests with coverage and eslint\n\nTo test a subset, use\n\nnest:test:all execute unit and e2e tests \n\nnest:test:e2e execute e2e tests only\n\nnest:test:spec execute unit tests (without e2e) only\n\nnest:test:cov executes all jest tests with coverage check\n\nnest:test:watch executes changed tests again on save\n\nnest:test:debug executes tests with debugging\n\nnest:lint run eslint to report linter issues and apply formatting\n\nnest:lint:fix run eslint to report and auto-fix fixable linter issues and apply formatting\n\n\nQuality gates\nWith coverage on tests and static code analysis we ensure some quality gates which are all handled by running nest:test:\n\nESLint with prettier ensures formatting and static code analysis to pass, see .eslintrc.js for details.\nTests ensure functional requirements via unit & e2e tests.\nCoverage on tests ensures a coverage of 80% on NestJS code, see jest.config.ts for details.\n\nGates are part of pull request checks.\nOpenAPI documentation\nThe NestJS applicaiton serves a documentation at :3030/v3/docs. The JSON-representation can be found at /v3/docs-json to be used for generating a client application.\nLegacy/feathers Swagger UI documentation when running the server locally, it is served at :3030/docs/.\nLegacy (feathers) testing with mocha\n\nnpm run test\nTo run a single test, use npm run mocha-single -- .\n\nHow to get full documentation\nThe documentation is provided by compodoc, run npm run nest:docs:serve, check generated compodoc features, custom information can be found in additional information section. Your console will tell you, where it is served.\nThe updated documentation is published as GitHub Page\nContent\nFor further reading, browse apps/server/doc.\nNestJS CLI\nTo use the NestJS CLI, install the nest cli globally.\n$ npm i -g @nestjs/cliThen you may use features like nest g service foo within of /apps/server/src.\nDebugging\nThere are launch configurations available for VSCode in .vscode/launch.default.json\nTech Stack\nFeel free to find related documentation:\n\nhttps://nestjs.com/\nhttps://jestjs.io/\nhttps://mikro-orm.io/\nhttps://min.io/\nhttps://www.rabbitmq.com/\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/software-architecture.html":{"url":"additional-documentation/nestjs-application/software-architecture.html","title":"additional-page - Software Architecture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSoftware Architecture\nGoals\nOur architecture aims to achieve the following goals:\n\ndecouple the business logic from any protocol, framework or technology specific code\nmakes business code easier to understand and test\nmakes code easier to maintain and change\n\n\nDefine standard solutions for cross-cutting-concerns and implement them once, for example:\nerror handling\nlogging\ntransaction handling\nAPI documentation and validation\n\n\n\nPrinciples\nOur architecture is based on the following principles:\n\nComponent Oriented DesignWe follow a strictly component oriented design to address the following sub-principles:\nSeparation of Concerns\nReusability and avoiding redundant code\nInformation Hiding via component API and its exchangeable implementation treated as secret.\nDesign by Contract for self-contained, descriptive, and stable component APIs.\nLayering as well as separation of business logic from technical code for better maintenance.\nData Sovereignty (and high cohesion with low coupling) says that a component is responsible for its data and changes to this data shall only happen via the component. Otherwise maintenance problems will arise to ensure that data remains consistent. Therefore interfaces of a component that may be used by other components are designed call-by-value and not call-by-reference.\n\n\nHomogeneitySolve similar problems in similar ways and establish a uniform code-style.\n\nOverview\nThe following figure shows the general architecture approach for the HPI-Schul-Cloud. It contains two different architecture categories (business architecture and technical architecture), which are described in more detail bellow.\n\nBusiness Architecture\nThe business architecture divides the application into business components. A business component has a well-defined responsibility that it encapsulates. All aspects related to that responsibility have to be implemented within that business component. Further the business architecture defines the dependencies between the business components. These dependencies need to be free of cycles. A business component exports his functionality via well-defined interfaces as a self-contained API. A business component may use another business component via its API and compliant with the dependencies defined by the business architecture.\nThe business components in the architecture should be the output of the business architecture created and managed by the product owner and it must stay aligned with the implementation to provide actual value. If their components are hard to implement (e.g. because technically, there is a very high cohesion between two components), the business component model should be changed. The business architecture has a very high impact on the solution and should therefore (especially in a agile environment) be the result of a mix team (business and development).\nThe application might contain components, which are not part of the business architecture, but have a technical background (e.g. a complex adapter component used to connect to an external system).\nTechnical Architecture\nThe technical architecture **divides the application into technical ****layers** based on the multilayered architecture. A layer is a unit of code with the same category such as service or presentation logic. A layer is therefore often supported by a technical framework. Each business component can therefore be split into *component parts* for each layer.\nComponents\nFollowing separation-of-concerns we divide an application into components using our folder-conventions and the architecture-mapping (see Architecture Mapping to Code). Components must use the UseCase-Facade of other components to communicate with them. Never access any other code from a different component directly.\nFor the HPI Schul-Cloud, we have two major types of components\nBusiness Components\nThese usually manage one or more entities and provide the related business logic to other components and external systems.\nAdapter Components\nAdapter components encapsulate interactions with external systems:\n\nrequests to an external system like a chat system, microservices etc.\nrequests from external systems, but only if:\nthe external system needs a specific API (e.g. a public standard for user/class management)\nthere are other (non-)functional requirements, which make it reasonable to encapsulate the interface into its own component, for example:\na reporting API, which aggregates data of multiple components\nAPIs, which have different security requirements\n\n\nOtherwise, the standard API provided by business components should be used\n\n\n\nHow to use Components\nCommunication between components\nIf component B needs anything from component A, it must always access it using the UseCase Facade of A. The general rules are:\n\nOnly the logic exposed in the UseCase facade can be invoked by other components. All other logic must not be called directly. This provides a clean and defined interface, which can be tested and validated.\n\naccessing the datalayer directly would heavily impact maintainability and encapsulation\naccessing the service layer makes no sense because it contains protocol specific aspects and overhead, which is not relevant within the application\n\n\nIn some cases, it is reasonable for the service layer of component B to call the UseCase facade of component A directly\n\nfor example if component B has no business logic (like a simple adapter component)\nIn any other situation, you should only put it into the business logic\n\n\n\n\n\n\nProvide dedicated APIs for external systems\nIf external applications can't use the default REST API of the system (e.g. because they expect application specific endpoints), those endpoints are provided as a separate component. For example, if an external MyLearningApp Application want's to connect to the HPI Schul-Cloud, create a new component called \"MyLearningAppAdapter\", which maps the external requests from the app to the internal datamodel and calls the use-case facade. Additional Hints:\n\nDo not access the Service Layer, the Data-Access Layer or the actual data in the database of the target component from this adapter component. Only access the UseCase-Facade. By doing this, we ensure that there are no side-effects introduced and the logic layer has full control over the business logic/rules.\nThe adapter component can contain it's own logic layer, if there is actual logic related to providing the interface (e.g more complex mapping and validation rules).\nThe adapter component can also contain a data-access layer, which for example caches data for the responses, contains mapping rules or buffers data from requests for processing.\nDo not use any relations, constraints or other dependencies onto the target component(s) on database level and do not query the data directly. Always use the UseCase Facade\n\n\nAn adapter component can contain multiple endpoints (e.g. for users, courses and classes) and the adapter is allowed to access multiple business components (e.g. to retrieve data from users, courses and classes).\n\n The figure above shows the generic setup. As stated above, the adapter component can access additional components\nAccessing an external API / System\nUsually, access to an external system should be encapsulated in it's own component. This adapter component is responsible for the mapping between the internal and external datamodel and all the protocol and system specific logic. The guidelines are:\n\nIn many cases, external system specific logic is encapsulated in it's own adapter component\nThe component should have an abstract name, e.g. instead of \"RocketChatAdapter\", it should be \"ChatAdapter\". That way, we reduce the amount of changes in the code, if we replace the system.\n\n\nThere are cases, in which the client to an external system could be part of a business component. Thats allowed, if the following conditons are true:\nIt will not be reused/called directly by other components. All calls must go through this business components usecase facade and obviously, the logic must fit into the components responsibility.\nit's very simple or tightly related to an entity managed by the business component, e.g.\nif course content is not stored in a database but in a third party LMS. In that case, the external system is the actual \"repository\" of the data and the client for it belongs in the dataaccess layer\na component managing addresses could contain a client which calls an external application to validate addresses.\n\n\n\n\nan adapter component provides a business interface (use case oriented)\nadapter components can provide their own REST API / service layer, but don't have to\nprovided APIs should also be business oriented and not system specific\n\n\nthe actual client and protocol logic (rest client, etc.) is located in the dataaccess layer\nAn adapter component can contain multiple clients for different services (e.g. rocketchat and matrixchat)\nIf a framework encapsulates the protocol specific logic enough, the framework can be used as \"dataaccess layer\"\n\n\nThe dataaccess layer can also contain entites and db repositories. This might be the case if the adapter component caches or buffers data or needs to manage mapping master data/rules\nthe logic layer is usually rather empty and contains only mapping and data-enrichment logic\nIt can also contain logic to determine the correct dataaccess-layer-client (e.g. if bundesland=x, use rocketchat, otherwise use matrix chat)\n\n\n\nScenarios:\nWith Adapter Component\n\nWith Business Component\n\nAccess Legacy Code\nIf you need to access legacy code (not yet migrated to the new architecture), you can do it from the logic layer (preferred) or the service layer (if there is no logic layer or it is only needed for service-layer-mapping)\n\nExtract Component into external system (Microservice)\nThe component approach not only increases the maintainability and test-ability by a large amount, it also allows to extract components into separate applications without large refactorings. The components are already decoupled and the required functionality in the UseCase Facade can be pulled up into the REST-API.\n\nLayers\nUI Layer\nThe UI layer is implemented as single-page-application using the https://nuxtjs.org/ framework, which wraps the https://vuejs.org/ framework. It should contain only logic related to:\n\npresentation\nsimple form validation\nlocalization\n\nThe client architecture uses an atomic design approach. For details, please check the client-architecture documentation.\nService Layer\nThe service layer is responsible for exposing functionality made available by the logical layer to **external consumers **over a network via technical protocols. By doing this, it decouples the logic layer completely from any protocols or frameworks used to provide logic to the outside world. The service layer can actually contain multiple services for all kinds of protocols (e.g. REST, Sockets, Kafka Messages and so on), which all map protocol specific requests to the protocol-independent logic layer.\nThe service layer in the project uses the feathers/express framework to expose RESTful/socket APIs to the legacy client and NUXT client as well as any other authorized consumer.\nThe layer ensures that the API specification contract is fulfilled, but also handles a large set of cross-cutting-concerns. Its most important tasks are:\n\nEnsure authentication, authorization ((Student-,Teacher-,Admin-)Role/Permissions only)\nRequest/Response validation against the API specification\nMapping form the internal data model to the external view (e.g. remove security critical information, technical keys etc.)\nProvide old versions of an API and map to the new business logic (this is not always possible in the service layer)\nGlobal error handling i.e. translates Application Exception into protocol specific errors\nCapture trace-information (e.g. request-id, user) and provide them to the application for logging\ncollect monitoring information (e.g. number of requests, response times, error rates etc)\nRequest/response/error logging\n\nCross-cutting-concerns are actually shared across all components (hence the name), but many of them are hooked (aspect oriented programming) around the services in the service-layer und some need a service-specific configuration. For example, a hook, which does role based authorization, is implemented only once and wraps all services. But it needs to know which roles must be checked for specific services and service operations.\nLogic Layer\nThe logic layer is the heart of the application and contains the main business logic. According to our business architecture we divide an application into components, which contains use-cases. Each component provides a usecase facade, which can be used to trigger the business logic for a use case from either:\n\nthe service layer\nfrom another component.\n\nThe logic layer is responsible for the implementation of the business logic according to the specified functional demands and requirements. It therefore creates the actual value of the application. The following additional aspects are also in its responsibility:\n\nValidation based on business rules. For example:\nParents must provide their consent for students bellow 16 years of age\n\n\nAuthorization and data access rights (scope or user specific permission), for example:\nA teacher are not allowed to see courses or students from other schools\n\n\nChoreography: In general, only the logic layer is allowed to call other components or trigger a call to an external system. Exceptions are possible (e.g. if a component has no business logic and therefore no logic layer)\n\nThe service layer must be free from protocol or database specific code and does not make assumptions about which protocol or client called it or where the data is stored. For example:\n\nthe die business layer must not access any HTTP-request parameters or headers directly. It has a defined interface which contains the data independently from the caller.\nit does not throw HTTP specific errors like 404 NotFound. Instead it throws an application specific error, which is mapped to 404 by the general REST API ErrorHandler\nIt does not create SQL or mongoDB queries. Instead it calls a defined interface and the dataaccess layer transform the input parameters into a DB specific query.\n\nUsing this approach, the business layer, which contains the actual logic, is much easier to test, understand and change. For example, it is possible to write xUnit Tests with no dependencies to DBs or protocols.\nDataaccess Layer\nThe data-access layer is responsible for all outgoing connections to access and process data. This is mainly about accessing data from a persistent data-store but also about invoking external services. It provides a more or less business oriented interface - e.g. findUser(userId)- and translates it into an database or database-framework specific query. No matter which database, database framework or protocol-client you use, the interface of the dataaccess layer should be neutral. That means that your interface must also provide parameters for pagination etc.\nThis approach brings a couple of benefits:\n\nSeparation of Concerns: encapsulates DB queries/requests to external services and allows for testing it separately\nIntroduces an abstraction over DB/protocol Connector/framework\nSeparates DB-specific Query Language and Application Specific Search Criteria\nIncreases security level - the DB is not exposed via Rest API, minimizes chance for Non-SQL/SQL-Injections\n\nBatch Layer\nThe batch layer is basically a service layer, which contains code related to batch processing (bulk-oriented, non-interactive, typically long running execution of tasks). For simplicity the term batch or batch job is used for such tasks in the project.\nThe batch layer is responsible for batch processes, whereas the business logic is implemented in the logic layer. Compared to the service layer you may understand the batch layer just as a different way of accessing the business logic. Batches should invoke use cases in the logic layer for doing their work. Only \"batch specific\" technical aspects should be implemented in the batch layer. Example: For a batch, which imports user data from a CSV file, this means that all code for actually reading and parsing the CSV input file is implemented in the batch layer. The batch calls the use case \"create user\" in the logic layer for actually creating the users for each line read from the CSV input file.\nIn practice it is not always appropriate to create use cases in the logic layer for every bit of work a batch should do. Instead, the data access layer can be used directly. An example for that is a typical batch for data retention which deletes out-of-time data. Often deleting out-dated data is done by invoking a single SQL statement. It is appropriate to implement that SQL in a Repository method (provided by the dataaccess layer interface) and call this method directly from the batch. But be careful that this pattern is a simplification which could lead to business logic cluttered in different layers which reduces maintainability of the application. It is a typical design decision you have to take when designing your specific batches.\nCross Cutting Concerns\n\nError Handling\nAn important part of the layered architecture is the handling of errors. In our architecture, errors should either be:\n\nhandled directly (e.g. retry a failed REST-API-Call after a timeout error occurred)\nBubble up un-catched to the generic error handler in the cross cutting concerns layer (which , which knows how to map this error to an external error and return it to the caller.\nIn case of batch jobs, the batch layer catches the error and knows how to handle it (e.g. restart a job, skip a part of the job, stop the job completely etc).\n\n\n\nPlease check the error handling guidelines for details.\nTransaction Handling\nTransactions can span multiple layers and components. A concept is necessary to execute/rollback those transactions.\nTODO: add a link to the concept and describe how it interacts with layers.\nRequest Context\nMultiple crosscutting concerns make it necessary to introduce a \"request context\". This is a set of request specific variables accessible everywhere within the application during a request. For example:\n\neach request will contain a request-specific trace id, which must be added to log messages and audit log entries\neach request is triggered by a user or a batch job. We need to store this trigger in the audit logs\nif we introduce transactions across multiple components (e.g. users and classes), we need a way to share transaction information between components and store the transaction until a commit\n\nBecause this context is required in all layers (especially in the data access layer for audit logging) and in cross cutting hooks, we need a framework/feature, which makes this available for direct access without adding this object to every method signature as input variable. Luckily, the necessary functionality is now part of nodejs: AsyncLocalStorage.\nThe general approach for rest requests:\n\nA request is received\nA hook initializes the request context\nA hook extracts trace information (e.g. traceid and spanid) from the request and adds it to the request context\nA hook authenticates and authorizes the user and stores basic user information (e.g. user id, maybe general permissions roles) in the request context\nIf the user is not authenticated, a \"guest user\" is set in the content with only guest permissions\nFor batch jobs, a technial user must be set in the request context. For the business logic, the technology, channel and user must be hidden behind the request context.\n\n\nThe normal code is executed and can access the request context\nIf the business logic needs data from the request context, it can access it\ncross cutting logic like audit logging can extract the information. E.g. before the data access layer writes a entity change to the database, it retrieves the trace id and the user id from the request context and adds these information to the entity\nIf we make a call to another service (e.g. calendar), we retrieve the trace id from the request context and add it to the outgoing request\nOur logging abstraction retrieves the trace id from the request context and adds it to the log message before writing it to the logfile (actually the console).\n\n\nAfter the response is sent to the client, the request context is \"destroyed\"\n\nCharacteristics of the context:\n\nIt is request specific and destroyed after the request is processed\nData in it are only accessable by the processing o f a specific request, not any other request of the same user or another user!\nIt should only contain very basic information necessary for cross cutting concerns like logging and audit logging. Do not use it to transport all kinds of business data around\n\nImportant: In order to make the code (and especially the business logic) agnostic to the source of a request, the request context should be considered a \"invocation context\". That means that also batch jobs (time based triggerd requests) and anonymous rest request should work the exact same way. That means that:\n\nwe must setup the request context for batch jobs\nwe need technical users for anonymous requests and batch jobs\nsuper users (super heroes) must use the same mechanisms as normal users (no special permission checks etc)\n\nThat way, we can use the same logic for all invocations and the source of an invocation is isolated within the service layer.\nLogging and Tracing\nFor details see the corresponding logging and tracing guidelines.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{"url":"additional-documentation/nestjs-application/architecture-mapping-to-code.html","title":"additional-page - Architecture Mapping to Code","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nArchitecture mapping to Code\nConventions\nFile structure\nThe server app located in /apps/server is structured like. Beside each ts-file, a test file _.spec.ts has to be added for unit tests (hidden for simplification). Use index.ts files that combine a folders content and export all files from within of the folder using export _ from './file' where this makes sense. When there are naming conflicts, use more specific names and correct concepts. Think about not to create sub-folders, when only one concept exist.\nsrc/ // sourcecode & unit tests\n    - config/  // for global definitions\n    - modules/ // for your NestJS modules\n        - [module] // where [module] could be like user, homework, school\n            - entity/\n                - .entity.ts // (where  might be a user, news, ... owned by the module) exports entity class & document type\n                - .entity.ts // where related-info is a partial of another entity used in the entity above\n                - index.ts // exports all entities\n            - controller/ // where controllers define the api\n                - dto/ // dto's define api in/out types as a class with annotations\n                    - [param|query].ts // (like create-user-param.ts or pagination.query)\n                    - [response].ts // (like create-user-response.ts)\n                    - index.ts // exports all dto's\n                - .controller.ts // defines rest api, references main service file\n                - .controller.ts // think about a new module when require multiple controllers :)\n            - repo/ // repositories take care to load/persist/... entities\n                - schema/ // contains schema imports from legacy app or new definitions (might be replaced by OR mapper)\n                    - .schema.ts // exports (legacy-) mongoose schemas\n                - .repo.ts // where entity might be user, news, school\n            - service/ // for technical dependencies (libraries, infrastructure layer concerns)\n                - .service.ts // the modules main service file, might be exported for other modules\n                - .service.ts // use services not for features\n            - mapper/\n                - .mapper.ts // mapper for a domain entity, should contain mapDomainToResponse and mapFooToDomain\n            - uc/ // preferred for features\n                - .uc.ts // one file per single use case (use a long name)\n            - .module.ts // DI instructions to build the module\n    - shared/ // reused stuff without module ownership\n        - core/ // shared concepts (decorators, pipes, guards, errors, ...) folders might be added\n        - domain // (abstract) domain base entities which will be extended in the modules\n        - util/ // helpers, tools, utils can be located here (but find a better name)\ntest/ // e2e tests against controllers should use same folder names like controllers\nFor concepts (see https://docs.nestjs.com/first-steps) of NestJS put implementations in shared/core. You might use shared/utils for own solutions, assume TextUtils but when it contains text validators, move it better to shared/validators/text.validator.ts before merge. The core concepts of NestJS can be extended with ours (like repo).\nFile naming conventions\nIn TypeScript files: for Classes we use PascalCase (names start with uppercase letter), variables use lowercase for the first letter camelCase.\nWhen assigning names, they may end with a concept name:\n\nA Concept might be a known term which is widely used. Samples from NestJS: Controller, Provider, Module, Middleware, Exception, Pipe, Guard, Interceptor.\n\nBeside we have own concepts like comparator, validator (generic ones should not be part of a modules (and located in shared folder btw) or repo, use-case which might be owned by a module.\n\n\nIn file names, we use lowercase and minus in the beginning and end with ..ts\nSamples\n\n\n\nFile name\nClass name\nConcept\nLocation\n\n\n\n\nlogin-user.uc.ts\nLoginUserUc\nuse case\nmodule/uc\n\n\ntext.validator.ts\nTextValidator\nvalidator\nshared/validators\n\n\nuser.repo.ts\nUserRepo\nrepository\nmodule/repo\n\n\nparse-object-id.pipe.ts\nParseObjectIdPipe\npipe\nshared/pipes\n\n\n\nComponents\nComponents are defined as NestJS Modules. \nCommunication between components\nTo access other modules services, it can be injected anywhere. The usage is allowed only, when the module which owns that service has exported it in the modules definition.\n// modules/feathers/feathers-service.provider.ts\n// modules/feathers/feathers.module.ts\n@Module({\n    providers: [FeathersServiceProvider],\n    exports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\nThe feathers module is used to handle how the application is using legacy services, when access them, inject the FeathersServiceProvider but in your module definition, import the FeathersModule.\n// your module, here modules/authorization/authorization.module.ts\n@Module({\n    imports: [FeathersModule], // here import the services module\n    // providers: [AuthorizationService, FeathersAuthProvider],\n    // exports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n// inside of your service, here feathers-auth.provider.ts\n@Injectable()\nexport class FeathersAuthProvider {\n\n    // inject the service in constructor\n    constructor(private feathersServiceProvider: FeathersServiceProvider) {}\n    \n    // ...\n\n    async getUserTargetPermissions(\n        // ...\n    ): Promise {\n        const service = this.feathersServiceProvider.getService(`path`);\n        const result = await service.get(...)\n        // ...\n        return result;\n    }\nAccess legacy Code\nUse the feathers module introduced above to get access to legacy services.\nIt is important to introduce strong typing like it happened above in the FeathersAuthProvider. While the FeathersServiceProvider from the feathers module, has only an abstract implementation for all services, add a concrete service inside your module for a specific feathers-service, like above in FeathersAuthProvider.\nLayered Architecture\nThe different layers use separately defined objects that must be mapped when crossing layers.\n\nNever export entities through the service layer without DTO-mapping which is defined in the controller\nConcepts owned by a layer must not be shared with other layers\n\n\nFurther reading: https://khalilstemmler.com/articles/software-design-architecture/organizing-app-logic/\nService Layer\nA modules service layer is defined within of controllers.\nThe main responsibilities of a controller is to define the REST API interface as openAPI specification and map DTO's to match the logic layers interfaces.\n    @Post()\n    async create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n        const news = await this.newsUc.create(\n            currentUser.userId,\n            currentUser.schoolId,\n            NewsMapper.mapCreateNewsToDomain(params)\n        );\n        const dto = NewsMapper.mapToResponse(news);\n        return dto;\n    }JWT-Authentication\nFor authentication, use guards like JwtAuthGuard. It can be applied to a whole controller or a single controller method only. Then, ICurrentUser can be injected using the @CurrentUser() decorator.\nValidation\nGlobal settings of the core-module ensure request/response validation against the api definition. Simple input types might additionally use a custom pipe while for complex types injected as query/body are validated by default when parsed as DTO class.\nFile naming\nComplex input DTOs are defined like [create-news].param.ts (class-name: CreateNewsParam) or [pagination].query.ts (class-name: PaginationQuery)\nWhen DTO's are shared between multiple modules, locate them in the layer-related shared folder.\n\nSecurity: When exporting data, internal entities must be mapped to a response DTO class named like [news].response.dto. The mapping ensures which data of internal entities are exported.\n\nopenAPI specification\nDefining the request/response DTOs in a controller will define the openAPI specification automatically. Additional validation rules and openAPI definitions can be added using decorators. For simplification, openAPI decorators should define a type and if a property is required, while additional decorators can be used from class-validator to validate content.\nMapping\nIt is forbidden, to directly pass a DTO to a use-case or return an Entity (or other use-case result) via REST. In-between a mapper must transform the given data, to protect the logic layer from outside implications.\nThe use of a mapper gives us the guarantee, that\n\nno additional data beside the known properties is published.\nA plain object might contain more properties than defined in TS-interfaces.\nSample: All school properties are published while only name & id are intended to be published.\n\n\nthe API definition is complete\n\nLogic (Domain-) Layer\nThe domain layer assumes a kind of higher-level policy that everything else relies on (Source).\n\nThis means, a controller or a repository must fit this layer.\nSpecific goals of a repository, like query optimization must not be a transparent part of the repository only.\n\nData access Layer\nThe data access layer consists of repositories. A repository takes care to persist domain entities defined in the business layer. As we use decorators in entities to define how they are persisted, they are used in this layer too. The repository does not need to map entities like in the presentation layer as it maps data from/to an external system into the domain and to be used from/in the business layer.\n\nIt's not the task of the business layer to fit a repository. A respository should give the logic layer the ability to persist/make available what is defined in the logic layer. The domain model must be independent from a repository (See Clean Architecture).\n\nSpecific concepts from within of this layer must be hidden for the business layer like database queries, protocol specifics, mapping to data layer. Others like putting multiple persistence rules into transactions is part of the domain layer (while how a transaction is implemented, then is part of the data access layer).\nLogic should not be part of a repository, use logic layer instead.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/domain-driven-design.html":{"url":"additional-documentation/nestjs-application/domain-driven-design.html","title":"additional-page - Domain driven design","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDomain driven design\nWhile DDD is not enforced, we still try to follow its goals:\n\nDiscover the domain model by interacting with domain experts and agreeing upon a common set of terms to refer to processes, actors and any other phenomenon that occurs in the domain.\nTake those newly discovered terms and embed them in the code, creating a rich domain model that reflects the actual living, breathing business and it's rules.\nProtect that domain model from all the other technical intricacies involved in creating a web application.\n\nClean Architecture\n \"The Clean Architecture from the golden Uncle Bob archives\"\nFor the 3-layer architecture this means we have to protect the business layer and domain models from the outside world and infrastructure to keep it clean, fast, testable, ready for changes.\nConcepts\nEntities\nNestJS does not cover how to persist entities, the heart of our application. We need a solution that not only transfers data like mongoose, instead we want to define business rules on objects with strong typing added.\nInstead of Interface, Model and Schema which describe the view on data, now we define Entities, that get a DRY possibility to be created, loaded, and persisted using en entity manager. The definition of how an entity relates with others or how it is persisted can be added using decorators.\nSee https://github.com/mikro-orm/mikro-orm#-core-features for further details.\nDomain Services\nDomain Services are most often executed by application layer Application Services / Use Cases. Because Domain Services are a part of the Domain Layer and adhere to the dependency rule, Domain Services aren't allowed to depend on infrastructure layer concerns like Repositories to get access to the domain entities that they interact with. Application Services fetch the necessary entities, then pass them to domain services to run allow them to interact.\nSample: Within of a use case we not depend on a user context from outside while for logging, error handling or in a repository it might be used. Like we see in the clean architecture schema.\nUse Cases\nBeside Concepts NestJS introduces, own services like repositories or use-cases might be created.\nUse cases either return entities (data) to the user through a query (CRUD) or apply a command (do ... ok/err).\nFurther reading: https://khalilstemmler.com/articles/oop-design-principles/command-query-separation/\nThey focus on providing business use cases and should only contain higher logical function calls, that are well-tested and hide their implementation inside of a use-case.\n    /**\n     * Let an existing user create a new user (on same school).\n     * @throws: USER_ALREADY_EXISTS, API_VALIDATION_ERROR\n     * @throws: FORBIDDEN, BAD_REQUEST, INTERNAL_SERVER_ERROR, ...\n     */\n    async registerNewUser(creatorId: EntityId, schoolId: EntityId, props: INewUserProps): Promise {\n        this.logger.log(`create new user called by ${creatorId}`);\n\n        // check creator has permission in school to create user\n        await this.authorizationService.checkEntityPermissions(creatorId, School, schoolId, ['USER_CREATE']);\n\n        // check user not exists\n        await this.userService.checkUserNotExistByEmail(props.email)\n\n        const user = new User(props);\n        await this.userRepo.save(user);\n\n        if(enableUserActivation){\n            // call other service which creates pin and sends email\n        }\n\n        if(sendWelcomeEmailToUser){\n            await this.userEmailService.sendWelcomeMessage(user);\n        }\n\n        this.logger.log(`user ${user.id} created by user ${creatorId}`);\n\n        return user;\n    }\n\n\n    // ... userService\n\n    checkUserNotExistByEmail(email: string){\n        // todo email is not empty\n        const existingUser = await this.userRepo.findByEmail(props.email);\n        if(existingUser.length > 0) {\n            throw new UserAlreadyExistError();\n        }\n    }How to structure a use case? When creating a use case, care of\n\nthe general business goal\npreconditions\nactors, in-put & out-put data\npost conditions to be well-known\nthe normal case (step by step)\nall (handled) exception-cases (to be handled in a client application)\n\nClean Code principles\nA use case should consist only of business-rules and decisions (functional requirements), while the final implementation is part of functions that are called from the use case. There, we no more see any details about the functional requirements.\nDomain events\nEvents have to be handled very carefully or in best case not to be used. Like hooks around services might lead into separating the business logic into independend untestable workflows, the events task and data must be defined clearly and should only be used for independent tasks.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{"url":"additional-documentation/nestjs-application/cross-cutting-concerns.html","title":"additional-page - Cross-cutting concerns","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCross cutting concerns\nThe cross cutting topics are implemented within of the core-module. \nLogging\nFor logging use the logger ServerLogger, provided by the logger module. It is hooked up in the application on startup, replacing the default logger and can be transient injected into any provider by additionally define set a context into the logger.\n// add Logger module to your feature module imports or unit tests\nimport { LoggerModule } from '../core/logger/logger.module';\n// ...\nimports: [LoggerModule],\n// within of a provider (use-case, service, ...)\n\n// import the server logger service\nimport { ServerLogger } from '../core/logger/logger.service';\n\n@Injectable()\nexport class YourUc {\n    constructor(\n        // initialize a ServerLogger\n        private logger: ServerLogger\n    ) {\n        // set the context by this class name (here: 'YourUc')\n        this.logger.setContext(YourUc.name);\n    }\n\n    async sampleUcMethod(params) {\n        this.logger.log(`start do something...`);\n        // ...\n        this.logger.log(`finished successfully to do something...`);\n    }This produces a logging output like\n[Nest] NUMBER - TIME   [YourUc] start do something...\n[Nest] NUMBER - TIME   [YourUc] finished successfully to do something...Later we can filter the log for a single [context].\nA logger does implement the LoggerService interface:\ninterface LoggerService {\n    log(message: any, context?: string): any;\n    error(message: any, trace?: string, context?: string): any;\n    warn(message: any, context?: string): any;\n    debug?(message: any, context?: string): any;\n    verbose?(message: any, context?: string): any;\n}Only a string should be provided as a single parameter by default. Ensure not putting complex objects into a log. Think about persisting more complex results for later analysis into a database.\nOptionally in the second parameter, the context can be overridden only.\nException Handling\n\nWe separate our business exceptions from technical exceptions. While for technical exceptions, we use the predefined HTTPExceptions from NestJS, business exceptions inherit from abstract BusinessException.\nBy default, implementations of BusinessException must define\n    code: 500\n    type: \"CUSTOM_ERROR_TYPE\",\n    title: \"Custom Error Type\",\n    message: \"Human readable details\",\n    // additional: optionalDataThere is a GlobalErrorFilter provided to handle exceptions, which cares about the response format of exceptions and logging. It overrides the default NestJS APP_FILTER in the core/error-module.\nIn client applications, for technical errors, evaluate the http-error-code, then for business exceptions, the type can be used as identifier and additional data can be evaluated.\nFor business errors we use 409/conflict as default to clearly have all business errors with one error code identified.\n\nSample: For API validation errors, 409/Bad Request will be extended with validationError: ValidationError[{ field: string, error: string }] and a custom type API_VALIDATION_ERROR.\n\nPipes can be used as input validation. To get errors reported in the correct format, they can define a custom exception factory when they should produce api validation error or other exceptions, handled by clients.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/testing.html":{"url":"additional-documentation/nestjs-application/testing.html","title":"additional-page - Testing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTesting\nAutomated testing is the essential part of the software development process.\nIt improves the code quality and ensure that the code operates correctly especially after refactoring.\nThe Different Tests\n\n\nOur goal is to test each application layer mostly independent of others.\n\nRepo tests operate on data access layer.\nThey prove that the database queries are executed correctly.\nUse case tests operate on logic layer.\nThey verify the correct implementation of the business requirements.\nMapper tests operate between logic and service layer.\nThey verify the correct mapping between domain objects and objects delivered to the clients via REST API.\nEnd-to-end tests operate on all layers of the application.\nThe testing endpoint is the service layer. These tests verify the availability of the expected endpoints and checks\nthe expected status codes and the structure of the received objects.\n\nGeneral Test Conventions\nLean Tests\nThe tests should be as simple to read and understand as possible. They should be effortless to write and change, in order to not slow down development. Wherever possible:\n\navoid complex logic\ncover only one case per test\nonly use clearly named and widely used helper functions\nstick to blackbox testing: think about the unit from the outside, not its inner workings.\nits okay to duplicate code for each test\n\nNaming Convention\nWhen a test fails, the name of the test is the first hint to the developer (or any other person) to what went wrong where. (along with the \"describe\" blocks the test is in).\nThus, your describe structure and testcase names should be designed to enable a person unfamiliar with the code to identify the problem as fast as possible. It should tell him:\n\nwhat component is being tested\nunder what condition\nthe expected outcome\n\nTo facilitate this, your tests should be wrapped in at least two describe levels.\n// Name of the unit under test\ndescribe(\"Course Service\", (() => {\n    // a \"when...\" sentence\n    describe(\"When a student tries to create a course\", (() => {\n        // a \"should...\" sentence\n        it(\"should fail\", async () => {\n            ...\n        });\n    });\n});Isolation\nEach test should be able to run alone, as well as together with any other tests. To ensure this, it is important that the test does not depend on any preexisting data.\n\nEach test should generate the data it needs, and ensure that its data is deleted afterwards. (this is usually done via mocha's \"afterEach\" function.\nWhen you create objects with fields that have to be globally unique, like the account username, you must ensure the name you choose is unique. This can be done by including a timestamp.\nNever use seeddata.\n\nTest Structure\nYour test should be structured in three seperate areas, each distinguished by at least an empty line:\n\nArrange - set up your testdata\nAct - call the function you want to test\nAssert - check the result\n\nthis is known as the AAA-pattern.\nTesting Samples\nHandling of function return values\nWhen assigning a value to an expect, separate the function call from the expectation to simplify debugging. This later helps when you not know about the return value type or if it's an promise or not. This is good style not only for tests.\n    // doSomethingCrazy : retValue\n    it('bad sample', () => {\n        expect(doSomethingCrazy(x,y,z)).to...\n    })\n    it('good sample', () => {\n        const result = doSomethingCrazy(x,y,z)\n        expect(result).to... // here we can simply debug\n    })\nPromises and Timouts in tests\nWhen using asynchronous functions and/opr promises, results must be awaited within of an async test function instead of using promise chains. While for expexting error conditions it might be helpful to use catch for extracting a value from an expected error, in every case avoid writing long promise chains.\n\nInstead of using done callback, use async test functions.\nUse await instead of (long) promise chains\nnever manually set a timeout\n\n    // doSomethingCrazy : Promise\n    it('bad async sample', async function (done) => {\n        this.timeout(10000);\n        return doSomethingCrazy(x,y,z).then(result=>{\n            expect(result).to...\n            done() // expected done\n        }).catch(()=>{\n            logger.info(`Could not ... ${error}`);\n            done() // unexpected done, test will always succeed which is wrong\n        })\n    })\n    it('good async sample', async () => {\n        // no timeout set\n        const result = await doSomethingCrazy(x,y,z)\n        expect(result).to...\n    })\nTimeouts must not be used, when async handling is correctly defined!\n\nExpecting errors in tests\nWhen expecting an error, you might take values from an error, test for the error type thrown and must care of promises.\n    // doSomethingCrazy : Promise\n    it('bad async sample expecting an error', () => {\n        expect(doSomethingCrazy(x,y,z)).to...\n    })\n    it('good async sample expecting an error value', async () => {\n        const code = await doSomethingCrazy(x,y,z).catch(err => err.code)\n        expect(code).to...\n    })\n    it('good sample expecting an error type from a sync function', () => {\n        expect(() => doSomethingCrazySync(wrong, param)).toThrow(BadRequestException);\n    })\n    it('good sample expecting an error type from an async function', async () => {\n        await expect(doSomethingCrazySync(wrong, param)).rejects.toThrow(BadRequestException);\n    })Testing Utilities\nNestJS:\n\nprovides default tooling (such as test runner that builds an isolated module/application loader)\nprovides integration with Jest and Supertest out of the box\nmakes the Nest dependency injection system available in the testing environment for mocking components\n\nThe @nestjs/testing.Test class provides an execution context that mocks the full Nest runtime, but gives\nhooks that can help to manage class instances, including mocking and overriding.\nThe method Test.createTestingModule() takes module metadata as argument it returns TestingModule instance.\nThe TestingModule instance provides method compile() which bootstraps a module with its dependencies.\nEvery provider can be overwritten with custom provider implementation for testing purposes.\n  beforeAll(async () => {\n      const moduleRef = await Test.createTestingModule({\n          controllers: [SampleController],\n          providers: [SampleService],\n        }).compile();\n\n      sampleService = moduleRef.get(SampleService);\n      sampleController = moduleRef.get(CatsController);\n    });Unit Tests vs Integration Tests\nIn Unit Tests we access directly only the layer which is currently testing.\nOther layers should be mocked or are replaced with default testing implementation.\nEspecially the database access and database calls should be mocked.\nIn contrast to unit tests the integration tests use access to the database and execute\nreal queries using repositories.\nRepo Tests\nFor the data access layer, integration tests can be used to check the repositories base functionality against a database.\nFor Queries care DRY principle, they should be tested very carefully.\n\nUse a in-memory database for testing to allow parallel test execution and have isolated execution of tests.\n\n\nA test must define the before and after state of the data set clearly and cleanup the database after execution to the before state.\n\n\nInstead of using predefined data sets, all preconditions should be defined in code through fixtures.\n\nOur repository layer uses mikro-orm/EntityManager to execute the queries.\nBy testing repositories we want to verify the correct behaviour of the repository functions.\nIt includes verifying expected database state after executed repository function.\nTherefore, the *.repo.integration.spec.js should be used.\nThe basic structure of the repo integration test:\nPreconditions (beforeAll):\n\nCreate Nest JS testing module:\n1.1 with MongoMemoryDatabaseModule defining entities which are used in tests. This will wrap MikroOrmModule.forRoot() with running a MongoDB in memory.\n1.2 provide the repo which should be tested\nGet repo, orm and entityManager from testing module\n\n    import { MongoMemoryDatabaseModule } from '@src/modules/database';\n\n    let repo: NewsRepo;\n    let em: EntityManager;\n    let testModule: TestingModule;\n\n    beforeAll(async () => {\n        testModule: TestingModule = await Test.createTestingModule({    (1)\n             imports: [\n                     MongoMemoryDatabaseModule.forRoot({                 (1.1)\n                    entities: [News, CourseNews, ...],\n                }),\n              ],\n             providers: [NewsRepo],                                     (1.2)\n      }).compile();\n      repo = testModule.get(NewsRepo);                        (2)\n      orm = testModule.get(MikroORM);\n      em = testModule.get(EntityManager);\n    })Post conditions (afterAll), Teardown\nAfter all tests are executed close the app and orm to release the resources by closing the test module.\n    afterAll(async () => {\n        await testModule.close();\n    });\nWhen Jest reports open handles that not have been closed, ensure all Promises are awaited and all application parts started are correctly closed.\n\nMapping Tests\nMapping tests are Unit Tests which verify the correct mapping between entities and Dto objects.\nThese tests should not have any external dependencies to other layers like database or use cases.\nUse Case Tests\nUse case tests are Unit Tests which verify the business logic of the application.\nThe database calls are mocked and spyied. So we can check how and with which parameters the repo functions are called.\n\nUse unit-tests to ensure a use-cases logic matches the given requirements (from a [user-]story).\n\n\nA unit test should cover preconditions, allowed input, the result, and expected exceptions defined by the story, and roughly what happens on malformed input (the execution should stop).\n\nPreconditions\n\nCreate Nest JS testing module\nUse Repo as provider reimplement the repo functions with some default implementations\nProvide other dependencies like AuthorizationService and provide default implementation for the function, which are called.\nGet repo and uc from testing module\n\n      const module: TestingModule = await Test.createTestingModule({ (1)\n            imports: [LoggerModule],\n            providers: [\n                NewsUc,\n                {\n                    provide: NewsRepo,                                  (2)\n                    useValue: {\n                        save() {\n                            ...\n                        },\n                        findAll() {\n                            ...\n                        },\n                    },\n                },\n                {\n                    provide: AuthorizationService,                      (3)\n                    useValue: {\n                        getPermittedEntities(userId, targetModel, permissions) {\n                            ...\n                        },\n                    },\n                },\n            ],\n        }).compile();\n\n        service = module.get(NewsUc);                           (4)\n        repo = module.get(NewsRepo);Test\n\nSpy repo function which is called inside the tested use case\nCall the tested function\nVerify that the repo spy is called with the expected functions\n\n        it('should search for news by empty scope ', async () => {\n            const findAllSpy = jest.spyOn(repo, 'findAll');             (1)\n            await service.findAllForUser(userId, scope, pagination);    (2)\n            const expectedParams = [targets, false, pagination];\n            expect(findAllSpy).toHaveBeenCalledWith(...expectedParams); (3)\n        });Testing expected error\n\nExecute the function with the expected exception in expect context than define how and with which exception\nthe function should be rejected\n\n\nDon't forget to add 'await' before expect, otherwise the test will be executed successfully regardless assertions\nand throw an error in log after the test execution.\n\n        it('should throw not found exception if news was not found', async () => {\n            const anotherNewsId = new ObjectId().toHexString();\n            await expect(service.findOneByIdForUser(anotherNewsId, userId)).rejects.toThrow(NotFoundException);  (1)\n        });E2E Tests\nUnlike unit testing, which focuses on individual modules, end-to-end testing covers the interaction between classes and\nmodules at a more aggregate level. Automated end-to-end tests help us to ensure that the overall behavior of the system is correct.\nController Tests\nTo test the setup behind a controller, use e2e-tests to ensure, use cases and repositories below\nare correctly mounted and available at a specific path.\n\nA controller unit test should ensure it responds with the correct data-format and a referenced use-case is called correctly.\n\n\nAuthentication and response codes can be unit tested.\n\n\nDo not test logic (from the business layer or repository) in e2e-tests, this must be done where the logic is defined within of a unit test. A e2e test should only ensure everything is correctly initialized.\n\n\nDo not put logic (beside statements, transactions, mapping) inside a controller, use the logic layer instead.\n\n\nMappers must be unit tested.\n\nPreconditions\n\nCreate Nest testing module\nImport ServerModule as the whole\nOverride authentication using JwAuthGuard\n3.1 Override authorized user with the mocked user data\nOverride other services for example for authorization\nCreate and initialize the whole Nest Application using createNestApplication()\nGet Orm and Entity Manager from module\n\n\n    beforeAll(async () => {\n        const module: TestingModule = await Test.createTestingModule({  (1)\n            imports: [ServerModule],                                    (2)\n        })\n            .overrideGuard(JwtAuthGuard)                                (3)\n            .useValue({\n                canActivate(context: ExecutionContext) {\n                    const req: Request = context.switchToHttp().getRequest();\n                    req.user = {                                        (3.1)\n                            userId: '0000d224816abba584714c9c',\n                            roles: [],\n                            schoolId: '5f2987e020834114b8efd6f8',\n                            accountId: '0000d225816abba584714c9d',\n                    };\n                    return true;\n                },\n            })\n            .overrideProvider(AuthorizationService)                     (4)\n            .useValue({\n                checkEntityPermissions() {},\n                getEntityPermissions() {\n                    return ['NEWS_VIEW', 'NEWS_EDIT'];\n                },\n            })\n            .compile();\n\n        app = module.createNestApplication();                           (5)\n        await app.init();\n        orm = module.get(MikroORM);                           (6)\n        em = module.get(EntityManager);\n    });Clean up\nAfter Each test delete the created data in test to have a clean database for the next test.\n    afterEach(async () => {\n        await em.nativeDelete(News, {});\n    });Post Conditions\nAfter all tests are executed close the app and orm to release the resources\n    afterAll(async () => {\n        await app.close();\n        await orm.close();\n    });Test\nAn example e2e test uses app http server to call the tested url.\nThe request() function from the supertest library simulates HTTP request.\nThe response can be verified by checking the response code or by applying some verification to the result object.\n    describe('GET /news', () => {\n      it('should get empty response if there is no news', async () => {\n        const response = await request(app.getHttpServer()).get(`/news`).expect(200);\n        const {data, total} = response.body as PaginationResponse;\n        expect(total).toBe(0);\n        expect(data.length).toBe(0);\n      });\n    });\nDon't forget to test HTTP error codes as well\n\nReferences\nThis guide is inspired by https://github.com/goldbergyoni/javascript-testing-best-practices/\n        it('should throw not found error, if news doesnt exists', async () => {\n            const newsId = new ObjectId().toHexString();\n            await request(app.getHttpServer()).delete(`/news/${newsId}`).expect(404);\n        });\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/decisions.html":{"url":"additional-documentation/nestjs-application/decisions.html","title":"additional-page - Decisions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDecisions\nArchitecture decisions\nSOLID\nSolution: NestJS\nTypeScript\nSolution: Use in schulcloud-server, extend strong typing over the api via openAPI and use it in nuxt-client.\nMikro-ORM\nTypescript Support\n\nstrong typed entities\nprovide meta data through:\nclasses\ndecorators (on classes, properties)MongoDB Support\n\n\n\nfull Support for MongoDB\n(as opposed to e.g. TypeORM, Prisma)\n\nUnit of Work\n\nimplicit transactions\nmanaged entities / references\ncollect changes\nem.flush()\n\nIdentity Map\n\nalways get the same instance of one entity\ngood for:\noptimizations\ncaching\ncomparison by identity\n\n\nrequest scope in web applications\n\nDatabase agnostic\n\ncan be used with different databases (SQL/NoSQL)\n\nRelation mapping\n\n1:n, 1:1, m:n\nforeign collection relations\nembedded relations (MongoDB)\n\nPreloading\n\nnested structures can be preloaded via populate\n\nMisc\n\nuse serialized mongo-id\n\nIssues\n\nno join queries in MongoDB\nno populate in queries over relations\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/vscode.html":{"url":"additional-documentation/nestjs-application/vscode.html","title":"additional-page - VSCode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVSCode\nLaunch scripts\nIn the file ./vscode/launch.default.json you find following actions:\n\nAttach to NestJS will allow to attach VSCode debugger to an already running application\nDeubg NestJS via NPM will start the application and attach the debugger\n\nSettings\nIn the file ./vscode/settings.default.json find suggested settings.\nRecommended extensions\nSee ./vscode/extensions.json for recommendations.\nJest\nJest is used to care of unit- and end2end tests on all *.spec.ts files.\n Allows to just see failing tests in Problems tab.\n and get small icons like ✔️ or a cross beside it-definitions inside of test files.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/git.html":{"url":"additional-documentation/nestjs-application/git.html","title":"additional-page - Git","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGit\nWindows\nWe strongly recommend to let git translate line endings. Please set git config --global --add core.autocrlf input when working with windows.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
